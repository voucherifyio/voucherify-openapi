{
  "openapi": "3.0.1",
  "info": {
    "title": "Voucherify API",
    "version": "v2018-08-01",
    "description": "Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.",
    "contact": {
      "name": "Voucherify Team",
      "url": "https://www.voucherify.io/contact-support",
      "email": "support@voucherify.io"
    },
    "termsOfService": "https://www.voucherify.io/legal/subscription-agreement",
    "license": {
      "name": "MIT",
      "url": "https://github.com/voucherifyio/voucherify-js-sdk/blob/main/LICENSE"
    }
  },
  "x-readme": {
    "samples-languages": [
      "curl"
    ],
    "headers": [
      {
        "key": "X-Voucherify-Channel",
        "value": "Voucherify Documentation"
      }
    ]
  },
  "servers": [
    {
      "url": "https://{cluster}.voucherify.io",
      "description": "Base URL",
      "variables": {
        "cluster": {
          "default": "api",
          "enum": [
            "api",
            "us1.api",
            "as1.api",
            "download",
            "us1.download",
            "as1.download"
          ]
        }
      }
    }
  ],
  "tags": [
    {
      "name": "Publications",
      "description": "Manage publications."
    },
    {
      "name": "Qualifications",
      "description": "List applicable incentives."
    },
    {
      "name": "Validations",
      "description": "Validate vouchers and promotions."
    },
    {
      "name": "Redemptions",
      "description": "Manage redemptions."
    },
    {
      "name": "Vouchers",
      "description": "Manage discount and gift card vouchers."
    },
    {
      "name": "Campaigns",
      "description": "Group vouchers or promotion tiers of a specific type."
    },
    {
      "name": "Promotions",
      "description": "Manage promotions."
    },
    {
      "name": "Templates",
      "description": "Manage templates."
    },
    {
      "name": "Rewards",
      "description": "Manage rewards."
    },
    {
      "name": "Loyalties",
      "description": "Manage loyalty campaigns."
    },
    {
      "name": "Referrals",
      "description": "List referrals."
    },
    {
      "name": "Customers",
      "description": "Manage customers."
    },
    {
      "name": "Orders",
      "description": "Manage orders."
    },
    {
      "name": "Products",
      "description": "Manage products."
    },
    {
      "name": "Product Collections",
      "description": "Group products."
    },
    {
      "name": "Validation Rules",
      "description": "Configure validation rules."
    },
    {
      "name": "Segments",
      "description": "Manage customer segments."
    },
    {
      "name": "Events",
      "description": "Track custom and internal events."
    },
    {
      "name": "Async Actions",
      "description": "Track asynchronous operations scheduled in Projects."
    },
    {
      "name": "Exports",
      "description": "Export data from Voucherify."
    },
    {
      "name": "Categories",
      "description": "Manage categories."
    },
    {
      "name": "Metadata Schemas",
      "description": "List metadata schemas."
    },
    {
      "name": "Locations",
      "description": "List locations."
    },
    {
      "name": "Bin",
      "description": "Manage soft-deleted items."
    },
    {
      "name": "Management",
      "description": "Manage projects."
    },
    {
      "name": "OAuth",
      "description": "Manage OAuth."
    },
    {
      "name": "Client-side",
      "description": "Use client-side APIs."
    }
  ],
  "components": {
    "securitySchemes": {
      "X-App-Id": {
        "type": "apiKey",
        "name": "X-App-Id",
        "in": "header"
      },
      "X-App-Token": {
        "type": "apiKey",
        "name": "X-App-Token",
        "in": "header"
      },
      "X-Client-Token": {
        "type": "apiKey",
        "name": "X-Client-Token",
        "in": "header"
      },
      "X-Client-Application-Id": {
        "type": "apiKey",
        "name": "X-Client-Application-Id",
        "in": "header"
      },
      "X-Management-Id": {
        "type": "apiKey",
        "name": "X-Management-Id",
        "in": "header"
      },
      "X-Management-Token": {
        "type": "apiKey",
        "name": "X-Management-Token",
        "in": "header"
      }
    },
    "parameters": {
      "campaign": {
        "name": "campaign",
        "in": "query",
        "required": false,
        "schema": {
          "$ref": "#/components/schemas/ParameterCampaignId"
        },
        "description": "A unique campaign name, identifies the parent campaign."
      },
      "campaign_type": {
        "name": "campaign_type",
        "in": "query",
        "required": false,
        "schema": {
          "$ref": "#/components/schemas/ParameterCampaignType"
        },
        "description": "This attribute allows filtering by campaign type."
      },
      "category": {
        "name": "category",
        "in": "query",
        "required": false,
        "schema": {
          "$ref": "#/components/schemas/ParameterString"
        },
        "description": "Limit search results to vouchers within the specified category."
      },
      "code": {
        "name": "code",
        "in": "path",
        "schema": {
          "$ref": "#/components/schemas/ParameterCode"
        },
        "description": "A **code** that identifies the voucher.",
        "required": true
      },
      "created_at": {
        "name": "created_at",
        "in": "query",
        "required": false,
        "schema": {
          "$ref": "#/components/schemas/ParameterCreatedBeforeAfter"
        },
        "description": "A filter on the list based on the object created_at field. The value is a dictionary with the following options: before, after. A date value must be presented in ISO 8601 format (2016-11-16T14:14:31Z or 2016-11-16). An example: [created_at][before] 2017-09-08T13:52:18.227Z",
        "style": "deepObject",
        "explode": true
      },
      "customer": {
        "name": "customer",
        "in": "query",
        "required": false,
        "schema": {
          "$ref": "#/components/schemas/ParameterCustomerId"
        },
        "description": "A tracking identifier of a customer who is the holder of the vouchers. It can be an id generated by Voucherify or the source_id. Remember to use the proper URL escape codes if the source_id contains special characters."
      },
      "end_date": {
        "name": "end_date",
        "in": "query",
        "schema": {
          "$ref": "#/components/schemas/ParameterDate"
        },
        "description": "Timestamp representing the date and time which results must end on. Represented in ISO 8601 format."
      },
      "ids": {
        "name": "ids",
        "in": "query",
        "required": false,
        "schema": {
          "$ref": "#/components/schemas/ParameterIds"
        }
      },
      "limit": {
        "name": "limit",
        "in": "query",
        "required": false,
        "schema": {
          "$ref": "#/components/schemas/ParameterLimit"
        },
        "description": "Limits the number of objects to be returned. The limit can range between 1 and 100 items. If no limit is set, it returns 10 items."
      },
      "order": {
        "name": "order",
        "in": "query",
        "required": false,
        "schema": {
          "$ref": "#/components/schemas/ParameterOrder"
        },
        "description": "Sorts the results using one of the filtering options, where the dash - preceding a sorting option means sorting in a descending order."
      },
      "origin": {
        "name": "origin",
        "in": "header",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/ParameterOrigin"
        },
        "description": "Indicates the origin (scheme, hostname, and port)."
      },
      "page": {
        "name": "page",
        "in": "query",
        "required": false,
        "schema": {
          "$ref": "#/components/schemas/ParameterPage"
        },
        "description": "Which page of results to return. The lowest value is 1."
      },
      "start_date": {
        "name": "start_date",
        "in": "query",
        "schema": {
          "$ref": "#/components/schemas/ParameterDate"
        },
        "description": "Timestamp representing the date and time which results must end on. Represented in ISO 8601 format."
      },
      "starting_after": {
        "name": "starting_after",
        "in": "query",
        "schema": {
          "$ref": "#/components/schemas/ParameterDate"
        },
        "description": "Timestamp representing the date and time to use in starting_after cursor to get more data. Represented in ISO 8601 format."
      },
      "updated_at": {
        "name": "updated_at",
        "in": "query",
        "schema": {
          "$ref": "#/components/schemas/ParameterUpdatedBeforeAfter"
        },
        "description": "A filter on the list based on the object updated_at field. The value is a dictionary with the following options: before, after. A date value must be presented in ISO 8601 format (2016-11-16T14:14:31Z or 2016-11-16). An example: [updated_at][before] 2017-09-08T13:52:18.227Z",
        "style": "deepObject",
        "explode": true
      }
    },
    "schemas": {
      "AsyncActionGetResponseBody": {
        "title": "AsyncActionGetResponseBody",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "aa_0adad13d6f057f088e",
            "description": "Async action unique ID.",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "Type of async action.",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "Status of the async action. Informs you whether the async action has already been completed.",
            "enum": [
              "DONE",
              "ENQUEUED",
              "FAILED",
              "IN_PROGRESS"
            ],
            "nullable": true
          },
          "operation_status": {
            "type": "string",
            "description": "Status of async action processing. Informs about the async action status, whether it failed, succeeded, or the status is unknown.",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "description": "Timestamp representing the date and time when the async action was scheduled in ISO 8601 format.",
            "example": "2022-06-23T11:21:45.578Z",
            "format": "date-time",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "example": "2022-06-23T11:21:46.795Z",
            "description": "Timestamp representing the date and time when the async action was updated. The value is shown in the ISO 8601 format.",
            "format": "date-time",
            "nullable": true
          },
          "request_id": {
            "type": "string",
            "example": "v-0b45cee140c3c9b5ca",
            "description": "Unique request ID.",
            "nullable": true
          },
          "processing_time": {
            "type": "integer",
            "example": 1217,
            "description": "The length of time it took to process the request in milliseconds.",
            "nullable": true
          },
          "progress": {
            "type": "integer",
            "description": "% progress to completion of the asynchronous action.",
            "minimum": 0,
            "maximum": 100,
            "nullable": true
          },
          "object": {
            "type": "string",
            "default": "async_action",
            "description": "The type of the object represented by JSON. This object stores information about the `async_action`.",
            "enum": [
              "async_action"
            ],
            "nullable": true
          },
          "result": {
            "title": "AsyncActionGetResponseBodyResult",
            "type": "object",
            "nullable": true
          }
        },
        "description": "Response body schema for **GET** `v1/async-actions/{asyncActionId}`."
      },
      "AsyncActionsListResponseBody": {
        "title": "AsyncActionsListResponseBody",
        "description": "Response body schema for **GET** `v1/async-actions`.",
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "description": "The type of the object represented by JSON. This object stores information about asynchronous actions.",
            "default": "list",
            "enum": [
              "list"
            ],
            "nullable": true
          },
          "data_ref": {
            "type": "string",
            "default": "async_actions",
            "description": "Identifies the name of the JSON property that contains the array of asynchronous actions.",
            "enum": [
              "async_actions"
            ],
            "nullable": true
          },
          "async_actions": {
            "title": "AsyncActionsListResponseBodyAsyncActions",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AsyncActionBase"
            },
            "nullable": true
          },
          "has_more": {
            "type": "boolean",
            "description": "As query results are always limited by parameters, the `has_more` flag indicates if there are more records available. This lets you know if you can run another request to get more records returned in the results.",
            "nullable": true
          }
        }
      },
      "CampaignsCreateRequestBody": {
        "title": "CampaignsCreateRequestBody",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Campaign name.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "An optional field to keep any extra textual information about the campaign such as a campaign description and details.",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "Defines whether the campaign can be updated with new vouchers after campaign creation or if the campaign consists of generic (standalone) voucherss.\n\n- `AUTO_UPDATE`: the campaign is dynamic, i.e. vouchers will generate based on set criteria\n-  `STATIC`: vouchers need to be manually published",
            "enum": [
              "AUTO_UPDATE",
              "STATIC"
            ],
            "nullable": true
          },
          "join_once": {
            "type": "boolean",
            "description": "If this value is set to `true`, customers will be able to join the campaign only once. For loyalty campaigns, it's forced to `true`, even if `join_once: false` is passed in the request.",
            "nullable": true
          },
          "auto_join": {
            "type": "boolean",
            "description": "Indicates whether customers will be able to auto-join a loyalty campaign if any earning rule is fulfilled.",
            "nullable": true
          },
          "use_voucher_metadata_schema": {
            "type": "boolean",
            "description": "Flag indicating whether the campaign is to use the voucher's metadata schema instead of the campaign metadata schema.",
            "nullable": true
          },
          "vouchers_count": {
            "type": "integer",
            "description": "Total number of unique vouchers in campaign (size of campaign).",
            "nullable": true
          },
          "start_date": {
            "type": "string",
            "format": "date-time",
            "description": "Activation timestamp defines when the campaign starts to be active in ISO 8601 format. Campaign is *inactive before* this date. ",
            "example": "2022-09-20T00:00:00.000Z",
            "nullable": true
          },
          "expiration_date": {
            "type": "string",
            "format": "date-time",
            "description": "Expiration timestamp defines when the campaign expires in ISO 8601 format.  Campaign is *inactive after* this date.",
            "example": "2022-09-30T00:00:00.000Z",
            "nullable": true
          },
          "validity_timeframe": {
            "$ref": "#/components/schemas/ValidityTimeframe"
          },
          "validity_day_of_week": {
            "$ref": "#/components/schemas/ValidityDayOfWeek"
          },
          "validity_hours": {
            "$ref": "#/components/schemas/ValidityHours"
          },
          "activity_duration_after_publishing": {
            "type": "string",
            "description": "Defines the amount of time the vouchers will be active after publishing. The value is shown in the ISO 8601 format. For example, a voucher with the value of P24D will be valid for a duration of 24 days.",
            "nullable": true
          },
          "category_id": {
            "type": "string",
            "description": "Unique category ID that this campaign belongs to. Either pass this parameter OR the `category`.",
            "example": "cat_0b688929a2476386a7",
            "nullable": true
          },
          "category": {
            "type": "string",
            "description": "The category assigned to the campaign. Either pass this parameter OR the `category_id`.",
            "nullable": true
          },
          "metadata": {
            "title": "CampaignsCreateRequestBodyMetadata",
            "type": "object",
            "description": "The metadata object stores all custom attributes assigned to the campaign. A set of key/value pairs that you can attach to a campaign object. It can be useful for storing additional information about the campaign in a structured format.",
            "nullable": true
          },
          "access_settings": {
            "$ref": "#/components/schemas/AccessSettings"
          },
          "validation_rules": {
            "title": "CampaignsCreateRequestBodyValidationRules",
            "type": "array",
            "description": "Array containing the ID of the validation rule associated with the promotion tier.",
            "items": {
              "title": "CampaignsCreateRequestBodyValidationRulesItem",
              "type": "string"
            },
            "maxItems": 1,
            "nullable": true
          },
          "campaign_type": {
            "type": "string",
            "enum": [
              "DISCOUNT_COUPONS",
              "REFERRAL_PROGRAM",
              "GIFT_VOUCHERS",
              "LOYALTY_PROGRAM",
              "PROMOTION"
            ],
            "nullable": true
          },
          "voucher": {
            "title": "CampaignsCreateRequestBodyVoucher",
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "DISCOUNT_VOUCHER",
                  "GIFT_VOUCHER",
                  "LOYALTY_CARD"
                ],
                "nullable": true
              },
              "discount": {
                "$ref": "#/components/schemas/Discount"
              },
              "code_config": {
                "$ref": "#/components/schemas/CodeConfig"
              },
              "redemption": {
                "title": "CampaignsCreateRequestBodyVoucherRedemption",
                "type": "object",
                "properties": {
                  "quantity": {
                    "type": "integer",
                    "nullable": true,
                    "description": "How many times a voucher can be redeemed. A `null` value means unlimited."
                  }
                },
                "nullable": true
              },
              "is_referral_code": {
                "type": "boolean",
                "description": "Flag indicating whether this voucher is a referral code; `true` for campaign type `REFERRAL_PROGRAM`.",
                "nullable": true
              },
              "gift": {
                "$ref": "#/components/schemas/Gift"
              },
              "loyalty_card": {
                "$ref": "#/components/schemas/CampaignLoyaltyCard"
              }
            },
            "nullable": true
          },
          "referral_program": {
            "$ref": "#/components/schemas/ReferralProgram"
          },
          "promotion": {
            "title": "CampaignsCreateRequestBodyPromotion",
            "type": "object",
            "properties": {
              "tiers": {
                "title": "CampaignsCreateRequestBodyPromotionTiers",
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/PromotionTierCreateParams"
                }
              }
            },
            "nullable": true
          }
        }
      },
      "CampaignsCreateResponseBody": {
        "title": "CampaignsCreateResponseBody",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique campaign ID, assigned by Voucherify.",
            "example": "camp_f7fBbQxUuTN7dI7tGOo5XMDA",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Campaign name.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "An optional field to keep any extra textual information about the campaign such as a campaign description and details.",
            "nullable": true
          },
          "campaign_type": {
            "type": "string",
            "enum": [
              "LOYALTY_PROGRAM",
              "GIFT_VOUCHERS",
              "DISCOUNT_COUPONS",
              "PROMOTION",
              "REFERRAL_PROGRAM"
            ],
            "description": "Type of campaign.",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "Defines whether the campaign can be updated with new vouchers after campaign creation or if the campaign consists of generic (standalone) voucherss.\n\n- `AUTO_UPDATE`: the campaign is dynamic, i.e. vouchers will generate based on set criteria\n-  `STATIC`: vouchers need to be manually published\n- `STANDALONE`: campaign for single vouchers",
            "enum": [
              "AUTO_UPDATE",
              "STATIC",
              "STANDALONE"
            ],
            "nullable": true
          },
          "voucher": {
            "$ref": "#/components/schemas/CampaignVoucher"
          },
          "auto_join": {
            "type": "boolean",
            "description": "Indicates whether customers will be able to auto-join a loyalty campaign if any earning rule is fulfilled.",
            "nullable": true
          },
          "join_once": {
            "type": "boolean",
            "description": "If this value is set to `true`, customers will be able to join the campaign only once. It is always `false` for generic (standalone) vouchers campaigns and it cannot be changed in them. It is always `true` for loyalty campaigns and it cannot be changed in them.",
            "nullable": true
          },
          "use_voucher_metadata_schema": {
            "type": "boolean",
            "description": "Flag indicating whether the campaign is to use the voucher's metadata schema instead of the campaign metadata schema.",
            "nullable": true
          },
          "validity_timeframe": {
            "$ref": "#/components/schemas/ValidityTimeframe"
          },
          "validity_day_of_week": {
            "$ref": "#/components/schemas/ValidityDayOfWeek"
          },
          "validity_hours": {
            "$ref": "#/components/schemas/ValidityHours"
          },
          "activity_duration_after_publishing": {
            "type": "string",
            "description": "Defines the amount of time the vouchers will be active after publishing. The value is shown in the ISO 8601 format. For example, a voucher with the value of P24D will be valid for a duration of 24 days.",
            "nullable": true
          },
          "vouchers_count": {
            "type": "integer",
            "description": "Total number of unique vouchers in campaign.",
            "nullable": true
          },
          "start_date": {
            "type": "string",
            "format": "date-time",
            "description": "Activation timestamp defines when the campaign starts to be active in ISO 8601 format. Campaign is *inactive before* this date. ",
            "example": "2022-09-20T00:00:00.000Z",
            "nullable": true
          },
          "expiration_date": {
            "type": "string",
            "format": "date-time",
            "description": "Expiration timestamp defines when the campaign expires in ISO 8601 format.  Campaign is *inactive after* this date.",
            "example": "2022-09-30T00:00:00.000Z",
            "nullable": true
          },
          "active": {
            "type": "boolean",
            "description": "A flag to toggle the campaign on or off. You can disable a campaign even though it's within the active period defined by the `start_date` and `expiration_date`.  \n\n- `true` indicates an *active* campaign\n- `false` indicates an *inactive* campaign",
            "nullable": true
          },
          "metadata": {
            "title": "CampaignsCreateResponseBodyMetadata",
            "type": "object",
            "description": "The metadata object stores all custom attributes assigned to the campaign. A set of key/value pairs that you can attach to a campaign object. It can be useful for storing additional information about the campaign in a structured format.",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2021-12-01T08:00:50.038Z",
            "description": "Timestamp representing the date and time when the campaign was created. The value is shown in the ISO 8601 format.",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2022-09-20T09:18:19.623Z",
            "description": "Timestamp representing the date and time when the campaign was last updated in ISO 8601 format.",
            "nullable": true
          },
          "category": {
            "type": "string",
            "description": "Unique category name.",
            "nullable": true
          },
          "creation_status": {
            "type": "string",
            "enum": [
              "DONE",
              "IN_PROGRESS",
              "FAILED",
              "DRAFT",
              "MODIFYING"
            ],
            "description": "Indicates the status of the campaign creation.",
            "nullable": true
          },
          "vouchers_generation_status": {
            "type": "string",
            "description": "Indicates the status of the campaign's voucher generation.",
            "enum": [
              "DONE",
              "IN_PROGRESS",
              "FAILED",
              "DRAFT",
              "MODIFYING"
            ],
            "nullable": true
          },
          "readonly": {
            "type": "boolean",
            "description": "Indicates whether the campaign can be only read by a restricted user in the Areas and Stores enterprise feature. It is returned only to restricted users; this field is not returned for users with other roles. It is also not returned for restricted users who use the [GET Campaign summary](ref:campaign-summary) endpoint.",
            "nullable": true
          },
          "protected": {
            "type": "boolean",
            "description": "Indicates whether the resource can be deleted.",
            "nullable": true
          },
          "category_id": {
            "type": "string",
            "nullable": true,
            "description": "Unique category ID that this campaign belongs to.",
            "example": "cat_0b688929a2476386a7"
          },
          "categories": {
            "title": "CampaignsCreateResponseBodyCategories",
            "type": "array",
            "description": "Contains details about the campaign category. For the GET [List campaigns](ref:list-campaigns) endpoint, this is returned only if the `expand=category` query parameter is passed in the request. Otherwise, it is returned as an empty array. For GET [Campaign summary](ref:get-campaign-summary) endpoint, it is always returned as an empty array.",
            "items": {
              "$ref": "#/components/schemas/Category"
            },
            "nullable": true
          },
          "object": {
            "type": "string",
            "default": "campaign",
            "description": "The type of the object represented by JSON. This object stores information about the campaign.",
            "nullable": true
          },
          "referral_program": {
            "$ref": "#/components/schemas/ReferralProgram"
          },
          "loyalty_tiers_expiration": {
            "$ref": "#/components/schemas/LoyaltyTiersExpirationAll"
          },
          "access_settings_assignments": {
            "$ref": "#/components/schemas/AccessSettingsCampaignAssignmentsList"
          },
          "promotion": {
            "$ref": "#/components/schemas/PromotionTiersList"
          },
          "validation_rules_assignments": {
            "$ref": "#/components/schemas/ValidationRulesAssignmentsList"
          }
        },
        "description": "Response body schema for **POST** `v1/campaigns/{campaignId}`."
      },
      "CampaignsDeleteResponseBody": {
        "title": "CampaignsDeleteResponseBody",
        "type": "object",
        "description": "Response body schema for **DELETE** `/campaigns/{campaignId}`.",
        "properties": {
          "async_action_id": {
            "type": "string",
            "example": "aa_0a875d56c805df6601",
            "description": "The ID of the scheduled asynchronous action.",
            "nullable": true
          }
        }
      },
      "CampaignsDisableResponseBody": {
        "title": "CampaignsDisableResponseBody",
        "type": "object",
        "description": "Response body schema for **POST** `v1/campaigns/{campaignId}/disable`."
      },
      "CampaignsEnableResponseBody": {
        "title": "CampaignsEnableResponseBody",
        "type": "object",
        "description": "Response body schema for **POST** `v1/campaigns/{campaignId}/enable`."
      },
      "CampaignsGetResponseBody": {
        "title": "CampaignsGetResponseBody",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique campaign ID, assigned by Voucherify.",
            "example": "camp_f7fBbQxUuTN7dI7tGOo5XMDA",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Campaign name.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "An optional field to keep any extra textual information about the campaign such as a campaign description and details.",
            "nullable": true
          },
          "campaign_type": {
            "type": "string",
            "enum": [
              "LOYALTY_PROGRAM",
              "GIFT_VOUCHERS",
              "DISCOUNT_COUPONS",
              "PROMOTION",
              "REFERRAL_PROGRAM"
            ],
            "description": "Type of campaign.",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "Defines whether the campaign can be updated with new vouchers after campaign creation or if the campaign consists of generic (standalone) voucherss.\n\n- `AUTO_UPDATE`: the campaign is dynamic, i.e. vouchers will generate based on set criteria\n-  `STATIC`: vouchers need to be manually published\n- `STANDALONE`: campaign for single vouchers",
            "enum": [
              "AUTO_UPDATE",
              "STATIC",
              "STANDALONE"
            ],
            "nullable": true
          },
          "voucher": {
            "$ref": "#/components/schemas/CampaignVoucher"
          },
          "auto_join": {
            "type": "boolean",
            "description": "Indicates whether customers will be able to auto-join a loyalty campaign if any earning rule is fulfilled.",
            "nullable": true
          },
          "join_once": {
            "type": "boolean",
            "description": "If this value is set to `true`, customers will be able to join the campaign only once. It is always `false` for generic (standalone) vouchers campaigns and it cannot be changed in them. It is always `true` for loyalty campaigns and it cannot be changed in them.",
            "nullable": true
          },
          "use_voucher_metadata_schema": {
            "type": "boolean",
            "description": "Flag indicating whether the campaign is to use the voucher's metadata schema instead of the campaign metadata schema.",
            "nullable": true
          },
          "validity_timeframe": {
            "$ref": "#/components/schemas/ValidityTimeframe"
          },
          "validity_day_of_week": {
            "$ref": "#/components/schemas/ValidityDayOfWeek"
          },
          "validity_hours": {
            "$ref": "#/components/schemas/ValidityHours"
          },
          "activity_duration_after_publishing": {
            "type": "string",
            "description": "Defines the amount of time the vouchers will be active after publishing. The value is shown in the ISO 8601 format. For example, a voucher with the value of P24D will be valid for a duration of 24 days.",
            "nullable": true
          },
          "vouchers_count": {
            "type": "integer",
            "description": "Total number of unique vouchers in campaign.",
            "nullable": true
          },
          "start_date": {
            "type": "string",
            "format": "date-time",
            "description": "Activation timestamp defines when the campaign starts to be active in ISO 8601 format. Campaign is *inactive before* this date. ",
            "example": "2022-09-20T00:00:00.000Z",
            "nullable": true
          },
          "expiration_date": {
            "type": "string",
            "format": "date-time",
            "description": "Expiration timestamp defines when the campaign expires in ISO 8601 format.  Campaign is *inactive after* this date.",
            "example": "2022-09-30T00:00:00.000Z",
            "nullable": true
          },
          "active": {
            "type": "boolean",
            "description": "A flag to toggle the campaign on or off. You can disable a campaign even though it's within the active period defined by the `start_date` and `expiration_date`.  \n\n- `true` indicates an *active* campaign\n- `false` indicates an *inactive* campaign",
            "nullable": true
          },
          "metadata": {
            "title": "CampaignsGetResponseBodyMetadata",
            "type": "object",
            "description": "The metadata object stores all custom attributes assigned to the campaign. A set of key/value pairs that you can attach to a campaign object. It can be useful for storing additional information about the campaign in a structured format.",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2021-12-01T08:00:50.038Z",
            "description": "Timestamp representing the date and time when the campaign was created. The value is shown in the ISO 8601 format.",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2022-09-20T09:18:19.623Z",
            "description": "Timestamp representing the date and time when the campaign was last updated in ISO 8601 format.",
            "nullable": true
          },
          "category": {
            "type": "string",
            "description": "Unique category name.",
            "nullable": true
          },
          "creation_status": {
            "type": "string",
            "enum": [
              "DONE",
              "IN_PROGRESS",
              "FAILED",
              "DRAFT",
              "MODIFYING"
            ],
            "description": "Indicates the status of the campaign creation.",
            "nullable": true
          },
          "vouchers_generation_status": {
            "type": "string",
            "description": "Indicates the status of the campaign's voucher generation.",
            "enum": [
              "DONE",
              "IN_PROGRESS",
              "FAILED",
              "DRAFT",
              "MODIFYING"
            ],
            "nullable": true
          },
          "readonly": {
            "type": "boolean",
            "description": "Indicates whether the campaign can be only read by a restricted user in the Areas and Stores enterprise feature. It is returned only to restricted users; this field is not returned for users with other roles. It is also not returned for restricted users who use the [GET Campaign summary](ref:campaign-summary) endpoint.",
            "nullable": true
          },
          "protected": {
            "type": "boolean",
            "description": "Indicates whether the resource can be deleted.",
            "nullable": true
          },
          "category_id": {
            "type": "string",
            "nullable": true,
            "description": "Unique category ID that this campaign belongs to.",
            "example": "cat_0b688929a2476386a7"
          },
          "categories": {
            "title": "CampaignsGetResponseBodyCategories",
            "type": "array",
            "description": "Contains details about the campaign category. For the GET [List campaigns](ref:list-campaigns) endpoint, this is returned only if the `expand=category` query parameter is passed in the request. Otherwise, it is returned as an empty array. For GET [Campaign summary](ref:get-campaign-summary) endpoint, it is always returned as an empty array.",
            "items": {
              "$ref": "#/components/schemas/Category"
            },
            "nullable": true
          },
          "object": {
            "type": "string",
            "default": "campaign",
            "description": "The type of the object represented by JSON. This object stores information about the campaign.",
            "nullable": true
          },
          "referral_program": {
            "$ref": "#/components/schemas/ReferralProgram"
          },
          "loyalty_tiers_expiration": {
            "$ref": "#/components/schemas/LoyaltyTiersExpirationAll"
          },
          "access_settings_assignments": {
            "$ref": "#/components/schemas/AccessSettingsCampaignAssignmentsList"
          },
          "promotion": {
            "$ref": "#/components/schemas/PromotionTiersList"
          },
          "validation_rules_assignments": {
            "$ref": "#/components/schemas/ValidationRulesAssignmentsList"
          }
        },
        "description": "Response body schema for **GET** `v1/campaigns/{campaignId}`."
      },
      "CampaignsImportCreateRequestBody": {
        "title": "CampaignsImportCreateRequestBody",
        "type": "array",
        "description": "Request body schema for **POST** `v1/campaigns/{campaignId}/import`.",
        "items": {
          "$ref": "#/components/schemas/CampaignsImportVoucherItem"
        }
      },
      "CampaignsImportCreateResponseBody": {
        "title": "CampaignsImportCreateResponseBody",
        "type": "object",
        "properties": {
          "async_action_id": {
            "type": "string",
            "example": "aa_0a875d56c805df6601",
            "description": "The ID of the scheduled asynchronous action.",
            "nullable": true
          }
        },
        "required": [],
        "description": "Response body schema for **POST** `v1/campaigns/{campaignId}/import`."
      },
      "CampaignsImportCsvCreateResponseBody": {
        "title": "CampaignsImportCsvCreateResponseBody",
        "type": "object",
        "properties": {
          "async_action_id": {
            "type": "string",
            "example": "aa_0a875d56c805df6601",
            "description": "The ID of the scheduled asynchronous action.",
            "nullable": true
          }
        },
        "required": [],
        "description": "Response body schema for **POST** `v1/campaigns/{campaignId}/importCSV`."
      },
      "CampaignsListResponseBody": {
        "title": "CampaignsListResponseBody",
        "type": "object",
        "description": "Schema model for **GET** `v1/campaigns`.",
        "properties": {
          "object": {
            "type": "string",
            "description": "The type of the object represented by JSON. This object stores information about campaigns in a dictionary.",
            "default": "list",
            "nullable": true
          },
          "data_ref": {
            "type": "string",
            "description": "Identifies the name of the attribute that contains the array of campaign objects.",
            "default": "campaigns",
            "nullable": true
          },
          "campaigns": {
            "title": "CampaignsListResponseBodyCampaigns",
            "type": "array",
            "description": "Contains array of campaign objects.",
            "items": {
              "$ref": "#/components/schemas/CampaignBase"
            },
            "nullable": true
          },
          "total": {
            "type": "integer",
            "description": "Total number of campaigns.",
            "nullable": true
          }
        }
      },
      "CampaignsSummaryGetResponseBody": {
        "title": "CampaignsSummaryGetResponseBody",
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "description": "The type of the object, which is `campaign_summary`.",
            "default": "campaign_summary",
            "enum": [
              "campaign_summary"
            ],
            "nullable": true
          },
          "campaign": {
            "$ref": "#/components/schemas/CampaignBase"
          },
          "redemptions": {
            "type": "integer",
            "description": "Total number of redemptions, which includes successful and failed redemptions.",
            "nullable": true
          },
          "redemptions_succeeded": {
            "type": "integer",
            "description": "Total number of successful redemptions.",
            "nullable": true
          },
          "redemptions_failed": {
            "type": "integer",
            "description": "Total number of failed redemptions.",
            "nullable": true
          },
          "rollbacks": {
            "type": "integer",
            "description": "Total number of rollbacks, which includes successful and failed rollbacks.",
            "nullable": true
          },
          "rollbacks_succeeded": {
            "type": "integer",
            "description": "Total number of successful rollbacks.",
            "nullable": true
          },
          "rollbacks_failed": {
            "type": "integer",
            "description": "Total number of failed rollbacks.",
            "nullable": true
          },
          "validations": {
            "type": "integer",
            "description": "Total number of validations, which includes successful and failed validations.",
            "nullable": true
          },
          "validations_succeeded": {
            "type": "integer",
            "description": "Total number of successful validations.",
            "nullable": true
          },
          "validations_failed": {
            "type": "integer",
            "description": "Total number of failed validations.",
            "nullable": true
          },
          "orders_amount": {
            "type": "integer",
            "description": "Total amount of orders related to the campaign. This amount is not reduced by `orders_rolledback_amount`. The value is multiplied by `100` to precisely represent 2 decimal places. For example, `$10` is represented as `1000`.",
            "nullable": true
          },
          "orders_rolledback_amount": {
            "type": "integer",
            "description": "Total amount of orders that were rolled back and are related to the campaign. The value is multiplied by `100` to precisely represent 2 decimal places. For example, `$10` is represented as `1000`.",
            "nullable": true
          },
          "vouchers_created": {
            "type": "integer",
            "description": "Total number of vouchers created within the campaign. Includes vouchers generated when the campaign was created, vouchers added manually, or vouchers generated automatically when a new customer joined the campaign.",
            "nullable": true
          },
          "vouchers_deleted": {
            "type": "integer",
            "description": "Total number of vouchers deleted within the campaign. Includes vouchers moved to the bin and vouchers deleted permanently. Vouchers moved to the bin and then deleted permanently are counted once.",
            "nullable": true
          },
          "publications": {
            "type": "integer",
            "description": "Total number of publications, which includes successful and failed publications.",
            "nullable": true
          },
          "publications_succeeded": {
            "type": "integer",
            "description": "Total number of successful publications.",
            "nullable": true
          },
          "publications_failed": {
            "type": "integer",
            "description": "Total number of failed publications.",
            "nullable": true
          },
          "discounted_amount": {
            "type": "integer",
            "description": "Total amount of discounts related to the campaign. This amount is not reduced by the `rolledback_discounted_amount`. The value is multiplied by `100` to precisely represent 2 decimal places. For example, `$10` is represented as `1000`.",
            "nullable": true
          },
          "rolledback_discounted_amount": {
            "type": "integer",
            "description": "Total amount of discounts orders that were rolled back and are related to the campaign. The value is multiplied by `100` to precisely represent 2 decimal places. For example, `$10` is represented as `1000`.",
            "nullable": true
          },
          "created_vouchers_amount": {
            "type": "integer",
            "description": "The total credit amount for all created gift cards. The value is multiplied by `100` to precisely represent 2 decimal places. For example, `$10` is represented as `1000`.",
            "nullable": true
          },
          "amount_added": {
            "type": "integer",
            "description": "The total credit amount that was added. The value is multiplied by `100` to precisely represent 2 decimal places. For example, `$10` is represented as `1000`.",
            "nullable": true
          },
          "amount_deleted": {
            "type": "integer",
            "description": "The total credit amount that was deleted by deleting gift cards. The value is multiplied by `100` to precisely represent 2 decimal places. For example, `$10` is represented as `1000`.",
            "nullable": true
          },
          "amount_redeemed": {
            "type": "integer",
            "description": "The total credit amount that was redeemed. This amount is not reduced by the `amount_rolledback`. The value is multiplied by `100` to precisely represent 2 decimal places. For example, `$10` is represented as `1000`.",
            "nullable": true
          },
          "amount_rolledback": {
            "type": "integer",
            "description": "The total credit amount that was rolled back. The value is multiplied by `100` to precisely represent 2 decimal places. For example, `$10` is represented as `1000`.",
            "nullable": true
          },
          "amount_subtracted": {
            "type": "integer",
            "description": "The total credit amount that was subtracted. The value is multiplied by `100` to precisely represent 2 decimal places. For example, `$10` is represented as `1000`.",
            "nullable": true
          },
          "created_vouchers_points": {
            "type": "integer",
            "description": "Total number of points added to newly created loyalty cards. This also counts points added for the loyalty cards which are created by importing a CSV file to a campaign.",
            "nullable": true
          },
          "points_deleted": {
            "type": "integer",
            "description": "Total number of points that were deleted.",
            "nullable": true
          },
          "points_subtracted": {
            "type": "integer",
            "description": "Total number of points that were subtracted.",
            "nullable": true
          },
          "points_added": {
            "type": "integer",
            "description": "Total number of points that were added. This includes points added manually or automatically by redeeming a reward that adds loyalty points to cards in this campaign.",
            "nullable": true
          },
          "points_rewarded": {
            "type": "integer",
            "description": "Total number of points that were rewarded to loyalty cards through earning rules. This includes pending points that were activated.",
            "nullable": true
          },
          "points_redeemed": {
            "type": "integer",
            "description": "Total number of points that were redeemed for rewards.",
            "nullable": true
          },
          "points_rolledback": {
            "type": "integer",
            "description": "Total number of points that were rolled back for reward redemptions.",
            "nullable": true
          },
          "points_expired": {
            "type": "integer",
            "description": "Total number of points that have expired.",
            "nullable": true
          },
          "points_transferred_out": {
            "type": "integer",
            "description": "Total number of points transferred out of loyalty cards covered by the campaign.",
            "nullable": true
          },
          "points_transferred_in": {
            "type": "integer",
            "description": "Total number of points transferred into loyalty cards covered by the campaign.",
            "nullable": true
          },
          "pending_points_added": {
            "type": "integer",
            "description": "Total number of pending points that were added either as part of earning rules or added manually to an existing pending point bucket. Pending points that were activated manually or automatically or that were canceled do not affect this number.",
            "nullable": true
          },
          "pending_points_subtracted": {
            "type": "integer",
            "description": "Total number of pending points that were subtracted from existing pending point buckets.",
            "nullable": true
          },
          "pending_points_activated": {
            "type": "integer",
            "description": "Total number of pending points that were activated manually or automatically.",
            "nullable": true
          },
          "pending_points_canceled": {
            "type": "integer",
            "description": "Total number of pending points that were canceled.",
            "nullable": true
          },
          "referred_customers": {
            "type": "integer",
            "description": "Total number of all referred customers.",
            "nullable": true
          }
        }
      },
      "CampaignsTransactionsExportCreateRequestBody": {
        "title": "CampaignsTransactionsExportCreateRequestBody",
        "description": "Request body schema for **POST** `v1/campaigns/{campaignId}/transactions/export`.",
        "type": "object",
        "properties": {
          "parameters": {
            "title": "CampaignsTransactionsExportCreateRequestBodyParameters",
            "description": "List of available parameters containing fields and filters that can be exported for transactions in a gift card or loyalty card campaign, along with the sorting order of the returned data.",
            "type": "object",
            "properties": {
              "order": {
                "type": "string",
                "description": "How the export is ordered, where the dash `-` preceding a sorting option means sorting in a descending order.",
                "enum": [
                  "-created_at",
                  "created_at"
                ],
                "nullable": true
              },
              "fields": {
                "title": "CampaignsTransactionsExportCreateRequestBodyParametersFields",
                "type": "array",
                "description": "Data fields that will be exported for the transactions that are associated with balance movements on cards in a campaign.",
                "items": {
                  "title": "CampaignsTransactionsExportCreateRequestBodyParametersFieldsItem",
                  "type": "string",
                  "enum": [
                    "id",
                    "type",
                    "source_id",
                    "reason",
                    "balance",
                    "amount",
                    "created_at",
                    "voucher_id",
                    "source",
                    "details",
                    "related_transaction_id"
                  ]
                },
                "nullable": true
              },
              "filters": {
                "$ref": "#/components/schemas/ExportCampaignTransactionsFilters"
              }
            },
            "nullable": true
          }
        }
      },
      "CampaignsTransactionsExportCreateResponseBody": {
        "title": "CampaignsTransactionsExportCreateResponseBody",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique export ID.",
            "example": "exp_FFfp9o7daWuJqJCKp5xqqli4",
            "nullable": true
          },
          "object": {
            "type": "string",
            "default": "export",
            "description": "The type of object being represented. This object stores information about the `export`.",
            "enum": [
              "export"
            ],
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "example": "2022-04-28T11:23:20.922Z",
            "description": "Timestamp representing the date and time when the export was scheduled in ISO 8601 format.",
            "format": "date-time",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "Status of the export. Informs you whether the export has already been completed, i.e. indicates whether the file containing the exported data has been generated.",
            "default": "SCHEDULED",
            "enum": [
              "SCHEDULED"
            ],
            "nullable": true
          },
          "channel": {
            "type": "string",
            "description": "The channel through which the export was triggered.",
            "default": "API",
            "enum": [
              "API"
            ],
            "nullable": true
          },
          "exported_object": {
            "type": "string",
            "description": "The type of exported object.",
            "default": "voucher_transactions",
            "enum": [
              "voucher_transactions"
            ],
            "nullable": true
          },
          "parameters": {
            "title": "CampaignsTransactionsExportCreateResponseBodyParameters",
            "type": "object",
            "properties": {
              "order": {
                "type": "string",
                "description": "How the export is ordered, where the dash `-` preceding a sorting option means sorting in a descending order.",
                "enum": [
                  "-created_at",
                  "created_at"
                ],
                "nullable": true
              },
              "fields": {
                "title": "CampaignsTransactionsExportCreateResponseBodyParametersFields",
                "type": "array",
                "description": "Data fields that will be exported for the transactions that are associated with balance movements on cards in a campaign.",
                "items": {
                  "title": "CampaignsTransactionsExportCreateResponseBodyParametersFieldsItem",
                  "type": "string",
                  "enum": [
                    "id",
                    "type",
                    "source_id",
                    "reason",
                    "balance",
                    "amount",
                    "created_at",
                    "voucher_id",
                    "source",
                    "details",
                    "related_transaction_id"
                  ]
                },
                "nullable": true
              },
              "filters": {
                "title": "CampaignsTransactionsExportCreateResponseBodyParametersFilters",
                "type": "object",
                "properties": {
                  "junction": {
                    "$ref": "#/components/schemas/Junction"
                  },
                  "created_at": {
                    "$ref": "#/components/schemas/FilterConditionsDateTime"
                  },
                  "voucher_id": {
                    "$ref": "#/components/schemas/FilterConditionsString"
                  },
                  "campaign_id": {
                    "title": "CampaignsTransactionsExportCreateResponseBodyParametersFiltersCampaignId",
                    "type": "object",
                    "required": [],
                    "description": "Data filters used to narrow down the data records to be returned in the result.",
                    "properties": {
                      "conditions": {
                        "title": "CampaignsTransactionsExportCreateResponseBodyParametersFiltersCampaignIdConditions",
                        "type": "object",
                        "required": [],
                        "description": "Data filters used to narrow down the data records to be returned in the result.",
                        "properties": {
                          "$in": {
                            "title": "CampaignsTransactionsExportCreateResponseBodyParametersFiltersCampaignIdConditionsIn",
                            "type": "array",
                            "minItems": 1,
                            "maxItems": 1,
                            "items": {
                              "title": "CampaignsTransactionsExportCreateResponseBodyParametersFiltersCampaignIdConditionsInItem",
                              "type": "string",
                              "minLength": 1,
                              "maxLength": 1
                            },
                            "nullable": true
                          }
                        },
                        "nullable": true
                      }
                    },
                    "nullable": true
                  }
                },
                "nullable": true
              }
            },
            "nullable": true
          },
          "result": {
            "title": "CampaignsTransactionsExportCreateResponseBodyResult",
            "type": "object",
            "nullable": true,
            "description": "Contains the URL of the CSV file.",
            "required": [],
            "properties": {
              "url": {
                "type": "string",
                "description": "URL of the CSV file location. It contains the `token` used for authorization in the [Download export](ref:download-export) method.",
                "nullable": true
              }
            }
          },
          "user_id": {
            "type": "string",
            "nullable": true,
            "description": "Identifies the specific user who initiated the export through the Voucherify Dashboard; returned when the `channel` value is `WEBSITE`.",
            "example": "user_g24UoRO3Caxu7FCT4n5tpYEa3zUG0FrH"
          }
        },
        "required": [],
        "description": "Response body schema for **POST** `v1/campaigns/{campaignId}/transactions/export`."
      },
      "CampaignsTransactionsListResponseBody": {
        "title": "CampaignsTransactionsListResponseBody",
        "type": "object",
        "description": "Response body schema for **GET** `v1/campaigns/{campaignId}/transactions`.",
        "properties": {
          "object": {
            "type": "string",
            "default": "list",
            "description": "The type of the object represented by JSON.",
            "enum": [
              "list"
            ],
            "nullable": true
          },
          "data_ref": {
            "type": "string",
            "default": "data",
            "description": "Identifies the name of the attribute that contains the array of transaction objects.",
            "enum": [
              "data"
            ],
            "nullable": true
          },
          "data": {
            "title": "CampaignsTransactionsListResponseBodyData",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VoucherTransaction"
            },
            "description": "A dictionary that contains an array of transactions. Each entry in the array is a separate transaction object.",
            "nullable": true
          },
          "has_more": {
            "type": "boolean",
            "description": "As query results are always limited (by the limit parameter), the `has_more` flag indicates if there are more records for given filter parameters. This lets you know if you can run another request (with a different paging or a different start date filter) to get more records returned in the results.",
            "nullable": true
          },
          "more_starting_after": {
            "type": "string",
            "description": "Returns an ID that can be used to return another page of results. Use the transaction ID in the `starting_after_id` query parameter to display another page of the results starting after the transaction with that ID.",
            "nullable": true
          }
        },
        "required": []
      },
      "CampaignsUpdateRequestBody": {
        "title": "CampaignsUpdateRequestBody",
        "type": "object",
        "properties": {
          "start_date": {
            "type": "string",
            "format": "date-time",
            "description": "Activation timestamp defines when the campaign starts to be active in ISO 8601 format. Campaign is *inactive before* this date. ",
            "example": "2022-09-20T00:00:00.000Z",
            "nullable": true
          },
          "expiration_date": {
            "type": "string",
            "format": "date-time",
            "description": "Expiration timestamp defines when the campaign expires in ISO 8601 format.  Campaign is *inactive after* this date.",
            "example": "2022-09-30T00:00:00.000Z",
            "nullable": true
          },
          "validity_timeframe": {
            "$ref": "#/components/schemas/ValidityTimeframe"
          },
          "validity_day_of_week": {
            "$ref": "#/components/schemas/ValidityDayOfWeek"
          },
          "validity_hours": {
            "$ref": "#/components/schemas/ValidityHours"
          },
          "description": {
            "type": "string",
            "description": "An optional field to keep any extra textual information about the campaign such as a campaign description and details.",
            "nullable": true
          },
          "category": {
            "type": "string",
            "description": "The category assigned to the campaign. Either pass this parameter OR the `category_id`.",
            "nullable": true
          },
          "metadata": {
            "title": "CampaignsUpdateRequestBodyMetadata",
            "type": "object",
            "description": "The metadata object stores all custom attributes assigned to the campaign. A set of key/value pairs that you can attach to a campaign object. It can be useful for storing additional information about the campaign in a structured format.",
            "nullable": true
          },
          "unset_metadata_fields": {
            "title": "CampaignsUpdateRequestBodyUnsetMetadataFields",
            "type": "array",
            "nullable": true,
            "description": "Determine which metadata should be removed from campaign.",
            "items": {
              "title": "CampaignsUpdateRequestBodyUnsetMetadataFieldsItem",
              "type": "string"
            }
          },
          "category_id": {
            "type": "string",
            "description": "Unique category ID that this campaign belongs to. Either pass this parameter OR the `category`.",
            "example": "cat_0b688929a2476386a7",
            "nullable": true
          },
          "access_settings": {
            "$ref": "#/components/schemas/AccessSettings"
          },
          "activity_duration_after_publishing": {
            "type": "string",
            "description": "Defines the amount of time the vouchers will be active after publishing. The value is shown in the ISO 8601 format. For example, a voucher with the value of P24D will be valid for a duration of 24 days.",
            "nullable": true
          },
          "join_once": {
            "type": "boolean",
            "description": "If this value is set to `true`, customers will be able to join the campaign only once. It is always `false` for generic (standalone) vouchers campaigns and it cannot be changed in them. It is always `true` for loyalty campaigns and it cannot be changed in them.",
            "nullable": true
          },
          "auto_join": {
            "type": "boolean",
            "description": "Indicates whether customers will be able to auto-join a loyalty campaign if any earning rule is fulfilled.",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "Defines whether the campaign can be updated with new vouchers after campaign creation.\n\n- `AUTO_UPDATE`: By choosing the auto update option you will create a campaign that can be enhanced by new vouchers after the time of creation (e.g. by publish vouchers method).\n-  `STATIC`: vouchers need to be manually published.\n\nIf the `type` of the campaign is `STANDALONE`, the type cannot be changed. Also, the `type` cannot be changed to `STANDALONE`.",
            "enum": [
              "AUTO_UPDATE",
              "STATIC"
            ],
            "nullable": true
          },
          "discount": {
            "$ref": "#/components/schemas/Discount"
          },
          "referral_program": {
            "$ref": "#/components/schemas/ReferralProgram"
          },
          "gift": {
            "$ref": "#/components/schemas/Gift"
          },
          "loyalty_tiers_expiration": {
            "$ref": "#/components/schemas/LoyaltyTiersExpirationAll"
          },
          "options": {
            "title": "CampaignsUpdateRequestBodyOptions",
            "type": "object",
            "properties": {
              "recalculate_tiers": {
                "type": "boolean",
                "description": "Determine if tiers should be recalculated or no.",
                "nullable": true
              }
            },
            "nullable": true
          }
        }
      },
      "CampaignsUpdateResponseBody": {
        "title": "CampaignsUpdateResponseBody",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique campaign ID, assigned by Voucherify.",
            "example": "camp_f7fBbQxUuTN7dI7tGOo5XMDA",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Campaign name.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "An optional field to keep any extra textual information about the campaign such as a campaign description and details.",
            "nullable": true
          },
          "campaign_type": {
            "type": "string",
            "enum": [
              "LOYALTY_PROGRAM",
              "GIFT_VOUCHERS",
              "DISCOUNT_COUPONS",
              "PROMOTION",
              "REFERRAL_PROGRAM"
            ],
            "description": "Type of campaign.",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "Defines whether the campaign can be updated with new vouchers after campaign creation or if the campaign consists of generic (standalone) voucherss.\n\n- `AUTO_UPDATE`: the campaign is dynamic, i.e. vouchers will generate based on set criteria\n-  `STATIC`: vouchers need to be manually published\n- `STANDALONE`: campaign for single vouchers",
            "enum": [
              "AUTO_UPDATE",
              "STATIC",
              "STANDALONE"
            ],
            "nullable": true
          },
          "voucher": {
            "$ref": "#/components/schemas/CampaignVoucher"
          },
          "auto_join": {
            "type": "boolean",
            "description": "Indicates whether customers will be able to auto-join a loyalty campaign if any earning rule is fulfilled.",
            "nullable": true
          },
          "join_once": {
            "type": "boolean",
            "description": "If this value is set to `true`, customers will be able to join the campaign only once. It is always `false` for generic (standalone) vouchers campaigns and it cannot be changed in them. It is always `true` for loyalty campaigns and it cannot be changed in them.",
            "nullable": true
          },
          "use_voucher_metadata_schema": {
            "type": "boolean",
            "description": "Flag indicating whether the campaign is to use the voucher's metadata schema instead of the campaign metadata schema.",
            "nullable": true
          },
          "validity_timeframe": {
            "$ref": "#/components/schemas/ValidityTimeframe"
          },
          "validity_day_of_week": {
            "$ref": "#/components/schemas/ValidityDayOfWeek"
          },
          "validity_hours": {
            "$ref": "#/components/schemas/ValidityHours"
          },
          "activity_duration_after_publishing": {
            "type": "string",
            "description": "Defines the amount of time the vouchers will be active after publishing. The value is shown in the ISO 8601 format. For example, a voucher with the value of P24D will be valid for a duration of 24 days.",
            "nullable": true
          },
          "vouchers_count": {
            "type": "integer",
            "description": "Total number of unique vouchers in campaign.",
            "nullable": true
          },
          "start_date": {
            "type": "string",
            "format": "date-time",
            "description": "Activation timestamp defines when the campaign starts to be active in ISO 8601 format. Campaign is *inactive before* this date. ",
            "example": "2022-09-20T00:00:00.000Z",
            "nullable": true
          },
          "expiration_date": {
            "type": "string",
            "format": "date-time",
            "description": "Expiration timestamp defines when the campaign expires in ISO 8601 format.  Campaign is *inactive after* this date.",
            "example": "2022-09-30T00:00:00.000Z",
            "nullable": true
          },
          "active": {
            "type": "boolean",
            "description": "A flag to toggle the campaign on or off. You can disable a campaign even though it's within the active period defined by the `start_date` and `expiration_date`.  \n\n- `true` indicates an *active* campaign\n- `false` indicates an *inactive* campaign",
            "nullable": true
          },
          "metadata": {
            "title": "CampaignsUpdateResponseBodyMetadata",
            "type": "object",
            "description": "The metadata object stores all custom attributes assigned to the campaign. A set of key/value pairs that you can attach to a campaign object. It can be useful for storing additional information about the campaign in a structured format.",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2021-12-01T08:00:50.038Z",
            "description": "Timestamp representing the date and time when the campaign was created. The value is shown in the ISO 8601 format.",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2022-09-20T09:18:19.623Z",
            "description": "Timestamp representing the date and time when the campaign was last updated in ISO 8601 format.",
            "nullable": true
          },
          "category": {
            "type": "string",
            "description": "Unique category name.",
            "nullable": true
          },
          "creation_status": {
            "type": "string",
            "enum": [
              "DONE",
              "IN_PROGRESS",
              "FAILED",
              "DRAFT",
              "MODIFYING"
            ],
            "description": "Indicates the status of the campaign creation.",
            "nullable": true
          },
          "vouchers_generation_status": {
            "type": "string",
            "description": "Indicates the status of the campaign's voucher generation.",
            "enum": [
              "DONE",
              "IN_PROGRESS",
              "FAILED",
              "DRAFT",
              "MODIFYING"
            ],
            "nullable": true
          },
          "readonly": {
            "type": "boolean",
            "description": "Indicates whether the campaign can be only read by a restricted user in the Areas and Stores enterprise feature. It is returned only to restricted users; this field is not returned for users with other roles. It is also not returned for restricted users who use the [GET Campaign summary](ref:campaign-summary) endpoint.",
            "nullable": true
          },
          "protected": {
            "type": "boolean",
            "description": "Indicates whether the resource can be deleted.",
            "nullable": true
          },
          "category_id": {
            "type": "string",
            "nullable": true,
            "description": "Unique category ID that this campaign belongs to.",
            "example": "cat_0b688929a2476386a7"
          },
          "categories": {
            "title": "CampaignsUpdateResponseBodyCategories",
            "type": "array",
            "description": "Contains details about the campaign category. For the GET [List campaigns](ref:list-campaigns) endpoint, this is returned only if the `expand=category` query parameter is passed in the request. Otherwise, it is returned as an empty array. For GET [Campaign summary](ref:get-campaign-summary) endpoint, it is always returned as an empty array.",
            "items": {
              "$ref": "#/components/schemas/Category"
            },
            "nullable": true
          },
          "object": {
            "type": "string",
            "default": "campaign",
            "description": "The type of the object represented by JSON. This object stores information about the campaign.",
            "nullable": true
          },
          "referral_program": {
            "$ref": "#/components/schemas/ReferralProgram"
          },
          "loyalty_tiers_expiration": {
            "$ref": "#/components/schemas/LoyaltyTiersExpirationAll"
          },
          "access_settings_assignments": {
            "$ref": "#/components/schemas/AccessSettingsCampaignAssignmentsList"
          },
          "promotion": {
            "$ref": "#/components/schemas/PromotionTiersList"
          },
          "validation_rules_assignments": {
            "$ref": "#/components/schemas/ValidationRulesAssignmentsList"
          }
        },
        "description": "Response body schema for **PUT** `v1/campaigns/{campaignId}`."
      },
      "CampaignsVouchersCreateCombinedResponseBody": {
        "title": "CampaignsVouchersCreateCombinedResponseBody",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "v_mkZN9v7vjYUadXnHrMza8W5c34fE5KiV",
            "description": "Assigned by the Voucherify API, identifies the voucher.",
            "nullable": true
          },
          "code": {
            "type": "string",
            "example": "WVPblOYX",
            "description": "A code that identifies a voucher. Pattern can use all letters of the English alphabet, Arabic numerals, and special characters.",
            "nullable": true
          },
          "campaign": {
            "type": "string",
            "example": "Gift Card Campaign",
            "description": "A unique campaign name, identifies the voucher's parent campaign.",
            "nullable": true
          },
          "campaign_id": {
            "type": "string",
            "example": "camp_FNYR4jhqZBM9xTptxDGgeNBV",
            "description": "Assigned by the Voucherify API, identifies the voucher's parent campaign.",
            "nullable": true
          },
          "category": {
            "type": "string",
            "description": "Tag defining the category that this voucher belongs to. Useful when listing vouchers using the List Vouchers endpoint.",
            "nullable": true
          },
          "category_id": {
            "type": "string",
            "description": "Unique category ID assigned by Voucherify.",
            "example": "cat_0bb343dee3cdb5ec0c",
            "nullable": true
          },
          "type": {
            "type": "string",
            "enum": [
              "GIFT_VOUCHER",
              "DISCOUNT_VOUCHER",
              "LOYALTY_CARD"
            ],
            "description": "Defines the type of the voucher. ",
            "nullable": true
          },
          "discount": {
            "$ref": "#/components/schemas/Discount"
          },
          "gift": {
            "title": "CampaignsVouchersCreateCombinedResponseBodyGift",
            "type": "object",
            "description": "Object representing gift parameters. Child attributes are present only if `type` is `GIFT_VOUCHER`. Defaults to `null`.",
            "properties": {
              "amount": {
                "type": "integer",
                "example": 10000,
                "description": "Total gift card income over the lifetime of the card. The value is multiplied by 100 to represent 2 decimal places. For example `10000 cents` for `$100.00`.",
                "nullable": true
              },
              "subtracted_amount": {
                "type": "integer",
                "description": "Total amount of subtracted credits over the gift card lifetime. The value is multiplied by 100 to represent 2 decimal places. For example `10000 cents` for `$100.00`.",
                "nullable": true
              },
              "balance": {
                "type": "integer",
                "example": 500,
                "description": "Available funds. The value is multiplied by 100 to represent 2 decimal places. For example `10000 cents` for `$100.00`.",
                "nullable": true
              },
              "effect": {
                "type": "string",
                "enum": [
                  "APPLY_TO_ORDER",
                  "APPLY_TO_ITEMS"
                ],
                "description": "Defines how the credits are applied to the customer's order.",
                "nullable": true
              }
            },
            "nullable": true
          },
          "loyalty_card": {
            "title": "CampaignsVouchersCreateCombinedResponseBodyLoyaltyCard",
            "type": "object",
            "description": "Object representing loyalty card parameters. Child attributes are present only if `type` is `LOYALTY_CARD`. Defaults to `null`.",
            "properties": {
              "points": {
                "type": "integer",
                "example": 7000,
                "description": "Total number of points added to the loyalty card over its lifespan.",
                "nullable": true
              },
              "balance": {
                "type": "integer",
                "example": 6970,
                "description": "Points available for reward redemption. This is calculated as follows: `balance` = `points` - `expired_points` - `subtracted_points` - `redemption.redeemed_points`.",
                "nullable": true
              },
              "next_expiration_date": {
                "type": "string",
                "format": "date",
                "example": "2023-05-30",
                "description": "The next closest date when the next set of points are due to expire.",
                "nullable": true
              },
              "next_expiration_points": {
                "type": "integer",
                "description": "The amount of points that are set to expire next.",
                "nullable": true
              },
              "pending_points": {
                "type": "integer",
                "description": "Shows the number of pending points that will be added to the loyalty card when they are activated automatically or manually.",
                "nullable": true
              },
              "expired_points": {
                "type": "integer",
                "description": "Shows the total number of expired points over the lifetime of the loyalty card.",
                "nullable": true
              },
              "subtracted_points": {
                "type": "integer",
                "description": "Shows the total number of subtracted points over the lifetime of the loyalty card.",
                "nullable": true
              }
            },
            "nullable": true
          },
          "start_date": {
            "type": "string",
            "example": "2021-12-01T00:00:00.000Z",
            "format": "date-time",
            "description": "Activation timestamp defines when the code starts to be active in ISO 8601 format. Voucher is *inactive before* this date. ",
            "nullable": true
          },
          "expiration_date": {
            "type": "string",
            "example": "2021-12-31T00:00:00.000Z",
            "format": "date-time",
            "description": "Expiration timestamp defines when the code expires in ISO 8601 format.  Voucher is *inactive after* this date.",
            "nullable": true
          },
          "validity_timeframe": {
            "$ref": "#/components/schemas/ValidityTimeframe"
          },
          "validity_day_of_week": {
            "$ref": "#/components/schemas/ValidityDayOfWeek"
          },
          "validity_hours": {
            "$ref": "#/components/schemas/ValidityHours"
          },
          "active": {
            "type": "boolean",
            "nullable": true,
            "description": "A flag to toggle the voucher on or off. You can disable a voucher even though it's within the active period defined by the `start_date` and `expiration_date`.  \n\n- `true` indicates an *active* voucher\n- `false` indicates an *inactive* voucher"
          },
          "additional_info": {
            "type": "string",
            "description": "An optional field to keep any extra textual information about the code such as a code description and details.",
            "nullable": true
          },
          "metadata": {
            "title": "CampaignsVouchersCreateCombinedResponseBodyMetadata",
            "type": "object",
            "description": "The metadata object stores all custom attributes assigned to the code. A set of key/value pairs that you can attach to a voucher object. It can be useful for storing additional information about the voucher in a structured format.",
            "nullable": true
          },
          "assets": {
            "$ref": "#/components/schemas/VoucherAssets"
          },
          "is_referral_code": {
            "type": "boolean",
            "nullable": true,
            "description": "Flag indicating whether this voucher is a referral code; `true` for campaign type `REFERRAL_PROGRAM`."
          },
          "created_at": {
            "type": "string",
            "example": "2021-12-22T10:13:06.487Z",
            "description": "Timestamp representing the date and time when the voucher was created. The value is shown in the ISO 8601 format.",
            "format": "date-time",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "example": "2021-12-22T10:14:45.316Z",
            "format": "date-time",
            "description": "Timestamp representing the date and time when the voucher was last updated in ISO 8601 format.",
            "nullable": true
          },
          "holder_id": {
            "type": "string",
            "example": "cust_eWgXlBBiY6THFRJwX45Iakv4",
            "description": "Unique customer identifier of the redeemable holder. It equals to the customer ID assigned by Voucherify.",
            "nullable": true
          },
          "referrer_id": {
            "type": "string",
            "description": "Unique identifier of the referring person.",
            "example": "cust_Vzck5i8U3OhcEUFY6MKhN9Rv",
            "nullable": true
          },
          "object": {
            "type": "string",
            "description": "The type of the object represented by JSON. Default is `voucher`.",
            "default": "voucher",
            "nullable": true
          },
          "publish": {
            "title": "CampaignsVouchersCreateCombinedResponseBodyPublish",
            "type": "object",
            "description": "Stores a summary of publication events: an event counter and endpoint to return details of each event. Publication is an assignment of a code to a customer, e.g. through a distribution.",
            "properties": {
              "object": {
                "type": "string",
                "default": "list",
                "description": "The type of the object represented is by default `list`. To get this list, you need to make a call to the endpoint returned in the `url` attribute.",
                "nullable": true
              },
              "count": {
                "type": "integer",
                "example": 0,
                "description": "Publication events counter.",
                "nullable": true
              },
              "url": {
                "type": "string",
                "example": "/v1/vouchers/WVPblOYX/publications?page=1&limit=10",
                "description": "The endpoint where this list of publications can be accessed using a **GET** method. `/v1/vouchers/{voucher_code}/publications`",
                "nullable": true
              }
            },
            "nullable": true
          },
          "redemption": {
            "title": "CampaignsVouchersCreateCombinedResponseBodyRedemption",
            "type": "object",
            "description": "Stores a summary of redemptions that have been applied to the voucher.",
            "properties": {
              "quantity": {
                "type": "integer",
                "description": "How many times a voucher can be redeemed. A `null` value means unlimited.",
                "nullable": true
              },
              "redeemed_quantity": {
                "type": "integer",
                "example": 1,
                "description": "How many times a voucher has already been redeemed.",
                "nullable": true
              },
              "redeemed_points": {
                "type": "integer",
                "example": 100000,
                "description": "Total loyalty points redeemed.",
                "nullable": true
              },
              "object": {
                "type": "string",
                "default": "list",
                "description": "The type of the object represented is by default `list`. To get this list, you need to make a call to the endpoint returned in the url attribute.",
                "nullable": true
              },
              "url": {
                "type": "string",
                "example": "/v1/vouchers/WVPblOYX/redemptions?page=1&limit=10",
                "description": "The endpoint where this list of redemptions can be accessed using a **GET** method. `/v1/vouchers/{voucher_code}/redemptions`",
                "nullable": true
              }
            },
            "nullable": true
          },
          "categories": {
            "title": "CampaignsVouchersCreateCombinedResponseBodyCategories",
            "type": "array",
            "description": "Contains details about the category.",
            "items": {
              "$ref": "#/components/schemas/Category"
            },
            "nullable": true
          },
          "validation_rules_assignments": {
            "$ref": "#/components/schemas/ValidationRulesAssignmentsList"
          },
          "async_action_id": {
            "type": "string",
            "example": "aa_0a875d56c805df6601",
            "description": "The ID of the scheduled asynchronous action.",
            "nullable": true
          }
        }
      },
      "CampaignsVouchersCreateInBulkRequestBody": {
        "title": "CampaignsVouchersCreateInBulkRequestBody",
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Unique voucher code.",
            "nullable": true
          },
          "code_config": {
            "$ref": "#/components/schemas/CodeConfig"
          },
          "category": {
            "type": "string",
            "description": "The category assigned to the campaign. Either pass this parameter OR the `category_id`.",
            "nullable": true
          },
          "metadata": {
            "title": "CampaignsVouchersCreateInBulkRequestBodyMetadata",
            "type": "object",
            "description": "The metadata object stores all custom attributes assigned to the voucher. A set of key/value pairs that you can attach to a voucher object. It can be useful for storing additional information about the voucher in a structured format.",
            "nullable": true
          },
          "redemption": {
            "title": "CampaignsVouchersCreateInBulkRequestBodyRedemption",
            "type": "object",
            "description": "Stores the quantity of redemptions that can be applied to the voucher.",
            "properties": {
              "quantity": {
                "type": "integer",
                "description": "How many times a voucher can be redeemed. A `null` value means unlimited.",
                "nullable": true
              }
            },
            "nullable": true
          },
          "additional_info": {
            "type": "string",
            "description": "An optional field to keep any extra textual information about the code such as a code description and details.",
            "nullable": true
          },
          "start_date": {
            "type": "string",
            "format": "date-time",
            "description": "Activation timestamp defines when the voucher starts to be active in ISO 8601 format. Voucher is *inactive before* this date. ",
            "example": "2022-09-20T00:00:00.000Z",
            "nullable": true
          },
          "expiration_date": {
            "type": "string",
            "format": "date-time",
            "description": "Expiration timestamp defines when the voucher expires in ISO 8601 format.  Voucher is *inactive after* this date.",
            "example": "2022-09-30T00:00:00.000Z",
            "nullable": true
          }
        },
        "description": "Request body schema for **POST** `v1/campaigns/{campaignId}/vouchers`."
      },
      "CampaignsVouchersCreateRequestBody": {
        "title": "CampaignsVouchersCreateRequestBody",
        "type": "object",
        "properties": {
          "category": {
            "type": "string",
            "description": "The category assigned to the campaign. Either pass this parameter OR the `category_id`.",
            "nullable": true
          },
          "metadata": {
            "title": "CampaignsVouchersCreateRequestBodyMetadata",
            "type": "object",
            "description": "The metadata object stores all custom attributes assigned to the voucher. A set of key/value pairs that you can attach to a voucher object. It can be useful for storing additional information about the voucher in a structured format.",
            "nullable": true
          },
          "redemption": {
            "title": "CampaignsVouchersCreateRequestBodyRedemption",
            "type": "object",
            "description": "Stores the quantity of redemptions that can be applied to the voucher.",
            "properties": {
              "quantity": {
                "type": "integer",
                "description": "How many times a voucher can be redeemed. A `null` value means unlimited.",
                "nullable": true
              }
            },
            "nullable": true
          },
          "additional_info": {
            "type": "string",
            "description": "An optional field to keep any extra textual information about the code such as a code description and details.",
            "nullable": true
          },
          "start_date": {
            "type": "string",
            "format": "date-time",
            "description": "Activation timestamp defines when the voucher starts to be active in ISO 8601 format. Voucher is *inactive before* this date. ",
            "example": "2022-09-20T00:00:00.000Z",
            "nullable": true
          },
          "expiration_date": {
            "type": "string",
            "format": "date-time",
            "description": "Expiration timestamp defines when the voucher expires in ISO 8601 format.  Voucher is *inactive after* this date.",
            "example": "2022-09-30T00:00:00.000Z",
            "nullable": true
          }
        },
        "description": "Request body schema for **POST** `v1/campaigns/{campaignId}/vouchers/{code}`."
      },
      "CampaignsVouchersCreateResponseBody": {
        "title": "CampaignsVouchersCreateResponseBody",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "v_mkZN9v7vjYUadXnHrMza8W5c34fE5KiV",
            "description": "Assigned by the Voucherify API, identifies the voucher.",
            "nullable": true
          },
          "code": {
            "type": "string",
            "example": "WVPblOYX",
            "description": "A code that identifies a voucher. Pattern can use all letters of the English alphabet, Arabic numerals, and special characters.",
            "nullable": true
          },
          "campaign": {
            "type": "string",
            "example": "Gift Card Campaign",
            "description": "A unique campaign name, identifies the voucher's parent campaign.",
            "nullable": true
          },
          "campaign_id": {
            "type": "string",
            "example": "camp_FNYR4jhqZBM9xTptxDGgeNBV",
            "description": "Assigned by the Voucherify API, identifies the voucher's parent campaign.",
            "nullable": true
          },
          "category": {
            "type": "string",
            "description": "Tag defining the category that this voucher belongs to. Useful when listing vouchers using the List Vouchers endpoint.",
            "nullable": true
          },
          "category_id": {
            "type": "string",
            "description": "Unique category ID assigned by Voucherify.",
            "example": "cat_0bb343dee3cdb5ec0c",
            "nullable": true
          },
          "type": {
            "type": "string",
            "enum": [
              "GIFT_VOUCHER",
              "DISCOUNT_VOUCHER",
              "LOYALTY_CARD"
            ],
            "description": "Defines the type of the voucher. ",
            "nullable": true
          },
          "discount": {
            "$ref": "#/components/schemas/Discount"
          },
          "gift": {
            "title": "CampaignsVouchersCreateResponseBodyGift",
            "type": "object",
            "description": "Object representing gift parameters. Child attributes are present only if `type` is `GIFT_VOUCHER`. Defaults to `null`.",
            "properties": {
              "amount": {
                "type": "integer",
                "example": 10000,
                "description": "Total gift card income over the lifetime of the card. The value is multiplied by 100 to represent 2 decimal places. For example `10000 cents` for `$100.00`.",
                "nullable": true
              },
              "subtracted_amount": {
                "type": "integer",
                "description": "Total amount of subtracted credits over the gift card lifetime. The value is multiplied by 100 to represent 2 decimal places. For example `10000 cents` for `$100.00`.",
                "nullable": true
              },
              "balance": {
                "type": "integer",
                "example": 500,
                "description": "Available funds. The value is multiplied by 100 to represent 2 decimal places. For example `10000 cents` for `$100.00`.",
                "nullable": true
              },
              "effect": {
                "type": "string",
                "enum": [
                  "APPLY_TO_ORDER",
                  "APPLY_TO_ITEMS"
                ],
                "description": "Defines how the credits are applied to the customer's order.",
                "nullable": true
              }
            },
            "nullable": true
          },
          "loyalty_card": {
            "title": "CampaignsVouchersCreateResponseBodyLoyaltyCard",
            "type": "object",
            "description": "Object representing loyalty card parameters. Child attributes are present only if `type` is `LOYALTY_CARD`. Defaults to `null`.",
            "properties": {
              "points": {
                "type": "integer",
                "example": 7000,
                "description": "Total number of points added to the loyalty card over its lifespan.",
                "nullable": true
              },
              "balance": {
                "type": "integer",
                "example": 6970,
                "description": "Points available for reward redemption. This is calculated as follows: `balance` = `points` - `expired_points` - `subtracted_points` - `redemption.redeemed_points`.",
                "nullable": true
              },
              "next_expiration_date": {
                "type": "string",
                "format": "date",
                "example": "2023-05-30",
                "description": "The next closest date when the next set of points are due to expire.",
                "nullable": true
              },
              "next_expiration_points": {
                "type": "integer",
                "description": "The amount of points that are set to expire next.",
                "nullable": true
              },
              "pending_points": {
                "type": "integer",
                "description": "Shows the number of pending points that will be added to the loyalty card when they are activated automatically or manually.",
                "nullable": true
              },
              "expired_points": {
                "type": "integer",
                "description": "Shows the total number of expired points over the lifetime of the loyalty card.",
                "nullable": true
              },
              "subtracted_points": {
                "type": "integer",
                "description": "Shows the total number of subtracted points over the lifetime of the loyalty card.",
                "nullable": true
              }
            },
            "nullable": true
          },
          "start_date": {
            "type": "string",
            "example": "2021-12-01T00:00:00.000Z",
            "format": "date-time",
            "description": "Activation timestamp defines when the code starts to be active in ISO 8601 format. Voucher is *inactive before* this date. ",
            "nullable": true
          },
          "expiration_date": {
            "type": "string",
            "example": "2021-12-31T00:00:00.000Z",
            "format": "date-time",
            "description": "Expiration timestamp defines when the code expires in ISO 8601 format.  Voucher is *inactive after* this date.",
            "nullable": true
          },
          "validity_timeframe": {
            "$ref": "#/components/schemas/ValidityTimeframe"
          },
          "validity_day_of_week": {
            "$ref": "#/components/schemas/ValidityDayOfWeek"
          },
          "validity_hours": {
            "$ref": "#/components/schemas/ValidityHours"
          },
          "active": {
            "type": "boolean",
            "nullable": true,
            "description": "A flag to toggle the voucher on or off. You can disable a voucher even though it's within the active period defined by the `start_date` and `expiration_date`.  \n\n- `true` indicates an *active* voucher\n- `false` indicates an *inactive* voucher"
          },
          "additional_info": {
            "type": "string",
            "description": "An optional field to keep any extra textual information about the code such as a code description and details.",
            "nullable": true
          },
          "metadata": {
            "title": "CampaignsVouchersCreateResponseBodyMetadata",
            "type": "object",
            "description": "The metadata object stores all custom attributes assigned to the code. A set of key/value pairs that you can attach to a voucher object. It can be useful for storing additional information about the voucher in a structured format.",
            "nullable": true
          },
          "assets": {
            "$ref": "#/components/schemas/VoucherAssets"
          },
          "is_referral_code": {
            "type": "boolean",
            "nullable": true,
            "description": "Flag indicating whether this voucher is a referral code; `true` for campaign type `REFERRAL_PROGRAM`."
          },
          "created_at": {
            "type": "string",
            "example": "2021-12-22T10:13:06.487Z",
            "description": "Timestamp representing the date and time when the voucher was created. The value is shown in the ISO 8601 format.",
            "format": "date-time",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "example": "2021-12-22T10:14:45.316Z",
            "format": "date-time",
            "description": "Timestamp representing the date and time when the voucher was last updated in ISO 8601 format.",
            "nullable": true
          },
          "holder_id": {
            "type": "string",
            "example": "cust_eWgXlBBiY6THFRJwX45Iakv4",
            "description": "Unique customer identifier of the redeemable holder. It equals to the customer ID assigned by Voucherify.",
            "nullable": true
          },
          "referrer_id": {
            "type": "string",
            "description": "Unique identifier of the referring person.",
            "example": "cust_Vzck5i8U3OhcEUFY6MKhN9Rv",
            "nullable": true
          },
          "object": {
            "type": "string",
            "description": "The type of the object represented by JSON. Default is `voucher`.",
            "default": "voucher",
            "nullable": true
          },
          "publish": {
            "title": "CampaignsVouchersCreateResponseBodyPublish",
            "type": "object",
            "description": "Stores a summary of publication events: an event counter and endpoint to return details of each event. Publication is an assignment of a code to a customer, e.g. through a distribution.",
            "properties": {
              "object": {
                "type": "string",
                "default": "list",
                "description": "The type of the object represented is by default `list`. To get this list, you need to make a call to the endpoint returned in the `url` attribute.",
                "nullable": true
              },
              "count": {
                "type": "integer",
                "example": 0,
                "description": "Publication events counter.",
                "nullable": true
              },
              "url": {
                "type": "string",
                "example": "/v1/vouchers/WVPblOYX/publications?page=1&limit=10",
                "description": "The endpoint where this list of publications can be accessed using a **GET** method. `/v1/vouchers/{voucher_code}/publications`",
                "nullable": true
              }
            },
            "nullable": true
          },
          "redemption": {
            "title": "CampaignsVouchersCreateResponseBodyRedemption",
            "type": "object",
            "description": "Stores a summary of redemptions that have been applied to the voucher.",
            "properties": {
              "quantity": {
                "type": "integer",
                "description": "How many times a voucher can be redeemed. A `null` value means unlimited.",
                "nullable": true
              },
              "redeemed_quantity": {
                "type": "integer",
                "example": 1,
                "description": "How many times a voucher has already been redeemed.",
                "nullable": true
              },
              "redeemed_points": {
                "type": "integer",
                "example": 100000,
                "description": "Total loyalty points redeemed.",
                "nullable": true
              },
              "object": {
                "type": "string",
                "default": "list",
                "description": "The type of the object represented is by default `list`. To get this list, you need to make a call to the endpoint returned in the url attribute.",
                "nullable": true
              },
              "url": {
                "type": "string",
                "example": "/v1/vouchers/WVPblOYX/redemptions?page=1&limit=10",
                "description": "The endpoint where this list of redemptions can be accessed using a **GET** method. `/v1/vouchers/{voucher_code}/redemptions`",
                "nullable": true
              }
            },
            "nullable": true
          },
          "categories": {
            "title": "CampaignsVouchersCreateResponseBodyCategories",
            "type": "array",
            "description": "Contains details about the category.",
            "items": {
              "$ref": "#/components/schemas/Category"
            },
            "nullable": true
          },
          "validation_rules_assignments": {
            "$ref": "#/components/schemas/ValidationRulesAssignmentsList"
          }
        },
        "description": "Response body schema for **POST** `v1/campaigns/{campaignId}/vouchers/{code}` and **POST** `v1/campaigns/{campaignId}/vouchers`."
      },
      "CampaignsVouchersImportCSVRequestBody": {
        "title": "CampaignsVouchersImportCSVRequestBody",
        "type": "object",
        "format": "binary",
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "description": "File path.",
            "nullable": true
          }
        },
        "required": [],
        "description": "Request body schema for **POST** `v1/campaigns/{campaignId}/importCSV`."
      },
      "CategoriesCreateRequestBody": {
        "title": "CategoriesCreateRequestBody",
        "type": "object",
        "description": "Request body schema for **POST** `v1/categories`.",
        "properties": {
          "name": {
            "type": "string",
            "description": "Category name.",
            "nullable": true
          },
          "hierarchy": {
            "type": "integer",
            "description": "Category hierarchy. Categories with lower hierarchy are processed before categories with higher hierarchy value.",
            "minimum": 0,
            "nullable": true
          }
        },
        "required": []
      },
      "CategoriesCreateResponseBody": {
        "title": "CategoriesCreateResponseBody",
        "description": "Response body schema for **POST** `v1/categories`.",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique category ID assigned by Voucherify.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Category name.",
            "nullable": true
          },
          "hierarchy": {
            "type": "integer",
            "description": "Category hierarchy. Categories with lower hierarchy are processed before categories with higher hierarchy value.",
            "minimum": 0,
            "nullable": true
          },
          "object": {
            "type": "string",
            "default": "category",
            "enum": [
              "category"
            ],
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "description": "Timestamp representing the date and time when the category was created. The value is shown in the ISO 8601 format.",
            "example": "2022-07-14T10:45:13.156Z",
            "format": "date-time",
            "nullable": true
          }
        },
        "required": []
      },
      "CategoriesGetResponseBody": {
        "title": "CategoriesGetResponseBody",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique category ID assigned by Voucherify.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Category name.",
            "nullable": true
          },
          "hierarchy": {
            "type": "integer",
            "description": "Category hierarchy. Categories with lower hierarchy are processed before categories with higher hierarchy value.",
            "minimum": 0,
            "nullable": true
          },
          "object": {
            "type": "string",
            "default": "category",
            "enum": [
              "category"
            ],
            "description": "The type of the object represented by the JSON. This object stores information about the category.",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "description": "Timestamp representing the date and time when the category was created. The value is shown in the ISO 8601 format.",
            "example": "2022-07-14T10:45:13.156Z",
            "format": "date-time",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "example": "2022-08-16T10:52:08.094Z",
            "description": "Timestamp representing the date and time when the category was updated. The value is shown in the ISO 8601 format.",
            "format": "date-time",
            "nullable": true
          }
        },
        "required": [],
        "description": "Response body schema for **GET** `v1/categories/{categoryId}`."
      },
      "CategoriesListResponseBody": {
        "title": "CategoriesListResponseBody",
        "type": "object",
        "description": "Response body schema for **GET** `v1/categories`.",
        "properties": {
          "object": {
            "type": "string",
            "default": "list",
            "enum": [
              "list"
            ],
            "description": "The type of the object represented by JSON. This object stores information about categories in a dictionary.",
            "nullable": true
          },
          "data_ref": {
            "type": "string",
            "default": "data",
            "enum": [
              "data"
            ],
            "description": "Identifies the name of the attribute that contains the array of category objects.",
            "nullable": true
          },
          "data": {
            "title": "CategoriesListResponseBodyData",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Category"
            },
            "nullable": true
          },
          "total": {
            "type": "integer",
            "description": "Total number of categories.",
            "nullable": true
          }
        },
        "required": []
      },
      "CategoriesUpdateRequestBody": {
        "title": "CategoriesUpdateRequestBody",
        "description": "Request body schema for **PUT** `v1/categories/{categoryId}`.",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Category name.",
            "nullable": true
          },
          "hierarchy": {
            "type": "integer",
            "description": "Category hierarchy. Categories with lower hierarchy are processed before categories with higher hierarchy value.",
            "minimum": 0,
            "nullable": true
          }
        },
        "required": []
      },
      "CategoriesUpdateResponseBody": {
        "title": "CategoriesUpdateResponseBody",
        "description": "Response body schema for **PUT** `v1/categories/{categoryId}`.",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique category ID assigned by Voucherify.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Category name.",
            "nullable": true
          },
          "hierarchy": {
            "type": "integer",
            "description": "Category hierarchy. Categories with lower hierarchy are processed before categories with higher hierarchy value.",
            "minimum": 0,
            "nullable": true
          },
          "object": {
            "type": "string",
            "default": "category",
            "enum": [
              "category"
            ],
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "description": "Timestamp representing the date and time when the category was created. The value is shown in the ISO 8601 format.",
            "example": "2022-07-14T10:45:13.156Z",
            "format": "date-time",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "example": "2022-08-16T10:52:08.094Z",
            "description": "Timestamp representing the date and time when the category was updated. The value is shown in the ISO 8601 format.",
            "format": "date-time",
            "nullable": true
          }
        },
        "required": []
      },
      "ClientEventsCreateRequestBody": {
        "title": "ClientEventsCreateRequestBody",
        "description": "Request body schema for **POST** `v1/events`.",
        "type": "object",
        "properties": {
          "event": {
            "type": "string",
            "description": "Event name. This is the same name that you used to define a custom event in the **Dashboard** > **Project Settings** > **Event Schema**.",
            "minLength": 1,
            "maxLength": 300,
            "nullable": true
          },
          "customer": {
            "$ref": "#/components/schemas/Customer"
          },
          "referral": {
            "title": "ClientEventsCreateRequestBodyReferral",
            "type": "object",
            "description": "If a **conversion event** for a referral program is set to a custom event, then you need to send the referral code in the payload to make a record of the conversion event. ",
            "properties": {
              "code": {
                "type": "string",
                "description": "A code through which a new visitor has been referred to a service.",
                "nullable": true
              },
              "referrer_id": {
                "type": "string",
                "description": "Unique ID of the referring person - it is optional and not required if the referral **code** is provided.",
                "example": "cust_Vzck5i8U3OhcEUFY6MKhN9Rv",
                "nullable": true
              }
            },
            "required": [],
            "nullable": true
          },
          "loyalty": {
            "title": "ClientEventsCreateRequestBodyLoyalty",
            "type": "object",
            "description": "If an earning rule in a loyalty program is based on a custom event. This objects let's you specify the loyalty card to which the custom event should be attributed to.",
            "properties": {
              "code": {
                "type": "string",
                "description": "Code of the loyalty card to receive points based on the calculation method defined in the related earning rule. An earning rule is triggered for the loyalty card when the event passed in the `event` parameter of the request payload gets sent along with this loyalty card code.",
                "example": "L-CARD-BUHuH6g",
                "nullable": true
              }
            },
            "required": [],
            "nullable": true
          },
          "metadata": {
            "title": "ClientEventsCreateRequestBodyMetadata",
            "type": "object",
            "description": "The metadata object stores all custom attributes assigned to the event. A set of key/value pairs that you can attach to an event object. It can be useful for storing additional information about the event in a structured format. Event metadata schema is defined in the **Dashboard** > **Project Settings** > **Event Schema** > **Edit particular event** > **Metadata property definition**.",
            "nullable": true
          }
        },
        "required": [
          "customer"
        ]
      },
      "ClientEventsCreateResponseBody": {
        "title": "ClientEventsCreateResponseBody",
        "description": "Response body schema for **POST** `v1/events`.",
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "default": "event",
            "description": "The object represented is an `event`.",
            "enum": [
              "event"
            ],
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "The event name.",
            "nullable": true
          },
          "customer": {
            "$ref": "#/components/schemas/SimpleCustomerRequiredObjectType"
          },
          "referral": {
            "title": "ClientEventsCreateResponseBodyReferral",
            "type": "object",
            "description": "A `null` referral object.",
            "nullable": true
          },
          "loyalty": {
            "title": "ClientEventsCreateResponseBodyLoyalty",
            "type": "object",
            "description": "A `null` loyalty object.",
            "nullable": true
          },
          "metadata": {
            "title": "ClientEventsCreateResponseBodyMetadata",
            "type": "object",
            "nullable": true
          }
        },
        "required": [
          "customer"
        ]
      },
      "ClientPromotionsTiersListResponseBody": {
        "title": "ClientPromotionsTiersListResponseBody",
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "default": "list",
            "description": "The type of the object represented by JSON. This object stores information about promotion tiers in a dictionary.",
            "nullable": true
          },
          "data_ref": {
            "type": "string",
            "default": "tiers",
            "description": "Identifies the name of the attribute that contains the array of promotion tier objects.",
            "nullable": true
          },
          "tiers": {
            "title": "ClientPromotionsTiersListResponseBodyTiers",
            "type": "array",
            "description": "Contains array of promotion tier objects.",
            "items": {
              "$ref": "#/components/schemas/PromotionTier"
            },
            "nullable": true
          },
          "total": {
            "type": "integer",
            "description": "Total number of promotion tiers.",
            "nullable": true
          },
          "has_more": {
            "type": "boolean",
            "description": "As query results are always limited (by the limit parameter), the `has_more` flag indicates if there are more records for given filter parameters. This lets you know if you can run another request to get more records returned in the results.",
            "nullable": true
          }
        },
        "description": "Response body schema for **GET** `v1/client/v1/promotions/tiers`."
      },
      "ClientQualificationsCheckEligibilityRequestBody": {
        "title": "ClientQualificationsCheckEligibilityRequestBody",
        "description": "Request body schema for **POST** `v1/qualifications`.",
        "type": "object",
        "properties": {
          "customer": {
            "$ref": "#/components/schemas/Customer"
          },
          "order": {
            "$ref": "#/components/schemas/Order"
          },
          "tracking_id": {
            "description": "Is correspondent to Customer's source_id",
            "type": "string",
            "nullable": true
          },
          "scenario": {
            "type": "string",
            "description": "Defines the scenario Voucherify should consider during the qualification process.\n\n- `ALL` - Scenario that returns all redeemables available for the customer in one API request. This scenario is used by default when no value is selected.\n- `CUSTOMER_WALLET` - returns vouchers applicable to the customer's cart based on the vouchers assigned to the customer's profile.\n- `AUDIENCE_ONLY` - returns all vouchers, promotion tiers, and campaigns available to the customer. Voucherify validates the rules based on the customer profile only.\n- `PRODUCTS` - returns all promotions available for the products (when a discount is defined to be applied to the item or when the item is required in the validation rule).\n- `PRODUCTS_DISCOUNT` - returns all promotions available for products when a discount is defined as applicable to specific item(s).\n- `PROMOTION_STACKS` - returns the applicable promotion stacks.\n- `PRODUCTS_BY_CUSTOMER` - returns all promotions available for a customer for the products (when a discount is defined to be applied to the item or when the item is required in the validation rule).\n- `PRODUCTS_DISCOUNT_BY_CUSTOMER` - returns all promotions available for a customer for products when a discount is defined as applicable to specific item(s).",
            "enum": [
              "ALL",
              "CUSTOMER_WALLET",
              "AUDIENCE_ONLY",
              "PRODUCTS",
              "PRODUCTS_DISCOUNT",
              "PROMOTION_STACKS",
              "PRODUCTS_BY_CUSTOMER",
              "PRODUCTS_DISCOUNT_BY_CUSTOMER"
            ],
            "nullable": true
          },
          "options": {
            "$ref": "#/components/schemas/QualificationsOption"
          },
          "session": {
            "title": "ClientQualificationsCheckEligibilityRequestBodySession",
            "type": "object",
            "description": "Parameter to return details about `locked_credits` on a gift card which has locked credits under a validation session.",
            "properties": {
              "type": {
                "type": "string",
                "description": "Parameter required to return the details about the `locked_credits`.",
                "default": "LOCK",
                "enum": [
                  "LOCK"
                ],
                "nullable": true
              }
            },
            "nullable": true
          },
          "metadata": {
            "title": "ClientQualificationsCheckEligibilityRequestBodyMetadata",
            "type": "object",
            "description": "A set of key/value pairs that you can send in the request body to check against redeemables requiring **redemption** metadata validation rules to be satisfied. The validation runs against rules that are defined through the <!-- [Create Validation Rules](https://docs.voucherify.io/reference/create-validation-rules) -->[Create Validation Rules](ref:create-validation-rules) endpoint or via the Dashboard; in the _Advanced Rule Builder_ &rarr; _Advanced_ &rarr; _Redemption metadata satisfy_ or _Basic Builder_ &rarr; _Attributes match_ &rarr; _REDEMPTION METADATA_. [Read more](https://support.voucherify.io/article/148-how-to-build-a-rule).",
            "nullable": true
          }
        }
      },
      "ClientQualificationsCheckEligibilityResponseBody": {
        "title": "ClientQualificationsCheckEligibilityResponseBody",
        "description": "Response body schema for **POST** `v1/qualifications`.",
        "type": "object",
        "properties": {
          "redeemables": {
            "$ref": "#/components/schemas/QualificationsRedeemables"
          },
          "tracking_id": {
            "type": "string",
            "description": "This identifier is generated during voucher qualification based on your internal id (e.g., email, database ID). This is a hashed customer source ID.",
            "nullable": true
          },
          "order": {
            "$ref": "#/components/schemas/OrderCalculated"
          },
          "stacking_rules": {
            "$ref": "#/components/schemas/StackingRules"
          }
        }
      },
      "ClientRedemptionsRedeemRequestBody": {
        "title": "ClientRedemptionsRedeemRequestBody",
        "type": "object",
        "properties": {
          "options": {
            "title": "ClientRedemptionsRedeemRequestBodyOptions",
            "type": "object",
            "description": "Configure parameters returned in the response.",
            "properties": {
              "expand": {
                "title": "ClientRedemptionsRedeemRequestBodyOptionsExpand",
                "type": "array",
                "description": "Expand array lets you configure params included in the response. Depending on the strings included in the array, the response will contain different details. \n\n| **Expand Option** | **Response Body** |\n|:---|:---|\n| [\"order\"] | - Same response as fallback response (without an options object).<br>- Order data with calculated discounts are listed in each child redeemable object.<br>- Metadata not included for each discount type. |\n| [\"redeemable\"] | Expands redeemable objects by including `metadata` for each discount type. |\n| [\"order\", \"redeemable\"] | - Order data with calculated discounts are listed in each child redeemable object.<br>- Includes `metadata` for each discount type. |\n| [\"redeemable\", \"redemption\", \"category\"] | - Returns each discount type's `metadata` in each child redemption object.<br>- Returns redemption object `metadata`.<br>- Returns an expanded `categories` object, showing details about the category. |",
                "items": {
                  "title": "ClientRedemptionsRedeemRequestBodyOptionsExpandItem",
                  "type": "string",
                  "enum": [
                    "order",
                    "redemption",
                    "redeemable",
                    "category"
                  ]
                },
                "nullable": true
              }
            },
            "nullable": true
          },
          "redeemables": {
            "title": "ClientRedemptionsRedeemRequestBodyRedeemables",
            "type": "array",
            "items": {
              "title": "ClientRedemptionsRedeemRequestBodyRedeemablesItem",
              "type": "object",
              "properties": {
                "object": {
                  "type": "string",
                  "enum": [
                    "voucher",
                    "promotion_tier",
                    "promotion_stack"
                  ]
                },
                "id": {
                  "type": "string"
                },
                "gift": {
                  "title": "ClientRedemptionsRedeemRequestBodyRedeemablesItemGift",
                  "type": "object",
                  "description": "Contains information on the number of gift card credits that the customer wants to apply to the order.",
                  "properties": {
                    "credits": {
                      "type": "integer",
                      "description": "The number of credits that the user wants to use from the gift card to fulfill the order. The value of credits cannot be higher than the current balance on the gift card. The value is multiplied by 100 to represent 2 decimal places. For example `10000 cents` for `$100.00`.",
                      "nullable": true
                    }
                  },
                  "nullable": true
                },
                "reward": {
                  "title": "ClientRedemptionsRedeemRequestBodyRedeemablesItemReward",
                  "type": "object",
                  "description": "Contains information about the reward that the customer wants to redeem and the number of points the customer is choosing to use for the reward.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique reward ID assigned by Voucherify. The reward must be assigned to the campaign in order for the user to be able to use the reward.",
                      "example": "rew_EPx1hCTpqzF0HW1z9NKckZH4",
                      "nullable": true
                    },
                    "points": {
                      "type": "integer",
                      "description": "The number of loyalty points that the user wants to spend in order to fulfill the order using a **pay with points** reward. The number of points cannot be higher than the current balance on the loyalty card.",
                      "nullable": true
                    }
                  },
                  "nullable": true
                }
              }
            },
            "nullable": true
          },
          "order": {
            "$ref": "#/components/schemas/Order"
          },
          "customer": {
            "$ref": "#/components/schemas/Customer"
          },
          "session": {
            "$ref": "#/components/schemas/Session"
          },
          "tracking_id": {
            "description": "Is correspondent to Customer's source_id",
            "type": "string",
            "nullable": true
          },
          "metadata": {
            "title": "ClientRedemptionsRedeemRequestBodyMetadata",
            "type": "object",
            "description": "A set of key/value pairs that you can attach to a redemption object. It can be useful for storing additional information about the redemption in a structured format.",
            "nullable": true
          }
        },
        "description": "Response body schema for **POST** `v1/redemptions`."
      },
      "ClientRedemptionsRedeemResponseBody": {
        "title": "ClientRedemptionsRedeemResponseBody",
        "description": "Response body schema for **POST** `v1/redemptions`.",
        "type": "object",
        "properties": {
          "redemptions": {
            "title": "ClientRedemptionsRedeemResponseBodyRedemptions",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Redemption"
            },
            "nullable": true
          },
          "parent_redemption": {
            "$ref": "#/components/schemas/Redemption"
          },
          "order": {
            "$ref": "#/components/schemas/OrderCalculated"
          },
          "inapplicable_redeemables": {
            "title": "ClientRedemptionsRedeemResponseBodyInapplicableRedeemables",
            "type": "array",
            "description": "Lists validation results of each inapplicable redeemable.",
            "items": {
              "$ref": "#/components/schemas/ValidationsRedeemableInapplicable"
            },
            "nullable": true
          },
          "skipped_redeemables": {
            "title": "ClientRedemptionsRedeemResponseBodySkippedRedeemables",
            "type": "array",
            "description": "Lists validation results of each redeemable. If a redeemable can be applied, the API returns `\"status\": \"APPLICABLE\"`.",
            "items": {
              "$ref": "#/components/schemas/ValidationsRedeemableSkipped"
            },
            "nullable": true
          }
        }
      },
      "ClientValidationsValidateRequestBody": {
        "title": "ClientValidationsValidateRequestBody",
        "type": "object",
        "properties": {
          "options": {
            "title": "ClientValidationsValidateRequestBodyOptions",
            "type": "object",
            "description": "Configure parameters returned in the response.",
            "properties": {
              "expand": {
                "title": "ClientValidationsValidateRequestBodyOptionsExpand",
                "type": "array",
                "description": "The expand array lets you configure the parameters included in the response. Depending on the strings included in the array, the response will contain different details. \n\n| **Expand Option** | **Response Body** |\n|:---|:---|\n| [\"order\"] | - Same response as fallback response (without an options object).<br>- Order data with calculated discounts are listed in each child redeemable object.<br>- Metadata not included for each discount type. |\n| [\"redeemable\"] | Expands redeemable objects by including `metadata` for each discount type. |\n| [\"order\", \"redeemable\"] | - Order data with calculated discounts are listed in each child redeemable object.<br>- Includes `metadata` for each discount type. |\n| [\"category\"] | - Returns an expanded `categories` object, showing details about the category. |",
                "items": {
                  "title": "ClientValidationsValidateRequestBodyOptionsExpandItem",
                  "type": "string",
                  "enum": [
                    "order",
                    "redemption",
                    "redeemable",
                    "category"
                  ]
                },
                "nullable": true
              }
            },
            "nullable": true
          },
          "redeemables": {
            "title": "ClientValidationsValidateRequestBodyRedeemables",
            "type": "array",
            "items": {
              "title": "ClientValidationsValidateRequestBodyRedeemablesItem",
              "type": "object",
              "properties": {
                "object": {
                  "type": "string",
                  "enum": [
                    "voucher",
                    "promotion_tier",
                    "promotion_stack"
                  ]
                },
                "id": {
                  "type": "string"
                },
                "gift": {
                  "title": "ClientValidationsValidateRequestBodyRedeemablesItemGift",
                  "type": "object",
                  "description": "Contains information on the number of gift card credits that the customer wants to apply to the order.",
                  "properties": {
                    "credits": {
                      "type": "integer",
                      "description": "The number of credits that the user wants to use from the gift card to fulfill the order. The value of credits cannot be higher than the current balance on the gift card. The value is multiplied by 100 to represent 2 decimal places. For example `10000 cents` for `$100.00`.",
                      "nullable": true
                    }
                  },
                  "nullable": true
                },
                "reward": {
                  "title": "ClientValidationsValidateRequestBodyRedeemablesItemReward",
                  "type": "object",
                  "description": "Contains information about the reward that the customer wants to redeem and the number of points the customer is choosing to use for the reward.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique reward ID assigned by Voucherify. The reward must be assigned to the campaign in order for the user to be able to use the reward.",
                      "example": "rew_EPx1hCTpqzF0HW1z9NKckZH4",
                      "nullable": true
                    },
                    "points": {
                      "type": "integer",
                      "description": "The number of loyalty points that the user wants to spend in order to fulfill the order using a **pay with points** reward. The number of points cannot be higher than the current balance on the loyalty card.",
                      "nullable": true
                    }
                  },
                  "nullable": true
                }
              }
            },
            "nullable": true
          },
          "order": {
            "$ref": "#/components/schemas/Order"
          },
          "customer": {
            "$ref": "#/components/schemas/Customer"
          },
          "session": {
            "$ref": "#/components/schemas/Session"
          },
          "tracking_id": {
            "description": "Is correspondent to Customer's source_id",
            "type": "string",
            "nullable": true
          },
          "metadata": {
            "title": "ClientValidationsValidateRequestBodyMetadata",
            "type": "object",
            "description": "A set of key/value pairs that you can attach to a redemption object. It can be useful for storing additional information about the redemption in a structured format.",
            "nullable": true
          }
        },
        "description": "Response body schema for **POST** `v1/validations`."
      },
      "ClientValidationsValidateResponseBody": {
        "title": "ClientValidationsValidateResponseBody",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of the validation, assigned by Voucherify.",
            "example": "valid_101740aa2869354c6d",
            "nullable": true
          },
          "valid": {
            "type": "boolean",
            "description": "The result of the validation. It takes all of the redeemables into account and returns a `false` if at least one redeemable is inapplicable. Returns `true` if all redeemables are applicable.",
            "nullable": true
          },
          "redeemables": {
            "title": "ClientValidationsValidateResponseBodyRedeemables",
            "type": "array",
            "items": {
              "title": "ClientValidationsValidateResponseBodyRedeemablesItem",
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "APPLICABLE",
                    "INAPPLICABLE",
                    "SKIPPED"
                  ]
                },
                "id": {
                  "type": "string",
                  "description": "Redeemable ID, i.e. the voucher code.",
                  "nullable": true
                },
                "object": {
                  "type": "string",
                  "description": "Redeemable's object type.",
                  "enum": [
                    "voucher",
                    "promotion_tier"
                  ],
                  "nullable": true
                },
                "order": {
                  "$ref": "#/components/schemas/OrderCalculated"
                },
                "applicable_to": {
                  "$ref": "#/components/schemas/ApplicableToResultList"
                },
                "inapplicable_to": {
                  "$ref": "#/components/schemas/InapplicableToResultList"
                },
                "result": {
                  "title": "ClientValidationsValidateResponseBodyRedeemablesItemResult",
                  "type": "object",
                  "properties": {
                    "discount": {
                      "title": "ClientValidationsValidateResponseBodyRedeemablesItemResultDiscount",
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "AMOUNT",
                            "UNIT",
                            "PERCENT",
                            "FIXED"
                          ]
                        },
                        "amount_off": {
                          "type": "number",
                          "description": "Amount taken off the subtotal of a price. Value is multiplied by 100 to precisely represent 2 decimal places. For example, a $10 discount is written as 1000.",
                          "nullable": true
                        },
                        "amount_off_formula": {
                          "type": "string",
                          "nullable": true
                        },
                        "aggregated_amount_limit": {
                          "type": "integer",
                          "description": "Maximum discount amount per order.",
                          "nullable": true
                        },
                        "effect": {
                          "type": "string",
                          "enum": [
                            "APPLY_TO_ORDER",
                            "APPLY_TO_ITEMS",
                            "APPLY_TO_ITEMS_PROPORTIONALLY",
                            "APPLY_TO_ITEMS_PROPORTIONALLY_BY_QUANTITY",
                            "APPLY_TO_ITEMS_BY_QUANTITY",
                            "ADD_MISSING_ITEMS",
                            "ADD_NEW_ITEMS",
                            "ADD_MANY_ITEMS"
                          ]
                        },
                        "is_dynamic": {
                          "type": "boolean",
                          "description": "Flag indicating whether the discount was calculated using a formula.",
                          "nullable": true
                        },
                        "unit_off": {
                          "type": "integer",
                          "description": "Number of units to be granted a full value discount.",
                          "nullable": true
                        },
                        "unit_off_formula": {
                          "type": "string",
                          "description": "Formula used to calculate the number of units.",
                          "nullable": true
                        },
                        "unit_type": {
                          "type": "string",
                          "description": "The product deemed as free, chosen from product inventory (e.g. time, items).",
                          "nullable": true
                        },
                        "product": {
                          "title": "ClientValidationsValidateResponseBodyRedeemablesItemResultDiscountProduct",
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Unique product ID, assigned by Voucherify.",
                              "nullable": true
                            },
                            "source_id": {
                              "type": "string",
                              "description": "Product's source ID.",
                              "nullable": true
                            },
                            "name": {
                              "type": "string",
                              "description": "Product name.",
                              "nullable": true
                            }
                          }
                        },
                        "sku": {
                          "$ref": "#/components/schemas/SimpleSkuDiscountUnit"
                        },
                        "units": {
                          "title": "ClientValidationsValidateResponseBodyRedeemablesItemResultDiscountUnits",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/DiscountUnitMultipleOneUnit"
                          },
                          "nullable": true
                        },
                        "percent_off": {
                          "type": "number",
                          "description": "The percent discount that the customer will receive.",
                          "nullable": true
                        },
                        "percent_off_formula": {
                          "type": "string",
                          "nullable": true
                        },
                        "amount_limit": {
                          "type": "number",
                          "description": "Upper limit allowed to be applied as a discount. Value is multiplied by 100 to precisely represent 2 decimal places. For example, a $6 maximum discount is written as 600.",
                          "nullable": true
                        },
                        "fixed_amount": {
                          "type": "number",
                          "description": "Sets a fixed value for an order total or the item price. The value is multiplied by 100 to precisely represent 2 decimal places. For example, a $10 discount is written as 1000. If the fixed amount is calculated by the formula, i.e. the `fixed_amount_formula` parameter is present in the fixed amount definition, this value becomes the **fallback value**. As a result, if the formula cannot be calculated due to missing metadata, for example, this value will be used as the fixed value.",
                          "nullable": true
                        },
                        "fixed_amount_formula": {
                          "type": "string",
                          "nullable": true
                        }
                      }
                    },
                    "bundle": {
                      "$ref": "#/components/schemas/Bundle"
                    },
                    "gift": {
                      "title": "ClientValidationsValidateResponseBodyRedeemablesItemResultGift",
                      "description": "Stores the amount of gift card credits to be applied.",
                      "type": "object",
                      "properties": {
                        "balance": {
                          "type": "integer",
                          "description": "Available funds at the moment of validation. The value is multiplied by 100 to represent 2 decimal places. For example `10000 cents` for `$100.00`.",
                          "nullable": true
                        },
                        "credits": {
                          "type": "integer",
                          "description": "Total number of gift card credits to be applied. The value is multiplied by 100 to represent 2 decimal places. For example `10000 cents` for `$100.00`.",
                          "nullable": true
                        }
                      },
                      "nullable": true
                    },
                    "loyalty_card": {
                      "title": "ClientValidationsValidateResponseBodyRedeemablesItemResultLoyaltyCard",
                      "description": "Stores the amount of loyalty card points to be applied in the redemption.",
                      "type": "object",
                      "properties": {
                        "points": {
                          "type": "integer",
                          "description": "Total number of loyalty points to be applied in the redemption.",
                          "nullable": true
                        }
                      },
                      "nullable": true
                    },
                    "error": {
                      "$ref": "#/components/schemas/Error"
                    },
                    "details": {
                      "title": "ClientValidationsValidateResponseBodyRedeemablesItemResultDetails",
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "metadata": {
                  "title": "ClientValidationsValidateResponseBodyRedeemablesItemMetadata",
                  "type": "object",
                  "description": "The metadata object stores all custom attributes in the form of key/value pairs assigned to the redeemable.",
                  "nullable": true
                },
                "categories": {
                  "title": "ClientValidationsValidateResponseBodyRedeemablesItemCategories",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CategoryWithStackingRulesType"
                  },
                  "nullable": true
                },
                "campaign_name": {
                  "type": "string",
                  "description": "Campaign name. Displayed only if the `options.expand` is passed with a `redeemable` value in the validation request body.",
                  "nullable": true
                },
                "campaign_id": {
                  "type": "string",
                  "description": "Unique campaign ID assigned by Voucherify. Displayed only if the `options.expand` is passed with a `redeemable` value in the validation request body.",
                  "example": "camp_pqZjuhG6Mgtp4GD0zD7b8hA3",
                  "nullable": true
                },
                "name": {
                  "type": "string",
                  "description": "Name of the promotion tier. Displayed only if the `options.expand` is passed with a `redeemable` value in the validation request body.",
                  "nullable": true
                }
              }
            },
            "nullable": true
          },
          "skipped_redeemables": {
            "title": "ClientValidationsValidateResponseBodySkippedRedeemables",
            "type": "array",
            "description": "Lists validation results of each skipped redeemable.",
            "items": {
              "$ref": "#/components/schemas/ValidationsRedeemableSkipped"
            },
            "nullable": true
          },
          "inapplicable_redeemables": {
            "title": "ClientValidationsValidateResponseBodyInapplicableRedeemables",
            "type": "array",
            "description": "Lists validation results of each inapplicable redeemable.",
            "items": {
              "$ref": "#/components/schemas/ValidationsRedeemableInapplicable"
            },
            "nullable": true
          },
          "order": {
            "$ref": "#/components/schemas/OrderCalculated"
          },
          "tracking_id": {
            "type": "string",
            "example": "track_VAVo1/z+G2GI2LPw==",
            "description": "Hashed customer source ID.",
            "nullable": true
          },
          "session": {
            "$ref": "#/components/schemas/Session"
          },
          "stacking_rules": {
            "$ref": "#/components/schemas/StackingRules"
          }
        },
        "required": [
          "stacking_rules"
        ],
        "description": "Response body schema for **POST** `/validations`."
      },
      "CreatePublicationCampaign": {
        "title": "CreatePublicationCampaign",
        "type": "object",
        "description": "Create publication with campaign.",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of voucher's parent campaign or unique campaign ID that was assigned by Voucherify.",
            "example": "camp_dphuwqH7BOVkgh4JmpDtS32l",
            "nullable": true
          },
          "count": {
            "type": "integer",
            "description": "Number of vouchers to be published to customer.",
            "minimum": 1,
            "maximum": 20,
            "nullable": true
          }
        },
        "required": []
      },
      "Customer": {
        "title": "Customer",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of an existing customer.",
            "nullable": true
          },
          "source_id": {
            "type": "string",
            "description": "A unique identifier of the customer who validates a voucher. It can be a customer ID or email from a CRM system, database, or a third-party service. If you also pass a customer ID (unique ID assigned by Voucherify), the source ID will be ignored.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Customer's first and last name.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "An arbitrary string that you can attach to a customer object.",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "Customer's email address.",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "description": "Customer's phone number. This parameter is mandatory when you try to send out codes to customers via an SMS channel.",
            "nullable": true
          },
          "birthday": {
            "type": "string",
            "description": "`Deprecated`. ~~Customer's birthdate; format YYYY-MM-DD~~.",
            "format": "date",
            "nullable": true
          },
          "birthdate": {
            "type": "string",
            "description": "Customer's birthdate; format YYYY-MM-DD.",
            "format": "date",
            "nullable": true
          },
          "address": {
            "title": "CustomerAddress",
            "type": "object",
            "nullable": true,
            "description": "Customer's address.",
            "properties": {
              "city": {
                "type": "string",
                "description": "City",
                "nullable": true
              },
              "state": {
                "type": "string",
                "description": "State",
                "nullable": true
              },
              "line_1": {
                "type": "string",
                "description": "First line of address.",
                "nullable": true
              },
              "line_2": {
                "type": "string",
                "description": "Second line of address.",
                "nullable": true
              },
              "country": {
                "type": "string",
                "description": "Country.",
                "nullable": true
              },
              "postal_code": {
                "type": "string",
                "description": "Postal code.",
                "nullable": true
              }
            }
          },
          "metadata": {
            "title": "CustomerMetadata",
            "type": "object",
            "description": "A set of custom key/value pairs that you can attach to a customer. The metadata object stores all custom attributes assigned to the customer. It can be useful for storing additional information about the customer in a structured format. This metadata can be used for validating whether the customer qualifies for a discount or it can be used in building customer segments.",
            "nullable": true
          }
        }
      },
      "CustomersActivityListResponseBody": {
        "title": "CustomersActivityListResponseBody",
        "type": "object",
        "description": "Response body schema for **GET** `v1/customers/{customerId}/activity`.",
        "properties": {
          "object": {
            "type": "string",
            "default": "list",
            "description": "The type of the object represented by JSON. This object stores information about customer activities in a dictionary.",
            "enum": [
              "list"
            ],
            "nullable": true
          },
          "data_ref": {
            "type": "string",
            "default": "data",
            "description": "Identifies the name of the attribute that contains the array of customer activity objects.",
            "nullable": true
          },
          "data": {
            "title": "CustomersActivityListResponseBodyData",
            "type": "array",
            "description": "Array of customer activity objects.",
            "items": {
              "$ref": "#/components/schemas/CustomerActivity"
            },
            "nullable": true
          },
          "has_more": {
            "type": "boolean",
            "description": "As query results are always limited (by the limit parameter), the `has_more` flag indicates if there are more records for given filter parameters. This lets you know if you can run another request with a `starting_after_id` query or a different limit to get more records returned in the results.",
            "nullable": true
          },
          "more_starting_after": {
            "type": "string",
            "description": "Returns an ID that can be used to return another page of results. Use the event ID in the `starting_after_id` query parameter to display another page of the results starting after the event with that ID.",
            "nullable": true
          }
        },
        "required": []
      },
      "CustomersCreateRequestBody": {
        "title": "CustomersCreateRequestBody",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of an existing customer.",
            "nullable": true
          },
          "source_id": {
            "type": "string",
            "description": "A unique identifier of the customer who validates a voucher. It can be a customer ID or email from a CRM system, database, or a third-party service. If you also pass a customer ID (unique ID assigned by Voucherify), the source ID will be ignored.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Customer's first and last name.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "An arbitrary string that you can attach to a customer object.",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "Customer's email address.",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "description": "Customer's phone number. This parameter is mandatory when you try to send out codes to customers via an SMS channel.",
            "nullable": true
          },
          "birthday": {
            "type": "string",
            "description": "`Deprecated`. ~~Customer's birthdate; format YYYY-MM-DD~~.",
            "format": "date",
            "nullable": true
          },
          "birthdate": {
            "type": "string",
            "description": "Customer's birthdate; format YYYY-MM-DD.",
            "format": "date",
            "nullable": true
          },
          "address": {
            "title": "CustomersCreateRequestBodyAddress",
            "type": "object",
            "nullable": true,
            "description": "Customer's address.",
            "properties": {
              "city": {
                "type": "string",
                "description": "City",
                "nullable": true
              },
              "state": {
                "type": "string",
                "description": "State",
                "nullable": true
              },
              "line_1": {
                "type": "string",
                "description": "First line of address.",
                "nullable": true
              },
              "line_2": {
                "type": "string",
                "description": "Second line of address.",
                "nullable": true
              },
              "country": {
                "type": "string",
                "description": "Country.",
                "nullable": true
              },
              "postal_code": {
                "type": "string",
                "description": "Postal code.",
                "nullable": true
              }
            }
          },
          "metadata": {
            "title": "CustomersCreateRequestBodyMetadata",
            "type": "object",
            "description": "A set of custom key/value pairs that you can attach to a customer. The metadata object stores all custom attributes assigned to the customer. It can be useful for storing additional information about the customer in a structured format. This metadata can be used for validating whether the customer qualifies for a discount or it can be used in building customer segments.",
            "nullable": true
          }
        },
        "description": "Request body schema for **POST** `v1/customers`."
      },
      "CustomersCreateResponseBody": {
        "title": "CustomersCreateResponseBody",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of an existing customer that will be linked to redemption in this request.",
            "nullable": true
          },
          "source_id": {
            "type": "string",
            "description": "A unique identifier of the customer who validates a voucher. It can be a customer ID or email from a CRM system, database, or a third-party service. If you also pass a customer ID (unique ID assigned by Voucherify), the source ID will be ignored.",
            "nullable": true
          },
          "summary": {
            "$ref": "#/components/schemas/CustomerSummary"
          },
          "loyalty": {
            "$ref": "#/components/schemas/CustomerLoyalty"
          },
          "referrals": {
            "$ref": "#/components/schemas/CustomerReferrals"
          },
          "system_metadata": {
            "title": "CustomersCreateResponseBodySystemMetadata",
            "type": "object",
            "description": "Object used to store system metadata information.",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "description": "Timestamp representing the date and time when the customer was created. The value is shown in the ISO 8601 format.",
            "example": "2022-08-30T06:32:07.380Z",
            "format": "date-time",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "description": "Timestamp representing the date and time when the customer was updated. The value is shown in the ISO 8601 format.",
            "example": "2022-08-31T06:32:07.380Z",
            "format": "date-time",
            "nullable": true
          },
          "assets": {
            "title": "CustomersCreateResponseBodyAssets",
            "type": "object",
            "description": "Contains information about the customer's cockpit.",
            "properties": {
              "cockpit_url": {
                "type": "string",
                "description": "Customer's cockpit URL address.",
                "nullable": true
              }
            },
            "nullable": true
          },
          "object": {
            "type": "string",
            "description": "The type of the object represented by JSON.",
            "default": "customer",
            "enum": [
              "customer"
            ],
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Customer's first and last name.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "An arbitrary string that you can attach to a customer object.",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "Customer's email address.",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "description": "Customer's phone number. This parameter is mandatory when you try to send out codes to customers via an SMS channel.",
            "nullable": true
          },
          "birthday": {
            "type": "string",
            "description": "`Deprecated`. ~~Customer's birthdate; format YYYY-MM-DD~~.",
            "format": "date",
            "nullable": true
          },
          "birthdate": {
            "type": "string",
            "description": "Customer's birthdate; format YYYY-MM-DD.",
            "format": "date",
            "nullable": true
          },
          "address": {
            "title": "CustomersCreateResponseBodyAddress",
            "type": "object",
            "nullable": true,
            "description": "Customer's address.",
            "properties": {
              "city": {
                "type": "string",
                "description": "City",
                "nullable": true
              },
              "state": {
                "type": "string",
                "description": "State",
                "nullable": true
              },
              "line_1": {
                "type": "string",
                "description": "First line of address.",
                "nullable": true
              },
              "line_2": {
                "type": "string",
                "description": "Second line of address.",
                "nullable": true
              },
              "country": {
                "type": "string",
                "description": "Country.",
                "nullable": true
              },
              "postal_code": {
                "type": "string",
                "description": "Postal code.",
                "nullable": true
              }
            }
          },
          "metadata": {
            "title": "CustomersCreateResponseBodyMetadata",
            "type": "object",
            "description": "A set of custom key/value pairs that you can attach to a customer. The metadata object stores all custom attributes assigned to the customer. It can be useful for storing additional information about the customer in a structured format. This metadata can be used for validating whether the customer qualifies for a discount or it can be used in building customer segments.",
            "nullable": true
          }
        },
        "description": "Response body for **POST** `v1/customers`."
      },
      "CustomersGetResponseBody": {
        "title": "CustomersGetResponseBody",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of an existing customer that will be linked to redemption in this request.",
            "nullable": true
          },
          "source_id": {
            "type": "string",
            "description": "A unique identifier of the customer who validates a voucher. It can be a customer ID or email from a CRM system, database, or a third-party service. If you also pass a customer ID (unique ID assigned by Voucherify), the source ID will be ignored.",
            "nullable": true
          },
          "summary": {
            "$ref": "#/components/schemas/CustomerSummary"
          },
          "loyalty": {
            "$ref": "#/components/schemas/CustomerLoyalty"
          },
          "referrals": {
            "$ref": "#/components/schemas/CustomerReferrals"
          },
          "system_metadata": {
            "title": "CustomersGetResponseBodySystemMetadata",
            "type": "object",
            "description": "Object used to store system metadata information.",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "description": "Timestamp representing the date and time when the customer was created. The value is shown in the ISO 8601 format.",
            "example": "2022-08-30T06:32:07.380Z",
            "format": "date-time",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "description": "Timestamp representing the date and time when the customer was updated. The value is shown in the ISO 8601 format.",
            "example": "2022-08-31T06:32:07.380Z",
            "format": "date-time",
            "nullable": true
          },
          "assets": {
            "title": "CustomersGetResponseBodyAssets",
            "type": "object",
            "description": "Contains information about the customer's cockpit.",
            "properties": {
              "cockpit_url": {
                "type": "string",
                "description": "Customer's cockpit URL address.",
                "nullable": true
              }
            },
            "nullable": true
          },
          "object": {
            "type": "string",
            "description": "The type of the object represented by JSON.",
            "default": "customer",
            "enum": [
              "customer"
            ],
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Customer's first and last name.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "An arbitrary string that you can attach to a customer object.",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "Customer's email address.",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "description": "Customer's phone number. This parameter is mandatory when you try to send out codes to customers via an SMS channel.",
            "nullable": true
          },
          "birthday": {
            "type": "string",
            "description": "`Deprecated`. ~~Customer's birthdate; format YYYY-MM-DD~~.",
            "format": "date",
            "nullable": true
          },
          "birthdate": {
            "type": "string",
            "description": "Customer's birthdate; format YYYY-MM-DD.",
            "format": "date",
            "nullable": true
          },
          "address": {
            "title": "CustomersGetResponseBodyAddress",
            "type": "object",
            "nullable": true,
            "description": "Customer's address.",
            "properties": {
              "city": {
                "type": "string",
                "description": "City",
                "nullable": true
              },
              "state": {
                "type": "string",
                "description": "State",
                "nullable": true
              },
              "line_1": {
                "type": "string",
                "description": "First line of address.",
                "nullable": true
              },
              "line_2": {
                "type": "string",
                "description": "Second line of address.",
                "nullable": true
              },
              "country": {
                "type": "string",
                "description": "Country.",
                "nullable": true
              },
              "postal_code": {
                "type": "string",
                "description": "Postal code.",
                "nullable": true
              }
            }
          },
          "metadata": {
            "title": "CustomersGetResponseBodyMetadata",
            "type": "object",
            "description": "A set of custom key/value pairs that you can attach to a customer. The metadata object stores all custom attributes assigned to the customer. It can be useful for storing additional information about the customer in a structured format. This metadata can be used for validating whether the customer qualifies for a discount or it can be used in building customer segments.",
            "nullable": true
          }
        },
        "description": "Response body schema for **GET** `v1/customers/{customerId}`."
      },
      "CustomersImportCSVRequestBody": {
        "title": "CustomersImportCSVRequestBody",
        "type": "object",
        "format": "binary",
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "description": "File path.",
            "nullable": true
          }
        },
        "required": [],
        "description": "Response body schema for **POST** `v1/customers/importCSV`."
      },
      "CustomersImportCsvCreateResponseBody": {
        "title": "CustomersImportCsvCreateResponseBody",
        "type": "object",
        "properties": {
          "async_action_id": {
            "type": "string",
            "example": "aa_0a875d56c805df6601",
            "description": "The ID of the scheduled asynchronous action.",
            "nullable": true
          }
        },
        "required": [],
        "description": "Response body schema for **POST** `v1/customers/importCSV`."
      },
      "CustomersListResponseBody": {
        "title": "CustomersListResponseBody",
        "description": "Response body schema for **GET** `v1/customers`.",
        "properties": {
          "object": {
            "type": "string",
            "default": "list",
            "description": "The type of the object represented by JSON. This object stores information about customers in a dictionary.",
            "nullable": true
          },
          "data_ref": {
            "type": "string",
            "default": "customers",
            "description": "Identifies the name of the attribute that contains the array of customer objects.",
            "nullable": true
          },
          "customers": {
            "title": "CustomersListResponseBodyCustomers",
            "type": "array",
            "description": "Contains array of customer objects.",
            "items": {
              "$ref": "#/components/schemas/CustomerWithSummaryLoyaltyReferrals"
            },
            "nullable": true
          },
          "total": {
            "type": "integer",
            "description": "Total number of customers.",
            "nullable": true
          },
          "has_more": {
            "type": "boolean",
            "description": "As query results are always limited (by the limit parameter), the `has_more` flag indicates if there are more records for given filter parameters. This lets you know if you can run another request (with a different end date filter) to get more records returned in the results.",
            "nullable": true
          }
        },
        "required": []
      },
      "CustomersMetadataUpdateInBulkRequestBody": {
        "title": "CustomersMetadataUpdateInBulkRequestBody",
        "type": "object",
        "description": "Request body schema for **POST** `v1/customers/metadata/async`.",
        "properties": {
          "source_ids": {
            "title": "CustomersMetadataUpdateInBulkRequestBodySourceIds",
            "type": "array",
            "description": "An array of customer `source_id`'s.",
            "items": {
              "title": "CustomersMetadataUpdateInBulkRequestBodySourceIdsItem",
              "type": "string"
            },
            "nullable": true
          },
          "metadata": {
            "title": "CustomersMetadataUpdateInBulkRequestBodyMetadata",
            "type": "object",
            "description": "Metadata key value pairs to be updated. A set of custom key/value pairs that you can attach to a customer. The metadata object stores all custom attributes assigned to the customer. It can be useful for storing additional information about the customer in a structured format. This metadata can be used for validating whether the customer qualifies for a discount or it can be used in building customer segments.",
            "nullable": true
          }
        },
        "required": []
      },
      "CustomersMetadataUpdateInBulkResponseBody": {
        "title": "CustomersMetadataUpdateInBulkResponseBody",
        "type": "object",
        "properties": {
          "async_action_id": {
            "type": "string",
            "example": "aa_0a875d56c805df6601",
            "description": "The ID of the scheduled asynchronous action.",
            "nullable": true
          }
        },
        "required": [],
        "description": "Response body schema for **POST** `v1/customers/metadata/async`."
      },
      "CustomersPermanentDeletionCreateResponseBody": {
        "title": "CustomersPermanentDeletionCreateResponseBody",
        "type": "object",
        "description": "Response body schema for **POST** `v1/customers/{customerId}/permanent-deletion`.",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique permanent deletion object ID.",
            "example": "del_mgzqZNwUnwnt1Ddw6phEG90Q",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "example": "2022-09-02T17:55:47.865Z",
            "description": "Timestamp representing the date and time when the customer was requested to be deleted in ISO 8601 format.",
            "format": "date-time",
            "nullable": true
          },
          "related_object_id": {
            "type": "string",
            "example": "cust_m557pDDl4IGXexkU6KOQ2Dwi",
            "description": "Unique customer ID that is being deleted.",
            "nullable": true
          },
          "related_object": {
            "type": "string",
            "description": "Object being deleted.",
            "default": "customer",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "Deletion status.",
            "default": "DONE",
            "nullable": true
          },
          "data_json": {
            "title": "CustomersPermanentDeletionCreateResponseBodyDataJson",
            "type": "object",
            "description": "Statistics summarizing the number of related information that was deleted.",
            "required": [],
            "properties": {
              "events": {
                "type": "integer",
                "description": "Number of events deleted.",
                "nullable": true
              },
              "customer_events": {
                "type": "integer",
                "description": "Number of customer events deleted.",
                "nullable": true
              },
              "daily_events": {
                "type": "integer",
                "description": "Number of daily events deleted.",
                "nullable": true
              },
              "segments": {
                "type": "integer",
                "description": "Number of segments deleted.",
                "nullable": true
              },
              "orders": {
                "type": "integer",
                "description": "Number of orders deleted.",
                "nullable": true
              },
              "order_events": {
                "type": "integer",
                "description": "Number of order events deleted.",
                "nullable": true
              },
              "customer": {
                "type": "integer",
                "description": "Number of customers deleted.",
                "default": 1,
                "nullable": true
              }
            },
            "nullable": true
          },
          "object": {
            "type": "string",
            "description": "The type of the object represented by JSON.",
            "default": "pernament_deletion",
            "nullable": true
          }
        },
        "required": []
      },
      "CustomersRedeemablesListResponseBody": {
        "title": "CustomersRedeemablesListResponseBody",
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "description": "The type of the object represented by JSON. This object stores information about customer redeemables.",
            "default": "list",
            "nullable": true
          },
          "data_ref": {
            "type": "string",
            "description": "Identifies the name of the JSON property that contains the array of redeemables.",
            "default": "data",
            "nullable": true
          },
          "data": {
            "title": "CustomersRedeemablesListResponseBodyData",
            "type": "array",
            "description": "A dictionary that contains an array of redeemables.",
            "items": {
              "$ref": "#/components/schemas/CustomerRedeemable"
            },
            "nullable": true
          },
          "total": {
            "type": "integer",
            "description": "Total number of results returned.",
            "nullable": true
          },
          "has_more": {
            "type": "boolean",
            "description": "As query results are always limited (by the limit parameter), the `has_more` flag indicates if there are more records for given filter parameters. This lets you know if you can run another request with a `starting_after_id` query or a different limit to get more records returned in the results.",
            "nullable": true
          },
          "more_starting_after": {
            "type": "string",
            "description": "Returns an ID that can be used to return another page of results. Use the ID in the `starting_after_id` query parameter to display another page of the results occuring after the field with that ID.",
            "nullable": true
          }
        },
        "required": [],
        "description": "Response body schema for **GET** `v1/customers/{customerId}/redeemables`."
      },
      "CustomersSegmentsListResponseBody": {
        "title": "CustomersSegmentsListResponseBody",
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "description": "The type of the object represented by JSON. This object stores information about customer segments.",
            "default": "list",
            "nullable": true
          },
          "data_ref": {
            "type": "string",
            "description": "Identifies the name of the JSON property that contains the array of segment IDs.",
            "default": "data",
            "nullable": true
          },
          "data": {
            "title": "CustomersSegmentsListResponseBodyData",
            "type": "array",
            "description": "A dictionary that contains an array of segment IDs and names.",
            "items": {
              "$ref": "#/components/schemas/SimpleSegment"
            },
            "nullable": true
          },
          "total": {
            "type": "integer",
            "description": "Total number of segments the customer belongs to.",
            "nullable": true
          }
        },
        "required": [],
        "description": "Response body schema for **GET** `v1/customers/{customerId}/segments`."
      },
      "CustomersUpdateInBulkRequestBody": {
        "title": "CustomersUpdateInBulkRequestBody",
        "type": "object",
        "properties": {
          "source_id": {
            "type": "string",
            "description": "Unique customer source ID.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Customer's first and last name.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "An arbitrary string that you can attach to a customer object.",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "Customer's email address.",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "description": "Customer's phone number. This parameter is mandatory when you try to send out codes to customers via an SMS channel.",
            "nullable": true
          },
          "birthday": {
            "type": "string",
            "description": "`Deprecated`. ~~Customer's birthdate; format YYYY-MM-DD~~.",
            "format": "date",
            "nullable": true
          },
          "birthdate": {
            "type": "string",
            "description": "Customer's birthdate; format YYYY-MM-DD.",
            "format": "date",
            "nullable": true
          },
          "address": {
            "title": "CustomersUpdateInBulkRequestBodyAddress",
            "type": "object",
            "nullable": true,
            "description": "Customer's address.",
            "properties": {
              "city": {
                "type": "string",
                "description": "City",
                "nullable": true
              },
              "state": {
                "type": "string",
                "description": "State",
                "nullable": true
              },
              "line_1": {
                "type": "string",
                "description": "First line of address.",
                "nullable": true
              },
              "line_2": {
                "type": "string",
                "description": "Second line of address.",
                "nullable": true
              },
              "country": {
                "type": "string",
                "description": "Country.",
                "nullable": true
              },
              "postal_code": {
                "type": "string",
                "description": "Postal code.",
                "nullable": true
              }
            }
          },
          "metadata": {
            "title": "CustomersUpdateInBulkRequestBodyMetadata",
            "type": "object",
            "description": "A set of custom key/value pairs that you can attach to a customer. The metadata object stores all custom attributes assigned to the customer. It can be useful for storing additional information about the customer in a structured format. This metadata can be used for validating whether the customer qualifies for a discount or it can be used in building customer segments.",
            "nullable": true
          }
        },
        "description": "Request body schema for **POST** `v1/customers/bulk/async`."
      },
      "CustomersUpdateInBulkResponseBody": {
        "title": "CustomersUpdateInBulkResponseBody",
        "type": "object",
        "properties": {
          "async_action_id": {
            "type": "string",
            "example": "aa_0a875d56c805df6601",
            "description": "The ID of the scheduled asynchronous action.",
            "nullable": true
          }
        },
        "required": [],
        "description": "Response body schema for **POST** `v1/customers/bulk/async`."
      },
      "CustomersUpdateRequestBody": {
        "title": "CustomersUpdateRequestBody",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Customer's first and last name.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "An arbitrary string that you can attach to a customer object.",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "Customer's email address.",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "description": "Customer's phone number. This parameter is mandatory when you try to send out codes to customers via an SMS channel.",
            "nullable": true
          },
          "birthday": {
            "type": "string",
            "description": "`Deprecated`. ~~Customer's birthdate; format YYYY-MM-DD~~.",
            "format": "date",
            "nullable": true
          },
          "birthdate": {
            "type": "string",
            "description": "Customer's birthdate; format YYYY-MM-DD.",
            "format": "date",
            "nullable": true
          },
          "address": {
            "title": "CustomersUpdateRequestBodyAddress",
            "type": "object",
            "nullable": true,
            "description": "Customer's address.",
            "properties": {
              "city": {
                "type": "string",
                "description": "City",
                "nullable": true
              },
              "state": {
                "type": "string",
                "description": "State",
                "nullable": true
              },
              "line_1": {
                "type": "string",
                "description": "First line of address.",
                "nullable": true
              },
              "line_2": {
                "type": "string",
                "description": "Second line of address.",
                "nullable": true
              },
              "country": {
                "type": "string",
                "description": "Country.",
                "nullable": true
              },
              "postal_code": {
                "type": "string",
                "description": "Postal code.",
                "nullable": true
              }
            }
          },
          "metadata": {
            "title": "CustomersUpdateRequestBodyMetadata",
            "type": "object",
            "description": "A set of custom key/value pairs that you can attach to a customer. The metadata object stores all custom attributes assigned to the customer. It can be useful for storing additional information about the customer in a structured format. This metadata can be used for validating whether the customer qualifies for a discount or it can be used in building customer segments.",
            "nullable": true
          }
        },
        "description": "Request body schema for **PUT** `v1/customers/{customerId}`."
      },
      "CustomersUpdateResponseBody": {
        "title": "CustomersUpdateResponseBody",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of an existing customer that will be linked to redemption in this request.",
            "nullable": true
          },
          "source_id": {
            "type": "string",
            "description": "A unique identifier of the customer who validates a voucher. It can be a customer ID or email from a CRM system, database, or a third-party service. If you also pass a customer ID (unique ID assigned by Voucherify), the source ID will be ignored.",
            "nullable": true
          },
          "summary": {
            "$ref": "#/components/schemas/CustomerSummary"
          },
          "loyalty": {
            "$ref": "#/components/schemas/CustomerLoyalty"
          },
          "referrals": {
            "$ref": "#/components/schemas/CustomerReferrals"
          },
          "system_metadata": {
            "title": "CustomersUpdateResponseBodySystemMetadata",
            "type": "object",
            "description": "Object used to store system metadata information.",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "description": "Timestamp representing the date and time when the customer was created. The value is shown in the ISO 8601 format.",
            "example": "2022-08-30T06:32:07.380Z",
            "format": "date-time",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "description": "Timestamp representing the date and time when the customer was updated. The value is shown in the ISO 8601 format.",
            "example": "2022-08-31T06:32:07.380Z",
            "format": "date-time",
            "nullable": true
          },
          "assets": {
            "title": "CustomersUpdateResponseBodyAssets",
            "type": "object",
            "description": "Contains information about the customer's cockpit.",
            "properties": {
              "cockpit_url": {
                "type": "string",
                "description": "Customer's cockpit URL address.",
                "nullable": true
              }
            },
            "nullable": true
          },
          "object": {
            "type": "string",
            "description": "The type of the object represented by JSON.",
            "default": "customer",
            "enum": [
              "customer"
            ],
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Customer's first and last name.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "An arbitrary string that you can attach to a customer object.",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "Customer's email address.",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "description": "Customer's phone number. This parameter is mandatory when you try to send out codes to customers via an SMS channel.",
            "nullable": true
          },
          "birthday": {
            "type": "string",
            "description": "`Deprecated`. ~~Customer's birthdate; format YYYY-MM-DD~~.",
            "format": "date",
            "nullable": true
          },
          "birthdate": {
            "type": "string",
            "description": "Customer's birthdate; format YYYY-MM-DD.",
            "format": "date",
            "nullable": true
          },
          "address": {
            "title": "CustomersUpdateResponseBodyAddress",
            "type": "object",
            "nullable": true,
            "description": "Customer's address.",
            "properties": {
              "city": {
                "type": "string",
                "description": "City",
                "nullable": true
              },
              "state": {
                "type": "string",
                "description": "State",
                "nullable": true
              },
              "line_1": {
                "type": "string",
                "description": "First line of address.",
                "nullable": true
              },
              "line_2": {
                "type": "string",
                "description": "Second line of address.",
                "nullable": true
              },
              "country": {
                "type": "string",
                "description": "Country.",
                "nullable": true
              },
              "postal_code": {
                "type": "string",
                "description": "Postal code.",
                "nullable": true
              }
            }
          },
          "metadata": {
            "title": "CustomersUpdateResponseBodyMetadata",
            "type": "object",
            "description": "A set of custom key/value pairs that you can attach to a customer. The metadata object stores all custom attributes assigned to the customer. It can be useful for storing additional information about the customer in a structured format. This metadata can be used for validating whether the customer qualifies for a discount or it can be used in building customer segments.",
            "nullable": true
          }
        },
        "description": "Response body schema for **PUT** `v1/customers/{customerId}`."
      },
      "EventsCreateRequestBody": {
        "title": "EventsCreateRequestBody",
        "type": "object",
        "description": "Request body schema for **POST** `v1/events`.",
        "properties": {
          "event": {
            "type": "string",
            "description": "Event name. This is the same name that you used to define a custom event in the **Dashboard** > **Project Settings** > **Event Schema**.",
            "minLength": 1,
            "maxLength": 300,
            "nullable": true
          },
          "customer": {
            "$ref": "#/components/schemas/Customer"
          },
          "referral": {
            "title": "EventsCreateRequestBodyReferral",
            "type": "object",
            "description": "If a **conversion event** for a referral program is set to a custom event, then you need to send the referral code in the payload to make a record of the conversion event. ",
            "properties": {
              "code": {
                "type": "string",
                "description": "A code through which a new visitor has been referred to a service.",
                "nullable": true
              },
              "referrer_id": {
                "type": "string",
                "description": "Unique ID of the referring person - it is optional and not required if the referral **code** is provided.",
                "example": "cust_Vzck5i8U3OhcEUFY6MKhN9Rv",
                "nullable": true
              }
            },
            "required": [],
            "nullable": true
          },
          "loyalty": {
            "title": "EventsCreateRequestBodyLoyalty",
            "type": "object",
            "description": "If an earning rule in a loyalty program is based on a custom event. This objects let's you specify the loyalty card to which the custom event should be attributed to.",
            "properties": {
              "code": {
                "type": "string",
                "description": "Code of the loyalty card to receive points based on the calculation method defined in the related earning rule. An earning rule is triggered for the loyalty card when the event passed in the `event` parameter of the request payload gets sent along with this loyalty card code.",
                "example": "L-CARD-BUHuH6g",
                "nullable": true
              }
            },
            "required": [],
            "nullable": true
          },
          "metadata": {
            "title": "EventsCreateRequestBodyMetadata",
            "type": "object",
            "description": "The metadata object stores all custom attributes assigned to the event. A set of key/value pairs that you can attach to an event object. It can be useful for storing additional information about the event in a structured format. Event metadata schema is defined in the **Dashboard** > **Project Settings** > **Event Schema** > **Edit particular event** > **Metadata property definition**.",
            "nullable": true
          }
        },
        "required": [
          "customer"
        ]
      },
      "EventsCreateResponseBody": {
        "title": "EventsCreateResponseBody",
        "type": "object",
        "description": "Response body schema for **POST** `v1/events`.",
        "properties": {
          "object": {
            "type": "string",
            "default": "event",
            "description": "The object represented is an `event`.",
            "enum": [
              "event"
            ],
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "The event name.",
            "nullable": true
          },
          "customer": {
            "$ref": "#/components/schemas/SimpleCustomerRequiredObjectType"
          },
          "referral": {
            "title": "EventsCreateResponseBodyReferral",
            "type": "object",
            "description": "A `null` referral object.",
            "nullable": true
          },
          "loyalty": {
            "title": "EventsCreateResponseBodyLoyalty",
            "type": "object",
            "description": "A `null` loyalty object.",
            "nullable": true
          },
          "metadata": {
            "title": "EventsCreateResponseBodyMetadata",
            "type": "object",
            "nullable": true
          }
        },
        "required": [
          "customer"
        ]
      },
      "ExportsCreateRequestBody": {
        "title": "ExportsCreateRequestBody",
        "type": "object",
        "properties": {
          "exported_object": {
            "type": "string",
            "enum": [
              "voucher",
              "redemption",
              "customer",
              "publication",
              "order",
              "points_expiration",
              "voucher_transactions"
            ],
            "nullable": true
          },
          "parameters": {
            "title": "ExportsCreateRequestBodyParameters",
            "type": "object",
            "properties": {
              "order": {
                "type": "string",
                "enum": [
                  "-created_at",
                  "created_at",
                  "-updated_at",
                  "updated_at",
                  "-code",
                  "code",
                  "-id",
                  "id",
                  "-voucher_code",
                  "voucher_code",
                  "-tracking_id",
                  "tracking_id",
                  "-customer_id",
                  "customer_id",
                  "-name",
                  "name",
                  "-email",
                  "email",
                  "-source_id",
                  "source_id",
                  "-channel",
                  "channel",
                  "-status",
                  "status",
                  "-expires_at",
                  "expires_at"
                ],
                "nullable": true
              },
              "fields": {
                "title": "ExportsCreateRequestBodyParametersFields",
                "type": "array",
                "items": {
                  "title": "ExportsCreateRequestBodyParametersFieldsItem",
                  "type": "string",
                  "enum": [
                    "code",
                    "voucher_type",
                    "value",
                    "formula",
                    "discount_type",
                    "campaign",
                    "category",
                    "start_date",
                    "expiration_date",
                    "gift_balance",
                    "loyalty_balance",
                    "redemption_quantity",
                    "redemption_count",
                    "active",
                    "qr_code",
                    "bar_code",
                    "metadata",
                    "id",
                    "is_referral_code",
                    "created_at",
                    "updated_at",
                    "validity_timeframe_interval",
                    "validity_timeframe_duration",
                    "validity_day_of_week",
                    "discount_amount_limit",
                    "campaign_id",
                    "additional_info",
                    "customer_id",
                    "discount_effect",
                    "discount_unit_type",
                    "discount_unit_effect",
                    "validation_rules_id",
                    "customer_source_id",
                    "object",
                    "date",
                    "voucher_code",
                    "promotion_tier_id",
                    "customer_name",
                    "tracking_id",
                    "order_id",
                    "order_amount",
                    "gift_amount",
                    "loyalty_points",
                    "result",
                    "failure_code",
                    "failure_message",
                    "name",
                    "description",
                    "email",
                    "source_id",
                    "address_city",
                    "address_state",
                    "address_line_1",
                    "address_line_2",
                    "address_country",
                    "address_postal_code",
                    "redemptions_total_redeemed",
                    "redemptions_total_failed",
                    "redemptions_total_succeeded",
                    "redemptions_total_rolled_back",
                    "redemptions_total_rollback_failed",
                    "redemptions_total_rollback_succeeded",
                    "orders_total_amount",
                    "orders_total_count",
                    "orders_average_amount",
                    "orders_last_order_amount",
                    "orders_last_order_date",
                    "loyalty_referred_customers",
                    "phone",
                    "birthday",
                    "birthdate",
                    "channel",
                    "is_winner",
                    "status",
                    "amount",
                    "discount_amount",
                    "items_discount_amount",
                    "total_discount_amount",
                    "total_amount",
                    "referrer_id",
                    "voucher_id",
                    "points",
                    "expires_at",
                    "type",
                    "reason",
                    "source",
                    "balance",
                    "related_transaction_id",
                    "details"
                  ]
                },
                "nullable": true,
                "description": "Array of strings containing the data in the export. These fields define the headers in the CSV file."
              },
              "filters": {
                "title": "ExportsCreateRequestBodyParametersFilters",
                "nullable": true,
                "type": "object",
                "description": "Allowed additional properties must start with \"metadata.\" or \"redemption.\" and Allowed additional properties must start with \"metadata.\" and Allowed additional properties must start with \"metadata.\" or \"address.\" or \"summary.\" or \"loyalty.\" or \"loyalty_tier.\" or \"loyalty_points.\" or \"system_metadata.\""
              }
            },
            "nullable": true
          }
        }
      },
      "ExportsCreateResponseBody": {
        "title": "ExportsCreateResponseBody",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique export ID.",
            "nullable": true
          },
          "object": {
            "type": "string",
            "default": "export",
            "enum": [
              "export"
            ],
            "description": "The type of object being represented. This object stores information about the export.",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp representing the date and time when the export was scheduled in ISO 8601 format.",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "Status of the export. Informs you whether the export has already been completed, i.e. indicates whether the file containing the exported data has been generated.",
            "default": "SCHEDULED",
            "enum": [
              "SCHEDULED"
            ],
            "nullable": true
          },
          "channel": {
            "type": "string",
            "description": "The channel through which the export was triggered.",
            "nullable": true
          },
          "result": {
            "title": "ExportsCreateResponseBodyResult",
            "type": "object",
            "description": "Contains the URL of the CSV file.",
            "nullable": true
          },
          "user_id": {
            "type": "string",
            "description": "Identifies the specific user who initiated the export through the Voucherify Dashboard; returned when the channel value is WEBSITE.",
            "nullable": true
          },
          "exported_object": {
            "type": "string",
            "enum": [
              "voucher",
              "redemption",
              "customer",
              "publication",
              "order",
              "points_expiration",
              "voucher_transactions"
            ],
            "nullable": true
          },
          "parameters": {
            "title": "ExportsCreateResponseBodyParameters",
            "type": "object",
            "properties": {
              "order": {
                "type": "string",
                "enum": [
                  "-created_at",
                  "created_at",
                  "-updated_at",
                  "updated_at",
                  "-code",
                  "code",
                  "-id",
                  "id",
                  "-voucher_code",
                  "voucher_code",
                  "-tracking_id",
                  "tracking_id",
                  "-customer_id",
                  "customer_id",
                  "-name",
                  "name",
                  "-email",
                  "email",
                  "-source_id",
                  "source_id",
                  "-channel",
                  "channel",
                  "-status",
                  "status",
                  "-expires_at",
                  "expires_at"
                ],
                "nullable": true
              },
              "fields": {
                "title": "ExportsCreateResponseBodyParametersFields",
                "type": "array",
                "items": {
                  "title": "ExportsCreateResponseBodyParametersFieldsItem",
                  "type": "string",
                  "enum": [
                    "code",
                    "voucher_type",
                    "value",
                    "formula",
                    "discount_type",
                    "campaign",
                    "category",
                    "start_date",
                    "expiration_date",
                    "gift_balance",
                    "loyalty_balance",
                    "redemption_quantity",
                    "redemption_count",
                    "active",
                    "qr_code",
                    "bar_code",
                    "metadata",
                    "id",
                    "is_referral_code",
                    "created_at",
                    "updated_at",
                    "validity_timeframe_interval",
                    "validity_timeframe_duration",
                    "validity_day_of_week",
                    "discount_amount_limit",
                    "campaign_id",
                    "additional_info",
                    "customer_id",
                    "discount_effect",
                    "discount_unit_type",
                    "discount_unit_effect",
                    "validation_rules_id",
                    "customer_source_id",
                    "object",
                    "date",
                    "voucher_code",
                    "promotion_tier_id",
                    "customer_name",
                    "tracking_id",
                    "order_id",
                    "order_amount",
                    "gift_amount",
                    "loyalty_points",
                    "result",
                    "failure_code",
                    "failure_message",
                    "name",
                    "description",
                    "email",
                    "source_id",
                    "address_city",
                    "address_state",
                    "address_line_1",
                    "address_line_2",
                    "address_country",
                    "address_postal_code",
                    "redemptions_total_redeemed",
                    "redemptions_total_failed",
                    "redemptions_total_succeeded",
                    "redemptions_total_rolled_back",
                    "redemptions_total_rollback_failed",
                    "redemptions_total_rollback_succeeded",
                    "orders_total_amount",
                    "orders_total_count",
                    "orders_average_amount",
                    "orders_last_order_amount",
                    "orders_last_order_date",
                    "loyalty_referred_customers",
                    "phone",
                    "birthday",
                    "birthdate",
                    "channel",
                    "is_winner",
                    "status",
                    "amount",
                    "discount_amount",
                    "items_discount_amount",
                    "total_discount_amount",
                    "total_amount",
                    "referrer_id",
                    "voucher_id",
                    "points",
                    "expires_at",
                    "type",
                    "reason",
                    "source",
                    "balance",
                    "related_transaction_id",
                    "details"
                  ]
                },
                "nullable": true,
                "description": "Array of strings containing the data in the export. These fields define the headers in the CSV file."
              },
              "filters": {
                "title": "ExportsCreateResponseBodyParametersFilters",
                "nullable": true,
                "type": "object",
                "description": "Allowed additional properties must start with \"metadata.\" or \"redemption.\" and Allowed additional properties must start with \"metadata.\" and Allowed additional properties must start with \"metadata.\" or \"address.\" or \"summary.\" or \"loyalty.\" or \"loyalty_tier.\" or \"loyalty_points.\" or \"system_metadata.\""
              }
            },
            "nullable": true
          }
        }
      },
      "ExportsGetResponseBody": {
        "title": "ExportsGetResponseBody",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique export ID.",
            "nullable": true
          },
          "object": {
            "type": "string",
            "default": "export",
            "enum": [
              "export"
            ],
            "description": "The type of object being represented. This object stores information about the export.",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp representing the date and time when the export was scheduled in ISO 8601 format.",
            "nullable": true
          },
          "status": {
            "enum": [
              "SCHEDULED",
              "IN_PROGRESS",
              "DONE",
              "ERROR"
            ],
            "type": "string",
            "description": "Status of the export. Informs you whether the export has already been completed, i.e. indicates whether the file containing the exported data has been generated.",
            "nullable": true
          },
          "channel": {
            "type": "string",
            "description": "The channel through which the export was triggered.",
            "nullable": true
          },
          "result": {
            "title": "ExportsGetResponseBodyResult",
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "description": "URL of the CSV file location. It contains the token used for authorization in the Download export method.",
                "nullable": true
              }
            },
            "nullable": true
          },
          "user_id": {
            "type": "string",
            "nullable": true,
            "description": "Identifies the specific user who initiated the export through the Voucherify Dashboard; returned when the channel value is WEBSITE."
          },
          "exported_object": {
            "type": "string",
            "enum": [
              "voucher",
              "redemption",
              "customer",
              "publication",
              "order",
              "points_expiration",
              "voucher_transactions"
            ],
            "nullable": true
          },
          "parameters": {
            "title": "ExportsGetResponseBodyParameters",
            "type": "object",
            "properties": {
              "order": {
                "type": "string",
                "enum": [
                  "-created_at",
                  "created_at",
                  "-updated_at",
                  "updated_at",
                  "-code",
                  "code",
                  "-id",
                  "id",
                  "-voucher_code",
                  "voucher_code",
                  "-tracking_id",
                  "tracking_id",
                  "-customer_id",
                  "customer_id",
                  "-name",
                  "name",
                  "-email",
                  "email",
                  "-source_id",
                  "source_id",
                  "-channel",
                  "channel",
                  "-status",
                  "status",
                  "-expires_at",
                  "expires_at"
                ],
                "nullable": true
              },
              "fields": {
                "title": "ExportsGetResponseBodyParametersFields",
                "type": "array",
                "items": {
                  "title": "ExportsGetResponseBodyParametersFieldsItem",
                  "type": "string",
                  "enum": [
                    "code",
                    "voucher_type",
                    "value",
                    "formula",
                    "discount_type",
                    "campaign",
                    "category",
                    "start_date",
                    "expiration_date",
                    "gift_balance",
                    "loyalty_balance",
                    "redemption_quantity",
                    "redemption_count",
                    "active",
                    "qr_code",
                    "bar_code",
                    "metadata",
                    "id",
                    "is_referral_code",
                    "created_at",
                    "updated_at",
                    "validity_timeframe_interval",
                    "validity_timeframe_duration",
                    "validity_day_of_week",
                    "discount_amount_limit",
                    "campaign_id",
                    "additional_info",
                    "customer_id",
                    "discount_effect",
                    "discount_unit_type",
                    "discount_unit_effect",
                    "validation_rules_id",
                    "customer_source_id",
                    "object",
                    "date",
                    "voucher_code",
                    "promotion_tier_id",
                    "customer_name",
                    "tracking_id",
                    "order_id",
                    "order_amount",
                    "gift_amount",
                    "loyalty_points",
                    "result",
                    "failure_code",
                    "failure_message",
                    "name",
                    "description",
                    "email",
                    "source_id",
                    "address_city",
                    "address_state",
                    "address_line_1",
                    "address_line_2",
                    "address_country",
                    "address_postal_code",
                    "redemptions_total_redeemed",
                    "redemptions_total_failed",
                    "redemptions_total_succeeded",
                    "redemptions_total_rolled_back",
                    "redemptions_total_rollback_failed",
                    "redemptions_total_rollback_succeeded",
                    "orders_total_amount",
                    "orders_total_count",
                    "orders_average_amount",
                    "orders_last_order_amount",
                    "orders_last_order_date",
                    "loyalty_referred_customers",
                    "phone",
                    "birthday",
                    "birthdate",
                    "channel",
                    "is_winner",
                    "status",
                    "amount",
                    "discount_amount",
                    "items_discount_amount",
                    "total_discount_amount",
                    "total_amount",
                    "referrer_id",
                    "voucher_id",
                    "points",
                    "expires_at",
                    "type",
                    "reason",
                    "source",
                    "balance",
                    "related_transaction_id",
                    "details"
                  ]
                },
                "nullable": true,
                "description": "Array of strings containing the data in the export. These fields define the headers in the CSV file."
              },
              "filters": {
                "title": "ExportsGetResponseBodyParametersFilters",
                "nullable": true,
                "type": "object",
                "description": "Allowed additional properties must start with \"metadata.\" or \"redemption.\" and Allowed additional properties must start with \"metadata.\" and Allowed additional properties must start with \"metadata.\" or \"address.\" or \"summary.\" or \"loyalty.\" or \"loyalty_tier.\" or \"loyalty_points.\" or \"system_metadata.\""
              }
            },
            "nullable": true
          }
        },
        "description": "Response body schema for **GET** `v1/exports/{exportId}`."
      },
      "ExportsListResponseBody": {
        "title": "ExportsListResponseBody",
        "description": "Response body schema for **GET** `v1/exports`.",
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "default": "list",
            "enum": [
              "list"
            ],
            "description": "The type of the object represented by JSON. This object stores information about exports.",
            "nullable": true
          },
          "data_ref": {
            "type": "string",
            "default": "exports",
            "enum": [
              "exports"
            ],
            "description": "Identifies the name of the attribute that contains the array of exports.",
            "nullable": true
          },
          "exports": {
            "title": "ExportsListResponseBodyExports",
            "type": "array",
            "description": "An array of export objects.",
            "items": {
              "$ref": "#/components/schemas/Export"
            },
            "nullable": true
          },
          "total": {
            "type": "integer",
            "description": "Total number of exports.",
            "nullable": true
          }
        },
        "required": []
      },
      "LocationsGetResponseBody": {
        "title": "LocationsGetResponseBody",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique location ID, assigned by the Voucherify API.",
            "example": "loc_NoMGXmHO9OUs7iz9mGWpamma",
            "nullable": true
          },
          "object": {
            "type": "string",
            "description": "The type of the object represented by JSON. This object stores information about a `location`.",
            "default": "location",
            "enum": [
              "location"
            ],
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Location name.",
            "nullable": true
          },
          "shape": {
            "title": "LocationsGetResponseBodyShape",
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "circle",
                  "polygon"
                ],
                "nullable": true
              },
              "format": {
                "type": "string",
                "enum": [
                  "distance",
                  "geojson"
                ],
                "nullable": true
              },
              "distance": {
                "title": "LocationsGetResponseBodyShapeDistance",
                "type": "object",
                "description": "Defines the parameters for the circle.",
                "properties": {
                  "center": {
                    "type": "string",
                    "description": "Center of the circle identified by GPS coordinates in decimal degrees.",
                    "example": "geo:40.79372699823857,-74.15092132694554",
                    "nullable": true
                  },
                  "radius": {
                    "type": "string",
                    "description": "Defines the radius of the circle.",
                    "nullable": true
                  }
                },
                "nullable": true
              },
              "geojson": {
                "title": "LocationsGetResponseBodyShapeGeojson",
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Polygon",
                      "MultiPolygon"
                    ],
                    "nullable": true
                  },
                  "coordinates": {
                    "title": "LocationsGetResponseBodyShapeGeojsonCoordinates",
                    "type": "array",
                    "items": {
                      "title": "LocationsGetResponseBodyShapeGeojsonCoordinatesItem",
                      "type": "array",
                      "items": {
                        "title": "LocationsGetResponseBodyShapeGeojsonCoordinatesItemItem",
                        "type": "integer"
                      }
                    },
                    "nullable": true
                  }
                },
                "nullable": true
              }
            },
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "example": "2022-02-14T15:12:06.817Z",
            "description": "Timestamp representing the date and time when the location was created. The value is shown in the ISO 8601 format.",
            "format": "date-time",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "example": "2022-03-14T15:12:06.817Z",
            "nullable": true,
            "description": "Timestamp representing the date and time when the location was updated. The value is shown in the ISO 8601 format.",
            "format": "date-time"
          }
        },
        "required": [],
        "description": "Response schema for listing locations using **GET** `/v1/locations/{locationId}`."
      },
      "LocationsListResponseBody": {
        "title": "LocationsListResponseBody",
        "type": "object",
        "description": "Response schema for listing locations using **GET** `v1/locations`.",
        "properties": {
          "object": {
            "type": "string",
            "description": "The type of the object represented by JSON. This object stores information about locations in a dictionary.",
            "default": "list",
            "nullable": true
          },
          "data_ref": {
            "type": "string",
            "description": "Identifies the name of the attribute that contains the array of metadata schema objects.",
            "default": "data",
            "nullable": true
          },
          "data": {
            "title": "LocationsListResponseBodyData",
            "type": "array",
            "description": "Array of location objects.",
            "items": {
              "$ref": "#/components/schemas/Location"
            },
            "nullable": true
          },
          "total": {
            "type": "integer",
            "description": "Total number of locations.",
            "nullable": true
          },
          "has_more": {
            "type": "boolean",
            "description": "As query results are always limited (by the limit parameter), the `has_more` flag indicates if there are more records for given filter parameters. This lets you know if you can run another request (with a different end date filter) to get more records returned in the results.",
            "nullable": true
          }
        }
      },
      "LoyaltiesCreateCampaignRequestBody": {
        "title": "LoyaltiesCreateCampaignRequestBody",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Campaign name.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "An optional field to keep any extra textual information about the campaign such as a campaign description and details.",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "Defines whether the campaign can be updated with new vouchers after campaign creation or if the campaign consists of generic (standalone) voucherss.\n\n- `AUTO_UPDATE`: the campaign is dynamic, i.e. vouchers will generate based on set criteria\n-  `STATIC`: vouchers need to be manually published",
            "enum": [
              "AUTO_UPDATE",
              "STATIC"
            ],
            "nullable": true
          },
          "join_once": {
            "type": "boolean",
            "description": "If this value is set to `true`, customers will be able to join the campaign only once. For loyalty campaigns, it's forced to `true`, even if `join_once: false` is passed in the request.",
            "nullable": true
          },
          "auto_join": {
            "type": "boolean",
            "description": "Indicates whether customers will be able to auto-join a loyalty campaign if any earning rule is fulfilled.",
            "nullable": true
          },
          "use_voucher_metadata_schema": {
            "type": "boolean",
            "description": "Flag indicating whether the campaign is to use the voucher's metadata schema instead of the campaign metadata schema.",
            "nullable": true
          },
          "vouchers_count": {
            "type": "integer",
            "description": "Total number of unique vouchers in campaign (size of campaign).",
            "nullable": true
          },
          "start_date": {
            "type": "string",
            "format": "date-time",
            "description": "Activation timestamp defines when the campaign starts to be active in ISO 8601 format. Campaign is *inactive before* this date. ",
            "example": "2022-09-20T00:00:00.000Z",
            "nullable": true
          },
          "expiration_date": {
            "type": "string",
            "format": "date-time",
            "description": "Expiration timestamp defines when the campaign expires in ISO 8601 format.  Campaign is *inactive after* this date.",
            "example": "2022-09-30T00:00:00.000Z",
            "nullable": true
          },
          "validity_timeframe": {
            "$ref": "#/components/schemas/ValidityTimeframe"
          },
          "validity_day_of_week": {
            "$ref": "#/components/schemas/ValidityDayOfWeek"
          },
          "validity_hours": {
            "$ref": "#/components/schemas/ValidityHours"
          },
          "activity_duration_after_publishing": {
            "type": "string",
            "description": "Defines the amount of time the vouchers will be active after publishing. The value is shown in the ISO 8601 format. For example, a voucher with the value of P24D will be valid for a duration of 24 days.",
            "nullable": true
          },
          "category_id": {
            "type": "string",
            "description": "Unique category ID that this campaign belongs to. Either pass this parameter OR the `category`.",
            "example": "cat_0b688929a2476386a7",
            "nullable": true
          },
          "category": {
            "type": "string",
            "description": "The category assigned to the campaign. Either pass this parameter OR the `category_id`.",
            "nullable": true
          },
          "metadata": {
            "title": "LoyaltiesCreateCampaignRequestBodyMetadata",
            "type": "object",
            "description": "The metadata object stores all custom attributes assigned to the campaign. A set of key/value pairs that you can attach to a campaign object. It can be useful for storing additional information about the campaign in a structured format.",
            "nullable": true
          },
          "access_settings": {
            "$ref": "#/components/schemas/AccessSettings"
          },
          "validation_rules": {
            "title": "LoyaltiesCreateCampaignRequestBodyValidationRules",
            "type": "array",
            "description": "Array containing the ID of the validation rule associated with the promotion tier.",
            "items": {
              "title": "LoyaltiesCreateCampaignRequestBodyValidationRulesItem",
              "type": "string"
            },
            "maxItems": 1,
            "nullable": true
          },
          "campaign_type": {
            "type": "string",
            "default": "LOYALTY_PROGRAM",
            "enum": [
              "LOYALTY_PROGRAM"
            ],
            "description": "Type of campaign.",
            "nullable": true
          },
          "voucher": {
            "$ref": "#/components/schemas/CampaignLoyaltyVoucher"
          }
        },
        "description": "Request body schema for **POST** `/loyalties`."
      },
      "LoyaltiesCreateCampaignResponseBody": {
        "title": "LoyaltiesCreateCampaignResponseBody",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique campaign ID, assigned by Voucherify.",
            "example": "camp_f7fBbQxUuTN7dI7tGOo5XMDA",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Campaign name.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "An optional field to keep any extra textual information about the campaign such as a campaign description and details.",
            "nullable": true
          },
          "campaign_type": {
            "type": "string",
            "default": "LOYALTY_PROGRAM",
            "enum": [
              "LOYALTY_PROGRAM"
            ],
            "description": "Type of campaign.",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "Defines whether the campaign can be updated with new vouchers after campaign creation.    \n\n- `AUTO_UPDATE`: the campaign is dynamic, i.e. vouchers will generate based on set criteria    \n-  `STATIC`: vouchers need to be manually published",
            "enum": [
              "AUTO_UPDATE",
              "STATIC"
            ],
            "nullable": true
          },
          "voucher": {
            "$ref": "#/components/schemas/LoyaltyCampaignVoucher"
          },
          "auto_join": {
            "type": "boolean",
            "description": "Indicates whether customers will be able to auto-join a loyalty campaign if any earning rule is fulfilled.",
            "nullable": true
          },
          "join_once": {
            "type": "boolean",
            "description": "Always set to `true` for loyalty campaigns, meaning customers can join the campaign only once. It can't be changed to `false`.",
            "nullable": true
          },
          "use_voucher_metadata_schema": {
            "type": "boolean",
            "description": "Flag indicating whether the campaign is to use the voucher's metadata schema instead of the campaign metadata schema.",
            "nullable": true
          },
          "validity_timeframe": {
            "$ref": "#/components/schemas/ValidityTimeframe"
          },
          "validity_day_of_week": {
            "$ref": "#/components/schemas/ValidityDayOfWeek"
          },
          "validity_hours": {
            "$ref": "#/components/schemas/ValidityHours"
          },
          "activity_duration_after_publishing": {
            "type": "string",
            "description": "Defines the amount of time the campaign will be active in ISO 8601 format after publishing. For example, a campaign with a `duration` of `P24D` will be valid for a duration of 24 days.",
            "nullable": true
          },
          "vouchers_count": {
            "type": "integer",
            "description": "Total number of unique vouchers in campaign.",
            "nullable": true
          },
          "start_date": {
            "type": "string",
            "format": "date-time",
            "description": "Activation timestamp defines when the campaign starts to be active in ISO 8601 format. Campaign is *inactive before* this date. ",
            "example": "2022-09-20T00:00:00.000Z",
            "nullable": true
          },
          "expiration_date": {
            "type": "string",
            "format": "date-time",
            "description": "Expiration timestamp defines when the campaign expires in ISO 8601 format.  Campaign is *inactive after* this date.",
            "example": "2022-09-30T00:00:00.000Z",
            "nullable": true
          },
          "active": {
            "type": "boolean",
            "description": "A flag to toggle the campaign on or off. You can disable a campaign even though it's within the active period defined by the `start_date` and `expiration_date`.  \n\n- `true` indicates an *active* campaign\n- `false` indicates an *inactive* campaign",
            "nullable": true
          },
          "metadata": {
            "title": "LoyaltiesCreateCampaignResponseBodyMetadata",
            "type": "object",
            "description": "The metadata object stores all custom attributes assigned to the campaign. A set of key/value pairs that you can attach to a campaign object. It can be useful for storing additional information about the campaign in a structured format.",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2021-12-01T08:00:50.038Z",
            "description": "Timestamp representing the date and time when the campaign was created. The value is shown in the ISO 8601 format.",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2022-09-20T09:18:19.623Z",
            "description": "Timestamp representing the date and time when the campaign was last updated in ISO 8601 format.",
            "nullable": true
          },
          "category": {
            "type": "string",
            "description": "Unique category name.",
            "nullable": true
          },
          "creation_status": {
            "type": "string",
            "enum": [
              "DONE",
              "IN_PROGRESS",
              "FAILED",
              "DRAFT",
              "MODIFYING"
            ],
            "description": "Indicates the status of the campaign creation.",
            "nullable": true
          },
          "vouchers_generation_status": {
            "type": "string",
            "description": "Indicates the status of the campaign's voucher generation.",
            "enum": [
              "DONE",
              "IN_PROGRESS",
              "FAILED",
              "DRAFT",
              "MODIFYING"
            ],
            "nullable": true
          },
          "readonly": {
            "type": "boolean",
            "description": "Indicates whether the campaign can be only read by a restricted user in the Areas and Stores enterprise feature. It is returned only to restricted users; this field is not returned for users with other roles.",
            "nullable": true
          },
          "protected": {
            "type": "boolean",
            "description": "Indicates whether the resource can be deleted.",
            "nullable": true
          },
          "category_id": {
            "type": "string",
            "nullable": true,
            "description": "Unique category ID that this campaign belongs to.",
            "example": "cat_0b688929a2476386a7"
          },
          "categories": {
            "title": "LoyaltiesCreateCampaignResponseBodyCategories",
            "type": "array",
            "description": "Contains details about the category.",
            "items": {
              "$ref": "#/components/schemas/Category"
            },
            "nullable": true
          },
          "object": {
            "type": "string",
            "default": "campaign",
            "description": "The type of the object represented by JSON. This object stores information about the campaign.",
            "nullable": true
          },
          "loyalty_tiers_expiration": {
            "$ref": "#/components/schemas/LoyaltyTiersExpirationAll"
          },
          "validation_rules_assignments": {
            "$ref": "#/components/schemas/ValidationRulesAssignmentsList"
          },
          "access_settings_assignments": {
            "$ref": "#/components/schemas/AccessSettingsCampaignAssignmentsList"
          }
        },
        "required": [],
        "description": "Response body schema for **POST** `/loyalties`."
      },
      "LoyaltiesDeleteResponseBody": {
        "title": "LoyaltiesDeleteResponseBody",
        "type": "object",
        "properties": {
          "async_action_id": {
            "type": "string",
            "example": "aa_0a875d56c805df6601",
            "description": "The ID of the scheduled asynchronous action.",
            "nullable": true
          }
        },
        "required": [],
        "description": "Response body schema for **DELETE** `/loyalties/{campaignId}`."
      },
      "LoyaltiesEarningRulesCreateRequestBody": {
        "title": "LoyaltiesEarningRulesCreateRequestBody",
        "description": "This data model represents the Request body schema for the `/loyalties/{campaignId}/earning-rules` endpoint.",
        "type": "array",
        "items": {
          "title": "LoyaltiesEarningRulesCreateRequestBodyItem",
          "type": "object",
          "properties": {
            "validation_rule_id": {
              "type": "string",
              "example": "val_248vs7tUjlIE",
              "description": "A unique validation rule identifier assigned by the Voucherify API. The validation rule is verified before points are added to the balance.",
              "nullable": true
            },
            "loyalty": {
              "title": "LoyaltiesEarningRulesCreateRequestBodyItemLoyalty",
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "FIXED",
                    "PROPORTIONAL"
                  ]
                },
                "points": {
                  "type": "integer",
                  "description": "Defines how the points will be added to the loyalty card. FIXED adds a fixed number of points.",
                  "nullable": true
                },
                "calculation_type": {
                  "type": "string",
                  "enum": [
                    "ORDER_AMOUNT",
                    "ORDER_TOTAL_AMOUNT",
                    "ORDER_METADATA",
                    "ORDER_ITEMS_QUANTITY",
                    "ORDER_ITEMS_AMOUNT",
                    "ORDER_ITEMS_SUBTOTAL_AMOUNT",
                    "CUSTOMER_METADATA",
                    "CUSTOM_EVENT_METADATA"
                  ]
                },
                "order": {
                  "title": "LoyaltiesEarningRulesCreateRequestBodyItemLoyaltyOrder",
                  "type": "object",
                  "properties": {
                    "amount": {
                      "title": "LoyaltiesEarningRulesCreateRequestBodyItemLoyaltyOrderAmount",
                      "type": "object",
                      "required": [],
                      "description": "Defines the ratio based on the property defined in the calculation_type parameter. For every set of value (1, 10, etc) defined in the every parameter for the property defined in calculation_type, give the customer the number of points defined in the points parameter. In other words, for every calculation_type, give points.",
                      "properties": {
                        "every": {
                          "type": "integer",
                          "description": "Value is multiplied by 100 to precisely represent 2 decimal places. For example, a $10 order amount is written as 1000.",
                          "nullable": true
                        },
                        "points": {
                          "type": "integer",
                          "description": "Number of points to be awarded, i.e. how many points to be added to the loyalty card.",
                          "nullable": true
                        }
                      },
                      "nullable": true
                    },
                    "total_amount": {
                      "title": "LoyaltiesEarningRulesCreateRequestBodyItemLoyaltyOrderTotalAmount",
                      "type": "object",
                      "required": [],
                      "description": "Defines the ratio based on the property defined in the calculation_type parameter. For every set of value (1, 10, etc) defined in the every parameter for the property defined in calculation_type, give the customer the number of points defined in the points parameter. In other words, for every calculation_type, give points.",
                      "properties": {
                        "every": {
                          "type": "integer",
                          "description": "Value is multiplied by 100 to precisely represent 2 decimal places. For example, a $10 order amount is written as 1000.",
                          "nullable": true
                        },
                        "points": {
                          "type": "integer",
                          "description": "Number of points to be awarded, i.e. how many points to be added to the loyalty card.",
                          "nullable": true
                        }
                      },
                      "nullable": true
                    },
                    "metadata": {
                      "title": "LoyaltiesEarningRulesCreateRequestBodyItemLoyaltyOrderMetadata",
                      "type": "object",
                      "required": [],
                      "description": "Defines the ratio based on the property defined in the calculation_type parameter. For every given increment of value (1, 10, etc) defined in the every parameter for the property defined in calculation_type, give the customer the number of points defined in the points parameter. In other words, for every order metadata property value, give points.",
                      "properties": {
                        "every": {
                          "type": "integer",
                          "description": "For how many increments of the order metadata property to grant points for.",
                          "nullable": true
                        },
                        "points": {
                          "type": "integer",
                          "description": "Number of points to be awarded, i.e. how many points to be added to the loyalty card.",
                          "nullable": true
                        },
                        "property": {
                          "type": "string",
                          "description": "Order metadata property.",
                          "nullable": true
                        }
                      },
                      "nullable": true
                    }
                  }
                },
                "order_items": {
                  "title": "LoyaltiesEarningRulesCreateRequestBodyItemLoyaltyOrderItems",
                  "type": "object",
                  "properties": {
                    "quantity": {
                      "title": "LoyaltiesEarningRulesCreateRequestBodyItemLoyaltyOrderItemsQuantity",
                      "type": "object",
                      "required": [],
                      "description": "Defines the ratio based on the property defined in the calculation_type parameter. For every set of value (1, 10, etc) defined in the every parameter for the property defined in calculation_type, give the customer the number of points defined in the points parameter. In other words, for every calculation_type, give points.",
                      "properties": {
                        "every": {
                          "type": "integer",
                          "description": "Value is multiplied by 100 to precisely represent 2 decimal places. For example, a $10 order amount is written as 1000.",
                          "nullable": true
                        },
                        "points": {
                          "type": "integer",
                          "description": "Number of points to be awarded, i.e. how many points to be added to the loyalty card.",
                          "nullable": true
                        },
                        "object": {
                          "type": "string",
                          "description": "Type of object taken under consideration.",
                          "enum": [
                            "products_collection",
                            "product",
                            "sku"
                          ],
                          "nullable": true
                        },
                        "id": {
                          "type": "string",
                          "description": "Unique ID of the resource, i.e. pc_75U0dHlr7u75BJodrW1AE3t6, prod_0bae32322150fd0546, or sku_0b7d7dfb090be5c619.",
                          "nullable": true
                        }
                      },
                      "nullable": true
                    },
                    "amount": {
                      "title": "LoyaltiesEarningRulesCreateRequestBodyItemLoyaltyOrderItemsAmount",
                      "type": "object",
                      "required": [],
                      "description": "Defines the ratio based on the property defined in the calculation_type parameter. For every set of value (1, 10, etc) defined in the every parameter for the property defined in calculation_type, give the customer the number of points defined in the points parameter. In other words, for every calculation_type, give points.",
                      "properties": {
                        "every": {
                          "type": "integer",
                          "description": "Value is multiplied by 100 to precisely represent 2 decimal places. For example, a $10 order amount is written as 1000.",
                          "nullable": true
                        },
                        "points": {
                          "type": "integer",
                          "description": "Number of points to be awarded, i.e. how many points to be added to the loyalty card.",
                          "nullable": true
                        },
                        "object": {
                          "type": "string",
                          "description": "Type of object taken under consideration.",
                          "enum": [
                            "products_collection",
                            "product",
                            "sku"
                          ],
                          "nullable": true
                        },
                        "id": {
                          "type": "string",
                          "description": "Unique ID of the resource, i.e. pc_75U0dHlr7u75BJodrW1AE3t6, prod_0bae32322150fd0546, or sku_0b7d7dfb090be5c619.",
                          "nullable": true
                        }
                      },
                      "nullable": true
                    },
                    "subtotal_amount": {
                      "title": "LoyaltiesEarningRulesCreateRequestBodyItemLoyaltyOrderItemsSubtotalAmount",
                      "type": "object",
                      "required": [],
                      "description": "Defines the ratio based on the property defined in the calculation_type parameter. For every set of value (1, 10, etc) defined in the every parameter for the property defined in calculation_type, give the customer the number of points defined in the points parameter. In other words, for every calculation_type, give points.",
                      "properties": {
                        "every": {
                          "type": "integer",
                          "description": "Value is multiplied by 100 to precisely represent 2 decimal places. For example, a $10 order amount is written as 1000.",
                          "nullable": true
                        },
                        "points": {
                          "type": "integer",
                          "description": "Number of points to be awarded, i.e. how many points to be added to the loyalty card.",
                          "nullable": true
                        },
                        "object": {
                          "type": "string",
                          "description": "Type of object taken under consideration.",
                          "enum": [
                            "products_collection",
                            "product",
                            "sku"
                          ],
                          "nullable": true
                        },
                        "id": {
                          "type": "string",
                          "description": "Unique ID of the resource, i.e. pc_75U0dHlr7u75BJodrW1AE3t6, prod_0bae32322150fd0546, or sku_0b7d7dfb090be5c619.",
                          "nullable": true
                        }
                      },
                      "nullable": true
                    }
                  }
                },
                "customer": {
                  "title": "LoyaltiesEarningRulesCreateRequestBodyItemLoyaltyCustomer",
                  "type": "object",
                  "required": [],
                  "properties": {
                    "metadata": {
                      "title": "LoyaltiesEarningRulesCreateRequestBodyItemLoyaltyCustomerMetadata",
                      "type": "object",
                      "required": [],
                      "description": "Defines the ratio based on the property defined in the calculation_type parameter. For every given increment of value (1, 10, etc) defined in the every parameter for the property defined in calculation_type, give the customer the number of points defined in the points parameter. In other words, for every order metadata property value, give points.",
                      "properties": {
                        "every": {
                          "type": "integer",
                          "description": "For how many increments of the customer metadata property to grant points for.",
                          "nullable": true
                        },
                        "points": {
                          "type": "integer",
                          "description": "Number of points to be awarded, i.e. how many points to be added to the loyalty card.",
                          "nullable": true
                        },
                        "property": {
                          "type": "string",
                          "description": "Customer metadata property.",
                          "nullable": true
                        }
                      },
                      "nullable": true
                    }
                  },
                  "nullable": true
                },
                "custom_event": {
                  "title": "LoyaltiesEarningRulesCreateRequestBodyItemLoyaltyCustomEvent",
                  "type": "object",
                  "required": [],
                  "properties": {
                    "metadata": {
                      "title": "LoyaltiesEarningRulesCreateRequestBodyItemLoyaltyCustomEventMetadata",
                      "type": "object",
                      "required": [],
                      "description": "Defines the ratio based on the property defined in the calculation_type parameter. For every given increment of value (1, 10, etc) defined in the every parameter for the property defined in calculation_type, give the customer the number of points defined in the points parameter. In other words, for every order metadata property value, give points.",
                      "properties": {
                        "every": {
                          "type": "integer",
                          "description": "For how many increments of the customer metadata property to grant points for.",
                          "nullable": true
                        },
                        "points": {
                          "type": "integer",
                          "description": "Number of points to be awarded, i.e. how many points to be added to the loyalty card.",
                          "nullable": true
                        },
                        "property": {
                          "type": "string",
                          "description": "\nCustom event metadata property.",
                          "nullable": true
                        }
                      },
                      "nullable": true
                    }
                  },
                  "nullable": true
                }
              }
            },
            "event": {
              "type": "string"
            },
            "source": {
              "title": "LoyaltiesEarningRulesCreateRequestBodyItemSource",
              "type": "object",
              "properties": {
                "banner": {
                  "type": "string",
                  "example": "Order Paid - You will get 100 points",
                  "description": "Name of the earning rule. This is displayed as a header for the earning rule in the Dashboard.",
                  "nullable": true
                }
              }
            },
            "active": {
              "type": "boolean",
              "description": "A flag to toggle the earning rule on or off. You can disable an earning rule even though it's within the active period defined by the `start_date` and `expiration_date` of the campaign or the earning rule's own `start_date` and `expiration_date`.  \n\n- `true` indicates an *active* earning rule\n- `false` indicates an *inactive* earning rule",
              "nullable": true
            },
            "start_date": {
              "type": "string",
              "example": "2022-02-02T13:00:00.000Z",
              "format": "date-time",
              "description": "Start date defines when the earning rule starts to be active. Activation timestamp is presented in the ISO 8601 format. Earning rule is *inactive before* this date. If you don't define the start date for an earning rule, it will inherit the campaign start date by default. ",
              "nullable": true
            },
            "expiration_date": {
              "type": "string",
              "format": "date-time",
              "example": "2022-03-03T14:30:00.000Z",
              "description": "Expiration date defines when the earning rule expires. Expiration timestamp is presented in the ISO 8601 format.  Earning rule is *inactive after* this date.If you don't define the expiration date for an earning rule, it will inherit the campaign expiration date by default.",
              "nullable": true
            },
            "pending_points": {
              "title": "LoyaltiesEarningRulesCreateRequestBodyItemPendingPoints",
              "type": "object",
              "nullable": true,
              "description": "Defines the configuration for pending points. Pending points can be used only with the `order.paid` event.",
              "properties": {
                "period_type": {
                  "type": "string",
                  "description": "Defines the type of the period during which the points are in the pending state. Currently, only `DAY` value is accepted.",
                  "default": "DAY",
                  "enum": [
                    "DAY"
                  ],
                  "nullable": true
                },
                "period_value": {
                  "type": "integer",
                  "description": "Defines for how long the points are in the pending state. The minimum value is 1, maximum is 90.",
                  "minimum": 1,
                  "maximum": 90,
                  "nullable": true
                }
              }
            },
            "expiration_rules": {
              "$ref": "#/components/schemas/EarningRuleExpirationRules"
            },
            "validity_timeframe": {
              "$ref": "#/components/schemas/ValidityTimeframe"
            },
            "validity_day_of_week": {
              "$ref": "#/components/schemas/ValidityDayOfWeek"
            },
            "validity_hours": {
              "$ref": "#/components/schemas/ValidityHours"
            },
            "metadata": {
              "title": "LoyaltiesEarningRulesCreateRequestBodyItemMetadata",
              "type": "object",
              "description": "The metadata object stores all custom attributes assigned to the earning rule. A set of key/value pairs that you can attach to an earning rule object. It can be useful for storing additional information about the earning rule in a structured format.",
              "nullable": true
            },
            "segment": {
              "title": "LoyaltiesEarningRulesCreateRequestBodyItemSegment",
              "type": "object",
              "description": "Contains the ID of a customer segment. **Required** for the `customer.segment.entered` option in `event`.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Contains a unique identifier of a customer segment. Assigned by the Voucherify API.",
                  "nullable": true
                }
              },
              "nullable": true
            },
            "custom_event": {
              "title": "LoyaltiesEarningRulesCreateRequestBodyItemCustomEvent",
              "type": "object",
              "description": "Contains the schema id of a custom event. **Required** for the custom event option in `event`.",
              "properties": {
                "schema_id": {
                  "type": "string",
                  "description": "Contains a unique identifier of a custom event schema. Assigned by the Voucherify API.",
                  "example": "ms_gn4Qe4xsFPf7orCArCiNVY13",
                  "nullable": true
                }
              },
              "nullable": true
            },
            "loyalty_tier": {
              "title": "LoyaltiesEarningRulesCreateRequestBodyItemLoyaltyTier",
              "type": "object",
              "description": "Defines the tier associated with the earning rule definition.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Unique loyalty tier ID associated with the earning rule.    \n\n- `__ANY__`: any loyalty tier within the campaign",
                  "example": "ltr_pudTGWasuIqxdiDM0go31OV1",
                  "nullable": true
                }
              },
              "nullable": true
            }
          }
        }
      },
      "LoyaltiesEarningRulesCreateResponseBody": {
        "title": "LoyaltiesEarningRulesCreateResponseBody",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Assigned by the Voucherify API, identifies the earning rule object.",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp representing the date and time when the earning rule was created. The value is shown in the ISO 8601 format.",
            "nullable": true
          },
          "loyalty": {
            "title": "LoyaltiesEarningRulesCreateResponseBodyLoyalty",
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "FIXED",
                  "PROPORTIONAL"
                ],
                "nullable": true
              },
              "points": {
                "type": "integer",
                "description": "Defines how the points will be added to the loyalty card. FIXED adds a fixed number of points.",
                "nullable": true
              },
              "calculation_type": {
                "type": "string",
                "enum": [
                  "ORDER_AMOUNT",
                  "ORDER_TOTAL_AMOUNT",
                  "ORDER_METADATA",
                  "ORDER_ITEMS_QUANTITY",
                  "ORDER_ITEMS_AMOUNT",
                  "ORDER_ITEMS_SUBTOTAL_AMOUNT",
                  "CUSTOMER_METADATA",
                  "CUSTOM_EVENT_METADATA"
                ],
                "nullable": true
              },
              "order": {
                "title": "LoyaltiesEarningRulesCreateResponseBodyLoyaltyOrder",
                "type": "object",
                "properties": {
                  "amount": {
                    "title": "LoyaltiesEarningRulesCreateResponseBodyLoyaltyOrderAmount",
                    "type": "object",
                    "required": [],
                    "description": "Defines the ratio based on the property defined in the calculation_type parameter. For every set of value (1, 10, etc) defined in the every parameter for the property defined in calculation_type, give the customer the number of points defined in the points parameter. In other words, for every calculation_type, give points.",
                    "properties": {
                      "every": {
                        "type": "integer",
                        "description": "Value is multiplied by 100 to precisely represent 2 decimal places. For example, a $10 order amount is written as 1000.",
                        "nullable": true
                      },
                      "points": {
                        "type": "integer",
                        "description": "Number of points to be awarded, i.e. how many points to be added to the loyalty card.",
                        "nullable": true
                      }
                    },
                    "nullable": true
                  },
                  "total_amount": {
                    "title": "LoyaltiesEarningRulesCreateResponseBodyLoyaltyOrderTotalAmount",
                    "type": "object",
                    "required": [],
                    "description": "Defines the ratio based on the property defined in the calculation_type parameter. For every set of value (1, 10, etc) defined in the every parameter for the property defined in calculation_type, give the customer the number of points defined in the points parameter. In other words, for every calculation_type, give points.",
                    "properties": {
                      "every": {
                        "type": "integer",
                        "description": "Value is multiplied by 100 to precisely represent 2 decimal places. For example, a $10 order amount is written as 1000.",
                        "nullable": true
                      },
                      "points": {
                        "type": "integer",
                        "description": "Number of points to be awarded, i.e. how many points to be added to the loyalty card.",
                        "nullable": true
                      }
                    },
                    "nullable": true
                  },
                  "metadata": {
                    "title": "LoyaltiesEarningRulesCreateResponseBodyLoyaltyOrderMetadata",
                    "type": "object",
                    "required": [],
                    "description": "Defines the ratio based on the property defined in the calculation_type parameter. For every given increment of value (1, 10, etc) defined in the every parameter for the property defined in calculation_type, give the customer the number of points defined in the points parameter. In other words, for every order metadata property value, give points.",
                    "properties": {
                      "every": {
                        "type": "integer",
                        "description": "For how many increments of the order metadata property to grant points for.",
                        "nullable": true
                      },
                      "points": {
                        "type": "integer",
                        "description": "Number of points to be awarded, i.e. how many points to be added to the loyalty card.",
                        "nullable": true
                      },
                      "property": {
                        "type": "string",
                        "description": "Order metadata property.",
                        "nullable": true
                      }
                    },
                    "nullable": true
                  }
                },
                "nullable": true
              },
              "order_items": {
                "title": "LoyaltiesEarningRulesCreateResponseBodyLoyaltyOrderItems",
                "type": "object",
                "properties": {
                  "quantity": {
                    "title": "LoyaltiesEarningRulesCreateResponseBodyLoyaltyOrderItemsQuantity",
                    "type": "object",
                    "required": [],
                    "description": "Defines the ratio based on the property defined in the calculation_type parameter. For every set of value (1, 10, etc) defined in the every parameter for the property defined in calculation_type, give the customer the number of points defined in the points parameter. In other words, for every calculation_type, give points.",
                    "properties": {
                      "every": {
                        "type": "integer",
                        "description": "Value is multiplied by 100 to precisely represent 2 decimal places. For example, a $10 order amount is written as 1000.",
                        "nullable": true
                      },
                      "points": {
                        "type": "integer",
                        "description": "Number of points to be awarded, i.e. how many points to be added to the loyalty card.",
                        "nullable": true
                      },
                      "object": {
                        "type": "string",
                        "description": "Type of object taken under consideration.",
                        "enum": [
                          "products_collection",
                          "product",
                          "sku"
                        ],
                        "nullable": true
                      },
                      "id": {
                        "type": "string",
                        "description": "Unique ID of the resource, i.e. pc_75U0dHlr7u75BJodrW1AE3t6, prod_0bae32322150fd0546, or sku_0b7d7dfb090be5c619.",
                        "nullable": true
                      }
                    },
                    "nullable": true
                  },
                  "amount": {
                    "title": "LoyaltiesEarningRulesCreateResponseBodyLoyaltyOrderItemsAmount",
                    "type": "object",
                    "required": [],
                    "description": "Defines the ratio based on the property defined in the calculation_type parameter. For every set of value (1, 10, etc) defined in the every parameter for the property defined in calculation_type, give the customer the number of points defined in the points parameter. In other words, for every calculation_type, give points.",
                    "properties": {
                      "every": {
                        "type": "integer",
                        "description": "Value is multiplied by 100 to precisely represent 2 decimal places. For example, a $10 order amount is written as 1000.",
                        "nullable": true
                      },
                      "points": {
                        "type": "integer",
                        "description": "Number of points to be awarded, i.e. how many points to be added to the loyalty card.",
                        "nullable": true
                      },
                      "object": {
                        "type": "string",
                        "description": "Type of object taken under consideration.",
                        "enum": [
                          "products_collection",
                          "product",
                          "sku"
                        ],
                        "nullable": true
                      },
                      "id": {
                        "type": "string",
                        "description": "Unique ID of the resource, i.e. pc_75U0dHlr7u75BJodrW1AE3t6, prod_0bae32322150fd0546, or sku_0b7d7dfb090be5c619.",
                        "nullable": true
                      }
                    },
                    "nullable": true
                  },
                  "subtotal_amount": {
                    "title": "LoyaltiesEarningRulesCreateResponseBodyLoyaltyOrderItemsSubtotalAmount",
                    "type": "object",
                    "required": [],
                    "description": "Defines the ratio based on the property defined in the calculation_type parameter. For every set of value (1, 10, etc) defined in the every parameter for the property defined in calculation_type, give the customer the number of points defined in the points parameter. In other words, for every calculation_type, give points.",
                    "properties": {
                      "every": {
                        "type": "integer",
                        "description": "Value is multiplied by 100 to precisely represent 2 decimal places. For example, a $10 order amount is written as 1000.",
                        "nullable": true
                      },
                      "points": {
                        "type": "integer",
                        "description": "Number of points to be awarded, i.e. how many points to be added to the loyalty card.",
                        "nullable": true
                      },
                      "object": {
                        "type": "string",
                        "description": "Type of object taken under consideration.",
                        "enum": [
                          "products_collection",
                          "product",
                          "sku"
                        ],
                        "nullable": true
                      },
                      "id": {
                        "type": "string",
                        "description": "Unique ID of the resource, i.e. pc_75U0dHlr7u75BJodrW1AE3t6, prod_0bae32322150fd0546, or sku_0b7d7dfb090be5c619.",
                        "nullable": true
                      }
                    },
                    "nullable": true
                  }
                },
                "nullable": true
              },
              "customer": {
                "title": "LoyaltiesEarningRulesCreateResponseBodyLoyaltyCustomer",
                "type": "object",
                "required": [],
                "properties": {
                  "metadata": {
                    "title": "LoyaltiesEarningRulesCreateResponseBodyLoyaltyCustomerMetadata",
                    "type": "object",
                    "required": [],
                    "description": "Defines the ratio based on the property defined in the calculation_type parameter. For every given increment of value (1, 10, etc) defined in the every parameter for the property defined in calculation_type, give the customer the number of points defined in the points parameter. In other words, for every order metadata property value, give points.",
                    "properties": {
                      "every": {
                        "type": "integer",
                        "description": "For how many increments of the customer metadata property to grant points for.",
                        "nullable": true
                      },
                      "points": {
                        "type": "integer",
                        "description": "Number of points to be awarded, i.e. how many points to be added to the loyalty card.",
                        "nullable": true
                      },
                      "property": {
                        "type": "string",
                        "description": "Customer metadata property.",
                        "nullable": true
                      }
                    },
                    "nullable": true
                  }
                },
                "nullable": true
              },
              "custom_event": {
                "title": "LoyaltiesEarningRulesCreateResponseBodyLoyaltyCustomEvent",
                "type": "object",
                "required": [],
                "properties": {
                  "metadata": {
                    "title": "LoyaltiesEarningRulesCreateResponseBodyLoyaltyCustomEventMetadata",
                    "type": "object",
                    "required": [],
                    "description": "Defines the ratio based on the property defined in the calculation_type parameter. For every given increment of value (1, 10, etc) defined in the every parameter for the property defined in calculation_type, give the customer the number of points defined in the points parameter. In other words, for every order metadata property value, give points.",
                    "properties": {
                      "every": {
                        "type": "integer",
                        "description": "For how many increments of the customer metadata property to grant points for.",
                        "nullable": true
                      },
                      "points": {
                        "type": "integer",
                        "description": "Number of points to be awarded, i.e. how many points to be added to the loyalty card.",
                        "nullable": true
                      },
                      "property": {
                        "type": "string",
                        "description": "\nCustom event metadata property.",
                        "nullable": true
                      }
                    },
                    "nullable": true
                  }
                },
                "nullable": true
              }
            },
            "nullable": true
          },
          "event": {
            "$ref": "#/components/schemas/EarningRuleEvent"
          },
          "custom_event": {
            "title": "LoyaltiesEarningRulesCreateResponseBodyCustomEvent",
            "description": "Contains details about the custom event.",
            "type": "object",
            "properties": {
              "schema_id": {
                "description": "Unique identifier of the custom event schema",
                "type": "string",
                "nullable": true
              }
            },
            "required": [],
            "nullable": true
          },
          "segment": {
            "title": "LoyaltiesEarningRulesCreateResponseBodySegment",
            "type": "object",
            "description": "Contains the ID of a customer segment. Required for the `customer.segment.entered` option in the event.",
            "properties": {
              "id": {
                "type": "string",
                "description": "Contains a unique identifier of a customer segment. Assigned by the Voucherify API.",
                "nullable": true
              }
            },
            "required": [],
            "nullable": true
          },
          "loyalty_tier": {
            "title": "LoyaltiesEarningRulesCreateResponseBodyLoyaltyTier",
            "type": "object",
            "description": "Defines the tier associated with the earning rule definition.",
            "properties": {
              "id": {
                "type": "string",
                "description": "Unique loyalty tier ID associated with the earning rule.    \n\n- `__ANY__`: any loyalty tier within the campaign",
                "example": "ltr_pudTGWasuIqxdiDM0go31OV1",
                "nullable": true
              }
            },
            "nullable": true
          },
          "pending_points": {
            "title": "LoyaltiesEarningRulesCreateResponseBodyPendingPoints",
            "type": "object",
            "description": "Defines the configuration for pending points. Pending points can be used only with the `order.paid` event.",
            "properties": {
              "period_type": {
                "type": "string",
                "description": "Defines the type of the period during which the points are in the pending state. Currently, only `DAY` value is accepted.",
                "default": "DAY",
                "enum": [
                  "DAY"
                ],
                "nullable": true
              },
              "period_value": {
                "type": "integer",
                "description": "Defines for how long the points are in the pending state. The minimum value is 1, maximum is 90.",
                "minimum": 1,
                "maximum": 90,
                "nullable": true
              }
            },
            "nullable": true
          },
          "source": {
            "title": "LoyaltiesEarningRulesCreateResponseBodySource",
            "type": "object",
            "required": [],
            "description": "Contains the custom earning rule name and parent campaign.",
            "properties": {
              "banner": {
                "type": "string",
                "description": "Name of the earning rule. This is displayed as a header for the earning rule in the Dashboard.",
                "nullable": true
              },
              "object_id": {
                "type": "string",
                "description": "A unique campaign identifier assigned by the Voucherify API.",
                "nullable": true
              },
              "object_type": {
                "type": "string",
                "description": "Defines the object associated with the earning rule. Defaults to `campaign`.",
                "default": "campaign",
                "enum": [
                  "campaign"
                ],
                "nullable": true
              }
            },
            "nullable": true
          },
          "object": {
            "type": "string",
            "default": "earning_rule",
            "enum": [
              "earning_rule"
            ],
            "description": "The type of the object represented by JSON. Default is earning_rule.",
            "nullable": true
          },
          "automation_id": {
            "type": "string",
            "description": "For internal use by Voucherify.",
            "nullable": true
          },
          "start_date": {
            "type": "string",
            "description": "Start date defines when the earning rule starts to be active. Activation timestamp is presented in the ISO 8601 format. The earning rule is inactive before this date. If you do not define the start date for an earning rule, it will inherit the campaign start date by default.",
            "nullable": true
          },
          "expiration_date": {
            "type": "string",
            "description": "Expiration date defines when the earning rule expires. Expiration timestamp is presented in the ISO 8601 format. The earning rule is inactive after this date. If you do not define the expiration date for an earning rule, it will inherit the campaign expiration date by default.",
            "nullable": true
          },
          "validity_timeframe": {
            "$ref": "#/components/schemas/ValidityTimeframe"
          },
          "validity_day_of_week": {
            "$ref": "#/components/schemas/ValidityDayOfWeek"
          },
          "validity_hours": {
            "$ref": "#/components/schemas/ValidityHours"
          },
          "metadata": {
            "title": "LoyaltiesEarningRulesCreateResponseBodyMetadata",
            "type": "object",
            "description": "The metadata object stores all custom attributes assigned to the earning rule. A set of key/value pairs that you can attach to an earning rule object. It can be useful for storing additional information about the earning rule in a structured format.",
            "nullable": true
          },
          "expiration_rules": {
            "$ref": "#/components/schemas/EarningRuleExpirationRules"
          },
          "validation_rule_id": {
            "type": "string",
            "nullable": true,
            "description": "A unique validation rule identifier assigned by the Voucherify API. The validation rule is verified before points are added to the balance."
          },
          "updated_at": {
            "type": "string",
            "nullable": true,
            "format": "date-time",
            "description": "Timestamp representing the date and time when the earning rule was last updated in ISO 8601 format."
          },
          "active": {
            "type": "boolean",
            "description": "A flag to toggle the earning rule on or off. You can disable an earning rule even though it's within the active period defined by the start_date and expiration_date of the campaign or the earning rule's own start_date and expiration_date.\n\n- `true` indicates an active earning rule\n- `false` indicates an inactive earning rule",
            "nullable": true
          }
        },
        "description": "Response body schema for **POST** `v1/loyalties/{campaignId}/earning-rules`."
      },
      "LoyaltiesEarningRulesDisableResponseBody": {
        "title": "LoyaltiesEarningRulesDisableResponseBody",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Assigned by the Voucherify API, identifies the earning rule object.",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp representing the date and time when the earning rule was created. The value is shown in the ISO 8601 format.",
            "nullable": true
          },
          "loyalty": {
            "title": "LoyaltiesEarningRulesDisableResponseBodyLoyalty",
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "FIXED",
                  "PROPORTIONAL"
                ],
                "nullable": true
              },
              "points": {
                "type": "integer",
                "description": "Defines how the points will be added to the loyalty card. FIXED adds a fixed number of points.",
                "nullable": true
              },
              "calculation_type": {
                "type": "string",
                "enum": [
                  "ORDER_AMOUNT",
                  "ORDER_TOTAL_AMOUNT",
                  "ORDER_METADATA",
                  "ORDER_ITEMS_QUANTITY",
                  "ORDER_ITEMS_AMOUNT",
                  "ORDER_ITEMS_SUBTOTAL_AMOUNT",
                  "CUSTOMER_METADATA",
                  "CUSTOM_EVENT_METADATA"
                ],
                "nullable": true
              },
              "order": {
                "title": "LoyaltiesEarningRulesDisableResponseBodyLoyaltyOrder",
                "type": "object",
                "properties": {
                  "amount": {
                    "title": "LoyaltiesEarningRulesDisableResponseBodyLoyaltyOrderAmount",
                    "type": "object",
                    "required": [],
                    "description": "Defines the ratio based on the property defined in the calculation_type parameter. For every set of value (1, 10, etc) defined in the every parameter for the property defined in calculation_type, give the customer the number of points defined in the points parameter. In other words, for every calculation_type, give points.",
                    "properties": {
                      "every": {
                        "type": "integer",
                        "description": "Value is multiplied by 100 to precisely represent 2 decimal places. For example, a $10 order amount is written as 1000.",
                        "nullable": true
                      },
                      "points": {
                        "type": "integer",
                        "description": "Number of points to be awarded, i.e. how many points to be added to the loyalty card.",
                        "nullable": true
                      }
                    },
                    "nullable": true
                  },
                  "total_amount": {
                    "title": "LoyaltiesEarningRulesDisableResponseBodyLoyaltyOrderTotalAmount",
                    "type": "object",
                    "required": [],
                    "description": "Defines the ratio based on the property defined in the calculation_type parameter. For every set of value (1, 10, etc) defined in the every parameter for the property defined in calculation_type, give the customer the number of points defined in the points parameter. In other words, for every calculation_type, give points.",
                    "properties": {
                      "every": {
                        "type": "integer",
                        "description": "Value is multiplied by 100 to precisely represent 2 decimal places. For example, a $10 order amount is written as 1000.",
                        "nullable": true
                      },
                      "points": {
                        "type": "integer",
                        "description": "Number of points to be awarded, i.e. how many points to be added to the loyalty card.",
                        "nullable": true
                      }
                    },
                    "nullable": true
                  },
                  "metadata": {
                    "title": "LoyaltiesEarningRulesDisableResponseBodyLoyaltyOrderMetadata",
                    "type": "object",
                    "required": [],
                    "description": "Defines the ratio based on the property defined in the calculation_type parameter. For every given increment of value (1, 10, etc) defined in the every parameter for the property defined in calculation_type, give the customer the number of points defined in the points parameter. In other words, for every order metadata property value, give points.",
                    "properties": {
                      "every": {
                        "type": "integer",
                        "description": "For how many increments of the order metadata property to grant points for.",
                        "nullable": true
                      },
                      "points": {
                        "type": "integer",
                        "description": "Number of points to be awarded, i.e. how many points to be added to the loyalty card.",
                        "nullable": true
                      },
                      "property": {
                        "type": "string",
                        "description": "Order metadata property.",
                        "nullable": true
                      }
                    },
                    "nullable": true
                  }
                },
                "nullable": true
              },
              "order_items": {
                "title": "LoyaltiesEarningRulesDisableResponseBodyLoyaltyOrderItems",
                "type": "object",
                "properties": {
                  "quantity": {
                    "title": "LoyaltiesEarningRulesDisableResponseBodyLoyaltyOrderItemsQuantity",
                    "type": "object",
                    "required": [],
                    "description": "Defines the ratio based on the property defined in the calculation_type parameter. For every set of value (1, 10, etc) defined in the every parameter for the property defined in calculation_type, give the customer the number of points defined in the points parameter. In other words, for every calculation_type, give points.",
                    "properties": {
                      "every": {
                        "type": "integer",
                        "description": "Value is multiplied by 100 to precisely represent 2 decimal places. For example, a $10 order amount is written as 1000.",
                        "nullable": true
                      },
                      "points": {
                        "type": "integer",
                        "description": "Number of points to be awarded, i.e. how many points to be added to the loyalty card.",
                        "nullable": true
                      },
                      "object": {
                        "type": "string",
                        "description": "Type of object taken under consideration.",
                        "enum": [
                          "products_collection",
                          "product",
                          "sku"
                        ],
                        "nullable": true
                      },
                      "id": {
                        "type": "string",
                        "description": "Unique ID of the resource, i.e. pc_75U0dHlr7u75BJodrW1AE3t6, prod_0bae32322150fd0546, or sku_0b7d7dfb090be5c619.",
                        "nullable": true
                      }
                    },
                    "nullable": true
                  },
                  "amount": {
                    "title": "LoyaltiesEarningRulesDisableResponseBodyLoyaltyOrderItemsAmount",
                    "type": "object",
                    "required": [],
                    "description": "Defines the ratio based on the property defined in the calculation_type parameter. For every set of value (1, 10, etc) defined in the every parameter for the property defined in calculation_type, give the customer the number of points defined in the points parameter. In other words, for every calculation_type, give points.",
                    "properties": {
                      "every": {
                        "type": "integer",
                        "description": "Value is multiplied by 100 to precisely represent 2 decimal places. For example, a $10 order amount is written as 1000.",
                        "nullable": true
                      },
                      "points": {
                        "type": "integer",
                        "description": "Number of points to be awarded, i.e. how many points to be added to the loyalty card.",
                        "nullable": true
                      },
                      "object": {
                        "type": "string",
                        "description": "Type of object taken under consideration.",
                        "enum": [
                          "products_collection",
                          "product",
                          "sku"
                        ],
                        "nullable": true
                      },
                      "id": {
                        "type": "string",
                        "description": "Unique ID of the resource, i.e. pc_75U0dHlr7u75BJodrW1AE3t6, prod_0bae32322150fd0546, or sku_0b7d7dfb090be5c619.",
                        "nullable": true
                      }
                    },
                    "nullable": true
                  },
                  "subtotal_amount": {
                    "title": "LoyaltiesEarningRulesDisableResponseBodyLoyaltyOrderItemsSubtotalAmount",
                    "type": "object",
                    "required": [],
                    "description": "Defines the ratio based on the property defined in the calculation_type parameter. For every set of value (1, 10, etc) defined in the every parameter for the property defined in calculation_type, give the customer the number of points defined in the points parameter. In other words, for every calculation_type, give points.",
                    "properties": {
                      "every": {
                        "type": "integer",
                        "description": "Value is multiplied by 100 to precisely represent 2 decimal places. For example, a $10 order amount is written as 1000.",
                        "nullable": true
                      },
                      "points": {
                        "type": "integer",
                        "description": "Number of points to be awarded, i.e. how many points to be added to the loyalty card.",
                        "nullable": true
                      },
                      "object": {
                        "type": "string",
                        "description": "Type of object taken under consideration.",
                        "enum": [
                          "products_collection",
                          "product",
                          "sku"
                        ],
                        "nullable": true
                      },
                      "id": {
                        "type": "string",
                        "description": "Unique ID of the resource, i.e. pc_75U0dHlr7u75BJodrW1AE3t6, prod_0bae32322150fd0546, or sku_0b7d7dfb090be5c619.",
                        "nullable": true
                      }
                    },
                    "nullable": true
                  }
                },
                "nullable": true
              },
              "customer": {
                "title": "LoyaltiesEarningRulesDisableResponseBodyLoyaltyCustomer",
                "type": "object",
                "required": [],
                "properties": {
                  "metadata": {
                    "title": "LoyaltiesEarningRulesDisableResponseBodyLoyaltyCustomerMetadata",
                    "type": "object",
                    "required": [],
                    "description": "Defines the ratio based on the property defined in the calculation_type parameter. For every given increment of value (1, 10, etc) defined in the every parameter for the property defined in calculation_type, give the customer the number of points defined in the points parameter. In other words, for every order metadata property value, give points.",
                    "properties": {
                      "every": {
                        "type": "integer",
                        "description": "For how many increments of the customer metadata property to grant points for.",
                        "nullable": true
                      },
                      "points": {
                        "type": "integer",
                        "description": "Number of points to be awarded, i.e. how many points to be added to the loyalty card.",
                        "nullable": true
                      },
                      "property": {
                        "type": "string",
                        "description": "Customer metadata property.",
                        "nullable": true
                      }
                    },
                    "nullable": true
                  }
                },
                "nullable": true
              },
              "custom_event": {
                "title": "LoyaltiesEarningRulesDisableResponseBodyLoyaltyCustomEvent",
                "type": "object",
                "required": [],
                "properties": {
                  "metadata": {
                    "title": "LoyaltiesEarningRulesDisableResponseBodyLoyaltyCustomEventMetadata",
                    "type": "object",
                    "required": [],
                    "description": "Defines the ratio based on the property defined in the calculation_type parameter. For every given increment of value (1, 10, etc) defined in the every parameter for the property defined in calculation_type, give the customer the number of points defined in the points parameter. In other words, for every order metadata property value, give points.",
                    "properties": {
                      "every": {
                        "type": "integer",
                        "description": "For how many increments of the customer metadata property to grant points for.",
                        "nullable": true
                      },
                      "points": {
                        "type": "integer",
                        "description": "Number of points to be awarded, i.e. how many points to be added to the loyalty card.",
                        "nullable": true
                      },
                      "property": {
                        "type": "string",
                        "description": "\nCustom event metadata property.",
                        "nullable": true
                      }
                    },
                    "nullable": true
                  }
                },
                "nullable": true
              }
            },
            "nullable": true
          },
          "event": {
            "$ref": "#/components/schemas/EarningRuleEvent"
          },
          "custom_event": {
            "title": "LoyaltiesEarningRulesDisableResponseBodyCustomEvent",
            "description": "Contains details about the custom event.",
            "type": "object",
            "properties": {
              "schema_id": {
                "description": "Unique identifier of the custom event schema",
                "type": "string",
                "nullable": true
              }
            },
            "required": [],
            "nullable": true
          },
          "segment": {
            "title": "LoyaltiesEarningRulesDisableResponseBodySegment",
            "type": "object",
            "description": "Contains the ID of a customer segment. Required for the `customer.segment.entered` option in the event.",
            "properties": {
              "id": {
                "type": "string",
                "description": "Contains a unique identifier of a customer segment. Assigned by the Voucherify API.",
                "nullable": true
              }
            },
            "required": [],
            "nullable": true
          },
          "loyalty_tier": {
            "title": "LoyaltiesEarningRulesDisableResponseBodyLoyaltyTier",
            "type": "object",
            "description": "Defines the tier associated with the earning rule definition.",
            "properties": {
              "id": {
                "type": "string",
                "description": "Unique loyalty tier ID associated with the earning rule.    \n\n- `__ANY__`: any loyalty tier within the campaign",
                "example": "ltr_pudTGWasuIqxdiDM0go31OV1",
                "nullable": true
              }
            },
            "nullable": true
          },
          "pending_points": {
            "title": "LoyaltiesEarningRulesDisableResponseBodyPendingPoints",
            "type": "object",
            "description": "Defines the configuration for pending points. Pending points can be used only with the `order.paid` event.",
            "properties": {
              "period_type": {
                "type": "string",
                "description": "Defines the type of the period during which the points are in the pending state. Currently, only `DAY` value is accepted.",
                "default": "DAY",
                "enum": [
                  "DAY"
                ],
                "nullable": true
              },
              "period_value": {
                "type": "integer",
                "description": "Defines for how long the points are in the pending state. The minimum value is 1, maximum is 90.",
                "minimum": 1,
                "maximum": 90,
                "nullable": true
              }
            },
            "nullable": true
          },
          "source": {
            "title": "LoyaltiesEarningRulesDisableResponseBodySource",
            "type": "object",
            "required": [],
            "description": "Contains the custom earning rule name and parent campaign.",
            "properties": {
              "banner": {
                "type": "string",
                "description": "Name of the earning rule. This is displayed as a header for the earning rule in the Dashboard.",
                "nullable": true
              },
              "object_id": {
                "type": "string",
                "description": "A unique campaign identifier assigned by the Voucherify API.",
                "nullable": true
              },
              "object_type": {
                "type": "string",
                "description": "Defines the object associated with the earning rule. Defaults to `campaign`.",
                "default": "campaign",
                "enum": [
                  "campaign"
                ],
                "nullable": true
              }
            },
            "nullable": true
          },
          "object": {
            "type": "string",
            "default": "earning_rule",
            "enum": [
              "earning_rule"
            ],
            "description": "The type of the object represented by JSON. Default is earning_rule.",
            "nullable": true
          },
          "automation_id": {
            "type": "string",
            "description": "For internal use by Voucherify.",
            "nullable": true
          },
          "start_date": {
            "type": "string",
            "description": "Start date defines when the earning rule starts to be active. Activation timestamp is presented in the ISO 8601 format. The earning rule is inactive before this date. If you do not define the start date for an earning rule, it will inherit the campaign start date by default.",
            "nullable": true
          },
          "expiration_date": {
            "type": "string",
            "description": "Expiration date defines when the earning rule expires. Expiration timestamp is presented in the ISO 8601 format. The earning rule is inactive after this date. If you do not define the expiration date for an earning rule, it will inherit the campaign expiration date by default.",
            "nullable": true
          },
          "validity_timeframe": {
            "$ref": "#/components/schemas/ValidityTimeframe"
          },
          "validity_day_of_week": {
            "$ref": "#/components/schemas/ValidityDayOfWeek"
          },
          "validity_hours": {
            "$ref": "#/components/schemas/ValidityHours"
          },
          "metadata": {
            "title": "LoyaltiesEarningRulesDisableResponseBodyMetadata",
            "type": "object",
            "description": "The metadata object stores all custom attributes assigned to the earning rule. A set of key/value pairs that you can attach to an earning rule object. It can be useful for storing additional information about the earning rule in a structured format.",
            "nullable": true
          },
          "expiration_rules": {
            "$ref": "#/components/schemas/EarningRuleExpirationRules"
          },
          "updated_at": {
            "type": "string",
            "nullable": true,
            "format": "date-time",
            "description": "Timestamp representing the date and time when the earning rule was last updated in ISO 8601 format."
          },
          "active": {
            "type": "boolean",
            "default": false,
            "description": "A flag to toggle the earning rule on or off. You can disable an earning rule even though it's within the active period defined by the start_date and expiration_date of the campaign or the earning rule's own start_date and expiration_date.",
            "nullable": true
          }
        },
        "description": "Response body schema for **POST** `v1/loyalties/{campaignId}/earning-rules/{earningRuleId}/disable`"
      },
      "LoyaltiesEarningRulesEnableResponseBody": {
        "title": "LoyaltiesEarningRulesEnableResponseBody",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Assigned by the Voucherify API, identifies the earning rule object.",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp representing the date and time when the earning rule was created. The value is shown in the ISO 8601 format.",
            "nullable": true
          },
          "loyalty": {
            "title": "LoyaltiesEarningRulesEnableResponseBodyLoyalty",
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "FIXED",
                  "PROPORTIONAL"
                ],
                "nullable": true
              },
              "points": {
                "type": "integer",
                "description": "Defines how the points will be added to the loyalty card. FIXED adds a fixed number of points.",
                "nullable": true
              },
              "calculation_type": {
                "type": "string",
                "enum": [
                  "ORDER_AMOUNT",
                  "ORDER_TOTAL_AMOUNT",
                  "ORDER_METADATA",
                  "ORDER_ITEMS_QUANTITY",
                  "ORDER_ITEMS_AMOUNT",
                  "ORDER_ITEMS_SUBTOTAL_AMOUNT",
                  "CUSTOMER_METADATA",
                  "CUSTOM_EVENT_METADATA"
                ],
                "nullable": true
              },
              "order": {
                "title": "LoyaltiesEarningRulesEnableResponseBodyLoyaltyOrder",
                "type": "object",
                "properties": {
                  "amount": {
                    "title": "LoyaltiesEarningRulesEnableResponseBodyLoyaltyOrderAmount",
                    "type": "object",
                    "required": [],
                    "description": "Defines the ratio based on the property defined in the calculation_type parameter. For every set of value (1, 10, etc) defined in the every parameter for the property defined in calculation_type, give the customer the number of points defined in the points parameter. In other words, for every calculation_type, give points.",
                    "properties": {
                      "every": {
                        "type": "integer",
                        "description": "Value is multiplied by 100 to precisely represent 2 decimal places. For example, a $10 order amount is written as 1000.",
                        "nullable": true
                      },
                      "points": {
                        "type": "integer",
                        "description": "Number of points to be awarded, i.e. how many points to be added to the loyalty card.",
                        "nullable": true
                      }
                    },
                    "nullable": true
                  },
                  "total_amount": {
                    "title": "LoyaltiesEarningRulesEnableResponseBodyLoyaltyOrderTotalAmount",
                    "type": "object",
                    "required": [],
                    "description": "Defines the ratio based on the property defined in the calculation_type parameter. For every set of value (1, 10, etc) defined in the every parameter for the property defined in calculation_type, give the customer the number of points defined in the points parameter. In other words, for every calculation_type, give points.",
                    "properties": {
                      "every": {
                        "type": "integer",
                        "description": "Value is multiplied by 100 to precisely represent 2 decimal places. For example, a $10 order amount is written as 1000.",
                        "nullable": true
                      },
                      "points": {
                        "type": "integer",
                        "description": "Number of points to be awarded, i.e. how many points to be added to the loyalty card.",
                        "nullable": true
                      }
                    },
                    "nullable": true
                  },
                  "metadata": {
                    "title": "LoyaltiesEarningRulesEnableResponseBodyLoyaltyOrderMetadata",
                    "type": "object",
                    "required": [],
                    "description": "Defines the ratio based on the property defined in the calculation_type parameter. For every given increment of value (1, 10, etc) defined in the every parameter for the property defined in calculation_type, give the customer the number of points defined in the points parameter. In other words, for every order metadata property value, give points.",
                    "properties": {
                      "every": {
                        "type": "integer",
                        "description": "For how many increments of the order metadata property to grant points for.",
                        "nullable": true
                      },
                      "points": {
                        "type": "integer",
                        "description": "Number of points to be awarded, i.e. how many points to be added to the loyalty card.",
                        "nullable": true
                      },
                      "property": {
                        "type": "string",
                        "description": "Order metadata property.",
                        "nullable": true
                      }
                    },
                    "nullable": true
                  }
                },
                "nullable": true
              },
              "order_items": {
                "title": "LoyaltiesEarningRulesEnableResponseBodyLoyaltyOrderItems",
                "type": "object",
                "properties": {
                  "quantity": {
                    "title": "LoyaltiesEarningRulesEnableResponseBodyLoyaltyOrderItemsQuantity",
                    "type": "object",
                    "required": [],
                    "description": "Defines the ratio based on the property defined in the calculation_type parameter. For every set of value (1, 10, etc) defined in the every parameter for the property defined in calculation_type, give the customer the number of points defined in the points parameter. In other words, for every calculation_type, give points.",
                    "properties": {
                      "every": {
                        "type": "integer",
                        "description": "Value is multiplied by 100 to precisely represent 2 decimal places. For example, a $10 order amount is written as 1000.",
                        "nullable": true
                      },
                      "points": {
                        "type": "integer",
                        "description": "Number of points to be awarded, i.e. how many points to be added to the loyalty card.",
                        "nullable": true
                      },
                      "object": {
                        "type": "string",
                        "description": "Type of object taken under consideration.",
                        "enum": [
                          "products_collection",
                          "product",
                          "sku"
                        ],
                        "nullable": true
                      },
                      "id": {
                        "type": "string",
                        "description": "Unique ID of the resource, i.e. pc_75U0dHlr7u75BJodrW1AE3t6, prod_0bae32322150fd0546, or sku_0b7d7dfb090be5c619.",
                        "nullable": true
                      }
                    },
                    "nullable": true
                  },
                  "amount": {
                    "title": "LoyaltiesEarningRulesEnableResponseBodyLoyaltyOrderItemsAmount",
                    "type": "object",
                    "required": [],
                    "description": "Defines the ratio based on the property defined in the calculation_type parameter. For every set of value (1, 10, etc) defined in the every parameter for the property defined in calculation_type, give the customer the number of points defined in the points parameter. In other words, for every calculation_type, give points.",
                    "properties": {
                      "every": {
                        "type": "integer",
                        "description": "Value is multiplied by 100 to precisely represent 2 decimal places. For example, a $10 order amount is written as 1000.",
                        "nullable": true
                      },
                      "points": {
                        "type": "integer",
                        "description": "Number of points to be awarded, i.e. how many points to be added to the loyalty card.",
                        "nullable": true
                      },
                      "object": {
                        "type": "string",
                        "description": "Type of object taken under consideration.",
                        "enum": [
                          "products_collection",
                          "product",
                          "sku"
                        ],
                        "nullable": true
                      },
                      "id": {
                        "type": "string",
                        "description": "Unique ID of the resource, i.e. pc_75U0dHlr7u75BJodrW1AE3t6, prod_0bae32322150fd0546, or sku_0b7d7dfb090be5c619.",
                        "nullable": true
                      }
                    },
                    "nullable": true
                  },
                  "subtotal_amount": {
                    "title": "LoyaltiesEarningRulesEnableResponseBodyLoyaltyOrderItemsSubtotalAmount",
                    "type": "object",
                    "required": [],
                    "description": "Defines the ratio based on the property defined in the calculation_type parameter. For every set of value (1, 10, etc) defined in the every parameter for the property defined in calculation_type, give the customer the number of points defined in the points parameter. In other words, for every calculation_type, give points.",
                    "properties": {
                      "every": {
                        "type": "integer",
                        "description": "Value is multiplied by 100 to precisely represent 2 decimal places. For example, a $10 order amount is written as 1000.",
                        "nullable": true
                      },
                      "points": {
                        "type": "integer",
                        "description": "Number of points to be awarded, i.e. how many points to be added to the loyalty card.",
                        "nullable": true
                      },
                      "object": {
                        "type": "string",
                        "description": "Type of object taken under consideration.",
                        "enum": [
                          "products_collection",
                          "product",
                          "sku"
                        ],
                        "nullable": true
                      },
                      "id": {
                        "type": "string",
                        "description": "Unique ID of the resource, i.e. pc_75U0dHlr7u75BJodrW1AE3t6, prod_0bae32322150fd0546, or sku_0b7d7dfb090be5c619.",
                        "nullable": true
                      }
                    },
                    "nullable": true
                  }
                },
                "nullable": true
              },
              "customer": {
                "title": "LoyaltiesEarningRulesEnableResponseBodyLoyaltyCustomer",
                "type": "object",
                "required": [],
                "properties": {
                  "metadata": {
                    "title": "LoyaltiesEarningRulesEnableResponseBodyLoyaltyCustomerMetadata",
                    "type": "object",
                    "required": [],
                    "description": "Defines the ratio based on the property defined in the calculation_type parameter. For every given increment of value (1, 10, etc) defined in the every parameter for the property defined in calculation_type, give the customer the number of points defined in the points parameter. In other words, for every order metadata property value, give points.",
                    "properties": {
                      "every": {
                        "type": "integer",
                        "description": "For how many increments of the customer metadata property to grant points for.",
                        "nullable": true
                      },
                      "points": {
                        "type": "integer",
                        "description": "Number of points to be awarded, i.e. how many points to be added to the loyalty card.",
                        "nullable": true
                      },
                      "property": {
                        "type": "string",
                        "description": "Customer metadata property.",
                        "nullable": true
                      }
                    },
                    "nullable": true
                  }
                },
                "nullable": true
              },
              "custom_event": {
                "title": "LoyaltiesEarningRulesEnableResponseBodyLoyaltyCustomEvent",
                "type": "object",
                "required": [],
                "properties": {
                  "metadata": {
                    "title": "LoyaltiesEarningRulesEnableResponseBodyLoyaltyCustomEventMetadata",
                    "type": "object",
                    "required": [],
                    "description": "Defines the ratio based on the property defined in the calculation_type parameter. For every given increment of value (1, 10, etc) defined in the every parameter for the property defined in calculation_type, give the customer the number of points defined in the points parameter. In other words, for every order metadata property value, give points.",
                    "properties": {
                      "every": {
                        "type": "integer",
                        "description": "For how many increments of the customer metadata property to grant points for.",
                        "nullable": true
                      },
                      "points": {
                        "type": "integer",
                        "description": "Number of points to be awarded, i.e. how many points to be added to the loyalty card.",
                        "nullable": true
                      },
                      "property": {
                        "type": "string",
                        "description": "\nCustom event metadata property.",
                        "nullable": true
                      }
                    },
                    "nullable": true
                  }
                },
                "nullable": true
              }
            },
            "nullable": true
          },
          "event": {
            "$ref": "#/components/schemas/EarningRuleEvent"
          },
          "custom_event": {
            "title": "LoyaltiesEarningRulesEnableResponseBodyCustomEvent",
            "description": "Contains details about the custom event.",
            "type": "object",
            "properties": {
              "schema_id": {
                "description": "Unique identifier of the custom event schema",
                "type": "string",
                "nullable": true
              }
            },
            "required": [],
            "nullable": true
          },
          "segment": {
            "title": "LoyaltiesEarningRulesEnableResponseBodySegment",
            "type": "object",
            "description": "Contains the ID of a customer segment. Required for the `customer.segment.entered` option in the event.",
            "properties": {
              "id": {
                "type": "string",
                "description": "Contains a unique identifier of a customer segment. Assigned by the Voucherify API.",
                "nullable": true
              }
            },
            "required": [],
            "nullable": true
          },
          "loyalty_tier": {
            "title": "LoyaltiesEarningRulesEnableResponseBodyLoyaltyTier",
            "type": "object",
            "description": "Defines the tier associated with the earning rule definition.",
            "properties": {
              "id": {
                "type": "string",
                "description": "Unique loyalty tier ID associated with the earning rule.    \n\n- `__ANY__`: any loyalty tier within the campaign",
                "example": "ltr_pudTGWasuIqxdiDM0go31OV1",
                "nullable": true
              }
            },
            "nullable": true
          },
          "pending_points": {
            "title": "LoyaltiesEarningRulesEnableResponseBodyPendingPoints",
            "type": "object",
            "description": "Defines the configuration for pending points. Pending points can be used only with the `order.paid` event.",
            "properties": {
              "period_type": {
                "type": "string",
                "description": "Defines the type of the period during which the points are in the pending state. Currently, only `DAY` value is accepted.",
                "default": "DAY",
                "enum": [
                  "DAY"
                ],
                "nullable": true
              },
              "period_value": {
                "type": "integer",
                "description": "Defines for how long the points are in the pending state. The minimum value is 1, maximum is 90.",
                "minimum": 1,
                "maximum": 90,
                "nullable": true
              }
            },
            "nullable": true
          },
          "source": {
            "title": "LoyaltiesEarningRulesEnableResponseBodySource",
            "type": "object",
            "required": [],
            "description": "Contains the custom earning rule name and parent campaign.",
            "properties": {
              "banner": {
                "type": "string",
                "description": "Name of the earning rule. This is displayed as a header for the earning rule in the Dashboard.",
                "nullable": true
              },
              "object_id": {
                "type": "string",
                "description": "A unique campaign identifier assigned by the Voucherify API.",
                "nullable": true
              },
              "object_type": {
                "type": "string",
                "description": "Defines the object associated with the earning rule. Defaults to `campaign`.",
                "default": "campaign",
                "enum": [
                  "campaign"
                ],
                "nullable": true
              }
            },
            "nullable": true
          },
          "object": {
            "type": "string",
            "default": "earning_rule",
            "enum": [
              "earning_rule"
            ],
            "description": "The type of the object represented by JSON. Default is earning_rule.",
            "nullable": true
          },
          "automation_id": {
            "type": "string",
            "description": "For internal use by Voucherify.",
            "nullable": true
          },
          "start_date": {
            "type": "string",
            "description": "Start date defines when the earning rule starts to be active. Activation timestamp is presented in the ISO 8601 format. The earning rule is inactive before this date. If you do not define the start date for an earning rule, it will inherit the campaign start date by default.",
            "nullable": true
          },
          "expiration_date": {
            "type": "string",
            "description": "Expiration date defines when the earning rule expires. Expiration timestamp is presented in the ISO 8601 format. The earning rule is inactive after this date. If you do not define the expiration date for an earning rule, it will inherit the campaign expiration date by default.",
            "nullable": true
          },
          "validity_timeframe": {
            "$ref": "#/components/schemas/ValidityTimeframe"
          },
          "validity_day_of_week": {
            "$ref": "#/components/schemas/ValidityDayOfWeek"
          },
          "validity_hours": {
            "$ref": "#/components/schemas/ValidityHours"
          },
          "metadata": {
            "title": "LoyaltiesEarningRulesEnableResponseBodyMetadata",
            "type": "object",
            "description": "The metadata object stores all custom attributes assigned to the earning rule. A set of key/value pairs that you can attach to an earning rule object. It can be useful for storing additional information about the earning rule in a structured format.",
            "nullable": true
          },
          "expiration_rules": {
            "$ref": "#/components/schemas/EarningRuleExpirationRules"
          },
          "updated_at": {
            "type": "string",
            "nullable": true,
            "format": "date-time",
            "description": "Timestamp representing the date and time when the earning rule was last updated in ISO 8601 format."
          },
          "active": {
            "type": "boolean",
            "default": true,
            "description": "A flag to toggle the earning rule on or off. You can disable an earning rule even though it's within the active period defined by the start_date and expiration_date of the campaign or the earning rule's own start_date and expiration_date.",
            "nullable": true
          }
        },
        "description": "Response body schema for **POST** `v1/loyalties/{campaignId}/earning-rules/{earningRuleId}/enable`"
      },
      "LoyaltiesEarningRulesGetResponseBody": {
        "title": "LoyaltiesEarningRulesGetResponseBody",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Assigned by the Voucherify API, identifies the earning rule object.",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp representing the date and time when the earning rule was created. The value is shown in the ISO 8601 format.",
            "nullable": true
          },
          "loyalty": {
            "title": "LoyaltiesEarningRulesGetResponseBodyLoyalty",
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "FIXED",
                  "PROPORTIONAL"
                ],
                "nullable": true
              },
              "points": {
                "type": "integer",
                "description": "Defines how the points will be added to the loyalty card. FIXED adds a fixed number of points.",
                "nullable": true
              },
              "calculation_type": {
                "type": "string",
                "enum": [
                  "ORDER_AMOUNT",
                  "ORDER_TOTAL_AMOUNT",
                  "ORDER_METADATA",
                  "ORDER_ITEMS_QUANTITY",
                  "ORDER_ITEMS_AMOUNT",
                  "ORDER_ITEMS_SUBTOTAL_AMOUNT",
                  "CUSTOMER_METADATA",
                  "CUSTOM_EVENT_METADATA"
                ],
                "nullable": true
              },
              "order": {
                "title": "LoyaltiesEarningRulesGetResponseBodyLoyaltyOrder",
                "type": "object",
                "properties": {
                  "amount": {
                    "title": "LoyaltiesEarningRulesGetResponseBodyLoyaltyOrderAmount",
                    "type": "object",
                    "required": [],
                    "description": "Defines the ratio based on the property defined in the calculation_type parameter. For every set of value (1, 10, etc) defined in the every parameter for the property defined in calculation_type, give the customer the number of points defined in the points parameter. In other words, for every calculation_type, give points.",
                    "properties": {
                      "every": {
                        "type": "integer",
                        "description": "Value is multiplied by 100 to precisely represent 2 decimal places. For example, a $10 order amount is written as 1000.",
                        "nullable": true
                      },
                      "points": {
                        "type": "integer",
                        "description": "Number of points to be awarded, i.e. how many points to be added to the loyalty card.",
                        "nullable": true
                      }
                    },
                    "nullable": true
                  },
                  "total_amount": {
                    "title": "LoyaltiesEarningRulesGetResponseBodyLoyaltyOrderTotalAmount",
                    "type": "object",
                    "required": [],
                    "description": "Defines the ratio based on the property defined in the calculation_type parameter. For every set of value (1, 10, etc) defined in the every parameter for the property defined in calculation_type, give the customer the number of points defined in the points parameter. In other words, for every calculation_type, give points.",
                    "properties": {
                      "every": {
                        "type": "integer",
                        "description": "Value is multiplied by 100 to precisely represent 2 decimal places. For example, a $10 order amount is written as 1000.",
                        "nullable": true
                      },
                      "points": {
                        "type": "integer",
                        "description": "Number of points to be awarded, i.e. how many points to be added to the loyalty card.",
                        "nullable": true
                      }
                    },
                    "nullable": true
                  },
                  "metadata": {
                    "title": "LoyaltiesEarningRulesGetResponseBodyLoyaltyOrderMetadata",
                    "type": "object",
                    "required": [],
                    "description": "Defines the ratio based on the property defined in the calculation_type parameter. For every given increment of value (1, 10, etc) defined in the every parameter for the property defined in calculation_type, give the customer the number of points defined in the points parameter. In other words, for every order metadata property value, give points.",
                    "properties": {
                      "every": {
                        "type": "integer",
                        "description": "For how many increments of the order metadata property to grant points for.",
                        "nullable": true
                      },
                      "points": {
                        "type": "integer",
                        "description": "Number of points to be awarded, i.e. how many points to be added to the loyalty card.",
                        "nullable": true
                      },
                      "property": {
                        "type": "string",
                        "description": "Order metadata property.",
                        "nullable": true
                      }
                    },
                    "nullable": true
                  }
                },
                "nullable": true
              },
              "order_items": {
                "title": "LoyaltiesEarningRulesGetResponseBodyLoyaltyOrderItems",
                "type": "object",
                "properties": {
                  "quantity": {
                    "title": "LoyaltiesEarningRulesGetResponseBodyLoyaltyOrderItemsQuantity",
                    "type": "object",
                    "required": [],
                    "description": "Defines the ratio based on the property defined in the calculation_type parameter. For every set of value (1, 10, etc) defined in the every parameter for the property defined in calculation_type, give the customer the number of points defined in the points parameter. In other words, for every calculation_type, give points.",
                    "properties": {
                      "every": {
                        "type": "integer",
                        "description": "Value is multiplied by 100 to precisely represent 2 decimal places. For example, a $10 order amount is written as 1000.",
                        "nullable": true
                      },
                      "points": {
                        "type": "integer",
                        "description": "Number of points to be awarded, i.e. how many points to be added to the loyalty card.",
                        "nullable": true
                      },
                      "object": {
                        "type": "string",
                        "description": "Type of object taken under consideration.",
                        "enum": [
                          "products_collection",
                          "product",
                          "sku"
                        ],
                        "nullable": true
                      },
                      "id": {
                        "type": "string",
                        "description": "Unique ID of the resource, i.e. pc_75U0dHlr7u75BJodrW1AE3t6, prod_0bae32322150fd0546, or sku_0b7d7dfb090be5c619.",
                        "nullable": true
                      }
                    },
                    "nullable": true
                  },
                  "amount": {
                    "title": "LoyaltiesEarningRulesGetResponseBodyLoyaltyOrderItemsAmount",
                    "type": "object",
                    "required": [],
                    "description": "Defines the ratio based on the property defined in the calculation_type parameter. For every set of value (1, 10, etc) defined in the every parameter for the property defined in calculation_type, give the customer the number of points defined in the points parameter. In other words, for every calculation_type, give points.",
                    "properties": {
                      "every": {
                        "type": "integer",
                        "description": "Value is multiplied by 100 to precisely represent 2 decimal places. For example, a $10 order amount is written as 1000.",
                        "nullable": true
                      },
                      "points": {
                        "type": "integer",
                        "description": "Number of points to be awarded, i.e. how many points to be added to the loyalty card.",
                        "nullable": true
                      },
                      "object": {
                        "type": "string",
                        "description": "Type of object taken under consideration.",
                        "enum": [
                          "products_collection",
                          "product",
                          "sku"
                        ],
                        "nullable": true
                      },
                      "id": {
                        "type": "string",
                        "description": "Unique ID of the resource, i.e. pc_75U0dHlr7u75BJodrW1AE3t6, prod_0bae32322150fd0546, or sku_0b7d7dfb090be5c619.",
                        "nullable": true
                      }
                    },
                    "nullable": true
                  },
                  "subtotal_amount": {
                    "title": "LoyaltiesEarningRulesGetResponseBodyLoyaltyOrderItemsSubtotalAmount",
                    "type": "object",
                    "required": [],
                    "description": "Defines the ratio based on the property defined in the calculation_type parameter. For every set of value (1, 10, etc) defined in the every parameter for the property defined in calculation_type, give the customer the number of points defined in the points parameter. In other words, for every calculation_type, give points.",
                    "properties": {
                      "every": {
                        "type": "integer",
                        "description": "Value is multiplied by 100 to precisely represent 2 decimal places. For example, a $10 order amount is written as 1000.",
                        "nullable": true
                      },
                      "points": {
                        "type": "integer",
                        "description": "Number of points to be awarded, i.e. how many points to be added to the loyalty card.",
                        "nullable": true
                      },
                      "object": {
                        "type": "string",
                        "description": "Type of object taken under consideration.",
                        "enum": [
                          "products_collection",
                          "product",
                          "sku"
                        ],
                        "nullable": true
                      },
                      "id": {
                        "type": "string",
                        "description": "Unique ID of the resource, i.e. pc_75U0dHlr7u75BJodrW1AE3t6, prod_0bae32322150fd0546, or sku_0b7d7dfb090be5c619.",
                        "nullable": true
                      }
                    },
                    "nullable": true
                  }
                },
                "nullable": true
              },
              "customer": {
                "title": "LoyaltiesEarningRulesGetResponseBodyLoyaltyCustomer",
                "type": "object",
                "required": [],
                "properties": {
                  "metadata": {
                    "title": "LoyaltiesEarningRulesGetResponseBodyLoyaltyCustomerMetadata",
                    "type": "object",
                    "required": [],
                    "description": "Defines the ratio based on the property defined in the calculation_type parameter. For every given increment of value (1, 10, etc) defined in the every parameter for the property defined in calculation_type, give the customer the number of points defined in the points parameter. In other words, for every order metadata property value, give points.",
                    "properties": {
                      "every": {
                        "type": "integer",
                        "description": "For how many increments of the customer metadata property to grant points for.",
                        "nullable": true
                      },
                      "points": {
                        "type": "integer",
                        "description": "Number of points to be awarded, i.e. how many points to be added to the loyalty card.",
                        "nullable": true
                      },
                      "property": {
                        "type": "string",
                        "description": "Customer metadata property.",
                        "nullable": true
                      }
                    },
                    "nullable": true
                  }
                },
                "nullable": true
              },
              "custom_event": {
                "title": "LoyaltiesEarningRulesGetResponseBodyLoyaltyCustomEvent",
                "type": "object",
                "required": [],
                "properties": {
                  "metadata": {
                    "title": "LoyaltiesEarningRulesGetResponseBodyLoyaltyCustomEventMetadata",
                    "type": "object",
                    "required": [],
                    "description": "Defines the ratio based on the property defined in the calculation_type parameter. For every given increment of value (1, 10, etc) defined in the every parameter for the property defined in calculation_type, give the customer the number of points defined in the points parameter. In other words, for every order metadata property value, give points.",
                    "properties": {
                      "every": {
                        "type": "integer",
                        "description": "For how many increments of the customer metadata property to grant points for.",
                        "nullable": true
                      },
                      "points": {
                        "type": "integer",
                        "description": "Number of points to be awarded, i.e. how many points to be added to the loyalty card.",
                        "nullable": true
                      },
                      "property": {
                        "type": "string",
                        "description": "\nCustom event metadata property.",
                        "nullable": true
                      }
                    },
                    "nullable": true
                  }
                },
                "nullable": true
              }
            },
            "nullable": true
          },
          "event": {
            "$ref": "#/components/schemas/EarningRuleEvent"
          },
          "custom_event": {
            "title": "LoyaltiesEarningRulesGetResponseBodyCustomEvent",
            "description": "Contains details about the custom event.",
            "type": "object",
            "properties": {
              "schema_id": {
                "description": "Unique identifier of the custom event schema",
                "type": "string",
                "nullable": true
              }
            },
            "required": [],
            "nullable": true
          },
          "segment": {
            "title": "LoyaltiesEarningRulesGetResponseBodySegment",
            "type": "object",
            "description": "Contains the ID of a customer segment. Required for the `customer.segment.entered` option in the event.",
            "properties": {
              "id": {
                "type": "string",
                "description": "Contains a unique identifier of a customer segment. Assigned by the Voucherify API.",
                "nullable": true
              }
            },
            "required": [],
            "nullable": true
          },
          "loyalty_tier": {
            "title": "LoyaltiesEarningRulesGetResponseBodyLoyaltyTier",
            "type": "object",
            "description": "Defines the tier associated with the earning rule definition.",
            "properties": {
              "id": {
                "type": "string",
                "description": "Unique loyalty tier ID associated with the earning rule.    \n\n- `__ANY__`: any loyalty tier within the campaign",
                "example": "ltr_pudTGWasuIqxdiDM0go31OV1",
                "nullable": true
              }
            },
            "nullable": true
          },
          "pending_points": {
            "title": "LoyaltiesEarningRulesGetResponseBodyPendingPoints",
            "type": "object",
            "description": "Defines the configuration for pending points. Pending points can be used only with the `order.paid` event.",
            "properties": {
              "period_type": {
                "type": "string",
                "description": "Defines the type of the period during which the points are in the pending state. Currently, only `DAY` value is accepted.",
                "default": "DAY",
                "enum": [
                  "DAY"
                ],
                "nullable": true
              },
              "period_value": {
                "type": "integer",
                "description": "Defines for how long the points are in the pending state. The minimum value is 1, maximum is 90.",
                "minimum": 1,
                "maximum": 90,
                "nullable": true
              }
            },
            "nullable": true
          },
          "source": {
            "title": "LoyaltiesEarningRulesGetResponseBodySource",
            "type": "object",
            "required": [],
            "description": "Contains the custom earning rule name and parent campaign.",
            "properties": {
              "banner": {
                "type": "string",
                "description": "Name of the earning rule. This is displayed as a header for the earning rule in the Dashboard.",
                "nullable": true
              },
              "object_id": {
                "type": "string",
                "description": "A unique campaign identifier assigned by the Voucherify API.",
                "nullable": true
              },
              "object_type": {
                "type": "string",
                "description": "Defines the object associated with the earning rule. Defaults to `campaign`.",
                "default": "campaign",
                "enum": [
                  "campaign"
                ],
                "nullable": true
              }
            },
            "nullable": true
          },
          "object": {
            "type": "string",
            "default": "earning_rule",
            "enum": [
              "earning_rule"
            ],
            "description": "The type of the object represented by JSON. Default is earning_rule.",
            "nullable": true
          },
          "automation_id": {
            "type": "string",
            "description": "For internal use by Voucherify.",
            "nullable": true
          },
          "start_date": {
            "type": "string",
            "description": "Start date defines when the earning rule starts to be active. Activation timestamp is presented in the ISO 8601 format. The earning rule is inactive before this date. If you do not define the start date for an earning rule, it will inherit the campaign start date by default.",
            "nullable": true
          },
          "expiration_date": {
            "type": "string",
            "description": "Expiration date defines when the earning rule expires. Expiration timestamp is presented in the ISO 8601 format. The earning rule is inactive after this date. If you do not define the expiration date for an earning rule, it will inherit the campaign expiration date by default.",
            "nullable": true
          },
          "validity_timeframe": {
            "$ref": "#/components/schemas/ValidityTimeframe"
          },
          "validity_day_of_week": {
            "$ref": "#/components/schemas/ValidityDayOfWeek"
          },
          "validity_hours": {
            "$ref": "#/components/schemas/ValidityHours"
          },
          "metadata": {
            "title": "LoyaltiesEarningRulesGetResponseBodyMetadata",
            "type": "object",
            "description": "The metadata object stores all custom attributes assigned to the earning rule. A set of key/value pairs that you can attach to an earning rule object. It can be useful for storing additional information about the earning rule in a structured format.",
            "nullable": true
          },
          "expiration_rules": {
            "$ref": "#/components/schemas/EarningRuleExpirationRules"
          },
          "validation_rule_id": {
            "type": "string",
            "nullable": true,
            "description": "A unique validation rule identifier assigned by the Voucherify API. The validation rule is verified before points are added to the balance."
          },
          "updated_at": {
            "type": "string",
            "nullable": true,
            "format": "date-time",
            "description": "Timestamp representing the date and time when the earning rule was last updated in ISO 8601 format."
          },
          "active": {
            "type": "boolean",
            "description": "A flag to toggle the earning rule on or off. You can disable an earning rule even though it's within the active period defined by the start_date and expiration_date of the campaign or the earning rule's own start_date and expiration_date.\n\n- `true` indicates an active earning rule\n- `false` indicates an inactive earning rule",
            "nullable": true
          }
        },
        "description": "Response body schema for **GET** `v1/loyalties/{campaignId}/earning-rules/{earningRuleId}`."
      },
      "LoyaltiesEarningRulesListResponseBody": {
        "title": "LoyaltiesEarningRulesListResponseBody",
        "description": "Response body schema for listing earning rules using **GET** `v1/loyalties/{campaignId}/earning-rules` endpoint.",
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "description": "The type of the object represented by JSON. This object stores information about earning rules in a dictionary.",
            "default": "list",
            "enum": [
              "list"
            ],
            "nullable": true
          },
          "data_ref": {
            "type": "string",
            "default": "data",
            "description": "Identifies the name of the attribute that contains the array of earning rule objects.",
            "nullable": true
          },
          "data": {
            "title": "LoyaltiesEarningRulesListResponseBodyData",
            "type": "array",
            "description": "Contains array of earning rule objects.",
            "items": {
              "$ref": "#/components/schemas/EarningRule"
            },
            "nullable": true
          },
          "total": {
            "type": "integer",
            "description": "Total number of earning rule objects.",
            "nullable": true
          }
        }
      },
      "LoyaltiesEarningRulesUpdateRequestBody": {
        "title": "LoyaltiesEarningRulesUpdateRequestBody",
        "type": "object",
        "properties": {
          "validation_rule_id": {
            "type": "string",
            "example": "val_248vs7tUjlIE",
            "description": "A unique validation rule identifier assigned by the Voucherify API. The validation rule is verified before points are added to the balance.",
            "nullable": true
          },
          "loyalty": {
            "title": "LoyaltiesEarningRulesUpdateRequestBodyLoyalty",
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "FIXED",
                  "PROPORTIONAL"
                ],
                "nullable": true
              },
              "points": {
                "type": "integer",
                "description": "Defines how the points will be added to the loyalty card. FIXED adds a fixed number of points.",
                "nullable": true
              },
              "calculation_type": {
                "type": "string",
                "enum": [
                  "ORDER_AMOUNT",
                  "ORDER_TOTAL_AMOUNT",
                  "ORDER_METADATA",
                  "ORDER_ITEMS_QUANTITY",
                  "ORDER_ITEMS_AMOUNT",
                  "ORDER_ITEMS_SUBTOTAL_AMOUNT",
                  "CUSTOMER_METADATA",
                  "CUSTOM_EVENT_METADATA"
                ],
                "nullable": true
              },
              "order": {
                "title": "LoyaltiesEarningRulesUpdateRequestBodyLoyaltyOrder",
                "type": "object",
                "properties": {
                  "amount": {
                    "title": "LoyaltiesEarningRulesUpdateRequestBodyLoyaltyOrderAmount",
                    "type": "object",
                    "required": [],
                    "description": "Defines the ratio based on the property defined in the calculation_type parameter. For every set of value (1, 10, etc) defined in the every parameter for the property defined in calculation_type, give the customer the number of points defined in the points parameter. In other words, for every calculation_type, give points.",
                    "properties": {
                      "every": {
                        "type": "integer",
                        "description": "Value is multiplied by 100 to precisely represent 2 decimal places. For example, a $10 order amount is written as 1000.",
                        "nullable": true
                      },
                      "points": {
                        "type": "integer",
                        "description": "Number of points to be awarded, i.e. how many points to be added to the loyalty card.",
                        "nullable": true
                      }
                    },
                    "nullable": true
                  },
                  "total_amount": {
                    "title": "LoyaltiesEarningRulesUpdateRequestBodyLoyaltyOrderTotalAmount",
                    "type": "object",
                    "required": [],
                    "description": "Defines the ratio based on the property defined in the calculation_type parameter. For every set of value (1, 10, etc) defined in the every parameter for the property defined in calculation_type, give the customer the number of points defined in the points parameter. In other words, for every calculation_type, give points.",
                    "properties": {
                      "every": {
                        "type": "integer",
                        "description": "Value is multiplied by 100 to precisely represent 2 decimal places. For example, a $10 order amount is written as 1000.",
                        "nullable": true
                      },
                      "points": {
                        "type": "integer",
                        "description": "Number of points to be awarded, i.e. how many points to be added to the loyalty card.",
                        "nullable": true
                      }
                    },
                    "nullable": true
                  },
                  "metadata": {
                    "title": "LoyaltiesEarningRulesUpdateRequestBodyLoyaltyOrderMetadata",
                    "type": "object",
                    "required": [],
                    "description": "Defines the ratio based on the property defined in the calculation_type parameter. For every given increment of value (1, 10, etc) defined in the every parameter for the property defined in calculation_type, give the customer the number of points defined in the points parameter. In other words, for every order metadata property value, give points.",
                    "properties": {
                      "every": {
                        "type": "integer",
                        "description": "For how many increments of the order metadata property to grant points for.",
                        "nullable": true
                      },
                      "points": {
                        "type": "integer",
                        "description": "Number of points to be awarded, i.e. how many points to be added to the loyalty card.",
                        "nullable": true
                      },
                      "property": {
                        "type": "string",
                        "description": "Order metadata property.",
                        "nullable": true
                      }
                    },
                    "nullable": true
                  }
                },
                "nullable": true
              },
              "order_items": {
                "title": "LoyaltiesEarningRulesUpdateRequestBodyLoyaltyOrderItems",
                "type": "object",
                "properties": {
                  "quantity": {
                    "title": "LoyaltiesEarningRulesUpdateRequestBodyLoyaltyOrderItemsQuantity",
                    "type": "object",
                    "required": [],
                    "description": "Defines the ratio based on the property defined in the calculation_type parameter. For every set of value (1, 10, etc) defined in the every parameter for the property defined in calculation_type, give the customer the number of points defined in the points parameter. In other words, for every calculation_type, give points.",
                    "properties": {
                      "every": {
                        "type": "integer",
                        "description": "Value is multiplied by 100 to precisely represent 2 decimal places. For example, a $10 order amount is written as 1000.",
                        "nullable": true
                      },
                      "points": {
                        "type": "integer",
                        "description": "Number of points to be awarded, i.e. how many points to be added to the loyalty card.",
                        "nullable": true
                      },
                      "object": {
                        "type": "string",
                        "description": "Type of object taken under consideration.",
                        "enum": [
                          "products_collection",
                          "product",
                          "sku"
                        ],
                        "nullable": true
                      },
                      "id": {
                        "type": "string",
                        "description": "Unique ID of the resource, i.e. pc_75U0dHlr7u75BJodrW1AE3t6, prod_0bae32322150fd0546, or sku_0b7d7dfb090be5c619.",
                        "nullable": true
                      }
                    },
                    "nullable": true
                  },
                  "amount": {
                    "title": "LoyaltiesEarningRulesUpdateRequestBodyLoyaltyOrderItemsAmount",
                    "type": "object",
                    "required": [],
                    "description": "Defines the ratio based on the property defined in the calculation_type parameter. For every set of value (1, 10, etc) defined in the every parameter for the property defined in calculation_type, give the customer the number of points defined in the points parameter. In other words, for every calculation_type, give points.",
                    "properties": {
                      "every": {
                        "type": "integer",
                        "description": "Value is multiplied by 100 to precisely represent 2 decimal places. For example, a $10 order amount is written as 1000.",
                        "nullable": true
                      },
                      "points": {
                        "type": "integer",
                        "description": "Number of points to be awarded, i.e. how many points to be added to the loyalty card.",
                        "nullable": true
                      },
                      "object": {
                        "type": "string",
                        "description": "Type of object taken under consideration.",
                        "enum": [
                          "products_collection",
                          "product",
                          "sku"
                        ],
                        "nullable": true
                      },
                      "id": {
                        "type": "string",
                        "description": "Unique ID of the resource, i.e. pc_75U0dHlr7u75BJodrW1AE3t6, prod_0bae32322150fd0546, or sku_0b7d7dfb090be5c619.",
                        "nullable": true
                      }
                    },
                    "nullable": true
                  },
                  "subtotal_amount": {
                    "title": "LoyaltiesEarningRulesUpdateRequestBodyLoyaltyOrderItemsSubtotalAmount",
                    "type": "object",
                    "required": [],
                    "description": "Defines the ratio based on the property defined in the calculation_type parameter. For every set of value (1, 10, etc) defined in the every parameter for the property defined in calculation_type, give the customer the number of points defined in the points parameter. In other words, for every calculation_type, give points.",
                    "properties": {
                      "every": {
                        "type": "integer",
                        "description": "Value is multiplied by 100 to precisely represent 2 decimal places. For example, a $10 order amount is written as 1000.",
                        "nullable": true
                      },
                      "points": {
                        "type": "integer",
                        "description": "Number of points to be awarded, i.e. how many points to be added to the loyalty card.",
                        "nullable": true
                      },
                      "object": {
                        "type": "string",
                        "description": "Type of object taken under consideration.",
                        "enum": [
                          "products_collection",
                          "product",
                          "sku"
                        ],
                        "nullable": true
                      },
                      "id": {
                        "type": "string",
                        "description": "Unique ID of the resource, i.e. pc_75U0dHlr7u75BJodrW1AE3t6, prod_0bae32322150fd0546, or sku_0b7d7dfb090be5c619.",
                        "nullable": true
                      }
                    },
                    "nullable": true
                  }
                },
                "nullable": true
              },
              "customer": {
                "title": "LoyaltiesEarningRulesUpdateRequestBodyLoyaltyCustomer",
                "type": "object",
                "required": [],
                "properties": {
                  "metadata": {
                    "title": "LoyaltiesEarningRulesUpdateRequestBodyLoyaltyCustomerMetadata",
                    "type": "object",
                    "required": [],
                    "description": "Defines the ratio based on the property defined in the calculation_type parameter. For every given increment of value (1, 10, etc) defined in the every parameter for the property defined in calculation_type, give the customer the number of points defined in the points parameter. In other words, for every order metadata property value, give points.",
                    "properties": {
                      "every": {
                        "type": "integer",
                        "description": "For how many increments of the customer metadata property to grant points for.",
                        "nullable": true
                      },
                      "points": {
                        "type": "integer",
                        "description": "Number of points to be awarded, i.e. how many points to be added to the loyalty card.",
                        "nullable": true
                      },
                      "property": {
                        "type": "string",
                        "description": "Customer metadata property.",
                        "nullable": true
                      }
                    },
                    "nullable": true
                  }
                },
                "nullable": true
              },
              "custom_event": {
                "title": "LoyaltiesEarningRulesUpdateRequestBodyLoyaltyCustomEvent",
                "type": "object",
                "required": [],
                "properties": {
                  "metadata": {
                    "title": "LoyaltiesEarningRulesUpdateRequestBodyLoyaltyCustomEventMetadata",
                    "type": "object",
                    "required": [],
                    "description": "Defines the ratio based on the property defined in the calculation_type parameter. For every given increment of value (1, 10, etc) defined in the every parameter for the property defined in calculation_type, give the customer the number of points defined in the points parameter. In other words, for every order metadata property value, give points.",
                    "properties": {
                      "every": {
                        "type": "integer",
                        "description": "For how many increments of the customer metadata property to grant points for.",
                        "nullable": true
                      },
                      "points": {
                        "type": "integer",
                        "description": "Number of points to be awarded, i.e. how many points to be added to the loyalty card.",
                        "nullable": true
                      },
                      "property": {
                        "type": "string",
                        "description": "\nCustom event metadata property.",
                        "nullable": true
                      }
                    },
                    "nullable": true
                  }
                },
                "nullable": true
              }
            },
            "nullable": true
          },
          "source": {
            "title": "LoyaltiesEarningRulesUpdateRequestBodySource",
            "type": "object",
            "description": "Contains the custom earning rule name and parent campaign.",
            "properties": {
              "banner": {
                "type": "string",
                "example": "Order Paid - You will get 100 points",
                "description": "Name of the earning rule. This is displayed as a header for the earning rule in the Dashboard.",
                "nullable": true
              }
            },
            "nullable": true
          },
          "active": {
            "type": "boolean",
            "description": "A flag to toggle the earning rule on or off. You can disable an earning rule even though it's within the active period defined by the `start_date` and `expiration_date` of the campaign or the earning rule's own `start_date` and `expiration_date`.  \n\n- `true` indicates an *active* earning rule\n- `false` indicates an *inactive* earning rule",
            "nullable": true
          },
          "start_date": {
            "type": "string",
            "example": "2022-02-02T13:00:00.000Z",
            "format": "date-time",
            "description": "Start date defines when the earning rule starts to be active. Activation timestamp is presented in the ISO 8601 format. Earning rule is *inactive before* this date. If you don't define the start date for an earning rule, it will inherit the campaign start date by default. ",
            "nullable": true
          },
          "expiration_date": {
            "type": "string",
            "format": "date-time",
            "example": "2022-03-03T14:30:00.000Z",
            "description": "Expiration date defines when the earning rule expires. Expiration timestamp is presented in the ISO 8601 format.  Earning rule is *inactive after* this date.If you don't define the expiration date for an earning rule, it will inherit the campaign expiration date by default.",
            "nullable": true
          },
          "pending_points": {
            "title": "LoyaltiesEarningRulesUpdateRequestBodyPendingPoints",
            "type": "object",
            "nullable": true,
            "description": "Defines the configuration for pending points. Pending points can be used only with the `order.paid` event. Pass `null` to remove pending points from the earning rule.",
            "properties": {
              "period_type": {
                "type": "string",
                "description": "Defines the type of the period during which the points are in the pending state. Currently, only `DAY` value is accepted.",
                "default": "DAY",
                "enum": [
                  "DAY"
                ],
                "nullable": true
              },
              "period_value": {
                "type": "integer",
                "description": "Defines for how long the points are in the pending state. The minimum value is 1, maximum is 90.",
                "minimum": 1,
                "maximum": 90,
                "nullable": true
              }
            }
          },
          "expiration_rules": {
            "$ref": "#/components/schemas/EarningRuleExpirationRules"
          },
          "validity_timeframe": {
            "$ref": "#/components/schemas/ValidityTimeframe"
          },
          "validity_day_of_week": {
            "$ref": "#/components/schemas/ValidityDayOfWeek"
          },
          "validity_hours": {
            "$ref": "#/components/schemas/ValidityHours"
          },
          "metadata": {
            "title": "LoyaltiesEarningRulesUpdateRequestBodyMetadata",
            "type": "object",
            "description": "The metadata object stores all custom attributes assigned to the earning rule. A set of key/value pairs that you can attach to an earning rule object. It can be useful for storing additional information about the earning rule in a structured format.",
            "nullable": true
          }
        }
      },
      "LoyaltiesEarningRulesUpdateResponseBody": {
        "title": "LoyaltiesEarningRulesUpdateResponseBody",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Assigned by the Voucherify API, identifies the earning rule object.",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp representing the date and time when the earning rule was created. The value is shown in the ISO 8601 format.",
            "nullable": true
          },
          "loyalty": {
            "title": "LoyaltiesEarningRulesUpdateResponseBodyLoyalty",
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "FIXED",
                  "PROPORTIONAL"
                ],
                "nullable": true
              },
              "points": {
                "type": "integer",
                "description": "Defines how the points will be added to the loyalty card. FIXED adds a fixed number of points.",
                "nullable": true
              },
              "calculation_type": {
                "type": "string",
                "enum": [
                  "ORDER_AMOUNT",
                  "ORDER_TOTAL_AMOUNT",
                  "ORDER_METADATA",
                  "ORDER_ITEMS_QUANTITY",
                  "ORDER_ITEMS_AMOUNT",
                  "ORDER_ITEMS_SUBTOTAL_AMOUNT",
                  "CUSTOMER_METADATA",
                  "CUSTOM_EVENT_METADATA"
                ],
                "nullable": true
              },
              "order": {
                "title": "LoyaltiesEarningRulesUpdateResponseBodyLoyaltyOrder",
                "type": "object",
                "properties": {
                  "amount": {
                    "title": "LoyaltiesEarningRulesUpdateResponseBodyLoyaltyOrderAmount",
                    "type": "object",
                    "required": [],
                    "description": "Defines the ratio based on the property defined in the calculation_type parameter. For every set of value (1, 10, etc) defined in the every parameter for the property defined in calculation_type, give the customer the number of points defined in the points parameter. In other words, for every calculation_type, give points.",
                    "properties": {
                      "every": {
                        "type": "integer",
                        "description": "Value is multiplied by 100 to precisely represent 2 decimal places. For example, a $10 order amount is written as 1000.",
                        "nullable": true
                      },
                      "points": {
                        "type": "integer",
                        "description": "Number of points to be awarded, i.e. how many points to be added to the loyalty card.",
                        "nullable": true
                      }
                    },
                    "nullable": true
                  },
                  "total_amount": {
                    "title": "LoyaltiesEarningRulesUpdateResponseBodyLoyaltyOrderTotalAmount",
                    "type": "object",
                    "required": [],
                    "description": "Defines the ratio based on the property defined in the calculation_type parameter. For every set of value (1, 10, etc) defined in the every parameter for the property defined in calculation_type, give the customer the number of points defined in the points parameter. In other words, for every calculation_type, give points.",
                    "properties": {
                      "every": {
                        "type": "integer",
                        "description": "Value is multiplied by 100 to precisely represent 2 decimal places. For example, a $10 order amount is written as 1000.",
                        "nullable": true
                      },
                      "points": {
                        "type": "integer",
                        "description": "Number of points to be awarded, i.e. how many points to be added to the loyalty card.",
                        "nullable": true
                      }
                    },
                    "nullable": true
                  },
                  "metadata": {
                    "title": "LoyaltiesEarningRulesUpdateResponseBodyLoyaltyOrderMetadata",
                    "type": "object",
                    "required": [],
                    "description": "Defines the ratio based on the property defined in the calculation_type parameter. For every given increment of value (1, 10, etc) defined in the every parameter for the property defined in calculation_type, give the customer the number of points defined in the points parameter. In other words, for every order metadata property value, give points.",
                    "properties": {
                      "every": {
                        "type": "integer",
                        "description": "For how many increments of the order metadata property to grant points for.",
                        "nullable": true
                      },
                      "points": {
                        "type": "integer",
                        "description": "Number of points to be awarded, i.e. how many points to be added to the loyalty card.",
                        "nullable": true
                      },
                      "property": {
                        "type": "string",
                        "description": "Order metadata property.",
                        "nullable": true
                      }
                    },
                    "nullable": true
                  }
                },
                "nullable": true
              },
              "order_items": {
                "title": "LoyaltiesEarningRulesUpdateResponseBodyLoyaltyOrderItems",
                "type": "object",
                "properties": {
                  "quantity": {
                    "title": "LoyaltiesEarningRulesUpdateResponseBodyLoyaltyOrderItemsQuantity",
                    "type": "object",
                    "required": [],
                    "description": "Defines the ratio based on the property defined in the calculation_type parameter. For every set of value (1, 10, etc) defined in the every parameter for the property defined in calculation_type, give the customer the number of points defined in the points parameter. In other words, for every calculation_type, give points.",
                    "properties": {
                      "every": {
                        "type": "integer",
                        "description": "Value is multiplied by 100 to precisely represent 2 decimal places. For example, a $10 order amount is written as 1000.",
                        "nullable": true
                      },
                      "points": {
                        "type": "integer",
                        "description": "Number of points to be awarded, i.e. how many points to be added to the loyalty card.",
                        "nullable": true
                      },
                      "object": {
                        "type": "string",
                        "description": "Type of object taken under consideration.",
                        "enum": [
                          "products_collection",
                          "product",
                          "sku"
                        ],
                        "nullable": true
                      },
                      "id": {
                        "type": "string",
                        "description": "Unique ID of the resource, i.e. pc_75U0dHlr7u75BJodrW1AE3t6, prod_0bae32322150fd0546, or sku_0b7d7dfb090be5c619.",
                        "nullable": true
                      }
                    },
                    "nullable": true
                  },
                  "amount": {
                    "title": "LoyaltiesEarningRulesUpdateResponseBodyLoyaltyOrderItemsAmount",
                    "type": "object",
                    "required": [],
                    "description": "Defines the ratio based on the property defined in the calculation_type parameter. For every set of value (1, 10, etc) defined in the every parameter for the property defined in calculation_type, give the customer the number of points defined in the points parameter. In other words, for every calculation_type, give points.",
                    "properties": {
                      "every": {
                        "type": "integer",
                        "description": "Value is multiplied by 100 to precisely represent 2 decimal places. For example, a $10 order amount is written as 1000.",
                        "nullable": true
                      },
                      "points": {
                        "type": "integer",
                        "description": "Number of points to be awarded, i.e. how many points to be added to the loyalty card.",
                        "nullable": true
                      },
                      "object": {
                        "type": "string",
                        "description": "Type of object taken under consideration.",
                        "enum": [
                          "products_collection",
                          "product",
                          "sku"
                        ],
                        "nullable": true
                      },
                      "id": {
                        "type": "string",
                        "description": "Unique ID of the resource, i.e. pc_75U0dHlr7u75BJodrW1AE3t6, prod_0bae32322150fd0546, or sku_0b7d7dfb090be5c619.",
                        "nullable": true
                      }
                    },
                    "nullable": true
                  },
                  "subtotal_amount": {
                    "title": "LoyaltiesEarningRulesUpdateResponseBodyLoyaltyOrderItemsSubtotalAmount",
                    "type": "object",
                    "required": [],
                    "description": "Defines the ratio based on the property defined in the calculation_type parameter. For every set of value (1, 10, etc) defined in the every parameter for the property defined in calculation_type, give the customer the number of points defined in the points parameter. In other words, for every calculation_type, give points.",
                    "properties": {
                      "every": {
                        "type": "integer",
                        "description": "Value is multiplied by 100 to precisely represent 2 decimal places. For example, a $10 order amount is written as 1000.",
                        "nullable": true
                      },
                      "points": {
                        "type": "integer",
                        "description": "Number of points to be awarded, i.e. how many points to be added to the loyalty card.",
                        "nullable": true
                      },
                      "object": {
                        "type": "string",
                        "description": "Type of object taken under consideration.",
                        "enum": [
                          "products_collection",
                          "product",
                          "sku"
                        ],
                        "nullable": true
                      },
                      "id": {
                        "type": "string",
                        "description": "Unique ID of the resource, i.e. pc_75U0dHlr7u75BJodrW1AE3t6, prod_0bae32322150fd0546, or sku_0b7d7dfb090be5c619.",
                        "nullable": true
                      }
                    },
                    "nullable": true
                  }
                },
                "nullable": true
              },
              "customer": {
                "title": "LoyaltiesEarningRulesUpdateResponseBodyLoyaltyCustomer",
                "type": "object",
                "required": [],
                "properties": {
                  "metadata": {
                    "title": "LoyaltiesEarningRulesUpdateResponseBodyLoyaltyCustomerMetadata",
                    "type": "object",
                    "required": [],
                    "description": "Defines the ratio based on the property defined in the calculation_type parameter. For every given increment of value (1, 10, etc) defined in the every parameter for the property defined in calculation_type, give the customer the number of points defined in the points parameter. In other words, for every order metadata property value, give points.",
                    "properties": {
                      "every": {
                        "type": "integer",
                        "description": "For how many increments of the customer metadata property to grant points for.",
                        "nullable": true
                      },
                      "points": {
                        "type": "integer",
                        "description": "Number of points to be awarded, i.e. how many points to be added to the loyalty card.",
                        "nullable": true
                      },
                      "property": {
                        "type": "string",
                        "description": "Customer metadata property.",
                        "nullable": true
                      }
                    },
                    "nullable": true
                  }
                },
                "nullable": true
              },
              "custom_event": {
                "title": "LoyaltiesEarningRulesUpdateResponseBodyLoyaltyCustomEvent",
                "type": "object",
                "required": [],
                "properties": {
                  "metadata": {
                    "title": "LoyaltiesEarningRulesUpdateResponseBodyLoyaltyCustomEventMetadata",
                    "type": "object",
                    "required": [],
                    "description": "Defines the ratio based on the property defined in the calculation_type parameter. For every given increment of value (1, 10, etc) defined in the every parameter for the property defined in calculation_type, give the customer the number of points defined in the points parameter. In other words, for every order metadata property value, give points.",
                    "properties": {
                      "every": {
                        "type": "integer",
                        "description": "For how many increments of the customer metadata property to grant points for.",
                        "nullable": true
                      },
                      "points": {
                        "type": "integer",
                        "description": "Number of points to be awarded, i.e. how many points to be added to the loyalty card.",
                        "nullable": true
                      },
                      "property": {
                        "type": "string",
                        "description": "\nCustom event metadata property.",
                        "nullable": true
                      }
                    },
                    "nullable": true
                  }
                },
                "nullable": true
              }
            },
            "nullable": true
          },
          "event": {
            "$ref": "#/components/schemas/EarningRuleEvent"
          },
          "custom_event": {
            "title": "LoyaltiesEarningRulesUpdateResponseBodyCustomEvent",
            "description": "Contains details about the custom event.",
            "type": "object",
            "properties": {
              "schema_id": {
                "description": "Unique identifier of the custom event schema",
                "type": "string",
                "nullable": true
              }
            },
            "required": [],
            "nullable": true
          },
          "segment": {
            "title": "LoyaltiesEarningRulesUpdateResponseBodySegment",
            "type": "object",
            "description": "Contains the ID of a customer segment. Required for the `customer.segment.entered` option in the event.",
            "properties": {
              "id": {
                "type": "string",
                "description": "Contains a unique identifier of a customer segment. Assigned by the Voucherify API.",
                "nullable": true
              }
            },
            "required": [],
            "nullable": true
          },
          "loyalty_tier": {
            "title": "LoyaltiesEarningRulesUpdateResponseBodyLoyaltyTier",
            "type": "object",
            "description": "Defines the tier associated with the earning rule definition.",
            "properties": {
              "id": {
                "type": "string",
                "description": "Unique loyalty tier ID associated with the earning rule.    \n\n- `__ANY__`: any loyalty tier within the campaign",
                "example": "ltr_pudTGWasuIqxdiDM0go31OV1",
                "nullable": true
              }
            },
            "nullable": true
          },
          "pending_points": {
            "title": "LoyaltiesEarningRulesUpdateResponseBodyPendingPoints",
            "type": "object",
            "description": "Defines the configuration for pending points. Pending points can be used only with the `order.paid` event.",
            "properties": {
              "period_type": {
                "type": "string",
                "description": "Defines the type of the period during which the points are in the pending state. Currently, only `DAY` value is accepted.",
                "default": "DAY",
                "enum": [
                  "DAY"
                ],
                "nullable": true
              },
              "period_value": {
                "type": "integer",
                "description": "Defines for how long the points are in the pending state. The minimum value is 1, maximum is 90.",
                "minimum": 1,
                "maximum": 90,
                "nullable": true
              }
            },
            "nullable": true
          },
          "source": {
            "title": "LoyaltiesEarningRulesUpdateResponseBodySource",
            "type": "object",
            "required": [],
            "description": "Contains the custom earning rule name and parent campaign.",
            "properties": {
              "banner": {
                "type": "string",
                "description": "Name of the earning rule. This is displayed as a header for the earning rule in the Dashboard.",
                "nullable": true
              },
              "object_id": {
                "type": "string",
                "description": "A unique campaign identifier assigned by the Voucherify API.",
                "nullable": true
              },
              "object_type": {
                "type": "string",
                "description": "Defines the object associated with the earning rule. Defaults to `campaign`.",
                "default": "campaign",
                "enum": [
                  "campaign"
                ],
                "nullable": true
              }
            },
            "nullable": true
          },
          "object": {
            "type": "string",
            "default": "earning_rule",
            "enum": [
              "earning_rule"
            ],
            "description": "The type of the object represented by JSON. Default is earning_rule.",
            "nullable": true
          },
          "automation_id": {
            "type": "string",
            "description": "For internal use by Voucherify.",
            "nullable": true
          },
          "start_date": {
            "type": "string",
            "description": "Start date defines when the earning rule starts to be active. Activation timestamp is presented in the ISO 8601 format. The earning rule is inactive before this date. If you do not define the start date for an earning rule, it will inherit the campaign start date by default.",
            "nullable": true
          },
          "expiration_date": {
            "type": "string",
            "description": "Expiration date defines when the earning rule expires. Expiration timestamp is presented in the ISO 8601 format. The earning rule is inactive after this date. If you do not define the expiration date for an earning rule, it will inherit the campaign expiration date by default.",
            "nullable": true
          },
          "validity_timeframe": {
            "$ref": "#/components/schemas/ValidityTimeframe"
          },
          "validity_day_of_week": {
            "$ref": "#/components/schemas/ValidityDayOfWeek"
          },
          "validity_hours": {
            "$ref": "#/components/schemas/ValidityHours"
          },
          "metadata": {
            "title": "LoyaltiesEarningRulesUpdateResponseBodyMetadata",
            "type": "object",
            "description": "The metadata object stores all custom attributes assigned to the earning rule. A set of key/value pairs that you can attach to an earning rule object. It can be useful for storing additional information about the earning rule in a structured format.",
            "nullable": true
          },
          "expiration_rules": {
            "$ref": "#/components/schemas/EarningRuleExpirationRules"
          },
          "validation_rule_id": {
            "type": "string",
            "nullable": true,
            "description": "A unique validation rule identifier assigned by the Voucherify API. The validation rule is verified before points are added to the balance."
          },
          "updated_at": {
            "type": "string",
            "nullable": true,
            "format": "date-time",
            "description": "Timestamp representing the date and time when the earning rule was last updated in ISO 8601 format."
          },
          "active": {
            "type": "boolean",
            "description": "A flag to toggle the earning rule on or off. You can disable an earning rule even though it's within the active period defined by the start_date and expiration_date of the campaign or the earning rule's own start_date and expiration_date.\n\n- `true` indicates an active earning rule\n- `false` indicates an inactive earning rule",
            "nullable": true
          }
        },
        "description": "Response body schema for **PUT** `v1/loyalties/{campaignId}/earning-rules/{earningRuleId}`."
      },
      "LoyaltiesGetCampaignResponseBody": {
        "title": "LoyaltiesGetCampaignResponseBody",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique campaign ID, assigned by Voucherify.",
            "example": "camp_f7fBbQxUuTN7dI7tGOo5XMDA",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Campaign name.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "An optional field to keep any extra textual information about the campaign such as a campaign description and details.",
            "nullable": true
          },
          "campaign_type": {
            "type": "string",
            "default": "LOYALTY_PROGRAM",
            "enum": [
              "LOYALTY_PROGRAM"
            ],
            "description": "Type of campaign.",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "Defines whether the campaign can be updated with new vouchers after campaign creation.    \n\n- `AUTO_UPDATE`: the campaign is dynamic, i.e. vouchers will generate based on set criteria    \n-  `STATIC`: vouchers need to be manually published",
            "enum": [
              "AUTO_UPDATE",
              "STATIC"
            ],
            "nullable": true
          },
          "voucher": {
            "$ref": "#/components/schemas/LoyaltyCampaignVoucher"
          },
          "auto_join": {
            "type": "boolean",
            "description": "Indicates whether customers will be able to auto-join a loyalty campaign if any earning rule is fulfilled.",
            "nullable": true
          },
          "join_once": {
            "type": "boolean",
            "description": "Always set to `true` for loyalty campaigns, meaning customers can join the campaign only once. It can't be changed to `false`.",
            "nullable": true
          },
          "use_voucher_metadata_schema": {
            "type": "boolean",
            "description": "Flag indicating whether the campaign is to use the voucher's metadata schema instead of the campaign metadata schema.",
            "nullable": true
          },
          "validity_timeframe": {
            "$ref": "#/components/schemas/ValidityTimeframe"
          },
          "validity_day_of_week": {
            "$ref": "#/components/schemas/ValidityDayOfWeek"
          },
          "validity_hours": {
            "$ref": "#/components/schemas/ValidityHours"
          },
          "activity_duration_after_publishing": {
            "type": "string",
            "description": "Defines the amount of time the campaign will be active in ISO 8601 format after publishing. For example, a campaign with a `duration` of `P24D` will be valid for a duration of 24 days.",
            "nullable": true
          },
          "vouchers_count": {
            "type": "integer",
            "description": "Total number of unique vouchers in campaign.",
            "nullable": true
          },
          "start_date": {
            "type": "string",
            "format": "date-time",
            "description": "Activation timestamp defines when the campaign starts to be active in ISO 8601 format. Campaign is *inactive before* this date. ",
            "example": "2022-09-20T00:00:00.000Z",
            "nullable": true
          },
          "expiration_date": {
            "type": "string",
            "format": "date-time",
            "description": "Expiration timestamp defines when the campaign expires in ISO 8601 format.  Campaign is *inactive after* this date.",
            "example": "2022-09-30T00:00:00.000Z",
            "nullable": true
          },
          "active": {
            "type": "boolean",
            "description": "A flag to toggle the campaign on or off. You can disable a campaign even though it's within the active period defined by the `start_date` and `expiration_date`.  \n\n- `true` indicates an *active* campaign\n- `false` indicates an *inactive* campaign",
            "nullable": true
          },
          "metadata": {
            "title": "LoyaltiesGetCampaignResponseBodyMetadata",
            "type": "object",
            "description": "The metadata object stores all custom attributes assigned to the campaign. A set of key/value pairs that you can attach to a campaign object. It can be useful for storing additional information about the campaign in a structured format.",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2021-12-01T08:00:50.038Z",
            "description": "Timestamp representing the date and time when the campaign was created. The value is shown in the ISO 8601 format.",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2022-09-20T09:18:19.623Z",
            "description": "Timestamp representing the date and time when the campaign was last updated in ISO 8601 format.",
            "nullable": true
          },
          "category": {
            "type": "string",
            "description": "Unique category name.",
            "nullable": true
          },
          "creation_status": {
            "type": "string",
            "enum": [
              "DONE",
              "IN_PROGRESS",
              "FAILED",
              "DRAFT",
              "MODIFYING"
            ],
            "description": "Indicates the status of the campaign creation.",
            "nullable": true
          },
          "vouchers_generation_status": {
            "type": "string",
            "description": "Indicates the status of the campaign's voucher generation.",
            "enum": [
              "DONE",
              "IN_PROGRESS",
              "FAILED",
              "DRAFT",
              "MODIFYING"
            ],
            "nullable": true
          },
          "readonly": {
            "type": "boolean",
            "description": "Indicates whether the campaign can be only read by a restricted user in the Areas and Stores enterprise feature. It is returned only to restricted users; this field is not returned for users with other roles.",
            "nullable": true
          },
          "protected": {
            "type": "boolean",
            "description": "Indicates whether the resource can be deleted.",
            "nullable": true
          },
          "category_id": {
            "type": "string",
            "nullable": true,
            "description": "Unique category ID that this campaign belongs to.",
            "example": "cat_0b688929a2476386a7"
          },
          "categories": {
            "title": "LoyaltiesGetCampaignResponseBodyCategories",
            "type": "array",
            "description": "Contains details about the category.",
            "items": {
              "$ref": "#/components/schemas/Category"
            },
            "nullable": true
          },
          "object": {
            "type": "string",
            "default": "campaign",
            "description": "The type of the object represented by JSON. This object stores information about the campaign.",
            "nullable": true
          },
          "loyalty_tiers_expiration": {
            "$ref": "#/components/schemas/LoyaltyTiersExpirationAll"
          },
          "validation_rules_assignments": {
            "$ref": "#/components/schemas/ValidationRulesAssignmentsList"
          },
          "access_settings_assignments": {
            "$ref": "#/components/schemas/AccessSettingsCampaignAssignmentsList"
          }
        },
        "required": [],
        "description": "Response body schema for **GET** `/loyalties/{campaignId}`."
      },
      "LoyaltiesListCampaignsResponseBody": {
        "title": "LoyaltiesListCampaignsResponseBody",
        "type": "object",
        "description": "Response body schema for **Get** `/loyalties`.",
        "properties": {
          "object": {
            "type": "string",
            "default": "list",
            "description": "The type of the object represented by JSON. This object stores information about loyalty campaigns in a dictionary.",
            "nullable": true
          },
          "data_ref": {
            "type": "string",
            "default": "campaigns",
            "enum": [
              "campaigns"
            ],
            "description": "Identifies the name of the attribute that contains the array of loyalty campaign objects.",
            "nullable": true
          },
          "campaigns": {
            "title": "LoyaltiesListCampaignsResponseBodyCampaigns",
            "type": "array",
            "description": "Contains an array of loyalty campaign objects.",
            "items": {
              "$ref": "#/components/schemas/LoyaltyCampaign"
            },
            "nullable": true
          },
          "total": {
            "type": "integer",
            "description": "Total number of loyalty campaign objects.",
            "nullable": true
          }
        }
      },
      "LoyaltiesListMembersResponseBody": {
        "title": "LoyaltiesListMembersResponseBody",
        "type": "object",
        "description": "Response body schema for **GET** `v1/loyalties/{campaignId}/members`.",
        "properties": {
          "object": {
            "type": "string",
            "default": "list",
            "description": "The type of the object represented by JSON. This object stores information about members in a dictionary.",
            "nullable": true
          },
          "data_ref": {
            "type": "string",
            "default": "vouchers",
            "enum": [
              "vouchers"
            ],
            "description": "Identifies the name of the attribute that contains the array of voucher objects.",
            "nullable": true
          },
          "vouchers": {
            "title": "LoyaltiesListMembersResponseBodyVouchers",
            "type": "array",
            "description": "Contains array of voucher objects representing loyalty cards, in other words, loyalty program members.",
            "items": {
              "$ref": "#/components/schemas/LoyaltyMember"
            },
            "nullable": true
          },
          "total": {
            "type": "integer",
            "description": "Total number of voucher objects.",
            "nullable": true
          }
        }
      },
      "LoyaltiesMemberActivityListResponseBody": {
        "title": "LoyaltiesMemberActivityListResponseBody",
        "type": "object",
        "description": "Response body schema for retrieving member activity.",
        "properties": {
          "object": {
            "type": "string",
            "default": "list",
            "description": "The type of the object represented by JSON. This object stores information about member activities in a dictionary.",
            "enum": [
              "list"
            ],
            "nullable": true
          },
          "data_ref": {
            "type": "string",
            "default": "data",
            "description": "Identifies the name of the attribute that contains the array of member activity objects.",
            "nullable": true
          },
          "data": {
            "title": "LoyaltiesMemberActivityListResponseBodyData",
            "type": "array",
            "description": "Array of member activity objects.",
            "items": {
              "$ref": "#/components/schemas/MemberActivity"
            },
            "nullable": true
          },
          "has_more": {
            "type": "boolean",
            "description": "As query results are always limited (by the limit parameter), the `has_more` flag indicates if there are more records for given filter parameters. This lets you know if you can run another request with a `starting_after_id` query or a different limit to get more records returned in the results.",
            "nullable": true
          },
          "more_starting_after": {
            "type": "string",
            "description": "Returns an ID that can be used to return another page of results. Use the event ID in the `starting_after_id` query parameter to display another page of the results starting after the event with that ID.",
            "nullable": true
          }
        },
        "required": []
      },
      "LoyaltiesMembersBalanceUpdateRequestBody": {
        "title": "LoyaltiesMembersBalanceUpdateRequestBody",
        "description": "Request Body schema for **POST** `v1/loyalties/members/{memberId}/balance` and **POST** `v1/loyalties/{campaignId}/members/{memberId}/balance`.",
        "type": "object",
        "properties": {
          "points": {
            "type": "integer",
            "description": "Incremental balance to be added to/subtracted from the loyalty card.\n\n- To add points: 100\n- To subtract points, add a minus: -100",
            "nullable": true
          },
          "expiration_type": {
            "$ref": "#/components/schemas/PointsExpirationTypes"
          },
          "expiration_date": {
            "type": "string",
            "format": "date-time",
            "description": "Set expiration date for added points, i.e. `YYYY-MM-DD`. This parameter is required only when expiration_type is set to `CUSTOM_DATE`.",
            "nullable": true
          },
          "reason": {
            "type": "string",
            "description": "Reason for the transfer.",
            "nullable": true
          },
          "source_id": {
            "type": "string",
            "description": "The merchant's transaction ID if it is different from the Voucherify transaction ID. It is really useful in case of an integration between multiple systems. It can be a transaction ID from a CRM system, database or 3rd-party service.",
            "nullable": true
          }
        },
        "required": []
      },
      "LoyaltiesMembersBalanceUpdateResponseBody": {
        "title": "LoyaltiesMembersBalanceUpdateResponseBody",
        "type": "object",
        "description": "Response schema for **POST** `v1/loyalties/members/{memberId}/balance` and for **POST** `v1/loyalties/{campaignId}/members/{memberId}/balance`.",
        "properties": {
          "points": {
            "type": "integer",
            "description": "The incremental points removed or added to the current balance on the loyalty card.",
            "nullable": true
          },
          "total": {
            "type": "integer",
            "description": "The total of points accrued over the lifetime of the loyalty card.",
            "nullable": true
          },
          "balance": {
            "type": "integer",
            "minimum": 0,
            "description": "The balance after adding/removing points.",
            "nullable": true
          },
          "type": {
            "type": "string",
            "enum": [
              "loyalty_card",
              "gift_voucher"
            ],
            "description": "The type of voucher being modified.",
            "nullable": true
          },
          "object": {
            "type": "string",
            "pattern": "balance",
            "default": "balance",
            "enum": [
              "balance"
            ],
            "description": "The type of the object represented by JSON. Default is balance.",
            "nullable": true
          },
          "related_object": {
            "title": "LoyaltiesMembersBalanceUpdateResponseBodyRelatedObject",
            "type": "object",
            "required": [],
            "description": "Defines the object that is being modified with the values that are returned in the balance object.",
            "properties": {
              "type": {
                "type": "string",
                "default": "voucher",
                "enum": [
                  "voucher"
                ],
                "description": "The object being modified.",
                "nullable": true
              },
              "id": {
                "type": "string",
                "description": "Identifies the loyalty card that is being modified, this is the ID that was assigned by the Voucherify API.",
                "nullable": true
              }
            },
            "nullable": true
          },
          "operation_type": {
            "type": "string",
            "description": "The type of operation being performed.",
            "enum": [
              "MANUAL",
              "AUTOMATIC"
            ],
            "nullable": true
          }
        },
        "required": []
      },
      "LoyaltiesMembersCreateRequestBody": {
        "title": "LoyaltiesMembersCreateRequestBody",
        "type": "object",
        "properties": {
          "voucher": {
            "description": "Code of voucher being published.",
            "type": "string",
            "nullable": true
          },
          "source_id": {
            "type": "string",
            "description": "The merchant's publication ID if it is different from the Voucherify publication ID. It's an optional tracking identifier of a publication. It is really useful in case of an integration between multiple systems. It can be a publication ID from a CRM system, database or 3rd-party service.\nIf `source_id` is provided only 1 voucher can be published per request.",
            "nullable": true
          },
          "customer": {
            "$ref": "#/components/schemas/Customer"
          },
          "metadata": {
            "title": "LoyaltiesMembersCreateRequestBodyMetadata",
            "type": "object",
            "description": "The metadata object stores all custom attributes assigned to the publication. A set of key/value pairs that you can attach to a publication object. It can be useful for storing additional information about the publication in a structured format.",
            "nullable": true
          },
          "channel": {
            "type": "string",
            "description": "Specify the distribution channel.",
            "nullable": true
          }
        },
        "description": "Request body schema for assigning a loyalty card to a customer using **POST** `/loyalties/{campaignId}/members`."
      },
      "LoyaltiesMembersCreateResponseBody": {
        "title": "LoyaltiesMembersCreateResponseBody",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "v_mkZN9v7vjYUadXnHrMza8W5c34fE5KiV",
            "description": "Assigned by the Voucherify API, identifies the voucher.",
            "nullable": true
          },
          "code": {
            "type": "string",
            "example": "WVPblOYX",
            "description": "A code that identifies a voucher. Pattern can use all letters of the English alphabet, Arabic numerals, and special characters.",
            "nullable": true
          },
          "campaign": {
            "type": "string",
            "example": "Loyalty campaign",
            "description": "A unique campaign name, identifies the voucher's parent campaign.",
            "nullable": true
          },
          "campaign_id": {
            "type": "string",
            "example": "camp_FNYR4jhqZBM9xTptxDGgeNBV",
            "description": "Assigned by the Voucherify API, identifies the voucher's parent campaign.",
            "nullable": true
          },
          "category": {
            "type": "string",
            "description": "Tag defining the category that this voucher belongs to.",
            "nullable": true
          },
          "category_id": {
            "type": "string",
            "description": "Unique category ID assigned by Voucherify.",
            "example": "cat_0bb343dee3cdb5ec0c",
            "nullable": true
          },
          "type": {
            "type": "string",
            "default": "LOYALTY_CARD",
            "enum": [
              "LOYALTY_CARD"
            ],
            "description": "Defines the type of the voucher. ",
            "nullable": true
          },
          "discount": {
            "title": "LoyaltiesMembersCreateResponseBodyDiscount",
            "type": "object",
            "nullable": true
          },
          "gift": {
            "title": "LoyaltiesMembersCreateResponseBodyGift",
            "type": "object",
            "nullable": true
          },
          "loyalty_card": {
            "title": "LoyaltiesMembersCreateResponseBodyLoyaltyCard",
            "type": "object",
            "description": "Object representing loyalty card parameters. Child attributes are present only if `type` is `LOYALTY_CARD`. Defaults to `null`.",
            "properties": {
              "points": {
                "type": "integer",
                "example": 7000,
                "description": "Total number of points added to the loyalty card over its lifespan.",
                "nullable": true
              },
              "balance": {
                "type": "integer",
                "example": 6970,
                "description": "Points available for reward redemption. This is calculated as follows: `balance` = `points` - `expired_points` - `subtracted_points` - `redemption.redeemed_points`.",
                "nullable": true
              },
              "next_expiration_date": {
                "type": "string",
                "format": "date",
                "example": "2023-05-30",
                "description": "The next closest date when the next set of points are due to expire.",
                "nullable": true
              },
              "next_expiration_points": {
                "type": "integer",
                "description": "The amount of points that are set to expire next.",
                "nullable": true
              },
              "pending_points": {
                "type": "integer",
                "description": "Shows the number of pending points that will be added to the loyalty card when they are activated automatically or manually.",
                "nullable": true
              },
              "expired_points": {
                "type": "integer",
                "description": "Shows the total number of expired points over the lifetime of the loyalty card.",
                "nullable": true
              },
              "subtracted_points": {
                "type": "integer",
                "description": "Shows the total number of subtracted points over the lifetime of the loyalty card.",
                "nullable": true
              }
            },
            "nullable": true
          },
          "start_date": {
            "type": "string",
            "example": "2021-12-01T00:00:00.000Z",
            "format": "date-time",
            "description": "Activation timestamp defines when the code starts to be active in ISO 8601 format. Voucher is *inactive before* this date. ",
            "nullable": true
          },
          "expiration_date": {
            "type": "string",
            "example": "2021-12-31T00:00:00.000Z",
            "format": "date-time",
            "description": "Expiration timestamp defines when the code expires in ISO 8601 format.  Voucher is *inactive after* this date.",
            "nullable": true
          },
          "validity_timeframe": {
            "$ref": "#/components/schemas/ValidityTimeframe"
          },
          "validity_day_of_week": {
            "$ref": "#/components/schemas/ValidityDayOfWeek"
          },
          "validity_hours": {
            "$ref": "#/components/schemas/ValidityHours"
          },
          "active": {
            "type": "boolean",
            "nullable": true,
            "description": "A flag to toggle the voucher on or off. You can disable a voucher even though it's within the active period defined by the `start_date` and `expiration_date`.  \n\n- `true` indicates an *active* voucher\n- `false` indicates an *inactive* voucher"
          },
          "additional_info": {
            "type": "string",
            "description": "An optional field to keep any extra textual information about the code such as a code description and details.",
            "nullable": true
          },
          "metadata": {
            "title": "LoyaltiesMembersCreateResponseBodyMetadata",
            "type": "object",
            "description": "The metadata object stores all custom attributes assigned to the code. A set of key/value pairs that you can attach to a voucher object. It can be useful for storing additional information about the voucher in a structured format.",
            "nullable": true
          },
          "assets": {
            "$ref": "#/components/schemas/VoucherAssets"
          },
          "is_referral_code": {
            "type": "boolean",
            "nullable": true,
            "description": "This is always false for loyalty members."
          },
          "created_at": {
            "type": "string",
            "example": "2021-12-22T10:13:06.487Z",
            "description": "Timestamp representing the date and time when the voucher was created. The value is shown in the ISO 8601 format.",
            "format": "date-time",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "example": "2021-12-22T10:14:45.316Z",
            "format": "date-time",
            "description": "Timestamp representing the date and time when the voucher was last updated in ISO 8601 format.",
            "nullable": true
          },
          "holder_id": {
            "type": "string",
            "example": "cust_eWgXlBBiY6THFRJwX45Iakv4",
            "description": "Unique identifier of the customer who owns the voucher.",
            "nullable": true
          },
          "object": {
            "type": "string",
            "description": "The type of the object represented by JSON. Default is `voucher`.",
            "default": "voucher",
            "nullable": true
          },
          "publish": {
            "title": "LoyaltiesMembersCreateResponseBodyPublish",
            "type": "object",
            "description": "This object stores a summary of publish events: an events counter and an endpoint which can be called to return details of each event.  A publication is required for loyalty cards and referral codes. This object gets updated whenever a voucher has been published. Publication means assigning a code to a particular customer. Typically, a publication is made by distributing your codes to your customers, e.g. through Export to MailChimp or <!-- [publish voucher](OpenAPI.json/paths/~1publications/post) -->[publish voucher](ref:create-publication) API method. \n\n<!-- title: My Table Title -->\n\n| Required | Optional |\n| -------- | :------: |\n| `type`:`LOYALTY_CARD` |  `type`:`DISCOUNT_VOUCHER`   | \n| `is_referral_code`:`true`      |    `type`:`GIFT_VOUCHER`   |\n",
            "properties": {
              "object": {
                "type": "string",
                "default": "list",
                "description": "The type of the object represented is by default `list`. To get this list, you need to make a call to the endpoint returned in the `url` attribute.",
                "nullable": true
              },
              "count": {
                "type": "integer",
                "example": 0,
                "description": "Publication event counter.",
                "nullable": true
              },
              "url": {
                "type": "string",
                "example": "/v1/vouchers/WVPblOYX/publications?page=1&limit=10",
                "description": "The endpoint where this list of publications can be accessed using a **GET** method. `/v1/vouchers/{voucher_code}/publications`",
                "nullable": true
              }
            },
            "nullable": true
          },
          "redemption": {
            "title": "LoyaltiesMembersCreateResponseBodyRedemption",
            "type": "object",
            "description": "Stores a summary of redemptions that have been applied to the voucher.",
            "properties": {
              "quantity": {
                "type": "integer",
                "description": "How many times a voucher can be redeemed. A `null` value means unlimited.",
                "nullable": true
              },
              "redeemed_quantity": {
                "type": "integer",
                "example": 1,
                "description": "How many times a voucher has already been redeemed.",
                "nullable": true
              },
              "redeemed_points": {
                "type": "integer",
                "example": 100000,
                "description": "Total loyalty points redeemed.",
                "nullable": true
              },
              "object": {
                "type": "string",
                "default": "list",
                "description": "The type of the object represented is by default `list`. To get this list, you need to make a call to the endpoint returned in the url attribute.",
                "nullable": true
              },
              "url": {
                "type": "string",
                "example": "/v1/vouchers/WVPblOYX/redemptions?page=1&limit=10",
                "description": "The endpoint where this list of redemptions can be accessed using a **GET** method. `/v1/vouchers/{voucher_code}/redemptions`",
                "nullable": true
              }
            },
            "nullable": true
          }
        },
        "description": "Respone body schema for assigning a loyalty card to a customer using **POST** `/loyalties/{campaignId}/members`."
      },
      "LoyaltiesMembersGetResponseBody": {
        "title": "LoyaltiesMembersGetResponseBody",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "v_mkZN9v7vjYUadXnHrMza8W5c34fE5KiV",
            "description": "Assigned by the Voucherify API, identifies the voucher.",
            "nullable": true
          },
          "code": {
            "type": "string",
            "example": "WVPblOYX",
            "description": "A code that identifies a voucher. Pattern can use all letters of the English alphabet, Arabic numerals, and special characters.",
            "nullable": true
          },
          "campaign": {
            "type": "string",
            "example": "Loyalty campaign",
            "description": "A unique campaign name, identifies the voucher's parent campaign.",
            "nullable": true
          },
          "campaign_id": {
            "type": "string",
            "example": "camp_FNYR4jhqZBM9xTptxDGgeNBV",
            "description": "Assigned by the Voucherify API, identifies the voucher's parent campaign.",
            "nullable": true
          },
          "category": {
            "type": "string",
            "description": "Tag defining the category that this voucher belongs to.",
            "nullable": true
          },
          "category_id": {
            "type": "string",
            "description": "Unique category ID assigned by Voucherify.",
            "example": "cat_0bb343dee3cdb5ec0c",
            "nullable": true
          },
          "type": {
            "type": "string",
            "default": "LOYALTY_CARD",
            "enum": [
              "LOYALTY_CARD"
            ],
            "description": "Defines the type of the voucher. ",
            "nullable": true
          },
          "discount": {
            "title": "LoyaltiesMembersGetResponseBodyDiscount",
            "type": "object",
            "nullable": true
          },
          "gift": {
            "title": "LoyaltiesMembersGetResponseBodyGift",
            "type": "object",
            "nullable": true
          },
          "loyalty_card": {
            "title": "LoyaltiesMembersGetResponseBodyLoyaltyCard",
            "type": "object",
            "description": "Object representing loyalty card parameters. Child attributes are present only if `type` is `LOYALTY_CARD`. Defaults to `null`.",
            "properties": {
              "points": {
                "type": "integer",
                "example": 7000,
                "description": "Total number of points added to the loyalty card over its lifespan.",
                "nullable": true
              },
              "balance": {
                "type": "integer",
                "example": 6970,
                "description": "Points available for reward redemption. This is calculated as follows: `balance` = `points` - `expired_points` - `subtracted_points` - `redemption.redeemed_points`.",
                "nullable": true
              },
              "next_expiration_date": {
                "type": "string",
                "format": "date",
                "example": "2023-05-30",
                "description": "The next closest date when the next set of points are due to expire.",
                "nullable": true
              },
              "next_expiration_points": {
                "type": "integer",
                "description": "The amount of points that are set to expire next.",
                "nullable": true
              },
              "pending_points": {
                "type": "integer",
                "description": "Shows the number of pending points that will be added to the loyalty card when they are activated automatically or manually.",
                "nullable": true
              },
              "expired_points": {
                "type": "integer",
                "description": "Shows the total number of expired points over the lifetime of the loyalty card.",
                "nullable": true
              },
              "subtracted_points": {
                "type": "integer",
                "description": "Shows the total number of subtracted points over the lifetime of the loyalty card.",
                "nullable": true
              }
            },
            "nullable": true
          },
          "start_date": {
            "type": "string",
            "example": "2021-12-01T00:00:00.000Z",
            "format": "date-time",
            "description": "Activation timestamp defines when the code starts to be active in ISO 8601 format. Voucher is *inactive before* this date. ",
            "nullable": true
          },
          "expiration_date": {
            "type": "string",
            "example": "2021-12-31T00:00:00.000Z",
            "format": "date-time",
            "description": "Expiration timestamp defines when the code expires in ISO 8601 format.  Voucher is *inactive after* this date.",
            "nullable": true
          },
          "validity_timeframe": {
            "$ref": "#/components/schemas/ValidityTimeframe"
          },
          "validity_day_of_week": {
            "$ref": "#/components/schemas/ValidityDayOfWeek"
          },
          "validity_hours": {
            "$ref": "#/components/schemas/ValidityHours"
          },
          "active": {
            "type": "boolean",
            "nullable": true,
            "description": "A flag to toggle the voucher on or off. You can disable a voucher even though it's within the active period defined by the `start_date` and `expiration_date`.  \n\n- `true` indicates an *active* voucher\n- `false` indicates an *inactive* voucher"
          },
          "additional_info": {
            "type": "string",
            "description": "An optional field to keep any extra textual information about the code such as a code description and details.",
            "nullable": true
          },
          "metadata": {
            "title": "LoyaltiesMembersGetResponseBodyMetadata",
            "type": "object",
            "description": "The metadata object stores all custom attributes assigned to the code. A set of key/value pairs that you can attach to a voucher object. It can be useful for storing additional information about the voucher in a structured format.",
            "nullable": true
          },
          "assets": {
            "$ref": "#/components/schemas/VoucherAssets"
          },
          "is_referral_code": {
            "type": "boolean",
            "nullable": true,
            "description": "This is always false for loyalty members."
          },
          "created_at": {
            "type": "string",
            "example": "2021-12-22T10:13:06.487Z",
            "description": "Timestamp representing the date and time when the voucher was created. The value is shown in the ISO 8601 format.",
            "format": "date-time",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "example": "2021-12-22T10:14:45.316Z",
            "format": "date-time",
            "description": "Timestamp representing the date and time when the voucher was last updated in ISO 8601 format.",
            "nullable": true
          },
          "holder_id": {
            "type": "string",
            "example": "cust_eWgXlBBiY6THFRJwX45Iakv4",
            "description": "Unique identifier of the customer who owns the voucher.",
            "nullable": true
          },
          "object": {
            "type": "string",
            "description": "The type of the object represented by JSON. Default is `voucher`.",
            "default": "voucher",
            "nullable": true
          },
          "publish": {
            "title": "LoyaltiesMembersGetResponseBodyPublish",
            "type": "object",
            "description": "This object stores a summary of publish events: an events counter and an endpoint which can be called to return details of each event.  A publication is required for loyalty cards and referral codes. This object gets updated whenever a voucher has been published. Publication means assigning a code to a particular customer. Typically, a publication is made by distributing your codes to your customers, e.g. through Export to MailChimp or <!-- [publish voucher](OpenAPI.json/paths/~1publications/post) -->[publish voucher](ref:create-publication) API method. \n\n<!-- title: My Table Title -->\n\n| Required | Optional |\n| -------- | :------: |\n| `type`:`LOYALTY_CARD` |  `type`:`DISCOUNT_VOUCHER`   | \n| `is_referral_code`:`true`      |    `type`:`GIFT_VOUCHER`   |\n",
            "properties": {
              "object": {
                "type": "string",
                "default": "list",
                "description": "The type of the object represented is by default `list`. To get this list, you need to make a call to the endpoint returned in the `url` attribute.",
                "nullable": true
              },
              "count": {
                "type": "integer",
                "example": 0,
                "description": "Publication event counter.",
                "nullable": true
              },
              "url": {
                "type": "string",
                "example": "/v1/vouchers/WVPblOYX/publications?page=1&limit=10",
                "description": "The endpoint where this list of publications can be accessed using a **GET** method. `/v1/vouchers/{voucher_code}/publications`",
                "nullable": true
              }
            },
            "nullable": true
          },
          "redemption": {
            "title": "LoyaltiesMembersGetResponseBodyRedemption",
            "type": "object",
            "description": "Stores a summary of redemptions that have been applied to the voucher.",
            "properties": {
              "quantity": {
                "type": "integer",
                "description": "How many times a voucher can be redeemed. A `null` value means unlimited.",
                "nullable": true
              },
              "redeemed_quantity": {
                "type": "integer",
                "example": 1,
                "description": "How many times a voucher has already been redeemed.",
                "nullable": true
              },
              "redeemed_points": {
                "type": "integer",
                "example": 100000,
                "description": "Total loyalty points redeemed.",
                "nullable": true
              },
              "object": {
                "type": "string",
                "default": "list",
                "description": "The type of the object represented is by default `list`. To get this list, you need to make a call to the endpoint returned in the url attribute.",
                "nullable": true
              },
              "url": {
                "type": "string",
                "example": "/v1/vouchers/WVPblOYX/redemptions?page=1&limit=10",
                "description": "The endpoint where this list of redemptions can be accessed using a **GET** method. `/v1/vouchers/{voucher_code}/redemptions`",
                "nullable": true
              }
            },
            "nullable": true
          }
        },
        "description": "Response body schema for **GET** `/loyalties/{campaignId}/members/{memberId}` and **GET** `/loyalties/members/{memberId}`."
      },
      "LoyaltiesMembersPendingPointsActivateResponseBody": {
        "title": "LoyaltiesMembersPendingPointsActivateResponseBody",
        "type": "object",
        "description": "Response body schema for **POST** `/loyalties/members/{memberId}/pending-points/{pendingPointsId}/activate`.",
        "properties": {
          "points": {
            "type": "integer",
            "description": "The number of pending points added to the loyalty card.",
            "nullable": true
          },
          "total": {
            "type": "integer",
            "description": "Total number of points incurred over the lifespan of the loyalty card, minus the expired points.",
            "nullable": true
          },
          "balance": {
            "type": "integer",
            "description": "The current number of loyalty points after the pending points have been added.",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "The type of the voucher being modified. For pending points, it is always `loyalty_card`.",
            "default": "loyalty_card",
            "enum": [
              "loyalty_card"
            ],
            "nullable": true
          },
          "object": {
            "type": "string",
            "description": "The type of the object represented by JSON. Default is `balance`.",
            "default": "balance",
            "enum": [
              "balance"
            ],
            "nullable": true
          },
          "related_object": {
            "title": "LoyaltiesMembersPendingPointsActivateResponseBodyRelatedObject",
            "type": "object",
            "description": "Defines the resource that is being modified.",
            "required": [],
            "properties": {
              "type": {
                "type": "string",
                "description": "The object being modified, i.e. `voucher`.",
                "default": "voucher",
                "enum": [
                  "voucher"
                ],
                "nullable": true
              },
              "id": {
                "type": "string",
                "description": "Identifies the voucher that is being modified. This is the unique identifer that was assigned by Voucherify.",
                "example": "v_abCdEfghI1JKLMNPqRS2Tu3vWXyza4bc",
                "nullable": true
              }
            },
            "nullable": true
          },
          "operation_type": {
            "type": "string",
            "description": "The type of the operation being performed.",
            "default": "MANUAL",
            "enum": [
              "MANUAL"
            ],
            "nullable": true
          }
        },
        "required": []
      },
      "LoyaltiesMembersPendingPointsBalanceRequestBody": {
        "title": "LoyaltiesMembersPendingPointsBalanceRequestBody",
        "type": "object",
        "description": "Request body schema for **POST** `v1/loyalties/members/{memberId}/pending-points/{pendingPointsId}/balance`.",
        "properties": {
          "points": {
            "type": "integer",
            "description": "Add or subtract pending points with a given ID. A negative value subtracts the points.",
            "nullable": true
          }
        }
      },
      "LoyaltiesMembersPendingPointsBalanceResponseBody": {
        "title": "LoyaltiesMembersPendingPointsBalanceResponseBody",
        "type": "object",
        "description": "Response body schema for **POST** `/loyalties/members/{memberId}/pending-points/{pendingPointsId}/balance`.",
        "properties": {
          "points": {
            "type": "integer",
            "description": "The number of pending points added to or subtracted from the loyalty card.",
            "nullable": true
          },
          "total": {
            "type": "integer",
            "description": "Total number of pending points currently on a loyalty card.",
            "nullable": true
          },
          "object": {
            "type": "string",
            "description": "The type of the object represented by JSON. Default is `balance`.",
            "default": "balance",
            "enum": [
              "balance"
            ],
            "nullable": true
          },
          "related_object": {
            "title": "LoyaltiesMembersPendingPointsBalanceResponseBodyRelatedObject",
            "type": "object",
            "description": "Defines the resource that is being modified.",
            "required": [],
            "properties": {
              "type": {
                "type": "string",
                "description": "The object being modified, i.e. `voucher`.",
                "default": "voucher",
                "enum": [
                  "voucher"
                ],
                "nullable": true
              },
              "id": {
                "type": "string",
                "description": "Identifies the voucher that is being modified. This is the unique identifer that was assigned by Voucherify.",
                "example": "v_abCdEfghI1JKLMNPqRS2Tu3vWXyza4bc",
                "nullable": true
              }
            },
            "nullable": true
          },
          "operation_type": {
            "type": "string",
            "description": "The type of the operation being performed.",
            "default": "MANUAL",
            "enum": [
              "MANUAL"
            ],
            "nullable": true
          }
        },
        "required": []
      },
      "LoyaltiesMembersPendingPointsListResponseBody": {
        "title": "LoyaltiesMembersPendingPointsListResponseBody",
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "default": "list",
            "description": "The type of the object represented by JSON.",
            "enum": [
              "list"
            ],
            "nullable": true
          },
          "data_ref": {
            "type": "string",
            "default": "data",
            "description": "Identifies the name of the attribute that contains the array of pending point objects.",
            "enum": [
              "data"
            ],
            "nullable": true
          },
          "data": {
            "title": "LoyaltiesMembersPendingPointsListResponseBodyData",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LoyaltyPendingPoints"
            },
            "description": "A dictionary that contains an array of pending point entries. Each entry in the array is a separate pending point object.",
            "nullable": true
          },
          "has_more": {
            "type": "boolean",
            "description": "As query results are always limited (by the limit parameter), the `has_more` flag indicates if there are more records for given filter parameters. This lets you know if you can run another request to get more records returned in the results.",
            "nullable": true
          },
          "more_starting_after": {
            "type": "string",
            "description": "Returns an ID that can be used to return another page of results. Use the pending point entry ID in the `starting_after_id` query parameter to display another page of the results starting after the entry with that ID.",
            "nullable": true
          }
        },
        "required": [],
        "description": "Response body schema for **GET** `/loyalties/{campaignId}/members/{memberId}/pending-points` and **GET** `/loyalties/members/{memberId}/pending-points`."
      },
      "LoyaltiesMembersPointsExpirationListResponseBody": {
        "title": "LoyaltiesMembersPointsExpirationListResponseBody",
        "description": "Response body schema for **GET** `v1/loyalties/{campaignId}/members/{memberId}/points-expiration`.",
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "pattern": "list",
            "default": "list",
            "enum": [
              "list"
            ],
            "description": "The type of the object represented by JSON. This object stores information about loyalty points expiration buckets in a dictionary.",
            "nullable": true
          },
          "data_ref": {
            "type": "string",
            "pattern": "data",
            "default": "data",
            "enum": [
              "data"
            ],
            "description": "Identifies the name of the attribute that contains the array of loyalty points expiration bucket objects.",
            "nullable": true
          },
          "data": {
            "title": "LoyaltiesMembersPointsExpirationListResponseBodyData",
            "type": "array",
            "description": "Contains array of loyalty points expiration buckets.",
            "items": {
              "title": "LoyaltiesMembersPointsExpirationListResponseBodyDataItem",
              "type": "object",
              "description": "Contains the details about expiring loyalty points.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Unique identifier of the loyalty points bucket.",
                  "nullable": true
                },
                "voucher_id": {
                  "type": "string",
                  "description": "Unique identifier of the parent loyalty card.",
                  "nullable": true
                },
                "campaign_id": {
                  "type": "string",
                  "description": "Unique identifier of the parent campaign.",
                  "nullable": true
                },
                "bucket": {
                  "title": "LoyaltiesMembersPointsExpirationListResponseBodyDataItemBucket",
                  "type": "object",
                  "required": [],
                  "description": "Defines the number of points stored in this loyalty point bucket.",
                  "properties": {
                    "total_points": {
                      "type": "integer",
                      "description": "Total number of points in the loyalty point bucket.",
                      "nullable": true
                    }
                  },
                  "nullable": true
                },
                "status": {
                  "type": "string",
                  "description": "Loyalty point point bucket status.",
                  "nullable": true
                },
                "expires_at": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Date when the number of points defined in the bucket object are due to expire.",
                  "nullable": true
                },
                "created_at": {
                  "type": "string",
                  "description": "Timestamp representing the date and time when the loyalty point bucket object was created in ISO 8601 format.",
                  "format": "date-time",
                  "nullable": true
                },
                "updated_at": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Timestamp representing the date and time when the loyalty point bucket object was updated in ISO 8601 format.",
                  "nullable": true
                },
                "object": {
                  "type": "string",
                  "default": "loyalty_points_bucket",
                  "enum": [
                    "loyalty_points_bucket"
                  ],
                  "description": "The type of the object represented by JSON. This object stores information about the loyalty point bucket.",
                  "nullable": true
                }
              },
              "required": []
            },
            "nullable": true
          },
          "total": {
            "type": "integer",
            "description": "Total number of point expiration buckets.",
            "nullable": true
          }
        },
        "required": []
      },
      "LoyaltiesMembersRedemptionRedeemRequestBody": {
        "title": "LoyaltiesMembersRedemptionRedeemRequestBody",
        "description": "Request body schema for **POST** `v1/loyalties/{campaignId}/members/{memberId}/redemption` and for **POST** `v1/loyalties/members/{memberId}/redemption`.",
        "type": "object",
        "properties": {
          "reward": {
            "title": "LoyaltiesMembersRedemptionRedeemRequestBodyReward",
            "type": "object",
            "description": "Contains information about the reward that the customer wants to redeem and the number of points the customer is choosing to use for the reward if the reward is a pay with points reward.",
            "properties": {
              "id": {
                "type": "string",
                "description": "Unique reward ID assigned by Voucherify. The reward must be assigned to the campaign in order for the user to be able to use the reward.",
                "example": "rew_eSi4eYJk7o3tOycvweicR2z7",
                "nullable": true
              },
              "points": {
                "type": "integer",
                "description": "The number of loyalty points that the user wants to spend in order to fulfill the order. The number of points cannot be higher than the current balance on the loyalty card.",
                "nullable": true
              }
            },
            "nullable": true
          },
          "order": {
            "$ref": "#/components/schemas/Order"
          },
          "metadata": {
            "title": "LoyaltiesMembersRedemptionRedeemRequestBodyMetadata",
            "type": "object",
            "description": "A set of key/value pairs that you can send in the request body to check against vouchers requiring **redemption** metadata validation rules to be satisfied. The validation runs against rules that are defined through the <!-- [Create Validation Rules](https://docs.voucherify.io/reference/create-validation-rules) -->[Create Validation Rules](ref:create-validation-rules) endpoint or via the Dashboard; in the _Advanced Rule Builder_ &rarr; _Advanced_ &rarr; _Redemption metadata satisfy_ or _Basic Builder_ &rarr; _Attributes match_ &rarr; _REDEMPTION METADATA_. [Read more](https://support.voucherify.io/article/148-how-to-build-a-rule).",
            "nullable": true
          }
        }
      },
      "LoyaltiesMembersRedemptionRedeemResponseBody": {
        "title": "LoyaltiesMembersRedemptionRedeemResponseBody",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "r_0bc92f81a6801f9bca",
            "description": "Unique redemption ID.",
            "nullable": true
          },
          "object": {
            "type": "string",
            "description": "The type of the object represented by the JSON",
            "default": "redemption",
            "enum": [
              "redemption"
            ],
            "nullable": true
          },
          "date": {
            "type": "string",
            "example": "2021-12-22T10:13:06.487Z",
            "description": "Timestamp representing the date and time when the object was created. The value is shown in the ISO 8601 format.",
            "format": "date-time",
            "nullable": true
          },
          "customer_id": {
            "type": "string",
            "nullable": true,
            "example": "cust_i8t5Tt6eiKG5K79KQlJ0Vs64",
            "description": "Unique customer ID of the redeeming customer."
          },
          "tracking_id": {
            "type": "string",
            "nullable": true,
            "description": "Hashed customer source ID."
          },
          "metadata": {
            "title": "LoyaltiesMembersRedemptionRedeemResponseBodyMetadata",
            "type": "object",
            "nullable": true,
            "description": "The metadata object stores all custom attributes assigned to the redemption."
          },
          "amount": {
            "type": "integer",
            "description": "For gift cards, this is a positive integer in the smallest currency unit (e.g. 100 cents for $1.00) representing the number of redeemed credits.\nFor loyalty cards, this is the number of loyalty points used in the transaction.",
            "example": 10000,
            "nullable": true
          },
          "redemption": {
            "nullable": true,
            "type": "string",
            "description": "Unique redemption ID of the parent redemption.",
            "example": "r_0c656311b5878a2031"
          },
          "result": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "FAILURE"
            ],
            "description": "Redemption result.",
            "nullable": true
          },
          "status": {
            "type": "string",
            "enum": [
              "SUCCEEDED",
              "FAILED",
              "ROLLED_BACK"
            ],
            "description": "Redemption status.",
            "nullable": true
          },
          "session": {
            "title": "LoyaltiesMembersRedemptionRedeemResponseBodySession",
            "type": "object",
            "description": "Contains details about the redemption session lock. Sessions can be established only for discount vouchers, promotions, and gift cards.",
            "properties": {
              "key": {
                "type": "string",
                "description": "The session unique ID assigned by Voucherify or your own unique session ID sent in the request.",
                "nullable": true
              }
            },
            "nullable": true
          },
          "related_redemptions": {
            "title": "LoyaltiesMembersRedemptionRedeemResponseBodyRelatedRedemptions",
            "type": "object",
            "properties": {
              "rollbacks": {
                "title": "LoyaltiesMembersRedemptionRedeemResponseBodyRelatedRedemptionsRollbacks",
                "type": "array",
                "items": {
                  "title": "LoyaltiesMembersRedemptionRedeemResponseBodyRelatedRedemptionsRollbacksItem",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "rr_0bc92f81a6801f9bca",
                      "description": "Unique rollback redemption ID."
                    },
                    "date": {
                      "type": "string",
                      "example": "2021-12-22T10:13:06.487Z",
                      "description": "Timestamp representing the date and time when the object was created. The value is shown in the ISO 8601 format.",
                      "format": "date-time"
                    },
                    "rollback_order_mode": {
                      "type": "string",
                      "description": "Defines the rollback mode for the order. `WITH_ORDER` is a default setting. The redemption is rolled back together with the data about the order, including related discount values. `WITHOUT_ORDER` allows rolling the redemption back without affecting order data, including the applied discount values. This is returned only in GET `v1/redemptions/` and GET `v1/redemptions/{redemptionId}` endpoints.",
                      "enum": [
                        "WITH_ORDER",
                        "WITHOUT_ORDER"
                      ]
                    }
                  }
                },
                "nullable": true
              },
              "redemptions": {
                "title": "LoyaltiesMembersRedemptionRedeemResponseBodyRelatedRedemptionsRedemptions",
                "type": "array",
                "items": {
                  "title": "LoyaltiesMembersRedemptionRedeemResponseBodyRelatedRedemptionsRedemptionsItem",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "r_0bc92f81a6801f9bca",
                      "description": "Unique redemption ID."
                    },
                    "date": {
                      "type": "string",
                      "example": "2021-12-22T10:13:06.487Z",
                      "description": "Timestamp representing the date and time when the object was created. The value is shown in the ISO 8601 format.",
                      "format": "date-time"
                    }
                  }
                },
                "nullable": true
              }
            },
            "nullable": true
          },
          "failure_code": {
            "type": "string",
            "example": "customer_rules_violated",
            "description": "If the result is `FAILURE`, this parameter will provide a generic reason as to why the redemption failed.",
            "nullable": true
          },
          "failure_message": {
            "type": "string",
            "description": "If the result is `FAILURE`, this parameter will provide a more expanded reason as to why the redemption failed.",
            "nullable": true
          },
          "order": {
            "$ref": "#/components/schemas/OrderCalculated"
          },
          "channel": {
            "title": "LoyaltiesMembersRedemptionRedeemResponseBodyChannel",
            "type": "object",
            "description": "Defines the details of the channel through which the redemption was issued.",
            "properties": {
              "channel_id": {
                "type": "string",
                "example": "user_g24UoRO3Caxu7FCT4n5tpYEa3zUG0FrH",
                "description": "Unique channel ID of the user performing the redemption. This is either a user ID from a user using the Voucherify Dashboard or an X-APP-Id of a user using the API. For `AUTO_REDEEM`, it is the reward assignment ID.",
                "nullable": true
              },
              "channel_type": {
                "type": "string",
                "description": "The source of the channel for the redemption. A `USER` corresponds to the Voucherify Dashboard, `API` corresponds to the API, and `AUTO_REDEEM` corresponds to a loyalty campaign reward that has been redeemed automatically.",
                "enum": [
                  "USER",
                  "API",
                  "AUTO_REDEEM"
                ],
                "nullable": true
              }
            },
            "nullable": true
          },
          "customer": {
            "$ref": "#/components/schemas/SimpleCustomer"
          },
          "related_object_type": {
            "type": "string",
            "description": "Defines the related object.",
            "enum": [
              "voucher",
              "promotion_tier",
              "redemption"
            ],
            "nullable": true
          },
          "related_object_id": {
            "type": "string",
            "description": "Unique related object ID assigned by Voucherify, i.e. v_lfZi4rcEGe0sN9gmnj40bzwK2FH6QUno for a voucher.",
            "nullable": true
          },
          "promotion_tier": {
            "$ref": "#/components/schemas/PromotionTier"
          },
          "reward": {
            "$ref": "#/components/schemas/RedemptionRewardResult"
          },
          "gift": {
            "title": "LoyaltiesMembersRedemptionRedeemResponseBodyGift",
            "type": "object",
            "description": "Contains the amount subtracted from the gift card for the redemption.",
            "properties": {
              "amount": {
                "type": "integer",
                "description": "Amount subtracted from the gift card as a result of the redemption. The amount is expressed as the smallest currency unit (e.g. 100 cents for $1.00).",
                "nullable": true
              }
            },
            "nullable": true
          },
          "loyalty_card": {
            "title": "LoyaltiesMembersRedemptionRedeemResponseBodyLoyaltyCard",
            "type": "object",
            "description": "Contains the number of points subtracted from the loyalty card for the redemption.",
            "properties": {
              "points": {
                "type": "integer",
                "description": "Number of points subtracted from the loyalty card as a result of the redemption.",
                "nullable": true
              }
            },
            "nullable": true
          },
          "voucher": {
            "title": "LoyaltiesMembersRedemptionRedeemResponseBodyVoucher",
            "description": "Defines the details of the voucher being redeemed.",
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "example": "v_mkZN9v7vjYUadXnHrMza8W5c34fE5KiV",
                "description": "Assigned by the Voucherify API, identifies the voucher.",
                "nullable": true
              },
              "code": {
                "type": "string",
                "example": "WVPblOYX",
                "description": "A code that identifies a voucher. Pattern can use all letters of the English alphabet, Arabic numerals, and special characters.",
                "nullable": true
              },
              "campaign": {
                "type": "string",
                "example": "Gift Card Campaign",
                "description": "A unique campaign name, identifies the voucher's parent campaign.",
                "nullable": true
              },
              "campaign_id": {
                "type": "string",
                "example": "camp_FNYR4jhqZBM9xTptxDGgeNBV",
                "description": "Assigned by the Voucherify API, identifies the voucher's parent campaign.",
                "nullable": true
              },
              "category": {
                "type": "string",
                "description": "Tag defining the category that this voucher belongs to. Useful when listing vouchers using the List Vouchers endpoint.",
                "nullable": true
              },
              "category_id": {
                "type": "string",
                "description": "Unique category ID assigned by Voucherify.",
                "example": "cat_0bb343dee3cdb5ec0c",
                "nullable": true
              },
              "type": {
                "type": "string",
                "enum": [
                  "GIFT_VOUCHER",
                  "DISCOUNT_VOUCHER",
                  "LOYALTY_CARD"
                ],
                "description": "Defines the type of the voucher. ",
                "nullable": true
              },
              "discount": {
                "$ref": "#/components/schemas/Discount"
              },
              "gift": {
                "title": "LoyaltiesMembersRedemptionRedeemResponseBodyVoucherGift",
                "type": "object",
                "description": "Object representing gift parameters. Child attributes are present only if `type` is `GIFT_VOUCHER`. Defaults to `null`.",
                "properties": {
                  "amount": {
                    "type": "integer",
                    "example": 10000,
                    "description": "Total gift card income over the lifetime of the card. The value is multiplied by 100 to represent 2 decimal places. For example `10000 cents` for `$100.00`.",
                    "nullable": true
                  },
                  "subtracted_amount": {
                    "type": "integer",
                    "description": "Total amount of subtracted credits over the gift card lifetime. The value is multiplied by 100 to represent 2 decimal places. For example `10000 cents` for `$100.00`.",
                    "nullable": true
                  },
                  "balance": {
                    "type": "integer",
                    "example": 500,
                    "description": "Available funds. The value is multiplied by 100 to represent 2 decimal places. For example `10000 cents` for `$100.00`.",
                    "nullable": true
                  },
                  "effect": {
                    "type": "string",
                    "enum": [
                      "APPLY_TO_ORDER",
                      "APPLY_TO_ITEMS"
                    ],
                    "description": "Defines how the credits are applied to the customer's order.",
                    "nullable": true
                  }
                },
                "nullable": true
              },
              "loyalty_card": {
                "title": "LoyaltiesMembersRedemptionRedeemResponseBodyVoucherLoyaltyCard",
                "type": "object",
                "description": "Object representing loyalty card parameters. Child attributes are present only if `type` is `LOYALTY_CARD`. Defaults to `null`.",
                "properties": {
                  "points": {
                    "type": "integer",
                    "example": 7000,
                    "description": "Total number of points added to the loyalty card over its lifespan.",
                    "nullable": true
                  },
                  "balance": {
                    "type": "integer",
                    "example": 6970,
                    "description": "Points available for reward redemption. This is calculated as follows: `balance` = `points` - `expired_points` - `subtracted_points` - `redemption.redeemed_points`.",
                    "nullable": true
                  },
                  "next_expiration_date": {
                    "type": "string",
                    "format": "date",
                    "example": "2023-05-30",
                    "description": "The next closest date when the next set of points are due to expire.",
                    "nullable": true
                  },
                  "next_expiration_points": {
                    "type": "integer",
                    "description": "The amount of points that are set to expire next.",
                    "nullable": true
                  },
                  "pending_points": {
                    "type": "integer",
                    "description": "Shows the number of pending points that will be added to the loyalty card when they are activated automatically or manually.",
                    "nullable": true
                  },
                  "expired_points": {
                    "type": "integer",
                    "description": "Shows the total number of expired points over the lifetime of the loyalty card.",
                    "nullable": true
                  },
                  "subtracted_points": {
                    "type": "integer",
                    "description": "Shows the total number of subtracted points over the lifetime of the loyalty card.",
                    "nullable": true
                  }
                },
                "nullable": true
              },
              "start_date": {
                "type": "string",
                "example": "2021-12-01T00:00:00.000Z",
                "format": "date-time",
                "description": "Activation timestamp defines when the code starts to be active in ISO 8601 format. Voucher is *inactive before* this date. ",
                "nullable": true
              },
              "expiration_date": {
                "type": "string",
                "example": "2021-12-31T00:00:00.000Z",
                "format": "date-time",
                "description": "Expiration timestamp defines when the code expires in ISO 8601 format.  Voucher is *inactive after* this date.",
                "nullable": true
              },
              "validity_timeframe": {
                "$ref": "#/components/schemas/ValidityTimeframe"
              },
              "validity_day_of_week": {
                "$ref": "#/components/schemas/ValidityDayOfWeek"
              },
              "validity_hours": {
                "$ref": "#/components/schemas/ValidityHours"
              },
              "active": {
                "type": "boolean",
                "nullable": true,
                "description": "A flag to toggle the voucher on or off. You can disable a voucher even though it's within the active period defined by the `start_date` and `expiration_date`.  \n\n- `true` indicates an *active* voucher\n- `false` indicates an *inactive* voucher"
              },
              "additional_info": {
                "type": "string",
                "description": "An optional field to keep any extra textual information about the code such as a code description and details.",
                "nullable": true
              },
              "metadata": {
                "title": "LoyaltiesMembersRedemptionRedeemResponseBodyVoucherMetadata",
                "type": "object",
                "description": "The metadata object stores all custom attributes assigned to the code. A set of key/value pairs that you can attach to a voucher object. It can be useful for storing additional information about the voucher in a structured format.",
                "nullable": true
              },
              "assets": {
                "$ref": "#/components/schemas/VoucherAssets"
              },
              "is_referral_code": {
                "type": "boolean",
                "nullable": true,
                "description": "Flag indicating whether this voucher is a referral code; `true` for campaign type `REFERRAL_PROGRAM`."
              },
              "created_at": {
                "type": "string",
                "example": "2021-12-22T10:13:06.487Z",
                "description": "Timestamp representing the date and time when the voucher was created. The value is shown in the ISO 8601 format.",
                "format": "date-time",
                "nullable": true
              },
              "updated_at": {
                "type": "string",
                "example": "2021-12-22T10:14:45.316Z",
                "format": "date-time",
                "description": "Timestamp representing the date and time when the voucher was last updated in ISO 8601 format.",
                "nullable": true
              },
              "holder_id": {
                "type": "string",
                "example": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                "description": "Unique customer identifier of the redeemable holder. It equals to the customer ID assigned by Voucherify.",
                "nullable": true
              },
              "referrer_id": {
                "type": "string",
                "description": "Unique identifier of the referring person.",
                "example": "cust_Vzck5i8U3OhcEUFY6MKhN9Rv",
                "nullable": true
              },
              "object": {
                "type": "string",
                "description": "The type of the object represented by JSON. Default is `voucher`.",
                "default": "voucher",
                "nullable": true
              },
              "publish": {
                "title": "LoyaltiesMembersRedemptionRedeemResponseBodyVoucherPublish",
                "type": "object",
                "description": "Stores a summary of publication events: an event counter and endpoint to return details of each event. Publication is an assignment of a code to a customer, e.g. through a distribution.",
                "properties": {
                  "object": {
                    "type": "string",
                    "default": "list",
                    "description": "The type of the object represented is by default `list`. To get this list, you need to make a call to the endpoint returned in the `url` attribute.",
                    "nullable": true
                  },
                  "count": {
                    "type": "integer",
                    "example": 0,
                    "description": "Publication events counter.",
                    "nullable": true
                  },
                  "url": {
                    "type": "string",
                    "example": "/v1/vouchers/WVPblOYX/publications?page=1&limit=10",
                    "description": "The endpoint where this list of publications can be accessed using a **GET** method. `/v1/vouchers/{voucher_code}/publications`",
                    "nullable": true
                  }
                },
                "nullable": true
              },
              "redemption": {
                "title": "LoyaltiesMembersRedemptionRedeemResponseBodyVoucherRedemption",
                "type": "object",
                "description": "Stores a summary of redemptions that have been applied to the voucher.",
                "properties": {
                  "quantity": {
                    "type": "integer",
                    "description": "How many times a voucher can be redeemed. A `null` value means unlimited.",
                    "nullable": true
                  },
                  "redeemed_quantity": {
                    "type": "integer",
                    "example": 1,
                    "description": "How many times a voucher has already been redeemed.",
                    "nullable": true
                  },
                  "redeemed_points": {
                    "type": "integer",
                    "example": 100000,
                    "description": "Total loyalty points redeemed.",
                    "nullable": true
                  },
                  "object": {
                    "type": "string",
                    "default": "list",
                    "description": "The type of the object represented is by default `list`. To get this list, you need to make a call to the endpoint returned in the url attribute.",
                    "nullable": true
                  },
                  "url": {
                    "type": "string",
                    "example": "/v1/vouchers/WVPblOYX/redemptions?page=1&limit=10",
                    "description": "The endpoint where this list of redemptions can be accessed using a **GET** method. `/v1/vouchers/{voucher_code}/redemptions`",
                    "nullable": true
                  }
                },
                "nullable": true
              },
              "categories": {
                "title": "LoyaltiesMembersRedemptionRedeemResponseBodyVoucherCategories",
                "type": "array",
                "description": "Always returns an empty array.",
                "items": {
                  "title": "LoyaltiesMembersRedemptionRedeemResponseBodyVoucherCategoriesItem"
                },
                "nullable": true
              },
              "validation_rules_assignments": {
                "$ref": "#/components/schemas/ValidationRulesAssignmentsList"
              },
              "holder": {
                "$ref": "#/components/schemas/SimpleCustomer"
              }
            },
            "nullable": true
          }
        },
        "description": "Response body schema for **POST** `v1/loyalties/{campaignId}/members/{memberId}/redemption` and for **POST** `v1/loyalties/members/{memberId}/redemption`."
      },
      "LoyaltiesMembersRewardsListResponseBody": {
        "title": "LoyaltiesMembersRewardsListResponseBody",
        "description": "Response body schema for **GET** `v1/loyalties/members/{memberId}/rewards`",
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "description": "The type of the object represented by JSON.",
            "default": "list",
            "enum": [
              "list"
            ],
            "nullable": true
          },
          "data_ref": {
            "type": "string",
            "description": "Identifies the name of the attribute that contains the array of loyalty reward objects.",
            "default": "data",
            "enum": [
              "data"
            ],
            "nullable": true
          },
          "data": {
            "title": "LoyaltiesMembersRewardsListResponseBodyData",
            "type": "array",
            "description": "Contains array of loyalty reward objects.",
            "items": {
              "title": "LoyaltiesMembersRewardsListResponseBodyDataItem",
              "type": "object",
              "properties": {
                "reward": {
                  "$ref": "#/components/schemas/Reward"
                },
                "assignment": {
                  "$ref": "#/components/schemas/RewardAssignment"
                },
                "object": {
                  "type": "string",
                  "description": "The type of the object represented by JSON.",
                  "default": "loyalty_reward",
                  "enum": [
                    "loyalty_reward"
                  ]
                }
              }
            },
            "nullable": true
          },
          "total": {
            "type": "integer",
            "description": "Total number of loyalty reward objects.",
            "minimum": 0,
            "nullable": true
          }
        },
        "required": []
      },
      "LoyaltiesMembersTiersListResponseBody": {
        "title": "LoyaltiesMembersTiersListResponseBody",
        "description": "Response body schema for **GET** `v1/loyalties/members/{memberId}/tiers`.",
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "default": "list",
            "enum": [
              "list"
            ],
            "description": "The type of the object represented by JSON. This object stores information about loyalty tiers in a dictionary.",
            "nullable": true
          },
          "data_ref": {
            "type": "string",
            "default": "data",
            "enum": [
              "data"
            ],
            "description": "Identifies the name of the attribute that contains the array of loyalty tier objects.",
            "nullable": true
          },
          "data": {
            "title": "LoyaltiesMembersTiersListResponseBodyData",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LoyaltyTier"
            },
            "nullable": true
          },
          "total": {
            "type": "integer",
            "description": "Total number of loyalty tier objects.",
            "nullable": true
          }
        },
        "required": []
      },
      "LoyaltiesMembersTransactionsExportCreateRequestBody": {
        "title": "LoyaltiesMembersTransactionsExportCreateRequestBody",
        "description": "Request body schema for **POST** `v1/loyalties/members/{memberId}/transactions/export` and for **POST** `v1/loyalties/{campaignId}/members/{memberId}/transactions/export`.",
        "type": "object",
        "properties": {
          "parameters": {
            "title": "LoyaltiesMembersTransactionsExportCreateRequestBodyParameters",
            "type": "object",
            "properties": {
              "order": {
                "$ref": "#/components/schemas/ExportVoucherTransactionsOrder"
              },
              "fields": {
                "title": "LoyaltiesMembersTransactionsExportCreateRequestBodyParametersFields",
                "type": "array",
                "description": "Array of strings containing the data in the export. These fields define the headers in the CSV file.",
                "items": {
                  "$ref": "#/components/schemas/ExportVoucherTransactionsFields"
                },
                "nullable": true
              },
              "filters": {
                "$ref": "#/components/schemas/ExportVoucherTransactionsFilters"
              }
            },
            "description": "List of available fields and filters that can be exported with an order along with the sorting order of the returned data.",
            "nullable": true
          }
        }
      },
      "LoyaltiesMembersTransactionsExportCreateResponseBody": {
        "title": "LoyaltiesMembersTransactionsExportCreateResponseBody",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique export ID.",
            "nullable": true
          },
          "object": {
            "type": "string",
            "default": "export",
            "enum": [
              "export"
            ],
            "description": "The type of object being represented. This object stores information about the export.",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp representing the date and time when the export was scheduled in ISO 8601 format.",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "Status of the export. Informs you whether the export has already been completed, i.e. indicates whether the file containing the exported data has been generated.",
            "default": "SCHEDULED",
            "enum": [
              "SCHEDULED"
            ],
            "nullable": true
          },
          "channel": {
            "type": "string",
            "description": "The channel through which the export was triggered.",
            "nullable": true
          },
          "result": {
            "title": "LoyaltiesMembersTransactionsExportCreateResponseBodyResult",
            "type": "object",
            "description": "Contains the URL of the CSV file.",
            "nullable": true
          },
          "user_id": {
            "type": "string",
            "description": "Identifies the specific user who initiated the export through the Voucherify Dashboard; returned when the channel value is WEBSITE.",
            "nullable": true
          },
          "exported_object": {
            "type": "string",
            "default": "voucher_transactions",
            "enum": [
              "voucher_transactions"
            ],
            "description": "The type of object to be exported.",
            "nullable": true
          },
          "parameters": {
            "title": "LoyaltiesMembersTransactionsExportCreateResponseBodyParameters",
            "type": "object",
            "properties": {
              "order": {
                "$ref": "#/components/schemas/ExportVoucherTransactionsOrder"
              },
              "fields": {
                "title": "LoyaltiesMembersTransactionsExportCreateResponseBodyParametersFields",
                "type": "array",
                "description": "Array of strings containing the data in the export. These fields define the headers in the CSV file.",
                "items": {
                  "$ref": "#/components/schemas/ExportVoucherTransactionsFields"
                },
                "nullable": true
              },
              "filters": {
                "$ref": "#/components/schemas/ExportVoucherTransactionsFilters"
              }
            },
            "description": "List of available fields and filters that can be exported with an order along with the sorting order of the returned data.",
            "nullable": true
          }
        },
        "description": "Response body schema for **POST** `v1/loyalties/members/{memberId}/transactions/export` and for **POST** `v1/loyalties/{campaignId}/members/{memberId}/transactions/export`."
      },
      "LoyaltiesMembersTransactionsListResponseBody": {
        "title": "LoyaltiesMembersTransactionsListResponseBody",
        "description": "Response body schema for **GET** `v1/loyalties/{campaignId}/members/{memberId}/transactions` and `/loyalties/members/{memberId}/transactions`.",
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "pattern": "list",
            "default": "list",
            "enum": [
              "list"
            ],
            "description": "The type of the object represented by JSON.",
            "nullable": true
          },
          "data_ref": {
            "type": "string",
            "pattern": "data",
            "default": "data",
            "enum": [
              "data"
            ],
            "description": "Identifies the name of the attribute that contains the array of transaction objects.",
            "nullable": true
          },
          "data": {
            "title": "LoyaltiesMembersTransactionsListResponseBodyData",
            "type": "array",
            "description": "A dictionary that contains an array of transactions. Each entry in the array is a separate transaction object.",
            "items": {
              "$ref": "#/components/schemas/LoyaltyCardTransaction"
            },
            "nullable": true
          },
          "has_more": {
            "type": "boolean",
            "description": "As query results are always limited (by the limit parameter), the `has_more` flag indicates if there are more records for given filter parameters. This lets you know if you can run another request to get more records returned in the results.",
            "nullable": true
          },
          "more_starting_after": {
            "type": "string",
            "description": "Returns an ID that can be used to return another page of results. Use the transaction ID in the `starting_after_id` query parameter to display another page of the results starting after the transaction with that ID.",
            "nullable": true
          }
        },
        "required": []
      },
      "LoyaltiesMembersTransfersCreateRequestBody": {
        "title": "LoyaltiesMembersTransfersCreateRequestBody",
        "description": "Response body schema for **POST** `v1/loyalties/{campaignId}/members/{memberId}/transfers`.",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/LoyaltiesTransferPoints"
        }
      },
      "LoyaltiesMembersTransfersCreateResponseBody": {
        "title": "LoyaltiesMembersTransfersCreateResponseBody",
        "description": "Response body schema for **POST** `v1/loyalties/{campaignId}/members/{memberId}/transfers`.",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Assigned by the Voucherify API, identifies the voucher.",
            "nullable": true
          },
          "code": {
            "type": "string",
            "description": "A code that identifies a voucher. Pattern can use all letters of the English alphabet, Arabic numerals, and special characters.",
            "nullable": true
          },
          "campaign": {
            "type": "string",
            "description": "A unique campaign name, identifies the voucher's parent campaign.",
            "nullable": true
          },
          "campaign_id": {
            "type": "string",
            "description": "Assigned by the Voucherify API, identifies the voucher's parent campaign.",
            "nullable": true
          },
          "category": {
            "type": "string",
            "nullable": true,
            "description": "Tag defining the category that this voucher belongs to. Useful when listing vouchers using the List Vouchers endpoint."
          },
          "category_id": {
            "type": "string",
            "nullable": true,
            "description": "Unique category ID assigned by Voucherify."
          },
          "categories": {
            "title": "LoyaltiesMembersTransfersCreateResponseBodyCategories",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Category"
            },
            "nullable": true
          },
          "type": {
            "type": "string",
            "default": "LOYALTY_CARD",
            "enum": [
              "LOYALTY_CARD"
            ],
            "description": "Defines the type of the voucher.",
            "nullable": true
          },
          "loyalty_card": {
            "title": "LoyaltiesMembersTransfersCreateResponseBodyLoyaltyCard",
            "type": "object",
            "description": "Object representing loyalty card parameters. Child attributes are present only if type is LOYALTY_CARD.",
            "required": [],
            "properties": {
              "points": {
                "type": "integer",
                "description": "Total number of points added to the loyalty card over its lifespan.",
                "nullable": true
              },
              "balance": {
                "type": "integer",
                "description": "Points available for reward redemption. This is calculated as follows: `balance` = `points` - `expired_points` - `subtracted_points` - `redemption.redeemed_points`.",
                "nullable": true
              },
              "next_expiration_date": {
                "type": "string",
                "description": "The next closest date when the next set of points are due to expire.",
                "nullable": true
              },
              "next_expiration_points": {
                "type": "integer",
                "description": "The amount of points that are set to expire next.",
                "nullable": true
              },
              "pending_points": {
                "type": "integer",
                "description": "Shows the number of pending points that will be added to the loyalty card when they are activated automatically or manually.",
                "nullable": true
              },
              "expired_points": {
                "type": "integer",
                "description": "Shows the total number of expired points over the lifetime of the loyalty card.",
                "nullable": true
              },
              "subtracted_points": {
                "type": "integer",
                "description": "Shows the total number of subtracted points over the lifetime of the loyalty card.",
                "nullable": true
              }
            },
            "nullable": true
          },
          "start_date": {
            "type": "string",
            "nullable": true,
            "description": "Activation timestamp defines when the code starts to be active in ISO 8601 format. Voucher is inactive before this date.",
            "format": "date-time"
          },
          "expiration_date": {
            "type": "string",
            "nullable": true,
            "description": "Expiration timestamp defines when the code expires in ISO 8601 format. Voucher is inactive after this date.",
            "format": "date-time"
          },
          "validity_timeframe": {
            "$ref": "#/components/schemas/ValidityTimeframe"
          },
          "validity_day_of_week": {
            "$ref": "#/components/schemas/ValidityDayOfWeek"
          },
          "validity_hours": {
            "$ref": "#/components/schemas/ValidityHours"
          },
          "publish": {
            "title": "LoyaltiesMembersTransfersCreateResponseBodyPublish",
            "type": "object",
            "description": "This object stores a summary of publish events: an events counter and an endpoint which can be called to return details of each event. A publication is required for loyalty cards and referral codes. This object gets updated whenever a voucher has been published. Publication means assigning a code to a particular customer. Typically, a publication is made by distributing your codes to your customers, e.g. through Export to MailChimp or publish voucher API method.",
            "properties": {
              "object": {
                "type": "string",
                "default": "list",
                "enum": [
                  "list"
                ],
                "description": "The type of the object represented is by default list. To get this list, you need to make a call to the endpoint returned in the url attribute.",
                "nullable": true
              },
              "count": {
                "type": "integer",
                "description": "Publication events counter.",
                "nullable": true
              },
              "entries": {
                "title": "LoyaltiesMembersTransfersCreateResponseBodyPublishEntries",
                "type": "array",
                "items": {
                  "title": "LoyaltiesMembersTransfersCreateResponseBodyPublishEntriesItem",
                  "type": "string"
                },
                "nullable": true
              },
              "url": {
                "type": "string",
                "description": "The endpoint where this list of publications can be accessed using a **GET** method. /v1/vouchers/{voucher_code}/publications",
                "nullable": true
              }
            },
            "required": [],
            "nullable": true
          },
          "redemption": {
            "title": "LoyaltiesMembersTransfersCreateResponseBodyRedemption",
            "type": "object",
            "description": "Stores a summary of redemptions that have been applied to the voucher.",
            "properties": {
              "quantity": {
                "type": "integer",
                "nullable": true,
                "description": "How many times a voucher can be redeemed. A null value means unlimited."
              },
              "redeemed_points": {
                "type": "integer",
                "description": "Total loyalty points redeemed.",
                "nullable": true
              },
              "redeemed_quantity": {
                "type": "integer",
                "description": "How many times a voucher has already been redeemed.",
                "nullable": true
              },
              "object": {
                "type": "string",
                "default": "list",
                "enum": [
                  "list"
                ],
                "description": "The type of the object represented is by default list. To get this list, you need to make a call to the endpoint returned in the url attribute.",
                "nullable": true
              },
              "url": {
                "type": "string",
                "description": "The endpoint where this list of redemptions can be accessed using a **GET** method. /v1/vouchers/{voucher_code}/redemptions",
                "nullable": true
              }
            },
            "required": [],
            "nullable": true
          },
          "active": {
            "type": "string",
            "description": "A flag to toggle the voucher on or off. You can disable a voucher even though it's within the active period defined by the start_date and expiration_date.\n\n- `true` indicates an active voucher\n- `false` indicates an inactive voucher",
            "nullable": true
          },
          "additional_info": {
            "type": "string",
            "nullable": true,
            "description": "An optional field to keep any extra textual information about the code such as a code description and details."
          },
          "metadata": {
            "title": "LoyaltiesMembersTransfersCreateResponseBodyMetadata",
            "type": "object",
            "description": "The metadata object stores all custom attributes assigned to the code. A set of key/value pairs that you can attach to a voucher object. It can be useful for storing additional information about the voucher in a structured format.",
            "nullable": true
          },
          "assets": {
            "title": "LoyaltiesMembersTransfersCreateResponseBodyAssets",
            "type": "object",
            "description": "Stores links to images of QR and barcode that correspond to an encrypted voucher code.",
            "properties": {
              "qr": {
                "title": "LoyaltiesMembersTransfersCreateResponseBodyAssetsQr",
                "type": "object",
                "description": "Stores Quick Response (QR) representation of encrypted code.",
                "properties": {
                  "id": {
                    "type": "string",
                    "example": "U2FsdGVkX19ucFhvVmBVpVYG5KoswTsjSIaqoKg5L9ie4BK+t4pp7U7oFzjGJzj9q/bmuMOj9mEFiVKDMIkSaruKedMvHbKoPX5Sg+BaZk5QwXMf8k/OzSlOEVybpwSq+AiqPoNtjeuqtIgkDyvT6Q==",
                    "description": "Encrypted voucher code ID.",
                    "nullable": true
                  },
                  "url": {
                    "type": "string",
                    "example": "https://dev.dl.voucherify.io/api/v1/assets/qr/U2FsdGVkX19ucFhvVmBVpVYG5KoswTsjSIaqoKg5L9ie4BK%2Bt4pp7U7oFzjGJzj9q%2FbmuMOj9mEFiVKDMIkSaruKedMvHbKoPX5Sg%2BBaZk5QwXMf8k%2FOzSlOEVybpwSq%2BAiqPoNtjeuqtIgkDyvT6Q%3D%3D",
                    "description": "URL to QR code  \n\n*Optional:* Attach query parameters to base URL to customize the image of the encrypted voucher code.  \n\n- `size`: integer value from `1` to `100`  \n- `format`: string, either `png` (default) or `svg`",
                    "nullable": true
                  }
                },
                "nullable": true
              },
              "barcode": {
                "title": "LoyaltiesMembersTransfersCreateResponseBodyAssetsBarcode",
                "type": "object",
                "description": "Stores barcode representation of encrypted code.",
                "properties": {
                  "id": {
                    "type": "string",
                    "example": "U2FsdGVkX19eJhGfWwUrH9+tulBkON+AnMktic+N6CVWzZ9+fHVxuVx22WakrzxiWXy0skuvvEHSeZIw9HlgyIJ+kJ1iPdUKpyENuNYJKzoZlO0mmTf6WQM6/pFs61apEn9SJx32ttCF6d3oxKISQQ==",
                    "description": "Encrypted voucher code ID.",
                    "nullable": true
                  },
                  "url": {
                    "type": "string",
                    "example": "https://dev.dl.voucherify.io/api/v1/assets/barcode/U2FsdGVkX19eJhGfWwUrH9%2BtulBkON%2BAnMktic%2BN6CVWzZ9%2BfHVxuVx22WakrzxiWXy0skuvvEHSeZIw9HlgyIJ%2BkJ1iPdUKpyENuNYJKzoZlO0mmTf6WQM6%2FpFs61apEn9SJx32ttCF6d3oxKISQQ%3D%3D",
                    "description": "URL to barcode  \n\n*Optional:* Attach query parameters to base URL to customize the image of the encrypted voucher code.  \n\n- `size`: integer value from `1` to `100`  \n- `format`: string, either `png` (default) or `svg`",
                    "nullable": true
                  }
                },
                "nullable": true
              }
            },
            "nullable": true
          },
          "is_referral_code": {
            "type": "boolean",
            "description": "Flag indicating whether this voucher is a referral code; `true` for campaign type `REFERRAL_PROGRAM`.",
            "nullable": true
          },
          "holder_id": {
            "type": "string",
            "description": "Unique customer identifier of the redeemable holder. It equals to the customer ID assigned by Voucherify.",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "description": "Timestamp representing the date and time when the voucher was last updated in ISO 8601 format.",
            "format": "date-time",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "required": [
          "validity_timeframe",
          "validity_day_of_week"
        ]
      },
      "LoyaltiesPendingPointsListResponseBody": {
        "title": "LoyaltiesPendingPointsListResponseBody",
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "default": "list",
            "description": "The type of the object represented by JSON.",
            "enum": [
              "list"
            ],
            "nullable": true
          },
          "data_ref": {
            "type": "string",
            "default": "data",
            "description": "Identifies the name of the attribute that contains the array of pending point objects.",
            "enum": [
              "data"
            ],
            "nullable": true
          },
          "data": {
            "title": "LoyaltiesPendingPointsListResponseBodyData",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LoyaltyPendingPoints"
            },
            "description": "A dictionary that contains an array of pending point entries. Each entry in the array is a separate pending point object.",
            "nullable": true
          },
          "has_more": {
            "type": "boolean",
            "description": "As query results are always limited (by the limit parameter), the `has_more` flag indicates if there are more records for given filter parameters. This lets you know if you can run another request to get more records returned in the results.",
            "nullable": true
          },
          "more_starting_after": {
            "type": "string",
            "description": "Returns an ID that can be used to return another page of results. Use the pending point entry ID in the `starting_after_id` query parameter to display another page of the results starting after the entry with that ID.",
            "nullable": true
          }
        },
        "required": [],
        "description": "Response body schema for **GET** `/loyalties/{campaignId}/pending-points`."
      },
      "LoyaltiesPointsExpirationExportCreateRequestBody": {
        "title": "LoyaltiesPointsExpirationExportCreateRequestBody",
        "type": "object",
        "description": "Request schema model for validating a voucher using **POST** `/v1/loyalties/{campaignId}/points-expiration/export`",
        "properties": {
          "parameters": {
            "$ref": "#/components/schemas/LoyaltiesPointsExpirationExportCreateRequestBodyParameters"
          }
        }
      },
      "LoyaltiesPointsExpirationExportCreateResponseBody": {
        "title": "LoyaltiesPointsExpirationExportCreateResponseBody",
        "type": "object",
        "description": "Object representing an export of points expirations. ",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique export ID.",
            "example": "exp_FFfp9o7daWuJqJCKp5xqqli4",
            "nullable": true
          },
          "object": {
            "type": "string",
            "default": "export",
            "enum": [
              "export"
            ],
            "description": "The type of object being represented. This object stores information about the export.",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "example": "2022-04-28T11:23:20.922Z",
            "description": "Timestamp representing the date and time when the export was scheduled in ISO 8601 format.",
            "format": "date-time",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "Status of the export. Informs you whether the export has already been completed.",
            "default": "SCHEDULED",
            "enum": [
              "SCHEDULED"
            ],
            "nullable": true
          },
          "channel": {
            "type": "string",
            "description": "The channel through which the export was triggered.",
            "enum": [
              "API",
              "WEBSITE"
            ],
            "nullable": true
          },
          "exported_object": {
            "type": "string",
            "description": "The type of exported object.",
            "default": "points_expiration",
            "enum": [
              "points_expiration"
            ],
            "nullable": true
          },
          "parameters": {
            "$ref": "#/components/schemas/LoyaltiesPointsExpirationExportCreateResponseBodyParameters"
          },
          "result": {
            "title": "LoyaltiesPointsExpirationExportCreateResponseBodyResult",
            "type": "object",
            "description": "Always null.",
            "nullable": true
          },
          "user_id": {
            "type": "string",
            "example": "user_g24UoRO3Caxu7FCT4n5tpYEa3zUG0Fr",
            "description": "`user_id` identifies the specific user who initiated the export through the Voucherify Dashboard. `user_id` is returned when the channel value is `WEBSITE`.",
            "nullable": true
          }
        }
      },
      "LoyaltiesRewardAssignmentsGetResponseBody": {
        "title": "LoyaltiesRewardAssignmentsGetResponseBody",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "rewa_PbIRoMXpwe5QhobW4JKu0VjH",
            "description": "Unique reward assignment ID, assigned by Voucherify.",
            "nullable": true
          },
          "reward_id": {
            "type": "string",
            "description": "Associated reward ID.",
            "example": "rew_C7wS9eHFDN4CIbXI5PpLSkGY",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "description": "Timestamp representing the date and time when the reward assignment was created. The value is shown in the ISO 8601 format.",
            "example": "2022-08-11T14:49:22.586Z",
            "format": "date-time",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "nullable": true,
            "description": "Timestamp representing the date and time when the reward assignment was updated. The value is shown in the ISO 8601 format.",
            "example": "2022-08-11T16:01:34.885Z",
            "format": "date-time"
          },
          "object": {
            "type": "string",
            "description": "The type of the object represented by the JSON. This object stores information about the reward assignment.",
            "default": "reward_assignment",
            "enum": [
              "reward_assignment"
            ],
            "nullable": true
          },
          "related_object_id": {
            "type": "string",
            "description": "Related object ID to which the reward was assigned.",
            "example": "camp_wciTvaOfYmAa3EmIIW3QpXXZ",
            "nullable": true
          },
          "related_object_type": {
            "type": "string",
            "description": "Related object type to which the reward was assigned.",
            "default": "campaign",
            "enum": [
              "campaign"
            ],
            "nullable": true
          },
          "parameters": {
            "title": "LoyaltiesRewardAssignmentsGetResponseBodyParameters",
            "description": "Defines the cost of the reward.",
            "type": "object",
            "properties": {
              "loyalty": {
                "title": "LoyaltiesRewardAssignmentsGetResponseBodyParametersLoyalty",
                "type": "object",
                "description": "Defines the equivalent points value of the reward.",
                "properties": {
                  "points": {
                    "type": "integer",
                    "description": "The number of points required to redeem the reward.",
                    "nullable": true
                  },
                  "auto_redeem": {
                    "type": "boolean",
                    "nullable": true,
                    "description": "Determines if the reward is redeemed automatically when the customer reaches the sufficient number of points to redeem it. Value `true` means that the automatic reward redemption is active. Only one reward can be set to be redeemed automatically in a loyalty campaign, i.e. only one can have the value `true`."
                  }
                },
                "nullable": true
              }
            },
            "required": [],
            "nullable": true
          }
        },
        "description": "Response body schema for **GET** `v1/loyalties/{campaignId}/reward-assignments/{assignmentId}`."
      },
      "LoyaltiesRewardAssignmentsListResponseBody": {
        "title": "LoyaltiesRewardAssignmentsListResponseBody",
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "description": "The type of the object represented by JSON. This object stores information about loyalty reward assignments in a dictionary.",
            "default": "list",
            "enum": [
              "list"
            ],
            "nullable": true
          },
          "data_ref": {
            "type": "string",
            "description": "Identifies the name of the attribute that contains the array of reward assignment objects.",
            "default": "data",
            "nullable": true
          },
          "data": {
            "title": "LoyaltiesRewardAssignmentsListResponseBodyData",
            "type": "array",
            "description": "Contains array of reward assignment objects.",
            "items": {
              "$ref": "#/components/schemas/RewardAssignment"
            },
            "nullable": true
          },
          "total": {
            "type": "integer",
            "description": "Total number of reward assignment objects.",
            "nullable": true
          }
        },
        "description": "Response body schema for **GET** `v1/loyalties/{campaignId}/reward-assignments`."
      },
      "LoyaltiesRewardAssignmentsRewardGetResponseBody": {
        "title": "LoyaltiesRewardAssignmentsRewardGetResponseBody",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "rew_nIy4gHpQHle2c3pNMwuj7G6j",
            "description": "Unique reward ID, assigned by Voucherify.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Reward name.",
            "nullable": true
          },
          "stock": {
            "type": "integer",
            "nullable": true,
            "description": "Configurable for **material rewards**. The number of units of the product that you want to share as reward."
          },
          "redeemed": {
            "type": "integer",
            "nullable": true,
            "description": "Defines the number of already invoked (successful) reward redemptions.\t"
          },
          "attributes": {
            "title": "LoyaltiesRewardAssignmentsRewardGetResponseBodyAttributes",
            "type": "object",
            "description": "These properties are configurable for **material rewards**.",
            "properties": {
              "image_url": {
                "type": "string",
                "description": "The HTTPS URL pointing to the .png or .jpg file.",
                "nullable": true
              },
              "description": {
                "type": "string",
                "description": "An arbitrary string that you can attach to a material reward.",
                "nullable": true
              }
            },
            "nullable": true
          },
          "metadata": {
            "title": "LoyaltiesRewardAssignmentsRewardGetResponseBodyMetadata",
            "type": "object",
            "description": "The metadata object stores all custom attributes assigned to the reward. A set of key/value pairs that you can attach to a reward object. It can be useful for storing additional information about the reward in a structured format.",
            "nullable": true
          },
          "type": {
            "type": "string",
            "enum": [
              "CAMPAIGN",
              "COIN",
              "MATERIAL"
            ],
            "description": "Reward type.",
            "nullable": true
          },
          "parameters": {
            "$ref": "#/components/schemas/RewardType"
          },
          "created_at": {
            "type": "string",
            "description": "Timestamp representing the date and time when the reward was created. The value is shown in the ISO 8601 format.",
            "example": "2022-08-11T14:49:22.586Z",
            "format": "date-time",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "nullable": true,
            "description": "Timestamp representing the date and time when the reward was updated. The value is shown in the ISO 8601 format.",
            "example": "2022-08-11T16:01:34.885Z",
            "format": "date-time"
          },
          "object": {
            "description": "The type of the object represented by the JSON. This object stores information about the reward.",
            "default": "reward",
            "enum": [
              "reward"
            ]
          }
        },
        "required": [
          "object"
        ],
        "description": "Response body schema for **GET** `v1/loyalties/{campaignId}/reward-assignments/{assignmentId}/reward`"
      },
      "LoyaltiesRewardsCreateAssignmentRequestBody": {
        "title": "LoyaltiesRewardsCreateAssignmentRequestBody",
        "type": "array",
        "description": "Request body schema for **POST** `v1/loyalties/{campaignId}/rewards`.",
        "items": {
          "$ref": "#/components/schemas/LoyaltiesRewardsCreateAssignmentItemRequestBody"
        }
      },
      "LoyaltiesRewardsCreateAssignmentResponseBody": {
        "title": "LoyaltiesRewardsCreateAssignmentResponseBody",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "rewa_PbIRoMXpwe5QhobW4JKu0VjH",
            "description": "Unique reward assignment ID, assigned by Voucherify.",
            "nullable": true
          },
          "reward_id": {
            "type": "string",
            "description": "Associated reward ID.",
            "example": "rew_C7wS9eHFDN4CIbXI5PpLSkGY",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "description": "Timestamp representing the date and time when the reward assignment was created. The value is shown in the ISO 8601 format.",
            "example": "2022-08-11T14:49:22.586Z",
            "format": "date-time",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "nullable": true,
            "description": "Timestamp representing the date and time when the reward assignment was updated. The value is shown in the ISO 8601 format.",
            "example": "2022-08-11T16:01:34.885Z",
            "format": "date-time"
          },
          "object": {
            "type": "string",
            "description": "The type of the object represented by the JSON. This object stores information about the reward assignment.",
            "default": "reward_assignment",
            "enum": [
              "reward_assignment"
            ],
            "nullable": true
          },
          "related_object_id": {
            "type": "string",
            "description": "Related object ID to which the reward was assigned.",
            "example": "camp_wciTvaOfYmAa3EmIIW3QpXXZ",
            "nullable": true
          },
          "related_object_type": {
            "type": "string",
            "description": "Related object type to which the reward was assigned.",
            "default": "campaign",
            "enum": [
              "campaign"
            ],
            "nullable": true
          },
          "parameters": {
            "title": "LoyaltiesRewardsCreateAssignmentResponseBodyParameters",
            "description": "Defines the cost of the reward.",
            "type": "object",
            "properties": {
              "loyalty": {
                "title": "LoyaltiesRewardsCreateAssignmentResponseBodyParametersLoyalty",
                "type": "object",
                "description": "Defines the equivalent points value of the reward.",
                "properties": {
                  "points": {
                    "type": "integer",
                    "description": "The number of points required to redeem the reward.",
                    "nullable": true
                  },
                  "auto_redeem": {
                    "type": "boolean",
                    "nullable": true,
                    "description": "Determines if the reward is redeemed automatically when the customer reaches the sufficient number of points to redeem it. Value `true` means that the automatic reward redemption is active. Only one reward can be set to be redeemed automatically in a loyalty campaign, i.e. only one can have the value `true`."
                  }
                },
                "nullable": true
              }
            },
            "required": [],
            "nullable": true
          }
        },
        "description": "Response body schema for **POST** `v1/v1/loyalties/{campaignId}/rewards`."
      },
      "LoyaltiesRewardsGetResponseBody": {
        "title": "LoyaltiesRewardsGetResponseBody",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "rewa_PbIRoMXpwe5QhobW4JKu0VjH",
            "description": "Unique reward assignment ID, assigned by Voucherify.",
            "nullable": true
          },
          "reward_id": {
            "type": "string",
            "description": "Associated reward ID.",
            "example": "rew_C7wS9eHFDN4CIbXI5PpLSkGY",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "description": "Timestamp representing the date and time when the reward assignment was created. The value is shown in the ISO 8601 format.",
            "example": "2022-08-11T14:49:22.586Z",
            "format": "date-time",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "nullable": true,
            "description": "Timestamp representing the date and time when the reward assignment was updated. The value is shown in the ISO 8601 format.",
            "example": "2022-08-11T16:01:34.885Z",
            "format": "date-time"
          },
          "object": {
            "type": "string",
            "description": "The type of the object represented by the JSON. This object stores information about the reward assignment.",
            "default": "reward_assignment",
            "enum": [
              "reward_assignment"
            ],
            "nullable": true
          },
          "related_object_id": {
            "type": "string",
            "description": "Related object ID to which the reward was assigned.",
            "example": "camp_wciTvaOfYmAa3EmIIW3QpXXZ",
            "nullable": true
          },
          "related_object_type": {
            "type": "string",
            "description": "Related object type to which the reward was assigned.",
            "default": "campaign",
            "enum": [
              "campaign"
            ],
            "nullable": true
          },
          "parameters": {
            "title": "LoyaltiesRewardsGetResponseBodyParameters",
            "description": "Defines the cost of the reward.",
            "type": "object",
            "properties": {
              "loyalty": {
                "title": "LoyaltiesRewardsGetResponseBodyParametersLoyalty",
                "type": "object",
                "description": "Defines the equivalent points value of the reward.",
                "properties": {
                  "points": {
                    "type": "integer",
                    "description": "The number of points required to redeem the reward.",
                    "nullable": true
                  },
                  "auto_redeem": {
                    "type": "boolean",
                    "nullable": true,
                    "description": "Determines if the reward is redeemed automatically when the customer reaches the sufficient number of points to redeem it. Value `true` means that the automatic reward redemption is active. Only one reward can be set to be redeemed automatically in a loyalty campaign, i.e. only one can have the value `true`."
                  }
                },
                "nullable": true
              }
            },
            "required": [],
            "nullable": true
          }
        },
        "description": "Response body schema for **GET** `v1/loyalties/{campaignId}/rewards/{assignmentId}`"
      },
      "LoyaltiesRewardsListAssignmentsResponseBody": {
        "title": "LoyaltiesRewardsListAssignmentsResponseBody",
        "type": "object",
        "description": "Response body schema for **GET** `v1/loyalties/{campaignId}/rewards`.",
        "properties": {
          "object": {
            "type": "string",
            "description": "The type of the object represented by JSON. This object stores information about loyalty reward assignments in a dictionary.",
            "default": "list",
            "enum": [
              "list"
            ],
            "nullable": true
          },
          "data_ref": {
            "type": "string",
            "description": "Identifies the name of the attribute that contains the array of reward assignment objects.",
            "default": "data",
            "nullable": true
          },
          "data": {
            "title": "LoyaltiesRewardsListAssignmentsResponseBodyData",
            "type": "array",
            "description": "Contains array of reward assignment objects.",
            "items": {
              "$ref": "#/components/schemas/RewardAssignment"
            },
            "nullable": true
          },
          "total": {
            "type": "integer",
            "description": "Total number of reward assignment objects.",
            "nullable": true
          }
        }
      },
      "LoyaltiesRewardsUpdateAssignmentRequestBody": {
        "title": "LoyaltiesRewardsUpdateAssignmentRequestBody",
        "type": "object",
        "properties": {
          "parameters": {
            "title": "LoyaltiesRewardsUpdateAssignmentRequestBodyParameters",
            "type": "object",
            "description": "An object that defines the price of the reward in loyalty points.",
            "properties": {
              "loyalty": {
                "title": "LoyaltiesRewardsUpdateAssignmentRequestBodyParametersLoyalty",
                "type": "object",
                "description": "Stores the points parameter.",
                "properties": {
                  "points": {
                    "type": "integer",
                    "description": "Defines how many points are required to obtain the reward.",
                    "nullable": true
                  },
                  "auto_redeem": {
                    "type": "boolean",
                    "nullable": true,
                    "description": "Determines if the reward is redeemed automatically when the customer reaches the sufficient number of points to redeem it. Value `true` means that the automatic reward redemption is active. Only one reward can be set to be redeemed automatically in a loyalty campaign, i.e. only one can have the value `true`."
                  }
                },
                "nullable": true
              }
            },
            "nullable": true
          }
        },
        "description": "Response body schema for **PUT** `v1/v1/loyalties/{campaignId}/rewards/{assignmentId}`."
      },
      "LoyaltiesRewardsUpdateAssignmentResponseBody": {
        "title": "LoyaltiesRewardsUpdateAssignmentResponseBody",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "rewa_PbIRoMXpwe5QhobW4JKu0VjH",
            "description": "Unique reward assignment ID, assigned by Voucherify.",
            "nullable": true
          },
          "reward_id": {
            "type": "string",
            "description": "Associated reward ID.",
            "example": "rew_C7wS9eHFDN4CIbXI5PpLSkGY",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "description": "Timestamp representing the date and time when the reward assignment was created. The value is shown in the ISO 8601 format.",
            "example": "2022-08-11T14:49:22.586Z",
            "format": "date-time",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "nullable": true,
            "description": "Timestamp representing the date and time when the reward assignment was updated. The value is shown in the ISO 8601 format.",
            "example": "2022-08-11T16:01:34.885Z",
            "format": "date-time"
          },
          "object": {
            "type": "string",
            "description": "The type of the object represented by the JSON. This object stores information about the reward assignment.",
            "default": "reward_assignment",
            "enum": [
              "reward_assignment"
            ],
            "nullable": true
          },
          "related_object_id": {
            "type": "string",
            "description": "Related object ID to which the reward was assigned.",
            "example": "camp_wciTvaOfYmAa3EmIIW3QpXXZ",
            "nullable": true
          },
          "related_object_type": {
            "type": "string",
            "description": "Related object type to which the reward was assigned.",
            "default": "campaign",
            "enum": [
              "campaign"
            ],
            "nullable": true
          },
          "parameters": {
            "title": "LoyaltiesRewardsUpdateAssignmentResponseBodyParameters",
            "description": "Defines the cost of the reward.",
            "type": "object",
            "properties": {
              "loyalty": {
                "title": "LoyaltiesRewardsUpdateAssignmentResponseBodyParametersLoyalty",
                "type": "object",
                "description": "Defines the equivalent points value of the reward.",
                "properties": {
                  "points": {
                    "type": "integer",
                    "description": "The number of points required to redeem the reward.",
                    "nullable": true
                  },
                  "auto_redeem": {
                    "type": "boolean",
                    "nullable": true,
                    "description": "Determines if the reward is redeemed automatically when the customer reaches the sufficient number of points to redeem it. Value `true` means that the automatic reward redemption is active. Only one reward can be set to be redeemed automatically in a loyalty campaign, i.e. only one can have the value `true`."
                  }
                },
                "nullable": true
              }
            },
            "required": [],
            "nullable": true
          }
        },
        "description": "Response body schema for **PUT** `v1/v1/loyalties/{campaignId}/rewards/{assignmentId}`."
      },
      "LoyaltiesTiersCreateInBulkRequestBody": {
        "title": "LoyaltiesTiersCreateInBulkRequestBody",
        "description": "Request body schema for **POST** `v1/loyalties/{campaignId}/tiers`",
        "type": "array",
        "items": {
          "title": "LoyaltiesTiersCreateInBulkRequestBodyItem",
          "allOf": [
            {
              "$ref": "#/components/schemas/LoyaltyTierBase"
            },
            {
              "type": "object",
              "properties": {
                "metadata": {
                  "title": "LoyaltiesTiersCreateInBulkRequestBodyItemMetadata",
                  "description": "The metadata object stores all custom attributes assigned to the loyalty tier. A set of key/value pairs that you can attach to a loyalty tier object. It can be useful for storing additional information about the loyalty tier in a structured format.",
                  "type": "object"
                }
              }
            }
          ]
        }
      },
      "LoyaltiesTiersCreateInBulkResponseBody": {
        "title": "LoyaltiesTiersCreateInBulkResponseBody",
        "type": "array",
        "description": "Response body schema for **POST** `v1/loyalties/{campaignId}/tiers`.",
        "items": {
          "$ref": "#/components/schemas/LoyaltyTier"
        }
      },
      "LoyaltiesTiersEarningRulesListResponseBody": {
        "title": "LoyaltiesTiersEarningRulesListResponseBody",
        "description": "Response body schema for **GET** `v1/loyalties/{campaignId}/tiers/{loyaltyTierId}/earning-rules`.",
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "default": "list",
            "enum": [
              "list"
            ],
            "description": "The type of the object represented by JSON. This object stores information about earning rules in a dictionary.",
            "nullable": true
          },
          "data_ref": {
            "type": "string",
            "default": "data",
            "enum": [
              "data"
            ],
            "description": "Identifies the name of the attribute that contains the array of earning rule objects.",
            "nullable": true
          },
          "data": {
            "title": "LoyaltiesTiersEarningRulesListResponseBodyData",
            "type": "array",
            "description": "Contains array of earning rule objects.",
            "items": {
              "$ref": "#/components/schemas/EarningRule"
            },
            "nullable": true
          },
          "total": {
            "type": "integer",
            "description": "Total number of earning rule objects.",
            "nullable": true
          }
        },
        "required": []
      },
      "LoyaltiesTiersGetResponseBody": {
        "title": "LoyaltiesTiersGetResponseBody",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Loyalty Tier name.",
            "nullable": true
          },
          "earning_rules": {
            "title": "LoyaltiesTiersGetResponseBodyEarningRules",
            "type": "object",
            "description": "Contains a list of earning rule IDs and their points mapping for the given earning rule.",
            "nullable": true
          },
          "rewards": {
            "title": "LoyaltiesTiersGetResponseBodyRewards",
            "type": "object",
            "description": "Contains a list of reward IDs and their points mapping for the given reward.",
            "nullable": true
          },
          "points": {
            "title": "LoyaltiesTiersGetResponseBodyPoints",
            "type": "object",
            "description": "Defines range of loyalty tier in points.",
            "properties": {
              "from": {
                "type": "integer",
                "description": "Bottom points threshold value.",
                "nullable": true
              },
              "to": {
                "type": "integer",
                "description": "Top points threshold value.",
                "nullable": true
              }
            },
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "Unique loyalty tier ID.",
            "nullable": true
          },
          "campaign_id": {
            "type": "string",
            "description": "Unique parent campaign ID.",
            "nullable": true
          },
          "metadata": {
            "title": "LoyaltiesTiersGetResponseBodyMetadata",
            "type": "object",
            "nullable": true,
            "description": "The metadata object stores all custom attributes assigned to the loyalty tier. A set of key/value pairs that you can attach to a loyalty tier object. It can be useful for storing additional information about the loyalty tier in a structured format."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp representing the date and time when the loyalty tier was created. The value is shown in the ISO 8601 format.",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "nullable": true,
            "format": "date-time",
            "description": "Timestamp representing the date and time when the loyalty tier was updated. The value is shown in the ISO 8601 format."
          },
          "config": {
            "title": "LoyaltiesTiersGetResponseBodyConfig",
            "type": "object",
            "description": "Defines loyalty tier range in points.",
            "required": [],
            "properties": {
              "points": {
                "title": "LoyaltiesTiersGetResponseBodyConfigPoints",
                "type": "object",
                "description": "Defines range of loyalty tier in points.",
                "properties": {
                  "from": {
                    "type": "integer",
                    "description": "Bottom points threshold value.",
                    "nullable": true
                  },
                  "to": {
                    "type": "integer",
                    "description": "Top points threshold value.",
                    "nullable": true
                  }
                },
                "nullable": true
              }
            },
            "nullable": true
          },
          "expiration": {
            "$ref": "#/components/schemas/LoyaltyTierExpiration"
          },
          "object": {
            "type": "string",
            "default": "loyalty_tier",
            "enum": [
              "loyalty_tier"
            ],
            "description": "The type of the object represented by JSON. This object stores information about the loyalty.",
            "nullable": true
          }
        },
        "description": "Response body schema for **GET** `v1/loyalties/{campaignId}/tiers/{loyaltyTierId}`."
      },
      "LoyaltiesTiersListResponseBody": {
        "title": "LoyaltiesTiersListResponseBody",
        "description": "Response body schema for **GET** `v1/loyalties/{campaignId}/tiers`.",
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "default": "list",
            "enum": [
              "list"
            ],
            "description": "The type of the object represented by JSON. This object stores information about loyalty tiers in a dictionary.",
            "nullable": true
          },
          "data_ref": {
            "type": "string",
            "default": "data",
            "enum": [
              "data"
            ],
            "description": "Identifies the name of the attribute that contains the array of loyalty tier objects.",
            "nullable": true
          },
          "data": {
            "title": "LoyaltiesTiersListResponseBodyData",
            "type": "array",
            "description": "This is an object representing a loyalty tier. Loyalty tiers are used to create a loyalty program with different levels of membership and varied earning rules and rewards based on customer's tiers.",
            "items": {
              "$ref": "#/components/schemas/LoyaltyTier"
            },
            "nullable": true
          },
          "total": {
            "type": "integer",
            "description": "Total number of loyalty tier objects.",
            "nullable": true
          }
        },
        "required": []
      },
      "LoyaltiesTiersRewardsListResponseBody": {
        "title": "LoyaltiesTiersRewardsListResponseBody",
        "type": "object",
        "description": "Response body schema for **GET** `v1/loyalties/{campaignId}/tiers/{loyaltyTierId}/rewards`.",
        "properties": {
          "object": {
            "type": "string",
            "default": "list",
            "description": "The type of the object represented by JSON. This object stores information about loyalty tier rewards in a dictionary.",
            "nullable": true
          },
          "data_ref": {
            "type": "string",
            "default": "data",
            "description": "Identifies the name of the attribute that contains the array of loyalty tier reward objects.",
            "nullable": true
          },
          "data": {
            "title": "LoyaltiesTiersRewardsListResponseBodyData",
            "type": "array",
            "description": "Contains array of loyalty tier reward objects.",
            "items": {
              "$ref": "#/components/schemas/LoyaltiesLoyaltyTierReward"
            },
            "nullable": true
          },
          "total": {
            "type": "integer",
            "description": "Total number of loyalty tier reward objects.",
            "nullable": true
          }
        },
        "required": []
      },
      "LoyaltiesTransactionsExportCreateRequestBody": {
        "title": "LoyaltiesTransactionsExportCreateRequestBody",
        "description": "Request body schema for **POST** `v1/loyalties/{campaignId}/transactions/export`.",
        "type": "object",
        "properties": {
          "parameters": {
            "title": "LoyaltiesTransactionsExportCreateRequestBodyParameters",
            "description": "List of available parameters containing fields and filters that can be exported for transactions in a loyalty card campaign, along with the sorting order of the returned data.",
            "type": "object",
            "properties": {
              "order": {
                "type": "string",
                "description": "How the export is ordered, where the dash `-` preceding a sorting option means sorting in a descending order.",
                "enum": [
                  "-created_at",
                  "created_at"
                ],
                "nullable": true
              },
              "fields": {
                "title": "LoyaltiesTransactionsExportCreateRequestBodyParametersFields",
                "type": "array",
                "description": "Data fields that will be exported for the transactions that are associated with balance movements on cards in a campaign.",
                "items": {
                  "title": "LoyaltiesTransactionsExportCreateRequestBodyParametersFieldsItem",
                  "type": "string",
                  "enum": [
                    "id",
                    "type",
                    "source_id",
                    "reason",
                    "balance",
                    "amount",
                    "created_at",
                    "voucher_id",
                    "source",
                    "details",
                    "related_transaction_id"
                  ]
                },
                "nullable": true
              },
              "filters": {
                "$ref": "#/components/schemas/ExportCampaignTransactionsFilters"
              }
            },
            "nullable": true
          }
        }
      },
      "LoyaltiesTransactionsListResponseBody": {
        "title": "LoyaltiesTransactionsListResponseBody",
        "type": "object",
        "description": "Response body schema for **GET** `v1/loyalties/{campaignId}/transactions`.",
        "properties": {
          "object": {
            "type": "string",
            "default": "list",
            "description": "The type of the object represented by JSON.",
            "enum": [
              "list"
            ],
            "nullable": true
          },
          "data_ref": {
            "type": "string",
            "default": "data",
            "description": "Identifies the name of the attribute that contains the array of transaction objects.",
            "enum": [
              "data"
            ],
            "nullable": true
          },
          "data": {
            "title": "LoyaltiesTransactionsListResponseBodyData",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LoyaltyCardTransaction"
            },
            "description": "A dictionary that contains an array of transactions. Each entry in the array is a separate transaction object.",
            "nullable": true
          },
          "has_more": {
            "type": "boolean",
            "description": "As query results are always limited (by the limit parameter), the `has_more` flag indicates if there are more records for given filter parameters. This lets you know if you can run another request (with a different paging or a different start date filter) to get more records returned in the results.",
            "nullable": true
          },
          "more_starting_after": {
            "type": "string",
            "description": "Returns an ID that can be used to return another page of results. Use the transaction ID in the `starting_after_id` query parameter to display another page of the results starting after the transaction with that ID.",
            "nullable": true
          }
        },
        "required": []
      },
      "LoyaltiesUpdateCampaignRequestBody": {
        "title": "LoyaltiesUpdateCampaignRequestBody",
        "type": "object",
        "properties": {
          "start_date": {
            "type": "string",
            "format": "date-time",
            "description": "Activation timestamp defines when the campaign starts to be active in ISO 8601 format. Campaign is *inactive before* this date. ",
            "example": "2022-09-20T00:00:00.000Z",
            "nullable": true
          },
          "expiration_date": {
            "type": "string",
            "format": "date-time",
            "description": "Expiration timestamp defines when the campaign expires in ISO 8601 format.  Campaign is *inactive after* this date.",
            "example": "2022-09-30T00:00:00.000Z",
            "nullable": true
          },
          "validity_timeframe": {
            "$ref": "#/components/schemas/ValidityTimeframe"
          },
          "validity_day_of_week": {
            "$ref": "#/components/schemas/ValidityDayOfWeek"
          },
          "validity_hours": {
            "$ref": "#/components/schemas/ValidityHours"
          },
          "description": {
            "type": "string",
            "description": "An optional field to keep any extra textual information about the campaign such as a campaign description and details.",
            "nullable": true
          },
          "category": {
            "type": "string",
            "description": "The category assigned to the campaign. Either pass this parameter OR the `category_id`.",
            "nullable": true
          },
          "metadata": {
            "title": "LoyaltiesUpdateCampaignRequestBodyMetadata",
            "type": "object",
            "description": "The metadata object stores all custom attributes assigned to the campaign. A set of key/value pairs that you can attach to a campaign object. It can be useful for storing additional information about the campaign in a structured format.",
            "nullable": true
          },
          "unset_metadata_fields": {
            "title": "LoyaltiesUpdateCampaignRequestBodyUnsetMetadataFields",
            "type": "array",
            "nullable": true,
            "description": "Determine which metadata should be removed from campaign.",
            "items": {
              "title": "LoyaltiesUpdateCampaignRequestBodyUnsetMetadataFieldsItem",
              "type": "string"
            }
          },
          "category_id": {
            "type": "string",
            "description": "Unique category ID that this campaign belongs to. Either pass this parameter OR the `category`.",
            "example": "cat_0b688929a2476386a7",
            "nullable": true
          },
          "access_settings": {
            "$ref": "#/components/schemas/AccessSettings"
          },
          "activity_duration_after_publishing": {
            "type": "string",
            "description": "Defines the amount of time the vouchers will be active after publishing. The value is shown in the ISO 8601 format. For example, a voucher with the value of P24D will be valid for a duration of 24 days.",
            "nullable": true
          },
          "join_once": {
            "type": "boolean",
            "description": "If this value is set to `true`, customers will be able to join the campaign only once. It is always `false` for generic (standalone) vouchers campaigns and it cannot be changed in them. It is always `true` for loyalty campaigns and it cannot be changed in them.",
            "nullable": true
          },
          "auto_join": {
            "type": "boolean",
            "description": "Indicates whether customers will be able to auto-join a loyalty campaign if any earning rule is fulfilled.",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "Defines whether the campaign can be updated with new vouchers after campaign creation.\n\n- `AUTO_UPDATE`: By choosing the auto update option you will create a campaign that can be enhanced by new vouchers after the time of creation (e.g. by publish vouchers method).\n-  `STATIC`: vouchers need to be manually published.\n\nIf the `type` of the campaign is `STANDALONE`, the type cannot be changed. Also, the `type` cannot be changed to `STANDALONE`.",
            "enum": [
              "AUTO_UPDATE",
              "STATIC"
            ],
            "nullable": true
          },
          "loyalty_tiers_expiration": {
            "$ref": "#/components/schemas/LoyaltyTiersExpirationAll"
          },
          "options": {
            "title": "LoyaltiesUpdateCampaignRequestBodyOptions",
            "type": "object",
            "properties": {
              "recalculate_tiers": {
                "type": "boolean",
                "description": "Determine if tiers should be recalculated or no.",
                "nullable": true
              }
            },
            "nullable": true
          }
        },
        "description": "Request body schema for **PUT** `/loyalties/{campaignId}`."
      },
      "LoyaltiesUpdateCampaignResponseBody": {
        "title": "LoyaltiesUpdateCampaignResponseBody",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique campaign ID, assigned by Voucherify.",
            "example": "camp_f7fBbQxUuTN7dI7tGOo5XMDA",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Campaign name.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "An optional field to keep any extra textual information about the campaign such as a campaign description and details.",
            "nullable": true
          },
          "campaign_type": {
            "type": "string",
            "default": "LOYALTY_PROGRAM",
            "enum": [
              "LOYALTY_PROGRAM"
            ],
            "description": "Type of campaign.",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "Defines whether the campaign can be updated with new vouchers after campaign creation.    \n\n- `AUTO_UPDATE`: the campaign is dynamic, i.e. vouchers will generate based on set criteria    \n-  `STATIC`: vouchers need to be manually published",
            "enum": [
              "AUTO_UPDATE",
              "STATIC"
            ],
            "nullable": true
          },
          "voucher": {
            "$ref": "#/components/schemas/LoyaltyCampaignVoucher"
          },
          "auto_join": {
            "type": "boolean",
            "description": "Indicates whether customers will be able to auto-join a loyalty campaign if any earning rule is fulfilled.",
            "nullable": true
          },
          "join_once": {
            "type": "boolean",
            "description": "Always set to `true` for loyalty campaigns, meaning customers can join the campaign only once. It can't be changed to `false`.",
            "nullable": true
          },
          "use_voucher_metadata_schema": {
            "type": "boolean",
            "description": "Flag indicating whether the campaign is to use the voucher's metadata schema instead of the campaign metadata schema.",
            "nullable": true
          },
          "validity_timeframe": {
            "$ref": "#/components/schemas/ValidityTimeframe"
          },
          "validity_day_of_week": {
            "$ref": "#/components/schemas/ValidityDayOfWeek"
          },
          "validity_hours": {
            "$ref": "#/components/schemas/ValidityHours"
          },
          "activity_duration_after_publishing": {
            "type": "string",
            "description": "Defines the amount of time the campaign will be active in ISO 8601 format after publishing. For example, a campaign with a `duration` of `P24D` will be valid for a duration of 24 days.",
            "nullable": true
          },
          "vouchers_count": {
            "type": "integer",
            "description": "Total number of unique vouchers in campaign.",
            "nullable": true
          },
          "start_date": {
            "type": "string",
            "format": "date-time",
            "description": "Activation timestamp defines when the campaign starts to be active in ISO 8601 format. Campaign is *inactive before* this date. ",
            "example": "2022-09-20T00:00:00.000Z",
            "nullable": true
          },
          "expiration_date": {
            "type": "string",
            "format": "date-time",
            "description": "Expiration timestamp defines when the campaign expires in ISO 8601 format.  Campaign is *inactive after* this date.",
            "example": "2022-09-30T00:00:00.000Z",
            "nullable": true
          },
          "active": {
            "type": "boolean",
            "description": "A flag to toggle the campaign on or off. You can disable a campaign even though it's within the active period defined by the `start_date` and `expiration_date`.  \n\n- `true` indicates an *active* campaign\n- `false` indicates an *inactive* campaign",
            "nullable": true
          },
          "metadata": {
            "title": "LoyaltiesUpdateCampaignResponseBodyMetadata",
            "type": "object",
            "description": "The metadata object stores all custom attributes assigned to the campaign. A set of key/value pairs that you can attach to a campaign object. It can be useful for storing additional information about the campaign in a structured format.",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2021-12-01T08:00:50.038Z",
            "description": "Timestamp representing the date and time when the campaign was created. The value is shown in the ISO 8601 format.",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2022-09-20T09:18:19.623Z",
            "description": "Timestamp representing the date and time when the campaign was last updated in ISO 8601 format.",
            "nullable": true
          },
          "category": {
            "type": "string",
            "description": "Unique category name.",
            "nullable": true
          },
          "creation_status": {
            "type": "string",
            "enum": [
              "DONE",
              "IN_PROGRESS",
              "FAILED",
              "DRAFT",
              "MODIFYING"
            ],
            "description": "Indicates the status of the campaign creation.",
            "nullable": true
          },
          "vouchers_generation_status": {
            "type": "string",
            "description": "Indicates the status of the campaign's voucher generation.",
            "enum": [
              "DONE",
              "IN_PROGRESS",
              "FAILED",
              "DRAFT",
              "MODIFYING"
            ],
            "nullable": true
          },
          "readonly": {
            "type": "boolean",
            "description": "Indicates whether the campaign can be only read by a restricted user in the Areas and Stores enterprise feature. It is returned only to restricted users; this field is not returned for users with other roles.",
            "nullable": true
          },
          "protected": {
            "type": "boolean",
            "description": "Indicates whether the resource can be deleted.",
            "nullable": true
          },
          "category_id": {
            "type": "string",
            "nullable": true,
            "description": "Unique category ID that this campaign belongs to.",
            "example": "cat_0b688929a2476386a7"
          },
          "categories": {
            "title": "LoyaltiesUpdateCampaignResponseBodyCategories",
            "type": "array",
            "description": "Contains details about the category.",
            "items": {
              "$ref": "#/components/schemas/Category"
            },
            "nullable": true
          },
          "object": {
            "type": "string",
            "default": "campaign",
            "description": "The type of the object represented by JSON. This object stores information about the campaign.",
            "nullable": true
          },
          "loyalty_tiers_expiration": {
            "$ref": "#/components/schemas/LoyaltyTiersExpirationAll"
          },
          "validation_rules_assignments": {
            "$ref": "#/components/schemas/ValidationRulesAssignmentsList"
          },
          "access_settings_assignments": {
            "$ref": "#/components/schemas/AccessSettingsCampaignAssignmentsList"
          }
        },
        "required": [],
        "description": "Response body schema for **PUT** `/loyalties/{campaignId}`."
      },
      "ManagementProjectsBrandingCreateRequestBody": {
        "title": "ManagementProjectsBrandingCreateRequestBody",
        "type": "object",
        "description": "Request body schema for **POST** `/management/v1/projects/{projectId}/branding`.",
        "properties": {
          "brand": {
            "title": "ManagementProjectsBrandingCreateRequestBodyBrand",
            "type": "object",
            "description": "Defines basic brand details.",
            "properties": {
              "name": {
                "type": "string",
                "description": "Defines brand name.",
                "nullable": true
              },
              "privacy_policy_url": {
                "type": "string",
                "nullable": true,
                "description": "Defines the URL to the brand's privacy policy. It must be a valid URL format."
              },
              "terms_of_use_url": {
                "type": "string",
                "nullable": true,
                "description": "Defines the URL to the brand's terms of use.  It must be a valid URL format."
              },
              "permission_reminder": {
                "type": "string",
                "nullable": true,
                "default": "You are receiving this email because you opted in at our website.",
                "description": "Defines the message that is displayed to customers who opted in an email newsletter."
              },
              "website_url": {
                "type": "string",
                "nullable": true,
                "description": "Defines the URL to the brand's website. It must be a valid URL format."
              }
            },
            "required": [],
            "nullable": true
          },
          "address": {
            "title": "ManagementProjectsBrandingCreateRequestBodyAddress",
            "type": "object",
            "description": "Defines the address details.",
            "properties": {
              "street": {
                "type": "string",
                "description": "Defines the brand's street.",
                "nullable": true
              },
              "city": {
                "type": "string",
                "description": "Defines the brand's city.",
                "nullable": true
              },
              "postal": {
                "type": "string",
                "nullable": true,
                "description": "Defines the brand's postal code."
              },
              "state": {
                "type": "string",
                "description": "Defines the brand's state or similar administrative area.",
                "nullable": true
              },
              "country": {
                "type": "string",
                "description": "Defines the brand's country.",
                "nullable": true
              }
            },
            "required": [],
            "nullable": true
          },
          "contact": {
            "title": "ManagementProjectsBrandingCreateRequestBodyContact",
            "type": "object",
            "description": "Defines contact details.",
            "properties": {
              "email": {
                "type": "string",
                "description": "Defines the brand's email address. It must be a valid email format.",
                "nullable": true
              },
              "phone": {
                "type": "string",
                "nullable": true,
                "description": "Defines the brand's phone number."
              }
            },
            "required": [],
            "nullable": true
          },
          "cockpits": {
            "title": "ManagementProjectsBrandingCreateRequestBodyCockpits",
            "type": "object",
            "description": "Defines customer cockpit details.",
            "properties": {
              "campaigns_overview_enabled": {
                "type": "boolean",
                "default": false,
                "nullable": true,
                "description": "Enables the campaign overview for customers."
              },
              "loyalty_enabled": {
                "type": "boolean",
                "default": true,
                "nullable": true,
                "description": "Enables the loyalty campaign overview for customers."
              },
              "gift_cards_enabled": {
                "type": "boolean",
                "default": true,
                "nullable": true,
                "description": "Enables the gift card overview for customers."
              },
              "coupons_enabled": {
                "type": "boolean",
                "default": true,
                "nullable": true,
                "description": "Enables the discount coupon overview for customers."
              },
              "referrals_enabled": {
                "type": "boolean",
                "default": true,
                "nullable": true,
                "description": "Enables the referral campaign overview for customers."
              },
              "theme": {
                "type": "string",
                "default": "default",
                "description": "Determines the color scheme of the customer cockpit.",
                "enum": [
                  "blue",
                  "dark-green",
                  "default",
                  "green",
                  "grey",
                  "orange",
                  "purple",
                  "red"
                ],
                "nullable": true
              },
              "use_custom_double_opt_in_redirect_url": {
                "type": "boolean",
                "default": false,
                "nullable": true,
                "description": "Enables the double opt-in option. It must be a valid URL format."
              },
              "custom_double_opt_in_redirect_url": {
                "type": "string",
                "nullable": true,
                "description": "Defines the URL for the double opt-in consent. It must be a valid URL format."
              }
            },
            "nullable": true
          }
        },
        "required": []
      },
      "ManagementProjectsBrandingCreateResponseBody": {
        "title": "ManagementProjectsBrandingCreateResponseBody",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of the brand configuration.",
            "nullable": true
          },
          "brand": {
            "title": "ManagementProjectsBrandingCreateResponseBodyBrand",
            "type": "object",
            "description": "Defines basic brand details.",
            "properties": {
              "name": {
                "type": "string",
                "description": "Defines brand name.",
                "nullable": true
              },
              "privacy_policy_url": {
                "type": "string",
                "nullable": true,
                "description": "Defines the URL to the brand's privacy policy. It must be a valid URL format."
              },
              "terms_of_use_url": {
                "type": "string",
                "nullable": true,
                "description": "Defines the URL to the brand's terms of use.  It must be a valid URL format."
              },
              "permission_reminder": {
                "type": "string",
                "description": "Defines the message that is displayed to customers who opted in an email newsletter.",
                "nullable": true
              },
              "website_url": {
                "type": "string",
                "nullable": true,
                "description": "Defines the URL to the brand's website. It must be a valid URL format."
              }
            },
            "required": [],
            "nullable": true
          },
          "address": {
            "title": "ManagementProjectsBrandingCreateResponseBodyAddress",
            "type": "object",
            "description": "Defines the address details.",
            "properties": {
              "street": {
                "type": "string",
                "description": "Defines the brand's street.",
                "nullable": true
              },
              "city": {
                "type": "string",
                "description": "Defines the brand's city.",
                "nullable": true
              },
              "postal": {
                "type": "string",
                "nullable": true,
                "description": "Defines the brand's postal code."
              },
              "state": {
                "type": "string",
                "description": "Defines the brand's state or similar administrative area.",
                "nullable": true
              },
              "country": {
                "type": "string",
                "description": "Defines the brand's country.",
                "nullable": true
              }
            },
            "required": [],
            "nullable": true
          },
          "contact": {
            "title": "ManagementProjectsBrandingCreateResponseBodyContact",
            "type": "object",
            "description": "Defines contact details.",
            "properties": {
              "email": {
                "type": "string",
                "description": "Defines the brand's email address. It must be a valid email format.",
                "nullable": true
              },
              "phone": {
                "type": "string",
                "nullable": true,
                "description": "Defines the brand's phone number."
              }
            },
            "required": [],
            "nullable": true
          },
          "cockpits": {
            "title": "ManagementProjectsBrandingCreateResponseBodyCockpits",
            "type": "object",
            "description": "Defines customer cockpit details.",
            "properties": {
              "campaigns_overview_enabled": {
                "type": "boolean",
                "description": "Enables the campaign overview for customers.",
                "nullable": true
              },
              "loyalty_enabled": {
                "type": "boolean",
                "description": "Enables the loyalty campaign overview for customers.",
                "nullable": true
              },
              "gift_cards_enabled": {
                "type": "boolean",
                "description": "Enables the gift card overview for customers.",
                "nullable": true
              },
              "coupons_enabled": {
                "type": "boolean",
                "description": "Enables the discount coupon overview for customers.",
                "nullable": true
              },
              "referrals_enabled": {
                "type": "boolean",
                "description": "Enables the referral campaign overview for customers.",
                "nullable": true
              },
              "theme": {
                "type": "string",
                "description": "Determines the color scheme of the customer cockpit.",
                "enum": [
                  "blue",
                  "dark-green",
                  "default",
                  "green",
                  "grey",
                  "orange",
                  "purple",
                  "red"
                ],
                "nullable": true
              },
              "use_custom_double_opt_in_redirect_url": {
                "type": "boolean",
                "description": "Enables the double opt-in option. It must be a valid URL format.",
                "nullable": true
              },
              "custom_double_opt_in_redirect_url": {
                "type": "string",
                "nullable": true,
                "description": "Defines the URL for the double opt-in consent. It must be a valid URL format."
              }
            },
            "required": [],
            "nullable": true
          }
        },
        "required": [],
        "description": "Response body schema for **POST** `/management/v1/projects/{projectId}/branding`."
      },
      "ManagementProjectsBrandingGetResponseBody": {
        "title": "ManagementProjectsBrandingGetResponseBody",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of the brand configuration.",
            "nullable": true
          },
          "brand": {
            "title": "ManagementProjectsBrandingGetResponseBodyBrand",
            "type": "object",
            "description": "Defines basic brand details.",
            "properties": {
              "name": {
                "type": "string",
                "description": "Defines brand name.",
                "nullable": true
              },
              "privacy_policy_url": {
                "type": "string",
                "nullable": true,
                "description": "Defines the URL to the brand's privacy policy. It must be a valid URL format."
              },
              "terms_of_use_url": {
                "type": "string",
                "nullable": true,
                "description": "Defines the URL to the brand's terms of use.  It must be a valid URL format."
              },
              "permission_reminder": {
                "type": "string",
                "description": "Defines the message that is displayed to customers who opted in an email newsletter.",
                "nullable": true
              },
              "website_url": {
                "type": "string",
                "nullable": true,
                "description": "Defines the URL to the brand's website. It must be a valid URL format."
              }
            },
            "required": [],
            "nullable": true
          },
          "address": {
            "title": "ManagementProjectsBrandingGetResponseBodyAddress",
            "type": "object",
            "description": "Defines the address details.",
            "properties": {
              "street": {
                "type": "string",
                "description": "Defines the brand's street.",
                "nullable": true
              },
              "city": {
                "type": "string",
                "description": "Defines the brand's city.",
                "nullable": true
              },
              "postal": {
                "type": "string",
                "nullable": true,
                "description": "Defines the brand's postal code."
              },
              "state": {
                "type": "string",
                "description": "Defines the brand's state or similar administrative area.",
                "nullable": true
              },
              "country": {
                "type": "string",
                "description": "Defines the brand's country.",
                "nullable": true
              }
            },
            "required": [],
            "nullable": true
          },
          "contact": {
            "title": "ManagementProjectsBrandingGetResponseBodyContact",
            "type": "object",
            "description": "Defines contact details.",
            "properties": {
              "email": {
                "type": "string",
                "description": "Defines the brand's email address. It must be a valid email format.",
                "nullable": true
              },
              "phone": {
                "type": "string",
                "nullable": true,
                "description": "Defines the brand's phone number."
              }
            },
            "required": [],
            "nullable": true
          },
          "cockpits": {
            "title": "ManagementProjectsBrandingGetResponseBodyCockpits",
            "type": "object",
            "description": "Defines customer cockpit details.",
            "properties": {
              "campaigns_overview_enabled": {
                "type": "boolean",
                "description": "Enables the campaign overview for customers.",
                "nullable": true
              },
              "loyalty_enabled": {
                "type": "boolean",
                "description": "Enables the loyalty campaign overview for customers.",
                "nullable": true
              },
              "gift_cards_enabled": {
                "type": "boolean",
                "description": "Enables the gift card overview for customers.",
                "nullable": true
              },
              "coupons_enabled": {
                "type": "boolean",
                "description": "Enables the discount coupon overview for customers.",
                "nullable": true
              },
              "referrals_enabled": {
                "type": "boolean",
                "description": "Enables the referral campaign overview for customers.",
                "nullable": true
              },
              "theme": {
                "type": "string",
                "description": "Determines the color scheme of the customer cockpit.",
                "enum": [
                  "blue",
                  "dark-green",
                  "default",
                  "green",
                  "grey",
                  "orange",
                  "purple",
                  "red"
                ],
                "nullable": true
              },
              "use_custom_double_opt_in_redirect_url": {
                "type": "boolean",
                "description": "Enables the double opt-in option. It must be a valid URL format.",
                "nullable": true
              },
              "custom_double_opt_in_redirect_url": {
                "type": "string",
                "nullable": true,
                "description": "Defines the URL for the double opt-in consent. It must be a valid URL format."
              }
            },
            "required": [],
            "nullable": true
          }
        },
        "required": [],
        "description": "Response body schema for **GET** `/management/v1/projects/{projectId}/branding/{brandingId}`."
      },
      "ManagementProjectsBrandingListResponseBody": {
        "title": "ManagementProjectsBrandingListResponseBody",
        "type": "object",
        "description": "Object containing a list of brand configurations. It always contains one item.",
        "properties": {
          "object": {
            "type": "string",
            "default": "list",
            "description": "The type of the object represented by JSON. This object stores information about the brand in a dictionary.",
            "enum": [
              "list"
            ],
            "nullable": true
          },
          "data_ref": {
            "type": "string",
            "default": "data",
            "description": "Identifies the name of the attribute that contains the array of brand objects.",
            "enum": [
              "data"
            ],
            "nullable": true
          },
          "data": {
            "title": "ManagementProjectsBrandingListResponseBodyData",
            "type": "array",
            "description": "Array of brand objects. It contains only one object.",
            "items": {
              "$ref": "#/components/schemas/ManagementProjectsBranding"
            },
            "nullable": true
          },
          "total": {
            "type": "integer",
            "description": "The total number of brand objects. It is always `1`.",
            "nullable": true
          }
        },
        "required": []
      },
      "ManagementProjectsBrandingUpdateRequestBody": {
        "title": "ManagementProjectsBrandingUpdateRequestBody",
        "type": "object",
        "properties": {
          "brand": {
            "title": "ManagementProjectsBrandingUpdateRequestBodyBrand",
            "type": "object",
            "description": "Defines basic brand details.",
            "properties": {
              "name": {
                "type": "string",
                "description": "Defines brand name.",
                "nullable": true
              },
              "privacy_policy_url": {
                "type": "string",
                "nullable": true,
                "description": "Defines the URL to the brand's privacy policy."
              },
              "terms_of_use_url": {
                "type": "string",
                "nullable": true,
                "description": "Defines the URL to the brand's terms of use."
              },
              "permission_reminder": {
                "type": "string",
                "description": "Defines the message that is displayed to customers who opted in an email newsletter.",
                "nullable": true
              },
              "website_url": {
                "type": "string",
                "nullable": true,
                "description": "Defines the URL to the brand's website."
              }
            },
            "nullable": true
          },
          "address": {
            "title": "ManagementProjectsBrandingUpdateRequestBodyAddress",
            "type": "object",
            "description": "Defines the address details.",
            "properties": {
              "street": {
                "type": "string",
                "description": "Defines the brand's street.",
                "nullable": true
              },
              "city": {
                "type": "string",
                "description": "Defines the brand's city.",
                "nullable": true
              },
              "postal": {
                "type": "string",
                "nullable": true,
                "description": "Defines the brand's postal code"
              },
              "state": {
                "type": "string",
                "description": "Defines the brand's state or similar administrative area.",
                "nullable": true
              },
              "country": {
                "type": "string",
                "description": "Defines the brand's country.",
                "nullable": true
              }
            },
            "nullable": true
          },
          "contact": {
            "title": "ManagementProjectsBrandingUpdateRequestBodyContact",
            "type": "object",
            "description": "Defines contact details.",
            "properties": {
              "email": {
                "type": "string",
                "description": "Defines the brand's email address. It must be a valid email format.",
                "nullable": true
              },
              "phone": {
                "type": "string",
                "nullable": true,
                "description": "Defines the brand's phone number."
              }
            },
            "nullable": true
          },
          "cockpits": {
            "title": "ManagementProjectsBrandingUpdateRequestBodyCockpits",
            "type": "object",
            "description": "Defines customer cockpit details.",
            "properties": {
              "campaigns_overview_enabled": {
                "type": "boolean",
                "description": "Indicates if the campaign overview is turned on for customers.",
                "nullable": true
              },
              "loyalty_enabled": {
                "type": "boolean",
                "description": "Indicates if the loyalty campaign overview is turned on for customers.",
                "nullable": true
              },
              "gift_cards_enabled": {
                "type": "boolean",
                "description": "Indicates if the gift card overview is turned on for customers.",
                "nullable": true
              },
              "coupons_enabled": {
                "type": "boolean",
                "description": "Indicates if the discount coupon overview is turned on for customers.",
                "nullable": true
              },
              "referrals_enabled": {
                "type": "boolean",
                "description": "Indicates if the referral campaign overview is turned on for customers.",
                "nullable": true
              },
              "theme": {
                "type": "string",
                "description": "Determines the color scheme of the customer cockpit.",
                "enum": [
                  "orange",
                  "green",
                  "dark-green",
                  "blue",
                  "purple",
                  "red",
                  "grey"
                ],
                "nullable": true
              },
              "use_custom_double_opt_in_redirect_url": {
                "type": "boolean",
                "description": "Indicates if the double opt-in option is turned on.",
                "nullable": true
              },
              "custom_double_opt_in_redirect_url": {
                "type": "string",
                "nullable": true,
                "description": "Defines the URL for the double opt-in consent."
              }
            },
            "nullable": true
          }
        }
      },
      "ManagementProjectsBrandingUpdateResponseBody": {
        "title": "ManagementProjectsBrandingUpdateResponseBody",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of the brand configuration.",
            "nullable": true
          },
          "brand": {
            "title": "ManagementProjectsBrandingUpdateResponseBodyBrand",
            "type": "object",
            "description": "Defines basic brand details.",
            "properties": {
              "name": {
                "type": "string",
                "description": "Defines brand name.",
                "nullable": true
              },
              "privacy_policy_url": {
                "type": "string",
                "nullable": true,
                "description": "Defines the URL to the brand's privacy policy. It must be a valid URL format."
              },
              "terms_of_use_url": {
                "type": "string",
                "nullable": true,
                "description": "Defines the URL to the brand's terms of use.  It must be a valid URL format."
              },
              "permission_reminder": {
                "type": "string",
                "description": "Defines the message that is displayed to customers who opted in an email newsletter.",
                "nullable": true
              },
              "website_url": {
                "type": "string",
                "nullable": true,
                "description": "Defines the URL to the brand's website. It must be a valid URL format."
              }
            },
            "required": [],
            "nullable": true
          },
          "address": {
            "title": "ManagementProjectsBrandingUpdateResponseBodyAddress",
            "type": "object",
            "description": "Defines the address details.",
            "properties": {
              "street": {
                "type": "string",
                "description": "Defines the brand's street.",
                "nullable": true
              },
              "city": {
                "type": "string",
                "description": "Defines the brand's city.",
                "nullable": true
              },
              "postal": {
                "type": "string",
                "nullable": true,
                "description": "Defines the brand's postal code."
              },
              "state": {
                "type": "string",
                "description": "Defines the brand's state or similar administrative area.",
                "nullable": true
              },
              "country": {
                "type": "string",
                "description": "Defines the brand's country.",
                "nullable": true
              }
            },
            "required": [],
            "nullable": true
          },
          "contact": {
            "title": "ManagementProjectsBrandingUpdateResponseBodyContact",
            "type": "object",
            "description": "Defines contact details.",
            "properties": {
              "email": {
                "type": "string",
                "description": "Defines the brand's email address. It must be a valid email format.",
                "nullable": true
              },
              "phone": {
                "type": "string",
                "nullable": true,
                "description": "Defines the brand's phone number."
              }
            },
            "required": [],
            "nullable": true
          },
          "cockpits": {
            "title": "ManagementProjectsBrandingUpdateResponseBodyCockpits",
            "type": "object",
            "description": "Defines customer cockpit details.",
            "properties": {
              "campaigns_overview_enabled": {
                "type": "boolean",
                "description": "Enables the campaign overview for customers.",
                "nullable": true
              },
              "loyalty_enabled": {
                "type": "boolean",
                "description": "Enables the loyalty campaign overview for customers.",
                "nullable": true
              },
              "gift_cards_enabled": {
                "type": "boolean",
                "description": "Enables the gift card overview for customers.",
                "nullable": true
              },
              "coupons_enabled": {
                "type": "boolean",
                "description": "Enables the discount coupon overview for customers.",
                "nullable": true
              },
              "referrals_enabled": {
                "type": "boolean",
                "description": "Enables the referral campaign overview for customers.",
                "nullable": true
              },
              "theme": {
                "type": "string",
                "description": "Determines the color scheme of the customer cockpit.",
                "enum": [
                  "blue",
                  "dark-green",
                  "default",
                  "green",
                  "grey",
                  "orange",
                  "purple",
                  "red"
                ],
                "nullable": true
              },
              "use_custom_double_opt_in_redirect_url": {
                "type": "boolean",
                "description": "Enables the double opt-in option. It must be a valid URL format.",
                "nullable": true
              },
              "custom_double_opt_in_redirect_url": {
                "type": "string",
                "nullable": true,
                "description": "Defines the URL for the double opt-in consent. It must be a valid URL format."
              }
            },
            "required": [],
            "nullable": true
          }
        },
        "required": [],
        "description": "Response body schema for **PUT** `/management/v1/projects/{projectId}/branding/{brandingId}`."
      },
      "ManagementProjectsCreateRequestBody": {
        "title": "ManagementProjectsCreateRequestBody",
        "type": "object",
        "required": [],
        "properties": {
          "case_sensitive_codes": {
            "type": "boolean",
            "description": "Determines if the vouchers in the project will be case sensitive (if `true`, `C0dE-cfV` is not equal to `c0de-cfv`) or case insensitive (if false, `C0dE-cfV` is equal to `c0de-cfv`).",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The name of the project.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "A user-defined description of the project, e.g. its purpose, scope, region.",
            "nullable": true
          },
          "timezone": {
            "type": "string",
            "description": "The time zone in which the project is established. It can be in the GMT format or in accordance with IANA time zone database.",
            "nullable": true
          },
          "currency": {
            "type": "string",
            "description": "The currency used in the project. It is equal to a 3-letter ISO 4217 code.",
            "nullable": true
          },
          "dial_code": {
            "type": "string",
            "nullable": true,
            "description": "The country dial code for the project. It is equal to an ITU country code."
          },
          "webhook_version": {
            "type": "string",
            "description": "The webhook version used in the project.",
            "default": "v2024-01-01",
            "enum": [
              "v2024-01-01"
            ],
            "nullable": true
          },
          "client_trusted_domains": {
            "title": "ManagementProjectsCreateRequestBodyClientTrustedDomains",
            "type": "array",
            "description": "An array of URL addresses that allow client requests.",
            "items": {
              "title": "ManagementProjectsCreateRequestBodyClientTrustedDomainsItem",
              "type": "string"
            },
            "nullable": true
          },
          "client_redeem_enabled": {
            "type": "boolean",
            "description": "Enables client-side redemption.",
            "nullable": true
          },
          "client_publish_enabled": {
            "type": "boolean",
            "description": "Enables client-side publication.",
            "nullable": true
          },
          "client_list_vouchers_enabled": {
            "type": "boolean",
            "description": "Enables client-side listing of vouchers.",
            "nullable": true
          },
          "client_create_customer_enabled": {
            "type": "boolean",
            "description": "Enables client-side creation of customers.",
            "nullable": true
          },
          "client_loyalty_events_enabled": {
            "type": "boolean",
            "description": "Enables client-side events for loyalty and referral programs.",
            "nullable": true
          },
          "client_set_voucher_expiration_date_enabled": {
            "type": "boolean",
            "description": "Enables client-side setting of voucher expiration date.",
            "nullable": true
          },
          "webhooks_callout_notifications": {
            "title": "ManagementProjectsCreateRequestBodyWebhooksCalloutNotifications",
            "type": "object",
            "description": "Determines the notification settings for webhook callouts configured in Distributions and Project settings.",
            "properties": {
              "distributions": {
                "title": "ManagementProjectsCreateRequestBodyWebhooksCalloutNotificationsDistributions",
                "type": "object",
                "description": "Determines the notification settings for webhooks sent through Distributions.",
                "properties": {
                  "email": {
                    "type": "boolean",
                    "description": "Enables the notification through an email.",
                    "nullable": true
                  },
                  "in_app": {
                    "type": "boolean",
                    "description": "Enables the notification through an email.",
                    "nullable": true
                  },
                  "emails": {
                    "title": "ManagementProjectsCreateRequestBodyWebhooksCalloutNotificationsDistributionsEmails",
                    "type": "array",
                    "description": "An array of email addresses which will receive the notification.",
                    "items": {
                      "title": "ManagementProjectsCreateRequestBodyWebhooksCalloutNotificationsDistributionsEmailsItem",
                      "type": "string"
                    },
                    "nullable": true
                  }
                },
                "required": [],
                "nullable": true
              },
              "webhooks": {
                "title": "ManagementProjectsCreateRequestBodyWebhooksCalloutNotificationsWebhooks",
                "type": "object",
                "description": "Determines the notification settings for webhooks sent as set out in the Project settings.",
                "properties": {
                  "email": {
                    "type": "boolean",
                    "description": "Enables the notification through an email.",
                    "nullable": true
                  },
                  "in_app": {
                    "type": "boolean",
                    "description": "Enables the notification through an email.",
                    "nullable": true
                  },
                  "emails": {
                    "title": "ManagementProjectsCreateRequestBodyWebhooksCalloutNotificationsWebhooksEmails",
                    "type": "array",
                    "description": "An array of email addresses which will receive the notification.",
                    "items": {
                      "title": "ManagementProjectsCreateRequestBodyWebhooksCalloutNotificationsWebhooksEmailsItem",
                      "type": "string"
                    },
                    "nullable": true
                  }
                },
                "required": [],
                "nullable": true
              }
            },
            "required": [],
            "nullable": true
          },
          "api_usage_notifications": {
            "title": "ManagementProjectsCreateRequestBodyApiUsageNotifications",
            "type": "object",
            "description": "Determines the notification settings.",
            "properties": {
              "messages": {
                "$ref": "#/components/schemas/UsageNotifications"
              },
              "api_calls": {
                "$ref": "#/components/schemas/UsageNotifications"
              },
              "bulk_api_calls": {
                "$ref": "#/components/schemas/UsageNotifications"
              },
              "webhook_calls": {
                "$ref": "#/components/schemas/UsageNotifications"
              },
              "cycle_calls": {
                "$ref": "#/components/schemas/UsageNotifications"
              }
            },
            "required": [
              "redemptions"
            ],
            "nullable": true
          },
          "cluster_id": {
            "type": "string",
            "description": "The identifier of the cluster where the project will be created. The default cluster is `eu1` unless otherwise configured.",
            "nullable": true
          },
          "api_version": {
            "type": "string",
            "description": "The API version used in the project. Currently, the default and only value is `v2018-08-01`.",
            "default": "v2018-08-01",
            "enum": [
              "v2018-08-01"
            ],
            "nullable": true
          },
          "users": {
            "title": "ManagementProjectsCreateRequestBodyUsers",
            "type": "array",
            "description": "The users (their identifiers, logins, and roles) who will be assigned to the project. You can assign only existing Voucherify users.\n\nIt must be used either in the following combinations:\n- `id` and `role`, or\n- `login` and `role`.",
            "items": {
              "title": "ManagementProjectsCreateRequestBodyUsersItem",
              "type": "object",
              "description": "Contains details about the users who will be assigned to the project.\nOnly the `id` and `role` or `login` and `role` should be provided in the request.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The unique identifier of the user who will be assigned to the project. It can be found in Team Settings > Team > Edit member. **Required** with the `role` string.\n\nDo **not** use with the `login` string."
                },
                "login": {
                  "type": "string",
                  "description": "The login data of the user who will be assigned to the project. **Required** with the `role` string.\n\nDo **not** use with the `id` string."
                },
                "role": {
                  "type": "string",
                  "description": "The role of the user to be added. It can be one of the following predefined roles:\n`ADMIN`, `USER`, `VIEWER`, `MERCHANT`\nor an ID of a custom role."
                }
              },
              "required": [
                "role"
              ]
            },
            "nullable": true
          }
        },
        "description": "Request body schema for **POST** `/management/v1/projects`."
      },
      "ManagementProjectsCreateResponseBody": {
        "title": "ManagementProjectsCreateResponseBody",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of the project.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The name of the project.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "A user-defined description of the project, e.g. its purpose, scope, region.",
            "nullable": true
          },
          "timezone": {
            "type": "string",
            "description": "The time zone in which the project is established. It can be in the GMT format or in accordance with IANA time zone database.",
            "nullable": true
          },
          "currency": {
            "type": "string",
            "description": "The currency used in the project. It is equal to a 3-letter ISO 4217 code.",
            "nullable": true
          },
          "dial_code": {
            "type": "string",
            "nullable": true,
            "description": "The country dial code for the project. It is equal to an ITU country code."
          },
          "webhook_version": {
            "type": "string",
            "description": "The webhook version used in the project.",
            "default": "v2024-01-01",
            "enum": [
              "v2024-01-01"
            ],
            "nullable": true
          },
          "client_trusted_domains": {
            "title": "ManagementProjectsCreateResponseBodyClientTrustedDomains",
            "type": "array",
            "description": "An array of URL addresses that allow client requests.",
            "items": {
              "title": "ManagementProjectsCreateResponseBodyClientTrustedDomainsItem",
              "type": "string"
            },
            "nullable": true
          },
          "client_redeem_enabled": {
            "type": "boolean",
            "description": "Enables client-side redemption.",
            "nullable": true
          },
          "client_publish_enabled": {
            "type": "boolean",
            "description": "Enables client-side publication.",
            "nullable": true
          },
          "client_list_vouchers_enabled": {
            "type": "boolean",
            "description": "Enables client-side listing of vouchers.",
            "nullable": true
          },
          "client_create_customer_enabled": {
            "type": "boolean",
            "description": "Enables client-side creation of customers.",
            "nullable": true
          },
          "client_loyalty_events_enabled": {
            "type": "boolean",
            "description": "Enables client-side events for loyalty and referral programs.",
            "nullable": true
          },
          "client_set_voucher_expiration_date_enabled": {
            "type": "boolean",
            "description": "Enables client-side setting of voucher expiration date.",
            "nullable": true
          },
          "webhooks_callout_notifications": {
            "title": "ManagementProjectsCreateResponseBodyWebhooksCalloutNotifications",
            "type": "object",
            "description": "Determines the notification settings for webhook callouts configured in Distributions and Project settings.",
            "properties": {
              "distributions": {
                "title": "ManagementProjectsCreateResponseBodyWebhooksCalloutNotificationsDistributions",
                "type": "object",
                "description": "Determines the notification settings for webhooks sent through Distributions.",
                "properties": {
                  "email": {
                    "type": "boolean",
                    "description": "Enables the notification through an email.",
                    "nullable": true
                  },
                  "in_app": {
                    "type": "boolean",
                    "description": "Enables the notification through an email.",
                    "nullable": true
                  },
                  "emails": {
                    "title": "ManagementProjectsCreateResponseBodyWebhooksCalloutNotificationsDistributionsEmails",
                    "type": "array",
                    "description": "An array of email addresses which will receive the notification.",
                    "items": {
                      "title": "ManagementProjectsCreateResponseBodyWebhooksCalloutNotificationsDistributionsEmailsItem",
                      "type": "string"
                    },
                    "nullable": true
                  }
                },
                "required": [],
                "nullable": true
              },
              "webhooks": {
                "title": "ManagementProjectsCreateResponseBodyWebhooksCalloutNotificationsWebhooks",
                "type": "object",
                "description": "Determines the notification settings for webhooks sent as set out in the Project settings.",
                "properties": {
                  "email": {
                    "type": "boolean",
                    "description": "Enables the notification through an email.",
                    "nullable": true
                  },
                  "in_app": {
                    "type": "boolean",
                    "description": "Enables the notification through an email.",
                    "nullable": true
                  },
                  "emails": {
                    "title": "ManagementProjectsCreateResponseBodyWebhooksCalloutNotificationsWebhooksEmails",
                    "type": "array",
                    "description": "An array of email addresses which will receive the notification.",
                    "items": {
                      "title": "ManagementProjectsCreateResponseBodyWebhooksCalloutNotificationsWebhooksEmailsItem",
                      "type": "string"
                    },
                    "nullable": true
                  }
                },
                "required": [],
                "nullable": true
              }
            },
            "required": [],
            "nullable": true
          },
          "api_usage_notifications": {
            "title": "ManagementProjectsCreateResponseBodyApiUsageNotifications",
            "type": "object",
            "description": "Determines the notification settings.",
            "properties": {
              "redemptions": {
                "$ref": "#/components/schemas/UsageNotifications"
              },
              "messages": {
                "$ref": "#/components/schemas/UsageNotifications"
              },
              "api_calls": {
                "$ref": "#/components/schemas/UsageNotifications"
              },
              "bulk_api_calls": {
                "$ref": "#/components/schemas/UsageNotifications"
              },
              "webhook_calls": {
                "$ref": "#/components/schemas/UsageNotifications"
              },
              "cycle_calls": {
                "$ref": "#/components/schemas/UsageNotifications"
              }
            },
            "required": [],
            "nullable": true
          },
          "cluster_id": {
            "type": "string",
            "description": "The identifier of the cluster where the project will be created.",
            "nullable": true
          },
          "case_sensitive_codes": {
            "type": "boolean",
            "description": "Determines if the vouchers in the project will be:\n- case sensitive - if `true`, `C0dE-cfV` is **not** equal to `c0de-cfv`),\n- case insensitive - if `false`, `C0dE-cfV` is equal to `c0de-cfv`.",
            "nullable": true
          },
          "api_version": {
            "type": "string",
            "description": "The API version used in the project. Currently, the default and only value is `v2018-08-01`.",
            "default": "v2018-08-01",
            "enum": [
              "v2018-08-01"
            ],
            "nullable": true
          },
          "is_sandbox": {
            "type": "boolean",
            "description": "Determines if the project is a sandbox project.",
            "nullable": true
          },
          "webhook_token": {
            "type": "string",
            "description": "Webhook token used for authentication.",
            "nullable": true
          },
          "server_side_key": {
            "title": "ManagementProjectsCreateResponseBodyServerSideKey",
            "type": "object",
            "description": "Contains the `app_id` and `app_token` to authenticate server-side requests.",
            "properties": {
              "app_id": {
                "type": "string",
                "description": "Application ID to be used as `X-App-Id` header in every HTTP request.",
                "nullable": true
              },
              "app_token": {
                "type": "string",
                "description": "Application token to be used as `X-App-Token` header in every HTTP request.\n\nThe application token (secret key) for the server-side authentication is visible in the Project Settings for 14 days when it is first generated in a newly-created project. Write your application token down and keep it in a safe place.",
                "nullable": true
              }
            },
            "nullable": true
          },
          "client_side_key": {
            "title": "ManagementProjectsCreateResponseBodyClientSideKey",
            "type": "object",
            "description": "Contains the `app_id` and `app_token` to authenticate client-side requests.",
            "properties": {
              "app_id": {
                "type": "string",
                "description": "Application ID to be used as `X-App-Id` header in every HTTP request.",
                "nullable": true
              },
              "app_token": {
                "type": "string",
                "description": "Application token to be used as `X-App-Token` header in every HTTP request.\n\nThe application token (secret key) for the client-side authentication is visible in the Project Settings for 14 days when it is first generated in a newly-created project. Write your application token down and keep it in a safe place.",
                "nullable": true
              }
            },
            "nullable": true
          }
        },
        "description": "Response body schema for **POST** `management/v1/projects`."
      },
      "ManagementProjectsCustomEventSchemasCreateRequestBody": {
        "title": "ManagementProjectsCustomEventSchemasCreateRequestBody",
        "type": "object",
        "required": [],
        "properties": {
          "name": {
            "type": "string",
            "description": "User-defined name of the custom event. This is also shown in **Project Settings** > **Event Schema** in the Voucherify Dashboard.",
            "nullable": true
          },
          "schema": {
            "title": "ManagementProjectsCustomEventSchemasCreateRequestBodySchema",
            "type": "object",
            "description": "Object containing custom event schema and its custom attributes (metadata).",
            "properties": {
              "properties": {
                "title": "ManagementProjectsCustomEventSchemasCreateRequestBodySchemaProperties",
                "type": "object",
                "description": "Defines custom event custom attributes (metadata).",
                "nullable": true
              }
            },
            "required": [],
            "nullable": true
          }
        },
        "description": "Request body schema for **POST** `/management/v1/projects/{projectId}/custom-event-schema`."
      },
      "ManagementProjectsCustomEventSchemasCreateResponseBody": {
        "title": "ManagementProjectsCustomEventSchemasCreateResponseBody",
        "type": "object",
        "required": [],
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of the custom event schema.",
            "example": "ms_oA8CawM07Q8i05Cx62U6euTK",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "User-defined name of the custom event. This is also shown in **Project Settings** > **Event Schema** in the Voucherify Dashboard.",
            "nullable": true
          },
          "schema": {
            "title": "ManagementProjectsCustomEventSchemasCreateResponseBodySchema",
            "type": "object",
            "description": "Object containing custom event schema and its custom attributes (metadata).",
            "properties": {
              "properties": {
                "title": "ManagementProjectsCustomEventSchemasCreateResponseBodySchemaProperties",
                "type": "object",
                "description": "Defines custom event custom attributes (metadata).",
                "nullable": true
              }
            },
            "required": [],
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "description": "Timestamp representing the date and time when the custom event schema was created. The value is shown in the ISO 8601 format.",
            "format": "date-time",
            "example": "2024-03-27T08:00:09.472Z",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "description": "Timestamp representing the date and time when the custom event schema was updated. The value is shown in the ISO 8601 format.",
            "format": "date-time",
            "example": "2024-03-27T08:00:09.472Z",
            "nullable": true
          },
          "object": {
            "type": "string",
            "description": "The type of the object represented by JSON.",
            "example": "custom-event-schema",
            "default": "custom-event-schema",
            "enum": [
              "custom-event-schema"
            ],
            "nullable": true
          }
        },
        "description": "Response body schema for **POST** `/management/v1/projects/{projectId}/custom-event-schema`."
      },
      "ManagementProjectsCustomEventSchemasGetResponseBody": {
        "title": "ManagementProjectsCustomEventSchemasGetResponseBody",
        "type": "object",
        "required": [],
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of the custom event schema.",
            "example": "ms_oA8CawM07Q8i05Cx62U6euTK",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "User-defined name of the custom event. This is also shown in **Project Settings** > **Event Schema** in the Voucherify Dashboard.",
            "nullable": true
          },
          "schema": {
            "title": "ManagementProjectsCustomEventSchemasGetResponseBodySchema",
            "type": "object",
            "description": "Object containing custom event schema and its custom attributes (metadata).",
            "properties": {
              "properties": {
                "title": "ManagementProjectsCustomEventSchemasGetResponseBodySchemaProperties",
                "type": "object",
                "description": "Defines custom event custom attributes (metadata).",
                "nullable": true
              }
            },
            "required": [],
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "description": "Timestamp representing the date and time when the custom event schema was created. The value is shown in the ISO 8601 format.",
            "format": "date-time",
            "example": "2024-03-27T08:00:09.472Z",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "description": "Timestamp representing the date and time when the custom event schema was updated. The value is shown in the ISO 8601 format.",
            "format": "date-time",
            "example": "2024-03-27T08:00:09.472Z",
            "nullable": true
          },
          "object": {
            "type": "string",
            "description": "The type of the object represented by JSON.",
            "example": "custom-event-schema",
            "default": "custom-event-schema",
            "enum": [
              "custom-event-schema"
            ],
            "nullable": true
          }
        },
        "description": "Response body schema for **GET** `/management/v1/projects/{projectId}/custom-event-schema/{customEventSchemaId}`."
      },
      "ManagementProjectsCustomEventSchemasListResponseBody": {
        "title": "ManagementProjectsCustomEventSchemasListResponseBody",
        "type": "object",
        "description": "Object containing a list of custom event schemas.",
        "properties": {
          "object": {
            "type": "string",
            "default": "list",
            "description": "The type of the object represented by JSON. This object stores information about the custom event schemas in a dictionary.",
            "enum": [
              "list"
            ],
            "nullable": true
          },
          "data_ref": {
            "type": "string",
            "default": "data",
            "description": "Identifies the name of the attribute that contains the array of custom event schema objects.",
            "enum": [
              "data"
            ],
            "nullable": true
          },
          "data": {
            "title": "ManagementProjectsCustomEventSchemasListResponseBodyData",
            "type": "array",
            "description": "Array of custom event schema objects.",
            "items": {
              "$ref": "#/components/schemas/ManagementProjectsCustomEventSchema"
            },
            "nullable": true
          },
          "total": {
            "type": "integer",
            "description": "The total number of custom event schema objects.",
            "nullable": true
          }
        },
        "required": []
      },
      "ManagementProjectsCustomEventSchemasUpdateRequestBody": {
        "title": "ManagementProjectsCustomEventSchemasUpdateRequestBody",
        "type": "object",
        "properties": {
          "schema": {
            "title": "ManagementProjectsCustomEventSchemasUpdateRequestBodySchema",
            "type": "object",
            "description": "Object containing custom event schema and its custom attributes (metadata).",
            "properties": {
              "properties": {
                "title": "ManagementProjectsCustomEventSchemasUpdateRequestBodySchemaProperties",
                "type": "object",
                "description": "Defines custom event custom attributes (metadata).",
                "nullable": true
              }
            },
            "required": [],
            "nullable": true
          }
        },
        "description": "Request body schema for **POST** `/management/v1/projects/{projectId}/custom-event-schema/{customEventSchemaId}`."
      },
      "ManagementProjectsCustomEventSchemasUpdateResponseBody": {
        "title": "ManagementProjectsCustomEventSchemasUpdateResponseBody",
        "type": "object",
        "required": [],
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of the custom event schema.",
            "example": "ms_oA8CawM07Q8i05Cx62U6euTK",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "User-defined name of the custom event. This is also shown in **Project Settings** > **Event Schema** in the Voucherify Dashboard.",
            "nullable": true
          },
          "schema": {
            "title": "ManagementProjectsCustomEventSchemasUpdateResponseBodySchema",
            "type": "object",
            "description": "Object containing custom event schema and its custom attributes (metadata).",
            "properties": {
              "properties": {
                "title": "ManagementProjectsCustomEventSchemasUpdateResponseBodySchemaProperties",
                "type": "object",
                "description": "Defines custom event custom attributes (metadata).",
                "nullable": true
              }
            },
            "required": [],
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "description": "Timestamp representing the date and time when the custom event schema was created. The value is shown in the ISO 8601 format.",
            "format": "date-time",
            "example": "2024-03-27T08:00:09.472Z",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "description": "Timestamp representing the date and time when the custom event schema was updated. The value is shown in the ISO 8601 format.",
            "format": "date-time",
            "example": "2024-03-27T08:00:09.472Z",
            "nullable": true
          },
          "object": {
            "type": "string",
            "description": "The type of the object represented by JSON.",
            "example": "custom-event-schema",
            "default": "custom-event-schema",
            "enum": [
              "custom-event-schema"
            ],
            "nullable": true
          }
        },
        "description": "Response body schema for **POST** `/management/v1/projects/{projectId}/custom-event-schema/{customEventSchemaId}`."
      },
      "ManagementProjectsGetResponseBody": {
        "title": "ManagementProjectsGetResponseBody",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of the project.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The name of the project.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "A user-defined description of the project, e.g. its purpose, scope, region.",
            "nullable": true
          },
          "timezone": {
            "type": "string",
            "description": "The time zone in which the project is established. It can be in the GMT format or in accordance with IANA time zone database.",
            "nullable": true
          },
          "currency": {
            "type": "string",
            "description": "The currency used in the project. It is equal to a 3-letter ISO 4217 code.",
            "nullable": true
          },
          "dial_code": {
            "type": "string",
            "nullable": true,
            "description": "The country dial code for the project. It is equal to an ITU country code."
          },
          "webhook_version": {
            "type": "string",
            "description": "The webhook version used in the project.",
            "default": "v2024-01-01",
            "enum": [
              "v2024-01-01"
            ],
            "nullable": true
          },
          "client_trusted_domains": {
            "title": "ManagementProjectsGetResponseBodyClientTrustedDomains",
            "type": "array",
            "description": "An array of URL addresses that allow client requests.",
            "items": {
              "title": "ManagementProjectsGetResponseBodyClientTrustedDomainsItem",
              "type": "string"
            },
            "nullable": true
          },
          "client_redeem_enabled": {
            "type": "boolean",
            "description": "Enables client-side redemption.",
            "nullable": true
          },
          "client_publish_enabled": {
            "type": "boolean",
            "description": "Enables client-side publication.",
            "nullable": true
          },
          "client_list_vouchers_enabled": {
            "type": "boolean",
            "description": "Enables client-side listing of vouchers.",
            "nullable": true
          },
          "client_create_customer_enabled": {
            "type": "boolean",
            "description": "Enables client-side creation of customers.",
            "nullable": true
          },
          "client_loyalty_events_enabled": {
            "type": "boolean",
            "description": "Enables client-side events for loyalty and referral programs.",
            "nullable": true
          },
          "client_set_voucher_expiration_date_enabled": {
            "type": "boolean",
            "description": "Enables client-side setting of voucher expiration date.",
            "nullable": true
          },
          "webhooks_callout_notifications": {
            "title": "ManagementProjectsGetResponseBodyWebhooksCalloutNotifications",
            "type": "object",
            "description": "Determines the notification settings for webhook callouts configured in Distributions and Project settings.",
            "properties": {
              "distributions": {
                "title": "ManagementProjectsGetResponseBodyWebhooksCalloutNotificationsDistributions",
                "type": "object",
                "description": "Determines the notification settings for webhooks sent through Distributions.",
                "properties": {
                  "email": {
                    "type": "boolean",
                    "description": "Enables the notification through an email.",
                    "nullable": true
                  },
                  "in_app": {
                    "type": "boolean",
                    "description": "Enables the notification through an email.",
                    "nullable": true
                  },
                  "emails": {
                    "title": "ManagementProjectsGetResponseBodyWebhooksCalloutNotificationsDistributionsEmails",
                    "type": "array",
                    "description": "An array of email addresses which will receive the notification.",
                    "items": {
                      "title": "ManagementProjectsGetResponseBodyWebhooksCalloutNotificationsDistributionsEmailsItem",
                      "type": "string"
                    },
                    "nullable": true
                  }
                },
                "required": [],
                "nullable": true
              },
              "webhooks": {
                "title": "ManagementProjectsGetResponseBodyWebhooksCalloutNotificationsWebhooks",
                "type": "object",
                "description": "Determines the notification settings for webhooks sent as set out in the Project settings.",
                "properties": {
                  "email": {
                    "type": "boolean",
                    "description": "Enables the notification through an email.",
                    "nullable": true
                  },
                  "in_app": {
                    "type": "boolean",
                    "description": "Enables the notification through an email.",
                    "nullable": true
                  },
                  "emails": {
                    "title": "ManagementProjectsGetResponseBodyWebhooksCalloutNotificationsWebhooksEmails",
                    "type": "array",
                    "description": "An array of email addresses which will receive the notification.",
                    "items": {
                      "title": "ManagementProjectsGetResponseBodyWebhooksCalloutNotificationsWebhooksEmailsItem",
                      "type": "string"
                    },
                    "nullable": true
                  }
                },
                "required": [],
                "nullable": true
              }
            },
            "required": [],
            "nullable": true
          },
          "api_usage_notifications": {
            "title": "ManagementProjectsGetResponseBodyApiUsageNotifications",
            "type": "object",
            "description": "Determines the notification settings.",
            "properties": {
              "redemptions": {
                "$ref": "#/components/schemas/UsageNotifications"
              },
              "messages": {
                "$ref": "#/components/schemas/UsageNotifications"
              },
              "api_calls": {
                "$ref": "#/components/schemas/UsageNotifications"
              },
              "bulk_api_calls": {
                "$ref": "#/components/schemas/UsageNotifications"
              },
              "webhook_calls": {
                "$ref": "#/components/schemas/UsageNotifications"
              },
              "cycle_calls": {
                "$ref": "#/components/schemas/UsageNotifications"
              }
            },
            "required": [],
            "nullable": true
          },
          "cluster_id": {
            "type": "string",
            "description": "The identifier of the cluster where the project will be created.",
            "nullable": true
          },
          "case_sensitive_codes": {
            "type": "boolean",
            "description": "Determines if the vouchers in the project will be:\n- case sensitive - if `true`, `C0dE-cfV` is **not** equal to `c0de-cfv`),\n- case insensitive - if `false`, `C0dE-cfV` is equal to `c0de-cfv`.",
            "nullable": true
          },
          "api_version": {
            "type": "string",
            "description": "The API version used in the project. Currently, the default and only value is `v2018-08-01`.",
            "default": "v2018-08-01",
            "enum": [
              "v2018-08-01"
            ],
            "nullable": true
          },
          "is_sandbox": {
            "type": "boolean",
            "description": "Determines if the project is a sandbox project.",
            "nullable": true
          },
          "webhook_token": {
            "type": "string",
            "description": "Webhook token used for authentication.",
            "nullable": true
          },
          "default_code_config": {
            "title": "ManagementProjectsGetResponseBodyDefaultCodeConfig",
            "type": "object",
            "description": "Determines the character set that is used as default for vouchers. It is affected by the `\"case_sensitive_codes\"` setting.",
            "properties": {
              "charset": {
                "type": "string",
                "description": "Lists all characters that are used as default for vouchers",
                "nullable": true
              }
            },
            "required": [],
            "nullable": true
          },
          "limits": {
            "title": "ManagementProjectsGetResponseBodyLimits",
            "type": "object",
            "description": "Determines additional limits set on a given project, e.g. the Sandbox project. If no limits are returned, the limits set for the whole organization apply.",
            "properties": {
              "api_calls": {
                "title": "ManagementProjectsGetResponseBodyLimitsApiCalls",
                "type": "array",
                "items": {
                  "title": "ManagementProjectsGetResponseBodyLimitsApiCallsItem",
                  "type": "object",
                  "description": "Determines the limit of API calls per given unit time.",
                  "properties": {
                    "value": {
                      "type": "integer",
                      "description": "Determines the maximum number of API calls per time set in `\"duration\"`."
                    },
                    "duration": {
                      "type": "string",
                      "description": "Determines the amount of time during which the calls up to the number specified in the `value` can be made. The duration is presented in the ISO 8601 format, e.g. `PT1H` means one hour."
                    }
                  }
                },
                "nullable": true
              },
              "bulk_api_calls": {
                "title": "ManagementProjectsGetResponseBodyLimitsBulkApiCalls",
                "type": "array",
                "items": {
                  "title": "ManagementProjectsGetResponseBodyLimitsBulkApiCallsItem",
                  "type": "object",
                  "description": "",
                  "properties": {
                    "value": {
                      "type": "integer",
                      "description": "Determines the maximum number of API calls per time set in `\"duration\"`."
                    },
                    "duration": {
                      "type": "string",
                      "description": "Determines the amount of time during which the calls up to the number specified in the `value` can be made. The duration is presented in the ISO 8601 format, e.g. `PT1H` means one hour."
                    }
                  }
                },
                "nullable": true
              }
            },
            "nullable": true
          }
        }
      },
      "ManagementProjectsListResponseBody": {
        "title": "ManagementProjectsListResponseBody",
        "type": "object",
        "description": "Schema model for **GET** `managment/v1/projects`.",
        "properties": {
          "object": {
            "type": "string",
            "default": "list",
            "description": "The type of the object represented by JSON. This object stores information about the projects in a dictionary.",
            "enum": [
              "list"
            ],
            "nullable": true
          },
          "data_ref": {
            "type": "string",
            "default": "data",
            "description": "Identifies the name of the attribute that contains the array of project objects.",
            "enum": [
              "data"
            ],
            "nullable": true
          },
          "data": {
            "title": "ManagementProjectsListResponseBodyData",
            "type": "array",
            "description": "Array of project objects.",
            "items": {
              "$ref": "#/components/schemas/ManagementProject"
            },
            "nullable": true
          },
          "total": {
            "type": "integer",
            "description": "The total number of projects.",
            "nullable": true
          }
        },
        "required": []
      },
      "ManagementProjectsMetadataSchemasCreateRequestBody": {
        "title": "ManagementProjectsMetadataSchemasCreateRequestBody",
        "type": "object",
        "required": [],
        "properties": {
          "related_object": {
            "type": "string",
            "description": "The resource type. You can define custom metadata schemas, which have a custom `\"related_object\"` resource type, or you can use standard resource types: `\"campaign\"`, `\"customer\"`, `\"earning_rule\"`, `\"loyalty_tier\"`, `\"order\"`, `\"order_item\"`, `\"product\"`, `\"promotion_tier\"`, `\"publication\"`, `\"redemption\"`, `\"reward\"`, `\"voucher\"`.",
            "nullable": true
          },
          "allow_defined_only": {
            "type": "boolean",
            "default": false,
            "description": "Restricts the creation of metadata fields when set to `true`. In other words, it indicates whether or not you are allowed to create new metadata definitions; for example, in the campaign manager or publication manager. If it is set to true, then only the defined fields will be available for assigning values.\t",
            "nullable": true
          },
          "properties": {
            "title": "ManagementProjectsMetadataSchemasCreateRequestBodyProperties",
            "type": "object",
            "description": "Contains metadata definitions. There can be many properties within this object.\n\nOnly the properties sent in the request will be created.",
            "nullable": true
          }
        },
        "description": ""
      },
      "ManagementProjectsMetadataSchemasCreateResponseBody": {
        "title": "ManagementProjectsMetadataSchemasCreateResponseBody",
        "type": "object",
        "required": [],
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of the metadata schema.",
            "nullable": true
          },
          "related_object": {
            "type": "string",
            "description": "The resource type. You can define custom metadata schemas, which have a custom `\"related_object\"` resource type. The standard metadata schemas are: `\"campaign\"`, `\"customer\"`, `\"earning_rule\"`, `\"loyalty_tier\"`, `\"order\"`, `\"order_item\"`, `\"product\"`, `\"promotion_tier\"`, `\"publication\"`, `\"redemption\"`, `\"reward\"`, `\"voucher\"`.",
            "nullable": true
          },
          "properties": {
            "title": "ManagementProjectsMetadataSchemasCreateResponseBodyProperties",
            "type": "object",
            "description": "Contains metadata definitions.",
            "nullable": true
          },
          "allow_defined_only": {
            "type": "boolean",
            "nullable": true,
            "description": "Restricts the creation of metadata fields when set to `true`. It indicates whether or not you can create new metadata definitions, e.g. in the campaign or publication manager. If set to `true`, then only the defined fields are available for assigning values."
          },
          "created_at": {
            "type": "string",
            "example": "2021-12-03T13:33:44.556Z",
            "description": "Timestamp representing the date and time when the metadata schema was created. The value for this parameter is shown in the ISO 8601 format.",
            "format": "date-time",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "nullable": true,
            "example": "2022-08-11T08:05:30.695Z",
            "description": "Timestamp representing the date and time when the metadata schema was updated. The value for this parameter is shown in the ISO 8601 format.",
            "format": "date-time"
          },
          "object": {
            "type": "string",
            "default": "metadata_schema",
            "description": "The type of the object represented by the JSON. This object stores information about the metadata schema.",
            "nullable": true
          }
        },
        "description": "Response body schema for **POST** `management/v1/projects/{projectId}/metadata-schemas`."
      },
      "ManagementProjectsMetadataSchemasGetResponseBody": {
        "title": "ManagementProjectsMetadataSchemasGetResponseBody",
        "type": "object",
        "required": [],
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of the metadata schema.",
            "nullable": true
          },
          "related_object": {
            "type": "string",
            "description": "The resource type. You can define custom metadata schemas, which have a custom `\"related_object\"` resource type. The standard metadata schemas are: `\"campaign\"`, `\"customer\"`, `\"earning_rule\"`, `\"loyalty_tier\"`, `\"order\"`, `\"order_item\"`, `\"product\"`, `\"promotion_tier\"`, `\"publication\"`, `\"redemption\"`, `\"reward\"`, `\"voucher\"`.",
            "nullable": true
          },
          "properties": {
            "title": "ManagementProjectsMetadataSchemasGetResponseBodyProperties",
            "type": "object",
            "description": "Contains metadata definitions.",
            "nullable": true
          },
          "allow_defined_only": {
            "type": "boolean",
            "nullable": true,
            "description": "Restricts the creation of metadata fields when set to `true`. It indicates whether or not you can create new metadata definitions, e.g. in the campaign or publication manager. If set to `true`, then only the defined fields are available for assigning values."
          },
          "created_at": {
            "type": "string",
            "example": "2021-12-03T13:33:44.556Z",
            "description": "Timestamp representing the date and time when the metadata schema was created. The value for this parameter is shown in the ISO 8601 format.",
            "format": "date-time",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "nullable": true,
            "example": "2022-08-11T08:05:30.695Z",
            "description": "Timestamp representing the date and time when the metadata schema was updated. The value for this parameter is shown in the ISO 8601 format.",
            "format": "date-time"
          },
          "object": {
            "type": "string",
            "default": "metadata_schema",
            "description": "The type of the object represented by the JSON. This object stores information about the metadata schema.",
            "nullable": true
          }
        },
        "description": "Response body schema for **GET** `management/v1/projects/{projectId}/metadata-schemas/{metadataSchemaId}`."
      },
      "ManagementProjectsMetadataSchemasListResponseBody": {
        "title": "ManagementProjectsMetadataSchemasListResponseBody",
        "type": "object",
        "description": "Object containing a list of metadata schemas.",
        "properties": {
          "object": {
            "type": "string",
            "default": "list",
            "description": "The type of the object represented by JSON. This object stores information about the metadata schemas in a dictionary.",
            "enum": [
              "list"
            ],
            "nullable": true
          },
          "data_ref": {
            "type": "string",
            "default": "data",
            "description": "Identifies the name of the attribute that contains the array of metadata schema objects.",
            "enum": [
              "data"
            ],
            "nullable": true
          },
          "data": {
            "title": "ManagementProjectsMetadataSchemasListResponseBodyData",
            "type": "array",
            "description": "Array of metadata schema objects. The metadata schemas are listed by related object properties.",
            "items": {
              "$ref": "#/components/schemas/ManagementProjectsMetadataSchema"
            },
            "nullable": true
          },
          "total": {
            "type": "integer",
            "description": "The total number of metadata schema objects.",
            "nullable": true
          }
        },
        "required": []
      },
      "ManagementProjectsMetadataSchemasUpdateRequestBody": {
        "title": "ManagementProjectsMetadataSchemasUpdateRequestBody",
        "type": "object",
        "description": "",
        "properties": {
          "allow_defined_only": {
            "type": "boolean",
            "description": "Restricts the creation of metadata fields when set to `true`. In other words, it indicates whether or not you are allowed to create new metadata definitions; for example, in the campaign manager or publication manager. If it is set to true, then only the defined fields will be available for assigning values.\t",
            "nullable": true
          },
          "properties": {
            "title": "ManagementProjectsMetadataSchemasUpdateRequestBodyProperties",
            "type": "object",
            "description": "Contains metadata definitions. There can be many properties within this object.\n\nOnly the properties sent in the request will be updated. However, if you send a property, all its key-value pairs must be provided - otherwise, they will be overwritten to new values.\n\nYou cannot change the `\"type\"` property. However, it is required, so you need to add it to the request.",
            "nullable": true
          }
        },
        "required": []
      },
      "ManagementProjectsMetadataSchemasUpdateResponseBody": {
        "title": "ManagementProjectsMetadataSchemasUpdateResponseBody",
        "type": "object",
        "required": [],
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of the metadata schema.",
            "nullable": true
          },
          "related_object": {
            "type": "string",
            "description": "The resource type. You can define custom metadata schemas, which have a custom `\"related_object\"` resource type. The standard metadata schemas are: `\"campaign\"`, `\"customer\"`, `\"earning_rule\"`, `\"loyalty_tier\"`, `\"order\"`, `\"order_item\"`, `\"product\"`, `\"promotion_tier\"`, `\"publication\"`, `\"redemption\"`, `\"reward\"`, `\"voucher\"`.",
            "nullable": true
          },
          "properties": {
            "title": "ManagementProjectsMetadataSchemasUpdateResponseBodyProperties",
            "type": "object",
            "description": "Contains metadata definitions.",
            "nullable": true
          },
          "allow_defined_only": {
            "type": "boolean",
            "nullable": true,
            "description": "Restricts the creation of metadata fields when set to `true`. It indicates whether or not you can create new metadata definitions, e.g. in the campaign or publication manager. If set to `true`, then only the defined fields are available for assigning values."
          },
          "created_at": {
            "type": "string",
            "example": "2021-12-03T13:33:44.556Z",
            "description": "Timestamp representing the date and time when the metadata schema was created. The value for this parameter is shown in the ISO 8601 format.",
            "format": "date-time",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "nullable": true,
            "example": "2022-08-11T08:05:30.695Z",
            "description": "Timestamp representing the date and time when the metadata schema was updated. The value for this parameter is shown in the ISO 8601 format.",
            "format": "date-time"
          },
          "object": {
            "type": "string",
            "default": "metadata_schema",
            "description": "The type of the object represented by the JSON. This object stores information about the metadata schema.",
            "nullable": true
          }
        },
        "description": "Response body schema for **PUT** `management/v1/projects/{projectId}/metadata-schemas/{metadataSchemaId}`."
      },
      "ManagementProjectsStackingRulesCreateRequestBody": {
        "title": "ManagementProjectsStackingRulesCreateRequestBody",
        "type": "object",
        "properties": {
          "exclusive_categories": {
            "title": "ManagementProjectsStackingRulesCreateRequestBodyExclusiveCategories",
            "type": "array",
            "description": "Lists the IDs of exclusive categories. A redeemable from a campaign with an exclusive category is the only redeemable to be redeemed when applied with redeemables from other campaigns unless these campaigns are exclusive or joint.",
            "items": {
              "title": "ManagementProjectsStackingRulesCreateRequestBodyExclusiveCategoriesItem",
              "type": "string"
            },
            "nullable": true
          },
          "joint_categories": {
            "title": "ManagementProjectsStackingRulesCreateRequestBodyJointCategories",
            "type": "array",
            "description": "Lists the IDs of the joint categories. A campaign with a joint category is always applied regardless of the exclusivity of other campaigns.",
            "items": {
              "title": "ManagementProjectsStackingRulesCreateRequestBodyJointCategoriesItem",
              "type": "string"
            },
            "nullable": true
          },
          "redeemables_limit": {
            "type": "integer",
            "description": "Defines how many redeemables can be sent in one request. Note: more redeemables means more processing time.",
            "minimum": 1,
            "maximum": 30,
            "nullable": true
          },
          "applicable_redeemables_limit": {
            "type": "integer",
            "description": "Defines how many redeemables can be applied in one request. The number must be less than or equal to `redeemables_limit`. For example, a user can select 30 discounts but only 5 will be applied to the order and the remaining will be `SKIPPED` according to the `redeemables_sorting_rule`.",
            "minimum": 1,
            "maximum": 30,
            "nullable": true
          },
          "applicable_redeemables_per_category_limit": {
            "type": "integer",
            "nullable": true,
            "description": "Defines how many redeemables with the same category can be applied in one request. The number must be less than or equal to `applicable_redeemables_limit`. The ones above the limit will be `SKIPPED` according to the `redeemables_sorting_rule`.",
            "minimum": 1,
            "maximum": 30
          },
          "applicable_exclusive_redeemables_limit": {
            "type": "integer",
            "description": "Defines how many redeemables with an assigned exclusive category can be applied in one request. The ones above the limit will be `SKIPPED` according to the `redeemables_sorting_rule`.",
            "minimum": 1,
            "maximum": 5,
            "nullable": true
          },
          "applicable_exclusive_redeemables_per_category_limit": {
            "type": "integer",
            "nullable": true,
            "description": "Defines how many redeemables with an assigned exclusive category can be applied in one request. The ones above the limit will be `SKIPPED` according to the `redeemables_sorting_rule`. The number must be less than or equal to `applicable_exclusive_redeemables_limit`.",
            "minimum": 1,
            "maximum": 30
          },
          "discount_calculation_mode": {
            "type": "string",
            "description": "Defines if the discounts are applied by taking into account the initial order amount or the discounted order amount.",
            "enum": [
              "INITIAL_AMOUNT",
              "DISCOUNTED_AMOUNT"
            ],
            "nullable": true
          },
          "initial_amount_mode_categories": {
            "title": "ManagementProjectsStackingRulesCreateRequestBodyInitialAmountModeCategories",
            "type": "array",
            "description": "Lists the IDs of the categories that apply a discount based on the initial amount.",
            "items": {
              "title": "ManagementProjectsStackingRulesCreateRequestBodyInitialAmountModeCategoriesItem",
              "type": "string"
            },
            "nullable": true
          },
          "discounted_amount_mode_categories": {
            "title": "ManagementProjectsStackingRulesCreateRequestBodyDiscountedAmountModeCategories",
            "type": "array",
            "description": "Lists the IDs of the categories that apply a discount based on the discounted amount.",
            "items": {
              "title": "ManagementProjectsStackingRulesCreateRequestBodyDiscountedAmountModeCategoriesItem",
              "type": "string"
            },
            "nullable": true
          },
          "redeemables_application_mode": {
            "type": "string",
            "description": "Defines the application mode for redeemables.\n`\"ALL\"` means that all redeemables must be validated for the redemption to be successful.\n`\"PARTIAL\"` means that only those redeemables that can be validated will be redeemed. The redeemables that fail validaton will be skipped.",
            "enum": [
              "ALL",
              "PARTIAL"
            ],
            "nullable": true
          },
          "redeemables_sorting_rule": {
            "type": "string",
            "description": "Defines redeemables sorting rule. `CATEGORY_HIERARCHY` means that redeemables are applied oaccording to the category priority. `REQUESTED_ORDER` means that redeemables are applied in the sequence provided in the request.",
            "enum": [
              "CATEGORY_HIERARCHY",
              "REQUESTED_ORDER"
            ],
            "nullable": true
          },
          "redeemables_products_application_mode": {
            "type": "string",
            "description": "Defines redeemables products application mode. `STACK` means that multiple discounts can be applied to a product. `ONCE` means that only one discount can be applied to the same product.",
            "enum": [
              "STACK",
              "ONCE"
            ],
            "nullable": true
          },
          "redeemables_no_effect_rule": {
            "type": "string",
            "description": "Defines redeemables no effect rule. `REDEEM_ANYWAY` means that the redeemable will be redeemed regardless of any restrictions or conditions in place. `SKIP` means that the redeemable will be processed only when an applicable effect is calculated.",
            "enum": [
              "REDEEM_ANYWAY",
              "SKIP"
            ],
            "nullable": true
          },
          "no_effect_skip_categories": {
            "title": "ManagementProjectsStackingRulesCreateRequestBodyNoEffectSkipCategories",
            "type": "array",
            "description": "Lists category IDs. Redeemables with a given category are skipped even if the `redeemables_no_effect_rule` is set to `REDEEM_ANYWAY`. Category IDs can't overlap with the IDs in `no_effect_redeem_anyway_categories`.",
            "items": {
              "title": "ManagementProjectsStackingRulesCreateRequestBodyNoEffectSkipCategoriesItem",
              "type": "string"
            },
            "nullable": true
          },
          "no_effect_redeem_anyway_categories": {
            "title": "ManagementProjectsStackingRulesCreateRequestBodyNoEffectRedeemAnywayCategories",
            "type": "array",
            "description": "Lists category IDs. Redeemables with a given category are redeemed anyway even if the `redeemables_no_effect_rule` is set to `SKIP`. Category IDs can't overlap with the IDs in `no_effect_skip_categories`.",
            "items": {
              "title": "ManagementProjectsStackingRulesCreateRequestBodyNoEffectRedeemAnywayCategoriesItem",
              "type": "string"
            },
            "nullable": true
          },
          "redeemables_rollback_order_mode": {
            "type": "string",
            "description": "Defines the rollback mode for the order. `WITH_ORDER` is a default setting. The redemption is rolled back together with the data about the order, including related discount values. `WITHOUT_ORDER` allows rolling the redemption back without affecting order data, including the applied discount values.",
            "enum": [
              "WITH_ORDER",
              "WITHOUT_ORDER"
            ],
            "nullable": true
          }
        },
        "description": "Request body schema for **POST** `/management/v1/projects/{projectId}/stacking-rules`."
      },
      "ManagementProjectsStackingRulesCreateResponseBody": {
        "title": "ManagementProjectsStackingRulesCreateResponseBody",
        "type": "object",
        "required": [],
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier of the stacking rules.",
            "nullable": true
          },
          "exclusive_categories": {
            "title": "ManagementProjectsStackingRulesCreateResponseBodyExclusiveCategories",
            "type": "array",
            "description": "Lists the IDs of exclusive categories. A redeemable from a campaign with an exclusive category is the only redeemable to be redeemed when applied with redeemables from other campaigns unless these campaigns are exclusive or joint.",
            "items": {
              "title": "ManagementProjectsStackingRulesCreateResponseBodyExclusiveCategoriesItem",
              "type": "string"
            },
            "nullable": true
          },
          "joint_categories": {
            "title": "ManagementProjectsStackingRulesCreateResponseBodyJointCategories",
            "type": "array",
            "description": "Lists the IDs of the joint categories. A campaign with a joint category is always applied regardless of the exclusivity of other campaigns.",
            "items": {
              "title": "ManagementProjectsStackingRulesCreateResponseBodyJointCategoriesItem",
              "type": "string"
            },
            "nullable": true
          },
          "redeemables_limit": {
            "type": "integer",
            "description": "Defines how many redeemables can be sent in one request. Note: more redeemables means more processing time.",
            "minimum": 1,
            "maximum": 30,
            "nullable": true
          },
          "applicable_redeemables_limit": {
            "type": "integer",
            "description": "Defines how many redeemables can be applied in one request. The number must be less than or equal to `redeemables_limit`. For example, a user can select 30 discounts but only 5 will be applied to the order and the remaining will be `SKIPPED` according to the `redeemables_sorting_rule`.",
            "minimum": 1,
            "maximum": 30,
            "nullable": true
          },
          "applicable_redeemables_per_category_limit": {
            "type": "integer",
            "nullable": true,
            "description": "Defines how many redeemables with the same category can be applied in one request. The number must be less than or equal to `applicable_redeemables_limit`. The ones above the limit will be `SKIPPED` according to the `redeemables_sorting_rule`.",
            "minimum": 1,
            "maximum": 30
          },
          "applicable_exclusive_redeemables_limit": {
            "type": "integer",
            "description": "Defines how many redeemables with an assigned exclusive category can be applied in one request. The ones above the limit will be `SKIPPED` according to the `redeemables_sorting_rule`.",
            "minimum": 1,
            "maximum": 5,
            "nullable": true
          },
          "applicable_exclusive_redeemables_per_category_limit": {
            "type": "integer",
            "nullable": true,
            "description": "Defines how many redeemables with an assigned exclusive category can be applied in one request. The ones above the limit will be `SKIPPED` according to the `redeemables_sorting_rule`. The number must be less than or equal to `applicable_exclusive_redeemables_limit`.",
            "minimum": 1,
            "maximum": 30
          },
          "discount_calculation_mode": {
            "type": "string",
            "description": "Defines if the discounts are applied by taking into account the initial order amount or the discounted order amount.",
            "enum": [
              "INITIAL_AMOUNT",
              "DISCOUNTED_AMOUNT"
            ],
            "nullable": true
          },
          "initial_amount_mode_categories": {
            "title": "ManagementProjectsStackingRulesCreateResponseBodyInitialAmountModeCategories",
            "type": "array",
            "description": "Lists the IDs of the categories that apply a discount based on the initial amount.",
            "items": {
              "title": "ManagementProjectsStackingRulesCreateResponseBodyInitialAmountModeCategoriesItem",
              "type": "string"
            },
            "nullable": true
          },
          "discounted_amount_mode_categories": {
            "title": "ManagementProjectsStackingRulesCreateResponseBodyDiscountedAmountModeCategories",
            "type": "array",
            "description": "Lists the IDs of the categories that apply a discount based on the discounted amount.",
            "items": {
              "title": "ManagementProjectsStackingRulesCreateResponseBodyDiscountedAmountModeCategoriesItem",
              "type": "string"
            },
            "nullable": true
          },
          "redeemables_application_mode": {
            "type": "string",
            "description": "Defines the application mode for redeemables.\n`\"ALL\"` means that all redeemables must be validated for the redemption to be successful.\n`\"PARTIAL\"` means that only those redeemables that can be validated will be redeemed. The redeemables that fail validaton will be skipped.",
            "enum": [
              "ALL",
              "PARTIAL"
            ],
            "nullable": true
          },
          "redeemables_sorting_rule": {
            "type": "string",
            "description": "Defines redeemables sorting rule. `CATEGORY_HIERARCHY` means that redeemables are applied oaccording to the category priority. `REQUESTED_ORDER` means that redeemables are applied in the sequence provided in the request.",
            "enum": [
              "CATEGORY_HIERARCHY",
              "REQUESTED_ORDER"
            ],
            "nullable": true
          },
          "redeemables_products_application_mode": {
            "type": "string",
            "description": "Defines redeemables products application mode. `STACK` means that multiple discounts can be applied to a product. `ONCE` means that only one discount can be applied to the same product.",
            "enum": [
              "STACK",
              "ONCE"
            ],
            "nullable": true
          },
          "redeemables_no_effect_rule": {
            "type": "string",
            "description": "Defines redeemables no effect rule. `REDEEM_ANYWAY` means that the redeemable will be redeemed regardless of any restrictions or conditions in place. `SKIP` means that the redeemable will be processed only when an applicable effect is calculated.",
            "enum": [
              "REDEEM_ANYWAY",
              "SKIP"
            ],
            "nullable": true
          },
          "no_effect_skip_categories": {
            "title": "ManagementProjectsStackingRulesCreateResponseBodyNoEffectSkipCategories",
            "type": "array",
            "description": "Lists category IDs. Redeemables with a given category are skipped even if the `redeemables_no_effect_rule` is set to `REDEEM_ANYWAY`. Category IDs can't overlap with the IDs in `no_effect_redeem_anyway_categories`.",
            "items": {
              "title": "ManagementProjectsStackingRulesCreateResponseBodyNoEffectSkipCategoriesItem",
              "type": "string"
            },
            "nullable": true
          },
          "no_effect_redeem_anyway_categories": {
            "title": "ManagementProjectsStackingRulesCreateResponseBodyNoEffectRedeemAnywayCategories",
            "type": "array",
            "description": "Lists category IDs. Redeemables with a given category are redeemed anyway even if the `redeemables_no_effect_rule` is set to `SKIP`. Category IDs can't overlap with the IDs in `no_effect_skip_categories`.",
            "items": {
              "title": "ManagementProjectsStackingRulesCreateResponseBodyNoEffectRedeemAnywayCategoriesItem",
              "type": "string"
            },
            "nullable": true
          },
          "redeemables_rollback_order_mode": {
            "type": "string",
            "description": "Defines the rollback mode for the order. `WITH_ORDER` is a default setting. The redemption is rolled back together with the data about the order, including related discount values. `WITHOUT_ORDER` allows rolling the redemption back without affecting order data, including the applied discount values.",
            "enum": [
              "WITH_ORDER",
              "WITHOUT_ORDER"
            ],
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "description": "Timestamp representing the date and time when the stacking rules were created. The value for this parameter is shown in the ISO 8601 format.",
            "format": "date-time",
            "example": "2024-01-02T08:31:46.562Z",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "description": "Timestamp representing the date and time when the stacking rules were updated. The value for this parameter is shown in the ISO 8601 format.",
            "format": "date-time",
            "nullable": true
          }
        },
        "description": "Response body schema for **POST** `/management/v1/projects/{projectId}/stacking-rules`."
      },
      "ManagementProjectsStackingRulesGetResponseBody": {
        "title": "ManagementProjectsStackingRulesGetResponseBody",
        "type": "object",
        "required": [],
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier of the stacking rules.",
            "nullable": true
          },
          "exclusive_categories": {
            "title": "ManagementProjectsStackingRulesGetResponseBodyExclusiveCategories",
            "type": "array",
            "description": "Lists the IDs of exclusive categories. A redeemable from a campaign with an exclusive category is the only redeemable to be redeemed when applied with redeemables from other campaigns unless these campaigns are exclusive or joint.",
            "items": {
              "title": "ManagementProjectsStackingRulesGetResponseBodyExclusiveCategoriesItem",
              "type": "string"
            },
            "nullable": true
          },
          "joint_categories": {
            "title": "ManagementProjectsStackingRulesGetResponseBodyJointCategories",
            "type": "array",
            "description": "Lists the IDs of the joint categories. A campaign with a joint category is always applied regardless of the exclusivity of other campaigns.",
            "items": {
              "title": "ManagementProjectsStackingRulesGetResponseBodyJointCategoriesItem",
              "type": "string"
            },
            "nullable": true
          },
          "redeemables_limit": {
            "type": "integer",
            "description": "Defines how many redeemables can be sent in one request. Note: more redeemables means more processing time.",
            "minimum": 1,
            "maximum": 30,
            "nullable": true
          },
          "applicable_redeemables_limit": {
            "type": "integer",
            "description": "Defines how many redeemables can be applied in one request. The number must be less than or equal to `redeemables_limit`. For example, a user can select 30 discounts but only 5 will be applied to the order and the remaining will be `SKIPPED` according to the `redeemables_sorting_rule`.",
            "minimum": 1,
            "maximum": 30,
            "nullable": true
          },
          "applicable_redeemables_per_category_limit": {
            "type": "integer",
            "nullable": true,
            "description": "Defines how many redeemables with the same category can be applied in one request. The number must be less than or equal to `applicable_redeemables_limit`. The ones above the limit will be `SKIPPED` according to the `redeemables_sorting_rule`.",
            "minimum": 1,
            "maximum": 30
          },
          "applicable_exclusive_redeemables_limit": {
            "type": "integer",
            "description": "Defines how many redeemables with an assigned exclusive category can be applied in one request. The ones above the limit will be `SKIPPED` according to the `redeemables_sorting_rule`.",
            "minimum": 1,
            "maximum": 5,
            "nullable": true
          },
          "applicable_exclusive_redeemables_per_category_limit": {
            "type": "integer",
            "nullable": true,
            "description": "Defines how many redeemables with an assigned exclusive category can be applied in one request. The ones above the limit will be `SKIPPED` according to the `redeemables_sorting_rule`. The number must be less than or equal to `applicable_exclusive_redeemables_limit`.",
            "minimum": 1,
            "maximum": 30
          },
          "discount_calculation_mode": {
            "type": "string",
            "description": "Defines if the discounts are applied by taking into account the initial order amount or the discounted order amount.",
            "enum": [
              "INITIAL_AMOUNT",
              "DISCOUNTED_AMOUNT"
            ],
            "nullable": true
          },
          "initial_amount_mode_categories": {
            "title": "ManagementProjectsStackingRulesGetResponseBodyInitialAmountModeCategories",
            "type": "array",
            "description": "Lists the IDs of the categories that apply a discount based on the initial amount.",
            "items": {
              "title": "ManagementProjectsStackingRulesGetResponseBodyInitialAmountModeCategoriesItem",
              "type": "string"
            },
            "nullable": true
          },
          "discounted_amount_mode_categories": {
            "title": "ManagementProjectsStackingRulesGetResponseBodyDiscountedAmountModeCategories",
            "type": "array",
            "description": "Lists the IDs of the categories that apply a discount based on the discounted amount.",
            "items": {
              "title": "ManagementProjectsStackingRulesGetResponseBodyDiscountedAmountModeCategoriesItem",
              "type": "string"
            },
            "nullable": true
          },
          "redeemables_application_mode": {
            "type": "string",
            "description": "Defines the application mode for redeemables.\n`\"ALL\"` means that all redeemables must be validated for the redemption to be successful.\n`\"PARTIAL\"` means that only those redeemables that can be validated will be redeemed. The redeemables that fail validaton will be skipped.",
            "enum": [
              "ALL",
              "PARTIAL"
            ],
            "nullable": true
          },
          "redeemables_sorting_rule": {
            "type": "string",
            "description": "Defines redeemables sorting rule. `CATEGORY_HIERARCHY` means that redeemables are applied oaccording to the category priority. `REQUESTED_ORDER` means that redeemables are applied in the sequence provided in the request.",
            "enum": [
              "CATEGORY_HIERARCHY",
              "REQUESTED_ORDER"
            ],
            "nullable": true
          },
          "redeemables_products_application_mode": {
            "type": "string",
            "description": "Defines redeemables products application mode. `STACK` means that multiple discounts can be applied to a product. `ONCE` means that only one discount can be applied to the same product.",
            "enum": [
              "STACK",
              "ONCE"
            ],
            "nullable": true
          },
          "redeemables_no_effect_rule": {
            "type": "string",
            "description": "Defines redeemables no effect rule. `REDEEM_ANYWAY` means that the redeemable will be redeemed regardless of any restrictions or conditions in place. `SKIP` means that the redeemable will be processed only when an applicable effect is calculated.",
            "enum": [
              "REDEEM_ANYWAY",
              "SKIP"
            ],
            "nullable": true
          },
          "no_effect_skip_categories": {
            "title": "ManagementProjectsStackingRulesGetResponseBodyNoEffectSkipCategories",
            "type": "array",
            "description": "Lists category IDs. Redeemables with a given category are skipped even if the `redeemables_no_effect_rule` is set to `REDEEM_ANYWAY`. Category IDs can't overlap with the IDs in `no_effect_redeem_anyway_categories`.",
            "items": {
              "title": "ManagementProjectsStackingRulesGetResponseBodyNoEffectSkipCategoriesItem",
              "type": "string"
            },
            "nullable": true
          },
          "no_effect_redeem_anyway_categories": {
            "title": "ManagementProjectsStackingRulesGetResponseBodyNoEffectRedeemAnywayCategories",
            "type": "array",
            "description": "Lists category IDs. Redeemables with a given category are redeemed anyway even if the `redeemables_no_effect_rule` is set to `SKIP`. Category IDs can't overlap with the IDs in `no_effect_skip_categories`.",
            "items": {
              "title": "ManagementProjectsStackingRulesGetResponseBodyNoEffectRedeemAnywayCategoriesItem",
              "type": "string"
            },
            "nullable": true
          },
          "redeemables_rollback_order_mode": {
            "type": "string",
            "description": "Defines the rollback mode for the order. `WITH_ORDER` is a default setting. The redemption is rolled back together with the data about the order, including related discount values. `WITHOUT_ORDER` allows rolling the redemption back without affecting order data, including the applied discount values.",
            "enum": [
              "WITH_ORDER",
              "WITHOUT_ORDER"
            ],
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "description": "Timestamp representing the date and time when the stacking rules were created. The value for this parameter is shown in the ISO 8601 format.",
            "format": "date-time",
            "example": "2024-01-02T08:31:46.562Z",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "description": "Timestamp representing the date and time when the stacking rules were updated. The value for this parameter is shown in the ISO 8601 format.",
            "format": "date-time",
            "nullable": true
          }
        },
        "description": "Response body schema for **GET** `/management/v1/projects/{projectId}/stacking-rules/{stackingRulesId}`."
      },
      "ManagementProjectsStackingRulesListResponseBody": {
        "title": "ManagementProjectsStackingRulesListResponseBody",
        "type": "object",
        "description": "Response body schema for **GET** `/management/v1/projects/{projectId}/stacking-rules`.",
        "properties": {
          "object": {
            "type": "string",
            "default": "list",
            "description": "The type of the object represented by JSON. This object stores information about the stacking rules in a dictionary.",
            "enum": [
              "list"
            ],
            "nullable": true
          },
          "data_ref": {
            "type": "string",
            "default": "data",
            "description": "Identifies the name of the attribute that contains the array of stacking rule objects.",
            "enum": [
              "data"
            ],
            "nullable": true
          },
          "data": {
            "title": "ManagementProjectsStackingRulesListResponseBodyData",
            "type": "array",
            "description": "Array of only one stacking rule object.",
            "items": {
              "$ref": "#/components/schemas/ManagementProjectsStackingRules"
            },
            "nullable": true
          },
          "total": {
            "type": "integer",
            "description": "The total number of stacking rule objects. It is always 1.",
            "nullable": true
          }
        },
        "required": []
      },
      "ManagementProjectsStackingRulesUpdateRequestBody": {
        "title": "ManagementProjectsStackingRulesUpdateRequestBody",
        "type": "object",
        "properties": {
          "exclusive_categories": {
            "title": "ManagementProjectsStackingRulesUpdateRequestBodyExclusiveCategories",
            "type": "array",
            "description": "Lists the IDs of exclusive categories. A redeemable from a campaign with an exclusive category is the only redeemable to be redeemed when applied with redeemables from other campaigns unless these campaigns are exclusive or joint.",
            "items": {
              "title": "ManagementProjectsStackingRulesUpdateRequestBodyExclusiveCategoriesItem",
              "type": "string"
            },
            "nullable": true
          },
          "joint_categories": {
            "title": "ManagementProjectsStackingRulesUpdateRequestBodyJointCategories",
            "type": "array",
            "description": "Lists the IDs of the joint categories. A campaign with a joint category is always applied regardless of the exclusivity of other campaigns.",
            "items": {
              "title": "ManagementProjectsStackingRulesUpdateRequestBodyJointCategoriesItem",
              "type": "string"
            },
            "nullable": true
          },
          "redeemables_limit": {
            "type": "integer",
            "description": "Defines how many redeemables can be sent in one request. Note: more redeemables means more processing time.",
            "minimum": 1,
            "maximum": 30,
            "nullable": true
          },
          "applicable_redeemables_limit": {
            "type": "integer",
            "description": "Defines how many redeemables can be applied in one request. The number must be less than or equal to `redeemables_limit`. For example, a user can select 30 discounts but only 5 will be applied to the order and the remaining will be `SKIPPED` according to the `redeemables_sorting_rule`.",
            "minimum": 1,
            "maximum": 30,
            "nullable": true
          },
          "applicable_redeemables_per_category_limit": {
            "type": "integer",
            "nullable": true,
            "description": "Defines how many redeemables with the same category can be applied in one request. The number must be less than or equal to `applicable_redeemables_limit`. The ones above the limit will be `SKIPPED` according to the `redeemables_sorting_rule`.",
            "minimum": 1,
            "maximum": 30
          },
          "applicable_exclusive_redeemables_limit": {
            "type": "integer",
            "description": "Defines how many redeemables with an assigned exclusive category can be applied in one request. The ones above the limit will be `SKIPPED` according to the `redeemables_sorting_rule`.",
            "minimum": 1,
            "maximum": 5,
            "nullable": true
          },
          "applicable_exclusive_redeemables_per_category_limit": {
            "type": "integer",
            "nullable": true,
            "description": "Defines how many redeemables with an assigned exclusive category can be applied in one request. The ones above the limit will be `SKIPPED` according to the `redeemables_sorting_rule`. The number must be less than or equal to `applicable_exclusive_redeemables_limit`.",
            "minimum": 1,
            "maximum": 30
          },
          "discount_calculation_mode": {
            "type": "string",
            "description": "Defines if the discounts are applied by taking into account the initial order amount or the discounted order amount.",
            "enum": [
              "INITIAL_AMOUNT",
              "DISCOUNTED_AMOUNT"
            ],
            "nullable": true
          },
          "initial_amount_mode_categories": {
            "title": "ManagementProjectsStackingRulesUpdateRequestBodyInitialAmountModeCategories",
            "type": "array",
            "description": "Lists the IDs of the categories that apply a discount based on the initial amount.",
            "items": {
              "title": "ManagementProjectsStackingRulesUpdateRequestBodyInitialAmountModeCategoriesItem",
              "type": "string"
            },
            "nullable": true
          },
          "discounted_amount_mode_categories": {
            "title": "ManagementProjectsStackingRulesUpdateRequestBodyDiscountedAmountModeCategories",
            "type": "array",
            "description": "Lists the IDs of the categories that apply a discount based on the discounted amount.",
            "items": {
              "title": "ManagementProjectsStackingRulesUpdateRequestBodyDiscountedAmountModeCategoriesItem",
              "type": "string"
            },
            "nullable": true
          },
          "redeemables_application_mode": {
            "type": "string",
            "description": "Defines the application mode for redeemables.\n`\"ALL\"` means that all redeemables must be validated for the redemption to be successful.\n`\"PARTIAL\"` means that only those redeemables that can be validated will be redeemed. The redeemables that fail validaton will be skipped.",
            "enum": [
              "ALL",
              "PARTIAL"
            ],
            "nullable": true
          },
          "redeemables_sorting_rule": {
            "type": "string",
            "description": "Defines redeemables sorting rule. `CATEGORY_HIERARCHY` means that redeemables are applied oaccording to the category priority. `REQUESTED_ORDER` means that redeemables are applied in the sequence provided in the request.",
            "enum": [
              "CATEGORY_HIERARCHY",
              "REQUESTED_ORDER"
            ],
            "nullable": true
          },
          "redeemables_products_application_mode": {
            "type": "string",
            "description": "Defines redeemables products application mode. `STACK` means that multiple discounts can be applied to a product. `ONCE` means that only one discount can be applied to the same product.",
            "enum": [
              "STACK",
              "ONCE"
            ],
            "nullable": true
          },
          "redeemables_no_effect_rule": {
            "type": "string",
            "description": "Defines redeemables no effect rule. `REDEEM_ANYWAY` means that the redeemable will be redeemed regardless of any restrictions or conditions in place. `SKIP` means that the redeemable will be processed only when an applicable effect is calculated.",
            "enum": [
              "REDEEM_ANYWAY",
              "SKIP"
            ],
            "nullable": true
          },
          "no_effect_skip_categories": {
            "title": "ManagementProjectsStackingRulesUpdateRequestBodyNoEffectSkipCategories",
            "type": "array",
            "description": "Lists category IDs. Redeemables with a given category are skipped even if the `redeemables_no_effect_rule` is set to `REDEEM_ANYWAY`. Category IDs can't overlap with the IDs in `no_effect_redeem_anyway_categories`.",
            "items": {
              "title": "ManagementProjectsStackingRulesUpdateRequestBodyNoEffectSkipCategoriesItem",
              "type": "string"
            },
            "nullable": true
          },
          "no_effect_redeem_anyway_categories": {
            "title": "ManagementProjectsStackingRulesUpdateRequestBodyNoEffectRedeemAnywayCategories",
            "type": "array",
            "description": "Lists category IDs. Redeemables with a given category are redeemed anyway even if the `redeemables_no_effect_rule` is set to `SKIP`. Category IDs can't overlap with the IDs in `no_effect_skip_categories`.",
            "items": {
              "title": "ManagementProjectsStackingRulesUpdateRequestBodyNoEffectRedeemAnywayCategoriesItem",
              "type": "string"
            },
            "nullable": true
          },
          "redeemables_rollback_order_mode": {
            "type": "string",
            "description": "Defines the rollback mode for the order. `WITH_ORDER` is a default setting. The redemption is rolled back together with the data about the order, including related discount values. `WITHOUT_ORDER` allows rolling the redemption back without affecting order data, including the applied discount values.",
            "enum": [
              "WITH_ORDER",
              "WITHOUT_ORDER"
            ],
            "nullable": true
          }
        },
        "description": "Request body schema for **PUT** `/management/v1/projects/{projectId}/stacking-rules/{stackingRulesId}`."
      },
      "ManagementProjectsStackingRulesUpdateResponseBody": {
        "title": "ManagementProjectsStackingRulesUpdateResponseBody",
        "type": "object",
        "required": [],
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier of the stacking rules.",
            "nullable": true
          },
          "exclusive_categories": {
            "title": "ManagementProjectsStackingRulesUpdateResponseBodyExclusiveCategories",
            "type": "array",
            "description": "Lists the IDs of exclusive categories. A redeemable from a campaign with an exclusive category is the only redeemable to be redeemed when applied with redeemables from other campaigns unless these campaigns are exclusive or joint.",
            "items": {
              "title": "ManagementProjectsStackingRulesUpdateResponseBodyExclusiveCategoriesItem",
              "type": "string"
            },
            "nullable": true
          },
          "joint_categories": {
            "title": "ManagementProjectsStackingRulesUpdateResponseBodyJointCategories",
            "type": "array",
            "description": "Lists the IDs of the joint categories. A campaign with a joint category is always applied regardless of the exclusivity of other campaigns.",
            "items": {
              "title": "ManagementProjectsStackingRulesUpdateResponseBodyJointCategoriesItem",
              "type": "string"
            },
            "nullable": true
          },
          "redeemables_limit": {
            "type": "integer",
            "description": "Defines how many redeemables can be sent in one request. Note: more redeemables means more processing time.",
            "minimum": 1,
            "maximum": 30,
            "nullable": true
          },
          "applicable_redeemables_limit": {
            "type": "integer",
            "description": "Defines how many redeemables can be applied in one request. The number must be less than or equal to `redeemables_limit`. For example, a user can select 30 discounts but only 5 will be applied to the order and the remaining will be `SKIPPED` according to the `redeemables_sorting_rule`.",
            "minimum": 1,
            "maximum": 30,
            "nullable": true
          },
          "applicable_redeemables_per_category_limit": {
            "type": "integer",
            "nullable": true,
            "description": "Defines how many redeemables with the same category can be applied in one request. The number must be less than or equal to `applicable_redeemables_limit`. The ones above the limit will be `SKIPPED` according to the `redeemables_sorting_rule`.",
            "minimum": 1,
            "maximum": 30
          },
          "applicable_exclusive_redeemables_limit": {
            "type": "integer",
            "description": "Defines how many redeemables with an assigned exclusive category can be applied in one request. The ones above the limit will be `SKIPPED` according to the `redeemables_sorting_rule`.",
            "minimum": 1,
            "maximum": 5,
            "nullable": true
          },
          "applicable_exclusive_redeemables_per_category_limit": {
            "type": "integer",
            "nullable": true,
            "description": "Defines how many redeemables with an assigned exclusive category can be applied in one request. The ones above the limit will be `SKIPPED` according to the `redeemables_sorting_rule`. The number must be less than or equal to `applicable_exclusive_redeemables_limit`.",
            "minimum": 1,
            "maximum": 30
          },
          "discount_calculation_mode": {
            "type": "string",
            "description": "Defines if the discounts are applied by taking into account the initial order amount or the discounted order amount.",
            "enum": [
              "INITIAL_AMOUNT",
              "DISCOUNTED_AMOUNT"
            ],
            "nullable": true
          },
          "initial_amount_mode_categories": {
            "title": "ManagementProjectsStackingRulesUpdateResponseBodyInitialAmountModeCategories",
            "type": "array",
            "description": "Lists the IDs of the categories that apply a discount based on the initial amount.",
            "items": {
              "title": "ManagementProjectsStackingRulesUpdateResponseBodyInitialAmountModeCategoriesItem",
              "type": "string"
            },
            "nullable": true
          },
          "discounted_amount_mode_categories": {
            "title": "ManagementProjectsStackingRulesUpdateResponseBodyDiscountedAmountModeCategories",
            "type": "array",
            "description": "Lists the IDs of the categories that apply a discount based on the discounted amount.",
            "items": {
              "title": "ManagementProjectsStackingRulesUpdateResponseBodyDiscountedAmountModeCategoriesItem",
              "type": "string"
            },
            "nullable": true
          },
          "redeemables_application_mode": {
            "type": "string",
            "description": "Defines the application mode for redeemables.\n`\"ALL\"` means that all redeemables must be validated for the redemption to be successful.\n`\"PARTIAL\"` means that only those redeemables that can be validated will be redeemed. The redeemables that fail validaton will be skipped.",
            "enum": [
              "ALL",
              "PARTIAL"
            ],
            "nullable": true
          },
          "redeemables_sorting_rule": {
            "type": "string",
            "description": "Defines redeemables sorting rule. `CATEGORY_HIERARCHY` means that redeemables are applied oaccording to the category priority. `REQUESTED_ORDER` means that redeemables are applied in the sequence provided in the request.",
            "enum": [
              "CATEGORY_HIERARCHY",
              "REQUESTED_ORDER"
            ],
            "nullable": true
          },
          "redeemables_products_application_mode": {
            "type": "string",
            "description": "Defines redeemables products application mode. `STACK` means that multiple discounts can be applied to a product. `ONCE` means that only one discount can be applied to the same product.",
            "enum": [
              "STACK",
              "ONCE"
            ],
            "nullable": true
          },
          "redeemables_no_effect_rule": {
            "type": "string",
            "description": "Defines redeemables no effect rule. `REDEEM_ANYWAY` means that the redeemable will be redeemed regardless of any restrictions or conditions in place. `SKIP` means that the redeemable will be processed only when an applicable effect is calculated.",
            "enum": [
              "REDEEM_ANYWAY",
              "SKIP"
            ],
            "nullable": true
          },
          "no_effect_skip_categories": {
            "title": "ManagementProjectsStackingRulesUpdateResponseBodyNoEffectSkipCategories",
            "type": "array",
            "description": "Lists category IDs. Redeemables with a given category are skipped even if the `redeemables_no_effect_rule` is set to `REDEEM_ANYWAY`. Category IDs can't overlap with the IDs in `no_effect_redeem_anyway_categories`.",
            "items": {
              "title": "ManagementProjectsStackingRulesUpdateResponseBodyNoEffectSkipCategoriesItem",
              "type": "string"
            },
            "nullable": true
          },
          "no_effect_redeem_anyway_categories": {
            "title": "ManagementProjectsStackingRulesUpdateResponseBodyNoEffectRedeemAnywayCategories",
            "type": "array",
            "description": "Lists category IDs. Redeemables with a given category are redeemed anyway even if the `redeemables_no_effect_rule` is set to `SKIP`. Category IDs can't overlap with the IDs in `no_effect_skip_categories`.",
            "items": {
              "title": "ManagementProjectsStackingRulesUpdateResponseBodyNoEffectRedeemAnywayCategoriesItem",
              "type": "string"
            },
            "nullable": true
          },
          "redeemables_rollback_order_mode": {
            "type": "string",
            "description": "Defines the rollback mode for the order. `WITH_ORDER` is a default setting. The redemption is rolled back together with the data about the order, including related discount values. `WITHOUT_ORDER` allows rolling the redemption back without affecting order data, including the applied discount values.",
            "enum": [
              "WITH_ORDER",
              "WITHOUT_ORDER"
            ],
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "description": "Timestamp representing the date and time when the stacking rules were created. The value for this parameter is shown in the ISO 8601 format.",
            "format": "date-time",
            "example": "2024-01-02T08:31:46.562Z",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "description": "Timestamp representing the date and time when the stacking rules were updated. The value for this parameter is shown in the ISO 8601 format.",
            "format": "date-time",
            "nullable": true
          }
        },
        "description": "Response body schema for **PUT** `/management/v1/projects/{projectId}/stacking-rules/{stackingRulesId}`."
      },
      "ManagementProjectsTemplatesCampaignsCopyCreateRequestBody": {
        "title": "ManagementProjectsTemplatesCampaignsCopyCreateRequestBody",
        "type": "object",
        "required": [],
        "properties": {
          "name": {
            "type": "string",
            "description": "User-defined name of the campaign template. It must be unique.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "User-defined description of the campaign template."
          },
          "destination_project_id": {
            "type": "string",
            "description": "Unique identifier of the project to which the campaign template will be copied.",
            "nullable": true
          }
        },
        "description": "Response body schema for **POST** `/management/v1/projects/{projectId}/templates/campaigns/{campaignTemplateId}/copy`."
      },
      "ManagementProjectsTemplatesCampaignsCopyCreateResponseBody": {
        "title": "ManagementProjectsTemplatesCampaignsCopyCreateResponseBody",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of the campaign template. It is assigned by Voucherify.",
            "example": "camp_tpl_eR9NsNJ5gqJRN2TG3fqCvbVl",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "User-defined name of the campaign template.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "User-defined description of the campaign template.",
            "nullable": true
          },
          "campaign_type": {
            "type": "string",
            "description": "Type of the campaign used to create the campaign template. Templates created from a promotion tier are converted to `DISCOUNT_COUPONS`.",
            "enum": [
              "DISCOUNT_COUPONS",
              "GIFT_VOUCHERS"
            ],
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp representing the date and time when the campaign template was created. The value is shown in the ISO 8601 format.",
            "example": "2024-07-16T09:05:53.175Z",
            "nullable": true
          },
          "object": {
            "type": "string",
            "description": "The type of the object represented by JSON.",
            "default": "campaign_template",
            "enum": [
              "campaign_template"
            ],
            "nullable": true
          }
        },
        "required": [],
        "description": "Response body schema for **POST** `/management/v1/projects/{projectId}/templates/campaigns/{campaignTemplateId}/copy`."
      },
      "ManagementProjectsTemplatesCampaignsListResponseBody": {
        "title": "ManagementProjectsTemplatesCampaignsListResponseBody",
        "type": "object",
        "description": "Response body schema for **GET** `/management/v1/projects/{projectId}/templates/campaigns`.",
        "properties": {
          "object": {
            "type": "string",
            "description": "The type of the object represented by JSON. This object stores information about campaign templates.",
            "default": "list",
            "enum": [
              "list"
            ],
            "nullable": true
          },
          "data_ref": {
            "type": "string",
            "description": "Identifies the name of the JSON property that contains the array of campaign templates.",
            "default": "data",
            "enum": [
              "data"
            ],
            "nullable": true
          },
          "data": {
            "title": "ManagementProjectsTemplatesCampaignsListResponseBodyData",
            "type": "array",
            "description": "Dictionary that contains an array of campaign templates.",
            "items": {
              "$ref": "#/components/schemas/CampaignTemplate"
            },
            "nullable": true
          },
          "total": {
            "type": "integer",
            "description": "Total number of templates, regardless of the applied query parameters. Displayed only if the `include_total` query paremeter is set to `true`.",
            "nullable": true
          },
          "has_more": {
            "type": "boolean",
            "description": "As query results are always limited (by the limit parameter), the `has_more` flag indicates if there are more records for given filter parameters. This lets you know if you can run another request to get more records returned in the results.",
            "nullable": true
          },
          "more_starting_after": {
            "type": "string",
            "description": "Returns an ID that can be used to return another page of results. Use the template ID in the `starting_after_id` query parameter to display another page of the results starting after the template with that ID.",
            "nullable": true
          }
        },
        "required": [
          "campaign_template"
        ]
      },
      "ManagementProjectsUpdateRequestBody": {
        "title": "ManagementProjectsUpdateRequestBody",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the project.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "A user-defined description of the project, e.g. its purpose, scope, region.",
            "nullable": true
          },
          "timezone": {
            "type": "string",
            "description": "The time zone in which the project is established. It can be in the GMT format or in accordance with IANA time zone database.",
            "nullable": true
          },
          "currency": {
            "type": "string",
            "description": "The currency used in the project. It is equal to a 3-letter ISO 4217 code.",
            "nullable": true
          },
          "dial_code": {
            "type": "string",
            "nullable": true,
            "description": "The country dial code for the project. It is equal to an ITU country code."
          },
          "webhook_version": {
            "type": "string",
            "description": "The webhook version used in the project.",
            "default": "v2024-01-01",
            "enum": [
              "v2024-01-01"
            ],
            "nullable": true
          },
          "client_trusted_domains": {
            "title": "ManagementProjectsUpdateRequestBodyClientTrustedDomains",
            "type": "array",
            "description": "An array of URL addresses that allow client requests.",
            "items": {
              "title": "ManagementProjectsUpdateRequestBodyClientTrustedDomainsItem",
              "type": "string"
            },
            "nullable": true
          },
          "client_redeem_enabled": {
            "type": "boolean",
            "description": "Enables client-side redemption.",
            "nullable": true
          },
          "client_publish_enabled": {
            "type": "boolean",
            "description": "Enables client-side publication.",
            "nullable": true
          },
          "client_list_vouchers_enabled": {
            "type": "boolean",
            "description": "Enables client-side listing of vouchers.",
            "nullable": true
          },
          "client_create_customer_enabled": {
            "type": "boolean",
            "description": "Enables client-side creation of customers.",
            "nullable": true
          },
          "client_loyalty_events_enabled": {
            "type": "boolean",
            "description": "Enables client-side events for loyalty and referral programs.",
            "nullable": true
          },
          "client_set_voucher_expiration_date_enabled": {
            "type": "boolean",
            "description": "Enables client-side setting of voucher expiration date.",
            "nullable": true
          },
          "webhooks_callout_notifications": {
            "title": "ManagementProjectsUpdateRequestBodyWebhooksCalloutNotifications",
            "type": "object",
            "description": "Determines the notification settings for webhook callouts configured in Distributions and Project settings.",
            "properties": {
              "distributions": {
                "title": "ManagementProjectsUpdateRequestBodyWebhooksCalloutNotificationsDistributions",
                "type": "object",
                "description": "Determines the notification settings for webhooks sent through Distributions.",
                "properties": {
                  "email": {
                    "type": "boolean",
                    "description": "Enables the notification through an email.",
                    "nullable": true
                  },
                  "in_app": {
                    "type": "boolean",
                    "description": "Enables the notification through an email.",
                    "nullable": true
                  },
                  "emails": {
                    "title": "ManagementProjectsUpdateRequestBodyWebhooksCalloutNotificationsDistributionsEmails",
                    "type": "array",
                    "description": "An array of email addresses which will receive the notification.",
                    "items": {
                      "title": "ManagementProjectsUpdateRequestBodyWebhooksCalloutNotificationsDistributionsEmailsItem",
                      "type": "string"
                    },
                    "nullable": true
                  }
                },
                "required": [],
                "nullable": true
              },
              "webhooks": {
                "title": "ManagementProjectsUpdateRequestBodyWebhooksCalloutNotificationsWebhooks",
                "type": "object",
                "description": "Determines the notification settings for webhooks sent as set out in the Project settings.",
                "properties": {
                  "email": {
                    "type": "boolean",
                    "description": "Enables the notification through an email.",
                    "nullable": true
                  },
                  "in_app": {
                    "type": "boolean",
                    "description": "Enables the notification through an email.",
                    "nullable": true
                  },
                  "emails": {
                    "title": "ManagementProjectsUpdateRequestBodyWebhooksCalloutNotificationsWebhooksEmails",
                    "type": "array",
                    "description": "An array of email addresses which will receive the notification.",
                    "items": {
                      "title": "ManagementProjectsUpdateRequestBodyWebhooksCalloutNotificationsWebhooksEmailsItem",
                      "type": "string"
                    },
                    "nullable": true
                  }
                },
                "required": [],
                "nullable": true
              }
            },
            "required": [],
            "nullable": true
          },
          "api_usage_notifications": {
            "title": "ManagementProjectsUpdateRequestBodyApiUsageNotifications",
            "type": "object",
            "description": "Determines the notification settings.",
            "properties": {
              "messages": {
                "$ref": "#/components/schemas/UsageNotifications"
              },
              "api_calls": {
                "$ref": "#/components/schemas/UsageNotifications"
              },
              "bulk_api_calls": {
                "$ref": "#/components/schemas/UsageNotifications"
              },
              "webhook_calls": {
                "$ref": "#/components/schemas/UsageNotifications"
              },
              "cycle_calls": {
                "$ref": "#/components/schemas/UsageNotifications"
              }
            },
            "required": [
              "redemptions"
            ],
            "nullable": true
          },
          "default_code_config": {
            "title": "ManagementProjectsUpdateRequestBodyDefaultCodeConfig",
            "type": "object",
            "description": "Determines the character set that is used as default for vouchers. It is affected by the `\"case_sensitive_codes\"` setting.",
            "properties": {
              "charset": {
                "type": "string",
                "nullable": true,
                "description": "Lists all characters that are used as default for vouchers"
              }
            },
            "nullable": true
          }
        },
        "description": "Request body schema for **PUT** `/management/v1/projects/{projectId}`."
      },
      "ManagementProjectsUpdateResponseBody": {
        "title": "ManagementProjectsUpdateResponseBody",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of the project.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The name of the project.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "A user-defined description of the project, e.g. its purpose, scope, region.",
            "nullable": true
          },
          "timezone": {
            "type": "string",
            "description": "The time zone in which the project is established. It can be in the GMT format or in accordance with IANA time zone database.",
            "nullable": true
          },
          "currency": {
            "type": "string",
            "description": "The currency used in the project. It is equal to a 3-letter ISO 4217 code.",
            "nullable": true
          },
          "dial_code": {
            "type": "string",
            "nullable": true,
            "description": "The country dial code for the project. It is equal to an ITU country code."
          },
          "webhook_version": {
            "type": "string",
            "description": "The webhook version used in the project.",
            "default": "v2024-01-01",
            "enum": [
              "v2024-01-01"
            ],
            "nullable": true
          },
          "client_trusted_domains": {
            "title": "ManagementProjectsUpdateResponseBodyClientTrustedDomains",
            "type": "array",
            "description": "An array of URL addresses that allow client requests.",
            "items": {
              "title": "ManagementProjectsUpdateResponseBodyClientTrustedDomainsItem",
              "type": "string"
            },
            "nullable": true
          },
          "client_redeem_enabled": {
            "type": "boolean",
            "description": "Enables client-side redemption.",
            "nullable": true
          },
          "client_publish_enabled": {
            "type": "boolean",
            "description": "Enables client-side publication.",
            "nullable": true
          },
          "client_list_vouchers_enabled": {
            "type": "boolean",
            "description": "Enables client-side listing of vouchers.",
            "nullable": true
          },
          "client_create_customer_enabled": {
            "type": "boolean",
            "description": "Enables client-side creation of customers.",
            "nullable": true
          },
          "client_loyalty_events_enabled": {
            "type": "boolean",
            "description": "Enables client-side events for loyalty and referral programs.",
            "nullable": true
          },
          "client_set_voucher_expiration_date_enabled": {
            "type": "boolean",
            "description": "Enables client-side setting of voucher expiration date.",
            "nullable": true
          },
          "webhooks_callout_notifications": {
            "title": "ManagementProjectsUpdateResponseBodyWebhooksCalloutNotifications",
            "type": "object",
            "description": "Determines the notification settings for webhook callouts configured in Distributions and Project settings.",
            "properties": {
              "distributions": {
                "title": "ManagementProjectsUpdateResponseBodyWebhooksCalloutNotificationsDistributions",
                "type": "object",
                "description": "Determines the notification settings for webhooks sent through Distributions.",
                "properties": {
                  "email": {
                    "type": "boolean",
                    "description": "Enables the notification through an email.",
                    "nullable": true
                  },
                  "in_app": {
                    "type": "boolean",
                    "description": "Enables the notification through an email.",
                    "nullable": true
                  },
                  "emails": {
                    "title": "ManagementProjectsUpdateResponseBodyWebhooksCalloutNotificationsDistributionsEmails",
                    "type": "array",
                    "description": "An array of email addresses which will receive the notification.",
                    "items": {
                      "title": "ManagementProjectsUpdateResponseBodyWebhooksCalloutNotificationsDistributionsEmailsItem",
                      "type": "string"
                    },
                    "nullable": true
                  }
                },
                "required": [],
                "nullable": true
              },
              "webhooks": {
                "title": "ManagementProjectsUpdateResponseBodyWebhooksCalloutNotificationsWebhooks",
                "type": "object",
                "description": "Determines the notification settings for webhooks sent as set out in the Project settings.",
                "properties": {
                  "email": {
                    "type": "boolean",
                    "description": "Enables the notification through an email.",
                    "nullable": true
                  },
                  "in_app": {
                    "type": "boolean",
                    "description": "Enables the notification through an email.",
                    "nullable": true
                  },
                  "emails": {
                    "title": "ManagementProjectsUpdateResponseBodyWebhooksCalloutNotificationsWebhooksEmails",
                    "type": "array",
                    "description": "An array of email addresses which will receive the notification.",
                    "items": {
                      "title": "ManagementProjectsUpdateResponseBodyWebhooksCalloutNotificationsWebhooksEmailsItem",
                      "type": "string"
                    },
                    "nullable": true
                  }
                },
                "required": [],
                "nullable": true
              }
            },
            "required": [],
            "nullable": true
          },
          "api_usage_notifications": {
            "title": "ManagementProjectsUpdateResponseBodyApiUsageNotifications",
            "type": "object",
            "description": "Determines the notification settings.",
            "properties": {
              "redemptions": {
                "$ref": "#/components/schemas/UsageNotifications"
              },
              "messages": {
                "$ref": "#/components/schemas/UsageNotifications"
              },
              "api_calls": {
                "$ref": "#/components/schemas/UsageNotifications"
              },
              "bulk_api_calls": {
                "$ref": "#/components/schemas/UsageNotifications"
              },
              "webhook_calls": {
                "$ref": "#/components/schemas/UsageNotifications"
              },
              "cycle_calls": {
                "$ref": "#/components/schemas/UsageNotifications"
              }
            },
            "required": [],
            "nullable": true
          },
          "cluster_id": {
            "type": "string",
            "description": "The identifier of the cluster where the project will be created.",
            "nullable": true
          },
          "case_sensitive_codes": {
            "type": "boolean",
            "description": "Determines if the vouchers in the project will be:\n- case sensitive - if `true`, `C0dE-cfV` is **not** equal to `c0de-cfv`),\n- case insensitive - if `false`, `C0dE-cfV` is equal to `c0de-cfv`.",
            "nullable": true
          },
          "api_version": {
            "type": "string",
            "description": "The API version used in the project. Currently, the default and only value is `v2018-08-01`.",
            "default": "v2018-08-01",
            "enum": [
              "v2018-08-01"
            ],
            "nullable": true
          },
          "is_sandbox": {
            "type": "boolean",
            "description": "Determines if the project is a sandbox project.",
            "nullable": true
          },
          "webhook_token": {
            "type": "string",
            "description": "Webhook token used for authentication.",
            "nullable": true
          },
          "default_code_config": {
            "title": "ManagementProjectsUpdateResponseBodyDefaultCodeConfig",
            "type": "object",
            "description": "Determines the character set that is used as default for vouchers. It is affected by the `\"case_sensitive_codes\"` setting.",
            "properties": {
              "charset": {
                "type": "string",
                "description": "Lists all characters that are used as default for vouchers",
                "nullable": true
              }
            },
            "required": [],
            "nullable": true
          },
          "limits": {
            "title": "ManagementProjectsUpdateResponseBodyLimits",
            "type": "object",
            "description": "Determines additional limits set on a given project, e.g. the Sandbox project. If no limits are returned, the limits set for the whole organization apply.",
            "properties": {
              "api_calls": {
                "title": "ManagementProjectsUpdateResponseBodyLimitsApiCalls",
                "type": "array",
                "items": {
                  "title": "ManagementProjectsUpdateResponseBodyLimitsApiCallsItem",
                  "type": "object",
                  "description": "Determines the limit of API calls per given unit time.",
                  "properties": {
                    "value": {
                      "type": "integer",
                      "description": "Determines the maximum number of API calls per time set in `\"duration\"`."
                    },
                    "duration": {
                      "type": "string",
                      "description": "Determines the amount of time during which the calls up to the number specified in the `value` can be made. The duration is presented in the ISO 8601 format, e.g. `PT1H` means one hour."
                    }
                  }
                },
                "nullable": true
              },
              "bulk_api_calls": {
                "title": "ManagementProjectsUpdateResponseBodyLimitsBulkApiCalls",
                "type": "array",
                "items": {
                  "title": "ManagementProjectsUpdateResponseBodyLimitsBulkApiCallsItem",
                  "type": "object",
                  "description": "",
                  "properties": {
                    "value": {
                      "type": "integer",
                      "description": "Determines the maximum number of API calls per time set in `\"duration\"`."
                    },
                    "duration": {
                      "type": "string",
                      "description": "Determines the amount of time during which the calls up to the number specified in the `value` can be made. The duration is presented in the ISO 8601 format, e.g. `PT1H` means one hour."
                    }
                  }
                },
                "nullable": true
              }
            },
            "nullable": true
          }
        }
      },
      "ManagementProjectsUsersAssignRequestBody": {
        "title": "ManagementProjectsUsersAssignRequestBody",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier of the user who will be assigned to the project. It can be found in Team Settings > Team > Edit member. **Required** with the `role` string.\n\nDo **not** use with the `login` string.",
            "nullable": true
          },
          "login": {
            "type": "string",
            "description": "The login data of the user who will be assigned to the project. **Required** with the `role` string.\n\nDo **not** use with the `id` string.",
            "nullable": true
          },
          "role": {
            "type": "string",
            "description": "The role of the user to be added. It can be one of the following predefined roles:\n`ADMIN`, `USER`, `VIEWER`, `MERCHANT`,\nor an ID of a custom role.",
            "nullable": true
          }
        },
        "required": []
      },
      "ManagementProjectsUsersAssignResponseBody": {
        "title": "ManagementProjectsUsersAssignResponseBody",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier of the user who has been assigned to the project.",
            "nullable": true
          },
          "login": {
            "type": "string",
            "description": "The login data of the user who has been assigned to the project.",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "The email address of the user who has been assigned to the project.",
            "nullable": true
          },
          "first_name": {
            "type": "string",
            "description": "The first name of the user who has been assigned to the project.",
            "nullable": true
          },
          "last_name": {
            "type": "string",
            "description": "The last name of the user who has been assigned to the project.",
            "nullable": true
          },
          "projects": {
            "title": "ManagementProjectsUsersAssignResponseBodyProjects",
            "type": "object",
            "description": "Lists key-value pairs, where the key is the project to which the user is assigned. The value is the role assigned in a given project. The predefined Voucherify roles are: `ADMIN`, `USER`, `VIEWER`, `MERCHANT`, `USER_RESTRICTED` (for the Areas and Stores, an Enterprise feature).",
            "nullable": true
          },
          "is_owner": {
            "type": "boolean",
            "description": "Determines if the user is the owner for the organization in Voucherify.",
            "nullable": true
          }
        },
        "required": [
          "role"
        ],
        "description": "Details about the user assigned to the project."
      },
      "ManagementProjectsUsersGetUserResponseBody": {
        "title": "ManagementProjectsUsersGetUserResponseBody",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier of the user who has been assigned to the project.",
            "nullable": true
          },
          "login": {
            "type": "string",
            "description": "The login data of the user who has been assigned to the project.",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "The email address of the user who has been assigned to the project.",
            "nullable": true
          },
          "first_name": {
            "type": "string",
            "description": "The first name of the user who has been assigned to the project.",
            "nullable": true
          },
          "last_name": {
            "type": "string",
            "description": "The last name of the user who has been assigned to the project.",
            "nullable": true
          },
          "projects": {
            "title": "ManagementProjectsUsersGetUserResponseBodyProjects",
            "type": "object",
            "description": "Lists key-value pairs, where the key is the project to which the user is assigned. The value is the role assigned in a given project. The predefined Voucherify roles are: `ADMIN`, `USER`, `VIEWER`, `MERCHANT`, `USER_RESTRICTED` (for the Areas and Stores, an Enterprise feature).",
            "nullable": true
          },
          "is_owner": {
            "type": "boolean",
            "description": "Determines if the user is the owner for the organization in Voucherify.",
            "nullable": true
          }
        },
        "required": [
          "role"
        ],
        "description": "Details about the user assigned to the project."
      },
      "ManagementProjectsUsersInviteCreateRequestBody": {
        "title": "ManagementProjectsUsersInviteCreateRequestBody",
        "type": "object",
        "description": "Request body schema for **POST** `/management/v1/projects/users/invite`.",
        "properties": {
          "email": {
            "type": "string",
            "description": "Email address to which the invitation will be sent. Must be a valid email address.",
            "example": "alex.doe@your-domain-name.com",
            "nullable": true
          },
          "first_name": {
            "type": "string",
            "description": "First name of the person who will receive the invitation. The name will be used in the user profile.",
            "example": "Alex",
            "nullable": true
          },
          "last_name": {
            "type": "string",
            "description": "Last name of the person who will receive the invitation. The name will be used in the user profile.",
            "example": "Doe",
            "nullable": true
          },
          "projects": {
            "title": "ManagementProjectsUsersInviteCreateRequestBodyProjects",
            "type": "object",
            "description": "In the key, provide the project ID to which the new user will be assigned. In the value, provide the role which the user will have in the project. The predefined Voucherify roles are: `ADMIN`, `USER`, `VIEWER`, `MERCHANT`, `USER_RESTRICTED` (for the Areas and Stores, an Enterprise feature). Send a custom role ID (Enterprise feature) to assign a custom role. To find the custom role ID: If you are an admin, go to Voucherify Dashboard, Team settings, and Roles tab. Click on a custom role. The custom role ID is in the URL in the format `role_XyZ7aB9cD2eF4gH1iJ0kL5mN6oP8qR3s`.",
            "example": {
              "proj_ExPr0jID": "USER",
              "proj_ExPr0jId": "role_XyZ7aB9cD2eF4gH1iJ0kL5mN6oP8qR3s"
            },
            "nullable": true
          }
        },
        "required": []
      },
      "ManagementProjectsUsersListResponseBody": {
        "title": "ManagementProjectsUsersListResponseBody",
        "type": "object",
        "description": "Object containing a list of users assigned to the project.",
        "properties": {
          "object": {
            "type": "string",
            "default": "list",
            "description": "The type of the object represented by JSON. This object stores information about the users in a dictionary.",
            "enum": [
              "list"
            ],
            "nullable": true
          },
          "data_ref": {
            "type": "string",
            "default": "data",
            "description": "Identifies the name of the attribute that contains the array of user objects.",
            "enum": [
              "data"
            ],
            "nullable": true
          },
          "data": {
            "title": "ManagementProjectsUsersListResponseBodyData",
            "type": "array",
            "description": "Array of user objects.",
            "items": {
              "$ref": "#/components/schemas/User"
            },
            "nullable": true
          },
          "total": {
            "type": "integer",
            "description": "The total number of users.",
            "nullable": true
          }
        },
        "required": []
      },
      "ManagementProjectsUsersUpdateRoleRequestBody": {
        "title": "ManagementProjectsUsersUpdateRoleRequestBody",
        "type": "object",
        "properties": {
          "role": {
            "type": "string",
            "description": "The role of the user to be added. It can be a custom role or one of following predefined roles:\n`ADMIN`, `USER`, `VIEWER`, `MERCHANT`\nor an ID of a custom role..",
            "nullable": true
          }
        },
        "required": []
      },
      "ManagementProjectsUsersUpdateRoleResponseBody": {
        "title": "ManagementProjectsUsersUpdateRoleResponseBody",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier of the user who has been assigned to the project.",
            "nullable": true
          },
          "login": {
            "type": "string",
            "description": "The login data of the user who has been assigned to the project.",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "The email address of the user who has been assigned to the project.",
            "nullable": true
          },
          "first_name": {
            "type": "string",
            "description": "The first name of the user who has been assigned to the project.",
            "nullable": true
          },
          "last_name": {
            "type": "string",
            "description": "The last name of the user who has been assigned to the project.",
            "nullable": true
          },
          "projects": {
            "title": "ManagementProjectsUsersUpdateRoleResponseBodyProjects",
            "type": "object",
            "description": "Lists key-value pairs, where the key is the project to which the user is assigned. The value is the role assigned in a given project. The predefined Voucherify roles are: `ADMIN`, `USER`, `VIEWER`, `MERCHANT`, `USER_RESTRICTED` (for the Areas and Stores, an Enterprise feature).",
            "nullable": true
          },
          "is_owner": {
            "type": "boolean",
            "description": "Determines if the user is the owner for the organization in Voucherify.",
            "nullable": true
          }
        },
        "required": [
          "role"
        ],
        "description": "Details about the user assigned to the project."
      },
      "ManagementProjectsWebhooksCreateRequestBody": {
        "title": "ManagementProjectsWebhooksCreateRequestBody",
        "type": "object",
        "properties": {
          "target_url": {
            "type": "string",
            "description": "URL address that receives webhooks.",
            "nullable": true
          },
          "events": {
            "title": "ManagementProjectsWebhooksCreateRequestBodyEvents",
            "type": "array",
            "description": "Lists the events that trigger webhook sendout.",
            "items": {
              "title": "ManagementProjectsWebhooksCreateRequestBodyEventsItem",
              "type": "string",
              "enum": [
                "business_validation_rule.assignment.created",
                "business_validation_rule.assignment.deleted",
                "business_validation_rule.created",
                "business_validation_rule.deleted",
                "business_validation_rule.updated",
                "campaign.created",
                "campaign.deleted",
                "campaign.disabled",
                "campaign.enabled",
                "campaign.earning_rule.assigned",
                "campaign.earning_rule.deleted",
                "campaign.earning_rule.disabled",
                "campaign.earning_rule.enabled",
                "campaign.earning_rule.updated",
                "campaign.loyalty_tier.created",
                "campaign.loyalty_tier.deleted",
                "campaign.loyalty_tier.updated",
                "campaign.promotion_stack.created",
                "campaign.promotion_stack.updated",
                "campaign.promotion_tier.created",
                "campaign.promotion_tier.deleted",
                "campaign.promotion_tier.disabled",
                "campaign.promotion_tier.enabled",
                "campaign.promotion_tier.updated",
                "campaign.referral_tier.created",
                "campaign.referral_tier.deleted",
                "campaign.referral_tier.updated",
                "campaign.reward.assignment.created",
                "campaign.reward.assignment.deleted",
                "campaign.reward.assignment.updated",
                "campaign.updated",
                "campaign.vouchers.aded",
                "campaign.vouchers.generation.completed",
                "campaign.vouchers.generation.failed",
                "campaign.vouchers.generation.started",
                "customer.confirmed",
                "customer.created",
                "customer.deleted",
                "customer.rewarded",
                "customer.rewarded.loyalty_points",
                "publication.succeeded",
                "redemption.failed",
                "redemption.rollback.failed",
                "redemption.rollback.succeeded",
                "redemption.succeeded",
                "voucher.created",
                "voucher.deleted",
                "voucher.disabled",
                "voucher.enabled",
                "voucher.gift.balance_aded",
                "voucher.gift.transaction.created",
                "voucher.loyalty_card.pending_points.activated",
                "voucher.loyalty_card.pending_points.aded",
                "voucher.loyalty_card.pending_points.canceled",
                "voucher.loyalty_card.pending_points.updated",
                "voucher.loyalty_card.points_aded",
                "voucher.loyalty_card.points_expired",
                "voucher.loyalty_card.transaction.created",
                "voucher.published",
                "voucher.updated"
              ]
            },
            "nullable": true
          },
          "active": {
            "type": "boolean",
            "description": "Determines if the webhook configuration is active.",
            "default": true,
            "nullable": true
          }
        },
        "description": "Request body schema for **POST** `/management/v1/projects/{projectId}/webhooks/{webhookId}`."
      },
      "ManagementProjectsWebhooksCreateResponseBody": {
        "title": "ManagementProjectsWebhooksCreateResponseBody",
        "type": "object",
        "required": [],
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of the webhook.",
            "example": "wh_i45Uez36Uz8XNW6PXC0eyGmb",
            "nullable": true
          },
          "object": {
            "type": "string",
            "description": "The type of the object represented by JSON.",
            "default": "webhook",
            "enum": [
              "webhook"
            ],
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "description": "Timestamp representing the date and time when the webhook configuration was created. The value for this parameter is shown in the ISO 8601 format.",
            "format": "date-time",
            "example": "2024-01-02T08:31:46.562Z",
            "nullable": true
          },
          "target_url": {
            "type": "string",
            "description": "URL address that receives webhooks.",
            "nullable": true
          },
          "events": {
            "title": "ManagementProjectsWebhooksCreateResponseBodyEvents",
            "type": "array",
            "description": "Lists the events that trigger webhook sendout.",
            "items": {
              "title": "ManagementProjectsWebhooksCreateResponseBodyEventsItem",
              "type": "string",
              "enum": [
                "business_validation_rule.assignment.created",
                "business_validation_rule.assignment.deleted",
                "business_validation_rule.created",
                "business_validation_rule.deleted",
                "business_validation_rule.updated",
                "campaign.created",
                "campaign.deleted",
                "campaign.disabled",
                "campaign.enabled",
                "campaign.earning_rule.assigned",
                "campaign.earning_rule.deleted",
                "campaign.earning_rule.disabled",
                "campaign.earning_rule.enabled",
                "campaign.earning_rule.updated",
                "campaign.loyalty_tier.created",
                "campaign.loyalty_tier.deleted",
                "campaign.loyalty_tier.updated",
                "campaign.promotion_stack.created",
                "campaign.promotion_stack.updated",
                "campaign.promotion_tier.created",
                "campaign.promotion_tier.deleted",
                "campaign.promotion_tier.disabled",
                "campaign.promotion_tier.enabled",
                "campaign.promotion_tier.updated",
                "campaign.referral_tier.created",
                "campaign.referral_tier.deleted",
                "campaign.referral_tier.updated",
                "campaign.reward.assignment.created",
                "campaign.reward.assignment.deleted",
                "campaign.reward.assignment.updated",
                "campaign.updated",
                "campaign.vouchers.aded",
                "campaign.vouchers.generation.completed",
                "campaign.vouchers.generation.failed",
                "campaign.vouchers.generation.started",
                "customer.confirmed",
                "customer.created",
                "customer.deleted",
                "customer.rewarded",
                "customer.rewarded.loyalty_points",
                "publication.succeeded",
                "redemption.failed",
                "redemption.rollback.failed",
                "redemption.rollback.succeeded",
                "redemption.succeeded",
                "voucher.created",
                "voucher.deleted",
                "voucher.disabled",
                "voucher.enabled",
                "voucher.gift.balance_aded",
                "voucher.gift.transaction.created",
                "voucher.loyalty_card.pending_points.activated",
                "voucher.loyalty_card.pending_points.aded",
                "voucher.loyalty_card.pending_points.canceled",
                "voucher.loyalty_card.pending_points.updated",
                "voucher.loyalty_card.points_aded",
                "voucher.loyalty_card.points_expired",
                "voucher.loyalty_card.transaction.created",
                "voucher.published",
                "voucher.updated"
              ]
            },
            "nullable": true
          },
          "active": {
            "type": "boolean",
            "description": "Determines if the webhook configuration is active.",
            "default": true,
            "nullable": true
          }
        },
        "description": "Response body schema for **POST** `/management/v1/projects/{projectId}/webhooks`."
      },
      "ManagementProjectsWebhooksGetResponseBody": {
        "title": "ManagementProjectsWebhooksGetResponseBody",
        "type": "object",
        "required": [],
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of the webhook.",
            "example": "wh_i45Uez36Uz8XNW6PXC0eyGmb",
            "nullable": true
          },
          "object": {
            "type": "string",
            "description": "The type of the object represented by JSON.",
            "default": "webhook",
            "enum": [
              "webhook"
            ],
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "description": "Timestamp representing the date and time when the webhook configuration was created. The value for this parameter is shown in the ISO 8601 format.",
            "format": "date-time",
            "example": "2024-01-02T08:31:46.562Z",
            "nullable": true
          },
          "target_url": {
            "type": "string",
            "description": "URL address that receives webhooks.",
            "nullable": true
          },
          "events": {
            "title": "ManagementProjectsWebhooksGetResponseBodyEvents",
            "type": "array",
            "description": "Lists the events that trigger webhook sendout.",
            "items": {
              "title": "ManagementProjectsWebhooksGetResponseBodyEventsItem",
              "type": "string",
              "enum": [
                "business_validation_rule.assignment.created",
                "business_validation_rule.assignment.deleted",
                "business_validation_rule.created",
                "business_validation_rule.deleted",
                "business_validation_rule.updated",
                "campaign.created",
                "campaign.deleted",
                "campaign.disabled",
                "campaign.enabled",
                "campaign.earning_rule.assigned",
                "campaign.earning_rule.deleted",
                "campaign.earning_rule.disabled",
                "campaign.earning_rule.enabled",
                "campaign.earning_rule.updated",
                "campaign.loyalty_tier.created",
                "campaign.loyalty_tier.deleted",
                "campaign.loyalty_tier.updated",
                "campaign.promotion_stack.created",
                "campaign.promotion_stack.updated",
                "campaign.promotion_tier.created",
                "campaign.promotion_tier.deleted",
                "campaign.promotion_tier.disabled",
                "campaign.promotion_tier.enabled",
                "campaign.promotion_tier.updated",
                "campaign.referral_tier.created",
                "campaign.referral_tier.deleted",
                "campaign.referral_tier.updated",
                "campaign.reward.assignment.created",
                "campaign.reward.assignment.deleted",
                "campaign.reward.assignment.updated",
                "campaign.updated",
                "campaign.vouchers.aded",
                "campaign.vouchers.generation.completed",
                "campaign.vouchers.generation.failed",
                "campaign.vouchers.generation.started",
                "customer.confirmed",
                "customer.created",
                "customer.deleted",
                "customer.rewarded",
                "customer.rewarded.loyalty_points",
                "publication.succeeded",
                "redemption.failed",
                "redemption.rollback.failed",
                "redemption.rollback.succeeded",
                "redemption.succeeded",
                "voucher.created",
                "voucher.deleted",
                "voucher.disabled",
                "voucher.enabled",
                "voucher.gift.balance_aded",
                "voucher.gift.transaction.created",
                "voucher.loyalty_card.pending_points.activated",
                "voucher.loyalty_card.pending_points.aded",
                "voucher.loyalty_card.pending_points.canceled",
                "voucher.loyalty_card.pending_points.updated",
                "voucher.loyalty_card.points_aded",
                "voucher.loyalty_card.points_expired",
                "voucher.loyalty_card.transaction.created",
                "voucher.published",
                "voucher.updated"
              ]
            },
            "nullable": true
          },
          "active": {
            "type": "boolean",
            "description": "Determines if the webhook configuration is active.",
            "default": true,
            "nullable": true
          }
        },
        "description": "Response body schema for **GET** `/management/v1/projects/{projectId}/webhooks/{webhookId}`."
      },
      "ManagementProjectsWebhooksListResponseBody": {
        "title": "ManagementProjectsWebhooksListResponseBody",
        "type": "object",
        "description": "Object containing a list of webhook configurations.",
        "properties": {
          "object": {
            "type": "string",
            "default": "list",
            "description": "The type of the object represented by JSON. This object stores information about the webhook configurations in a dictionary.",
            "enum": [
              "list"
            ],
            "nullable": true
          },
          "data_ref": {
            "type": "string",
            "default": "data",
            "description": "Identifies the name of the attribute that contains the array of webhook objects.",
            "enum": [
              "data"
            ],
            "nullable": true
          },
          "data": {
            "title": "ManagementProjectsWebhooksListResponseBodyData",
            "type": "array",
            "description": "Array of webhook objects.",
            "items": {
              "$ref": "#/components/schemas/ManagementProjectsWebhook"
            },
            "nullable": true
          },
          "total": {
            "type": "integer",
            "description": "The total number of webhook objects.",
            "nullable": true
          }
        },
        "required": []
      },
      "ManagementProjectsWebhooksUpdateRequestBody": {
        "title": "ManagementProjectsWebhooksUpdateRequestBody",
        "type": "object",
        "properties": {
          "target_url": {
            "type": "string",
            "description": "URL address that receives webhooks.",
            "nullable": true
          },
          "events": {
            "title": "ManagementProjectsWebhooksUpdateRequestBodyEvents",
            "type": "array",
            "description": "Lists the events that trigger webhook sendout.",
            "items": {
              "title": "ManagementProjectsWebhooksUpdateRequestBodyEventsItem",
              "type": "string",
              "enum": [
                "business_validation_rule.assignment.created",
                "business_validation_rule.assignment.deleted",
                "business_validation_rule.created",
                "business_validation_rule.deleted",
                "business_validation_rule.updated",
                "campaign.created",
                "campaign.deleted",
                "campaign.disabled",
                "campaign.enabled",
                "campaign.earning_rule.assigned",
                "campaign.earning_rule.deleted",
                "campaign.earning_rule.disabled",
                "campaign.earning_rule.enabled",
                "campaign.earning_rule.updated",
                "campaign.loyalty_tier.created",
                "campaign.loyalty_tier.deleted",
                "campaign.loyalty_tier.updated",
                "campaign.promotion_stack.created",
                "campaign.promotion_stack.updated",
                "campaign.promotion_tier.created",
                "campaign.promotion_tier.deleted",
                "campaign.promotion_tier.disabled",
                "campaign.promotion_tier.enabled",
                "campaign.promotion_tier.updated",
                "campaign.referral_tier.created",
                "campaign.referral_tier.deleted",
                "campaign.referral_tier.updated",
                "campaign.reward.assignment.created",
                "campaign.reward.assignment.deleted",
                "campaign.reward.assignment.updated",
                "campaign.updated",
                "campaign.vouchers.aded",
                "campaign.vouchers.generation.completed",
                "campaign.vouchers.generation.failed",
                "campaign.vouchers.generation.started",
                "customer.confirmed",
                "customer.created",
                "customer.deleted",
                "customer.rewarded",
                "customer.rewarded.loyalty_points",
                "publication.succeeded",
                "redemption.failed",
                "redemption.rollback.failed",
                "redemption.rollback.succeeded",
                "redemption.succeeded",
                "voucher.created",
                "voucher.deleted",
                "voucher.disabled",
                "voucher.enabled",
                "voucher.gift.balance_aded",
                "voucher.gift.transaction.created",
                "voucher.loyalty_card.pending_points.activated",
                "voucher.loyalty_card.pending_points.aded",
                "voucher.loyalty_card.pending_points.canceled",
                "voucher.loyalty_card.pending_points.updated",
                "voucher.loyalty_card.points_aded",
                "voucher.loyalty_card.points_expired",
                "voucher.loyalty_card.transaction.created",
                "voucher.published",
                "voucher.updated"
              ]
            },
            "nullable": true
          },
          "active": {
            "type": "boolean",
            "description": "Determines if the webhook configuration is active.",
            "default": true,
            "nullable": true
          }
        },
        "description": "Request body schema for **PUT** `/management/v1/projects/{projectId}/webhooks`."
      },
      "ManagementProjectsWebhooksUpdateResponseBody": {
        "title": "ManagementProjectsWebhooksUpdateResponseBody",
        "type": "object",
        "required": [],
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of the webhook.",
            "example": "wh_i45Uez36Uz8XNW6PXC0eyGmb",
            "nullable": true
          },
          "object": {
            "type": "string",
            "description": "The type of the object represented by JSON.",
            "default": "webhook",
            "enum": [
              "webhook"
            ],
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "description": "Timestamp representing the date and time when the webhook configuration was created. The value for this parameter is shown in the ISO 8601 format.",
            "format": "date-time",
            "example": "2024-01-02T08:31:46.562Z",
            "nullable": true
          },
          "target_url": {
            "type": "string",
            "description": "URL address that receives webhooks.",
            "nullable": true
          },
          "events": {
            "title": "ManagementProjectsWebhooksUpdateResponseBodyEvents",
            "type": "array",
            "description": "Lists the events that trigger webhook sendout.",
            "items": {
              "title": "ManagementProjectsWebhooksUpdateResponseBodyEventsItem",
              "type": "string",
              "enum": [
                "business_validation_rule.assignment.created",
                "business_validation_rule.assignment.deleted",
                "business_validation_rule.created",
                "business_validation_rule.deleted",
                "business_validation_rule.updated",
                "campaign.created",
                "campaign.deleted",
                "campaign.disabled",
                "campaign.enabled",
                "campaign.earning_rule.assigned",
                "campaign.earning_rule.deleted",
                "campaign.earning_rule.disabled",
                "campaign.earning_rule.enabled",
                "campaign.earning_rule.updated",
                "campaign.loyalty_tier.created",
                "campaign.loyalty_tier.deleted",
                "campaign.loyalty_tier.updated",
                "campaign.promotion_stack.created",
                "campaign.promotion_stack.updated",
                "campaign.promotion_tier.created",
                "campaign.promotion_tier.deleted",
                "campaign.promotion_tier.disabled",
                "campaign.promotion_tier.enabled",
                "campaign.promotion_tier.updated",
                "campaign.referral_tier.created",
                "campaign.referral_tier.deleted",
                "campaign.referral_tier.updated",
                "campaign.reward.assignment.created",
                "campaign.reward.assignment.deleted",
                "campaign.reward.assignment.updated",
                "campaign.updated",
                "campaign.vouchers.aded",
                "campaign.vouchers.generation.completed",
                "campaign.vouchers.generation.failed",
                "campaign.vouchers.generation.started",
                "customer.confirmed",
                "customer.created",
                "customer.deleted",
                "customer.rewarded",
                "customer.rewarded.loyalty_points",
                "publication.succeeded",
                "redemption.failed",
                "redemption.rollback.failed",
                "redemption.rollback.succeeded",
                "redemption.succeeded",
                "voucher.created",
                "voucher.deleted",
                "voucher.disabled",
                "voucher.enabled",
                "voucher.gift.balance_aded",
                "voucher.gift.transaction.created",
                "voucher.loyalty_card.pending_points.activated",
                "voucher.loyalty_card.pending_points.aded",
                "voucher.loyalty_card.pending_points.canceled",
                "voucher.loyalty_card.pending_points.updated",
                "voucher.loyalty_card.points_aded",
                "voucher.loyalty_card.points_expired",
                "voucher.loyalty_card.transaction.created",
                "voucher.published",
                "voucher.updated"
              ]
            },
            "nullable": true
          },
          "active": {
            "type": "boolean",
            "description": "Determines if the webhook configuration is active.",
            "default": true,
            "nullable": true
          }
        },
        "description": "Response body schema for **PUT** `/management/v1/projects/{projectId}/webhooks/{webhookId}`."
      },
      "MetadataSchemasGetResponseBody": {
        "title": "MetadataSchemasGetResponseBody",
        "type": "object",
        "required": [],
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of the metadata schema.",
            "nullable": true
          },
          "related_object": {
            "type": "string",
            "description": "The resource type. You can define custom metadata schemas, which have a custom `\"related_object\"` resource type. The standard metadata schemas are: `\"campaign\"`, `\"customer\"`, `\"earning_rule\"`, `\"loyalty_tier\"`, `\"order\"`, `\"order_item\"`, `\"product\"`, `\"promotion_tier\"`, `\"publication\"`, `\"redemption\"`, `\"reward\"`, `\"voucher\"`.",
            "nullable": true
          },
          "properties": {
            "title": "MetadataSchemasGetResponseBodyProperties",
            "type": "object",
            "description": "Contains metadata definitions.",
            "nullable": true
          },
          "allow_defined_only": {
            "type": "boolean",
            "nullable": true,
            "description": "Restricts the creation of metadata fields when set to `true`. It indicates whether or not you can create new metadata definitions, e.g. in the campaign or publication manager. If set to `true`, then only the defined fields are available for assigning values."
          },
          "created_at": {
            "type": "string",
            "example": "2021-12-03T13:33:44.556Z",
            "description": "Timestamp representing the date and time when the metadata schema was created. The value for this parameter is shown in the ISO 8601 format.",
            "format": "date-time",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "nullable": true,
            "example": "2022-08-11T08:05:30.695Z",
            "description": "Timestamp representing the date and time when the metadata schema was updated. The value for this parameter is shown in the ISO 8601 format.",
            "format": "date-time"
          },
          "object": {
            "type": "string",
            "default": "metadata_schema",
            "description": "The type of the object represented by the JSON. This object stores information about the metadata schema.",
            "nullable": true
          }
        },
        "description": "Response body schema for **GET** `/v1/metadata-schemas/{resource}`."
      },
      "MetadataSchemasListResponseBody": {
        "title": "MetadataSchemasListResponseBody",
        "type": "object",
        "description": "Object containing a list of metadata schemas.",
        "properties": {
          "object": {
            "type": "string",
            "default": "list",
            "description": "The type of the object represented by JSON. This object stores information about the metadata schemas in a dictionary.",
            "enum": [
              "list"
            ],
            "nullable": true
          },
          "data_ref": {
            "type": "string",
            "default": "schemas",
            "description": "Identifies the name of the attribute that contains the array of metadata schema objects.",
            "enum": [
              "schemas"
            ],
            "nullable": true
          },
          "schemas": {
            "title": "MetadataSchemasListResponseBodySchemas",
            "type": "array",
            "description": "Array of metadata schema objects. The metadata schemas are listed by related object properties.",
            "items": {
              "$ref": "#/components/schemas/MetadataSchemaDeprecated"
            },
            "nullable": true
          },
          "total": {
            "type": "integer",
            "description": "The total number of metadata schema objects.",
            "nullable": true
          }
        },
        "required": [
          "data"
        ]
      },
      "OrdersCreateRequestBody": {
        "title": "OrdersCreateRequestBody",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique ID assigned by Voucherify of an existing order that will be linked to the redemption of this request.",
            "nullable": true
          },
          "source_id": {
            "type": "string",
            "nullable": true,
            "description": "Unique source ID of an existing order that will be linked to the redemption of this request."
          },
          "status": {
            "type": "string",
            "description": "The order status.",
            "enum": [
              "CREATED",
              "PAID",
              "CANCELED",
              "FULFILLED"
            ],
            "nullable": true
          },
          "amount": {
            "type": "integer",
            "description": "A positive integer in the smallest currency unit (e.g. 100 cents for $1.00) representing the total amount of the order. This is the sum of the order items' amounts.",
            "nullable": true
          },
          "initial_amount": {
            "type": "integer",
            "description": "A positive integer in the smallest currency unit (e.g. 100 cents for $1.00) representing the total amount of the order. This is the sum of the order items' amounts.",
            "nullable": true
          },
          "discount_amount": {
            "type": "integer",
            "description": "Sum of all order-level discounts applied to the order. It is expressed as an integer in the smallest currency unit (e.g. 100 cents for $1.00).",
            "nullable": true
          },
          "items": {
            "title": "OrdersCreateRequestBodyItems",
            "type": "array",
            "description": "Array of items applied to the order. It can include up to 500 items.",
            "items": {
              "$ref": "#/components/schemas/OrderItem"
            },
            "nullable": true
          },
          "metadata": {
            "title": "OrdersCreateRequestBodyMetadata",
            "type": "object",
            "description": "A set of custom key/value pairs that you can attach to an order. It can be useful for storing additional information about the order in a structured format. It can be used to define business validation rules or discount formulas.",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "example": "2021-12-22T10:13:06.487Z",
            "description": "Timestamp representing the date and time when the order was created. The value is shown in the ISO 8601 format.",
            "format": "date-time",
            "nullable": true
          },
          "referrer_id": {
            "type": "string",
            "nullable": true,
            "description": "Unique referrer ID.",
            "example": "cust_nM4jqPiaXUvQdVSA6vTRUnix"
          },
          "customer": {
            "$ref": "#/components/schemas/Customer"
          },
          "referrer": {
            "$ref": "#/components/schemas/Referrer"
          }
        },
        "description": "Request body schema for **POST** `v1/orders`."
      },
      "OrdersCreateResponseBody": {
        "title": "OrdersCreateResponseBody",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique ID assigned by Voucherify of an existing order that will be linked to the redemption of this request.",
            "nullable": true
          },
          "source_id": {
            "type": "string",
            "nullable": true,
            "description": "Unique source ID of an existing order that will be linked to the redemption of this request."
          },
          "status": {
            "type": "string",
            "description": "The order status.",
            "enum": [
              "CREATED",
              "PAID",
              "CANCELED",
              "FULFILLED"
            ],
            "nullable": true
          },
          "amount": {
            "type": "integer",
            "description": "This is the sum of the order items' amounts. It is expressed as an integer in the smallest currency unit (e.g. 100 cents for $1.00).",
            "nullable": true
          },
          "initial_amount": {
            "type": "integer",
            "description": "This is the sum of the order items' amounts before any discount or other effect (e.g. add missing units) is applied. It is expressed as an integer in the smallest currency unit (e.g. 100 cents for $1.00).",
            "nullable": true
          },
          "discount_amount": {
            "type": "integer",
            "description": "Sum of all order-level discounts applied to the order. It is expressed as an integer in the smallest currency unit (e.g. 100 cents for $1.00).",
            "nullable": true
          },
          "items_discount_amount": {
            "type": "integer",
            "description": "Sum of all product-specific discounts applied to the order. It is expressed as an integer in the smallest currency unit (e.g. 100 cents for $1.00).",
            "nullable": true
          },
          "total_discount_amount": {
            "type": "integer",
            "description": "Sum of all order-level AND all product-specific discounts applied to the order. It is expressed as an integer in the smallest currency unit (e.g. 100 cents for $1.00).",
            "nullable": true
          },
          "total_amount": {
            "type": "integer",
            "description": "Order amount after undoing all the discounts through the rollback redemption. It is expressed as an integer in the smallest currency unit (e.g. 100 cents for $1.00).",
            "nullable": true
          },
          "applied_discount_amount": {
            "type": "integer",
            "description": "This field shows the order-level discount applied. It is expressed as an integer in the smallest currency unit (e.g. 100 cents for $1.00).",
            "nullable": true
          },
          "items_applied_discount_amount": {
            "type": "integer",
            "description": "Sum of all product-specific discounts applied in a particular request. It is expressed as an integer in the smallest currency unit (e.g. 100 cents for $1.00).  \n`sum(items, i => i.applied_discount_amount)`",
            "nullable": true
          },
          "total_applied_discount_amount": {
            "type": "integer",
            "description": "Sum of all order-level AND all product-specific discounts applied in a particular request. It is expressed as an integer in the smallest currency unit (e.g. 100 cents for $1.00).  \n`total_applied_discount_amount` = `applied_discount_amount` + `items_applied_discount_amount`",
            "nullable": true
          },
          "metadata": {
            "title": "OrdersCreateResponseBodyMetadata",
            "type": "object",
            "description": "A set of custom key/value pairs that you can attach to an order. It can be useful for storing additional information about the order in a structured format. It can be used to define business validation rules or discount formulas.",
            "nullable": true
          },
          "object": {
            "type": "string",
            "description": "The type of the object represented by JSON.",
            "default": "order",
            "enum": [
              "order"
            ],
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "example": "2021-12-22T10:13:06.487Z",
            "description": "Timestamp representing the date and time when the order was created. The value is shown in the ISO 8601 format.",
            "format": "date-time",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "nullable": true,
            "example": "2021-12-22T10:14:45.316Z",
            "format": "date-time",
            "description": "Timestamp representing the date and time when the order was last updated in ISO 8601 format."
          },
          "customer_id": {
            "type": "string",
            "nullable": true,
            "description": "Unique customer identifier of the customer making the purchase. The ID is assigned by Voucherify.",
            "example": "cust_7iUa6ICKyU6gH40dBU25kQU1"
          },
          "referrer_id": {
            "type": "string",
            "nullable": true,
            "description": "Unique referrer ID.",
            "example": "cust_nM4jqPiaXUvQdVSA6vTRUnix"
          },
          "customer": {
            "$ref": "#/components/schemas/CustomerId"
          },
          "referrer": {
            "$ref": "#/components/schemas/ReferrerId"
          },
          "redemptions": {
            "title": "OrdersCreateResponseBodyRedemptions",
            "type": "object",
            "nullable": true
          },
          "items": {
            "title": "OrdersCreateResponseBodyItems",
            "type": "array",
            "description": "Array of items applied to the order. It can include up to 500 items.",
            "items": {
              "$ref": "#/components/schemas/OrderCalculatedItem"
            },
            "nullable": true
          }
        },
        "description": "Response body schema for **POST** `v1/orders`."
      },
      "OrdersExportCreateRequestBody": {
        "title": "OrdersExportCreateRequestBody",
        "description": "Request body schema for **POST** `v1/orders/export`.",
        "type": "object",
        "properties": {
          "parameters": {
            "title": "OrdersExportCreateRequestBodyParameters",
            "type": "object",
            "properties": {
              "order": {
                "$ref": "#/components/schemas/ExportOrderOrder"
              },
              "fields": {
                "title": "OrdersExportCreateRequestBodyParametersFields",
                "type": "array",
                "description": "Array of strings containing the data in the export. These fields define the headers in the CSV file.",
                "items": {
                  "$ref": "#/components/schemas/ExportOrderFields"
                },
                "nullable": true
              },
              "filters": {
                "$ref": "#/components/schemas/ExportOrderFilters"
              }
            },
            "description": "List of available fields and filters that can be exported with an order along with the sorting order of the returned data.",
            "nullable": true
          }
        }
      },
      "OrdersExportCreateResponseBody": {
        "title": "OrdersExportCreateResponseBody",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique export ID.",
            "nullable": true
          },
          "object": {
            "type": "string",
            "default": "export",
            "enum": [
              "export"
            ],
            "description": "The type of object being represented. This object stores information about the export.",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp representing the date and time when the export was scheduled in ISO 8601 format.",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "Status of the export. Informs you whether the export has already been completed, i.e. indicates whether the file containing the exported data has been generated.",
            "default": "SCHEDULED",
            "enum": [
              "SCHEDULED"
            ],
            "nullable": true
          },
          "channel": {
            "type": "string",
            "description": "The channel through which the export was triggered.",
            "nullable": true
          },
          "result": {
            "title": "OrdersExportCreateResponseBodyResult",
            "type": "object",
            "description": "Contains the URL of the CSV file.",
            "nullable": true
          },
          "user_id": {
            "type": "string",
            "description": "Identifies the specific user who initiated the export through the Voucherify Dashboard; returned when the channel value is WEBSITE.",
            "nullable": true
          },
          "exported_object": {
            "type": "string",
            "default": "order",
            "enum": [
              "order"
            ],
            "description": "The type of object to be exported.",
            "nullable": true
          },
          "parameters": {
            "title": "OrdersExportCreateResponseBodyParameters",
            "type": "object",
            "properties": {
              "order": {
                "$ref": "#/components/schemas/ExportOrderOrder"
              },
              "fields": {
                "title": "OrdersExportCreateResponseBodyParametersFields",
                "type": "array",
                "description": "Array of strings containing the data in the export. These fields define the headers in the CSV file.",
                "items": {
                  "$ref": "#/components/schemas/ExportOrderFields"
                },
                "nullable": true
              },
              "filters": {
                "$ref": "#/components/schemas/ExportOrderFilters"
              }
            },
            "description": "List of available fields and filters that can be exported with an order along with the sorting order of the returned data.",
            "nullable": true
          }
        },
        "description": "Response body schema for **POST** `v1/orders/export`."
      },
      "OrdersGetResponseBody": {
        "title": "OrdersGetResponseBody",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique ID assigned by Voucherify of an existing order that will be linked to the redemption of this request.",
            "nullable": true
          },
          "source_id": {
            "type": "string",
            "nullable": true,
            "description": "Unique source ID of an existing order that will be linked to the redemption of this request."
          },
          "status": {
            "type": "string",
            "description": "The order status.",
            "enum": [
              "CREATED",
              "PAID",
              "CANCELED",
              "FULFILLED"
            ],
            "nullable": true
          },
          "amount": {
            "type": "integer",
            "description": "This is the sum of the order items' amounts. It is expressed as an integer in the smallest currency unit (e.g. 100 cents for $1.00).",
            "nullable": true
          },
          "initial_amount": {
            "type": "integer",
            "description": "This is the sum of the order items' amounts before any discount or other effect (e.g. add missing units) is applied. It is expressed as an integer in the smallest currency unit (e.g. 100 cents for $1.00).",
            "nullable": true
          },
          "discount_amount": {
            "type": "integer",
            "description": "Sum of all order-level discounts applied to the order. It is expressed as an integer in the smallest currency unit (e.g. 100 cents for $1.00).",
            "nullable": true
          },
          "items_discount_amount": {
            "type": "integer",
            "description": "Sum of all product-specific discounts applied to the order. It is expressed as an integer in the smallest currency unit (e.g. 100 cents for $1.00).",
            "nullable": true
          },
          "total_discount_amount": {
            "type": "integer",
            "description": "Sum of all order-level AND all product-specific discounts applied to the order. It is expressed as an integer in the smallest currency unit (e.g. 100 cents for $1.00).",
            "nullable": true
          },
          "total_amount": {
            "type": "integer",
            "description": "Order amount after undoing all the discounts through the rollback redemption. It is expressed as an integer in the smallest currency unit (e.g. 100 cents for $1.00).",
            "nullable": true
          },
          "applied_discount_amount": {
            "type": "integer",
            "description": "This field shows the order-level discount applied. It is expressed as an integer in the smallest currency unit (e.g. 100 cents for $1.00).",
            "nullable": true
          },
          "items_applied_discount_amount": {
            "type": "integer",
            "description": "Sum of all product-specific discounts applied in a particular request. It is expressed as an integer in the smallest currency unit (e.g. 100 cents for $1.00).  \n`sum(items, i => i.applied_discount_amount)`",
            "nullable": true
          },
          "total_applied_discount_amount": {
            "type": "integer",
            "description": "Sum of all order-level AND all product-specific discounts applied in a particular request. It is expressed as an integer in the smallest currency unit (e.g. 100 cents for $1.00).  \n`total_applied_discount_amount` = `applied_discount_amount` + `items_applied_discount_amount`",
            "nullable": true
          },
          "metadata": {
            "title": "OrdersGetResponseBodyMetadata",
            "type": "object",
            "description": "A set of custom key/value pairs that you can attach to an order. It can be useful for storing additional information about the order in a structured format. It can be used to define business validation rules or discount formulas.",
            "nullable": true
          },
          "object": {
            "type": "string",
            "description": "The type of the object represented by JSON.",
            "default": "order",
            "enum": [
              "order"
            ],
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "example": "2021-12-22T10:13:06.487Z",
            "description": "Timestamp representing the date and time when the order was created. The value is shown in the ISO 8601 format.",
            "format": "date-time",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "nullable": true,
            "example": "2021-12-22T10:14:45.316Z",
            "format": "date-time",
            "description": "Timestamp representing the date and time when the order was last updated in ISO 8601 format."
          },
          "customer_id": {
            "type": "string",
            "nullable": true,
            "description": "Unique customer identifier of the customer making the purchase. The ID is assigned by Voucherify.",
            "example": "cust_7iUa6ICKyU6gH40dBU25kQU1"
          },
          "referrer_id": {
            "type": "string",
            "nullable": true,
            "description": "Unique referrer ID.",
            "example": "cust_nM4jqPiaXUvQdVSA6vTRUnix"
          },
          "customer": {
            "$ref": "#/components/schemas/CustomerId"
          },
          "referrer": {
            "$ref": "#/components/schemas/ReferrerId"
          },
          "redemptions": {
            "title": "OrdersGetResponseBodyRedemptions",
            "type": "object",
            "nullable": true
          },
          "items": {
            "title": "OrdersGetResponseBodyItems",
            "type": "array",
            "description": "Array of items applied to the order. It can include up to 500 items.",
            "items": {
              "$ref": "#/components/schemas/OrderCalculatedItem"
            },
            "nullable": true
          }
        },
        "description": "Response body schema for **GET** `v1/orders/{orderId}`."
      },
      "OrdersImportCreateRequestBody": {
        "title": "OrdersImportCreateRequestBody",
        "type": "array",
        "description": "Request body schema for **POST** `/orders/import`.",
        "items": {
          "title": "OrdersImportCreateRequestBodyItem",
          "type": "object",
          "allOf": [
            {
              "$ref": "#/components/schemas/Order"
            },
            {
              "type": "object",
              "description": "Order information.",
              "properties": {
                "created_at": {
                  "type": "string",
                  "example": "2021-12-22T10:13:06.487Z",
                  "description": "Timestamp representing the date and time when the order was created. The value is shown in the ISO 8601 format.",
                  "format": "date-time"
                },
                "referrer_id": {
                  "type": "string",
                  "nullable": true,
                  "description": "Unique referrer ID.",
                  "example": "cust_nM4jqPiaXUvQdVSA6vTRUnix"
                },
                "customer": {
                  "$ref": "#/components/schemas/Customer"
                },
                "referrer": {
                  "$ref": "#/components/schemas/Referrer"
                }
              }
            }
          ]
        }
      },
      "OrdersImportCreateResponseBody": {
        "title": "OrdersImportCreateResponseBody",
        "type": "object",
        "properties": {
          "async_action_id": {
            "type": "string",
            "example": "aa_0a875d56c805df6601",
            "description": "The ID of the scheduled asynchronous action.",
            "nullable": true
          }
        },
        "required": [],
        "description": "Response body schema for **POST** `v1/orders/import`."
      },
      "OrdersListResponseBody": {
        "title": "OrdersListResponseBody",
        "type": "object",
        "description": "Response body schema representing **GET** `v1/orders`.",
        "properties": {
          "object": {
            "type": "string",
            "default": "list",
            "enum": [
              "list"
            ],
            "description": "The type of the object represented by JSON. This object stores information about orders in a dictionary.",
            "nullable": true
          },
          "data_ref": {
            "type": "string",
            "default": "orders",
            "enum": [
              "orders"
            ],
            "description": "Identifies the name of the attribute that contains the array of order objects.",
            "nullable": true
          },
          "orders": {
            "title": "OrdersListResponseBodyOrders",
            "type": "array",
            "description": "Contains array of order objects.",
            "items": {
              "$ref": "#/components/schemas/OrderCalculated"
            },
            "nullable": true
          },
          "total": {
            "type": "integer",
            "description": "Total number of orders.",
            "nullable": true
          }
        },
        "required": []
      },
      "OrdersUpdateRequestBody": {
        "title": "OrdersUpdateRequestBody",
        "type": "object",
        "properties": {
          "source_id": {
            "type": "string",
            "nullable": true,
            "description": "Unique source ID of an existing order that will be linked to the redemption of this request."
          },
          "status": {
            "type": "string",
            "description": "The order status.",
            "enum": [
              "CREATED",
              "PAID",
              "CANCELED",
              "FULFILLED"
            ],
            "nullable": true
          },
          "amount": {
            "type": "integer",
            "description": "A positive integer in the smallest currency unit (e.g. 100 cents for $1.00) representing the total amount of the order. This is the sum of the order items' amounts.",
            "nullable": true
          },
          "initial_amount": {
            "type": "integer",
            "description": "A positive integer in the smallest currency unit (e.g. 100 cents for $1.00) representing the total amount of the order. This is the sum of the order items' amounts.",
            "nullable": true
          },
          "discount_amount": {
            "type": "integer",
            "description": "Sum of all order-level discounts applied to the order. It is expressed as an integer in the smallest currency unit (e.g. 100 cents for $1.00).",
            "nullable": true
          },
          "items": {
            "title": "OrdersUpdateRequestBodyItems",
            "type": "array",
            "description": "Array of items applied to the order. It can include up to 500 items.",
            "items": {
              "$ref": "#/components/schemas/OrderItem"
            },
            "nullable": true
          },
          "metadata": {
            "title": "OrdersUpdateRequestBodyMetadata",
            "type": "object",
            "description": "A set of custom key/value pairs that you can attach to an order. It can be useful for storing additional information about the order in a structured format. It can be used to define business validation rules or discount formulas.",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "example": "2021-12-22T10:13:06.487Z",
            "description": "Timestamp representing the date and time when the order was created. The value is shown in the ISO 8601 format.",
            "format": "date-time",
            "nullable": true
          },
          "referrer_id": {
            "type": "string",
            "nullable": true,
            "description": "Unique referrer ID.",
            "example": "cust_nM4jqPiaXUvQdVSA6vTRUnix"
          },
          "customer": {
            "$ref": "#/components/schemas/Customer"
          },
          "referrer": {
            "$ref": "#/components/schemas/Referrer"
          }
        },
        "description": "Request body schema for **PUT** `v1/orders/{orderId}`."
      },
      "OrdersUpdateResponseBody": {
        "title": "OrdersUpdateResponseBody",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique ID assigned by Voucherify of an existing order that will be linked to the redemption of this request.",
            "nullable": true
          },
          "source_id": {
            "type": "string",
            "nullable": true,
            "description": "Unique source ID of an existing order that will be linked to the redemption of this request."
          },
          "status": {
            "type": "string",
            "description": "The order status.",
            "enum": [
              "CREATED",
              "PAID",
              "CANCELED",
              "FULFILLED"
            ],
            "nullable": true
          },
          "amount": {
            "type": "integer",
            "description": "This is the sum of the order items' amounts. It is expressed as an integer in the smallest currency unit (e.g. 100 cents for $1.00).",
            "nullable": true
          },
          "initial_amount": {
            "type": "integer",
            "description": "This is the sum of the order items' amounts before any discount or other effect (e.g. add missing units) is applied. It is expressed as an integer in the smallest currency unit (e.g. 100 cents for $1.00).",
            "nullable": true
          },
          "discount_amount": {
            "type": "integer",
            "description": "Sum of all order-level discounts applied to the order. It is expressed as an integer in the smallest currency unit (e.g. 100 cents for $1.00).",
            "nullable": true
          },
          "items_discount_amount": {
            "type": "integer",
            "description": "Sum of all product-specific discounts applied to the order. It is expressed as an integer in the smallest currency unit (e.g. 100 cents for $1.00).",
            "nullable": true
          },
          "total_discount_amount": {
            "type": "integer",
            "description": "Sum of all order-level AND all product-specific discounts applied to the order. It is expressed as an integer in the smallest currency unit (e.g. 100 cents for $1.00).",
            "nullable": true
          },
          "total_amount": {
            "type": "integer",
            "description": "Order amount after undoing all the discounts through the rollback redemption. It is expressed as an integer in the smallest currency unit (e.g. 100 cents for $1.00).",
            "nullable": true
          },
          "applied_discount_amount": {
            "type": "integer",
            "description": "This field shows the order-level discount applied. It is expressed as an integer in the smallest currency unit (e.g. 100 cents for $1.00).",
            "nullable": true
          },
          "items_applied_discount_amount": {
            "type": "integer",
            "description": "Sum of all product-specific discounts applied in a particular request. It is expressed as an integer in the smallest currency unit (e.g. 100 cents for $1.00).  \n`sum(items, i => i.applied_discount_amount)`",
            "nullable": true
          },
          "total_applied_discount_amount": {
            "type": "integer",
            "description": "Sum of all order-level AND all product-specific discounts applied in a particular request. It is expressed as an integer in the smallest currency unit (e.g. 100 cents for $1.00).  \n`total_applied_discount_amount` = `applied_discount_amount` + `items_applied_discount_amount`",
            "nullable": true
          },
          "metadata": {
            "title": "OrdersUpdateResponseBodyMetadata",
            "type": "object",
            "description": "A set of custom key/value pairs that you can attach to an order. It can be useful for storing additional information about the order in a structured format. It can be used to define business validation rules or discount formulas.",
            "nullable": true
          },
          "object": {
            "type": "string",
            "description": "The type of the object represented by JSON.",
            "default": "order",
            "enum": [
              "order"
            ],
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "example": "2021-12-22T10:13:06.487Z",
            "description": "Timestamp representing the date and time when the order was created. The value is shown in the ISO 8601 format.",
            "format": "date-time",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "nullable": true,
            "example": "2021-12-22T10:14:45.316Z",
            "format": "date-time",
            "description": "Timestamp representing the date and time when the order was last updated in ISO 8601 format."
          },
          "customer_id": {
            "type": "string",
            "nullable": true,
            "description": "Unique customer identifier of the customer making the purchase. The ID is assigned by Voucherify.",
            "example": "cust_7iUa6ICKyU6gH40dBU25kQU1"
          },
          "referrer_id": {
            "type": "string",
            "nullable": true,
            "description": "Unique referrer ID.",
            "example": "cust_nM4jqPiaXUvQdVSA6vTRUnix"
          },
          "customer": {
            "$ref": "#/components/schemas/CustomerId"
          },
          "referrer": {
            "$ref": "#/components/schemas/ReferrerId"
          },
          "redemptions": {
            "title": "OrdersUpdateResponseBodyRedemptions",
            "type": "object",
            "nullable": true
          },
          "items": {
            "title": "OrdersUpdateResponseBodyItems",
            "type": "array",
            "description": "Array of items applied to the order. It can include up to 500 items.",
            "items": {
              "$ref": "#/components/schemas/OrderCalculatedItem"
            },
            "nullable": true
          }
        },
        "description": "Response body schema for **PUT** `v1/orders/{orderId}`."
      },
      "ParameterActivityCategory": {
        "title": "ParameterActivityCategory",
        "type": "string",
        "enum": [
          "ACTION",
          "EFFECT"
        ]
      },
      "ParameterAsyncActionId": {
        "title": "ParameterAsyncActionId",
        "type": "string",
        "example": "aa_0afb3d009a55814a48"
      },
      "ParameterBinEntryId": {
        "title": "ParameterBinEntryId",
        "type": "string",
        "example": "tbe_0ec1cf03fe133e2de7"
      },
      "ParameterBoolean": {
        "title": "ParameterBoolean",
        "type": "boolean"
      },
      "ParameterBrandingId": {
        "title": "ParameterBrandingId",
        "type": "string",
        "example": "brd_06d06m1944y0630hD4y"
      },
      "ParameterCampaignId": {
        "title": "ParameterCampaignId",
        "type": "string",
        "example": "camp_rRsfatlwN7unSeUIJDCYedal"
      },
      "ParameterCampaignTemplateId": {
        "title": "ParameterCampaignTemplateId",
        "type": "string",
        "example": "camp_tpl_zLtn2H9fgcG3NwO7t4PAfHcq"
      },
      "ParameterCampaignType": {
        "title": "ParameterCampaignType",
        "type": "string",
        "enum": [
          "PROMOTION",
          "GIFT_VOUCHERS",
          "REFERRAL_PROGRAM",
          "DISCOUNT_COUPONS",
          "LOYALTY_PROGRAM"
        ]
      },
      "ParameterCategoryId": {
        "title": "ParameterCategoryId",
        "type": "string",
        "example": "cat_0bb81a481615a37b5e"
      },
      "ParameterCode": {
        "title": "ParameterCode",
        "type": "string",
        "example": "2CpRCE2c"
      },
      "ParameterCustomEventSchemaId": {
        "title": "ParameterCustomEventSchemaId",
        "type": "string",
        "example": "ms_f1r5Tcu5T0m3v3nT5ch3ma"
      },
      "ParameterCustomerEvent": {
        "title": "ParameterCustomerEvent",
        "type": "string"
      },
      "ParameterCustomerId": {
        "title": "ParameterCustomerId",
        "type": "string",
        "example": "cust_nk0N1uNQ1YnupAoJGOgvsODC"
      },
      "ParameterDate": {
        "title": "ParameterDate",
        "type": "string",
        "example": "2023-12-22T10:13:06.487Z",
        "format": "date-time"
      },
      "ParameterDateOnly": {
        "title": "ParameterDateOnly",
        "type": "string",
        "example": "2023-12-22T10:13:06.487Z",
        "format": "date"
      },
      "ParameterEarningRuleId": {
        "title": "ParameterEarningRuleId",
        "type": "string",
        "example": "ern_CFuv1O0IDl8Jgph0ojhMu8bH"
      },
      "ParameterExpandListCampaigns": {
        "title": "ParameterExpandListCampaigns",
        "type": "string",
        "enum": [
          "category",
          "access_settings_assignments"
        ]
      },
      "ParameterExportId": {
        "title": "ParameterExportId",
        "type": "string",
        "example": "exp_2bYLdY2lQ2886wmYIHyeBWUZ"
      },
      "ParameterFiltersListBin": {
        "title": "ParameterFiltersListBin",
        "type": "object",
        "properties": {
          "junction": {
            "$ref": "#/components/schemas/Junction"
          },
          "id": {
            "title": "ParameterFiltersListBinId",
            "type": "object",
            "description": "Unique identifier of the bin entry.",
            "properties": {
              "conditions": {
                "$ref": "#/components/schemas/FilterConditionsString"
              }
            },
            "nullable": true
          },
          "resource_type": {
            "title": "ParameterFiltersListBinResourceType",
            "type": "object",
            "description": "Resource type of the resource moved to the bin.",
            "properties": {
              "conditions": {
                "properties": {
                  "$in": {
                    "type": "array",
                    "description": "Array of resource values that should be included in the results (multiple values).",
                    "items": {
                      "type": "string",
                      "enum": [
                        "campaign",
                        "product",
                        "sku",
                        "voucher"
                      ]
                    },
                    "nullable": true
                  },
                  "$not_in": {
                    "type": "array",
                    "description": "Array of resource values that should be included in the results (multiple values).",
                    "items": {
                      "type": "string",
                      "enum": [
                        "campaign",
                        "product",
                        "sku",
                        "voucher"
                      ]
                    },
                    "nullable": true
                  },
                  "$is": {
                    "type": "string",
                    "description": "Value is exactly this value (single value).",
                    "enum": [
                      "campaign",
                      "product",
                      "sku",
                      "voucher"
                    ],
                    "nullable": true
                  },
                  "$is_not": {
                    "type": "string",
                    "description": "Results omit this value (single value).",
                    "enum": [
                      "campaign",
                      "product",
                      "sku",
                      "voucher"
                    ],
                    "nullable": true
                  },
                  "$has_value": {
                    "type": "string",
                    "description": "Value is NOT null. The value for this parameter is an empty string.",
                    "nullable": true
                  },
                  "$is_unknown": {
                    "type": "string",
                    "description": "Value is null. The value for this parameter is an empty string.",
                    "nullable": true
                  },
                  "$starts_with": {
                    "type": "string",
                    "description": "Value starts with the specified string.",
                    "nullable": true
                  },
                  "$ends_with": {
                    "type": "string",
                    "description": "Value ends with the specified string.",
                    "nullable": true
                  }
                }
              }
            },
            "nullable": true
          },
          "resource_name": {
            "title": "ParameterFiltersListBinResourceName",
            "type": "object",
            "description": "Name of the resource moved to the bin: the name of the campaign, voucher, product, or SKU.",
            "properties": {
              "conditions": {
                "$ref": "#/components/schemas/FilterConditionsString"
              }
            },
            "nullable": true
          },
          "resource_id": {
            "title": "ParameterFiltersListBinResourceId",
            "type": "object",
            "description": "Unique identifier of the resource moved to the bin.",
            "properties": {
              "conditions": {
                "$ref": "#/components/schemas/FilterConditionsString"
              }
            },
            "nullable": true
          }
        }
      },
      "ParameterFiltersListCampaigns": {
        "title": "ParameterFiltersListCampaigns",
        "type": "object",
        "properties": {
          "campaign_status": {
            "title": "ParameterFiltersListCampaignsCampaignStatus",
            "type": "object",
            "description": "Status of the campaign. Allowed values:\n`DONE`,\n`IN_PROGRESS`,\n`DRAFT`,\n`FAILED`\n`MODIFYING`",
            "properties": {
              "conditions": {
                "title": "ParameterFiltersListCampaignsCampaignStatusConditions",
                "type": "object",
                "description": "Data conditions used to narrow down the data records to be returned in the result.",
                "properties": {
                  "$in": {
                    "title": "ParameterFiltersListCampaignsCampaignStatusConditionsIn",
                    "type": "array",
                    "description": "Array of resource values that should be included in the results (multiple values).",
                    "items": {
                      "title": "ParameterFiltersListCampaignsCampaignStatusConditionsInItem",
                      "type": "string",
                      "enum": [
                        "DONE",
                        "IN_PROGRESS",
                        "FAILED",
                        "DRAFT",
                        "MODIFYING"
                      ]
                    },
                    "nullable": true
                  },
                  "$not_in": {
                    "title": "ParameterFiltersListCampaignsCampaignStatusConditionsNotIn",
                    "type": "array",
                    "description": "Array of resource values that should be included in the results (multiple values).",
                    "items": {
                      "title": "ParameterFiltersListCampaignsCampaignStatusConditionsNotInItem",
                      "type": "string",
                      "enum": [
                        "DONE",
                        "IN_PROGRESS",
                        "FAILED",
                        "DRAFT",
                        "MODIFYING"
                      ]
                    },
                    "nullable": true
                  },
                  "$is": {
                    "type": "string",
                    "description": "Value is exactly this value (single value).",
                    "enum": [
                      "DONE",
                      "IN_PROGRESS",
                      "FAILED",
                      "DRAFT",
                      "MODIFYING"
                    ],
                    "nullable": true
                  },
                  "$is_not": {
                    "type": "string",
                    "description": "Results omit this value (single value).",
                    "enum": [
                      "DONE",
                      "IN_PROGRESS",
                      "FAILED",
                      "DRAFT",
                      "MODIFYING"
                    ],
                    "nullable": true
                  },
                  "$has_value": {
                    "type": "string",
                    "description": "Value is NOT null. The value for this parameter is an empty string.",
                    "nullable": true
                  },
                  "$is_unknown": {
                    "type": "string",
                    "description": "Value is null. The value for this parameter is an empty string.",
                    "nullable": true
                  },
                  "$starts_with": {
                    "type": "string",
                    "description": "Value starts with the specified string.",
                    "nullable": true
                  },
                  "$ends_with": {
                    "type": "string",
                    "description": "Value ends with the specified string.",
                    "nullable": true
                  }
                },
                "nullable": true
              }
            },
            "nullable": true
          },
          "is_referral_code": {
            "title": "ParameterFiltersListCampaignsIsReferralCode",
            "type": "object",
            "description": "Determines if the campaign is or is not a referral campaign.",
            "properties": {
              "$is": {
                "type": "string",
                "description": "Value is exactly this value (single value).",
                "enum": [
                  "TRUE",
                  "FALSE"
                ],
                "nullable": true
              },
              "$is_not": {
                "type": "string",
                "description": "Results omit this value (single value).",
                "enum": [
                  "TRUE",
                  "FALSE"
                ],
                "nullable": true
              }
            },
            "nullable": true
          },
          "validity_timeframe": {
            "title": "ParameterFiltersListCampaignsValidityTimeframe",
            "description": "Filter by validity timeframe",
            "type": "object",
            "properties": {
              "conditions": {
                "$ref": "#/components/schemas/FilterConditionsDateTime"
              }
            },
            "nullable": true
          },
          "voucher_type": {
            "title": "ParameterFiltersListCampaignsVoucherType",
            "type": "object",
            "description": "Filter by voucher type",
            "properties": {
              "conditions": {
                "$ref": "#/components/schemas/FilterConditionsString"
              }
            },
            "nullable": true
          },
          "categories": {
            "title": "ParameterFiltersListCampaignsCategories",
            "type": "object",
            "description": "Filter by categories names",
            "properties": {
              "conditions": {
                "$ref": "#/components/schemas/FilterConditionsString"
              }
            },
            "nullable": true
          },
          "category_ids": {
            "title": "ParameterFiltersListCampaignsCategoryIds",
            "type": "object",
            "description": "Filter by categories IDs",
            "properties": {
              "conditions": {
                "$ref": "#/components/schemas/FilterConditionsString"
              }
            },
            "nullable": true
          },
          "junction": {
            "$ref": "#/components/schemas/Junction"
          }
        }
      },
      "ParameterFiltersListCustomerRedeemables": {
        "title": "ParameterFiltersListCustomerRedeemables",
        "type": "object",
        "properties": {
          "id": {
            "title": "ParameterFiltersListCustomerRedeemablesId",
            "type": "object",
            "description": "Unique redeemable holder ID, i.e. `rh_0e77502f84f0f4a6a8`.",
            "properties": {
              "conditions": {
                "$ref": "#/components/schemas/FilterConditionsString"
              }
            },
            "nullable": true
          },
          "created_at": {
            "title": "ParameterFiltersListCustomerRedeemablesCreatedAt",
            "description": "Timestamp representing the date and time when the customer redeemable was created. The value is shown in the ISO 8601 format.",
            "type": "object",
            "properties": {
              "conditions": {
                "$ref": "#/components/schemas/FilterConditionsDateTime"
              }
            },
            "nullable": true
          },
          "redeemable_id": {
            "title": "ParameterFiltersListCustomerRedeemablesRedeemableId",
            "type": "object",
            "description": "Unique redeemable ID, e.g. `v_hS8JFl8S6lNcd1L69wLIoXgTio7eWEgk`.",
            "properties": {
              "conditions": {
                "$ref": "#/components/schemas/FilterConditionsString"
              }
            },
            "nullable": true
          },
          "redeemable_object": {
            "title": "ParameterFiltersListCustomerRedeemablesRedeemableObject",
            "type": "object",
            "description": "Unique related object, i.e. `voucher`.",
            "properties": {
              "conditions": {
                "properties": {
                  "$in": {
                    "type": "array",
                    "description": "Array of resource values that should be included in the results (multiple values).",
                    "items": {
                      "type": "string",
                      "default": "voucher",
                      "enum": [
                        "voucher"
                      ]
                    },
                    "nullable": true
                  },
                  "$not_in": {
                    "type": "array",
                    "description": "Array of resource values that should be included in the results (multiple values).",
                    "items": {
                      "type": "string",
                      "default": "voucher",
                      "enum": [
                        "voucher"
                      ]
                    },
                    "nullable": true
                  },
                  "$is": {
                    "type": "string",
                    "description": "Value is exactly this value (single value).",
                    "default": "voucher",
                    "enum": [
                      "voucher"
                    ],
                    "nullable": true
                  },
                  "$is_not": {
                    "type": "string",
                    "description": "Results omit this value (single value).",
                    "default": "voucher",
                    "enum": [
                      "voucher"
                    ],
                    "nullable": true
                  },
                  "$has_value": {
                    "type": "string",
                    "description": "Value is NOT null. The value for this parameter is an empty string.",
                    "nullable": true
                  },
                  "$is_unknown": {
                    "type": "string",
                    "description": "Value is null. The value for this parameter is an empty string.",
                    "nullable": true
                  },
                  "$starts_with": {
                    "type": "string",
                    "description": "Value starts with the specified string.",
                    "nullable": true
                  },
                  "$ends_with": {
                    "type": "string",
                    "description": "Value ends with the specified string.",
                    "nullable": true
                  }
                }
              }
            },
            "nullable": true
          },
          "holder_role": {
            "title": "ParameterFiltersListCustomerRedeemablesHolderRole",
            "type": "object",
            "description": "Holder role of the redeemable. Allowed values:\n`OWNER`,\n`REFEREE`,\n`REFERRER`.",
            "properties": {
              "conditions": {
                "properties": {
                  "$in": {
                    "type": "array",
                    "description": "Array of resource values that should be included in the results (multiple values).",
                    "items": {
                      "type": "string",
                      "enum": [
                        "OWNER",
                        "REFEREE",
                        "REFERRER"
                      ]
                    },
                    "nullable": true
                  },
                  "$not_in": {
                    "type": "array",
                    "description": "Array of resource values that should be included in the results (multiple values).",
                    "items": {
                      "type": "string",
                      "enum": [
                        "OWNER",
                        "REFEREE",
                        "REFERRER"
                      ]
                    },
                    "nullable": true
                  },
                  "$is": {
                    "type": "string",
                    "description": "Value is exactly this value (single value).",
                    "enum": [
                      "OWNER",
                      "REFEREE",
                      "REFERRER"
                    ],
                    "nullable": true
                  },
                  "$is_not": {
                    "type": "string",
                    "description": "Results omit this value (single value).",
                    "enum": [
                      "OWNER",
                      "REFEREE",
                      "REFERRER"
                    ],
                    "nullable": true
                  },
                  "$has_value": {
                    "type": "string",
                    "description": "Value is NOT null. The value for this parameter is an empty string.",
                    "nullable": true
                  },
                  "$is_unknown": {
                    "type": "string",
                    "description": "Value is null. The value for this parameter is an empty string.",
                    "nullable": true
                  },
                  "$starts_with": {
                    "type": "string",
                    "description": "Value starts with the specified string.",
                    "nullable": true
                  },
                  "$ends_with": {
                    "type": "string",
                    "description": "Value ends with the specified string.",
                    "nullable": true
                  }
                }
              }
            },
            "nullable": true
          },
          "campaign_id": {
            "title": "ParameterFiltersListCustomerRedeemablesCampaignId",
            "type": "object",
            "description": "Unique campaign identifer, e.g. `camp_bfrwAVsP6Q1EM1ZjgHwheKYr`.",
            "properties": {
              "conditions": {
                "$ref": "#/components/schemas/FilterConditionsString"
              }
            },
            "nullable": true
          },
          "campaign_type": {
            "title": "ParameterFiltersListCustomerRedeemablesCampaignType",
            "type": "object",
            "description": "Type of the campaign. Allowed values:\n`DISCOUNT_COUPONS`,\n`REFERRAL_PROGRAM`,\n`GIFT_VOUCHERS`,\n`LOYALTY_PROGRAM`",
            "properties": {
              "conditions": {
                "properties": {
                  "$in": {
                    "type": "array",
                    "description": "Array of resource values that should be included in the results (multiple values).",
                    "items": {
                      "type": "string",
                      "enum": [
                        "LOYALTY_PROGRAM",
                        "GIFT_VOUCHERS",
                        "DISCOUNT_COUPONS",
                        "REFERRAL_PROGRAM"
                      ]
                    },
                    "nullable": true
                  },
                  "$not_in": {
                    "type": "array",
                    "description": "Array of resource values that should be included in the results (multiple values).",
                    "items": {
                      "type": "string",
                      "enum": [
                        "LOYALTY_PROGRAM",
                        "GIFT_VOUCHERS",
                        "DISCOUNT_COUPONS",
                        "REFERRAL_PROGRAM"
                      ]
                    },
                    "nullable": true
                  },
                  "$is": {
                    "type": "string",
                    "description": "Value is exactly this value (single value).",
                    "enum": [
                      "LOYALTY_PROGRAM",
                      "GIFT_VOUCHERS",
                      "DISCOUNT_COUPONS",
                      "REFERRAL_PROGRAM"
                    ],
                    "nullable": true
                  },
                  "$is_not": {
                    "type": "string",
                    "description": "Results omit this value (single value).",
                    "enum": [
                      "LOYALTY_PROGRAM",
                      "GIFT_VOUCHERS",
                      "DISCOUNT_COUPONS",
                      "REFERRAL_PROGRAM"
                    ],
                    "nullable": true
                  },
                  "$has_value": {
                    "type": "string",
                    "description": "Value is NOT null. The value for this parameter is an empty string.",
                    "nullable": true
                  },
                  "$is_unknown": {
                    "type": "string",
                    "description": "Value is null. The value for this parameter is an empty string.",
                    "nullable": true
                  },
                  "$starts_with": {
                    "type": "string",
                    "description": "Value starts with the specified string.",
                    "nullable": true
                  },
                  "$ends_with": {
                    "type": "string",
                    "description": "Value ends with the specified string.",
                    "nullable": true
                  }
                }
              }
            },
            "nullable": true
          },
          "voucher_type": {
            "title": "ParameterFiltersListCustomerRedeemablesVoucherType",
            "type": "object",
            "description": "Type of the voucher. Allowed values:\n`DISCOUNT_VOUCHER`,\n`GIFT_VOUCHER`,\n`LOYALTY_CARD`.",
            "properties": {
              "conditions": {
                "properties": {
                  "$in": {
                    "type": "array",
                    "description": "Array of resource values that should be included in the results (multiple values).",
                    "items": {
                      "type": "string",
                      "enum": [
                        "GIFT_VOUCHER",
                        "DISCOUNT_VOUCHER",
                        "LOYALTY_CARD"
                      ]
                    },
                    "nullable": true
                  },
                  "$not_in": {
                    "type": "array",
                    "description": "Array of resource values that should be included in the results (multiple values).",
                    "items": {
                      "type": "string",
                      "enum": [
                        "GIFT_VOUCHER",
                        "DISCOUNT_VOUCHER",
                        "LOYALTY_CARD"
                      ]
                    },
                    "nullable": true
                  },
                  "$is": {
                    "type": "string",
                    "description": "Value is exactly this value (single value).",
                    "enum": [
                      "GIFT_VOUCHER",
                      "DISCOUNT_VOUCHER",
                      "LOYALTY_CARD"
                    ],
                    "nullable": true
                  },
                  "$is_not": {
                    "type": "string",
                    "description": "Results omit this value (single value).",
                    "enum": [
                      "GIFT_VOUCHER",
                      "DISCOUNT_VOUCHER",
                      "LOYALTY_CARD"
                    ],
                    "nullable": true
                  },
                  "$has_value": {
                    "type": "string",
                    "description": "Value is NOT null. The value for this parameter is an empty string.",
                    "nullable": true
                  },
                  "$is_unknown": {
                    "type": "string",
                    "description": "Value is null. The value for this parameter is an empty string.",
                    "nullable": true
                  },
                  "$starts_with": {
                    "type": "string",
                    "description": "Value starts with the specified string.",
                    "nullable": true
                  },
                  "$ends_with": {
                    "type": "string",
                    "description": "Value ends with the specified string.",
                    "nullable": true
                  }
                }
              }
            },
            "nullable": true
          },
          "junction": {
            "$ref": "#/components/schemas/Junction"
          }
        }
      },
      "ParameterFiltersListLocations": {
        "title": "ParameterFiltersListLocations",
        "properties": {
          "name": {
            "title": "ParameterFiltersListLocationsName",
            "type": "object",
            "properties": {
              "conditions": {
                "$ref": "#/components/schemas/FilterConditionsString"
              }
            },
            "nullable": true
          },
          "created_at": {
            "title": "ParameterFiltersListLocationsCreatedAt",
            "description": "Timestamp representing the date and time when the location was created. The value is shown in the ISO 8601 format.",
            "type": "object",
            "properties": {
              "conditions": {
                "$ref": "#/components/schemas/FilterConditionsDateTime"
              }
            },
            "nullable": true
          },
          "updated_at": {
            "title": "ParameterFiltersListLocationsUpdatedAt",
            "description": "Timestamp representing the date and time when the location was updated. The value is shown in the ISO 8601 format.",
            "type": "object",
            "properties": {
              "conditions": {
                "$ref": "#/components/schemas/FilterConditionsDateTime"
              }
            },
            "nullable": true
          }
        }
      },
      "ParameterFiltersListPublications": {
        "title": "ParameterFiltersListPublications",
        "type": "object",
        "properties": {
          "junction": {
            "$ref": "#/components/schemas/Junction"
          },
          "failure_code": {
            "title": "ParameterFiltersListPublicationsFailureCode",
            "type": "object",
            "description": "Filter publications by ids.",
            "properties": {
              "conditions": {
                "$ref": "#/components/schemas/FilterConditionsString"
              }
            },
            "nullable": true
          },
          "result": {
            "title": "ParameterFiltersListPublicationsResult",
            "type": "object",
            "description": "Filter publications by names.",
            "properties": {
              "conditions": {
                "$ref": "#/components/schemas/FilterConditionsString"
              }
            },
            "nullable": true
          },
          "customer_id": {
            "title": "ParameterFiltersListPublicationsCustomerId",
            "type": "object",
            "description": "Filter publications by customer ids.",
            "properties": {
              "conditions": {
                "$ref": "#/components/schemas/FilterConditionsString"
              }
            },
            "nullable": true
          },
          "campaign_name": {
            "title": "ParameterFiltersListPublicationsCampaignName",
            "type": "object",
            "description": "Filter publications by campaign names.",
            "properties": {
              "conditions": {
                "$ref": "#/components/schemas/FilterConditionsString"
              }
            },
            "nullable": true
          },
          "voucher_type": {
            "title": "ParameterFiltersListPublicationsVoucherType",
            "type": "object",
            "description": "Filter publications by voucher types.",
            "properties": {
              "conditions": {
                "$ref": "#/components/schemas/FilterConditionsString"
              }
            },
            "nullable": true
          },
          "is_referral_code": {
            "title": "ParameterFiltersListPublicationsIsReferralCode",
            "type": "object",
            "description": "Filter publications by is referall code.",
            "properties": {
              "conditions": {
                "$ref": "#/components/schemas/FilterConditionsString"
              }
            },
            "nullable": true
          },
          "parent_object_id": {
            "title": "ParameterFiltersListPublicationsParentObjectId",
            "type": "object",
            "description": "Filter publications by parent object id.",
            "properties": {
              "conditions": {
                "$ref": "#/components/schemas/FilterConditionsString"
              }
            },
            "nullable": true
          },
          "related_object_id": {
            "title": "ParameterFiltersListPublicationsRelatedObjectId",
            "type": "object",
            "description": "Filter publications by related object id.",
            "properties": {
              "conditions": {
                "$ref": "#/components/schemas/FilterConditionsString"
              }
            },
            "nullable": true
          },
          "source_id": {
            "title": "ParameterFiltersListPublicationsSourceId",
            "type": "object",
            "description": "Filter publications by source id.",
            "properties": {
              "conditions": {
                "$ref": "#/components/schemas/FilterConditionsString"
              }
            },
            "nullable": true
          }
        }
      },
      "ParameterFiltersListRedemptions": {
        "title": "ParameterFiltersListRedemptions",
        "type": "object",
        "properties": {
          "voucher_code": {
            "title": "ParameterFiltersListRedemptionsVoucherCode",
            "type": "object",
            "description": "Unique voucher code.",
            "properties": {
              "conditions": {
                "$ref": "#/components/schemas/FilterConditionsString"
              }
            },
            "nullable": true
          },
          "related_object_id": {
            "title": "ParameterFiltersListRedemptionsRelatedObjectId",
            "type": "object",
            "description": "Unique related object ID, i.e. v_hS8JFl8S6lNcd1L69wLIoXgTio7eWEgk.",
            "properties": {
              "conditions": {
                "$ref": "#/components/schemas/FilterConditionsString"
              }
            },
            "nullable": true
          },
          "related_object_parent_id": {
            "title": "ParameterFiltersListRedemptionsRelatedObjectParentId",
            "type": "object",
            "description": "Unique related object parent ID, i.e. camp_22noMlhTADb7Fq2UL3vWu3d1.",
            "properties": {
              "conditions": {
                "$ref": "#/components/schemas/FilterConditionsString"
              }
            },
            "nullable": true
          },
          "parent_redemption_id": {
            "title": "ParameterFiltersListRedemptionsParentRedemptionId",
            "type": "object",
            "description": "Unique parent redemption ID, i.e. r_0c5952900bcbfd54b6.",
            "properties": {
              "conditions": {
                "$ref": "#/components/schemas/FilterConditionsString"
              }
            },
            "nullable": true
          },
          "failure_code": {
            "title": "ParameterFiltersListRedemptionsFailureCode",
            "type": "object",
            "description": "Failure code, i.e. quantity_exceeded.",
            "properties": {
              "conditions": {
                "$ref": "#/components/schemas/FilterConditionsString"
              }
            },
            "nullable": true
          },
          "result": {
            "title": "ParameterFiltersListRedemptionsResult",
            "type": "object",
            "description": "Result, i.e. `SUCCESS` or `FAILURE`.",
            "properties": {
              "conditions": {
                "$ref": "#/components/schemas/FilterConditionsString"
              }
            },
            "nullable": true
          },
          "object": {
            "title": "ParameterFiltersListRedemptionsObject",
            "type": "object",
            "description": "Specify which type of object to return, i.e. `redemption` or `redemption_rollback`.",
            "properties": {
              "conditions": {
                "$ref": "#/components/schemas/FilterConditionsString"
              }
            },
            "nullable": true
          },
          "customer_id": {
            "title": "ParameterFiltersListRedemptionsCustomerId",
            "type": "object",
            "description": "Unique customer ID, i.e. cust_sehkNIi8Uq2qQuRqSr7xn4Zi.",
            "properties": {
              "conditions": {
                "$ref": "#/components/schemas/FilterConditionsString"
              }
            },
            "nullable": true
          },
          "campaign_name": {
            "title": "ParameterFiltersListRedemptionsCampaignName",
            "type": "object",
            "description": "Campaign name.",
            "properties": {
              "conditions": {
                "$ref": "#/components/schemas/FilterConditionsString"
              }
            },
            "nullable": true
          },
          "user_login": {
            "title": "ParameterFiltersListRedemptionsUserLogin",
            "type": "object",
            "description": "User login used to login to Voucherify, i.e. name.lastname@email.com",
            "properties": {
              "conditions": {
                "$ref": "#/components/schemas/FilterConditionsString"
              }
            },
            "nullable": true
          },
          "junction": {
            "$ref": "#/components/schemas/Junction"
          }
        }
      },
      "ParameterFiltersListReferralsRedeemableHolders": {
        "title": "ParameterFiltersListReferralsRedeemableHolders",
        "type": "object",
        "properties": {
          "id": {
            "title": "ParameterFiltersListReferralsRedeemableHoldersId",
            "type": "object",
            "description": "Unique redeemable holder ID, i.e. `rh_0e77502f84f0f4a6a8`.",
            "properties": {
              "conditions": {
                "$ref": "#/components/schemas/FilterConditionsString"
              }
            },
            "nullable": true
          },
          "created_at": {
            "title": "ParameterFiltersListReferralsRedeemableHoldersCreatedAt",
            "description": "Timestamp representing the date and time when the redeemable was added to the holder. The value is shown in the ISO 8601 format.",
            "type": "object",
            "properties": {
              "conditions": {
                "$ref": "#/components/schemas/FilterConditionsDateTime"
              }
            },
            "nullable": true
          },
          "holder_role": {
            "title": "ParameterFiltersListReferralsRedeemableHoldersHolderRole",
            "type": "object",
            "description": "Holder role of the redeemable. Allowed values:\n`REFEREE`,\n`REFERRER`",
            "properties": {
              "conditions": {
                "properties": {
                  "$in": {
                    "type": "array",
                    "description": "Array of resource values that should be included in the results (multiple values).",
                    "items": {
                      "type": "string",
                      "enum": [
                        "REFEREE",
                        "REFERRER"
                      ]
                    },
                    "nullable": true
                  },
                  "$not_in": {
                    "type": "array",
                    "description": "Array of resource values that should be included in the results (multiple values).",
                    "items": {
                      "type": "string",
                      "enum": [
                        "REFEREE",
                        "REFERRER"
                      ]
                    },
                    "nullable": true
                  },
                  "$is": {
                    "type": "string",
                    "description": "Value is exactly this value (single value).",
                    "enum": [
                      "REFEREE",
                      "REFERRER"
                    ],
                    "nullable": true
                  },
                  "$is_not": {
                    "type": "string",
                    "description": "Results omit this value (single value).",
                    "enum": [
                      "REFEREE",
                      "REFERRER"
                    ],
                    "nullable": true
                  },
                  "$has_value": {
                    "type": "string",
                    "description": "Value is NOT null. The value for this parameter is an empty string.",
                    "nullable": true
                  },
                  "$is_unknown": {
                    "type": "string",
                    "description": "Value is null. The value for this parameter is an empty string.",
                    "nullable": true
                  },
                  "$starts_with": {
                    "type": "string",
                    "description": "Value starts with the specified string.",
                    "nullable": true
                  },
                  "$ends_with": {
                    "type": "string",
                    "description": "Value ends with the specified string.",
                    "nullable": true
                  }
                }
              }
            },
            "nullable": true
          },
          "customer_id": {
            "title": "ParameterFiltersListReferralsRedeemableHoldersCustomerId",
            "type": "object",
            "description": "Unique customer ID, i.e. `cust_sehkNIi8Uq2qQuRqSr7xn4Zi`.",
            "properties": {
              "conditions": {
                "$ref": "#/components/schemas/FilterConditionsString"
              }
            },
            "nullable": true
          },
          "junction": {
            "$ref": "#/components/schemas/Junction"
          }
        }
      },
      "ParameterFiltersListTemplates": {
        "title": "ParameterFiltersListTemplates",
        "type": "object",
        "properties": {
          "junction": {
            "$ref": "#/components/schemas/Junction"
          },
          "id": {
            "title": "ParameterFiltersListTemplatesId",
            "type": "object",
            "description": "Unique template ID.",
            "properties": {
              "conditions": {
                "$ref": "#/components/schemas/FilterConditionsString"
              }
            },
            "nullable": true
          },
          "name": {
            "title": "ParameterFiltersListTemplatesName",
            "type": "object",
            "description": "Unique user-defined template name.",
            "properties": {
              "conditions": {
                "$ref": "#/components/schemas/FilterConditionsString"
              }
            },
            "nullable": true
          },
          "campaign_type": {
            "title": "ParameterFiltersListTemplatesCampaignType",
            "type": "object",
            "description": "Campaign template campaign type.",
            "properties": {
              "conditions": {
                "title": "ParameterFiltersListTemplatesCampaignTypeConditions",
                "type": "object",
                "description": "Data filters used to narrow down the data records to be returned in the result.",
                "properties": {
                  "$in": {
                    "title": "ParameterFiltersListTemplatesCampaignTypeConditionsIn",
                    "type": "array",
                    "description": "Array of resource values that should be included in the results (multiple values).",
                    "items": {
                      "title": "ParameterFiltersListTemplatesCampaignTypeConditionsInItem",
                      "type": "string",
                      "enum": [
                        "DISCOUNT_COUPONS",
                        "GIFT_VOUCHERS"
                      ]
                    },
                    "nullable": true
                  },
                  "$not_in": {
                    "title": "ParameterFiltersListTemplatesCampaignTypeConditionsNotIn",
                    "type": "array",
                    "description": "Array of resource values that should be included in the results (multiple values).",
                    "items": {
                      "title": "ParameterFiltersListTemplatesCampaignTypeConditionsNotInItem",
                      "type": "string",
                      "enum": [
                        "DISCOUNT_COUPONS",
                        "GIFT_VOUCHERS"
                      ]
                    },
                    "nullable": true
                  },
                  "$is": {
                    "type": "string",
                    "description": "Value is exactly this value (single value).",
                    "enum": [
                      "DISCOUNT_COUPONS",
                      "GIFT_VOUCHERS"
                    ],
                    "nullable": true
                  },
                  "$is_not": {
                    "type": "string",
                    "description": "Results omit this value (single value).",
                    "enum": [
                      "DISCOUNT_COUPONS",
                      "GIFT_VOUCHERS"
                    ],
                    "nullable": true
                  },
                  "$has_value": {
                    "type": "string",
                    "description": "Value is NOT null. The value for this parameter is an empty string.",
                    "nullable": true
                  },
                  "$is_unknown": {
                    "type": "string",
                    "description": "Value is null. The value for this parameter is an empty string.",
                    "nullable": true
                  },
                  "$starts_with": {
                    "type": "string",
                    "description": "Value starts with the specified string.",
                    "nullable": true
                  },
                  "$ends_with": {
                    "type": "string",
                    "description": "Value ends with the specified string.",
                    "nullable": true
                  }
                },
                "nullable": true
              }
            },
            "nullable": true
          }
        }
      },
      "ParameterInteger": {
        "title": "ParameterInteger",
        "type": "integer"
      },
      "ParameterLimit": {
        "title": "ParameterLimit",
        "type": "integer",
        "maximum": 100,
        "minimum": 1
      },
      "ParameterLocationId": {
        "title": "ParameterLocationId",
        "type": "string",
        "example": "loc_NoMGXmHO9OUs7iz9mGWpamma"
      },
      "ParameterLoyaltyTierId": {
        "title": "ParameterLoyaltyTierId",
        "type": "string",
        "example": "promo_2EnAik6Jt7dKTOMkRTIgEjZH"
      },
      "ParameterMemberId": {
        "title": "ParameterMemberId",
        "type": "string",
        "example": "MmFAzfDe"
      },
      "ParameterMetadataSchemaId": {
        "title": "ParameterMetadataSchemaId",
        "type": "string",
        "example": "ms_f0r4hm3ta6a4a5ch3ma"
      },
      "ParameterObject": {
        "title": "ParameterObject",
        "type": "object"
      },
      "ParameterOrderCreatedAt": {
        "title": "ParameterOrderCreatedAt",
        "type": "string",
        "enum": [
          "created_at",
          "-created_at"
        ]
      },
      "ParameterOrderId": {
        "title": "ParameterOrderId",
        "type": "string",
        "example": "ord_smEh8p1p6W6DgOmeERk092LG"
      },
      "ParameterOrderListAllPromotionStacks": {
        "title": "ParameterOrderListAllPromotionStacks",
        "type": "string",
        "enum": [
          "created_at",
          "-created_at",
          "updated_at",
          "-updated_at",
          "name",
          "-name"
        ]
      },
      "ParameterOrderListBin": {
        "title": "ParameterOrderListBin",
        "type": "string",
        "enum": [
          "id",
          "-id"
        ]
      },
      "ParameterOrderListCampaigns": {
        "title": "ParameterOrderListCampaigns",
        "type": "string",
        "enum": [
          "created_at",
          "-created_at",
          "updated_at",
          "-updated_at"
        ]
      },
      "ParameterOrderListCustomers": {
        "title": "ParameterOrderListCustomers",
        "type": "string",
        "enum": [
          "created_at",
          "-created_at",
          "updated_at",
          "-updated_at",
          "source_id",
          "-source_id"
        ]
      },
      "ParameterOrderListEarningRules": {
        "title": "ParameterOrderListEarningRules",
        "type": "string",
        "enum": [
          "created_at",
          "-created_at",
          "updated_at",
          "-updated_at"
        ]
      },
      "ParameterOrderListExports": {
        "title": "ParameterOrderListExports",
        "type": "string",
        "enum": [
          "created_at",
          "-created_at",
          "status",
          "-status"
        ]
      },
      "ParameterOrderListLocations": {
        "title": "ParameterOrderListLocations",
        "type": "string",
        "enum": [
          "created_at",
          "-created_at",
          "updated_at",
          "-updated_at"
        ]
      },
      "ParameterOrderListLoyaltyTiers": {
        "title": "ParameterOrderListLoyaltyTiers",
        "type": "string",
        "enum": [
          "created_at",
          "-created_at",
          "updated_at",
          "-updated_at"
        ]
      },
      "ParameterOrderListOrders": {
        "title": "ParameterOrderListOrders",
        "type": "string",
        "enum": [
          "created_at",
          "-created_at",
          "updated_at",
          "-updated_at"
        ]
      },
      "ParameterOrderListPendingPoints": {
        "title": "ParameterOrderListPendingPoints",
        "type": "string",
        "enum": [
          "id",
          "-id"
        ]
      },
      "ParameterOrderListPromotionTiers": {
        "title": "ParameterOrderListPromotionTiers",
        "type": "string",
        "enum": [
          "created_at",
          "-created_at",
          "updated_at",
          "-updated_at"
        ]
      },
      "ParameterOrderListPromotionTiersClientSide": {
        "title": "ParameterOrderListPromotionTiersClientSide",
        "type": "string",
        "enum": [
          "created_at",
          "-created_at",
          "updated_at",
          "-updated_at"
        ]
      },
      "ParameterOrderListPublications": {
        "title": "ParameterOrderListPublications",
        "type": "string",
        "enum": [
          "id",
          "-id",
          "voucher_code",
          "-voucher_code",
          "tracking_id",
          "-tracking_id",
          "customer_id",
          "-customer_id",
          "created_at",
          "-created_at",
          "channel",
          "-channel"
        ]
      },
      "ParameterOrderListRedeemables": {
        "title": "ParameterOrderListRedeemables",
        "type": "string",
        "enum": [
          "id",
          "-id"
        ]
      },
      "ParameterOrderListRedemptions": {
        "title": "ParameterOrderListRedemptions",
        "type": "string",
        "enum": [
          "created_at",
          "-created_at",
          "id",
          "-id",
          "voucher_code",
          "-voucher_code",
          "tracking_id",
          "-tracking_id",
          "customer_id",
          "-customer_id"
        ]
      },
      "ParameterOrderListTransactions": {
        "title": "ParameterOrderListTransactions",
        "type": "string",
        "enum": [
          "id",
          "-id"
        ]
      },
      "ParameterOrderListValidationRuleAssignments": {
        "title": "ParameterOrderListValidationRuleAssignments",
        "type": "string",
        "enum": [
          "created_at",
          "-created_at"
        ]
      },
      "ParameterOrderListValidationRules": {
        "title": "ParameterOrderListValidationRules",
        "type": "string",
        "enum": [
          "created_at",
          "-created_at",
          "updated_at",
          "-updated_at",
          "name",
          "-name"
        ]
      },
      "ParameterOrderVouchers": {
        "title": "ParameterOrderVouchers",
        "type": "string",
        "enum": [
          "created_at",
          "-created_at",
          "updated_at",
          "-updated_at",
          "code",
          "-code"
        ]
      },
      "ParameterPage": {
        "title": "ParameterPage",
        "type": "integer",
        "minimum": 1,
        "maximum": 100
      },
      "ParameterProductCollectionId": {
        "title": "ParameterProductCollectionId",
        "type": "string",
        "example": "pc_41V4DiQQO8YGqj0J2oZD57j4"
      },
      "ParameterProductId": {
        "title": "ParameterProductId",
        "type": "string",
        "example": "prod_3ttSkdxGuAfcv3"
      },
      "ParameterProjectId": {
        "title": "ParameterProjectId",
        "type": "string",
        "example": "proj_TrlkLiH4"
      },
      "ParameterPromotionStackId": {
        "title": "ParameterPromotionStackId",
        "type": "string",
        "example": "stack_KOIde7AUf08at12lZ1r3OfFL"
      },
      "ParameterPromotionTierId": {
        "title": "ParameterPromotionTierId",
        "type": "string",
        "example": "promo_2EnAik6Jt7dKTOMkRTIgEjZH"
      },
      "ParameterRedeemableHolderId": {
        "title": "ParameterRedeemableHolderId",
        "type": "string",
        "example": "rh_0f1ab744ce8277d0dc"
      },
      "ParameterRedemptionId": {
        "title": "ParameterRedemptionId",
        "type": "string",
        "example": "r_0ba186c4824e4881e1"
      },
      "ParameterResultListPublications": {
        "title": "ParameterResultListPublications",
        "type": "string",
        "enum": [
          "SUCCESS",
          "FAILURE"
        ]
      },
      "ParameterRewardAssignmentId": {
        "title": "ParameterRewardAssignmentId",
        "type": "string",
        "example": "rewa_m9hEAu10KsPcLhGXiHG85aY0"
      },
      "ParameterRewardId": {
        "title": "ParameterRewardId",
        "type": "string",
        "example": "rew_2erjvECLs92GYzKbak3QkyTV"
      },
      "ParameterSegmentId": {
        "title": "ParameterSegmentId",
        "type": "string",
        "example": "seg_DNAOhUtJffvX0f57ajLMFBYR"
      },
      "ParameterSkuId": {
        "title": "ParameterSkuId",
        "type": "string",
        "example": "sku_0b661e41eccd35a8e9"
      },
      "ParameterStackingRulesId": {
        "title": "ParameterStackingRulesId",
        "type": "string",
        "example": "stk_0d6264108617006147"
      },
      "ParameterString": {
        "title": "ParameterString",
        "type": "string"
      },
      "ParameterTemplatesList": {
        "title": "ParameterTemplatesList",
        "type": "string",
        "enum": [
          "id",
          "-id"
        ]
      },
      "ParameterUserId": {
        "title": "ParameterUserId",
        "type": "string",
        "example": "user_v18mvPOjOXE5733eO4cAz8k1pn492wKK"
      },
      "ParameterValidationRuleId": {
        "title": "ParameterValidationRuleId",
        "type": "string",
        "example": "val_TU4de3EP4dlL"
      },
      "ParameterVoucherTypeListPublications": {
        "title": "ParameterVoucherTypeListPublications",
        "type": "string",
        "enum": [
          "discount",
          "loyalty"
        ]
      },
      "ParameterWebhookId": {
        "title": "ParameterWebhookId",
        "type": "string",
        "example": "wh_Fk1HzL9lqC1lpuIFxp3TShB4"
      },
      "ParametersFiltersListCampaignTransactions": {
        "title": "ParametersFiltersListCampaignTransactions",
        "type": "object",
        "properties": {
          "junction": {
            "$ref": "#/components/schemas/Junction"
          },
          "id": {
            "$ref": "#/components/schemas/FilterConditionsString"
          },
          "voucher_id": {
            "$ref": "#/components/schemas/FilterConditionsString"
          }
        }
      },
      "ProductCollectionsCreateRequestBody": {
        "title": "ProductCollectionsCreateRequestBody",
        "type": "object",
        "properties": {
          "type": {
            "description": "Show that the product collection is static (manually selected products).",
            "default": "STATIC",
            "enum": [
              "STATIC"
            ]
          },
          "name": {
            "type": "string",
            "description": "Unique user-defined product collection name.",
            "nullable": true
          },
          "products": {
            "title": "ProductCollectionsCreateRequestBodyProducts",
            "type": "array",
            "description": "Defines a set of products for a `STATIC` product collection type.",
            "items": {
              "title": "ProductCollectionsCreateRequestBodyProductsItem",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "example": "prod_0a41bcf807c5fcaaf6",
                  "description": "The product ID."
                },
                "product_id": {
                  "type": "string",
                  "description": "Product ID for SKUs."
                },
                "object": {
                  "description": "Denotes the type of the object represented by the ID.",
                  "enum": [
                    "sku",
                    "product"
                  ]
                }
              },
              "required": [
                "id",
                "object"
              ]
            },
            "nullable": true
          },
          "filter": {
            "title": "ProductCollectionsCreateRequestBodyFilter",
            "type": "object",
            "description": "Defines a set of criteria and boundary conditions for an `AUTO_UPDATE` product collection type.",
            "required": [
              "junction"
            ],
            "nullable": true
          }
        }
      },
      "ProductCollectionsCreateResponseBody": {
        "title": "ProductCollectionsCreateResponseBody",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Product collection ID.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "example": "All Products",
            "description": "Unique user-defined product collection name.",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "Describes whether the product collection is dynamic (products come in and leave based on set criteria) or static (manually selected products).",
            "enum": [
              "STATIC",
              "AUTO_UPDATE"
            ],
            "nullable": true
          },
          "filter": {
            "title": "ProductCollectionsCreateResponseBodyFilter",
            "type": "object",
            "description": "Defines a set of criteria and boundary conditions for an `AUTO_UPDATE` product collection type.",
            "required": [
              "junction"
            ],
            "nullable": true
          },
          "products": {
            "title": "ProductCollectionsCreateResponseBodyProducts",
            "description": "Defines a set of products for a `STATIC` product collection type.",
            "type": "array",
            "items": {
              "title": "ProductCollectionsCreateResponseBodyProductsItem",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "example": "prod_0a41bcf807c5fcaaf6",
                  "description": "The product ID."
                },
                "product_id": {
                  "type": "string",
                  "description": "Product ID for SKUs."
                },
                "object": {
                  "type": "string",
                  "enum": [
                    "sku",
                    "product"
                  ],
                  "description": "Denotes the type of the object represented by the ID."
                }
              },
              "required": [
                "id",
                "object"
              ]
            },
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "example": "2021-12-09T12:51:29.898Z",
            "description": "Timestamp representing the date and time when the product collection was created. The value is shown in the ISO 8601 format.",
            "format": "date-time",
            "nullable": true
          },
          "object": {
            "type": "string",
            "description": "The type of the object represented by JSON. This object stores information about the static product collection.",
            "default": "products_collection",
            "enum": [
              "products_collection"
            ],
            "nullable": true
          }
        },
        "required": [],
        "description": "Response body schema for **POST** `v1/product-collections`."
      },
      "ProductCollectionsGetResponseBody": {
        "title": "ProductCollectionsGetResponseBody",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Product collection ID.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "example": "All Products",
            "description": "Unique user-defined product collection name.",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "Describes whether the product collection is dynamic (products come in and leave based on set criteria) or static (manually selected products).",
            "enum": [
              "STATIC",
              "AUTO_UPDATE"
            ],
            "nullable": true
          },
          "filter": {
            "title": "ProductCollectionsGetResponseBodyFilter",
            "type": "object",
            "description": "Defines a set of criteria and boundary conditions for an `AUTO_UPDATE` product collection type.",
            "required": [
              "junction"
            ],
            "nullable": true
          },
          "products": {
            "title": "ProductCollectionsGetResponseBodyProducts",
            "description": "Defines a set of products for a `STATIC` product collection type.",
            "type": "array",
            "items": {
              "title": "ProductCollectionsGetResponseBodyProductsItem",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "example": "prod_0a41bcf807c5fcaaf6",
                  "description": "The product ID."
                },
                "product_id": {
                  "type": "string",
                  "description": "Product ID for SKUs."
                },
                "object": {
                  "type": "string",
                  "enum": [
                    "sku",
                    "product"
                  ],
                  "description": "Denotes the type of the object represented by the ID."
                }
              },
              "required": [
                "id",
                "object"
              ]
            },
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "example": "2021-12-09T12:51:29.898Z",
            "description": "Timestamp representing the date and time when the product collection was created. The value is shown in the ISO 8601 format.",
            "format": "date-time",
            "nullable": true
          },
          "object": {
            "type": "string",
            "description": "The type of the object represented by JSON. This object stores information about the static product collection.",
            "default": "products_collection",
            "enum": [
              "products_collection"
            ],
            "nullable": true
          }
        },
        "required": [],
        "description": "Response body schema for **GET** `v1/product-collections/{productCollectionId}`."
      },
      "ProductCollectionsListResponseBody": {
        "title": "ProductCollectionsListResponseBody",
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "description": "The type of the object represented by JSON. This object stores information about product collections.",
            "default": "list",
            "enum": [
              "list"
            ],
            "nullable": true
          },
          "data_ref": {
            "type": "string",
            "default": "data",
            "description": "Identifies the name of the JSON property that contains the array of product collections.",
            "enum": [
              "data"
            ],
            "nullable": true
          },
          "data": {
            "title": "ProductCollectionsListResponseBodyData",
            "description": "A dictionary that contains an array of product collections and their details.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductCollectionsItem"
            },
            "nullable": true
          },
          "total": {
            "type": "integer",
            "description": "Total number of product collections.",
            "nullable": true
          }
        },
        "required": [],
        "description": "Response body schema for **GET** `v1/product-collections`."
      },
      "ProductCollectionsProductsListResponseBody": {
        "title": "ProductCollectionsProductsListResponseBody",
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "description": "The type of the object represented by JSON. This object stores information about products and SKUs.",
            "default": "list",
            "nullable": true
          },
          "data_ref": {
            "type": "string",
            "description": "Identifies the name of the JSON property that contains the array of products and SKUs.",
            "default": "data",
            "nullable": true
          },
          "data": {
            "title": "ProductCollectionsProductsListResponseBodyData",
            "type": "array",
            "items": {
              "title": "ProductCollectionsProductsListResponseBodyDataItem",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "source_id": {
                  "type": "string"
                },
                "name": {
                  "type": "string",
                  "nullable": true,
                  "description": "Unique user-defined product name.",
                  "example": "T-shirt"
                },
                "price": {
                  "type": "integer",
                  "nullable": true,
                  "description": "Unit price. It is represented by a value multiplied by 100 to accurately reflect 2 decimal places, such as `$100.00` being expressed as `10000`."
                },
                "attributes": {
                  "title": "ProductCollectionsProductsListResponseBodyDataItemAttributes",
                  "type": "array",
                  "description": "A list of product attributes whose values you can customize for given SKUs: `[\"color\",\"size\",\"ranking\"]`. Each child SKU can have a unique value for a given attribute.",
                  "items": {
                    "title": "ProductCollectionsProductsListResponseBodyDataItemAttributesItem",
                    "type": "string"
                  },
                  "nullable": true
                },
                "metadata": {
                  "title": "ProductCollectionsProductsListResponseBodyDataItemMetadata",
                  "type": "object",
                  "description": "The metadata object stores all custom attributes assigned to the product. A set of key/value pairs that you can attach to a product object. It can be useful for storing additional information about the product in a structured format. It can be used to create product collections. and The metadata object stores all custom attributes assigned to the SKU. A set of key/value pairs that you can attach to a SKU object. It can be useful for storing additional information about the SKU in a structured format. It can be used to create product collections."
                },
                "image_url": {
                  "type": "string"
                },
                "created_at": {
                  "type": "string"
                },
                "updated_at": {
                  "type": "string"
                },
                "object": {
                  "type": "string",
                  "enum": [
                    "product",
                    "sku"
                  ]
                },
                "product_id": {
                  "type": "string",
                  "example": "prod_0b15f6b9f650c16990",
                  "description": "The parent product's unique ID.",
                  "nullable": true
                },
                "sku": {
                  "type": "string",
                  "nullable": true,
                  "example": "Large Pink Shirt",
                  "description": "Unique user-defined SKU name."
                },
                "currency": {
                  "type": "string",
                  "nullable": true,
                  "description": "SKU price currency.",
                  "example": "USD"
                },
                "product": {
                  "$ref": "#/components/schemas/ProductWithoutSkus"
                }
              }
            },
            "nullable": true
          },
          "total": {
            "type": "integer",
            "description": "Total number of products & SKUs in the product collection.",
            "nullable": true
          }
        },
        "required": [],
        "description": "Response body schema for **GET** `v1/product-collections/{productCollectionId}/products`."
      },
      "ProductsCreateRequestBody": {
        "title": "ProductsCreateRequestBody",
        "type": "object",
        "description": "Request schema for **POST** `v1/products`.",
        "properties": {
          "id": {
            "type": "string",
            "example": "prod_5h0wc453_1",
            "description": "A unique identifier that represents the product and is assigned by Voucherify.",
            "nullable": true
          },
          "source_id": {
            "type": "string",
            "example": "productSourceID16",
            "description": "Unique product source ID.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Unique user-defined product name.",
            "example": "T-shirt",
            "nullable": true
          },
          "price": {
            "type": "integer",
            "description": "Unit price. It is represented by a value multiplied by 100 to accurately reflect 2 decimal places, such as `$100.00` being expressed as `10000`.",
            "nullable": true
          },
          "attributes": {
            "title": "ProductsCreateRequestBodyAttributes",
            "type": "array",
            "description": "A list of product attributes whose values you can customize for given SKUs: `[\"color\",\"size\",\"ranking\"]`. Each child SKU can have a unique value for a given attribute.",
            "items": {
              "title": "ProductsCreateRequestBodyAttributesItem",
              "type": "string"
            },
            "nullable": true
          },
          "metadata": {
            "title": "ProductsCreateRequestBodyMetadata",
            "type": "object",
            "description": "The metadata object stores all custom attributes assigned to the product. A set of key/value pairs that you can attach to a product object. It can be useful for storing additional information about the product in a structured format.",
            "nullable": true
          },
          "image_url": {
            "type": "string",
            "description": "The HTTPS URL pointing to the .png or .jpg file that will be used to render the product image.",
            "example": "https://images.com/original.jpg",
            "nullable": true
          }
        }
      },
      "ProductsCreateResponseBody": {
        "title": "ProductsCreateResponseBody",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique product ID assigned by Voucherify.",
            "example": "prod_0b1da8105693710357",
            "nullable": true
          },
          "source_id": {
            "type": "string",
            "nullable": true,
            "example": "productSourceID16",
            "description": "Unique product source ID."
          },
          "name": {
            "type": "string",
            "nullable": true,
            "description": "Unique user-defined product name.",
            "example": "T-shirt"
          },
          "price": {
            "type": "integer",
            "nullable": true,
            "description": "Unit price. It is represented by a value multiplied by 100 to accurately reflect 2 decimal places, such as `$100.00` being expressed as `10000`."
          },
          "attributes": {
            "title": "ProductsCreateResponseBodyAttributes",
            "type": "array",
            "description": "A list of product attributes whose values you can customize for given SKUs: `[\"color\",\"size\",\"ranking\"]`. Each child SKU can have a unique value for a given attribute.",
            "items": {
              "title": "ProductsCreateResponseBodyAttributesItem",
              "type": "string"
            },
            "nullable": true
          },
          "metadata": {
            "title": "ProductsCreateResponseBodyMetadata",
            "type": "object",
            "description": "The metadata object stores all custom attributes assigned to the product. A set of key/value pairs that you can attach to a product object. It can be useful for storing additional information about the product in a structured format. It can be used to create product collections.",
            "nullable": true
          },
          "image_url": {
            "type": "string",
            "nullable": true,
            "description": "The HTTPS URL pointing to the .png or .jpg file that will be used to render the product image.",
            "example": "https://images.com/original.jpg"
          },
          "created_at": {
            "type": "string",
            "description": "Timestamp representing the date and time when the product was created. The value is shown in the ISO 8601 format.",
            "example": "2022-05-23T06:52:55.008Z",
            "format": "date-time",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "nullable": true,
            "description": "Timestamp representing the date and time when the product was updated. The value is shown in the ISO 8601 format.",
            "example": "2022-05-23T09:24:07.405Z",
            "format": "date-time"
          },
          "object": {
            "type": "string",
            "description": "The type of the object represented by JSON. This object stores information about the product.",
            "default": "product",
            "enum": [
              "product"
            ],
            "nullable": true
          },
          "skus": {
            "$ref": "#/components/schemas/SkusListForProduct"
          }
        },
        "description": "Response body schema for **POST** `v1/products`."
      },
      "ProductsGetResponseBody": {
        "title": "ProductsGetResponseBody",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique product ID assigned by Voucherify.",
            "example": "prod_0b1da8105693710357",
            "nullable": true
          },
          "source_id": {
            "type": "string",
            "nullable": true,
            "example": "productSourceID16",
            "description": "Unique product source ID."
          },
          "name": {
            "type": "string",
            "nullable": true,
            "description": "Unique user-defined product name.",
            "example": "T-shirt"
          },
          "price": {
            "type": "integer",
            "nullable": true,
            "description": "Unit price. It is represented by a value multiplied by 100 to accurately reflect 2 decimal places, such as `$100.00` being expressed as `10000`."
          },
          "attributes": {
            "title": "ProductsGetResponseBodyAttributes",
            "type": "array",
            "description": "A list of product attributes whose values you can customize for given SKUs: `[\"color\",\"size\",\"ranking\"]`. Each child SKU can have a unique value for a given attribute.",
            "items": {
              "title": "ProductsGetResponseBodyAttributesItem",
              "type": "string"
            },
            "nullable": true
          },
          "metadata": {
            "title": "ProductsGetResponseBodyMetadata",
            "type": "object",
            "description": "The metadata object stores all custom attributes assigned to the product. A set of key/value pairs that you can attach to a product object. It can be useful for storing additional information about the product in a structured format. It can be used to create product collections.",
            "nullable": true
          },
          "image_url": {
            "type": "string",
            "nullable": true,
            "description": "The HTTPS URL pointing to the .png or .jpg file that will be used to render the product image.",
            "example": "https://images.com/original.jpg"
          },
          "created_at": {
            "type": "string",
            "description": "Timestamp representing the date and time when the product was created. The value is shown in the ISO 8601 format.",
            "example": "2022-05-23T06:52:55.008Z",
            "format": "date-time",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "nullable": true,
            "description": "Timestamp representing the date and time when the product was updated. The value is shown in the ISO 8601 format.",
            "example": "2022-05-23T09:24:07.405Z",
            "format": "date-time"
          },
          "object": {
            "type": "string",
            "description": "The type of the object represented by JSON. This object stores information about the product.",
            "default": "product",
            "enum": [
              "product"
            ],
            "nullable": true
          },
          "skus": {
            "$ref": "#/components/schemas/SkusListForProduct"
          }
        },
        "description": "Response body schema for **GET** `v1/products/{productId}`."
      },
      "ProductsImportCSVRequestBody": {
        "title": "ProductsImportCSVRequestBody",
        "type": "object",
        "format": "binary",
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "description": "File path.",
            "nullable": true
          }
        },
        "required": [],
        "description": "Response body schema for **POST** `v1/products/importCSV`."
      },
      "ProductsImportCsvCreateResponseBody": {
        "title": "ProductsImportCsvCreateResponseBody",
        "type": "object",
        "properties": {
          "async_action_id": {
            "type": "string",
            "example": "aa_0a875d56c805df6601",
            "description": "The ID of the scheduled asynchronous action.",
            "nullable": true
          }
        },
        "required": [],
        "description": "Response body schema for **POST** `v1/products/importCSV`."
      },
      "ProductsListResponseBody": {
        "title": "ProductsListResponseBody",
        "type": "object",
        "description": "Response body schema for **GET** `v1/products`.",
        "properties": {
          "object": {
            "type": "string",
            "description": "The type of the object represented by JSON. This object stores information about products in a dictionary.",
            "default": "list",
            "nullable": true
          },
          "data_ref": {
            "type": "string",
            "description": "Identifies the name of the attribute that contains the array of product objects.",
            "default": "products",
            "nullable": true
          },
          "products": {
            "title": "ProductsListResponseBodyProducts",
            "type": "array",
            "description": "Contains array of product objects.",
            "items": {
              "$ref": "#/components/schemas/Product"
            },
            "nullable": true
          },
          "total": {
            "type": "integer",
            "description": "Total number of product objects.",
            "nullable": true
          }
        },
        "required": []
      },
      "ProductsMetadataUpdateInBulkRequestBody": {
        "title": "ProductsMetadataUpdateInBulkRequestBody",
        "type": "object",
        "description": "Request schema for **POST** `v1/products/metadata/async`.",
        "properties": {
          "source_ids": {
            "title": "ProductsMetadataUpdateInBulkRequestBodySourceIds",
            "type": "array",
            "description": "Array of unique product source IDs.",
            "items": {
              "title": "ProductsMetadataUpdateInBulkRequestBodySourceIdsItem",
              "type": "string"
            },
            "nullable": true
          },
          "metadata": {
            "title": "ProductsMetadataUpdateInBulkRequestBodyMetadata",
            "type": "object",
            "description": "The metadata object stores all custom attributes assigned to the product. A set of key/value pairs that you can attach to a product object. It can be useful for storing additional information about the product in a structured format.",
            "nullable": true
          }
        },
        "required": []
      },
      "ProductsMetadataUpdateInBulkResponseBody": {
        "title": "ProductsMetadataUpdateInBulkResponseBody",
        "type": "object",
        "properties": {
          "async_action_id": {
            "type": "string",
            "example": "aa_0a875d56c805df6601",
            "description": "The ID of the scheduled asynchronous action.",
            "nullable": true
          }
        },
        "required": [],
        "description": "Response body schema for **POST** `v1/products/metadata/async`."
      },
      "ProductsSkusCreateRequestBody": {
        "title": "ProductsSkusCreateRequestBody",
        "type": "object",
        "description": "Request body schema for **POST** `v1/products/{productId}/skus",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique SKU ID.",
            "example": "sku_0c0c0012a9029bccef",
            "nullable": true
          },
          "source_id": {
            "type": "string",
            "example": "sku_source_id_4",
            "description": "A unique SKU identifier from your inventory system.",
            "nullable": true
          },
          "sku": {
            "type": "string",
            "example": "Large Pink Shirt",
            "description": "Unique user-defined SKU name.",
            "nullable": true
          },
          "price": {
            "type": "integer",
            "description": "SKU unit price. The value is multiplied by 100 to represent 2 decimal places. For example `10000 cents` for `$100.00`.",
            "nullable": true
          },
          "currency": {
            "type": "string",
            "description": "SKU price currency.",
            "example": "USD",
            "nullable": true
          },
          "attributes": {
            "title": "ProductsSkusCreateRequestBodyAttributes",
            "type": "object",
            "description": "The attributes object stores values for all custom attributes inherited by the SKU from the parent product. A set of key/value pairs that are attached to a SKU object and are unique to each SKU within a product family.",
            "nullable": true
          },
          "image_url": {
            "type": "string",
            "description": "The HTTPS URL pointing to the .png or .jpg file that will be used to render the SKU image.",
            "nullable": true
          },
          "metadata": {
            "title": "ProductsSkusCreateRequestBodyMetadata",
            "type": "object",
            "description": "The metadata object stores all custom attributes assigned to the SKU. A set of key/value pairs that you can attach to a SKU object. It can be useful for storing additional information about the SKU in a structured format.",
            "nullable": true
          }
        }
      },
      "ProductsSkusCreateResponseBody": {
        "title": "ProductsSkusCreateResponseBody",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "sku_0b1621b319d248b79f",
            "description": "A unique identifier that represents the SKU and is assigned by Voucherify.",
            "nullable": true
          },
          "source_id": {
            "type": "string",
            "nullable": true,
            "example": "sku_source_id_4",
            "description": "A unique SKU identifier from your inventory system."
          },
          "product_id": {
            "type": "string",
            "example": "prod_0b15f6b9f650c16990",
            "description": "The parent product's unique ID.",
            "nullable": true
          },
          "sku": {
            "type": "string",
            "nullable": true,
            "example": "Large Pink Shirt",
            "description": "Unique user-defined SKU name."
          },
          "price": {
            "type": "integer",
            "nullable": true,
            "description": "Unit price. It is represented by a value multiplied by 100 to accurately reflect 2 decimal places, such as `$100.00` being expressed as `10000`."
          },
          "currency": {
            "type": "string",
            "nullable": true,
            "description": "SKU price currency.",
            "example": "USD"
          },
          "attributes": {
            "title": "ProductsSkusCreateResponseBodyAttributes",
            "type": "object",
            "description": "The attributes object stores values for all custom attributes inherited by the SKU from the parent product. A set of key/value pairs that are attached to a SKU object and are unique to each SKU within a product family.",
            "nullable": true
          },
          "image_url": {
            "type": "string",
            "nullable": true,
            "description": "The HTTPS URL pointing to the .png or .jpg file that will be used to render the SKU image."
          },
          "metadata": {
            "title": "ProductsSkusCreateResponseBodyMetadata",
            "type": "object",
            "description": "The metadata object stores all custom attributes assigned to the SKU. A set of key/value pairs that you can attach to a SKU object. It can be useful for storing additional information about the SKU in a structured format. It can be used to create product collections.",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "example": "2022-05-17T10:36:30.187Z",
            "description": "Timestamp representing the date and time when the SKU was created. The value is shown in the ISO 8601 format.",
            "format": "date-time",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "nullable": true,
            "example": "2022-05-17T10:55:09.137Z",
            "description": "Timestamp representing the date and time when the SKU was updated. The value is shown in the ISO 8601 format.",
            "format": "date-time"
          },
          "object": {
            "type": "string",
            "default": "sku",
            "description": "The type of the object represented by JSON. This object stores information about the `SKU`.",
            "enum": [
              "sku"
            ],
            "nullable": true
          }
        },
        "required": [],
        "description": "Response body schema for **PUT** `v1/products/{productId}/skus`."
      },
      "ProductsSkusListResponseBody": {
        "title": "ProductsSkusListResponseBody",
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "description": "The type of the object represented by JSON. This object stores information about SKUs.",
            "default": "list",
            "nullable": true
          },
          "data_ref": {
            "type": "string",
            "description": "Identifies the name of the JSON property that contains the array of SKUs.",
            "default": "data",
            "nullable": true
          },
          "skus": {
            "title": "ProductsSkusListResponseBodySkus",
            "type": "array",
            "description": "A dictionary that contains an array of SKUs.",
            "items": {
              "$ref": "#/components/schemas/Sku"
            },
            "nullable": true
          },
          "total": {
            "type": "integer",
            "description": "Total number of SKUs in the product.",
            "nullable": true
          }
        },
        "required": [],
        "description": "Response body schema for **GET** `v1/products/{productId}/skus`."
      },
      "ProductsSkusUpdateRequestBody": {
        "title": "ProductsSkusUpdateRequestBody",
        "type": "object",
        "description": "Request body schema for **PUT** `v1/products/{productId}/skus/{skuId}`.",
        "properties": {
          "sku": {
            "type": "string",
            "example": "Large Pink Shirt",
            "description": "Unique user-defined SKU name.",
            "nullable": true
          },
          "price": {
            "type": "integer",
            "description": "SKU unit price. The value is multiplied by 100 to represent 2 decimal places. For example `10000 cents` for `$100.00`.",
            "nullable": true
          },
          "currency": {
            "type": "string",
            "description": "SKU price currency.",
            "nullable": true
          },
          "attributes": {
            "title": "ProductsSkusUpdateRequestBodyAttributes",
            "type": "object",
            "description": "The attributes object stores values for all custom attributes inherited by the SKU from the parent product. A set of key/value pairs that are attached to a SKU object and are unique to each SKU within a product family.",
            "nullable": true
          },
          "image_url": {
            "type": "string",
            "description": "The HTTPS URL pointing to the .png or .jpg file that will be used to render the SKU image.",
            "nullable": true
          },
          "metadata": {
            "title": "ProductsSkusUpdateRequestBodyMetadata",
            "type": "object",
            "description": "The metadata object stores all custom attributes assigned to the SKU. A set of key/value pairs that you can attach to a SKU object. It can be useful for storing additional information about the SKU in a structured format.",
            "nullable": true
          }
        }
      },
      "ProductsSkusUpdateResponseBody": {
        "title": "ProductsSkusUpdateResponseBody",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "sku_0b1621b319d248b79f",
            "description": "A unique identifier that represents the SKU and is assigned by Voucherify.",
            "nullable": true
          },
          "source_id": {
            "type": "string",
            "nullable": true,
            "example": "sku_source_id_4",
            "description": "A unique SKU identifier from your inventory system."
          },
          "product_id": {
            "type": "string",
            "example": "prod_0b15f6b9f650c16990",
            "description": "The parent product's unique ID.",
            "nullable": true
          },
          "sku": {
            "type": "string",
            "nullable": true,
            "example": "Large Pink Shirt",
            "description": "Unique user-defined SKU name."
          },
          "price": {
            "type": "integer",
            "nullable": true,
            "description": "Unit price. It is represented by a value multiplied by 100 to accurately reflect 2 decimal places, such as `$100.00` being expressed as `10000`."
          },
          "currency": {
            "type": "string",
            "nullable": true,
            "description": "SKU price currency.",
            "example": "USD"
          },
          "attributes": {
            "title": "ProductsSkusUpdateResponseBodyAttributes",
            "type": "object",
            "description": "The attributes object stores values for all custom attributes inherited by the SKU from the parent product. A set of key/value pairs that are attached to a SKU object and are unique to each SKU within a product family.",
            "nullable": true
          },
          "image_url": {
            "type": "string",
            "nullable": true,
            "description": "The HTTPS URL pointing to the .png or .jpg file that will be used to render the SKU image."
          },
          "metadata": {
            "title": "ProductsSkusUpdateResponseBodyMetadata",
            "type": "object",
            "description": "The metadata object stores all custom attributes assigned to the SKU. A set of key/value pairs that you can attach to a SKU object. It can be useful for storing additional information about the SKU in a structured format. It can be used to create product collections.",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "example": "2022-05-17T10:36:30.187Z",
            "description": "Timestamp representing the date and time when the SKU was created. The value is shown in the ISO 8601 format.",
            "format": "date-time",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "nullable": true,
            "example": "2022-05-17T10:55:09.137Z",
            "description": "Timestamp representing the date and time when the SKU was updated. The value is shown in the ISO 8601 format.",
            "format": "date-time"
          },
          "object": {
            "type": "string",
            "default": "sku",
            "description": "The type of the object represented by JSON. This object stores information about the `SKU`.",
            "enum": [
              "sku"
            ],
            "nullable": true
          }
        },
        "required": [],
        "description": "Response body schema for **PUT** `v1/products/{productId}/skus/{skuId}`."
      },
      "ProductsUpdateInBulkRequestBody": {
        "title": "ProductsUpdateInBulkRequestBody",
        "type": "object",
        "description": "Request schema for **POST** `v1/products/bulk/async`.",
        "properties": {
          "source_id": {
            "type": "string",
            "description": "Unique product source ID from your inventory system.",
            "example": "test_prod_id_1",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Unique user-defined product name.",
            "example": "T-shirt",
            "nullable": true
          },
          "price": {
            "type": "integer",
            "description": "Unit price. It is represented by a value multiplied by 100 to accurately reflect 2 decimal places, such as `$100.00` being expressed as `10000`.",
            "nullable": true
          },
          "attributes": {
            "title": "ProductsUpdateInBulkRequestBodyAttributes",
            "type": "array",
            "description": "A list of product attributes whose values you can customize for given SKUs: `[\"color\",\"size\",\"ranking\"]`. Each child SKU can have a unique value for a given attribute.",
            "items": {
              "title": "ProductsUpdateInBulkRequestBodyAttributesItem",
              "type": "string"
            },
            "nullable": true
          },
          "image_url": {
            "type": "string",
            "description": "The HTTPS URL pointing to the .png or .jpg file that will be used to render the product image.",
            "example": "https://images.com/original.jpg",
            "nullable": true
          },
          "metadata": {
            "title": "ProductsUpdateInBulkRequestBodyMetadata",
            "type": "object",
            "description": "The metadata object stores all custom attributes assigned to the product. A set of key/value pairs that you can attach to a product object. It can be useful for storing additional information about the product in a structured format.",
            "nullable": true
          }
        },
        "required": []
      },
      "ProductsUpdateInBulkResponseBody": {
        "title": "ProductsUpdateInBulkResponseBody",
        "type": "object",
        "properties": {
          "async_action_id": {
            "type": "string",
            "example": "aa_0a875d56c805df6601",
            "description": "The ID of the scheduled asynchronous action.",
            "nullable": true
          }
        },
        "required": [],
        "description": "Response body schema for **POST** `v1/products/bulk/async`."
      },
      "ProductsUpdateRequestBody": {
        "title": "ProductsUpdateRequestBody",
        "type": "object",
        "description": "Request schema for **PUT** `v1/products`.",
        "properties": {
          "name": {
            "type": "string",
            "description": "Unique user-defined product name.",
            "example": "T-shirt",
            "nullable": true
          },
          "price": {
            "type": "integer",
            "description": "Unit price. It is represented by a value multiplied by 100 to accurately reflect 2 decimal places, such as `$100.00` being expressed as `10000`.",
            "nullable": true
          },
          "attributes": {
            "title": "ProductsUpdateRequestBodyAttributes",
            "type": "array",
            "description": "A list of product attributes whose values you can customize for given SKUs: `[\"color\",\"size\",\"ranking\"]`. Each child SKU can have a unique value for a given attribute.",
            "items": {
              "title": "ProductsUpdateRequestBodyAttributesItem",
              "type": "string"
            },
            "nullable": true
          },
          "metadata": {
            "title": "ProductsUpdateRequestBodyMetadata",
            "type": "object",
            "description": "The metadata object stores all custom attributes assigned to the product. A set of key/value pairs that you can attach to a product object. It can be useful for storing additional information about the product in a structured format.",
            "nullable": true
          },
          "image_url": {
            "type": "string",
            "description": "The HTTPS URL pointing to the .png or .jpg file that will be used to render the product image.",
            "example": "https://images.com/original.jpg",
            "nullable": true
          }
        }
      },
      "ProductsUpdateResponseBody": {
        "title": "ProductsUpdateResponseBody",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique product ID assigned by Voucherify.",
            "example": "prod_0b1da8105693710357",
            "nullable": true
          },
          "source_id": {
            "type": "string",
            "nullable": true,
            "example": "productSourceID16",
            "description": "Unique product source ID."
          },
          "name": {
            "type": "string",
            "nullable": true,
            "description": "Unique user-defined product name.",
            "example": "T-shirt"
          },
          "price": {
            "type": "integer",
            "nullable": true,
            "description": "Unit price. It is represented by a value multiplied by 100 to accurately reflect 2 decimal places, such as `$100.00` being expressed as `10000`."
          },
          "attributes": {
            "title": "ProductsUpdateResponseBodyAttributes",
            "type": "array",
            "description": "A list of product attributes whose values you can customize for given SKUs: `[\"color\",\"size\",\"ranking\"]`. Each child SKU can have a unique value for a given attribute.",
            "items": {
              "title": "ProductsUpdateResponseBodyAttributesItem",
              "type": "string"
            },
            "nullable": true
          },
          "metadata": {
            "title": "ProductsUpdateResponseBodyMetadata",
            "type": "object",
            "description": "The metadata object stores all custom attributes assigned to the product. A set of key/value pairs that you can attach to a product object. It can be useful for storing additional information about the product in a structured format. It can be used to create product collections.",
            "nullable": true
          },
          "image_url": {
            "type": "string",
            "nullable": true,
            "description": "The HTTPS URL pointing to the .png or .jpg file that will be used to render the product image.",
            "example": "https://images.com/original.jpg"
          },
          "created_at": {
            "type": "string",
            "description": "Timestamp representing the date and time when the product was created. The value is shown in the ISO 8601 format.",
            "example": "2022-05-23T06:52:55.008Z",
            "format": "date-time",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "nullable": true,
            "description": "Timestamp representing the date and time when the product was updated. The value is shown in the ISO 8601 format.",
            "example": "2022-05-23T09:24:07.405Z",
            "format": "date-time"
          },
          "object": {
            "type": "string",
            "description": "The type of the object represented by JSON. This object stores information about the product.",
            "default": "product",
            "enum": [
              "product"
            ],
            "nullable": true
          },
          "skus": {
            "$ref": "#/components/schemas/SkusListForProduct"
          }
        },
        "description": "Response body schema for **PUT** `v1/products/{productId}`."
      },
      "PromotionsStacksCreateRequestBody": {
        "title": "PromotionsStacksCreateRequestBody",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Promotion stack name.",
            "nullable": true
          },
          "tiers": {
            "title": "PromotionsStacksCreateRequestBodyTiers",
            "type": "object",
            "required": [],
            "description": "Contains the tier configuration. A promotion stack can include up to 30 tiers.",
            "properties": {
              "ids": {
                "title": "PromotionsStacksCreateRequestBodyTiersIds",
                "type": "array",
                "minItems": 1,
                "description": "Contains the list of tiers in a pre-defined sequence.",
                "items": {
                  "title": "PromotionsStacksCreateRequestBodyTiersIdsItem",
                  "type": "string"
                },
                "nullable": true
              },
              "hierarchy_mode": {
                "type": "string",
                "default": "MANUAL",
                "enum": [
                  "MANUAL"
                ],
                "nullable": true
              }
            },
            "nullable": true
          },
          "category_id": {
            "type": "string",
            "description": "Promotion stack category ID.",
            "nullable": true
          }
        },
        "description": "Request body schema for **POST** `v1/promotions/{campaignId}/stacks`."
      },
      "PromotionsStacksCreateResponseBody": {
        "title": "PromotionsStacksCreateResponseBody",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Promotion stack name.",
            "nullable": true
          },
          "tiers": {
            "title": "PromotionsStacksCreateResponseBodyTiers",
            "type": "object",
            "required": [],
            "description": "Contains the tier configuration. A promotion stack can include up to 30 tiers.",
            "properties": {
              "ids": {
                "title": "PromotionsStacksCreateResponseBodyTiersIds",
                "type": "array",
                "minItems": 1,
                "description": "Contains the list of tiers in a pre-defined sequence.",
                "items": {
                  "title": "PromotionsStacksCreateResponseBodyTiersIdsItem",
                  "type": "string"
                },
                "nullable": true
              },
              "hierarchy_mode": {
                "type": "string",
                "default": "MANUAL",
                "enum": [
                  "MANUAL"
                ],
                "nullable": true
              }
            },
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "Unique promotion stack ID.",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp representing the date and time when the promotion stack was created. The value is shown in the ISO 8601 format.",
            "nullable": true
          },
          "campaign_id": {
            "type": "string",
            "description": "Promotion stack's parent campaign's unique ID.",
            "nullable": true
          },
          "object": {
            "type": "string",
            "default": "promotion_stack",
            "enum": [
              "promotion_stack"
            ],
            "description": "The type of the object represented by JSON.",
            "nullable": true
          },
          "category_id": {
            "type": "string",
            "nullable": true,
            "description": "Promotion stack category ID."
          },
          "categories": {
            "title": "PromotionsStacksCreateResponseBodyCategories",
            "type": "array",
            "description": "Details about the category assigned to the promotion stack.",
            "items": {
              "$ref": "#/components/schemas/PromotionStackBase"
            },
            "nullable": true
          }
        },
        "description": "Response body schema for **POST** `v1/promotions/{campaignId}/stacks`."
      },
      "PromotionsStacksGetResponseBody": {
        "title": "PromotionsStacksGetResponseBody",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Promotion stack name.",
            "nullable": true
          },
          "tiers": {
            "title": "PromotionsStacksGetResponseBodyTiers",
            "type": "object",
            "required": [],
            "description": "Contains the tier configuration. A promotion stack can include up to 30 tiers.",
            "properties": {
              "ids": {
                "title": "PromotionsStacksGetResponseBodyTiersIds",
                "type": "array",
                "minItems": 1,
                "description": "Contains the list of tiers in a pre-defined sequence.",
                "items": {
                  "title": "PromotionsStacksGetResponseBodyTiersIdsItem",
                  "type": "string"
                },
                "nullable": true
              },
              "hierarchy_mode": {
                "type": "string",
                "default": "MANUAL",
                "enum": [
                  "MANUAL"
                ],
                "nullable": true
              }
            },
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "Unique promotion stack ID.",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp representing the date and time when the promotion stack was created. The value is shown in the ISO 8601 format.",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp representing the date and time when the promotion stack was updated. The value is shown in the ISO 8601 format.",
            "nullable": true
          },
          "campaign_id": {
            "type": "string",
            "description": "Promotion stack's parent campaign's unique ID.",
            "nullable": true
          },
          "object": {
            "type": "string",
            "default": "promotion_stack",
            "enum": [
              "promotion_stack"
            ],
            "description": "The type of the object represented by JSON. ",
            "nullable": true
          },
          "category_id": {
            "type": "string",
            "nullable": true,
            "description": "Promotion stack category ID."
          },
          "categories": {
            "title": "PromotionsStacksGetResponseBodyCategories",
            "type": "array",
            "description": "Details about the category assigned to the promotion stack.",
            "items": {
              "$ref": "#/components/schemas/Category"
            },
            "nullable": true
          }
        },
        "description": "Response body schema for **GET** `v1/promotions/{campaignId}/stacks/{stackId}`."
      },
      "PromotionsStacksListResponseBody": {
        "title": "PromotionsStacksListResponseBody",
        "description": "Response body schema for **GET** `v1/promotions/stacks` and for **GET** `v1/promotions/{campaignId}/stacks`.",
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "default": "list",
            "enum": [
              "list"
            ],
            "description": "The type of the object represented by JSON. This object stores information about promotion stacks in a dictionary.",
            "nullable": true
          },
          "data_ref": {
            "type": "string",
            "default": "data",
            "enum": [
              "data"
            ],
            "description": "Identifies the name of the attribute that contains the array of promotion stack objects.",
            "nullable": true
          },
          "data": {
            "title": "PromotionsStacksListResponseBodyData",
            "type": "array",
            "description": "Contains array of promotion stack objects.",
            "items": {
              "$ref": "#/components/schemas/PromotionStack"
            },
            "nullable": true
          },
          "total": {
            "type": "integer",
            "minimum": 0,
            "description": "Total number of promotion stacks.",
            "nullable": true
          }
        },
        "required": []
      },
      "PromotionsStacksUpdateRequestBody": {
        "title": "PromotionsStacksUpdateRequestBody",
        "description": "Request Body schema for **PUT** `v1/promotions/{campaignId}/stacks/{stackId}`.",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Promotion stack name.",
            "nullable": true
          },
          "tiers": {
            "title": "PromotionsStacksUpdateRequestBodyTiers",
            "type": "object",
            "description": "Contains the tier configuration. A promotion stack can include up to 30 tiers.",
            "properties": {
              "ids": {
                "title": "PromotionsStacksUpdateRequestBodyTiersIds",
                "type": "array",
                "description": "Contains the list of tiers in a pre-defined sequence.",
                "items": {
                  "title": "PromotionsStacksUpdateRequestBodyTiersIdsItem",
                  "type": "string"
                },
                "nullable": true
              },
              "hierarchy_mode": {
                "type": "string",
                "default": "MANUAL",
                "enum": [
                  "MANUAL"
                ],
                "description": "Category hierarchy. Categories with lower hierarchy are processed before categories with higher hierarchy value.",
                "nullable": true
              }
            },
            "nullable": true
          },
          "category_id": {
            "type": "string",
            "description": "Promotion stack category ID.",
            "nullable": true
          }
        }
      },
      "PromotionsStacksUpdateResponseBody": {
        "title": "PromotionsStacksUpdateResponseBody",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Promotion stack name.",
            "nullable": true
          },
          "tiers": {
            "title": "PromotionsStacksUpdateResponseBodyTiers",
            "type": "object",
            "required": [],
            "description": "Contains the tier configuration. A promotion stack can include up to 30 tiers.",
            "properties": {
              "ids": {
                "title": "PromotionsStacksUpdateResponseBodyTiersIds",
                "type": "array",
                "minItems": 1,
                "description": "Contains the list of tiers in a pre-defined sequence.",
                "items": {
                  "title": "PromotionsStacksUpdateResponseBodyTiersIdsItem",
                  "type": "string"
                },
                "nullable": true
              },
              "hierarchy_mode": {
                "type": "string",
                "default": "MANUAL",
                "enum": [
                  "MANUAL"
                ],
                "nullable": true
              }
            },
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "Unique promotion stack ID.",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp representing the date and time when the promotion stack was created. The value is shown in the ISO 8601 format.",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp representing the date and time when the promotion stack was updated. The value is shown in the ISO 8601 format.",
            "nullable": true
          },
          "campaign_id": {
            "type": "string",
            "description": "Promotion stack's parent campaign's unique ID.",
            "nullable": true
          },
          "object": {
            "type": "string",
            "default": "promotion_stack",
            "enum": [
              "promotion_stack"
            ],
            "description": "The type of the object represented by JSON. ",
            "nullable": true
          },
          "category_id": {
            "type": "string",
            "nullable": true,
            "description": "Promotion stack category ID."
          },
          "categories": {
            "title": "PromotionsStacksUpdateResponseBodyCategories",
            "type": "array",
            "description": "Details about the category assigned to the promotion stack.",
            "items": {
              "$ref": "#/components/schemas/PromotionStackBase"
            },
            "nullable": true
          }
        },
        "description": "Response body schema for **PUT** `v1/promotions/{campaignId}/stacks/{stackId}`."
      },
      "PromotionsTiersCreateRequestBody": {
        "title": "PromotionsTiersCreateRequestBody",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the promotion tier.",
            "nullable": true
          },
          "banner": {
            "type": "string",
            "description": "Text to be displayed to your customers on your website.",
            "nullable": true
          },
          "metadata": {
            "title": "PromotionsTiersCreateRequestBodyMetadata",
            "type": "object",
            "description": "The metadata object stores all custom attributes assigned to the promotion tier. A set of key/value pairs that you can attach to a promotion tier object. It can be useful for storing additional information about the promotion tier in a structured format.",
            "nullable": true
          },
          "hierarchy": {
            "type": "integer",
            "description": "The promotions hierarchy defines the order in which the discounts from different tiers will be applied to a customer's order. If a customer qualifies for discounts from more than one tier, discounts will be applied in the order defined in the hierarchy.",
            "nullable": true
          },
          "active": {
            "type": "boolean",
            "description": "A flag to toggle the promotion tier on or off. You can disable a promotion tier even though it's within the active period defined by the `start_date` and `expiration_date`.  \n\n- `true` indicates an *active* promotion tier\n- `false` indicates an *inactive* promotion tier",
            "nullable": true
          },
          "start_date": {
            "type": "string",
            "description": "Activation timestamp defines when the promotion tier starts to be active in ISO 8601 format. Promotion tier is *inactive before* this date. ",
            "format": "date-time",
            "example": "2022-09-23T00:00:00.000Z",
            "nullable": true
          },
          "expiration_date": {
            "type": "string",
            "description": "Activation timestamp defines when the promotion tier expires in ISO 8601 format. Promotion tier is *inactive after* this date. ",
            "format": "date-time",
            "example": "2022-09-26T00:00:00.000Z",
            "nullable": true
          },
          "validity_timeframe": {
            "$ref": "#/components/schemas/ValidityTimeframe"
          },
          "validity_day_of_week": {
            "$ref": "#/components/schemas/ValidityDayOfWeek"
          },
          "validity_hours": {
            "$ref": "#/components/schemas/ValidityHours"
          },
          "category": {
            "type": "string",
            "description": "Assign a new or update the promotion tier's category using name.",
            "example": "cat_0c9da30e7116ba6bba",
            "nullable": true
          },
          "category_id": {
            "type": "string",
            "description": "Assign a new or update the promotion tier's category using id",
            "example": "cat_0c9da30e7116ba6bba",
            "nullable": true
          },
          "action": {
            "title": "PromotionsTiersCreateRequestBodyAction",
            "type": "object",
            "description": "Contains details about the discount applied by the promotion tier.",
            "properties": {
              "discount": {
                "$ref": "#/components/schemas/Discount"
              }
            },
            "nullable": true
          },
          "validation_rule_assignments": {
            "$ref": "#/components/schemas/ValidationRuleAssignmentsList"
          }
        },
        "description": "Request body schema for **POST** `v1/v1/promotions/{campaignId}/tiers`."
      },
      "PromotionsTiersCreateResponseBody": {
        "title": "PromotionsTiersCreateResponseBody",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "promo_63fYCt81Aw0h7lzyRkrGZh9p",
            "description": "Unique promotion tier ID.",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "example": "2021-12-15T11:34:01.333Z",
            "format": "date-time",
            "description": "Timestamp representing the date and time when the promotion tier was created. The value is shown in the ISO 8601 format.",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "example": "2022-02-09T09:20:05.603Z",
            "format": "date-time",
            "description": "Timestamp representing the date and time when the promotion tier was updated. The value is shown in the ISO 8601 format.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Name of the promotion tier.",
            "nullable": true
          },
          "banner": {
            "type": "string",
            "description": "Text to be displayed to your customers on your website.",
            "nullable": true
          },
          "action": {
            "title": "PromotionsTiersCreateResponseBodyAction",
            "type": "object",
            "description": "Contains details about the discount applied by the promotion tier.",
            "properties": {
              "discount": {
                "$ref": "#/components/schemas/Discount"
              }
            },
            "nullable": true
          },
          "metadata": {
            "title": "PromotionsTiersCreateResponseBodyMetadata",
            "type": "object",
            "description": "The metadata object stores all custom attributes assigned to the promotion tier. A set of key/value pairs that you can attach to a promotion tier object. It can be useful for storing additional information about the promotion tier in a structured format.",
            "nullable": true
          },
          "hierarchy": {
            "type": "integer",
            "description": "The promotions hierarchy defines the order in which the discounts from different tiers will be applied to a customer's order. If a customer qualifies for discounts from more than one tier, discounts will be applied in the order defined in the hierarchy.",
            "nullable": true
          },
          "promotion_id": {
            "type": "string",
            "description": "Promotion unique ID.",
            "nullable": true
          },
          "campaign": {
            "title": "PromotionsTiersCreateResponseBodyCampaign",
            "type": "object",
            "description": "Contains details about promotion tier's parent campaign.",
            "properties": {
              "id": {
                "type": "string",
                "description": "Unique campaign ID.",
                "nullable": true
              },
              "start_date": {
                "type": "string",
                "description": "Activation timestamp defines when the campaign starts to be active in ISO 8601 format. Campaign is *inactive before* this date. ",
                "format": "date-time",
                "example": "2022-09-22T00:00:00.000Z",
                "nullable": true
              },
              "expiration_date": {
                "type": "string",
                "format": "date-time",
                "description": "Expiration timestamp defines when the campaign expires in ISO 8601 format.  Campaign is *inactive after* this date.",
                "example": "2022-09-30T00:00:00.000Z",
                "nullable": true
              },
              "validity_timeframe": {
                "$ref": "#/components/schemas/ValidityTimeframe"
              },
              "validity_day_of_week": {
                "$ref": "#/components/schemas/ValidityDayOfWeek"
              },
              "validity_hours": {
                "$ref": "#/components/schemas/ValidityHours"
              },
              "active": {
                "type": "boolean",
                "description": "A flag indicating whether the campaign is active or not active. A campaign can be disabled even though it's within the active period defined by the `start_date` and `expiration_date` using the <!-- [Disable Campaign](OpenAPI.json/paths/~1campaigns~1{campaignId}~1disable) -->[Disable Campaign](ref:disable-campaign) endpoint.  \n\n- `true` indicates an *active* campaign\n- `false` indicates an *inactive* campaign",
                "nullable": true
              },
              "category_id": {
                "type": "string",
                "example": "cat_0b688929a2476386a6",
                "description": "Unique category ID that this campaign belongs to.",
                "nullable": true
              },
              "object": {
                "type": "string",
                "description": "The type of the object represented by the campaign object. This object stores information about the campaign.",
                "default": "campaign",
                "nullable": true
              }
            },
            "nullable": true
          },
          "campaign_id": {
            "type": "string",
            "description": "Promotion tier's parent campaign's unique ID.",
            "nullable": true
          },
          "active": {
            "type": "boolean",
            "description": "A flag to toggle the promotion tier on or off. You can disable a promotion tier even though it's within the active period defined by the `start_date` and `expiration_date`.  \n\n- `true` indicates an *active* promotion tier\n- `false` indicates an *inactive* promotion tier",
            "nullable": true
          },
          "start_date": {
            "type": "string",
            "description": "Activation timestamp defines when the promotion tier starts to be active in ISO 8601 format. Promotion tier is *inactive before* this date. ",
            "format": "date-time",
            "example": "2022-09-23T00:00:00.000Z",
            "nullable": true
          },
          "expiration_date": {
            "type": "string",
            "description": "Activation timestamp defines when the promotion tier expires in ISO 8601 format. Promotion tier is *inactive after* this date. ",
            "format": "date-time",
            "example": "2022-09-26T00:00:00.000Z",
            "nullable": true
          },
          "validity_timeframe": {
            "$ref": "#/components/schemas/ValidityTimeframe"
          },
          "validity_day_of_week": {
            "$ref": "#/components/schemas/ValidityDayOfWeek"
          },
          "validity_hours": {
            "$ref": "#/components/schemas/ValidityHours"
          },
          "summary": {
            "title": "PromotionsTiersCreateResponseBodySummary",
            "type": "object",
            "description": "Contains statistics about promotion tier redemptions and orders.",
            "properties": {
              "redemptions": {
                "title": "PromotionsTiersCreateResponseBodySummaryRedemptions",
                "type": "object",
                "description": "Contains statistics about promotion tier redemptions.",
                "properties": {
                  "total_redeemed": {
                    "type": "integer",
                    "description": "Number of times the promotion tier was redeemed.",
                    "nullable": true
                  }
                },
                "nullable": true
              },
              "orders": {
                "title": "PromotionsTiersCreateResponseBodySummaryOrders",
                "type": "object",
                "description": "Contains statistics about orders related to the promotion tier.",
                "properties": {
                  "total_amount": {
                    "type": "integer",
                    "description": "Sum of order totals.",
                    "nullable": true
                  },
                  "total_discount_amount": {
                    "type": "integer",
                    "description": "Sum of total discount applied using the promotion tier.",
                    "nullable": true
                  }
                },
                "nullable": true
              }
            },
            "nullable": true
          },
          "object": {
            "type": "string",
            "default": "promotion_tier",
            "description": "The type of the object represented by JSON. This object stores information about the promotion tier.",
            "nullable": true
          },
          "validation_rule_assignments": {
            "$ref": "#/components/schemas/ValidationRuleAssignmentsList"
          },
          "category_id": {
            "type": "string",
            "description": "Promotion tier category ID.",
            "example": "cat_0c9da30e7116ba6bba",
            "nullable": true
          },
          "categories": {
            "title": "PromotionsTiersCreateResponseBodyCategories",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Category"
            },
            "nullable": true
          }
        },
        "description": "Response body schema for **POST** `v1/promotions/{campaignId}/tiers`."
      },
      "PromotionsTiersDisableResponseBody": {
        "title": "PromotionsTiersDisableResponseBody",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "promo_63fYCt81Aw0h7lzyRkrGZh9p",
            "description": "Unique promotion tier ID.",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "example": "2021-12-15T11:34:01.333Z",
            "format": "date-time",
            "description": "Timestamp representing the date and time when the promotion tier was created. The value is shown in the ISO 8601 format.",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "example": "2022-02-09T09:20:05.603Z",
            "format": "date-time",
            "description": "Timestamp representing the date and time when the promotion tier was updated. The value is shown in the ISO 8601 format.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Name of the promotion tier.",
            "nullable": true
          },
          "banner": {
            "type": "string",
            "description": "Text to be displayed to your customers on your website.",
            "nullable": true
          },
          "action": {
            "title": "PromotionsTiersDisableResponseBodyAction",
            "type": "object",
            "description": "Contains details about the discount applied by the promotion tier.",
            "properties": {
              "discount": {
                "$ref": "#/components/schemas/Discount"
              }
            },
            "nullable": true
          },
          "metadata": {
            "title": "PromotionsTiersDisableResponseBodyMetadata",
            "type": "object",
            "description": "The metadata object stores all custom attributes assigned to the promotion tier. A set of key/value pairs that you can attach to a promotion tier object. It can be useful for storing additional information about the promotion tier in a structured format.",
            "nullable": true
          },
          "hierarchy": {
            "type": "integer",
            "description": "The promotions hierarchy defines the order in which the discounts from different tiers will be applied to a customer's order. If a customer qualifies for discounts from more than one tier, discounts will be applied in the order defined in the hierarchy.",
            "nullable": true
          },
          "promotion_id": {
            "type": "string",
            "description": "Promotion unique ID.",
            "nullable": true
          },
          "campaign": {
            "title": "PromotionsTiersDisableResponseBodyCampaign",
            "type": "object",
            "description": "Contains details about promotion tier's parent campaign.",
            "properties": {
              "id": {
                "type": "string",
                "description": "Unique campaign ID.",
                "nullable": true
              },
              "start_date": {
                "type": "string",
                "description": "Activation timestamp defines when the campaign starts to be active in ISO 8601 format. Campaign is *inactive before* this date. ",
                "format": "date-time",
                "example": "2022-09-22T00:00:00.000Z",
                "nullable": true
              },
              "expiration_date": {
                "type": "string",
                "format": "date-time",
                "description": "Expiration timestamp defines when the campaign expires in ISO 8601 format.  Campaign is *inactive after* this date.",
                "example": "2022-09-30T00:00:00.000Z",
                "nullable": true
              },
              "validity_timeframe": {
                "$ref": "#/components/schemas/ValidityTimeframe"
              },
              "validity_day_of_week": {
                "$ref": "#/components/schemas/ValidityDayOfWeek"
              },
              "validity_hours": {
                "$ref": "#/components/schemas/ValidityHours"
              },
              "active": {
                "type": "boolean",
                "description": "A flag indicating whether the campaign is active or not active. A campaign can be disabled even though it's within the active period defined by the `start_date` and `expiration_date` using the <!-- [Disable Campaign](OpenAPI.json/paths/~1campaigns~1{campaignId}~1disable) -->[Disable Campaign](ref:disable-campaign) endpoint.  \n\n- `true` indicates an *active* campaign\n- `false` indicates an *inactive* campaign",
                "nullable": true
              },
              "category_id": {
                "type": "string",
                "example": "cat_0b688929a2476386a6",
                "description": "Unique category ID that this campaign belongs to.",
                "nullable": true
              },
              "object": {
                "type": "string",
                "description": "The type of the object represented by the campaign object. This object stores information about the campaign.",
                "default": "campaign",
                "nullable": true
              }
            },
            "nullable": true
          },
          "campaign_id": {
            "type": "string",
            "description": "Promotion tier's parent campaign's unique ID.",
            "nullable": true
          },
          "active": {
            "type": "boolean",
            "description": "A flag to toggle the promotion tier on or off. You can disable a promotion tier even though it's within the active period defined by the `start_date` and `expiration_date`.  \n\n- `true` indicates an *active* promotion tier\n- `false` indicates an *inactive* promotion tier",
            "nullable": true
          },
          "start_date": {
            "type": "string",
            "description": "Activation timestamp defines when the promotion tier starts to be active in ISO 8601 format. Promotion tier is *inactive before* this date. ",
            "format": "date-time",
            "example": "2022-09-23T00:00:00.000Z",
            "nullable": true
          },
          "expiration_date": {
            "type": "string",
            "description": "Activation timestamp defines when the promotion tier expires in ISO 8601 format. Promotion tier is *inactive after* this date. ",
            "format": "date-time",
            "example": "2022-09-26T00:00:00.000Z",
            "nullable": true
          },
          "validity_timeframe": {
            "$ref": "#/components/schemas/ValidityTimeframe"
          },
          "validity_day_of_week": {
            "$ref": "#/components/schemas/ValidityDayOfWeek"
          },
          "validity_hours": {
            "$ref": "#/components/schemas/ValidityHours"
          },
          "summary": {
            "title": "PromotionsTiersDisableResponseBodySummary",
            "type": "object",
            "description": "Contains statistics about promotion tier redemptions and orders.",
            "properties": {
              "redemptions": {
                "title": "PromotionsTiersDisableResponseBodySummaryRedemptions",
                "type": "object",
                "description": "Contains statistics about promotion tier redemptions.",
                "properties": {
                  "total_redeemed": {
                    "type": "integer",
                    "description": "Number of times the promotion tier was redeemed.",
                    "nullable": true
                  }
                },
                "nullable": true
              },
              "orders": {
                "title": "PromotionsTiersDisableResponseBodySummaryOrders",
                "type": "object",
                "description": "Contains statistics about orders related to the promotion tier.",
                "properties": {
                  "total_amount": {
                    "type": "integer",
                    "description": "Sum of order totals.",
                    "nullable": true
                  },
                  "total_discount_amount": {
                    "type": "integer",
                    "description": "Sum of total discount applied using the promotion tier.",
                    "nullable": true
                  }
                },
                "nullable": true
              }
            },
            "nullable": true
          },
          "object": {
            "type": "string",
            "default": "promotion_tier",
            "description": "The type of the object represented by JSON. This object stores information about the promotion tier.",
            "nullable": true
          },
          "validation_rule_assignments": {
            "$ref": "#/components/schemas/ValidationRuleAssignmentsList"
          },
          "category_id": {
            "type": "string",
            "description": "Promotion tier category ID.",
            "example": "cat_0c9da30e7116ba6bba",
            "nullable": true
          },
          "categories": {
            "title": "PromotionsTiersDisableResponseBodyCategories",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Category"
            },
            "nullable": true
          }
        },
        "description": "Response body schema for **POST** `v1/promotions/tiers/{promotionTierId}/disable`."
      },
      "PromotionsTiersEnableResponseBody": {
        "title": "PromotionsTiersEnableResponseBody",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "promo_63fYCt81Aw0h7lzyRkrGZh9p",
            "description": "Unique promotion tier ID.",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "example": "2021-12-15T11:34:01.333Z",
            "format": "date-time",
            "description": "Timestamp representing the date and time when the promotion tier was created. The value is shown in the ISO 8601 format.",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "example": "2022-02-09T09:20:05.603Z",
            "format": "date-time",
            "description": "Timestamp representing the date and time when the promotion tier was updated. The value is shown in the ISO 8601 format.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Name of the promotion tier.",
            "nullable": true
          },
          "banner": {
            "type": "string",
            "description": "Text to be displayed to your customers on your website.",
            "nullable": true
          },
          "action": {
            "title": "PromotionsTiersEnableResponseBodyAction",
            "type": "object",
            "description": "Contains details about the discount applied by the promotion tier.",
            "properties": {
              "discount": {
                "$ref": "#/components/schemas/Discount"
              }
            },
            "nullable": true
          },
          "metadata": {
            "title": "PromotionsTiersEnableResponseBodyMetadata",
            "type": "object",
            "description": "The metadata object stores all custom attributes assigned to the promotion tier. A set of key/value pairs that you can attach to a promotion tier object. It can be useful for storing additional information about the promotion tier in a structured format.",
            "nullable": true
          },
          "hierarchy": {
            "type": "integer",
            "description": "The promotions hierarchy defines the order in which the discounts from different tiers will be applied to a customer's order. If a customer qualifies for discounts from more than one tier, discounts will be applied in the order defined in the hierarchy.",
            "nullable": true
          },
          "promotion_id": {
            "type": "string",
            "description": "Promotion unique ID.",
            "nullable": true
          },
          "campaign": {
            "title": "PromotionsTiersEnableResponseBodyCampaign",
            "type": "object",
            "description": "Contains details about promotion tier's parent campaign.",
            "properties": {
              "id": {
                "type": "string",
                "description": "Unique campaign ID.",
                "nullable": true
              },
              "start_date": {
                "type": "string",
                "description": "Activation timestamp defines when the campaign starts to be active in ISO 8601 format. Campaign is *inactive before* this date. ",
                "format": "date-time",
                "example": "2022-09-22T00:00:00.000Z",
                "nullable": true
              },
              "expiration_date": {
                "type": "string",
                "format": "date-time",
                "description": "Expiration timestamp defines when the campaign expires in ISO 8601 format.  Campaign is *inactive after* this date.",
                "example": "2022-09-30T00:00:00.000Z",
                "nullable": true
              },
              "validity_timeframe": {
                "$ref": "#/components/schemas/ValidityTimeframe"
              },
              "validity_day_of_week": {
                "$ref": "#/components/schemas/ValidityDayOfWeek"
              },
              "validity_hours": {
                "$ref": "#/components/schemas/ValidityHours"
              },
              "active": {
                "type": "boolean",
                "description": "A flag indicating whether the campaign is active or not active. A campaign can be disabled even though it's within the active period defined by the `start_date` and `expiration_date` using the <!-- [Disable Campaign](OpenAPI.json/paths/~1campaigns~1{campaignId}~1disable) -->[Disable Campaign](ref:disable-campaign) endpoint.  \n\n- `true` indicates an *active* campaign\n- `false` indicates an *inactive* campaign",
                "nullable": true
              },
              "category_id": {
                "type": "string",
                "example": "cat_0b688929a2476386a6",
                "description": "Unique category ID that this campaign belongs to.",
                "nullable": true
              },
              "object": {
                "type": "string",
                "description": "The type of the object represented by the campaign object. This object stores information about the campaign.",
                "default": "campaign",
                "nullable": true
              }
            },
            "nullable": true
          },
          "campaign_id": {
            "type": "string",
            "description": "Promotion tier's parent campaign's unique ID.",
            "nullable": true
          },
          "active": {
            "type": "boolean",
            "description": "A flag to toggle the promotion tier on or off. You can disable a promotion tier even though it's within the active period defined by the `start_date` and `expiration_date`.  \n\n- `true` indicates an *active* promotion tier\n- `false` indicates an *inactive* promotion tier",
            "nullable": true
          },
          "start_date": {
            "type": "string",
            "description": "Activation timestamp defines when the promotion tier starts to be active in ISO 8601 format. Promotion tier is *inactive before* this date. ",
            "format": "date-time",
            "example": "2022-09-23T00:00:00.000Z",
            "nullable": true
          },
          "expiration_date": {
            "type": "string",
            "description": "Activation timestamp defines when the promotion tier expires in ISO 8601 format. Promotion tier is *inactive after* this date. ",
            "format": "date-time",
            "example": "2022-09-26T00:00:00.000Z",
            "nullable": true
          },
          "validity_timeframe": {
            "$ref": "#/components/schemas/ValidityTimeframe"
          },
          "validity_day_of_week": {
            "$ref": "#/components/schemas/ValidityDayOfWeek"
          },
          "validity_hours": {
            "$ref": "#/components/schemas/ValidityHours"
          },
          "summary": {
            "title": "PromotionsTiersEnableResponseBodySummary",
            "type": "object",
            "description": "Contains statistics about promotion tier redemptions and orders.",
            "properties": {
              "redemptions": {
                "title": "PromotionsTiersEnableResponseBodySummaryRedemptions",
                "type": "object",
                "description": "Contains statistics about promotion tier redemptions.",
                "properties": {
                  "total_redeemed": {
                    "type": "integer",
                    "description": "Number of times the promotion tier was redeemed.",
                    "nullable": true
                  }
                },
                "nullable": true
              },
              "orders": {
                "title": "PromotionsTiersEnableResponseBodySummaryOrders",
                "type": "object",
                "description": "Contains statistics about orders related to the promotion tier.",
                "properties": {
                  "total_amount": {
                    "type": "integer",
                    "description": "Sum of order totals.",
                    "nullable": true
                  },
                  "total_discount_amount": {
                    "type": "integer",
                    "description": "Sum of total discount applied using the promotion tier.",
                    "nullable": true
                  }
                },
                "nullable": true
              }
            },
            "nullable": true
          },
          "object": {
            "type": "string",
            "default": "promotion_tier",
            "description": "The type of the object represented by JSON. This object stores information about the promotion tier.",
            "nullable": true
          },
          "validation_rule_assignments": {
            "$ref": "#/components/schemas/ValidationRuleAssignmentsList"
          },
          "category_id": {
            "type": "string",
            "description": "Promotion tier category ID.",
            "example": "cat_0c9da30e7116ba6bba",
            "nullable": true
          },
          "categories": {
            "title": "PromotionsTiersEnableResponseBodyCategories",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Category"
            },
            "nullable": true
          }
        },
        "description": "Response body schema for **POST** `v1/promotions/tiers/{promotionTierId}/enable`."
      },
      "PromotionsTiersGetResponseBody": {
        "title": "PromotionsTiersGetResponseBody",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "promo_63fYCt81Aw0h7lzyRkrGZh9p",
            "description": "Unique promotion tier ID.",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "example": "2021-12-15T11:34:01.333Z",
            "format": "date-time",
            "description": "Timestamp representing the date and time when the promotion tier was created. The value is shown in the ISO 8601 format.",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "example": "2022-02-09T09:20:05.603Z",
            "format": "date-time",
            "description": "Timestamp representing the date and time when the promotion tier was updated. The value is shown in the ISO 8601 format.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Name of the promotion tier.",
            "nullable": true
          },
          "banner": {
            "type": "string",
            "description": "Text to be displayed to your customers on your website.",
            "nullable": true
          },
          "action": {
            "title": "PromotionsTiersGetResponseBodyAction",
            "type": "object",
            "description": "Contains details about the discount applied by the promotion tier.",
            "properties": {
              "discount": {
                "$ref": "#/components/schemas/Discount"
              }
            },
            "nullable": true
          },
          "metadata": {
            "title": "PromotionsTiersGetResponseBodyMetadata",
            "type": "object",
            "description": "The metadata object stores all custom attributes assigned to the promotion tier. A set of key/value pairs that you can attach to a promotion tier object. It can be useful for storing additional information about the promotion tier in a structured format.",
            "nullable": true
          },
          "hierarchy": {
            "type": "integer",
            "description": "The promotions hierarchy defines the order in which the discounts from different tiers will be applied to a customer's order. If a customer qualifies for discounts from more than one tier, discounts will be applied in the order defined in the hierarchy.",
            "nullable": true
          },
          "promotion_id": {
            "type": "string",
            "description": "Promotion unique ID.",
            "nullable": true
          },
          "campaign": {
            "title": "PromotionsTiersGetResponseBodyCampaign",
            "type": "object",
            "description": "Contains details about promotion tier's parent campaign.",
            "properties": {
              "id": {
                "type": "string",
                "description": "Unique campaign ID.",
                "nullable": true
              },
              "start_date": {
                "type": "string",
                "description": "Activation timestamp defines when the campaign starts to be active in ISO 8601 format. Campaign is *inactive before* this date. ",
                "format": "date-time",
                "example": "2022-09-22T00:00:00.000Z",
                "nullable": true
              },
              "expiration_date": {
                "type": "string",
                "format": "date-time",
                "description": "Expiration timestamp defines when the campaign expires in ISO 8601 format.  Campaign is *inactive after* this date.",
                "example": "2022-09-30T00:00:00.000Z",
                "nullable": true
              },
              "validity_timeframe": {
                "$ref": "#/components/schemas/ValidityTimeframe"
              },
              "validity_day_of_week": {
                "$ref": "#/components/schemas/ValidityDayOfWeek"
              },
              "validity_hours": {
                "$ref": "#/components/schemas/ValidityHours"
              },
              "active": {
                "type": "boolean",
                "description": "A flag indicating whether the campaign is active or not active. A campaign can be disabled even though it's within the active period defined by the `start_date` and `expiration_date` using the <!-- [Disable Campaign](OpenAPI.json/paths/~1campaigns~1{campaignId}~1disable) -->[Disable Campaign](ref:disable-campaign) endpoint.  \n\n- `true` indicates an *active* campaign\n- `false` indicates an *inactive* campaign",
                "nullable": true
              },
              "category_id": {
                "type": "string",
                "example": "cat_0b688929a2476386a6",
                "description": "Unique category ID that this campaign belongs to.",
                "nullable": true
              },
              "object": {
                "type": "string",
                "description": "The type of the object represented by the campaign object. This object stores information about the campaign.",
                "default": "campaign",
                "nullable": true
              }
            },
            "nullable": true
          },
          "campaign_id": {
            "type": "string",
            "description": "Promotion tier's parent campaign's unique ID.",
            "nullable": true
          },
          "active": {
            "type": "boolean",
            "description": "A flag to toggle the promotion tier on or off. You can disable a promotion tier even though it's within the active period defined by the `start_date` and `expiration_date`.  \n\n- `true` indicates an *active* promotion tier\n- `false` indicates an *inactive* promotion tier",
            "nullable": true
          },
          "start_date": {
            "type": "string",
            "description": "Activation timestamp defines when the promotion tier starts to be active in ISO 8601 format. Promotion tier is *inactive before* this date. ",
            "format": "date-time",
            "example": "2022-09-23T00:00:00.000Z",
            "nullable": true
          },
          "expiration_date": {
            "type": "string",
            "description": "Activation timestamp defines when the promotion tier expires in ISO 8601 format. Promotion tier is *inactive after* this date. ",
            "format": "date-time",
            "example": "2022-09-26T00:00:00.000Z",
            "nullable": true
          },
          "validity_timeframe": {
            "$ref": "#/components/schemas/ValidityTimeframe"
          },
          "validity_day_of_week": {
            "$ref": "#/components/schemas/ValidityDayOfWeek"
          },
          "validity_hours": {
            "$ref": "#/components/schemas/ValidityHours"
          },
          "summary": {
            "title": "PromotionsTiersGetResponseBodySummary",
            "type": "object",
            "description": "Contains statistics about promotion tier redemptions and orders.",
            "properties": {
              "redemptions": {
                "title": "PromotionsTiersGetResponseBodySummaryRedemptions",
                "type": "object",
                "description": "Contains statistics about promotion tier redemptions.",
                "properties": {
                  "total_redeemed": {
                    "type": "integer",
                    "description": "Number of times the promotion tier was redeemed.",
                    "nullable": true
                  }
                },
                "nullable": true
              },
              "orders": {
                "title": "PromotionsTiersGetResponseBodySummaryOrders",
                "type": "object",
                "description": "Contains statistics about orders related to the promotion tier.",
                "properties": {
                  "total_amount": {
                    "type": "integer",
                    "description": "Sum of order totals.",
                    "nullable": true
                  },
                  "total_discount_amount": {
                    "type": "integer",
                    "description": "Sum of total discount applied using the promotion tier.",
                    "nullable": true
                  }
                },
                "nullable": true
              }
            },
            "nullable": true
          },
          "object": {
            "type": "string",
            "default": "promotion_tier",
            "description": "The type of the object represented by JSON. This object stores information about the promotion tier.",
            "nullable": true
          },
          "validation_rule_assignments": {
            "$ref": "#/components/schemas/ValidationRuleAssignmentsList"
          },
          "category_id": {
            "type": "string",
            "description": "Promotion tier category ID.",
            "example": "cat_0c9da30e7116ba6bba",
            "nullable": true
          },
          "categories": {
            "title": "PromotionsTiersGetResponseBodyCategories",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Category"
            },
            "nullable": true
          }
        },
        "description": "Response body schema for **GET** `v1/promotions/tiers/{promotionTierId}`."
      },
      "PromotionsTiersListResponseBody": {
        "title": "PromotionsTiersListResponseBody",
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "default": "list",
            "description": "The type of the object represented by JSON. This object stores information about promotion tiers in a dictionary.",
            "nullable": true
          },
          "data_ref": {
            "type": "string",
            "default": "tiers",
            "description": "Identifies the name of the attribute that contains the array of promotion tier objects.",
            "nullable": true
          },
          "tiers": {
            "title": "PromotionsTiersListResponseBodyTiers",
            "type": "array",
            "description": "Contains array of promotion tier objects.",
            "items": {
              "$ref": "#/components/schemas/PromotionTier"
            },
            "nullable": true
          },
          "total": {
            "type": "integer",
            "description": "Total number of promotion tiers.",
            "nullable": true
          },
          "has_more": {
            "type": "boolean",
            "description": "As query results are always limited (by the limit parameter), the `has_more` flag indicates if there are more records for given filter parameters. This lets you know if you can run another request to get more records returned in the results.",
            "nullable": true
          }
        },
        "description": "Response body schema for **GET** `v1/promotions/{campaignId}/tiers` and **GET** `v1/promotions/tiers`."
      },
      "PromotionsTiersUpdateRequestBody": {
        "title": "PromotionsTiersUpdateRequestBody",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the promotion tier.",
            "nullable": true
          },
          "banner": {
            "type": "string",
            "description": "Text to be displayed to your customers on your website.",
            "nullable": true
          },
          "action": {
            "title": "PromotionsTiersUpdateRequestBodyAction",
            "type": "object",
            "description": "Contains details about the discount applied by the promotion tier.",
            "properties": {
              "discount": {
                "$ref": "#/components/schemas/Discount"
              }
            },
            "nullable": true
          },
          "metadata": {
            "title": "PromotionsTiersUpdateRequestBodyMetadata",
            "type": "object",
            "description": "The metadata object stores all custom attributes assigned to the promotion tier. A set of key/value pairs that you can attach to a promotion tier object. It can be useful for storing additional information about the promotion tier in a structured format.",
            "nullable": true
          },
          "hierarchy": {
            "type": "integer",
            "description": "The promotions hierarchy defines the order in which the discounts from different tiers will be applied to a customer's order. If a customer qualifies for discounts from more than one tier, discounts will be applied in the order defined in the hierarchy.",
            "nullable": true
          },
          "start_date": {
            "type": "string",
            "description": "Activation timestamp defines when the promotion tier starts to be active in ISO 8601 format. Promotion tier is *inactive before* this date. ",
            "format": "date-time",
            "example": "2022-09-23T00:00:00.000Z",
            "nullable": true
          },
          "expiration_date": {
            "type": "string",
            "description": "Activation timestamp defines when the promotion tier expires in ISO 8601 format. Promotion tier is *inactive after* this date. ",
            "format": "date-time",
            "example": "2022-09-26T00:00:00.000Z",
            "nullable": true
          },
          "validity_timeframe": {
            "$ref": "#/components/schemas/ValidityTimeframe"
          },
          "validity_day_of_week": {
            "$ref": "#/components/schemas/ValidityDayOfWeek"
          },
          "validity_hours": {
            "$ref": "#/components/schemas/ValidityHours"
          },
          "validation_rule_assignments": {
            "$ref": "#/components/schemas/ValidationRuleAssignmentsList"
          },
          "category": {
            "type": "string",
            "description": "Assign a new or update the promotion tier's category using name.",
            "example": "cat_0c9da30e7116ba6bba",
            "nullable": true
          },
          "category_id": {
            "type": "string",
            "description": "Assign a new or update the promotion tier's category using id",
            "example": "cat_0c9da30e7116ba6bba",
            "nullable": true
          }
        },
        "description": "Request body schema for **PUT** `v1/promotions/tiers/{promotionTierId}`."
      },
      "PromotionsTiersUpdateResponseBody": {
        "title": "PromotionsTiersUpdateResponseBody",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "promo_63fYCt81Aw0h7lzyRkrGZh9p",
            "description": "Unique promotion tier ID.",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "example": "2021-12-15T11:34:01.333Z",
            "format": "date-time",
            "description": "Timestamp representing the date and time when the promotion tier was created. The value is shown in the ISO 8601 format.",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "example": "2022-02-09T09:20:05.603Z",
            "format": "date-time",
            "description": "Timestamp representing the date and time when the promotion tier was updated. The value is shown in the ISO 8601 format.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Name of the promotion tier.",
            "nullable": true
          },
          "banner": {
            "type": "string",
            "description": "Text to be displayed to your customers on your website.",
            "nullable": true
          },
          "action": {
            "title": "PromotionsTiersUpdateResponseBodyAction",
            "type": "object",
            "description": "Contains details about the discount applied by the promotion tier.",
            "properties": {
              "discount": {
                "$ref": "#/components/schemas/Discount"
              }
            },
            "nullable": true
          },
          "metadata": {
            "title": "PromotionsTiersUpdateResponseBodyMetadata",
            "type": "object",
            "description": "The metadata object stores all custom attributes assigned to the promotion tier. A set of key/value pairs that you can attach to a promotion tier object. It can be useful for storing additional information about the promotion tier in a structured format.",
            "nullable": true
          },
          "hierarchy": {
            "type": "integer",
            "description": "The promotions hierarchy defines the order in which the discounts from different tiers will be applied to a customer's order. If a customer qualifies for discounts from more than one tier, discounts will be applied in the order defined in the hierarchy.",
            "nullable": true
          },
          "promotion_id": {
            "type": "string",
            "description": "Promotion unique ID.",
            "nullable": true
          },
          "campaign": {
            "title": "PromotionsTiersUpdateResponseBodyCampaign",
            "type": "object",
            "description": "Contains details about promotion tier's parent campaign.",
            "properties": {
              "id": {
                "type": "string",
                "description": "Unique campaign ID.",
                "nullable": true
              },
              "start_date": {
                "type": "string",
                "description": "Activation timestamp defines when the campaign starts to be active in ISO 8601 format. Campaign is *inactive before* this date. ",
                "format": "date-time",
                "example": "2022-09-22T00:00:00.000Z",
                "nullable": true
              },
              "expiration_date": {
                "type": "string",
                "format": "date-time",
                "description": "Expiration timestamp defines when the campaign expires in ISO 8601 format.  Campaign is *inactive after* this date.",
                "example": "2022-09-30T00:00:00.000Z",
                "nullable": true
              },
              "validity_timeframe": {
                "$ref": "#/components/schemas/ValidityTimeframe"
              },
              "validity_day_of_week": {
                "$ref": "#/components/schemas/ValidityDayOfWeek"
              },
              "validity_hours": {
                "$ref": "#/components/schemas/ValidityHours"
              },
              "active": {
                "type": "boolean",
                "description": "A flag indicating whether the campaign is active or not active. A campaign can be disabled even though it's within the active period defined by the `start_date` and `expiration_date` using the <!-- [Disable Campaign](OpenAPI.json/paths/~1campaigns~1{campaignId}~1disable) -->[Disable Campaign](ref:disable-campaign) endpoint.  \n\n- `true` indicates an *active* campaign\n- `false` indicates an *inactive* campaign",
                "nullable": true
              },
              "category_id": {
                "type": "string",
                "example": "cat_0b688929a2476386a6",
                "description": "Unique category ID that this campaign belongs to.",
                "nullable": true
              },
              "object": {
                "type": "string",
                "description": "The type of the object represented by the campaign object. This object stores information about the campaign.",
                "default": "campaign",
                "nullable": true
              }
            },
            "nullable": true
          },
          "campaign_id": {
            "type": "string",
            "description": "Promotion tier's parent campaign's unique ID.",
            "nullable": true
          },
          "active": {
            "type": "boolean",
            "description": "A flag to toggle the promotion tier on or off. You can disable a promotion tier even though it's within the active period defined by the `start_date` and `expiration_date`.  \n\n- `true` indicates an *active* promotion tier\n- `false` indicates an *inactive* promotion tier",
            "nullable": true
          },
          "start_date": {
            "type": "string",
            "description": "Activation timestamp defines when the promotion tier starts to be active in ISO 8601 format. Promotion tier is *inactive before* this date. ",
            "format": "date-time",
            "example": "2022-09-23T00:00:00.000Z",
            "nullable": true
          },
          "expiration_date": {
            "type": "string",
            "description": "Activation timestamp defines when the promotion tier expires in ISO 8601 format. Promotion tier is *inactive after* this date. ",
            "format": "date-time",
            "example": "2022-09-26T00:00:00.000Z",
            "nullable": true
          },
          "validity_timeframe": {
            "$ref": "#/components/schemas/ValidityTimeframe"
          },
          "validity_day_of_week": {
            "$ref": "#/components/schemas/ValidityDayOfWeek"
          },
          "validity_hours": {
            "$ref": "#/components/schemas/ValidityHours"
          },
          "summary": {
            "title": "PromotionsTiersUpdateResponseBodySummary",
            "type": "object",
            "description": "Contains statistics about promotion tier redemptions and orders.",
            "properties": {
              "redemptions": {
                "title": "PromotionsTiersUpdateResponseBodySummaryRedemptions",
                "type": "object",
                "description": "Contains statistics about promotion tier redemptions.",
                "properties": {
                  "total_redeemed": {
                    "type": "integer",
                    "description": "Number of times the promotion tier was redeemed.",
                    "nullable": true
                  }
                },
                "nullable": true
              },
              "orders": {
                "title": "PromotionsTiersUpdateResponseBodySummaryOrders",
                "type": "object",
                "description": "Contains statistics about orders related to the promotion tier.",
                "properties": {
                  "total_amount": {
                    "type": "integer",
                    "description": "Sum of order totals.",
                    "nullable": true
                  },
                  "total_discount_amount": {
                    "type": "integer",
                    "description": "Sum of total discount applied using the promotion tier.",
                    "nullable": true
                  }
                },
                "nullable": true
              }
            },
            "nullable": true
          },
          "object": {
            "type": "string",
            "default": "promotion_tier",
            "description": "The type of the object represented by JSON. This object stores information about the promotion tier.",
            "nullable": true
          },
          "validation_rule_assignments": {
            "$ref": "#/components/schemas/ValidationRuleAssignmentsList"
          },
          "category_id": {
            "type": "string",
            "description": "Promotion tier category ID.",
            "example": "cat_0c9da30e7116ba6bba",
            "nullable": true
          },
          "categories": {
            "title": "PromotionsTiersUpdateResponseBodyCategories",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Category"
            },
            "nullable": true
          }
        },
        "description": "Response body schema for **PUT** `v1/promotions/tiers/{promotionTierId}`."
      },
      "PublicationsCreateRequestBody": {
        "title": "PublicationsCreateRequestBody",
        "type": "object",
        "properties": {
          "voucher": {
            "description": "Code of the voucher being published.",
            "type": "string",
            "nullable": true
          },
          "source_id": {
            "type": "string",
            "description": "The merchant's publication ID if it is different from the Voucherify publication ID. It's an optional tracking identifier of a publication. It is really useful in case of an integration between multiple systems. It can be a publication ID from a CRM system, database or 3rd-party service.\nIf `source_id` is provided only 1 voucher can be published per request.",
            "nullable": true
          },
          "customer": {
            "$ref": "#/components/schemas/Customer"
          },
          "metadata": {
            "title": "PublicationsCreateRequestBodyMetadata",
            "type": "object",
            "description": "The metadata object stores all custom attributes assigned to the publication. A set of key/value pairs that you can attach to a publication object. It can be useful for storing additional information about the publication in a structured format.",
            "nullable": true
          },
          "channel": {
            "type": "string",
            "description": "Specify the distribution channel.",
            "nullable": true
          },
          "campaign": {
            "$ref": "#/components/schemas/CreatePublicationCampaign"
          }
        }
      },
      "PublicationsCreateResponseBody": {
        "title": "PublicationsCreateResponseBody",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "pub_BbjAXnmm8e0SIm3zG8qvvFCP0KuLywtp",
            "description": "Unique publication ID, assigned by Voucherify.",
            "nullable": true
          },
          "object": {
            "type": "string",
            "default": "publication",
            "enum": [
              "publication"
            ],
            "description": "The type of the object represented by the JSON. This object stores information about the `publication`.",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "example": "2022-09-23T09:57:00.434Z",
            "description": "Timestamp representing the date and time when the publication was created. The value is shown in the ISO 8601 format.",
            "format": "date-time",
            "nullable": true
          },
          "customer_id": {
            "type": "string",
            "example": "cust_eWgXlBBiY6THFRJwX45Iakv4",
            "description": "Unique customer ID of the customer receiving the publication.",
            "nullable": true
          },
          "tracking_id": {
            "type": "string",
            "description": "Customer's `source_id`.",
            "nullable": true
          },
          "metadata": {
            "title": "PublicationsCreateResponseBodyMetadata",
            "type": "object",
            "description": "The metadata object stores all custom attributes assigned to the publication. A set of key/value pairs that you can attach to a publication object. It can be useful for storing additional information about the publication in a structured format.",
            "nullable": true
          },
          "channel": {
            "type": "string",
            "description": "How the publication was originated. It can be your own custom channel or an example value provided here.",
            "default": "API",
            "enum": [
              "API"
            ],
            "nullable": true
          },
          "source_id": {
            "type": "string",
            "nullable": true,
            "description": "The merchant's publication ID if it is different from the Voucherify publication ID. It's an optional tracking identifier of a publication. It is really useful in case of an integration between multiple systems. It can be a publication ID from a CRM system, database or 3rd-party service. "
          },
          "result": {
            "type": "string",
            "default": "SUCCESS",
            "enum": [
              "SUCCESS"
            ],
            "description": "Status of the publication attempt.",
            "nullable": true
          },
          "customer": {
            "$ref": "#/components/schemas/CustomerWithSummaryLoyaltyReferrals"
          },
          "vouchers_id": {
            "title": "PublicationsCreateResponseBodyVouchersId",
            "type": "array",
            "description": "Contains the unique internal voucher ID that was assigned by Voucherify.",
            "items": {
              "title": "PublicationsCreateResponseBodyVouchersIdItem",
              "type": "string",
              "example": "v_Bw3qWZWv47yb1Onra8F2LlFI1enLakfA"
            },
            "nullable": true
          },
          "voucher": {
            "$ref": "#/components/schemas/Voucher"
          },
          "vouchers": {
            "title": "PublicationsCreateResponseBodyVouchers",
            "type": "array",
            "description": "Contains the unique voucher codes that was assigned by Voucherify.",
            "items": {
              "title": "PublicationsCreateResponseBodyVouchersItem",
              "type": "string",
              "example": "Q1K4XT5S"
            },
            "nullable": true
          }
        }
      },
      "PublicationsListResponseBody": {
        "title": "PublicationsListResponseBody",
        "type": "object",
        "description": "Response body schema for listing publications using **GET** `v1/publications`.",
        "properties": {
          "object": {
            "type": "string",
            "default": "list",
            "description": "The type of the object represented by JSON. This object stores information about publications in a dictionary.",
            "nullable": true
          },
          "data_ref": {
            "type": "string",
            "default": "publications",
            "description": "Identifies the name of the attribute that contains the array of publications.",
            "nullable": true
          },
          "publications": {
            "title": "PublicationsListResponseBodyPublications",
            "description": "Response schema model for publishing vouchers to a specific customer.",
            "type": "array",
            "items": {
              "title": "PublicationsListResponseBodyPublicationsItem",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "example": "pub_BbjAXnmm8e0SIm3zG8qvvFCP0KuLywtp",
                  "description": "Unique publication ID, assigned by Voucherify.",
                  "nullable": true
                },
                "object": {
                  "type": "string",
                  "default": "publication",
                  "enum": [
                    "publication"
                  ],
                  "description": "The type of the object represented by the JSON. This object stores information about the `publication`.",
                  "nullable": true
                },
                "created_at": {
                  "type": "string",
                  "example": "2022-09-23T09:57:00.434Z",
                  "description": "Timestamp representing the date and time when the publication was created. The value is shown in the ISO 8601 format.",
                  "format": "date-time",
                  "nullable": true
                },
                "customer_id": {
                  "type": "string",
                  "example": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                  "description": "Unique customer ID of the customer receiving the publication.",
                  "nullable": true
                },
                "tracking_id": {
                  "type": "string",
                  "description": "Customer's `source_id`.",
                  "nullable": true
                },
                "metadata": {
                  "title": "PublicationsListResponseBodyPublicationsItemMetadata",
                  "type": "object",
                  "properties": {
                    "source_type": {
                      "type": "string",
                      "description": "Defines the type of the distribution source.",
                      "nullable": true
                    },
                    "source_id": {
                      "type": "string",
                      "description": "Unique identifier of the distribution source.",
                      "nullable": true
                    },
                    "distribution_id": {
                      "type": "string",
                      "description": "Unique identifier of the distribution.",
                      "nullable": true
                    }
                  }
                },
                "channel": {
                  "type": "string",
                  "description": "How the publication was originated. It can be your own custom channel or an example value provided here.",
                  "nullable": true
                },
                "source_id": {
                  "type": "string",
                  "nullable": true,
                  "description": "The merchant's publication ID if it is different from the Voucherify publication ID. It's an optional tracking identifier of a publication. It is really useful in case of an integration between multiple systems. It can be a publication ID from a CRM system, database or 3rd-party service. "
                },
                "customer": {
                  "$ref": "#/components/schemas/CustomerWithSummaryLoyaltyReferrals"
                },
                "vouchers": {
                  "title": "PublicationsListResponseBodyPublicationsItemVouchers",
                  "type": "array",
                  "items": {
                    "title": "PublicationsListResponseBodyPublicationsItemVouchersItem",
                    "type": "string"
                  },
                  "description": "Contains the voucher IDs that was assigned by Voucherify. and Contains the unique voucher codes that was assigned by Voucherify."
                },
                "vouchers_id": {
                  "title": "PublicationsListResponseBodyPublicationsItemVouchersId",
                  "type": "array",
                  "description": "Contains the unique internal voucher IDs that was assigned by Voucherify.",
                  "items": {
                    "title": "PublicationsListResponseBodyPublicationsItemVouchersIdItem",
                    "type": "string",
                    "example": "v_Bw3qWZWv47yb1Onra8F2LlFI1enLakfA"
                  },
                  "nullable": true
                },
                "result": {
                  "type": "string",
                  "enum": [
                    "SUCCESS",
                    "FAILURE"
                  ]
                },
                "voucher": {
                  "$ref": "#/components/schemas/ListPublicationsItemVoucher"
                },
                "failure_code": {
                  "type": "string",
                  "description": "Generic reason as to why the create publication operation failed.",
                  "nullable": true
                },
                "failure_message": {
                  "type": "string",
                  "description": "This parameter will provide more expanded reason as to why the create publication operation failed.",
                  "nullable": true
                }
              }
            },
            "nullable": true
          },
          "total": {
            "type": "integer",
            "description": "Total number of publications.",
            "nullable": true
          }
        },
        "required": []
      },
      "QualificationsCheckEligibilityRequestBody": {
        "title": "QualificationsCheckEligibilityRequestBody",
        "type": "object",
        "description": "Request body schema for **POST** `v1/qualifications`.",
        "properties": {
          "customer": {
            "$ref": "#/components/schemas/Customer"
          },
          "order": {
            "$ref": "#/components/schemas/Order"
          },
          "tracking_id": {
            "description": "Is correspondent to Customer's source_id",
            "type": "string",
            "nullable": true
          },
          "scenario": {
            "type": "string",
            "description": "Defines the scenario Voucherify should consider during the qualification process.\n\n- `ALL` - Scenario that returns all redeemables available for the customer in one API request. This scenario is used by default when no value is selected.\n- `CUSTOMER_WALLET` - returns vouchers applicable to the customer's cart based on the vouchers assigned to the customer's profile.\n- `AUDIENCE_ONLY` - returns all vouchers, promotion tiers, and campaigns available to the customer. Voucherify validates the rules based on the customer profile only.\n- `PRODUCTS` - returns all promotions available for the products (when a discount is defined to be applied to the item or when the item is required in the validation rule).\n- `PRODUCTS_DISCOUNT` - returns all promotions available for products when a discount is defined as applicable to specific item(s).\n- `PROMOTION_STACKS` - returns the applicable promotion stacks.\n- `PRODUCTS_BY_CUSTOMER` - returns all promotions available for a customer for the products (when a discount is defined to be applied to the item or when the item is required in the validation rule).\n- `PRODUCTS_DISCOUNT_BY_CUSTOMER` - returns all promotions available for a customer for products when a discount is defined as applicable to specific item(s).",
            "enum": [
              "ALL",
              "CUSTOMER_WALLET",
              "AUDIENCE_ONLY",
              "PRODUCTS",
              "PRODUCTS_DISCOUNT",
              "PROMOTION_STACKS",
              "PRODUCTS_BY_CUSTOMER",
              "PRODUCTS_DISCOUNT_BY_CUSTOMER"
            ],
            "nullable": true
          },
          "options": {
            "$ref": "#/components/schemas/QualificationsOption"
          },
          "session": {
            "title": "QualificationsCheckEligibilityRequestBodySession",
            "type": "object",
            "description": "Parameter to return details about `locked_credits` on a gift card which has locked credits under a validation session.",
            "properties": {
              "type": {
                "type": "string",
                "description": "Parameter required to return the details about the `locked_credits`.",
                "default": "LOCK",
                "enum": [
                  "LOCK"
                ],
                "nullable": true
              }
            },
            "nullable": true
          },
          "metadata": {
            "title": "QualificationsCheckEligibilityRequestBodyMetadata",
            "type": "object",
            "description": "A set of key/value pairs that you can send in the request body to check against redeemables requiring **redemption** metadata validation rules to be satisfied. The validation runs against rules that are defined through the <!-- [Create Validation Rules](https://docs.voucherify.io/reference/create-validation-rules) -->[Create Validation Rules](ref:create-validation-rules) endpoint or via the Dashboard; in the _Advanced Rule Builder_ &rarr; _Advanced_ &rarr; _Redemption metadata satisfy_ or _Basic Builder_ &rarr; _Attributes match_ &rarr; _REDEMPTION METADATA_. [Read more](https://support.voucherify.io/article/148-how-to-build-a-rule).",
            "nullable": true
          }
        }
      },
      "QualificationsCheckEligibilityResponseBody": {
        "title": "QualificationsCheckEligibilityResponseBody",
        "type": "object",
        "description": "Response body schema for **POST** `v1/qualifications`.",
        "properties": {
          "redeemables": {
            "$ref": "#/components/schemas/QualificationsRedeemables"
          },
          "tracking_id": {
            "type": "string",
            "description": "This identifier is generated during voucher qualification based on your internal id (e.g., email, database ID). This is a hashed customer source ID.",
            "nullable": true
          },
          "order": {
            "$ref": "#/components/schemas/OrderCalculated"
          },
          "stacking_rules": {
            "$ref": "#/components/schemas/StackingRules"
          }
        }
      },
      "RedemptionsGetResponseBody": {
        "title": "RedemptionsGetResponseBody",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "object": {
            "type": "string",
            "enum": [
              "redemption",
              "redemption_rollback"
            ],
            "nullable": true
          },
          "date": {
            "type": "string",
            "example": "2021-12-22T10:13:06.487Z",
            "description": "Timestamp representing the date and time when the object was created. The value is shown in the ISO 8601 format.",
            "format": "date-time",
            "nullable": true
          },
          "customer_id": {
            "type": "string",
            "nullable": true,
            "example": "cust_i8t5Tt6eiKG5K79KQlJ0Vs64",
            "description": "Unique customer ID of the redeeming customer."
          },
          "tracking_id": {
            "type": "string",
            "nullable": true,
            "description": "Hashed customer source ID."
          },
          "metadata": {
            "title": "RedemptionsGetResponseBodyMetadata",
            "type": "object",
            "nullable": true,
            "description": "The metadata object stores all custom attributes assigned to the redemption."
          },
          "amount": {
            "type": "integer",
            "nullable": true,
            "description": "For gift cards, this is a positive integer in the smallest currency unit (e.g. 100 cents for $1.00) representing the number of redeemed credits.\nFor loyalty cards, this is the number of loyalty points used in the transaction. and For gift cards, this represents the number of the credits restored to the card in the rolledback redemption. The number is a negative integer in the smallest currency unit, e.g. -100 cents for $1.00 added back to the card.\nFor loyalty cards, this represents the number of loyalty points restored to the card in the rolledback redemption. The number is a negative integer."
          },
          "redemption": {
            "nullable": true,
            "type": "string",
            "description": "Unique redemption ID of the parent redemption.",
            "example": "r_0c656311b5878a2031"
          },
          "result": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "FAILURE"
            ],
            "description": "Redemption result.",
            "nullable": true
          },
          "status": {
            "type": "string",
            "enum": [
              "SUCCEEDED",
              "FAILED",
              "ROLLED_BACK"
            ],
            "nullable": true
          },
          "session": {
            "title": "RedemptionsGetResponseBodySession",
            "type": "object",
            "description": "Contains details about the redemption session lock. Sessions can be established only for discount vouchers, promotions, and gift cards.",
            "properties": {
              "key": {
                "type": "string",
                "description": "The session unique ID assigned by Voucherify or your own unique session ID sent in the request.",
                "nullable": true
              }
            },
            "nullable": true
          },
          "related_redemptions": {
            "title": "RedemptionsGetResponseBodyRelatedRedemptions",
            "type": "object",
            "properties": {
              "rollbacks": {
                "title": "RedemptionsGetResponseBodyRelatedRedemptionsRollbacks",
                "type": "array",
                "items": {
                  "title": "RedemptionsGetResponseBodyRelatedRedemptionsRollbacksItem",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "date": {
                      "type": "string",
                      "example": "2021-12-22T10:13:06.487Z",
                      "description": "Timestamp representing the date and time when the object was created. The value is shown in the ISO 8601 format.",
                      "format": "date-time"
                    },
                    "rollback_order_mode": {
                      "type": "string",
                      "description": "Defines the rollback mode for the order. `WITH_ORDER` is a default setting. The redemption is rolled back together with the data about the order, including related discount values. `WITHOUT_ORDER` allows rolling the redemption back without affecting order data, including the applied discount values. This is returned only in GET `v1/redemptions/` and GET `v1/redemptions/{redemptionId}` endpoints.",
                      "enum": [
                        "WITH_ORDER",
                        "WITHOUT_ORDER"
                      ]
                    }
                  }
                },
                "nullable": true
              },
              "redemptions": {
                "title": "RedemptionsGetResponseBodyRelatedRedemptionsRedemptions",
                "type": "array",
                "items": {
                  "title": "RedemptionsGetResponseBodyRelatedRedemptionsRedemptionsItem",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "r_0bc92f81a6801f9bca",
                      "description": "Unique redemption ID."
                    },
                    "date": {
                      "type": "string",
                      "example": "2021-12-22T10:13:06.487Z",
                      "description": "Timestamp representing the date and time when the object was created. The value is shown in the ISO 8601 format.",
                      "format": "date-time"
                    }
                  }
                },
                "nullable": true
              }
            },
            "nullable": true
          },
          "failure_code": {
            "type": "string",
            "example": "customer_rules_violated",
            "description": "If the result is `FAILURE`, this parameter will provide a generic reason as to why the redemption failed.",
            "nullable": true
          },
          "failure_message": {
            "type": "string",
            "description": "If the result is `FAILURE`, this parameter will provide a more expanded reason as to why the redemption failed.",
            "nullable": true
          },
          "order": {
            "title": "RedemptionsGetResponseBodyOrder",
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Unique ID assigned by Voucherify of an existing order that will be linked to the redemption of this request.",
                "nullable": true
              },
              "source_id": {
                "type": "string",
                "nullable": true,
                "description": "Unique source ID of an existing order that will be linked to the redemption of this request."
              },
              "status": {
                "type": "string",
                "description": "The order status.",
                "enum": [
                  "CREATED",
                  "PAID",
                  "CANCELED",
                  "FULFILLED"
                ],
                "nullable": true
              },
              "amount": {
                "type": "integer",
                "description": "This is the sum of the order items' amounts. It is expressed as an integer in the smallest currency unit (e.g. 100 cents for $1.00).",
                "nullable": true
              },
              "initial_amount": {
                "type": "integer",
                "description": "This is the sum of the order items' amounts before any discount or other effect (e.g. add missing units) is applied. It is expressed as an integer in the smallest currency unit (e.g. 100 cents for $1.00).",
                "nullable": true
              },
              "discount_amount": {
                "type": "integer",
                "description": "Sum of all order-level discounts applied to the order. It is expressed as an integer in the smallest currency unit (e.g. 100 cents for $1.00).",
                "nullable": true
              },
              "items_discount_amount": {
                "type": "integer",
                "description": "Sum of all product-specific discounts applied to the order. It is expressed as an integer in the smallest currency unit (e.g. 100 cents for $1.00).",
                "nullable": true
              },
              "total_discount_amount": {
                "type": "integer",
                "description": "Sum of all order-level AND all product-specific discounts applied to the order. It is expressed as an integer in the smallest currency unit (e.g. 100 cents for $1.00).",
                "nullable": true
              },
              "total_amount": {
                "type": "integer",
                "description": "Order amount after undoing all the discounts through the rollback redemption. It is expressed as an integer in the smallest currency unit (e.g. 100 cents for $1.00).",
                "nullable": true
              },
              "applied_discount_amount": {
                "type": "integer",
                "description": "This field shows the order-level discount applied. It is expressed as an integer in the smallest currency unit (e.g. 100 cents for $1.00).",
                "nullable": true
              },
              "items_applied_discount_amount": {
                "type": "integer",
                "description": "Sum of all product-specific discounts applied in a particular request. It is expressed as an integer in the smallest currency unit (e.g. 100 cents for $1.00).  \n`sum(items, i => i.applied_discount_amount)`",
                "nullable": true
              },
              "total_applied_discount_amount": {
                "type": "integer",
                "description": "Sum of all order-level AND all product-specific discounts applied in a particular request. It is expressed as an integer in the smallest currency unit (e.g. 100 cents for $1.00).  \n`total_applied_discount_amount` = `applied_discount_amount` + `items_applied_discount_amount`",
                "nullable": true
              },
              "metadata": {
                "title": "RedemptionsGetResponseBodyOrderMetadata",
                "type": "object",
                "description": "A set of custom key/value pairs that you can attach to an order. It can be useful for storing additional information about the order in a structured format. It can be used to define business validation rules or discount formulas.",
                "nullable": true
              },
              "object": {
                "type": "string",
                "description": "The type of the object represented by JSON.",
                "default": "order",
                "enum": [
                  "order"
                ],
                "nullable": true
              },
              "created_at": {
                "type": "string",
                "example": "2021-12-22T10:13:06.487Z",
                "description": "Timestamp representing the date and time when the order was created. The value is shown in the ISO 8601 format.",
                "format": "date-time",
                "nullable": true
              },
              "updated_at": {
                "type": "string",
                "nullable": true,
                "example": "2021-12-22T10:14:45.316Z",
                "format": "date-time",
                "description": "Timestamp representing the date and time when the order was last updated in ISO 8601 format."
              },
              "customer_id": {
                "type": "string",
                "nullable": true,
                "description": "Unique customer identifier of the customer making the purchase. The ID is assigned by Voucherify.",
                "example": "cust_7iUa6ICKyU6gH40dBU25kQU1"
              },
              "referrer_id": {
                "type": "string",
                "nullable": true,
                "description": "Unique referrer ID.",
                "example": "cust_nM4jqPiaXUvQdVSA6vTRUnix"
              },
              "customer": {
                "title": "RedemptionsGetResponseBodyOrderCustomer",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "A unique identifier of an existing customer.",
                    "nullable": true
                  },
                  "object": {
                    "type": "string",
                    "description": "The type of the object represented by JSON.",
                    "default": "customer",
                    "enum": [
                      "customer"
                    ],
                    "nullable": true
                  }
                },
                "nullable": true
              },
              "referrer": {
                "title": "RedemptionsGetResponseBodyOrderReferrer",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "A unique identifier of an existing customer.",
                    "nullable": true
                  },
                  "object": {
                    "type": "string",
                    "description": "The type of the object represented by JSON.",
                    "default": "customer",
                    "enum": [
                      "customer"
                    ],
                    "nullable": true
                  }
                },
                "nullable": true
              },
              "redemptions": {
                "title": "RedemptionsGetResponseBodyOrderRedemptions",
                "type": "object",
                "nullable": true
              },
              "items": {
                "title": "RedemptionsGetResponseBodyOrderItems",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OrderCalculatedItem"
                },
                "nullable": true,
                "description": "Array of items applied to the order. It can include up 500 items."
              }
            },
            "nullable": true
          },
          "channel": {
            "title": "RedemptionsGetResponseBodyChannel",
            "type": "object",
            "properties": {
              "channel_id": {
                "type": "string",
                "nullable": true
              },
              "channel_type": {
                "type": "string",
                "enum": [
                  "USER",
                  "API",
                  "AUTO_REDEEM"
                ],
                "nullable": true
              }
            },
            "nullable": true
          },
          "customer": {
            "title": "RedemptionsGetResponseBodyCustomer",
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Unique identifier of an existing customer. It is assigned by Voucherify.",
                "nullable": true
              },
              "name": {
                "type": "string",
                "description": "Customer's first and last name.",
                "nullable": true
              },
              "email": {
                "type": "string",
                "description": "Customer's email address.",
                "nullable": true
              },
              "source_id": {
                "type": "string",
                "description": "A unique identifier of the customer. It can be a customer ID or email from a CRM system, database, or a third-party service.",
                "nullable": true
              },
              "metadata": {
                "title": "RedemptionsGetResponseBodyCustomerMetadata",
                "type": "object",
                "description": "A set of custom key/value pairs that are attached to the customer. It stores all custom attributes assigned to the customer.",
                "nullable": true
              },
              "object": {
                "type": "string",
                "description": "The type of the object represented by JSON.",
                "default": "customer",
                "enum": [
                  "customer"
                ],
                "nullable": true
              }
            },
            "nullable": true
          },
          "related_object_type": {
            "type": "string",
            "description": "Defines the related object.",
            "enum": [
              "voucher",
              "promotion_tier",
              "redemption"
            ],
            "nullable": true
          },
          "related_object_id": {
            "type": "string",
            "nullable": true
          },
          "promotion_tier": {
            "title": "RedemptionsGetResponseBodyPromotionTier",
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "example": "promo_63fYCt81Aw0h7lzyRkrGZh9p",
                "description": "Unique promotion tier ID.",
                "nullable": true
              },
              "created_at": {
                "type": "string",
                "example": "2021-12-15T11:34:01.333Z",
                "format": "date-time",
                "description": "Timestamp representing the date and time when the promotion tier was created. The value is shown in the ISO 8601 format.",
                "nullable": true
              },
              "updated_at": {
                "type": "string",
                "example": "2022-02-09T09:20:05.603Z",
                "format": "date-time",
                "description": "Timestamp representing the date and time when the promotion tier was updated. The value is shown in the ISO 8601 format.",
                "nullable": true
              },
              "name": {
                "type": "string",
                "description": "Name of the promotion tier.",
                "nullable": true
              },
              "banner": {
                "type": "string",
                "description": "Text to be displayed to your customers on your website.",
                "nullable": true
              },
              "action": {
                "title": "RedemptionsGetResponseBodyPromotionTierAction",
                "type": "object",
                "properties": {
                  "discount": {
                    "$ref": "#/components/schemas/Discount"
                  }
                },
                "nullable": true
              },
              "metadata": {
                "title": "RedemptionsGetResponseBodyPromotionTierMetadata",
                "type": "object",
                "description": "The metadata object stores all custom attributes assigned to the promotion tier. A set of key/value pairs that you can attach to a promotion tier object. It can be useful for storing additional information about the promotion tier in a structured format.",
                "nullable": true
              },
              "hierarchy": {
                "type": "integer",
                "description": "The promotions hierarchy defines the order in which the discounts from different tiers will be applied to a customer's order. If a customer qualifies for discounts from more than one tier, discounts will be applied in the order defined in the hierarchy.",
                "nullable": true
              },
              "promotion_id": {
                "type": "string",
                "description": "Promotion unique ID.",
                "nullable": true
              },
              "campaign": {
                "title": "RedemptionsGetResponseBodyPromotionTierCampaign",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Unique campaign ID.",
                    "nullable": true
                  },
                  "start_date": {
                    "type": "string",
                    "description": "Activation timestamp defines when the campaign starts to be active in ISO 8601 format. Campaign is *inactive before* this date. ",
                    "format": "date-time",
                    "example": "2022-09-22T00:00:00.000Z",
                    "nullable": true
                  },
                  "expiration_date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Expiration timestamp defines when the campaign expires in ISO 8601 format.  Campaign is *inactive after* this date.",
                    "example": "2022-09-30T00:00:00.000Z",
                    "nullable": true
                  },
                  "validity_timeframe": {
                    "$ref": "#/components/schemas/ValidityTimeframe"
                  },
                  "validity_day_of_week": {
                    "$ref": "#/components/schemas/ValidityDayOfWeek"
                  },
                  "validity_hours": {
                    "$ref": "#/components/schemas/ValidityHours"
                  },
                  "active": {
                    "type": "boolean",
                    "description": "A flag indicating whether the campaign is active or not active. A campaign can be disabled even though it's within the active period defined by the `start_date` and `expiration_date` using the <!-- [Disable Campaign](OpenAPI.json/paths/~1campaigns~1{campaignId}~1disable) -->[Disable Campaign](ref:disable-campaign) endpoint.  \n\n- `true` indicates an *active* campaign\n- `false` indicates an *inactive* campaign",
                    "nullable": true
                  },
                  "category_id": {
                    "type": "string",
                    "example": "cat_0b688929a2476386a6",
                    "description": "Unique category ID that this campaign belongs to.",
                    "nullable": true
                  },
                  "object": {
                    "type": "string",
                    "description": "The type of the object represented by the campaign object. This object stores information about the campaign.",
                    "default": "campaign",
                    "nullable": true
                  }
                },
                "nullable": true
              },
              "campaign_id": {
                "type": "string",
                "description": "Promotion tier's parent campaign's unique ID.",
                "nullable": true
              },
              "active": {
                "type": "boolean",
                "description": "A flag to toggle the promotion tier on or off. You can disable a promotion tier even though it's within the active period defined by the `start_date` and `expiration_date`.  \n\n- `true` indicates an *active* promotion tier\n- `false` indicates an *inactive* promotion tier",
                "nullable": true
              },
              "start_date": {
                "type": "string",
                "description": "Activation timestamp defines when the promotion tier starts to be active in ISO 8601 format. Promotion tier is *inactive before* this date. ",
                "format": "date-time",
                "example": "2022-09-23T00:00:00.000Z",
                "nullable": true
              },
              "expiration_date": {
                "type": "string",
                "description": "Activation timestamp defines when the promotion tier expires in ISO 8601 format. Promotion tier is *inactive after* this date. ",
                "format": "date-time",
                "example": "2022-09-26T00:00:00.000Z",
                "nullable": true
              },
              "validity_timeframe": {
                "$ref": "#/components/schemas/ValidityTimeframe"
              },
              "validity_day_of_week": {
                "$ref": "#/components/schemas/ValidityDayOfWeek"
              },
              "validity_hours": {
                "$ref": "#/components/schemas/ValidityHours"
              },
              "summary": {
                "title": "RedemptionsGetResponseBodyPromotionTierSummary",
                "type": "object",
                "properties": {
                  "redemptions": {
                    "title": "RedemptionsGetResponseBodyPromotionTierSummaryRedemptions",
                    "type": "object",
                    "properties": {
                      "total_redeemed": {
                        "type": "integer",
                        "description": "Number of times the promotion tier was redeemed.",
                        "nullable": true
                      }
                    },
                    "nullable": true
                  },
                  "orders": {
                    "title": "RedemptionsGetResponseBodyPromotionTierSummaryOrders",
                    "type": "object",
                    "properties": {
                      "total_amount": {
                        "type": "integer",
                        "description": "Sum of order totals.",
                        "nullable": true
                      },
                      "total_discount_amount": {
                        "type": "integer",
                        "description": "Sum of total discount applied using the promotion tier.",
                        "nullable": true
                      }
                    },
                    "nullable": true
                  }
                },
                "nullable": true
              },
              "object": {
                "type": "string",
                "default": "promotion_tier",
                "description": "The type of the object represented by JSON. This object stores information about the promotion tier.",
                "nullable": true
              },
              "validation_rule_assignments": {
                "$ref": "#/components/schemas/ValidationRuleAssignmentsList"
              },
              "category_id": {
                "type": "string",
                "description": "Promotion tier category ID.",
                "example": "cat_0c9da30e7116ba6bba",
                "nullable": true
              },
              "categories": {
                "title": "RedemptionsGetResponseBodyPromotionTierCategories",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Category"
                },
                "nullable": true
              }
            },
            "nullable": true
          },
          "reward": {
            "$ref": "#/components/schemas/RedemptionRewardResult"
          },
          "gift": {
            "title": "RedemptionsGetResponseBodyGift",
            "type": "object",
            "properties": {
              "amount": {
                "type": "integer",
                "nullable": true,
                "description": "Amount subtracted from the gift card as a result of the redemption. The amount is expressed as the smallest currency unit (e.g. 100 cents for $1.00). and Amount returned to the gift card as a result of the redemption rollback and expressed as a negative integer. The amount is expressed as the smallest currency unit (e.g. -100 cents for $1.00 returned)."
              }
            },
            "nullable": true
          },
          "loyalty_card": {
            "title": "RedemptionsGetResponseBodyLoyaltyCard",
            "type": "object",
            "properties": {
              "points": {
                "type": "integer",
                "nullable": true,
                "description": "Number of points subtracted from the loyalty card as a result of the redemption. and Number of points being returned to the loyalty card for the reward redemption rollback. It is expressed as a negative integer."
              }
            },
            "nullable": true
          },
          "voucher": {
            "title": "RedemptionsGetResponseBodyVoucher",
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "example": "v_mkZN9v7vjYUadXnHrMza8W5c34fE5KiV",
                "description": "Assigned by the Voucherify API, identifies the voucher.",
                "nullable": true
              },
              "code": {
                "type": "string",
                "example": "WVPblOYX",
                "description": "A code that identifies a voucher. Pattern can use all letters of the English alphabet, Arabic numerals, and special characters.",
                "nullable": true
              },
              "campaign": {
                "type": "string",
                "example": "Gift Card Campaign",
                "description": "A unique campaign name, identifies the voucher's parent campaign.",
                "nullable": true
              },
              "campaign_id": {
                "type": "string",
                "example": "camp_FNYR4jhqZBM9xTptxDGgeNBV",
                "description": "Assigned by the Voucherify API, identifies the voucher's parent campaign.",
                "nullable": true
              },
              "category": {
                "type": "string",
                "description": "Tag defining the category that this voucher belongs to. Useful when listing vouchers using the List Vouchers endpoint.",
                "nullable": true
              },
              "category_id": {
                "type": "string",
                "description": "Unique category ID assigned by Voucherify.",
                "example": "cat_0bb343dee3cdb5ec0c",
                "nullable": true
              },
              "type": {
                "type": "string",
                "enum": [
                  "GIFT_VOUCHER",
                  "DISCOUNT_VOUCHER",
                  "LOYALTY_CARD"
                ],
                "description": "Defines the type of the voucher. ",
                "nullable": true
              },
              "discount": {
                "$ref": "#/components/schemas/Discount"
              },
              "gift": {
                "title": "RedemptionsGetResponseBodyVoucherGift",
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "integer",
                    "example": 10000,
                    "description": "Total gift card income over the lifetime of the card. The value is multiplied by 100 to represent 2 decimal places. For example `10000 cents` for `$100.00`.",
                    "nullable": true
                  },
                  "subtracted_amount": {
                    "type": "integer",
                    "description": "Total amount of subtracted credits over the gift card lifetime. The value is multiplied by 100 to represent 2 decimal places. For example `10000 cents` for `$100.00`.",
                    "nullable": true
                  },
                  "balance": {
                    "type": "integer",
                    "example": 500,
                    "description": "Available funds. The value is multiplied by 100 to represent 2 decimal places. For example `10000 cents` for `$100.00`.",
                    "nullable": true
                  },
                  "effect": {
                    "type": "string",
                    "enum": [
                      "APPLY_TO_ORDER",
                      "APPLY_TO_ITEMS"
                    ],
                    "description": "Defines how the credits are applied to the customer's order.",
                    "nullable": true
                  }
                },
                "nullable": true
              },
              "loyalty_card": {
                "title": "RedemptionsGetResponseBodyVoucherLoyaltyCard",
                "type": "object",
                "properties": {
                  "points": {
                    "type": "integer",
                    "example": 7000,
                    "description": "Total number of points added to the loyalty card over its lifespan.",
                    "nullable": true
                  },
                  "balance": {
                    "type": "integer",
                    "example": 6970,
                    "description": "Points available for reward redemption. This is calculated as follows: `balance` = `points` - `expired_points` - `subtracted_points` - `redemption.redeemed_points`.",
                    "nullable": true
                  },
                  "next_expiration_date": {
                    "type": "string",
                    "format": "date",
                    "example": "2023-05-30",
                    "description": "The next closest date when the next set of points are due to expire.",
                    "nullable": true
                  },
                  "next_expiration_points": {
                    "type": "integer",
                    "description": "The amount of points that are set to expire next.",
                    "nullable": true
                  },
                  "pending_points": {
                    "type": "integer",
                    "description": "Shows the number of pending points that will be added to the loyalty card when they are activated automatically or manually.",
                    "nullable": true
                  },
                  "expired_points": {
                    "type": "integer",
                    "description": "Shows the total number of expired points over the lifetime of the loyalty card.",
                    "nullable": true
                  },
                  "subtracted_points": {
                    "type": "integer",
                    "description": "Shows the total number of subtracted points over the lifetime of the loyalty card.",
                    "nullable": true
                  }
                },
                "nullable": true
              },
              "start_date": {
                "type": "string",
                "example": "2021-12-01T00:00:00.000Z",
                "format": "date-time",
                "description": "Activation timestamp defines when the code starts to be active in ISO 8601 format. Voucher is *inactive before* this date. ",
                "nullable": true
              },
              "expiration_date": {
                "type": "string",
                "example": "2021-12-31T00:00:00.000Z",
                "format": "date-time",
                "description": "Expiration timestamp defines when the code expires in ISO 8601 format.  Voucher is *inactive after* this date.",
                "nullable": true
              },
              "validity_timeframe": {
                "$ref": "#/components/schemas/ValidityTimeframe"
              },
              "validity_day_of_week": {
                "$ref": "#/components/schemas/ValidityDayOfWeek"
              },
              "validity_hours": {
                "$ref": "#/components/schemas/ValidityHours"
              },
              "active": {
                "type": "boolean",
                "nullable": true,
                "description": "A flag to toggle the voucher on or off. You can disable a voucher even though it's within the active period defined by the `start_date` and `expiration_date`.  \n\n- `true` indicates an *active* voucher\n- `false` indicates an *inactive* voucher"
              },
              "additional_info": {
                "type": "string",
                "description": "An optional field to keep any extra textual information about the code such as a code description and details.",
                "nullable": true
              },
              "metadata": {
                "title": "RedemptionsGetResponseBodyVoucherMetadata",
                "type": "object",
                "description": "The metadata object stores all custom attributes assigned to the code. A set of key/value pairs that you can attach to a voucher object. It can be useful for storing additional information about the voucher in a structured format.",
                "nullable": true
              },
              "assets": {
                "$ref": "#/components/schemas/VoucherAssets"
              },
              "is_referral_code": {
                "type": "boolean",
                "nullable": true,
                "description": "Flag indicating whether this voucher is a referral code; `true` for campaign type `REFERRAL_PROGRAM`."
              },
              "created_at": {
                "type": "string",
                "example": "2021-12-22T10:13:06.487Z",
                "description": "Timestamp representing the date and time when the voucher was created. The value is shown in the ISO 8601 format.",
                "format": "date-time",
                "nullable": true
              },
              "updated_at": {
                "type": "string",
                "example": "2021-12-22T10:14:45.316Z",
                "format": "date-time",
                "description": "Timestamp representing the date and time when the voucher was last updated in ISO 8601 format.",
                "nullable": true
              },
              "holder_id": {
                "type": "string",
                "example": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                "description": "Unique customer identifier of the redeemable holder. It equals to the customer ID assigned by Voucherify.",
                "nullable": true
              },
              "referrer_id": {
                "type": "string",
                "description": "Unique identifier of the referring person.",
                "example": "cust_Vzck5i8U3OhcEUFY6MKhN9Rv",
                "nullable": true
              },
              "object": {
                "type": "string",
                "description": "The type of the object represented by JSON. Default is `voucher`.",
                "default": "voucher",
                "nullable": true
              },
              "publish": {
                "title": "RedemptionsGetResponseBodyVoucherPublish",
                "type": "object",
                "properties": {
                  "object": {
                    "type": "string",
                    "default": "list",
                    "description": "The type of the object represented is by default `list`. To get this list, you need to make a call to the endpoint returned in the `url` attribute.",
                    "nullable": true
                  },
                  "count": {
                    "type": "integer",
                    "example": 0,
                    "description": "Publication events counter.",
                    "nullable": true
                  },
                  "url": {
                    "type": "string",
                    "example": "/v1/vouchers/WVPblOYX/publications?page=1&limit=10",
                    "description": "The endpoint where this list of publications can be accessed using a **GET** method. `/v1/vouchers/{voucher_code}/publications`",
                    "nullable": true
                  }
                },
                "nullable": true
              },
              "redemption": {
                "title": "RedemptionsGetResponseBodyVoucherRedemption",
                "type": "object",
                "properties": {
                  "quantity": {
                    "type": "integer",
                    "description": "How many times a voucher can be redeemed. A `null` value means unlimited.",
                    "nullable": true
                  },
                  "redeemed_quantity": {
                    "type": "integer",
                    "example": 1,
                    "description": "How many times a voucher has already been redeemed.",
                    "nullable": true
                  },
                  "redeemed_points": {
                    "type": "integer",
                    "example": 100000,
                    "description": "Total loyalty points redeemed.",
                    "nullable": true
                  },
                  "object": {
                    "type": "string",
                    "default": "list",
                    "description": "The type of the object represented is by default `list`. To get this list, you need to make a call to the endpoint returned in the url attribute.",
                    "nullable": true
                  },
                  "url": {
                    "type": "string",
                    "example": "/v1/vouchers/WVPblOYX/redemptions?page=1&limit=10",
                    "description": "The endpoint where this list of redemptions can be accessed using a **GET** method. `/v1/vouchers/{voucher_code}/redemptions`",
                    "nullable": true
                  }
                },
                "nullable": true
              },
              "categories": {
                "title": "RedemptionsGetResponseBodyVoucherCategories",
                "type": "array",
                "description": "Contains details about the category.",
                "items": {
                  "$ref": "#/components/schemas/Category"
                },
                "nullable": true
              },
              "validation_rules_assignments": {
                "$ref": "#/components/schemas/ValidationRulesAssignmentsList"
              },
              "holder": {
                "$ref": "#/components/schemas/SimpleCustomer"
              }
            },
            "nullable": true
          },
          "reason": {
            "type": "string",
            "description": "System generated cause for the redemption being invalid in the context of the provided parameters.",
            "nullable": true
          }
        }
      },
      "RedemptionsListResponseBody": {
        "title": "RedemptionsListResponseBody",
        "type": "object",
        "description": "Response body schema for **GET** `v1/redemptions`.",
        "properties": {
          "object": {
            "type": "string",
            "default": "list",
            "description": "The type of the object represented by JSON. This object stores information about redemptions in a dictionary.",
            "nullable": true
          },
          "data_ref": {
            "type": "string",
            "default": "redemptions",
            "description": "Identifies the name of the attribute that contains the array of redemption objects.",
            "nullable": true
          },
          "redemptions": {
            "title": "RedemptionsListResponseBodyRedemptions",
            "type": "array",
            "items": {
              "title": "RedemptionsListResponseBodyRedemptionsItem",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "object": {
                  "type": "string",
                  "enum": [
                    "redemption",
                    "redemption_rollback"
                  ]
                },
                "date": {
                  "type": "string",
                  "example": "2021-12-22T10:13:06.487Z",
                  "description": "Timestamp representing the date and time when the object was created. The value is shown in the ISO 8601 format.",
                  "format": "date-time",
                  "nullable": true
                },
                "customer_id": {
                  "type": "string",
                  "nullable": true,
                  "example": "cust_i8t5Tt6eiKG5K79KQlJ0Vs64",
                  "description": "Unique customer ID of the redeeming customer."
                },
                "tracking_id": {
                  "type": "string",
                  "nullable": true,
                  "description": "Hashed customer source ID."
                },
                "metadata": {
                  "title": "RedemptionsListResponseBodyRedemptionsItemMetadata",
                  "type": "object",
                  "nullable": true,
                  "description": "The metadata object stores all custom attributes assigned to the redemption."
                },
                "amount": {
                  "type": "integer",
                  "description": "For gift cards, this is a positive integer in the smallest currency unit (e.g. 100 cents for $1.00) representing the number of redeemed credits.\nFor loyalty cards, this is the number of loyalty points used in the transaction. and For gift cards, this represents the number of the credits restored to the card in the rolledback redemption. The number is a negative integer in the smallest currency unit, e.g. -100 cents for $1.00 added back to the card.\nFor loyalty cards, this represents the number of loyalty points restored to the card in the rolledback redemption. The number is a negative integer."
                },
                "redemption": {
                  "nullable": true,
                  "type": "string",
                  "description": "Unique redemption ID of the parent redemption.",
                  "example": "r_0c656311b5878a2031"
                },
                "result": {
                  "type": "string",
                  "enum": [
                    "SUCCESS",
                    "FAILURE"
                  ],
                  "description": "Redemption result.",
                  "nullable": true
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "SUCCEEDED",
                    "FAILED",
                    "ROLLED_BACK"
                  ]
                },
                "session": {
                  "title": "RedemptionsListResponseBodyRedemptionsItemSession",
                  "type": "object",
                  "description": "Contains details about the redemption session lock. Sessions can be established only for discount vouchers, promotions, and gift cards.",
                  "properties": {
                    "key": {
                      "type": "string",
                      "description": "The session unique ID assigned by Voucherify or your own unique session ID sent in the request.",
                      "nullable": true
                    }
                  },
                  "nullable": true
                },
                "related_redemptions": {
                  "title": "RedemptionsListResponseBodyRedemptionsItemRelatedRedemptions",
                  "type": "object",
                  "properties": {
                    "rollbacks": {
                      "title": "RedemptionsListResponseBodyRedemptionsItemRelatedRedemptionsRollbacks",
                      "type": "array",
                      "items": {
                        "title": "RedemptionsListResponseBodyRedemptionsItemRelatedRedemptionsRollbacksItem",
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "date": {
                            "type": "string",
                            "example": "2021-12-22T10:13:06.487Z",
                            "description": "Timestamp representing the date and time when the object was created. The value is shown in the ISO 8601 format.",
                            "format": "date-time"
                          },
                          "rollback_order_mode": {
                            "type": "string",
                            "description": "Defines the rollback mode for the order. `WITH_ORDER` is a default setting. The redemption is rolled back together with the data about the order, including related discount values. `WITHOUT_ORDER` allows rolling the redemption back without affecting order data, including the applied discount values. This is returned only in GET `v1/redemptions/` and GET `v1/redemptions/{redemptionId}` endpoints.",
                            "enum": [
                              "WITH_ORDER",
                              "WITHOUT_ORDER"
                            ]
                          }
                        }
                      }
                    },
                    "redemptions": {
                      "title": "RedemptionsListResponseBodyRedemptionsItemRelatedRedemptionsRedemptions",
                      "type": "array",
                      "items": {
                        "title": "RedemptionsListResponseBodyRedemptionsItemRelatedRedemptionsRedemptionsItem",
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "r_0bc92f81a6801f9bca",
                            "description": "Unique redemption ID."
                          },
                          "date": {
                            "type": "string",
                            "example": "2021-12-22T10:13:06.487Z",
                            "description": "Timestamp representing the date and time when the object was created. The value is shown in the ISO 8601 format.",
                            "format": "date-time"
                          }
                        }
                      }
                    }
                  }
                },
                "failure_code": {
                  "type": "string",
                  "example": "customer_rules_violated",
                  "description": "If the result is `FAILURE`, this parameter will provide a generic reason as to why the redemption failed.",
                  "nullable": true
                },
                "failure_message": {
                  "type": "string",
                  "description": "If the result is `FAILURE`, this parameter will provide a more expanded reason as to why the redemption failed.",
                  "nullable": true
                },
                "order": {
                  "title": "RedemptionsListResponseBodyRedemptionsItemOrder",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique ID assigned by Voucherify of an existing order that will be linked to the redemption of this request.",
                      "nullable": true
                    },
                    "source_id": {
                      "type": "string",
                      "nullable": true,
                      "description": "Unique source ID of an existing order that will be linked to the redemption of this request."
                    },
                    "status": {
                      "type": "string",
                      "description": "The order status.",
                      "enum": [
                        "CREATED",
                        "PAID",
                        "CANCELED",
                        "FULFILLED"
                      ],
                      "nullable": true
                    },
                    "amount": {
                      "type": "integer",
                      "description": "This is the sum of the order items' amounts. It is expressed as an integer in the smallest currency unit (e.g. 100 cents for $1.00).",
                      "nullable": true
                    },
                    "initial_amount": {
                      "type": "integer",
                      "description": "This is the sum of the order items' amounts before any discount or other effect (e.g. add missing units) is applied. It is expressed as an integer in the smallest currency unit (e.g. 100 cents for $1.00).",
                      "nullable": true
                    },
                    "discount_amount": {
                      "type": "integer",
                      "description": "Sum of all order-level discounts applied to the order. It is expressed as an integer in the smallest currency unit (e.g. 100 cents for $1.00).",
                      "nullable": true
                    },
                    "items_discount_amount": {
                      "type": "integer",
                      "description": "Sum of all product-specific discounts applied to the order. It is expressed as an integer in the smallest currency unit (e.g. 100 cents for $1.00).",
                      "nullable": true
                    },
                    "total_discount_amount": {
                      "type": "integer",
                      "description": "Sum of all order-level AND all product-specific discounts applied to the order. It is expressed as an integer in the smallest currency unit (e.g. 100 cents for $1.00).",
                      "nullable": true
                    },
                    "total_amount": {
                      "type": "integer",
                      "description": "Order amount after undoing all the discounts through the rollback redemption. It is expressed as an integer in the smallest currency unit (e.g. 100 cents for $1.00).",
                      "nullable": true
                    },
                    "applied_discount_amount": {
                      "type": "integer",
                      "description": "This field shows the order-level discount applied. It is expressed as an integer in the smallest currency unit (e.g. 100 cents for $1.00).",
                      "nullable": true
                    },
                    "items_applied_discount_amount": {
                      "type": "integer",
                      "description": "Sum of all product-specific discounts applied in a particular request. It is expressed as an integer in the smallest currency unit (e.g. 100 cents for $1.00).  \n`sum(items, i => i.applied_discount_amount)`",
                      "nullable": true
                    },
                    "total_applied_discount_amount": {
                      "type": "integer",
                      "description": "Sum of all order-level AND all product-specific discounts applied in a particular request. It is expressed as an integer in the smallest currency unit (e.g. 100 cents for $1.00).  \n`total_applied_discount_amount` = `applied_discount_amount` + `items_applied_discount_amount`",
                      "nullable": true
                    },
                    "metadata": {
                      "title": "RedemptionsListResponseBodyRedemptionsItemOrderMetadata",
                      "type": "object",
                      "description": "A set of custom key/value pairs that you can attach to an order. It can be useful for storing additional information about the order in a structured format. It can be used to define business validation rules or discount formulas.",
                      "nullable": true
                    },
                    "object": {
                      "type": "string",
                      "description": "The type of the object represented by JSON.",
                      "default": "order",
                      "enum": [
                        "order"
                      ],
                      "nullable": true
                    },
                    "created_at": {
                      "type": "string",
                      "example": "2021-12-22T10:13:06.487Z",
                      "description": "Timestamp representing the date and time when the order was created. The value is shown in the ISO 8601 format.",
                      "format": "date-time",
                      "nullable": true
                    },
                    "updated_at": {
                      "type": "string",
                      "nullable": true,
                      "example": "2021-12-22T10:14:45.316Z",
                      "format": "date-time",
                      "description": "Timestamp representing the date and time when the order was last updated in ISO 8601 format."
                    },
                    "customer_id": {
                      "type": "string",
                      "nullable": true,
                      "description": "Unique customer identifier of the customer making the purchase. The ID is assigned by Voucherify.",
                      "example": "cust_7iUa6ICKyU6gH40dBU25kQU1"
                    },
                    "referrer_id": {
                      "type": "string",
                      "nullable": true,
                      "description": "Unique referrer ID.",
                      "example": "cust_nM4jqPiaXUvQdVSA6vTRUnix"
                    },
                    "customer": {
                      "title": "RedemptionsListResponseBodyRedemptionsItemOrderCustomer",
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "A unique identifier of an existing customer.",
                          "nullable": true
                        },
                        "object": {
                          "type": "string",
                          "description": "The type of the object represented by JSON.",
                          "default": "customer",
                          "enum": [
                            "customer"
                          ],
                          "nullable": true
                        }
                      }
                    },
                    "referrer": {
                      "title": "RedemptionsListResponseBodyRedemptionsItemOrderReferrer",
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "A unique identifier of an existing customer.",
                          "nullable": true
                        },
                        "object": {
                          "type": "string",
                          "description": "The type of the object represented by JSON.",
                          "default": "customer",
                          "enum": [
                            "customer"
                          ],
                          "nullable": true
                        }
                      }
                    },
                    "redemptions": {
                      "title": "RedemptionsListResponseBodyRedemptionsItemOrderRedemptions",
                      "type": "object",
                      "nullable": true
                    },
                    "items": {
                      "title": "RedemptionsListResponseBodyRedemptionsItemOrderItems",
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/OrderCalculatedItem"
                      },
                      "description": "Array of items applied to the order. It can include up 500 items."
                    }
                  }
                },
                "channel": {
                  "title": "RedemptionsListResponseBodyRedemptionsItemChannel",
                  "type": "object",
                  "properties": {
                    "channel_id": {
                      "type": "string"
                    },
                    "channel_type": {
                      "type": "string",
                      "enum": [
                        "USER",
                        "API",
                        "AUTO_REDEEM"
                      ]
                    }
                  }
                },
                "customer": {
                  "title": "RedemptionsListResponseBodyRedemptionsItemCustomer",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique identifier of an existing customer. It is assigned by Voucherify.",
                      "nullable": true
                    },
                    "name": {
                      "type": "string",
                      "description": "Customer's first and last name.",
                      "nullable": true
                    },
                    "email": {
                      "type": "string",
                      "description": "Customer's email address.",
                      "nullable": true
                    },
                    "source_id": {
                      "type": "string",
                      "description": "A unique identifier of the customer. It can be a customer ID or email from a CRM system, database, or a third-party service.",
                      "nullable": true
                    },
                    "metadata": {
                      "title": "RedemptionsListResponseBodyRedemptionsItemCustomerMetadata",
                      "type": "object",
                      "description": "A set of custom key/value pairs that are attached to the customer. It stores all custom attributes assigned to the customer.",
                      "nullable": true
                    },
                    "object": {
                      "type": "string",
                      "description": "The type of the object represented by JSON.",
                      "default": "customer",
                      "enum": [
                        "customer"
                      ],
                      "nullable": true
                    }
                  }
                },
                "related_object_type": {
                  "type": "string",
                  "description": "Defines the related object.",
                  "enum": [
                    "voucher",
                    "promotion_tier",
                    "redemption"
                  ],
                  "nullable": true
                },
                "related_object_id": {
                  "type": "string"
                },
                "promotion_tier": {
                  "title": "RedemptionsListResponseBodyRedemptionsItemPromotionTier",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "promo_63fYCt81Aw0h7lzyRkrGZh9p",
                      "description": "Unique promotion tier ID.",
                      "nullable": true
                    },
                    "created_at": {
                      "type": "string",
                      "example": "2021-12-15T11:34:01.333Z",
                      "format": "date-time",
                      "description": "Timestamp representing the date and time when the promotion tier was created. The value is shown in the ISO 8601 format.",
                      "nullable": true
                    },
                    "updated_at": {
                      "type": "string",
                      "example": "2022-02-09T09:20:05.603Z",
                      "format": "date-time",
                      "description": "Timestamp representing the date and time when the promotion tier was updated. The value is shown in the ISO 8601 format.",
                      "nullable": true
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the promotion tier.",
                      "nullable": true
                    },
                    "banner": {
                      "type": "string",
                      "description": "Text to be displayed to your customers on your website.",
                      "nullable": true
                    },
                    "action": {
                      "title": "RedemptionsListResponseBodyRedemptionsItemPromotionTierAction",
                      "type": "object",
                      "properties": {
                        "discount": {
                          "$ref": "#/components/schemas/Discount"
                        }
                      }
                    },
                    "metadata": {
                      "title": "RedemptionsListResponseBodyRedemptionsItemPromotionTierMetadata",
                      "type": "object",
                      "description": "The metadata object stores all custom attributes assigned to the promotion tier. A set of key/value pairs that you can attach to a promotion tier object. It can be useful for storing additional information about the promotion tier in a structured format.",
                      "nullable": true
                    },
                    "hierarchy": {
                      "type": "integer",
                      "description": "The promotions hierarchy defines the order in which the discounts from different tiers will be applied to a customer's order. If a customer qualifies for discounts from more than one tier, discounts will be applied in the order defined in the hierarchy.",
                      "nullable": true
                    },
                    "promotion_id": {
                      "type": "string",
                      "description": "Promotion unique ID.",
                      "nullable": true
                    },
                    "campaign": {
                      "title": "RedemptionsListResponseBodyRedemptionsItemPromotionTierCampaign",
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Unique campaign ID.",
                          "nullable": true
                        },
                        "start_date": {
                          "type": "string",
                          "description": "Activation timestamp defines when the campaign starts to be active in ISO 8601 format. Campaign is *inactive before* this date. ",
                          "format": "date-time",
                          "example": "2022-09-22T00:00:00.000Z",
                          "nullable": true
                        },
                        "expiration_date": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Expiration timestamp defines when the campaign expires in ISO 8601 format.  Campaign is *inactive after* this date.",
                          "example": "2022-09-30T00:00:00.000Z",
                          "nullable": true
                        },
                        "validity_timeframe": {
                          "$ref": "#/components/schemas/ValidityTimeframe"
                        },
                        "validity_day_of_week": {
                          "$ref": "#/components/schemas/ValidityDayOfWeek"
                        },
                        "validity_hours": {
                          "$ref": "#/components/schemas/ValidityHours"
                        },
                        "active": {
                          "type": "boolean",
                          "description": "A flag indicating whether the campaign is active or not active. A campaign can be disabled even though it's within the active period defined by the `start_date` and `expiration_date` using the <!-- [Disable Campaign](OpenAPI.json/paths/~1campaigns~1{campaignId}~1disable) -->[Disable Campaign](ref:disable-campaign) endpoint.  \n\n- `true` indicates an *active* campaign\n- `false` indicates an *inactive* campaign",
                          "nullable": true
                        },
                        "category_id": {
                          "type": "string",
                          "example": "cat_0b688929a2476386a6",
                          "description": "Unique category ID that this campaign belongs to.",
                          "nullable": true
                        },
                        "object": {
                          "type": "string",
                          "description": "The type of the object represented by the campaign object. This object stores information about the campaign.",
                          "default": "campaign",
                          "nullable": true
                        }
                      }
                    },
                    "campaign_id": {
                      "type": "string",
                      "description": "Promotion tier's parent campaign's unique ID.",
                      "nullable": true
                    },
                    "active": {
                      "type": "boolean",
                      "description": "A flag to toggle the promotion tier on or off. You can disable a promotion tier even though it's within the active period defined by the `start_date` and `expiration_date`.  \n\n- `true` indicates an *active* promotion tier\n- `false` indicates an *inactive* promotion tier",
                      "nullable": true
                    },
                    "start_date": {
                      "type": "string",
                      "description": "Activation timestamp defines when the promotion tier starts to be active in ISO 8601 format. Promotion tier is *inactive before* this date. ",
                      "format": "date-time",
                      "example": "2022-09-23T00:00:00.000Z",
                      "nullable": true
                    },
                    "expiration_date": {
                      "type": "string",
                      "description": "Activation timestamp defines when the promotion tier expires in ISO 8601 format. Promotion tier is *inactive after* this date. ",
                      "format": "date-time",
                      "example": "2022-09-26T00:00:00.000Z",
                      "nullable": true
                    },
                    "validity_timeframe": {
                      "$ref": "#/components/schemas/ValidityTimeframe"
                    },
                    "validity_day_of_week": {
                      "$ref": "#/components/schemas/ValidityDayOfWeek"
                    },
                    "validity_hours": {
                      "$ref": "#/components/schemas/ValidityHours"
                    },
                    "summary": {
                      "title": "RedemptionsListResponseBodyRedemptionsItemPromotionTierSummary",
                      "type": "object",
                      "properties": {
                        "redemptions": {
                          "title": "RedemptionsListResponseBodyRedemptionsItemPromotionTierSummaryRedemptions",
                          "type": "object",
                          "properties": {
                            "total_redeemed": {
                              "type": "integer",
                              "description": "Number of times the promotion tier was redeemed.",
                              "nullable": true
                            }
                          }
                        },
                        "orders": {
                          "title": "RedemptionsListResponseBodyRedemptionsItemPromotionTierSummaryOrders",
                          "type": "object",
                          "properties": {
                            "total_amount": {
                              "type": "integer",
                              "description": "Sum of order totals.",
                              "nullable": true
                            },
                            "total_discount_amount": {
                              "type": "integer",
                              "description": "Sum of total discount applied using the promotion tier.",
                              "nullable": true
                            }
                          }
                        }
                      }
                    },
                    "object": {
                      "type": "string",
                      "default": "promotion_tier",
                      "description": "The type of the object represented by JSON. This object stores information about the promotion tier.",
                      "nullable": true
                    },
                    "validation_rule_assignments": {
                      "$ref": "#/components/schemas/ValidationRuleAssignmentsList"
                    },
                    "category_id": {
                      "type": "string",
                      "description": "Promotion tier category ID.",
                      "example": "cat_0c9da30e7116ba6bba",
                      "nullable": true
                    },
                    "categories": {
                      "title": "RedemptionsListResponseBodyRedemptionsItemPromotionTierCategories",
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Category"
                      },
                      "nullable": true
                    }
                  }
                },
                "reward": {
                  "$ref": "#/components/schemas/RedemptionRewardResult"
                },
                "gift": {
                  "title": "RedemptionsListResponseBodyRedemptionsItemGift",
                  "type": "object",
                  "properties": {
                    "amount": {
                      "type": "integer",
                      "description": "Amount subtracted from the gift card as a result of the redemption. The amount is expressed as the smallest currency unit (e.g. 100 cents for $1.00). and Amount returned to the gift card as a result of the redemption rollback and expressed as a negative integer. The amount is expressed as the smallest currency unit (e.g. -100 cents for $1.00 returned)."
                    }
                  }
                },
                "loyalty_card": {
                  "title": "RedemptionsListResponseBodyRedemptionsItemLoyaltyCard",
                  "type": "object",
                  "properties": {
                    "points": {
                      "type": "integer",
                      "description": "Number of points subtracted from the loyalty card as a result of the redemption. and Number of points being returned to the loyalty card for the reward redemption rollback. It is expressed as a negative integer."
                    }
                  }
                },
                "voucher": {
                  "title": "RedemptionsListResponseBodyRedemptionsItemVoucher",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "v_mkZN9v7vjYUadXnHrMza8W5c34fE5KiV",
                      "description": "Assigned by the Voucherify API, identifies the voucher.",
                      "nullable": true
                    },
                    "code": {
                      "type": "string",
                      "example": "WVPblOYX",
                      "description": "A code that identifies a voucher. Pattern can use all letters of the English alphabet, Arabic numerals, and special characters.",
                      "nullable": true
                    },
                    "campaign": {
                      "type": "string",
                      "example": "Gift Card Campaign",
                      "description": "A unique campaign name, identifies the voucher's parent campaign.",
                      "nullable": true
                    },
                    "campaign_id": {
                      "type": "string",
                      "example": "camp_FNYR4jhqZBM9xTptxDGgeNBV",
                      "description": "Assigned by the Voucherify API, identifies the voucher's parent campaign.",
                      "nullable": true
                    },
                    "category": {
                      "type": "string",
                      "description": "Tag defining the category that this voucher belongs to. Useful when listing vouchers using the List Vouchers endpoint.",
                      "nullable": true
                    },
                    "category_id": {
                      "type": "string",
                      "description": "Unique category ID assigned by Voucherify.",
                      "example": "cat_0bb343dee3cdb5ec0c",
                      "nullable": true
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "GIFT_VOUCHER",
                        "DISCOUNT_VOUCHER",
                        "LOYALTY_CARD"
                      ],
                      "description": "Defines the type of the voucher. ",
                      "nullable": true
                    },
                    "discount": {
                      "$ref": "#/components/schemas/Discount"
                    },
                    "gift": {
                      "title": "RedemptionsListResponseBodyRedemptionsItemVoucherGift",
                      "type": "object",
                      "properties": {
                        "amount": {
                          "type": "integer",
                          "example": 10000,
                          "description": "Total gift card income over the lifetime of the card. The value is multiplied by 100 to represent 2 decimal places. For example `10000 cents` for `$100.00`.",
                          "nullable": true
                        },
                        "subtracted_amount": {
                          "type": "integer",
                          "description": "Total amount of subtracted credits over the gift card lifetime. The value is multiplied by 100 to represent 2 decimal places. For example `10000 cents` for `$100.00`.",
                          "nullable": true
                        },
                        "balance": {
                          "type": "integer",
                          "example": 500,
                          "description": "Available funds. The value is multiplied by 100 to represent 2 decimal places. For example `10000 cents` for `$100.00`.",
                          "nullable": true
                        },
                        "effect": {
                          "type": "string",
                          "enum": [
                            "APPLY_TO_ORDER",
                            "APPLY_TO_ITEMS"
                          ],
                          "description": "Defines how the credits are applied to the customer's order.",
                          "nullable": true
                        }
                      }
                    },
                    "loyalty_card": {
                      "title": "RedemptionsListResponseBodyRedemptionsItemVoucherLoyaltyCard",
                      "type": "object",
                      "properties": {
                        "points": {
                          "type": "integer",
                          "example": 7000,
                          "description": "Total number of points added to the loyalty card over its lifespan.",
                          "nullable": true
                        },
                        "balance": {
                          "type": "integer",
                          "example": 6970,
                          "description": "Points available for reward redemption. This is calculated as follows: `balance` = `points` - `expired_points` - `subtracted_points` - `redemption.redeemed_points`.",
                          "nullable": true
                        },
                        "next_expiration_date": {
                          "type": "string",
                          "format": "date",
                          "example": "2023-05-30",
                          "description": "The next closest date when the next set of points are due to expire.",
                          "nullable": true
                        },
                        "next_expiration_points": {
                          "type": "integer",
                          "description": "The amount of points that are set to expire next.",
                          "nullable": true
                        },
                        "pending_points": {
                          "type": "integer",
                          "description": "Shows the number of pending points that will be added to the loyalty card when they are activated automatically or manually.",
                          "nullable": true
                        },
                        "expired_points": {
                          "type": "integer",
                          "description": "Shows the total number of expired points over the lifetime of the loyalty card.",
                          "nullable": true
                        },
                        "subtracted_points": {
                          "type": "integer",
                          "description": "Shows the total number of subtracted points over the lifetime of the loyalty card.",
                          "nullable": true
                        }
                      }
                    },
                    "start_date": {
                      "type": "string",
                      "example": "2021-12-01T00:00:00.000Z",
                      "format": "date-time",
                      "description": "Activation timestamp defines when the code starts to be active in ISO 8601 format. Voucher is *inactive before* this date. ",
                      "nullable": true
                    },
                    "expiration_date": {
                      "type": "string",
                      "example": "2021-12-31T00:00:00.000Z",
                      "format": "date-time",
                      "description": "Expiration timestamp defines when the code expires in ISO 8601 format.  Voucher is *inactive after* this date.",
                      "nullable": true
                    },
                    "validity_timeframe": {
                      "$ref": "#/components/schemas/ValidityTimeframe"
                    },
                    "validity_day_of_week": {
                      "$ref": "#/components/schemas/ValidityDayOfWeek"
                    },
                    "validity_hours": {
                      "$ref": "#/components/schemas/ValidityHours"
                    },
                    "active": {
                      "type": "boolean",
                      "nullable": true,
                      "description": "A flag to toggle the voucher on or off. You can disable a voucher even though it's within the active period defined by the `start_date` and `expiration_date`.  \n\n- `true` indicates an *active* voucher\n- `false` indicates an *inactive* voucher"
                    },
                    "additional_info": {
                      "type": "string",
                      "description": "An optional field to keep any extra textual information about the code such as a code description and details.",
                      "nullable": true
                    },
                    "metadata": {
                      "title": "RedemptionsListResponseBodyRedemptionsItemVoucherMetadata",
                      "type": "object",
                      "description": "The metadata object stores all custom attributes assigned to the code. A set of key/value pairs that you can attach to a voucher object. It can be useful for storing additional information about the voucher in a structured format.",
                      "nullable": true
                    },
                    "assets": {
                      "$ref": "#/components/schemas/VoucherAssets"
                    },
                    "is_referral_code": {
                      "type": "boolean",
                      "nullable": true,
                      "description": "Flag indicating whether this voucher is a referral code; `true` for campaign type `REFERRAL_PROGRAM`."
                    },
                    "created_at": {
                      "type": "string",
                      "example": "2021-12-22T10:13:06.487Z",
                      "description": "Timestamp representing the date and time when the voucher was created. The value is shown in the ISO 8601 format.",
                      "format": "date-time",
                      "nullable": true
                    },
                    "updated_at": {
                      "type": "string",
                      "example": "2021-12-22T10:14:45.316Z",
                      "format": "date-time",
                      "description": "Timestamp representing the date and time when the voucher was last updated in ISO 8601 format.",
                      "nullable": true
                    },
                    "holder_id": {
                      "type": "string",
                      "example": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                      "description": "Unique customer identifier of the redeemable holder. It equals to the customer ID assigned by Voucherify.",
                      "nullable": true
                    },
                    "referrer_id": {
                      "type": "string",
                      "description": "Unique identifier of the referring person.",
                      "example": "cust_Vzck5i8U3OhcEUFY6MKhN9Rv",
                      "nullable": true
                    },
                    "object": {
                      "type": "string",
                      "description": "The type of the object represented by JSON. Default is `voucher`.",
                      "default": "voucher",
                      "nullable": true
                    },
                    "publish": {
                      "title": "RedemptionsListResponseBodyRedemptionsItemVoucherPublish",
                      "type": "object",
                      "properties": {
                        "object": {
                          "type": "string",
                          "default": "list",
                          "description": "The type of the object represented is by default `list`. To get this list, you need to make a call to the endpoint returned in the `url` attribute.",
                          "nullable": true
                        },
                        "count": {
                          "type": "integer",
                          "example": 0,
                          "description": "Publication events counter.",
                          "nullable": true
                        },
                        "url": {
                          "type": "string",
                          "example": "/v1/vouchers/WVPblOYX/publications?page=1&limit=10",
                          "description": "The endpoint where this list of publications can be accessed using a **GET** method. `/v1/vouchers/{voucher_code}/publications`",
                          "nullable": true
                        }
                      }
                    },
                    "redemption": {
                      "title": "RedemptionsListResponseBodyRedemptionsItemVoucherRedemption",
                      "type": "object",
                      "properties": {
                        "quantity": {
                          "type": "integer",
                          "description": "How many times a voucher can be redeemed. A `null` value means unlimited.",
                          "nullable": true
                        },
                        "redeemed_quantity": {
                          "type": "integer",
                          "example": 1,
                          "description": "How many times a voucher has already been redeemed.",
                          "nullable": true
                        },
                        "redeemed_points": {
                          "type": "integer",
                          "example": 100000,
                          "description": "Total loyalty points redeemed.",
                          "nullable": true
                        },
                        "object": {
                          "type": "string",
                          "default": "list",
                          "description": "The type of the object represented is by default `list`. To get this list, you need to make a call to the endpoint returned in the url attribute.",
                          "nullable": true
                        },
                        "url": {
                          "type": "string",
                          "example": "/v1/vouchers/WVPblOYX/redemptions?page=1&limit=10",
                          "description": "The endpoint where this list of redemptions can be accessed using a **GET** method. `/v1/vouchers/{voucher_code}/redemptions`",
                          "nullable": true
                        }
                      }
                    },
                    "categories": {
                      "title": "RedemptionsListResponseBodyRedemptionsItemVoucherCategories",
                      "type": "array",
                      "description": "Contains details about the category.",
                      "items": {
                        "$ref": "#/components/schemas/Category"
                      },
                      "nullable": true
                    },
                    "validation_rules_assignments": {
                      "$ref": "#/components/schemas/ValidationRulesAssignmentsList"
                    },
                    "holder": {
                      "$ref": "#/components/schemas/SimpleCustomer"
                    }
                  }
                },
                "reason": {
                  "type": "string",
                  "description": "System generated cause for the redemption being invalid in the context of the provided parameters.",
                  "nullable": true
                }
              }
            },
            "nullable": true
          },
          "total": {
            "type": "integer",
            "description": "Total number of redemptions.",
            "nullable": true
          }
        },
        "required": []
      },
      "RedemptionsRedeemRequestBody": {
        "title": "RedemptionsRedeemRequestBody",
        "type": "object",
        "properties": {
          "options": {
            "title": "RedemptionsRedeemRequestBodyOptions",
            "type": "object",
            "description": "Configure parameters returned in the response.",
            "properties": {
              "expand": {
                "title": "RedemptionsRedeemRequestBodyOptionsExpand",
                "type": "array",
                "description": "Expand array lets you configure params included in the response. Depending on the strings included in the array, the response will contain different details. \n\n| **Expand Option** | **Response Body** |\n|:---|:---|\n| [\"order\"] | - Same response as fallback response (without an options object).<br>- Order data with calculated discounts are listed in each child redeemable object.<br>- Metadata not included for each discount type. |\n| [\"redeemable\"] | Expands redeemable objects by including `metadata` for each discount type. |\n| [\"order\", \"redeemable\"] | - Order data with calculated discounts are listed in each child redeemable object.<br>- Includes `metadata` for each discount type. |\n| [\"redeemable\", \"redemption\", \"category\"] | - Returns each discount type's `metadata` in each child redemption object.<br>- Returns redemption object `metadata`.<br>- Returns an expanded `categories` object, showing details about the category. |",
                "items": {
                  "title": "RedemptionsRedeemRequestBodyOptionsExpandItem",
                  "type": "string",
                  "enum": [
                    "order",
                    "redemption",
                    "redeemable",
                    "category"
                  ]
                },
                "nullable": true
              }
            },
            "nullable": true
          },
          "redeemables": {
            "title": "RedemptionsRedeemRequestBodyRedeemables",
            "type": "array",
            "items": {
              "title": "RedemptionsRedeemRequestBodyRedeemablesItem",
              "type": "object",
              "properties": {
                "object": {
                  "type": "string",
                  "enum": [
                    "voucher",
                    "promotion_tier",
                    "promotion_stack"
                  ]
                },
                "id": {
                  "type": "string"
                },
                "gift": {
                  "title": "RedemptionsRedeemRequestBodyRedeemablesItemGift",
                  "type": "object",
                  "description": "Contains information on the number of gift card credits that the customer wants to apply to the order.",
                  "properties": {
                    "credits": {
                      "type": "integer",
                      "description": "The number of credits that the user wants to use from the gift card to fulfill the order. The value of credits cannot be higher than the current balance on the gift card. The value is multiplied by 100 to represent 2 decimal places. For example `10000 cents` for `$100.00`.",
                      "nullable": true
                    }
                  },
                  "nullable": true
                },
                "reward": {
                  "title": "RedemptionsRedeemRequestBodyRedeemablesItemReward",
                  "type": "object",
                  "description": "Contains information about the reward that the customer wants to redeem and the number of points the customer is choosing to use for the reward.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique reward ID assigned by Voucherify. The reward must be assigned to the campaign in order for the user to be able to use the reward.",
                      "example": "rew_EPx1hCTpqzF0HW1z9NKckZH4",
                      "nullable": true
                    },
                    "points": {
                      "type": "integer",
                      "description": "The number of loyalty points that the user wants to spend in order to fulfill the order using a **pay with points** reward. The number of points cannot be higher than the current balance on the loyalty card.",
                      "nullable": true
                    }
                  },
                  "nullable": true
                }
              }
            },
            "nullable": true
          },
          "order": {
            "$ref": "#/components/schemas/Order"
          },
          "customer": {
            "$ref": "#/components/schemas/Customer"
          },
          "session": {
            "$ref": "#/components/schemas/Session"
          },
          "tracking_id": {
            "description": "Is correspondent to Customer's source_id",
            "type": "string",
            "nullable": true
          },
          "metadata": {
            "title": "RedemptionsRedeemRequestBodyMetadata",
            "type": "object",
            "description": "A set of key/value pairs that you can attach to a redemption object. It can be useful for storing additional information about the redemption in a structured format.",
            "nullable": true
          }
        },
        "description": "Response body schema for **POST** `v1/redemptions`."
      },
      "RedemptionsRedeemResponseBody": {
        "title": "RedemptionsRedeemResponseBody",
        "type": "object",
        "description": "Response body schema for **POST** `v1/redemptions`.",
        "properties": {
          "redemptions": {
            "title": "RedemptionsRedeemResponseBodyRedemptions",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Redemption"
            },
            "nullable": true
          },
          "parent_redemption": {
            "$ref": "#/components/schemas/Redemption"
          },
          "order": {
            "$ref": "#/components/schemas/OrderCalculated"
          },
          "inapplicable_redeemables": {
            "title": "RedemptionsRedeemResponseBodyInapplicableRedeemables",
            "type": "array",
            "description": "Lists validation results of each inapplicable redeemable.",
            "items": {
              "$ref": "#/components/schemas/ValidationsRedeemableInapplicable"
            },
            "nullable": true
          },
          "skipped_redeemables": {
            "title": "RedemptionsRedeemResponseBodySkippedRedeemables",
            "type": "array",
            "description": "Lists validation results of each redeemable. If a redeemable can be applied, the API returns `\"status\": \"APPLICABLE\"`.",
            "items": {
              "$ref": "#/components/schemas/ValidationsRedeemableSkipped"
            },
            "nullable": true
          }
        }
      },
      "RedemptionsRollbackCreateRequestBody": {
        "title": "RedemptionsRollbackCreateRequestBody",
        "type": "object",
        "properties": {
          "reason": {
            "type": "string",
            "description": "Reason for the rollback.",
            "nullable": true
          },
          "tracking_id": {
            "type": "string",
            "description": "Customer's `source_id`.",
            "nullable": true
          },
          "customer": {
            "$ref": "#/components/schemas/Customer"
          },
          "order": {
            "$ref": "#/components/schemas/Order"
          },
          "metadata": {
            "title": "RedemptionsRollbackCreateRequestBodyMetadata",
            "type": "object",
            "description": "A set of key/value pairs that you can send in the request body to update **redemption** metadata.",
            "nullable": true
          }
        },
        "description": "Request body schema for **POST** `v1/redemptions/{redemptionId}/rollback`."
      },
      "RedemptionsRollbackCreateResponseBody": {
        "title": "RedemptionsRollbackCreateResponseBody",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "rr_0efeb3dab05e62e599",
            "description": "Unique identifier of the redemption rollback.",
            "nullable": true
          },
          "object": {
            "type": "string",
            "description": "The type of the object represented by the JSON",
            "default": "redemption_rollback",
            "enum": [
              "redemption_rollback"
            ],
            "nullable": true
          },
          "date": {
            "type": "string",
            "example": "2021-12-22T10:13:06.487Z",
            "description": "Timestamp representing the date and time when the object was created. The value is shown in the ISO 8601 format.",
            "format": "date-time",
            "nullable": true
          },
          "customer_id": {
            "type": "string",
            "nullable": true,
            "example": "cust_i8t5Tt6eiKG5K79KQlJ0Vs64",
            "description": "Unique customer ID of the redeeming customer."
          },
          "tracking_id": {
            "type": "string",
            "nullable": true,
            "description": "Hashed customer source ID."
          },
          "metadata": {
            "title": "RedemptionsRollbackCreateResponseBodyMetadata",
            "type": "object",
            "nullable": true,
            "description": "The metadata object stores all custom attributes assigned to the redemption."
          },
          "amount": {
            "type": "integer",
            "description": "For gift cards, this represents the number of the credits restored to the card in the rolledback redemption. The number is a negative integer in the smallest currency unit, e.g. -100 cents for $1.00 added back to the card.\nFor loyalty cards, this represents the number of loyalty points restored to the card in the rolledback redemption. The number is a negative integer.",
            "example": -10000,
            "nullable": true
          },
          "redemption": {
            "nullable": true,
            "type": "string",
            "description": "Unique redemption ID of the parent redemption.",
            "example": "r_0c656311b5878a2031"
          },
          "reason": {
            "type": "string",
            "description": "System generated cause for the redemption being invalid in the context of the provided parameters.",
            "nullable": true
          },
          "result": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "FAILURE"
            ],
            "description": "Redemption result.",
            "nullable": true
          },
          "status": {
            "type": "string",
            "enum": [
              "SUCCEEDED",
              "FAILED"
            ],
            "description": "Redemption status.",
            "nullable": true
          },
          "failure_code": {
            "type": "string",
            "example": "customer_rules_violated",
            "description": "If the result is `FAILURE`, this parameter will provide a generic reason as to why the redemption failed.",
            "nullable": true
          },
          "failure_message": {
            "type": "string",
            "description": "If the result is `FAILURE`, this parameter will provide a more expanded reason as to why the redemption failed.",
            "nullable": true
          },
          "order": {
            "$ref": "#/components/schemas/OrderCalculated"
          },
          "channel": {
            "title": "RedemptionsRollbackCreateResponseBodyChannel",
            "type": "object",
            "description": "Defines the details of the channel through which the redemption was issued.",
            "properties": {
              "channel_id": {
                "type": "string",
                "example": "user_g24UoRO3Caxu7FCT4n5tpYEa3zUG0FrH",
                "description": "Unique identifier of the channel which was used by the user performing the redemption rollback. This is either a user ID from the user using the Voucherify Dashboard or an X-APP-Id of a user using the API.",
                "nullable": true
              },
              "channel_type": {
                "type": "string",
                "description": "The source of the channel for the redemption. A `USER` corresponds to the Voucherify Dashboard and an `API` corresponds to the API.",
                "enum": [
                  "USER",
                  "API"
                ],
                "nullable": true
              }
            },
            "nullable": true
          },
          "customer": {
            "$ref": "#/components/schemas/SimpleCustomer"
          },
          "related_object_type": {
            "type": "string",
            "description": "Defines the related object.",
            "enum": [
              "voucher",
              "promotion_tier",
              "redemption"
            ],
            "nullable": true
          },
          "related_object_id": {
            "type": "string",
            "description": "Unique identifier of the related object. It is assigned by Voucherify, i.e. `v_lfZi4rcEGe0sN9gmnj40bzwK2FH6QUno` for a voucher.",
            "nullable": true
          },
          "voucher": {
            "$ref": "#/components/schemas/Voucher"
          },
          "promotion_tier": {
            "$ref": "#/components/schemas/PromotionTier"
          },
          "reward": {
            "$ref": "#/components/schemas/RedemptionRewardResult"
          },
          "gift": {
            "title": "RedemptionsRollbackCreateResponseBodyGift",
            "type": "object",
            "description": "Contains the amount returned to the gift card in the redemption rollback. It is expressed as a negative integer.",
            "properties": {
              "amount": {
                "type": "integer",
                "description": "Amount returned to the gift card as a result of the redemption rollback and expressed as a negative integer. The amount is expressed as the smallest currency unit (e.g. -100 cents for $1.00 returned).",
                "nullable": true
              }
            },
            "nullable": true
          },
          "loyalty_card": {
            "title": "RedemptionsRollbackCreateResponseBodyLoyaltyCard",
            "type": "object",
            "description": "Contains the number of points returned to the loyalty card in the reward redemption rollback. It is expressed as a negative integer.",
            "properties": {
              "points": {
                "type": "integer",
                "description": "Number of points being returned to the loyalty card for the reward redemption rollback. It is expressed as a negative integer.",
                "nullable": true
              }
            },
            "nullable": true
          },
          "related_redemptions": {
            "title": "RedemptionsRollbackCreateResponseBodyRelatedRedemptions",
            "type": "object",
            "properties": {
              "rollbacks": {
                "title": "RedemptionsRollbackCreateResponseBodyRelatedRedemptionsRollbacks",
                "type": "array",
                "items": {
                  "title": "RedemptionsRollbackCreateResponseBodyRelatedRedemptionsRollbacksItem",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "rr_0bc92f81a6801f9bca",
                      "description": "Unique identifier of the redemption rollback."
                    },
                    "date": {
                      "type": "string",
                      "example": "2021-12-22T10:13:06.487Z",
                      "description": "Timestamp representing the date and time when the object was created. The value is shown in the ISO 8601 format.",
                      "format": "date-time"
                    }
                  }
                },
                "nullable": true
              },
              "redemptions": {
                "title": "RedemptionsRollbackCreateResponseBodyRelatedRedemptionsRedemptions",
                "type": "array",
                "items": {
                  "title": "RedemptionsRollbackCreateResponseBodyRelatedRedemptionsRedemptionsItem",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "r_0bc92f81a6801f9bca",
                      "description": "Unique redemption ID."
                    },
                    "date": {
                      "type": "string",
                      "example": "2021-12-22T10:13:06.487Z",
                      "description": "Timestamp representing the date and time when the object was created. The value is shown in the ISO 8601 format.",
                      "format": "date-time"
                    }
                  }
                },
                "nullable": true
              }
            },
            "nullable": true
          }
        },
        "required": [],
        "description": "Response body schema for **POST** `v1/redemptions/{redemptionId}/rollback`."
      },
      "RedemptionsRollbacksCreateRequestBody": {
        "title": "RedemptionsRollbacksCreateRequestBody",
        "type": "object",
        "properties": {
          "reason": {
            "type": "string",
            "description": "Reason for the rollback.",
            "nullable": true
          },
          "tracking_id": {
            "type": "string",
            "description": "Customer's `source_id`.",
            "nullable": true
          },
          "customer": {
            "$ref": "#/components/schemas/Customer"
          },
          "order": {
            "$ref": "#/components/schemas/Order"
          },
          "metadata": {
            "title": "RedemptionsRollbacksCreateRequestBodyMetadata",
            "type": "object",
            "description": "A set of key/value pairs that you can send in the request body to update **redemption** metadata.",
            "nullable": true
          }
        },
        "description": "Request body schema for **POST** `v1/redemptions/{parentRedemptionId}/rollbacks`."
      },
      "RedemptionsRollbacksCreateResponseBody": {
        "title": "RedemptionsRollbacksCreateResponseBody",
        "description": "Response body schema for **POST** `/redemptions/{parentRedemptionID}/rollbacks`.",
        "type": "object",
        "properties": {
          "rollbacks": {
            "title": "RedemptionsRollbacksCreateResponseBodyRollbacks",
            "type": "array",
            "description": "Contains the rollback redemption objects of the particular incentives.",
            "items": {
              "$ref": "#/components/schemas/RedemptionRollback"
            },
            "nullable": true
          },
          "parent_rollback": {
            "$ref": "#/components/schemas/RedemptionRollback"
          },
          "order": {
            "$ref": "#/components/schemas/OrderCalculated"
          }
        }
      },
      "ReferralsMembersHoldersCreateInBulkRequestBody": {
        "title": "ReferralsMembersHoldersCreateInBulkRequestBody",
        "type": "object",
        "description": "Request body schema for **POST** `v1/referrals/{campaignId}/members/{memberId}/holders` and **POST** `v1/referrals/members/{memberId}/holders`.",
        "properties": {
          "holders": {
            "title": "ReferralsMembersHoldersCreateInBulkRequestBodyHolders",
            "type": "array",
            "description": "Array of holders to be added to a referral card as referees. You have to send at least one object in the array up to a maximum of 100 objects. You can send either a `source_id` or `id`, or both; however, at least one of them is required. If both are sent, Voucherify checks `id` to upsert that customer's data.",
            "items": {
              "$ref": "#/components/schemas/Customer"
            },
            "nullable": true
          },
          "metadata": {
            "title": "ReferralsMembersHoldersCreateInBulkRequestBodyMetadata",
            "type": "object",
            "description": "A set of custom key/value pairs that you can attach to the redeemable holders sent in the array. The value can be a string, number, boolean, date, datetime, image URL, or object. The metadata must meet the metadata schema for publications. The metadata object stores all custom attributes assigned to the redeemable holder.",
            "nullable": true
          }
        },
        "required": []
      },
      "ReferralsMembersHoldersCreateInBulkResponseBody": {
        "title": "ReferralsMembersHoldersCreateInBulkResponseBody",
        "type": "object",
        "description": "Response body schema for **POST** `v1/referrals/{campaignId}/members/{memberId}/holders` and **POST** `v1/referrals/members/{memberId}/holders`.",
        "properties": {
          "holders": {
            "title": "ReferralsMembersHoldersCreateInBulkResponseBodyHolders",
            "type": "array",
            "description": "Contains an array of referral card holders who are the customers sent in the request.",
            "items": {
              "$ref": "#/components/schemas/RedeemableHolder"
            },
            "nullable": true
          }
        },
        "required": []
      },
      "ReferralsMembersHoldersListResponseBody": {
        "title": "ReferralsMembersHoldersListResponseBody",
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "description": "The type of the object represented by JSON. This object stores information about redeemables holders",
            "default": "list",
            "nullable": true
          },
          "data_ref": {
            "type": "string",
            "description": "Identifies the name of the JSON property that contains the array of holders.",
            "default": "data",
            "nullable": true
          },
          "data": {
            "title": "ReferralsMembersHoldersListResponseBodyData",
            "type": "array",
            "description": "A dictionary that contains an array of holders.",
            "items": {
              "$ref": "#/components/schemas/RedeemableHolder"
            },
            "nullable": true
          },
          "total": {
            "type": "integer",
            "description": "Total number of holders assigned to the redeemable.",
            "nullable": true
          },
          "has_more": {
            "type": "boolean",
            "description": "As query results are always limited (by the limit parameter), the `has_more` flag indicates if there are more records for given filter parameters. This lets you know if you can run another request with a `starting_after_id` query or a different limit to get more records returned in the results.",
            "nullable": true
          },
          "more_starting_after": {
            "type": "string",
            "description": "Returns an ID that can be used to return another page of results. Use the ID in the `starting_after_id` query parameter to display another page of the results occuring after the field with that ID.",
            "nullable": true
          }
        },
        "required": [],
        "description": "Response body schema for **GET** `v1/referrals/{campaignId}/members/{memberId}/holders` and for **GET** `v1/referrals/members/{memberId}/holders`"
      },
      "Reward": {
        "title": "Reward",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "rew_nIy4gHpQHle2c3pNMwuj7G6j",
            "description": "Unique reward ID, assigned by Voucherify.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Reward name.",
            "nullable": true
          },
          "stock": {
            "type": "integer",
            "nullable": true,
            "description": "Configurable for **material rewards**. The number of units of the product that you want to share as reward."
          },
          "redeemed": {
            "type": "integer",
            "nullable": true,
            "description": "Defines the number of already invoked (successful) reward redemptions.\t"
          },
          "attributes": {
            "title": "RewardAttributes",
            "type": "object",
            "description": "These properties are configurable for **material rewards**.",
            "properties": {
              "image_url": {
                "type": "string",
                "description": "The HTTPS URL pointing to the .png or .jpg file.",
                "nullable": true
              },
              "description": {
                "type": "string",
                "description": "An arbitrary string that you can attach to a material reward.",
                "nullable": true
              }
            },
            "nullable": true
          },
          "metadata": {
            "title": "RewardMetadata",
            "type": "object",
            "description": "The metadata object stores all custom attributes assigned to the reward. A set of key/value pairs that you can attach to a reward object. It can be useful for storing additional information about the reward in a structured format.",
            "nullable": true
          },
          "type": {
            "type": "string",
            "enum": [
              "CAMPAIGN",
              "COIN",
              "MATERIAL"
            ],
            "description": "Reward type.",
            "nullable": true
          },
          "parameters": {
            "$ref": "#/components/schemas/RewardType"
          },
          "created_at": {
            "type": "string",
            "description": "Timestamp representing the date and time when the reward was created. The value is shown in the ISO 8601 format.",
            "example": "2022-08-11T14:49:22.586Z",
            "format": "date-time",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "nullable": true,
            "description": "Timestamp representing the date and time when the reward was updated. The value is shown in the ISO 8601 format.",
            "example": "2022-08-11T16:01:34.885Z",
            "format": "date-time"
          },
          "object": {
            "description": "The type of the object represented by the JSON. This object stores information about the reward.",
            "default": "reward",
            "enum": [
              "reward"
            ]
          }
        },
        "required": [
          "object"
        ]
      },
      "RewardsAssignmentsCreateRequestBody": {
        "title": "RewardsAssignmentsCreateRequestBody",
        "type": "object",
        "properties": {
          "campaign": {
            "type": "string",
            "description": "The campaign ID of the campaign to which the reward is to be assigned.",
            "nullable": true
          },
          "parameters": {
            "title": "RewardsAssignmentsCreateRequestBodyParameters",
            "type": "object",
            "description": "Defines the cost of the reward.",
            "required": [],
            "properties": {
              "loyalty": {
                "title": "RewardsAssignmentsCreateRequestBodyParametersLoyalty",
                "type": "object",
                "description": "Defines the equivalent points value of the reward.",
                "properties": {
                  "points": {
                    "type": "integer",
                    "minimum": 1,
                    "description": "Number of points that will be subtracted from the loyalty card points balance if the reward is redeemed. Must be positive integer.",
                    "nullable": true
                  },
                  "auto_redeem": {
                    "type": "boolean",
                    "nullable": true,
                    "description": "Determines if the reward is redeemed automatically when the customer reaches the sufficient number of points to redeem it. Value `true` means that the automatic reward redemption is active. Only one reward can be set to be redeemed automatically in a loyalty campaign, i.e. only one can have the value `true`."
                  }
                },
                "nullable": true
              }
            },
            "nullable": true
          },
          "validation_rules": {
            "title": "RewardsAssignmentsCreateRequestBodyValidationRules",
            "type": "array",
            "items": {
              "title": "RewardsAssignmentsCreateRequestBodyValidationRulesItem",
              "type": "string"
            },
            "nullable": true
          }
        }
      },
      "RewardsAssignmentsCreateResponseBody": {
        "title": "RewardsAssignmentsCreateResponseBody",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "rewa_PbIRoMXpwe5QhobW4JKu0VjH",
            "description": "Unique reward assignment ID, assigned by Voucherify.",
            "nullable": true
          },
          "reward_id": {
            "type": "string",
            "description": "Associated reward ID.",
            "example": "rew_C7wS9eHFDN4CIbXI5PpLSkGY",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "description": "Timestamp representing the date and time when the reward assignment was created. The value is shown in the ISO 8601 format.",
            "example": "2022-08-11T14:49:22.586Z",
            "format": "date-time",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "nullable": true,
            "description": "Timestamp representing the date and time when the reward assignment was updated. The value is shown in the ISO 8601 format.",
            "example": "2022-08-11T16:01:34.885Z",
            "format": "date-time"
          },
          "object": {
            "type": "string",
            "description": "The type of the object represented by the JSON. This object stores information about the reward assignment.",
            "default": "reward_assignment",
            "enum": [
              "reward_assignment"
            ],
            "nullable": true
          },
          "related_object_id": {
            "type": "string",
            "description": "Related object ID to which the reward was assigned.",
            "example": "camp_wciTvaOfYmAa3EmIIW3QpXXZ",
            "nullable": true
          },
          "related_object_type": {
            "type": "string",
            "description": "Related object type to which the reward was assigned.",
            "default": "campaign",
            "enum": [
              "campaign"
            ],
            "nullable": true
          },
          "parameters": {
            "title": "RewardsAssignmentsCreateResponseBodyParameters",
            "description": "Defines the cost of the reward.",
            "type": "object",
            "properties": {
              "loyalty": {
                "title": "RewardsAssignmentsCreateResponseBodyParametersLoyalty",
                "type": "object",
                "description": "Defines the equivalent points value of the reward.",
                "properties": {
                  "points": {
                    "type": "integer",
                    "description": "The number of points required to redeem the reward.",
                    "nullable": true
                  },
                  "auto_redeem": {
                    "type": "boolean",
                    "nullable": true,
                    "description": "Determines if the reward is redeemed automatically when the customer reaches the sufficient number of points to redeem it. Value `true` means that the automatic reward redemption is active. Only one reward can be set to be redeemed automatically in a loyalty campaign, i.e. only one can have the value `true`."
                  }
                },
                "nullable": true
              }
            },
            "required": [],
            "nullable": true
          }
        },
        "description": "Response body schema for **POST** `v1/rewards/{rewardId}/assignments/`."
      },
      "RewardsAssignmentsGetResponseBody": {
        "title": "RewardsAssignmentsGetResponseBody",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "rewa_PbIRoMXpwe5QhobW4JKu0VjH",
            "description": "Unique reward assignment ID, assigned by Voucherify.",
            "nullable": true
          },
          "reward_id": {
            "type": "string",
            "description": "Associated reward ID.",
            "example": "rew_C7wS9eHFDN4CIbXI5PpLSkGY",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "description": "Timestamp representing the date and time when the reward assignment was created. The value is shown in the ISO 8601 format.",
            "example": "2022-08-11T14:49:22.586Z",
            "format": "date-time",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "nullable": true,
            "description": "Timestamp representing the date and time when the reward assignment was updated. The value is shown in the ISO 8601 format.",
            "example": "2022-08-11T16:01:34.885Z",
            "format": "date-time"
          },
          "object": {
            "type": "string",
            "description": "The type of the object represented by the JSON. This object stores information about the reward assignment.",
            "default": "reward_assignment",
            "enum": [
              "reward_assignment"
            ],
            "nullable": true
          },
          "related_object_id": {
            "type": "string",
            "description": "Related object ID to which the reward was assigned.",
            "example": "camp_wciTvaOfYmAa3EmIIW3QpXXZ",
            "nullable": true
          },
          "related_object_type": {
            "type": "string",
            "description": "Related object type to which the reward was assigned.",
            "default": "campaign",
            "enum": [
              "campaign"
            ],
            "nullable": true
          },
          "parameters": {
            "title": "RewardsAssignmentsGetResponseBodyParameters",
            "description": "Defines the cost of the reward.",
            "type": "object",
            "properties": {
              "loyalty": {
                "title": "RewardsAssignmentsGetResponseBodyParametersLoyalty",
                "type": "object",
                "description": "Defines the equivalent points value of the reward.",
                "properties": {
                  "points": {
                    "type": "integer",
                    "description": "The number of points required to redeem the reward.",
                    "nullable": true
                  },
                  "auto_redeem": {
                    "type": "boolean",
                    "nullable": true,
                    "description": "Determines if the reward is redeemed automatically when the customer reaches the sufficient number of points to redeem it. Value `true` means that the automatic reward redemption is active. Only one reward can be set to be redeemed automatically in a loyalty campaign, i.e. only one can have the value `true`."
                  }
                },
                "nullable": true
              }
            },
            "required": [],
            "nullable": true
          }
        },
        "description": "Response body schema for **GET** `v1/rewards/{rewardId}/assignments/{assignmentId}`."
      },
      "RewardsAssignmentsListResponseBody": {
        "title": "RewardsAssignmentsListResponseBody",
        "type": "object",
        "description": "Response body schema for **GET** `v1/rewards/{rewardID}/assignments`.",
        "properties": {
          "object": {
            "type": "string",
            "description": "The type of the object represented by JSON. This object stores information about reward assignments in a dictionary.",
            "default": "list",
            "nullable": true
          },
          "data_ref": {
            "type": "string",
            "description": "Identifies the name of the attribute that contains the array of reward assignments.",
            "default": "data",
            "nullable": true
          },
          "data": {
            "title": "RewardsAssignmentsListResponseBodyData",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RewardAssignment"
            },
            "nullable": true
          },
          "total": {
            "type": "integer",
            "description": "Total number of reward assignments.",
            "nullable": true
          }
        },
        "required": []
      },
      "RewardsAssignmentsUpdateRequestBody": {
        "title": "RewardsAssignmentsUpdateRequestBody",
        "type": "object",
        "description": "Request body schema for **PUT** `v1/rewards/{rewardId}/assignments/{assignmentId}`.",
        "properties": {
          "parameters": {
            "title": "RewardsAssignmentsUpdateRequestBodyParameters",
            "type": "object",
            "description": "An object that defines the price of the reward in loyalty points.",
            "properties": {
              "loyalty": {
                "title": "RewardsAssignmentsUpdateRequestBodyParametersLoyalty",
                "type": "object",
                "description": "Stores the points parameter.",
                "properties": {
                  "points": {
                    "type": "integer",
                    "description": "Defines how many points are required to obtain the reward.",
                    "nullable": true
                  },
                  "auto_redeem": {
                    "type": "boolean",
                    "nullable": true,
                    "description": "Determines if the reward is redeemed automatically when the customer reaches the sufficient number of points to redeem it. Value `true` means that the automatic reward redemption is active. Only one reward can be set to be redeemed automatically in a loyalty campaign, i.e. only one can have the value `true`."
                  }
                },
                "nullable": true
              }
            },
            "nullable": true
          }
        }
      },
      "RewardsAssignmentsUpdateResponseBody": {
        "title": "RewardsAssignmentsUpdateResponseBody",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "rewa_PbIRoMXpwe5QhobW4JKu0VjH",
            "description": "Unique reward assignment ID, assigned by Voucherify.",
            "nullable": true
          },
          "reward_id": {
            "type": "string",
            "description": "Associated reward ID.",
            "example": "rew_C7wS9eHFDN4CIbXI5PpLSkGY",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "description": "Timestamp representing the date and time when the reward assignment was created. The value is shown in the ISO 8601 format.",
            "example": "2022-08-11T14:49:22.586Z",
            "format": "date-time",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "nullable": true,
            "description": "Timestamp representing the date and time when the reward assignment was updated. The value is shown in the ISO 8601 format.",
            "example": "2022-08-11T16:01:34.885Z",
            "format": "date-time"
          },
          "object": {
            "type": "string",
            "description": "The type of the object represented by the JSON. This object stores information about the reward assignment.",
            "default": "reward_assignment",
            "enum": [
              "reward_assignment"
            ],
            "nullable": true
          },
          "related_object_id": {
            "type": "string",
            "description": "Related object ID to which the reward was assigned.",
            "example": "camp_wciTvaOfYmAa3EmIIW3QpXXZ",
            "nullable": true
          },
          "related_object_type": {
            "type": "string",
            "description": "Related object type to which the reward was assigned.",
            "default": "campaign",
            "enum": [
              "campaign"
            ],
            "nullable": true
          },
          "parameters": {
            "title": "RewardsAssignmentsUpdateResponseBodyParameters",
            "description": "Defines the cost of the reward.",
            "type": "object",
            "properties": {
              "loyalty": {
                "title": "RewardsAssignmentsUpdateResponseBodyParametersLoyalty",
                "type": "object",
                "description": "Defines the equivalent points value of the reward.",
                "properties": {
                  "points": {
                    "type": "integer",
                    "description": "The number of points required to redeem the reward.",
                    "nullable": true
                  },
                  "auto_redeem": {
                    "type": "boolean",
                    "nullable": true,
                    "description": "Determines if the reward is redeemed automatically when the customer reaches the sufficient number of points to redeem it. Value `true` means that the automatic reward redemption is active. Only one reward can be set to be redeemed automatically in a loyalty campaign, i.e. only one can have the value `true`."
                  }
                },
                "nullable": true
              }
            },
            "required": [],
            "nullable": true
          }
        },
        "description": "Response body schema for **PUT** `v1/rewards/{rewardId}/assignments/{assignmentId}`."
      },
      "RewardsCreateRequestBody": {
        "title": "RewardsCreateRequestBody",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Reward name.",
            "nullable": true
          },
          "parameters": {
            "title": "RewardsCreateRequestBodyParameters",
            "type": "object",
            "properties": {
              "campaign": {
                "title": "RewardsCreateRequestBodyParametersCampaign",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "nullable": true
                  },
                  "balance": {
                    "type": "integer",
                    "nullable": true,
                    "description": "The incremental points to be added to the current balance on the loyalty card. and The incremental amout to be added to the current balance on the gift card. The value is multiplied by 100 to represent 2 decimal places. For example `10000 cents` for `$100.00`."
                  }
                },
                "nullable": true
              },
              "product": {
                "title": "RewardsCreateRequestBodyParametersProduct",
                "type": "object",
                "description": "Define the product given as a reward.",
                "properties": {
                  "id": {
                    "type": "string",
                    "example": "prod_0b7d7dfb05cbe5c616",
                    "description": "Unique product ID, assigned by Voucherify, given as a reward.",
                    "nullable": true
                  },
                  "sku_id": {
                    "type": "string",
                    "nullable": true,
                    "description": "Unique SKU ID, assigned by Voucherify, of the SKU given as a reward.",
                    "example": "sku_0b7d7dfb090be5c619"
                  }
                },
                "required": [],
                "nullable": true
              },
              "coin": {
                "title": "RewardsCreateRequestBodyParametersCoin",
                "type": "object",
                "description": "Define the ratio by mapping the number of loyalty points in `points_ratio` to a predefined cash amount in `exchange_ratio`.",
                "properties": {
                  "exchange_ratio": {
                    "type": "string",
                    "description": "The cash equivalent of the points defined in the `points_ratio` property.",
                    "nullable": true
                  },
                  "points_ratio": {
                    "type": "string",
                    "description": "The number of loyalty points that will map to the predefined cash amount defined by the `exchange_ratio` property.",
                    "nullable": true
                  }
                },
                "required": [],
                "nullable": true
              }
            },
            "nullable": true
          },
          "metadata": {
            "title": "RewardsCreateRequestBodyMetadata",
            "type": "object",
            "description": "The metadata object stores all custom attributes assigned to the reward. A set of key/value pairs that you can attach to a reward object. It can be useful for storing additional information about the reward in a structured format.",
            "nullable": true
          },
          "stock": {
            "type": "integer",
            "description": "The number of units of the product that you want to share as a reward.",
            "nullable": true
          },
          "attributes": {
            "title": "RewardsCreateRequestBodyAttributes",
            "type": "object",
            "description": "Attributes of a material reward.",
            "properties": {
              "image_url": {
                "type": "string",
                "description": "HTTPS URL pointing to a .png or .jpg file.",
                "nullable": true
              },
              "description": {
                "type": "string",
                "description": "Description of a material reward.",
                "nullable": true
              }
            },
            "nullable": true
          }
        },
        "required": []
      },
      "RewardsCreateResponseBody": {
        "title": "RewardsCreateResponseBody",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "rew_nIy4gHpQHle2c3pNMwuj7G6j",
            "description": "Unique reward ID, assigned by Voucherify.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Reward name.",
            "nullable": true
          },
          "stock": {
            "type": "integer",
            "nullable": true,
            "description": "Configurable for **material rewards**. The number of units of the product that you want to share as reward."
          },
          "redeemed": {
            "type": "integer",
            "nullable": true,
            "description": "Defines the number of already invoked (successful) reward redemptions.\t"
          },
          "attributes": {
            "title": "RewardsCreateResponseBodyAttributes",
            "type": "object",
            "description": "These properties are configurable for **material rewards**.",
            "properties": {
              "image_url": {
                "type": "string",
                "description": "The HTTPS URL pointing to the .png or .jpg file.",
                "nullable": true
              },
              "description": {
                "type": "string",
                "description": "An arbitrary string that you can attach to a material reward.",
                "nullable": true
              }
            },
            "nullable": true
          },
          "metadata": {
            "title": "RewardsCreateResponseBodyMetadata",
            "type": "object",
            "description": "The metadata object stores all custom attributes assigned to the reward. A set of key/value pairs that you can attach to a reward object. It can be useful for storing additional information about the reward in a structured format.",
            "nullable": true
          },
          "type": {
            "type": "string",
            "enum": [
              "CAMPAIGN",
              "COIN",
              "MATERIAL"
            ],
            "description": "Reward type.",
            "nullable": true
          },
          "parameters": {
            "$ref": "#/components/schemas/RewardType"
          },
          "created_at": {
            "type": "string",
            "description": "Timestamp representing the date and time when the reward was created. The value is shown in the ISO 8601 format.",
            "example": "2022-08-11T14:49:22.586Z",
            "format": "date-time",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "nullable": true,
            "description": "Timestamp representing the date and time when the reward was updated. The value is shown in the ISO 8601 format.",
            "example": "2022-08-11T16:01:34.885Z",
            "format": "date-time"
          },
          "object": {
            "description": "The type of the object represented by the JSON. This object stores information about the reward.",
            "default": "reward",
            "enum": [
              "reward"
            ]
          }
        },
        "required": [
          "object"
        ],
        "description": "Response body schema for **POST** `v1/rewards`."
      },
      "RewardsListResponseBody": {
        "title": "RewardsListResponseBody",
        "type": "object",
        "description": "Response body schema for **GET** `v1/rewards`.",
        "properties": {
          "object": {
            "type": "string",
            "default": "list",
            "description": "The type of the object represented by JSON.",
            "nullable": true
          },
          "data_ref": {
            "type": "string",
            "default": "data",
            "description": "Identifies the name of the attribute that contains the array of transaction objects.",
            "nullable": true
          },
          "data": {
            "title": "RewardsListResponseBodyData",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Reward"
            },
            "description": "A dictionary that contains an array of rewards. Each entry in the array is a separate transaction object.",
            "nullable": true
          },
          "total": {
            "type": "integer",
            "example": 20,
            "description": "Returns how many rewards in the project meet the limits defined by the query parameter definitions.",
            "nullable": true
          }
        },
        "required": []
      },
      "RewardsUpdateRequestBody": {
        "title": "RewardsUpdateRequestBody",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Reward name.",
            "nullable": true
          },
          "parameters": {
            "title": "RewardsUpdateRequestBodyParameters",
            "type": "object",
            "properties": {
              "campaign": {
                "title": "RewardsUpdateRequestBodyParametersCampaign",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "nullable": true
                  },
                  "balance": {
                    "type": "integer",
                    "nullable": true,
                    "description": "The incremental points to be added to the current balance on the loyalty card. and The incremental amount to be added to the current balance on the gift card. The value is multiplied by 100 to represent 2 decimal places. For example `10000 cents` for `$100.00`."
                  }
                },
                "nullable": true
              },
              "product": {
                "title": "RewardsUpdateRequestBodyParametersProduct",
                "type": "object",
                "description": "Define the product given as a reward.",
                "properties": {
                  "id": {
                    "type": "string",
                    "example": "prod_0b7d7dfb05cbe5c616",
                    "description": "Unique product ID, assigned by Voucherify, given as a reward.",
                    "nullable": true
                  },
                  "sku_id": {
                    "type": "string",
                    "nullable": true,
                    "description": "Unique SKU ID, assigned by Voucherify, of the SKU given as a reward.",
                    "example": "sku_0b7d7dfb090be5c619"
                  }
                },
                "required": [],
                "nullable": true
              },
              "coin": {
                "title": "RewardsUpdateRequestBodyParametersCoin",
                "type": "object",
                "description": "Define the ratio by mapping the number of loyalty points in `points_ratio` to a predefined cash amount in `exchange_ratio`.",
                "properties": {
                  "exchange_ratio": {
                    "type": "string",
                    "description": "The cash equivalent of the points defined in the `points_ratio` property.",
                    "nullable": true
                  },
                  "points_ratio": {
                    "type": "string",
                    "description": "The number of loyalty points that will map to the predefined cash amount defined by the `exchange_ratio` property.",
                    "nullable": true
                  }
                },
                "required": [],
                "nullable": true
              }
            },
            "nullable": true
          },
          "metadata": {
            "title": "RewardsUpdateRequestBodyMetadata",
            "type": "object",
            "description": "The metadata object stores all custom attributes assigned to the reward. A set of key/value pairs that you can attach to a reward object. It can be useful for storing additional information about the reward in a structured format.",
            "nullable": true
          },
          "stock": {
            "type": "integer",
            "description": "The number of units of the product that you want to share as a reward.",
            "nullable": true
          },
          "attributes": {
            "title": "RewardsUpdateRequestBodyAttributes",
            "type": "object",
            "description": "Attributes of a material reward.",
            "properties": {
              "image_url": {
                "type": "string",
                "description": "HTTPS URL pointing to a .png or .jpg file.",
                "nullable": true
              },
              "description": {
                "type": "string",
                "description": "Description of a material reward.",
                "nullable": true
              }
            },
            "nullable": true
          }
        }
      },
      "RewardsUpdateResponseBody": {
        "title": "RewardsUpdateResponseBody",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "rew_nIy4gHpQHle2c3pNMwuj7G6j",
            "description": "Unique reward ID, assigned by Voucherify.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Reward name.",
            "nullable": true
          },
          "stock": {
            "type": "integer",
            "nullable": true,
            "description": "Configurable for **material rewards**. The number of units of the product that you want to share as reward."
          },
          "redeemed": {
            "type": "integer",
            "nullable": true,
            "description": "Defines the number of already invoked (successful) reward redemptions.\t"
          },
          "attributes": {
            "title": "RewardsUpdateResponseBodyAttributes",
            "type": "object",
            "description": "These properties are configurable for **material rewards**.",
            "properties": {
              "image_url": {
                "type": "string",
                "description": "The HTTPS URL pointing to the .png or .jpg file.",
                "nullable": true
              },
              "description": {
                "type": "string",
                "description": "An arbitrary string that you can attach to a material reward.",
                "nullable": true
              }
            },
            "nullable": true
          },
          "metadata": {
            "title": "RewardsUpdateResponseBodyMetadata",
            "type": "object",
            "description": "The metadata object stores all custom attributes assigned to the reward. A set of key/value pairs that you can attach to a reward object. It can be useful for storing additional information about the reward in a structured format.",
            "nullable": true
          },
          "type": {
            "type": "string",
            "enum": [
              "CAMPAIGN",
              "COIN",
              "MATERIAL"
            ],
            "description": "Reward type.",
            "nullable": true
          },
          "parameters": {
            "$ref": "#/components/schemas/RewardType"
          },
          "created_at": {
            "type": "string",
            "description": "Timestamp representing the date and time when the reward was created. The value is shown in the ISO 8601 format.",
            "example": "2022-08-11T14:49:22.586Z",
            "format": "date-time",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "nullable": true,
            "description": "Timestamp representing the date and time when the reward was updated. The value is shown in the ISO 8601 format.",
            "example": "2022-08-11T16:01:34.885Z",
            "format": "date-time"
          },
          "object": {
            "description": "The type of the object represented by the JSON. This object stores information about the reward.",
            "default": "reward",
            "enum": [
              "reward"
            ]
          }
        },
        "required": [
          "object"
        ],
        "description": "Response body schema for **PUT** `v1/rewards/{rewardId}`."
      },
      "SegmentsCreateRequestBody": {
        "title": "SegmentsCreateRequestBody",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Segment name.",
            "nullable": true
          },
          "type": {
            "type": "string",
            "enum": [
              "static",
              "auto-update"
            ],
            "nullable": true
          },
          "customers": {
            "title": "SegmentsCreateRequestBodyCustomers",
            "type": "array",
            "description": "Array of customer IDs.",
            "items": {
              "title": "SegmentsCreateRequestBodyCustomersItem",
              "type": "string"
            },
            "nullable": true
          },
          "filter": {
            "title": "SegmentsCreateRequestBodyFilter",
            "type": "object",
            "description": "Defines a set of criteria for an `auto-update` segment type.",
            "nullable": true
          }
        }
      },
      "SegmentsCreateResponseBody": {
        "title": "SegmentsCreateResponseBody",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "seg_1wc52c5z6r1kQ81brO8j9Hk2",
            "description": "Unique segment ID.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Segment name.",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "example": "2022-05-12T13:01:56.896Z",
            "description": "Timestamp representing the date and time when the segment was created. The value is shown in the ISO 8601 format.",
            "format": "date-time",
            "nullable": true
          },
          "type": {
            "type": "string",
            "enum": [
              "auto-update",
              "static",
              "passive"
            ],
            "description": "Describes whether the segment is dynamic (customers come in and leave based on set criteria) or static (manually selected customers).",
            "nullable": true
          },
          "filter": {
            "title": "SegmentsCreateResponseBodyFilter",
            "type": "object",
            "nullable": true,
            "description": "Defines a set of criteria for an `auto-update` segment type.  "
          },
          "initial_sync_status": {
            "type": "string",
            "enum": [
              "IN_PROGRESS",
              "DONE"
            ],
            "nullable": true
          },
          "object": {
            "type": "string",
            "default": "segment",
            "description": "The type of the object represented by JSON. This object stores information about the customer segment.",
            "enum": [
              "segment"
            ],
            "nullable": true
          }
        },
        "description": "Response body schema for **POST** `v1/segments`."
      },
      "SegmentsGetResponseBody": {
        "title": "SegmentsGetResponseBody",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "seg_1wc52c5z6r1kQ81brO8j9Hk2",
            "description": "Unique segment ID.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Segment name.",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "example": "2022-05-12T13:01:56.896Z",
            "description": "Timestamp representing the date and time when the segment was created. The value is shown in the ISO 8601 format.",
            "format": "date-time",
            "nullable": true
          },
          "type": {
            "type": "string",
            "enum": [
              "auto-update",
              "static",
              "passive"
            ],
            "description": "Describes whether the segment is dynamic (customers come in and leave based on set criteria) or static (manually selected customers).",
            "nullable": true
          },
          "filter": {
            "title": "SegmentsGetResponseBodyFilter",
            "type": "object",
            "nullable": true,
            "description": "Defines a set of criteria for an `auto-update` segment type.  "
          },
          "initial_sync_status": {
            "type": "string",
            "enum": [
              "IN_PROGRESS",
              "DONE"
            ],
            "nullable": true
          },
          "object": {
            "type": "string",
            "default": "segment",
            "description": "The type of the object represented by JSON. This object stores information about the customer segment.",
            "enum": [
              "segment"
            ],
            "nullable": true
          }
        },
        "description": "Response body schema for **GET** `v1/v1/segments/{segmentId}`."
      },
      "SkusGetResponseBody": {
        "title": "SkusGetResponseBody",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "sku_0b1621b319d248b79f",
            "description": "A unique identifier that represents the SKU and is assigned by Voucherify.",
            "nullable": true
          },
          "source_id": {
            "type": "string",
            "nullable": true,
            "example": "sku_source_id_4",
            "description": "A unique SKU identifier from your inventory system."
          },
          "product_id": {
            "type": "string",
            "example": "prod_0b15f6b9f650c16990",
            "description": "The parent product's unique ID.",
            "nullable": true
          },
          "sku": {
            "type": "string",
            "nullable": true,
            "example": "Large Pink Shirt",
            "description": "Unique user-defined SKU name."
          },
          "price": {
            "type": "integer",
            "nullable": true,
            "description": "Unit price. It is represented by a value multiplied by 100 to accurately reflect 2 decimal places, such as `$100.00` being expressed as `10000`."
          },
          "currency": {
            "type": "string",
            "nullable": true,
            "description": "SKU price currency.",
            "example": "USD"
          },
          "attributes": {
            "title": "SkusGetResponseBodyAttributes",
            "type": "object",
            "description": "The attributes object stores values for all custom attributes inherited by the SKU from the parent product. A set of key/value pairs that are attached to a SKU object and are unique to each SKU within a product family.",
            "nullable": true
          },
          "image_url": {
            "type": "string",
            "nullable": true,
            "description": "The HTTPS URL pointing to the .png or .jpg file that will be used to render the SKU image."
          },
          "metadata": {
            "title": "SkusGetResponseBodyMetadata",
            "type": "object",
            "description": "The metadata object stores all custom attributes assigned to the SKU. A set of key/value pairs that you can attach to a SKU object. It can be useful for storing additional information about the SKU in a structured format. It can be used to create product collections.",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "example": "2022-05-17T10:36:30.187Z",
            "description": "Timestamp representing the date and time when the SKU was created. The value is shown in the ISO 8601 format.",
            "format": "date-time",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "nullable": true,
            "example": "2022-05-17T10:55:09.137Z",
            "description": "Timestamp representing the date and time when the SKU was updated. The value is shown in the ISO 8601 format.",
            "format": "date-time"
          },
          "object": {
            "type": "string",
            "default": "sku",
            "description": "The type of the object represented by JSON. This object stores information about the `SKU`.",
            "enum": [
              "sku"
            ],
            "nullable": true
          }
        },
        "required": [],
        "description": "Response body schema for **GET** `v1/skus/{skuId}`."
      },
      "SkusImportCSVRequestBody": {
        "title": "SkusImportCSVRequestBody",
        "type": "object",
        "format": "binary",
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "description": "File path.",
            "nullable": true
          }
        },
        "required": [],
        "description": "Response body schema for **POST** `v1/skus/importCSV`."
      },
      "SkusImportCsvCreateResponseBody": {
        "title": "SkusImportCsvCreateResponseBody",
        "type": "object",
        "properties": {
          "async_action_id": {
            "type": "string",
            "example": "aa_0a875d56c805df6601",
            "description": "The ID of the scheduled asynchronous action.",
            "nullable": true
          }
        },
        "required": [],
        "description": "Response body schema for **POST** `v1/skus/importCSV`."
      },
      "TemplatesCampaignsCampaignSetupCreateRequestBody": {
        "title": "TemplatesCampaignsCampaignSetupCreateRequestBody",
        "type": "object",
        "required": [],
        "properties": {
          "name": {
            "type": "string",
            "description": "Campaign name.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "An optional field to keep any extra textual information about the campaign such as a campaign description and details.",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "Defines whether the campaign can be updated with new vouchers after campaign creation or if the campaign consists of generic (standalone) voucherss.\n\n- `AUTO_UPDATE`: the campaign is dynamic, i.e. vouchers will generate based on set criteria\n-  `STATIC`: vouchers need to be manually published",
            "enum": [
              "AUTO_UPDATE",
              "STATIC"
            ],
            "nullable": true
          },
          "join_once": {
            "type": "boolean",
            "description": "If this value is set to `true`, customers will be able to join the campaign only once. For loyalty campaigns, it's forced to `true`, even if `join_once: false` is passed in the request.",
            "nullable": true
          },
          "auto_join": {
            "type": "boolean",
            "description": "Indicates whether customers will be able to auto-join a loyalty campaign if any earning rule is fulfilled.",
            "nullable": true
          },
          "use_voucher_metadata_schema": {
            "type": "boolean",
            "description": "Flag indicating whether the campaign is to use the voucher's metadata schema instead of the campaign metadata schema.",
            "nullable": true
          },
          "vouchers_count": {
            "type": "integer",
            "description": "Total number of unique vouchers in campaign (size of campaign).",
            "nullable": true
          },
          "start_date": {
            "type": "string",
            "format": "date-time",
            "description": "Activation timestamp defines when the campaign starts to be active in ISO 8601 format. Campaign is *inactive before* this date. ",
            "example": "2022-09-20T00:00:00.000Z",
            "nullable": true
          },
          "expiration_date": {
            "type": "string",
            "format": "date-time",
            "description": "Expiration timestamp defines when the campaign expires in ISO 8601 format.  Campaign is *inactive after* this date.",
            "example": "2022-09-30T00:00:00.000Z",
            "nullable": true
          },
          "validity_timeframe": {
            "$ref": "#/components/schemas/ValidityTimeframe"
          },
          "validity_day_of_week": {
            "$ref": "#/components/schemas/ValidityDayOfWeek"
          },
          "validity_hours": {
            "$ref": "#/components/schemas/ValidityHours"
          },
          "activity_duration_after_publishing": {
            "type": "string",
            "description": "Defines the amount of time the vouchers will be active after publishing. The value is shown in the ISO 8601 format. For example, a voucher with the value of P24D will be valid for a duration of 24 days.",
            "nullable": true
          },
          "category_id": {
            "type": "string",
            "description": "Unique category ID that this campaign belongs to. Either pass this parameter OR the `category`.",
            "example": "cat_0b688929a2476386a7",
            "nullable": true
          },
          "category": {
            "type": "string",
            "description": "The category assigned to the campaign. Either pass this parameter OR the `category_id`.",
            "nullable": true
          },
          "metadata": {
            "title": "TemplatesCampaignsCampaignSetupCreateRequestBodyMetadata",
            "type": "object",
            "description": "The metadata object stores all custom attributes assigned to the campaign. A set of key/value pairs that you can attach to a campaign object. It can be useful for storing additional information about the campaign in a structured format.",
            "nullable": true
          },
          "access_settings": {
            "$ref": "#/components/schemas/AccessSettings"
          },
          "voucher": {
            "title": "TemplatesCampaignsCampaignSetupCreateRequestBodyVoucher",
            "type": "object",
            "description": "",
            "properties": {
              "code_config": {
                "$ref": "#/components/schemas/CodeConfig"
              },
              "redemption": {
                "title": "TemplatesCampaignsCampaignSetupCreateRequestBodyVoucherRedemption",
                "type": "object",
                "description": "Stores the quantity of redemptions that can be applied to the voucher.",
                "properties": {
                  "quantity": {
                    "type": "integer",
                    "description": "How many times a voucher can be redeemed. A `null` value means unlimited.",
                    "nullable": true
                  }
                },
                "nullable": true
              }
            },
            "nullable": true
          }
        },
        "description": "Request body schema for **POST** `/v1/templates/campaigns/{campaignTemplateId}/campaign-setup`."
      },
      "TemplatesCampaignsCampaignSetupCreateResponseBody": {
        "title": "TemplatesCampaignsCampaignSetupCreateResponseBody",
        "type": "object",
        "description": "Response body schema for **POST** `/v1/templates/campaigns/{campaignTemplateId}/campaign-setup`.",
        "properties": {
          "created_resources": {
            "title": "TemplatesCampaignsCampaignSetupCreateResponseBodyCreatedResources",
            "type": "array",
            "description": "Contains a list of resources that have been added to the project when the campaign has been created out of the template.",
            "items": {
              "title": "TemplatesCampaignsCampaignSetupCreateResponseBodyCreatedResourcesItem",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Unique identifier assigned to the created resource. It is assigned by Voucherify."
                },
                "object": {
                  "type": "string",
                  "description": "The type of the created resource.",
                  "enum": [
                    "validation_rules",
                    "product",
                    "sku",
                    "products_collection",
                    "segments",
                    "location"
                  ]
                }
              }
            },
            "required": [
              "id",
              "object"
            ],
            "nullable": true
          },
          "campaign": {
            "$ref": "#/components/schemas/Campaign"
          },
          "object": {
            "type": "string",
            "description": "The type of the object represented by JSON. This object stores information about the campaign created out of the campaign template.",
            "default": "campaign_setup",
            "enum": [
              "campaign_setup"
            ],
            "nullable": true
          }
        },
        "required": [
          "campaign"
        ]
      },
      "TemplatesCampaignsCreateRequestBody": {
        "title": "TemplatesCampaignsCreateRequestBody",
        "type": "object",
        "required": [],
        "properties": {
          "campaign_id": {
            "type": "string",
            "nullable": true,
            "description": "Unique identifier of the campaign that will create a template. It must be an ID of an existing discount or gift card campaign. It cannot be passed when `promotion_tier_id` has value. Required when the `promotion_tier_id` is not passed or it is `null`."
          },
          "promotion_tier_id": {
            "type": "string",
            "nullable": true,
            "description": "Unique identifier of the promotion tier that will create a template. It cannot be passed when `campaign_id` has value. Required when the `campaign_id` is not passed or it is `null`."
          },
          "name": {
            "type": "string",
            "description": "User-defined name of the campaign template. It must be unique.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "User-defined description of the campaign template."
          }
        },
        "description": "Request body schema for **POST** `/templates/campaign`."
      },
      "TemplatesCampaignsCreateTemplateResponseBody": {
        "title": "TemplatesCampaignsCreateTemplateResponseBody",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of the campaign template. It is assigned by Voucherify.",
            "example": "camp_tpl_eR9NsNJ5gqJRN2TG3fqCvbVl",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "User-defined name of the campaign template.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "User-defined description of the campaign template.",
            "nullable": true
          },
          "campaign_type": {
            "type": "string",
            "description": "Type of the campaign used to create the campaign template. Templates created from a promotion tier are converted to `DISCOUNT_COUPONS`.",
            "enum": [
              "DISCOUNT_COUPONS",
              "GIFT_VOUCHERS"
            ],
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp representing the date and time when the campaign template was created. The value is shown in the ISO 8601 format.",
            "example": "2024-07-16T09:05:53.175Z",
            "nullable": true
          },
          "object": {
            "type": "string",
            "description": "The type of the object represented by JSON.",
            "default": "campaign_template",
            "enum": [
              "campaign_template"
            ],
            "nullable": true
          }
        },
        "required": [],
        "description": "Response body schema for **POST** `/v1/templates/campaigns`."
      },
      "TemplatesCampaignsGetResponseBody": {
        "title": "TemplatesCampaignsGetResponseBody",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of the campaign template. It is assigned by Voucherify.",
            "example": "camp_tpl_eR9NsNJ5gqJRN2TG3fqCvbVl",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "User-defined name of the campaign template.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "User-defined description of the campaign template.",
            "nullable": true
          },
          "campaign_type": {
            "type": "string",
            "description": "Type of the campaign used to create the campaign template. Templates created from a promotion tier are converted to `DISCOUNT_COUPONS`.",
            "enum": [
              "DISCOUNT_COUPONS",
              "GIFT_VOUCHERS"
            ],
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp representing the date and time when the campaign template was created. The value is shown in the ISO 8601 format.",
            "example": "2024-07-16T09:05:53.175Z",
            "nullable": true
          },
          "object": {
            "type": "string",
            "description": "The type of the object represented by JSON.",
            "default": "campaign_template",
            "enum": [
              "campaign_template"
            ],
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp representing the date and time when the campaign template was last updated. The value is shown in the ISO 8601 format.",
            "example": "2024-07-17T06:25:21.500Z",
            "nullable": true
          }
        },
        "description": "Response body schema for **GET** `/v1/templates/campaign/{campaignTemplateId}`."
      },
      "TemplatesCampaignsListResponseBody": {
        "title": "TemplatesCampaignsListResponseBody",
        "type": "object",
        "description": "Response body schema for **GET** `/v1/templates/campaign`.",
        "properties": {
          "object": {
            "type": "string",
            "description": "The type of the object represented by JSON. This object stores information about campaign templates.",
            "default": "list",
            "enum": [
              "list"
            ],
            "nullable": true
          },
          "data_ref": {
            "type": "string",
            "description": "Identifies the name of the JSON property that contains the array of campaign templates.",
            "default": "data",
            "enum": [
              "data"
            ],
            "nullable": true
          },
          "data": {
            "title": "TemplatesCampaignsListResponseBodyData",
            "type": "array",
            "description": "Dictionary that contains an array of campaign templates.",
            "items": {
              "$ref": "#/components/schemas/CampaignTemplate"
            },
            "nullable": true
          },
          "total": {
            "type": "integer",
            "description": "Total number of templates, regardless of the applied query parameters. Displayed only if the `include_total` query paremeter is set to `true`.",
            "nullable": true
          },
          "has_more": {
            "type": "boolean",
            "description": "As query results are always limited (by the limit parameter), the `has_more` flag indicates if there are more records for given filter parameters. This lets you know if you can run another request to get more records returned in the results.",
            "nullable": true
          },
          "more_starting_after": {
            "type": "string",
            "description": "Returns an ID that can be used to return another page of results. Use the template ID in the `starting_after_id` query parameter to display another page of the results starting after the template with that ID.",
            "nullable": true
          }
        },
        "required": [
          "campaign_template"
        ]
      },
      "TemplatesCampaignsTierSetupCreateRequestBody": {
        "title": "TemplatesCampaignsTierSetupCreateRequestBody",
        "type": "object",
        "required": [],
        "properties": {
          "campaign_id": {
            "type": "string",
            "description": "Unique campaign identifier, assigned by Voucherify. Defines the promotion campaign to which the promotion tier will be added.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Name of the promotion tier.",
            "nullable": true
          },
          "banner": {
            "type": "string",
            "description": "Text to be displayed to your customers on your website.",
            "nullable": true
          },
          "metadata": {
            "title": "TemplatesCampaignsTierSetupCreateRequestBodyMetadata",
            "type": "object",
            "description": "The metadata object stores all custom attributes assigned to the promotion tier. A set of key/value pairs that you can attach to a promotion tier object. It can be useful for storing additional information about the promotion tier in a structured format.",
            "nullable": true
          },
          "hierarchy": {
            "type": "integer",
            "description": "The promotions hierarchy defines the order in which the discounts from different tiers will be applied to a customer's order. If a customer qualifies for discounts from more than one tier, discounts will be applied in the order defined in the hierarchy.",
            "nullable": true
          },
          "active": {
            "type": "boolean",
            "description": "A flag to toggle the promotion tier on or off. You can disable a promotion tier even though it's within the active period defined by the `start_date` and `expiration_date`.  \n\n- `true` indicates an *active* promotion tier\n- `false` indicates an *inactive* promotion tier",
            "nullable": true
          },
          "start_date": {
            "type": "string",
            "description": "Activation timestamp defines when the promotion tier starts to be active in ISO 8601 format. Promotion tier is *inactive before* this date. ",
            "format": "date-time",
            "example": "2022-09-23T00:00:00.000Z",
            "nullable": true
          },
          "expiration_date": {
            "type": "string",
            "description": "Activation timestamp defines when the promotion tier expires in ISO 8601 format. Promotion tier is *inactive after* this date. ",
            "format": "date-time",
            "example": "2022-09-26T00:00:00.000Z",
            "nullable": true
          },
          "validity_timeframe": {
            "$ref": "#/components/schemas/ValidityTimeframe"
          },
          "validity_day_of_week": {
            "$ref": "#/components/schemas/ValidityDayOfWeek"
          },
          "validity_hours": {
            "$ref": "#/components/schemas/ValidityHours"
          },
          "category": {
            "type": "string",
            "description": "Assign a new or update the promotion tier's category using name.",
            "example": "cat_0c9da30e7116ba6bba",
            "nullable": true
          },
          "category_id": {
            "type": "string",
            "description": "Assign a new or update the promotion tier's category using id",
            "example": "cat_0c9da30e7116ba6bba",
            "nullable": true
          }
        },
        "description": "Request body schema for **POST** `/v1/templates/campaigns/{campaignTemplateId}/tier-setup`."
      },
      "TemplatesCampaignsTierSetupCreateResponseBody": {
        "title": "TemplatesCampaignsTierSetupCreateResponseBody",
        "type": "object",
        "description": "Response body schema for **POST** `/v1/templates/campaigns/{campaignTemplateId}/tier-setup`.",
        "properties": {
          "created_resources": {
            "title": "TemplatesCampaignsTierSetupCreateResponseBodyCreatedResources",
            "type": "array",
            "description": "Contains a list of resources that have been added to the project when the promotion tier has been created out of the template.",
            "items": {
              "title": "TemplatesCampaignsTierSetupCreateResponseBodyCreatedResourcesItem",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Unique identifier assigned to the created resource. It is assigned by Voucherify."
                },
                "object": {
                  "type": "string",
                  "description": "The type of the created resource.",
                  "enum": [
                    "validation_rules",
                    "product",
                    "sku",
                    "products_collection",
                    "segments",
                    "location"
                  ]
                }
              }
            },
            "required": [
              "id",
              "object"
            ],
            "nullable": true
          },
          "promotion_tier": {
            "$ref": "#/components/schemas/PromotionTier"
          },
          "object": {
            "type": "string",
            "description": "The type of the object represented by JSON. This object stores information about the campaign created out of the campaign template.",
            "default": "promotion_tier_setup",
            "enum": [
              "promotion_tier_setup"
            ],
            "nullable": true
          }
        },
        "required": [
          "campaign"
        ]
      },
      "TemplatesCampaignsUpdateRequestBody": {
        "title": "TemplatesCampaignsUpdateRequestBody",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User-defined name of the campaign template. It must be unique.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "User-defined description of the campaign template."
          }
        },
        "description": "Request body schema for **PUT** `/templates/campaign/{campaignTemplateId}`."
      },
      "TemplatesCampaignsUpdateResponseBody": {
        "title": "TemplatesCampaignsUpdateResponseBody",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of the campaign template. It is assigned by Voucherify.",
            "example": "camp_tpl_eR9NsNJ5gqJRN2TG3fqCvbVl",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "User-defined name of the campaign template.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "User-defined description of the campaign template.",
            "nullable": true
          },
          "campaign_type": {
            "type": "string",
            "description": "Type of the campaign used to create the campaign template. Templates created from a promotion tier are converted to `DISCOUNT_COUPONS`.",
            "enum": [
              "DISCOUNT_COUPONS",
              "GIFT_VOUCHERS"
            ],
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp representing the date and time when the campaign template was created. The value is shown in the ISO 8601 format.",
            "example": "2024-07-16T09:05:53.175Z",
            "nullable": true
          },
          "object": {
            "type": "string",
            "description": "The type of the object represented by JSON.",
            "default": "campaign_template",
            "enum": [
              "campaign_template"
            ],
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp representing the date and time when the campaign template was last updated. The value is shown in the ISO 8601 format.",
            "example": "2024-07-17T06:25:21.500Z",
            "nullable": true
          }
        },
        "description": "Request body schema for **PUT** `/templates/campaign/{campaignTemplateId}`."
      },
      "TrashBinListResponseBody": {
        "title": "TrashBinListResponseBody",
        "type": "object",
        "description": "Retrieves a list of the resources moved the bin.",
        "properties": {
          "object": {
            "type": "string",
            "default": "list",
            "description": "The type of the object represented by JSON. This object stores information about the bin entries in a dictionary.",
            "enum": [
              "list"
            ],
            "nullable": true
          },
          "data_ref": {
            "type": "string",
            "default": "data",
            "description": "Identifies the name of the attribute that contains the array of bin entry objects.",
            "enum": [
              "data"
            ],
            "nullable": true
          },
          "data": {
            "title": "TrashBinListResponseBodyData",
            "type": "array",
            "description": "Array of bin entry objects.",
            "items": {
              "$ref": "#/components/schemas/TrashBinItem"
            },
            "nullable": true
          },
          "total": {
            "type": "integer",
            "description": "The total number of bin entries. This is the number of the entries returned in the array, not the number of all matching results or all resources currently moved to the bin.",
            "nullable": true
          },
          "has_more": {
            "type": "boolean",
            "description": "As query results are always limited (by the limit parameter), the `has_more` flag indicates if there are more records for given filter parameters. This lets you know if you can run another request with a `starting_after_id` query or a different limit to get more records returned in the results.",
            "nullable": true
          },
          "more_starting_after": {
            "type": "string",
            "description": "If `has_more` is `true`, it returns an ID that can be used to return another page of results. Use the ID in the `starting_after_id` query parameter to display another page of the results occuring after the field with that ID.",
            "nullable": true
          }
        },
        "required": []
      },
      "ValidationRulesAssignmentsCreateRequestBody": {
        "title": "ValidationRulesAssignmentsCreateRequestBody",
        "type": "object",
        "description": "Request body schema for **POST** `v1/validation-rules/{validationRuleId}/assignments`.",
        "properties": {
          "related_object_type": {
            "type": "string",
            "description": "Defines the related object, e.g. `voucher`.",
            "default": "voucher",
            "enum": [
              "voucher",
              "promotion_tier",
              "campaign",
              "earning_rule",
              "distribution",
              "reward_assignment"
            ],
            "nullable": true
          },
          "related_object_id": {
            "type": "string",
            "description": "Unique related object ID assigned by Voucherify, e.g. `v_lfZi4rcEGe0sN9gmnj40bzwK2FH6QUno` for a voucher.",
            "nullable": true
          }
        }
      },
      "ValidationRulesAssignmentsCreateResponseBody": {
        "title": "ValidationRulesAssignmentsCreateResponseBody",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "asgm_74F7QZoYbUoljwQO",
            "description": "Validation rule assignment ID.",
            "nullable": true
          },
          "rule_id": {
            "type": "string",
            "example": "val_4j7DCRm2IS59",
            "description": "Validation rule ID.",
            "nullable": true
          },
          "related_object_id": {
            "type": "string",
            "example": "v_JtWunK6jUo7X2qOFj0SyRHq4p9tgENlT",
            "description": "The resource ID to which the validation rule was assigned.",
            "nullable": true
          },
          "related_object_type": {
            "type": "string",
            "description": "The type of resource to which the validation rule was assigned.",
            "enum": [
              "voucher",
              "campaign",
              "earning_rule",
              "reward_assignment",
              "promotion_tier",
              "distribution"
            ],
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "example": "2022-02-17T08:18:15.085Z",
            "description": "Timestamp representing the date and time when the validation rule assignment was created. The value is shown in the ISO 8601 format.",
            "format": "date-time",
            "nullable": true
          },
          "object": {
            "type": "string",
            "default": "validation_rules_assignment",
            "description": "The type of the object represented by the ID.",
            "enum": [
              "validation_rules_assignment"
            ],
            "nullable": true
          }
        },
        "required": [],
        "description": "Response body for **POST** `v1/validation-rules/{validationRuleId}/assignments`."
      },
      "ValidationRulesAssignmentsListResponseBody": {
        "title": "ValidationRulesAssignmentsListResponseBody",
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "description": "The type of the object represented by JSON. This object stores information about validation rule assignments.",
            "default": "list",
            "nullable": true
          },
          "data_ref": {
            "type": "string",
            "description": "Identifies the name of the JSON property that contains the array of validation rule assignments.",
            "default": "data",
            "nullable": true
          },
          "data": {
            "title": "ValidationRulesAssignmentsListResponseBodyData",
            "type": "array",
            "description": "A dictionary that contains an array of validation rule assignments.",
            "items": {
              "$ref": "#/components/schemas/ValidationRuleAssignment"
            },
            "nullable": true
          },
          "total": {
            "type": "integer",
            "description": "Total number of validation rule assignments.",
            "nullable": true
          }
        },
        "required": [],
        "description": "Response body for **GET** `v1/validation-rules-assignments` and **GET** `v1/validation-rules/{validationRuleId}/assignments`."
      },
      "ValidationRulesCreateRequestBody": {
        "title": "ValidationRulesCreateRequestBody",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Custom, unique name for set of validation rules.",
            "example": "Business Validation Rule",
            "nullable": true
          },
          "rules": {
            "$ref": "#/components/schemas/ValidationRuleRules"
          },
          "bundle_rules": {
            "$ref": "#/components/schemas/ValidationRuleBundleRules"
          },
          "error": {
            "title": "ValidationRulesCreateRequestBodyError",
            "type": "object",
            "description": "Contains the error message returned from API when validation / redemption fails to meet requirements of defined rules.",
            "properties": {
              "message": {
                "type": "string",
                "description": "The error message returned from API when validation / redemption fails to meet requirements of defined rules.",
                "nullable": true
              }
            },
            "nullable": true
          },
          "applicable_to": {
            "title": "ValidationRulesCreateRequestBodyApplicableTo",
            "type": "object",
            "properties": {
              "excluded": {
                "title": "ValidationRulesCreateRequestBodyApplicableToExcluded",
                "type": "array",
                "description": "Defines which items are excluded from a discount.",
                "items": {
                  "$ref": "#/components/schemas/ApplicableTo"
                },
                "nullable": true
              },
              "included": {
                "title": "ValidationRulesCreateRequestBodyApplicableToIncluded",
                "type": "array",
                "description": "Defines which items are included in a discount.",
                "items": {
                  "$ref": "#/components/schemas/ApplicableTo"
                },
                "nullable": true
              },
              "included_all": {
                "type": "boolean",
                "description": "Indicates whether all items are included in the discount.",
                "nullable": true
              }
            },
            "nullable": true
          },
          "type": {
            "type": "string",
            "enum": [
              "expression",
              "basic",
              "advanced",
              "complex"
            ],
            "default": "expression",
            "description": "Type of validation rule.",
            "nullable": true
          },
          "context_type": {
            "type": "string",
            "default": "global",
            "enum": [
              "earning_rule.order.paid",
              "earning_rule.custom_event",
              "earning_rule.customer.segment.entered",
              "earning_rule.customer.tier.joined",
              "earning_rule.customer.tier.left",
              "earning_rule.customer.tier.upgraded",
              "earning_rule.customer.tier.downgraded",
              "earning_rule.customer.tier.prolonged",
              "campaign.discount_coupons",
              "campaign.discount_coupons.discount.apply_to_order",
              "campaign.discount_coupons.discount.apply_to_items",
              "campaign.discount_coupons.discount.apply_to_items_proportionally",
              "campaign.discount_coupons.discount.apply_to_items_proportionally_by_quantity",
              "campaign.discount_coupons.discount.apply_to_items_by_quantity",
              "campaign.discount_coupons.discount.fixed.apply_to_items",
              "campaign.discount_coupons.discount.percent.apply_to_items",
              "campaign.gift_vouchers",
              "campaign.gift_vouchers.gift.apply_to_order",
              "campaign.gift_vouchers.gift.apply_to_items",
              "campaign.referral_program",
              "campaign.referral_program.discount.apply_to_order",
              "campaign.referral_program.discount.apply_to_items",
              "campaign.referral_program.discount.apply_to_items_proportionally",
              "campaign.referral_program.discount.apply_to_items_proportionally_by_quantity",
              "campaign.referral_program.discount.apply_to_items_by_quantity",
              "campaign.referral_program.discount.fixed.apply_to_items",
              "campaign.referral_program.discount.percent.apply_to_items",
              "campaign.promotion",
              "campaign.promotion.discount.apply_to_order",
              "campaign.promotion.discount.apply_to_items",
              "campaign.promotion.discount.apply_to_items_proportionally",
              "campaign.promotion.discount.apply_to_items_proportionally_by_quantity",
              "campaign.promotion.discount.apply_to_items_by_quantity",
              "campaign.promotion.discount.fixed.apply_to_items",
              "campaign.promotion.discount.percent.apply_to_items",
              "campaign.loyalty_program",
              "voucher.discount_voucher",
              "voucher.discount_voucher.discount.apply_to_order",
              "voucher.discount_voucher.discount.apply_to_items",
              "voucher.discount_voucher.discount.apply_to_items_proportionally",
              "voucher.discount_voucher.discount.apply_to_items_proportionally_by_quantity",
              "voucher.discount_voucher.discount.apply_to_items_by_quantity",
              "voucher.discount_voucher.discount.fixed.apply_to_items",
              "voucher.discount_voucher.discount.percent.apply_to_items",
              "voucher.gift_voucher",
              "voucher.gift_voucher.gift.apply_to_order",
              "voucher.gift_voucher.gift.apply_to_items",
              "voucher.loyalty_card",
              "distribution.custom_event",
              "distribution.order.paid",
              "distribution.order.created",
              "distribution.order.canceled",
              "distribution.order.updated",
              "reward_assignment.pay_with_points",
              "global"
            ],
            "description": "Validation rule context type.  \n\n| **Context Type** | **Definition** |\n|:---|:---|\n| earning_rule.order.paid |  |\n| earning_rule.custom_event |  |\n| earning_rule.customer.segment.entered |  |\n| campaign.discount_coupons |  |\n| campaign.discount_coupons.discount.apply_to_order |  |\n| campaign.discount_coupons.discount.apply_to_items |  |\n| campaign.discount_coupons.discount.apply_to_items_proportionally |  |\n| campaign.discount_coupons.discount.apply_to_items_proportionally_by_quantity |  |\n| campaign.discount_coupons.discount.fixed.apply_to_items |  |\n| campaign.gift_vouchers |  |\n| campaign.gift_vouchers.gift.apply_to_order |  |\n| campaign.gift_vouchers.gift.apply_to_items |  |\n| campaign.referral_program |  |\n| campaign.referral_program.discount.apply_to_order |  |\n| campaign.referral_program.discount.apply_to_items |  |\n| campaign.referral_program.discount.apply_to_items_proportionally |  |\n| campaign.referral_program.discount.apply_to_items_proportionally_by_quantity |  |\n| campaign.referral_program.discount.fixed.apply_to_items |  |\n| campaign.promotion |  |\n| campaign.promotion.discount.apply_to_order |  |\n| campaign.promotion.discount.apply_to_items |  |\n| campaign.promotion.discount.apply_to_items_proportionally |  |\n| campaign.promotion.discount.apply_to_items_proportionally_by_quantity |  |\n| campaign.promotion.discount.fixed.apply_to_items |  |\n| campaign.loyalty_program |  |\n| voucher.discount_voucher |  |\n| voucher.discount_voucher.discount.apply_to_order |  |\n| voucher.discount_voucher.discount.apply_to_items |  |\n| voucher.discount_voucher.discount.apply_to_items_proportionally |  |\n| voucher.discount_voucher.discount.apply_to_items_proportionally_by_quantity |  |\n| voucher.discount_voucher.discount.fixed.apply_to_items |  |\n| voucher.gift_voucher |  |\n| voucher.gift_voucher.gift.apply_to_order |  |\n| voucher.gift_voucher.gift.apply_to_items |  |\n| voucher.loyalty_card |  |\n| distribution.custom_event |  |\n| reward_assignment.pay_with_points |  |\n| global |  |",
            "nullable": true
          }
        },
        "description": "Request body schema for **POST** `v1/validation-rules`."
      },
      "ValidationRulesCreateResponseBody": {
        "title": "ValidationRulesCreateResponseBody",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Custom, unique name for set of validation rules.",
            "example": "Business Validation Rule",
            "nullable": true
          },
          "rules": {
            "$ref": "#/components/schemas/ValidationRuleRules"
          },
          "bundle_rules": {
            "$ref": "#/components/schemas/ValidationRuleBundleRules"
          },
          "error": {
            "title": "ValidationRulesCreateResponseBodyError",
            "type": "object",
            "description": "Contains the error message returned from API when validation / redemption fails to meet requirements of defined rules.",
            "properties": {
              "message": {
                "type": "string",
                "description": "The error message returned from API when validation / redemption fails to meet requirements of defined rules.",
                "nullable": true
              }
            },
            "nullable": true
          },
          "applicable_to": {
            "title": "ValidationRulesCreateResponseBodyApplicableTo",
            "type": "object",
            "properties": {
              "excluded": {
                "title": "ValidationRulesCreateResponseBodyApplicableToExcluded",
                "type": "array",
                "description": "Defines which items are excluded from a discount.",
                "items": {
                  "$ref": "#/components/schemas/ApplicableTo"
                },
                "nullable": true
              },
              "included": {
                "title": "ValidationRulesCreateResponseBodyApplicableToIncluded",
                "type": "array",
                "description": "Defines which items are included in a discount.",
                "items": {
                  "$ref": "#/components/schemas/ApplicableTo"
                },
                "nullable": true
              },
              "included_all": {
                "type": "boolean",
                "description": "Indicates whether all items are included in the discount.",
                "nullable": true
              }
            },
            "nullable": true
          },
          "type": {
            "type": "string",
            "enum": [
              "expression",
              "basic",
              "advanced",
              "complex"
            ],
            "default": "expression",
            "description": "Type of validation rule.",
            "nullable": true
          },
          "context_type": {
            "type": "string",
            "default": "global",
            "enum": [
              "earning_rule.order.paid",
              "earning_rule.custom_event",
              "earning_rule.customer.segment.entered",
              "earning_rule.customer.tier.joined",
              "earning_rule.customer.tier.left",
              "earning_rule.customer.tier.upgraded",
              "earning_rule.customer.tier.downgraded",
              "earning_rule.customer.tier.prolonged",
              "campaign.discount_coupons",
              "campaign.discount_coupons.discount.apply_to_order",
              "campaign.discount_coupons.discount.apply_to_items",
              "campaign.discount_coupons.discount.apply_to_items_proportionally",
              "campaign.discount_coupons.discount.apply_to_items_proportionally_by_quantity",
              "campaign.discount_coupons.discount.apply_to_items_by_quantity",
              "campaign.discount_coupons.discount.fixed.apply_to_items",
              "campaign.discount_coupons.discount.percent.apply_to_items",
              "campaign.gift_vouchers",
              "campaign.gift_vouchers.gift.apply_to_order",
              "campaign.gift_vouchers.gift.apply_to_items",
              "campaign.referral_program",
              "campaign.referral_program.discount.apply_to_order",
              "campaign.referral_program.discount.apply_to_items",
              "campaign.referral_program.discount.apply_to_items_proportionally",
              "campaign.referral_program.discount.apply_to_items_proportionally_by_quantity",
              "campaign.referral_program.discount.apply_to_items_by_quantity",
              "campaign.referral_program.discount.fixed.apply_to_items",
              "campaign.referral_program.discount.percent.apply_to_items",
              "campaign.promotion",
              "campaign.promotion.discount.apply_to_order",
              "campaign.promotion.discount.apply_to_items",
              "campaign.promotion.discount.apply_to_items_proportionally",
              "campaign.promotion.discount.apply_to_items_proportionally_by_quantity",
              "campaign.promotion.discount.apply_to_items_by_quantity",
              "campaign.promotion.discount.fixed.apply_to_items",
              "campaign.promotion.discount.percent.apply_to_items",
              "campaign.loyalty_program",
              "voucher.discount_voucher",
              "voucher.discount_voucher.discount.apply_to_order",
              "voucher.discount_voucher.discount.apply_to_items",
              "voucher.discount_voucher.discount.apply_to_items_proportionally",
              "voucher.discount_voucher.discount.apply_to_items_proportionally_by_quantity",
              "voucher.discount_voucher.discount.apply_to_items_by_quantity",
              "voucher.discount_voucher.discount.fixed.apply_to_items",
              "voucher.discount_voucher.discount.percent.apply_to_items",
              "voucher.gift_voucher",
              "voucher.gift_voucher.gift.apply_to_order",
              "voucher.gift_voucher.gift.apply_to_items",
              "voucher.loyalty_card",
              "distribution.custom_event",
              "distribution.order.paid",
              "distribution.order.created",
              "distribution.order.canceled",
              "distribution.order.updated",
              "reward_assignment.pay_with_points",
              "global"
            ],
            "description": "Validation rule context type.  \n\n| **Context Type** | **Definition** |\n|:---|:---|\n| earning_rule.order.paid |  |\n| earning_rule.custom_event |  |\n| earning_rule.customer.segment.entered |  |\n| campaign.discount_coupons |  |\n| campaign.discount_coupons.discount.apply_to_order |  |\n| campaign.discount_coupons.discount.apply_to_items |  |\n| campaign.discount_coupons.discount.apply_to_items_proportionally |  |\n| campaign.discount_coupons.discount.apply_to_items_proportionally_by_quantity |  |\n| campaign.discount_coupons.discount.fixed.apply_to_items |  |\n| campaign.gift_vouchers |  |\n| campaign.gift_vouchers.gift.apply_to_order |  |\n| campaign.gift_vouchers.gift.apply_to_items |  |\n| campaign.referral_program |  |\n| campaign.referral_program.discount.apply_to_order |  |\n| campaign.referral_program.discount.apply_to_items |  |\n| campaign.referral_program.discount.apply_to_items_proportionally |  |\n| campaign.referral_program.discount.apply_to_items_proportionally_by_quantity |  |\n| campaign.referral_program.discount.fixed.apply_to_items |  |\n| campaign.promotion |  |\n| campaign.promotion.discount.apply_to_order |  |\n| campaign.promotion.discount.apply_to_items |  |\n| campaign.promotion.discount.apply_to_items_proportionally |  |\n| campaign.promotion.discount.apply_to_items_proportionally_by_quantity |  |\n| campaign.promotion.discount.fixed.apply_to_items |  |\n| campaign.loyalty_program |  |\n| voucher.discount_voucher |  |\n| voucher.discount_voucher.discount.apply_to_order |  |\n| voucher.discount_voucher.discount.apply_to_items |  |\n| voucher.discount_voucher.discount.apply_to_items_proportionally |  |\n| voucher.discount_voucher.discount.apply_to_items_proportionally_by_quantity |  |\n| voucher.discount_voucher.discount.fixed.apply_to_items |  |\n| voucher.gift_voucher |  |\n| voucher.gift_voucher.gift.apply_to_order |  |\n| voucher.gift_voucher.gift.apply_to_items |  |\n| voucher.loyalty_card |  |\n| distribution.custom_event |  |\n| reward_assignment.pay_with_points |  |\n| global |  |",
            "nullable": true
          },
          "id": {
            "type": "string",
            "example": "val_eR1c41hu0vUU",
            "description": "Unique validation rule ID.",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "example": "2022-03-23T07:44:00.444Z",
            "description": "Timestamp representing the date and time when the validation rule was created. The value is shown in the ISO 8601 format.",
            "format": "date-time",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "example": "2022-04-26T08:35:54.960Z",
            "description": "Timestamp representing the date and time when the validation rule was updated. The value is shown in the ISO 8601 format.",
            "format": "date-time",
            "nullable": true
          },
          "assignments_count": {
            "description": "The number of instances the validation rule has been assigned to different types of redeemables.",
            "type": "integer",
            "nullable": true
          },
          "object": {
            "type": "string",
            "default": "validation_rules",
            "description": "The type of the object represented by JSON. This object stores information about the validation rule.",
            "nullable": true
          }
        },
        "description": "Response body schema for **POST** `v1/validation-rules`."
      },
      "ValidationRulesGetResponseBody": {
        "title": "ValidationRulesGetResponseBody",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Custom, unique name for set of validation rules.",
            "example": "Business Validation Rule",
            "nullable": true
          },
          "rules": {
            "$ref": "#/components/schemas/ValidationRuleRules"
          },
          "bundle_rules": {
            "$ref": "#/components/schemas/ValidationRuleBundleRules"
          },
          "error": {
            "title": "ValidationRulesGetResponseBodyError",
            "type": "object",
            "description": "Contains the error message returned from API when validation / redemption fails to meet requirements of defined rules.",
            "properties": {
              "message": {
                "type": "string",
                "description": "The error message returned from API when validation / redemption fails to meet requirements of defined rules.",
                "nullable": true
              }
            },
            "nullable": true
          },
          "applicable_to": {
            "title": "ValidationRulesGetResponseBodyApplicableTo",
            "type": "object",
            "properties": {
              "excluded": {
                "title": "ValidationRulesGetResponseBodyApplicableToExcluded",
                "type": "array",
                "description": "Defines which items are excluded from a discount.",
                "items": {
                  "$ref": "#/components/schemas/ApplicableTo"
                },
                "nullable": true
              },
              "included": {
                "title": "ValidationRulesGetResponseBodyApplicableToIncluded",
                "type": "array",
                "description": "Defines which items are included in a discount.",
                "items": {
                  "$ref": "#/components/schemas/ApplicableTo"
                },
                "nullable": true
              },
              "included_all": {
                "type": "boolean",
                "description": "Indicates whether all items are included in the discount.",
                "nullable": true
              }
            },
            "nullable": true
          },
          "type": {
            "type": "string",
            "enum": [
              "expression",
              "basic",
              "advanced",
              "complex"
            ],
            "default": "expression",
            "description": "Type of validation rule.",
            "nullable": true
          },
          "context_type": {
            "type": "string",
            "default": "global",
            "enum": [
              "earning_rule.order.paid",
              "earning_rule.custom_event",
              "earning_rule.customer.segment.entered",
              "earning_rule.customer.tier.joined",
              "earning_rule.customer.tier.left",
              "earning_rule.customer.tier.upgraded",
              "earning_rule.customer.tier.downgraded",
              "earning_rule.customer.tier.prolonged",
              "campaign.discount_coupons",
              "campaign.discount_coupons.discount.apply_to_order",
              "campaign.discount_coupons.discount.apply_to_items",
              "campaign.discount_coupons.discount.apply_to_items_proportionally",
              "campaign.discount_coupons.discount.apply_to_items_proportionally_by_quantity",
              "campaign.discount_coupons.discount.apply_to_items_by_quantity",
              "campaign.discount_coupons.discount.fixed.apply_to_items",
              "campaign.discount_coupons.discount.percent.apply_to_items",
              "campaign.gift_vouchers",
              "campaign.gift_vouchers.gift.apply_to_order",
              "campaign.gift_vouchers.gift.apply_to_items",
              "campaign.referral_program",
              "campaign.referral_program.discount.apply_to_order",
              "campaign.referral_program.discount.apply_to_items",
              "campaign.referral_program.discount.apply_to_items_proportionally",
              "campaign.referral_program.discount.apply_to_items_proportionally_by_quantity",
              "campaign.referral_program.discount.apply_to_items_by_quantity",
              "campaign.referral_program.discount.fixed.apply_to_items",
              "campaign.referral_program.discount.percent.apply_to_items",
              "campaign.promotion",
              "campaign.promotion.discount.apply_to_order",
              "campaign.promotion.discount.apply_to_items",
              "campaign.promotion.discount.apply_to_items_proportionally",
              "campaign.promotion.discount.apply_to_items_proportionally_by_quantity",
              "campaign.promotion.discount.apply_to_items_by_quantity",
              "campaign.promotion.discount.fixed.apply_to_items",
              "campaign.promotion.discount.percent.apply_to_items",
              "campaign.loyalty_program",
              "voucher.discount_voucher",
              "voucher.discount_voucher.discount.apply_to_order",
              "voucher.discount_voucher.discount.apply_to_items",
              "voucher.discount_voucher.discount.apply_to_items_proportionally",
              "voucher.discount_voucher.discount.apply_to_items_proportionally_by_quantity",
              "voucher.discount_voucher.discount.apply_to_items_by_quantity",
              "voucher.discount_voucher.discount.fixed.apply_to_items",
              "voucher.discount_voucher.discount.percent.apply_to_items",
              "voucher.gift_voucher",
              "voucher.gift_voucher.gift.apply_to_order",
              "voucher.gift_voucher.gift.apply_to_items",
              "voucher.loyalty_card",
              "distribution.custom_event",
              "distribution.order.paid",
              "distribution.order.created",
              "distribution.order.canceled",
              "distribution.order.updated",
              "reward_assignment.pay_with_points",
              "global"
            ],
            "description": "Validation rule context type.  \n\n| **Context Type** | **Definition** |\n|:---|:---|\n| earning_rule.order.paid |  |\n| earning_rule.custom_event |  |\n| earning_rule.customer.segment.entered |  |\n| campaign.discount_coupons |  |\n| campaign.discount_coupons.discount.apply_to_order |  |\n| campaign.discount_coupons.discount.apply_to_items |  |\n| campaign.discount_coupons.discount.apply_to_items_proportionally |  |\n| campaign.discount_coupons.discount.apply_to_items_proportionally_by_quantity |  |\n| campaign.discount_coupons.discount.fixed.apply_to_items |  |\n| campaign.gift_vouchers |  |\n| campaign.gift_vouchers.gift.apply_to_order |  |\n| campaign.gift_vouchers.gift.apply_to_items |  |\n| campaign.referral_program |  |\n| campaign.referral_program.discount.apply_to_order |  |\n| campaign.referral_program.discount.apply_to_items |  |\n| campaign.referral_program.discount.apply_to_items_proportionally |  |\n| campaign.referral_program.discount.apply_to_items_proportionally_by_quantity |  |\n| campaign.referral_program.discount.fixed.apply_to_items |  |\n| campaign.promotion |  |\n| campaign.promotion.discount.apply_to_order |  |\n| campaign.promotion.discount.apply_to_items |  |\n| campaign.promotion.discount.apply_to_items_proportionally |  |\n| campaign.promotion.discount.apply_to_items_proportionally_by_quantity |  |\n| campaign.promotion.discount.fixed.apply_to_items |  |\n| campaign.loyalty_program |  |\n| voucher.discount_voucher |  |\n| voucher.discount_voucher.discount.apply_to_order |  |\n| voucher.discount_voucher.discount.apply_to_items |  |\n| voucher.discount_voucher.discount.apply_to_items_proportionally |  |\n| voucher.discount_voucher.discount.apply_to_items_proportionally_by_quantity |  |\n| voucher.discount_voucher.discount.fixed.apply_to_items |  |\n| voucher.gift_voucher |  |\n| voucher.gift_voucher.gift.apply_to_order |  |\n| voucher.gift_voucher.gift.apply_to_items |  |\n| voucher.loyalty_card |  |\n| distribution.custom_event |  |\n| reward_assignment.pay_with_points |  |\n| global |  |",
            "nullable": true
          },
          "id": {
            "type": "string",
            "example": "val_eR1c41hu0vUU",
            "description": "Unique validation rule ID.",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "example": "2022-03-23T07:44:00.444Z",
            "description": "Timestamp representing the date and time when the validation rule was created. The value is shown in the ISO 8601 format.",
            "format": "date-time",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "example": "2022-04-26T08:35:54.960Z",
            "description": "Timestamp representing the date and time when the validation rule was updated. The value is shown in the ISO 8601 format.",
            "format": "date-time",
            "nullable": true
          },
          "assignments_count": {
            "description": "The number of instances the validation rule has been assigned to different types of redeemables.",
            "type": "integer",
            "nullable": true
          },
          "object": {
            "type": "string",
            "default": "validation_rules",
            "description": "The type of the object represented by JSON. This object stores information about the validation rule.",
            "nullable": true
          }
        },
        "description": "Response body schema for **GET** `v1/validation-rules/{validationRuleId}`."
      },
      "ValidationRulesListResponseBody": {
        "title": "ValidationRulesListResponseBody",
        "description": "Response body schema for **GET** `v1/validation-rules`.",
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "description": "The type of the object represented by JSON. This object stores information about validation rules.",
            "default": "list",
            "nullable": true
          },
          "data_ref": {
            "type": "string",
            "description": "Identifies the name of the attribute that contains the array of validation rules.",
            "default": "data",
            "nullable": true
          },
          "data": {
            "title": "ValidationRulesListResponseBodyData",
            "type": "array",
            "description": "An array of validation rules.",
            "items": {
              "$ref": "#/components/schemas/ValidationRule"
            },
            "nullable": true
          },
          "total": {
            "type": "integer",
            "description": "Total number of validation rules in the project.",
            "nullable": true
          }
        },
        "required": []
      },
      "ValidationRulesUpdateRequestBody": {
        "title": "ValidationRulesUpdateRequestBody",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Custom, unique name for set of validation rules.",
            "example": "Business Validation Rule",
            "nullable": true
          },
          "rules": {
            "$ref": "#/components/schemas/ValidationRuleRules"
          },
          "bundle_rules": {
            "$ref": "#/components/schemas/ValidationRuleBundleRules"
          },
          "error": {
            "title": "ValidationRulesUpdateRequestBodyError",
            "type": "object",
            "description": "Contains the error message returned from API when validation / redemption fails to meet requirements of defined rules.",
            "properties": {
              "message": {
                "type": "string",
                "description": "The error message returned from API when validation / redemption fails to meet requirements of defined rules.",
                "nullable": true
              }
            },
            "nullable": true
          },
          "applicable_to": {
            "title": "ValidationRulesUpdateRequestBodyApplicableTo",
            "type": "object",
            "properties": {
              "excluded": {
                "title": "ValidationRulesUpdateRequestBodyApplicableToExcluded",
                "type": "array",
                "description": "Defines which items are excluded from a discount.",
                "items": {
                  "$ref": "#/components/schemas/ApplicableTo"
                },
                "nullable": true
              },
              "included": {
                "title": "ValidationRulesUpdateRequestBodyApplicableToIncluded",
                "type": "array",
                "description": "Defines which items are included in a discount.",
                "items": {
                  "$ref": "#/components/schemas/ApplicableTo"
                },
                "nullable": true
              },
              "included_all": {
                "type": "boolean",
                "description": "Indicates whether all items are included in the discount.",
                "nullable": true
              }
            },
            "nullable": true
          },
          "type": {
            "type": "string",
            "enum": [
              "expression",
              "basic",
              "advanced",
              "complex"
            ],
            "default": "expression",
            "description": "Type of validation rule.",
            "nullable": true
          },
          "context_type": {
            "type": "string",
            "default": "global",
            "enum": [
              "earning_rule.order.paid",
              "earning_rule.custom_event",
              "earning_rule.customer.segment.entered",
              "earning_rule.customer.tier.joined",
              "earning_rule.customer.tier.left",
              "earning_rule.customer.tier.upgraded",
              "earning_rule.customer.tier.downgraded",
              "earning_rule.customer.tier.prolonged",
              "campaign.discount_coupons",
              "campaign.discount_coupons.discount.apply_to_order",
              "campaign.discount_coupons.discount.apply_to_items",
              "campaign.discount_coupons.discount.apply_to_items_proportionally",
              "campaign.discount_coupons.discount.apply_to_items_proportionally_by_quantity",
              "campaign.discount_coupons.discount.apply_to_items_by_quantity",
              "campaign.discount_coupons.discount.fixed.apply_to_items",
              "campaign.discount_coupons.discount.percent.apply_to_items",
              "campaign.gift_vouchers",
              "campaign.gift_vouchers.gift.apply_to_order",
              "campaign.gift_vouchers.gift.apply_to_items",
              "campaign.referral_program",
              "campaign.referral_program.discount.apply_to_order",
              "campaign.referral_program.discount.apply_to_items",
              "campaign.referral_program.discount.apply_to_items_proportionally",
              "campaign.referral_program.discount.apply_to_items_proportionally_by_quantity",
              "campaign.referral_program.discount.apply_to_items_by_quantity",
              "campaign.referral_program.discount.fixed.apply_to_items",
              "campaign.referral_program.discount.percent.apply_to_items",
              "campaign.promotion",
              "campaign.promotion.discount.apply_to_order",
              "campaign.promotion.discount.apply_to_items",
              "campaign.promotion.discount.apply_to_items_proportionally",
              "campaign.promotion.discount.apply_to_items_proportionally_by_quantity",
              "campaign.promotion.discount.apply_to_items_by_quantity",
              "campaign.promotion.discount.fixed.apply_to_items",
              "campaign.promotion.discount.percent.apply_to_items",
              "campaign.loyalty_program",
              "voucher.discount_voucher",
              "voucher.discount_voucher.discount.apply_to_order",
              "voucher.discount_voucher.discount.apply_to_items",
              "voucher.discount_voucher.discount.apply_to_items_proportionally",
              "voucher.discount_voucher.discount.apply_to_items_proportionally_by_quantity",
              "voucher.discount_voucher.discount.apply_to_items_by_quantity",
              "voucher.discount_voucher.discount.fixed.apply_to_items",
              "voucher.discount_voucher.discount.percent.apply_to_items",
              "voucher.gift_voucher",
              "voucher.gift_voucher.gift.apply_to_order",
              "voucher.gift_voucher.gift.apply_to_items",
              "voucher.loyalty_card",
              "distribution.custom_event",
              "distribution.order.paid",
              "distribution.order.created",
              "distribution.order.canceled",
              "distribution.order.updated",
              "reward_assignment.pay_with_points",
              "global"
            ],
            "description": "Validation rule context type.  \n\n| **Context Type** | **Definition** |\n|:---|:---|\n| earning_rule.order.paid |  |\n| earning_rule.custom_event |  |\n| earning_rule.customer.segment.entered |  |\n| campaign.discount_coupons |  |\n| campaign.discount_coupons.discount.apply_to_order |  |\n| campaign.discount_coupons.discount.apply_to_items |  |\n| campaign.discount_coupons.discount.apply_to_items_proportionally |  |\n| campaign.discount_coupons.discount.apply_to_items_proportionally_by_quantity |  |\n| campaign.discount_coupons.discount.fixed.apply_to_items |  |\n| campaign.gift_vouchers |  |\n| campaign.gift_vouchers.gift.apply_to_order |  |\n| campaign.gift_vouchers.gift.apply_to_items |  |\n| campaign.referral_program |  |\n| campaign.referral_program.discount.apply_to_order |  |\n| campaign.referral_program.discount.apply_to_items |  |\n| campaign.referral_program.discount.apply_to_items_proportionally |  |\n| campaign.referral_program.discount.apply_to_items_proportionally_by_quantity |  |\n| campaign.referral_program.discount.fixed.apply_to_items |  |\n| campaign.promotion |  |\n| campaign.promotion.discount.apply_to_order |  |\n| campaign.promotion.discount.apply_to_items |  |\n| campaign.promotion.discount.apply_to_items_proportionally |  |\n| campaign.promotion.discount.apply_to_items_proportionally_by_quantity |  |\n| campaign.promotion.discount.fixed.apply_to_items |  |\n| campaign.loyalty_program |  |\n| voucher.discount_voucher |  |\n| voucher.discount_voucher.discount.apply_to_order |  |\n| voucher.discount_voucher.discount.apply_to_items |  |\n| voucher.discount_voucher.discount.apply_to_items_proportionally |  |\n| voucher.discount_voucher.discount.apply_to_items_proportionally_by_quantity |  |\n| voucher.discount_voucher.discount.fixed.apply_to_items |  |\n| voucher.gift_voucher |  |\n| voucher.gift_voucher.gift.apply_to_order |  |\n| voucher.gift_voucher.gift.apply_to_items |  |\n| voucher.loyalty_card |  |\n| distribution.custom_event |  |\n| reward_assignment.pay_with_points |  |\n| global |  |",
            "nullable": true
          }
        },
        "description": "Response body schema for **PUT** `v1/validation-rules/{validationRuleId}`."
      },
      "ValidationRulesUpdateResponseBody": {
        "title": "ValidationRulesUpdateResponseBody",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Custom, unique name for set of validation rules.",
            "example": "Business Validation Rule",
            "nullable": true
          },
          "rules": {
            "$ref": "#/components/schemas/ValidationRuleRules"
          },
          "bundle_rules": {
            "$ref": "#/components/schemas/ValidationRuleBundleRules"
          },
          "error": {
            "title": "ValidationRulesUpdateResponseBodyError",
            "type": "object",
            "description": "Contains the error message returned from API when validation / redemption fails to meet requirements of defined rules.",
            "properties": {
              "message": {
                "type": "string",
                "description": "The error message returned from API when validation / redemption fails to meet requirements of defined rules.",
                "nullable": true
              }
            },
            "nullable": true
          },
          "applicable_to": {
            "title": "ValidationRulesUpdateResponseBodyApplicableTo",
            "type": "object",
            "properties": {
              "excluded": {
                "title": "ValidationRulesUpdateResponseBodyApplicableToExcluded",
                "type": "array",
                "description": "Defines which items are excluded from a discount.",
                "items": {
                  "$ref": "#/components/schemas/ApplicableTo"
                },
                "nullable": true
              },
              "included": {
                "title": "ValidationRulesUpdateResponseBodyApplicableToIncluded",
                "type": "array",
                "description": "Defines which items are included in a discount.",
                "items": {
                  "$ref": "#/components/schemas/ApplicableTo"
                },
                "nullable": true
              },
              "included_all": {
                "type": "boolean",
                "description": "Indicates whether all items are included in the discount.",
                "nullable": true
              }
            },
            "nullable": true
          },
          "type": {
            "type": "string",
            "enum": [
              "expression",
              "basic",
              "advanced",
              "complex"
            ],
            "default": "expression",
            "description": "Type of validation rule.",
            "nullable": true
          },
          "context_type": {
            "type": "string",
            "default": "global",
            "enum": [
              "earning_rule.order.paid",
              "earning_rule.custom_event",
              "earning_rule.customer.segment.entered",
              "earning_rule.customer.tier.joined",
              "earning_rule.customer.tier.left",
              "earning_rule.customer.tier.upgraded",
              "earning_rule.customer.tier.downgraded",
              "earning_rule.customer.tier.prolonged",
              "campaign.discount_coupons",
              "campaign.discount_coupons.discount.apply_to_order",
              "campaign.discount_coupons.discount.apply_to_items",
              "campaign.discount_coupons.discount.apply_to_items_proportionally",
              "campaign.discount_coupons.discount.apply_to_items_proportionally_by_quantity",
              "campaign.discount_coupons.discount.apply_to_items_by_quantity",
              "campaign.discount_coupons.discount.fixed.apply_to_items",
              "campaign.discount_coupons.discount.percent.apply_to_items",
              "campaign.gift_vouchers",
              "campaign.gift_vouchers.gift.apply_to_order",
              "campaign.gift_vouchers.gift.apply_to_items",
              "campaign.referral_program",
              "campaign.referral_program.discount.apply_to_order",
              "campaign.referral_program.discount.apply_to_items",
              "campaign.referral_program.discount.apply_to_items_proportionally",
              "campaign.referral_program.discount.apply_to_items_proportionally_by_quantity",
              "campaign.referral_program.discount.apply_to_items_by_quantity",
              "campaign.referral_program.discount.fixed.apply_to_items",
              "campaign.referral_program.discount.percent.apply_to_items",
              "campaign.promotion",
              "campaign.promotion.discount.apply_to_order",
              "campaign.promotion.discount.apply_to_items",
              "campaign.promotion.discount.apply_to_items_proportionally",
              "campaign.promotion.discount.apply_to_items_proportionally_by_quantity",
              "campaign.promotion.discount.apply_to_items_by_quantity",
              "campaign.promotion.discount.fixed.apply_to_items",
              "campaign.promotion.discount.percent.apply_to_items",
              "campaign.loyalty_program",
              "voucher.discount_voucher",
              "voucher.discount_voucher.discount.apply_to_order",
              "voucher.discount_voucher.discount.apply_to_items",
              "voucher.discount_voucher.discount.apply_to_items_proportionally",
              "voucher.discount_voucher.discount.apply_to_items_proportionally_by_quantity",
              "voucher.discount_voucher.discount.apply_to_items_by_quantity",
              "voucher.discount_voucher.discount.fixed.apply_to_items",
              "voucher.discount_voucher.discount.percent.apply_to_items",
              "voucher.gift_voucher",
              "voucher.gift_voucher.gift.apply_to_order",
              "voucher.gift_voucher.gift.apply_to_items",
              "voucher.loyalty_card",
              "distribution.custom_event",
              "distribution.order.paid",
              "distribution.order.created",
              "distribution.order.canceled",
              "distribution.order.updated",
              "reward_assignment.pay_with_points",
              "global"
            ],
            "description": "Validation rule context type.  \n\n| **Context Type** | **Definition** |\n|:---|:---|\n| earning_rule.order.paid |  |\n| earning_rule.custom_event |  |\n| earning_rule.customer.segment.entered |  |\n| campaign.discount_coupons |  |\n| campaign.discount_coupons.discount.apply_to_order |  |\n| campaign.discount_coupons.discount.apply_to_items |  |\n| campaign.discount_coupons.discount.apply_to_items_proportionally |  |\n| campaign.discount_coupons.discount.apply_to_items_proportionally_by_quantity |  |\n| campaign.discount_coupons.discount.fixed.apply_to_items |  |\n| campaign.gift_vouchers |  |\n| campaign.gift_vouchers.gift.apply_to_order |  |\n| campaign.gift_vouchers.gift.apply_to_items |  |\n| campaign.referral_program |  |\n| campaign.referral_program.discount.apply_to_order |  |\n| campaign.referral_program.discount.apply_to_items |  |\n| campaign.referral_program.discount.apply_to_items_proportionally |  |\n| campaign.referral_program.discount.apply_to_items_proportionally_by_quantity |  |\n| campaign.referral_program.discount.fixed.apply_to_items |  |\n| campaign.promotion |  |\n| campaign.promotion.discount.apply_to_order |  |\n| campaign.promotion.discount.apply_to_items |  |\n| campaign.promotion.discount.apply_to_items_proportionally |  |\n| campaign.promotion.discount.apply_to_items_proportionally_by_quantity |  |\n| campaign.promotion.discount.fixed.apply_to_items |  |\n| campaign.loyalty_program |  |\n| voucher.discount_voucher |  |\n| voucher.discount_voucher.discount.apply_to_order |  |\n| voucher.discount_voucher.discount.apply_to_items |  |\n| voucher.discount_voucher.discount.apply_to_items_proportionally |  |\n| voucher.discount_voucher.discount.apply_to_items_proportionally_by_quantity |  |\n| voucher.discount_voucher.discount.fixed.apply_to_items |  |\n| voucher.gift_voucher |  |\n| voucher.gift_voucher.gift.apply_to_order |  |\n| voucher.gift_voucher.gift.apply_to_items |  |\n| voucher.loyalty_card |  |\n| distribution.custom_event |  |\n| reward_assignment.pay_with_points |  |\n| global |  |",
            "nullable": true
          },
          "id": {
            "type": "string",
            "example": "val_eR1c41hu0vUU",
            "description": "Unique validation rule ID.",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "example": "2022-03-23T07:44:00.444Z",
            "description": "Timestamp representing the date and time when the validation rule was created. The value is shown in the ISO 8601 format.",
            "format": "date-time",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "example": "2022-04-26T08:35:54.960Z",
            "description": "Timestamp representing the date and time when the validation rule was updated. The value is shown in the ISO 8601 format.",
            "format": "date-time",
            "nullable": true
          },
          "assignments_count": {
            "description": "The number of instances the validation rule has been assigned to different types of redeemables.",
            "type": "integer",
            "nullable": true
          },
          "object": {
            "type": "string",
            "default": "validation_rules",
            "description": "The type of the object represented by JSON. This object stores information about the validation rule.",
            "nullable": true
          }
        },
        "description": "Response body schema for **PUT** `v1/validation-rules/{validationRuleId}`."
      },
      "ValidationsValidateRequestBody": {
        "title": "ValidationsValidateRequestBody",
        "type": "object",
        "properties": {
          "options": {
            "title": "ValidationsValidateRequestBodyOptions",
            "type": "object",
            "description": "Configure parameters returned in the response.",
            "properties": {
              "expand": {
                "title": "ValidationsValidateRequestBodyOptionsExpand",
                "type": "array",
                "description": "The expand array lets you configure the parameters included in the response. Depending on the strings included in the array, the response will contain different details. \n\n| **Expand Option** | **Response Body** |\n|:---|:---|\n| [\"order\"] | - Same response as fallback response (without an options object).<br>- Order data with calculated discounts are listed in each child redeemable object.<br>- Metadata not included for each discount type. |\n| [\"redeemable\"] | Expands redeemable objects by including `metadata` for each discount type. |\n| [\"order\", \"redeemable\"] | - Order data with calculated discounts are listed in each child redeemable object.<br>- Includes `metadata` for each discount type. |\n| [\"category\"] | - Returns an expanded `categories` object, showing details about the category. |",
                "items": {
                  "title": "ValidationsValidateRequestBodyOptionsExpandItem",
                  "type": "string",
                  "enum": [
                    "order",
                    "redemption",
                    "redeemable",
                    "category"
                  ]
                },
                "nullable": true
              }
            },
            "nullable": true
          },
          "redeemables": {
            "title": "ValidationsValidateRequestBodyRedeemables",
            "type": "array",
            "items": {
              "title": "ValidationsValidateRequestBodyRedeemablesItem",
              "type": "object",
              "properties": {
                "object": {
                  "type": "string",
                  "enum": [
                    "voucher",
                    "promotion_tier",
                    "promotion_stack"
                  ]
                },
                "id": {
                  "type": "string"
                },
                "gift": {
                  "title": "ValidationsValidateRequestBodyRedeemablesItemGift",
                  "type": "object",
                  "description": "Contains information on the number of gift card credits that the customer wants to apply to the order.",
                  "properties": {
                    "credits": {
                      "type": "integer",
                      "description": "The number of credits that the user wants to use from the gift card to fulfill the order. The value of credits cannot be higher than the current balance on the gift card. The value is multiplied by 100 to represent 2 decimal places. For example `10000 cents` for `$100.00`.",
                      "nullable": true
                    }
                  },
                  "nullable": true
                },
                "reward": {
                  "title": "ValidationsValidateRequestBodyRedeemablesItemReward",
                  "type": "object",
                  "description": "Contains information about the reward that the customer wants to redeem and the number of points the customer is choosing to use for the reward.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique reward ID assigned by Voucherify. The reward must be assigned to the campaign in order for the user to be able to use the reward.",
                      "example": "rew_EPx1hCTpqzF0HW1z9NKckZH4",
                      "nullable": true
                    },
                    "points": {
                      "type": "integer",
                      "description": "The number of loyalty points that the user wants to spend in order to fulfill the order using a **pay with points** reward. The number of points cannot be higher than the current balance on the loyalty card.",
                      "nullable": true
                    }
                  },
                  "nullable": true
                }
              }
            },
            "nullable": true
          },
          "order": {
            "$ref": "#/components/schemas/Order"
          },
          "customer": {
            "$ref": "#/components/schemas/Customer"
          },
          "session": {
            "$ref": "#/components/schemas/Session"
          },
          "tracking_id": {
            "description": "Is correspondent to Customer's source_id",
            "type": "string",
            "nullable": true
          },
          "metadata": {
            "title": "ValidationsValidateRequestBodyMetadata",
            "type": "object",
            "description": "A set of key/value pairs that you can attach to a redemption object. It can be useful for storing additional information about the redemption in a structured format.",
            "nullable": true
          }
        },
        "description": "Response body schema for **POST** `v1/validations`."
      },
      "ValidationsValidateResponseBody": {
        "title": "ValidationsValidateResponseBody",
        "description": "Response body schema for **POST** `v1/validations`.",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of the validation, assigned by Voucherify.",
            "example": "valid_101740aa2869354c6d",
            "nullable": true
          },
          "valid": {
            "type": "boolean",
            "description": "The result of the validation. It takes all of the redeemables into account and returns a `false` if at least one redeemable is inapplicable. Returns `true` if all redeemables are applicable.",
            "nullable": true
          },
          "redeemables": {
            "title": "ValidationsValidateResponseBodyRedeemables",
            "type": "array",
            "items": {
              "title": "ValidationsValidateResponseBodyRedeemablesItem",
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "APPLICABLE",
                    "INAPPLICABLE",
                    "SKIPPED"
                  ]
                },
                "id": {
                  "type": "string",
                  "description": "Redeemable ID, i.e. the voucher code.",
                  "nullable": true
                },
                "object": {
                  "type": "string",
                  "description": "Redeemable's object type.",
                  "enum": [
                    "voucher",
                    "promotion_tier"
                  ],
                  "nullable": true
                },
                "order": {
                  "$ref": "#/components/schemas/OrderCalculated"
                },
                "applicable_to": {
                  "$ref": "#/components/schemas/ApplicableToResultList"
                },
                "inapplicable_to": {
                  "$ref": "#/components/schemas/InapplicableToResultList"
                },
                "result": {
                  "title": "ValidationsValidateResponseBodyRedeemablesItemResult",
                  "type": "object",
                  "properties": {
                    "discount": {
                      "title": "ValidationsValidateResponseBodyRedeemablesItemResultDiscount",
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "AMOUNT",
                            "UNIT",
                            "PERCENT",
                            "FIXED"
                          ]
                        },
                        "amount_off": {
                          "type": "number",
                          "description": "Amount taken off the subtotal of a price. Value is multiplied by 100 to precisely represent 2 decimal places. For example, a $10 discount is written as 1000.",
                          "nullable": true
                        },
                        "amount_off_formula": {
                          "type": "string",
                          "nullable": true
                        },
                        "aggregated_amount_limit": {
                          "type": "integer",
                          "description": "Maximum discount amount per order.",
                          "nullable": true
                        },
                        "effect": {
                          "type": "string",
                          "enum": [
                            "APPLY_TO_ORDER",
                            "APPLY_TO_ITEMS",
                            "APPLY_TO_ITEMS_PROPORTIONALLY",
                            "APPLY_TO_ITEMS_PROPORTIONALLY_BY_QUANTITY",
                            "APPLY_TO_ITEMS_BY_QUANTITY",
                            "ADD_MISSING_ITEMS",
                            "ADD_NEW_ITEMS",
                            "ADD_MANY_ITEMS"
                          ]
                        },
                        "is_dynamic": {
                          "type": "boolean",
                          "description": "Flag indicating whether the discount was calculated using a formula.",
                          "nullable": true
                        },
                        "unit_off": {
                          "type": "integer",
                          "description": "Number of units to be granted a full value discount.",
                          "nullable": true
                        },
                        "unit_off_formula": {
                          "type": "string",
                          "description": "Formula used to calculate the number of units.",
                          "nullable": true
                        },
                        "unit_type": {
                          "type": "string",
                          "description": "The product deemed as free, chosen from product inventory (e.g. time, items).",
                          "nullable": true
                        },
                        "product": {
                          "title": "ValidationsValidateResponseBodyRedeemablesItemResultDiscountProduct",
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Unique product ID, assigned by Voucherify.",
                              "nullable": true
                            },
                            "source_id": {
                              "type": "string",
                              "description": "Product's source ID.",
                              "nullable": true
                            },
                            "name": {
                              "type": "string",
                              "description": "Product name.",
                              "nullable": true
                            }
                          }
                        },
                        "sku": {
                          "$ref": "#/components/schemas/SimpleSkuDiscountUnit"
                        },
                        "units": {
                          "title": "ValidationsValidateResponseBodyRedeemablesItemResultDiscountUnits",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/DiscountUnitMultipleOneUnit"
                          },
                          "nullable": true
                        },
                        "percent_off": {
                          "type": "number",
                          "description": "The percent discount that the customer will receive.",
                          "nullable": true
                        },
                        "percent_off_formula": {
                          "type": "string",
                          "nullable": true
                        },
                        "amount_limit": {
                          "type": "number",
                          "description": "Upper limit allowed to be applied as a discount. Value is multiplied by 100 to precisely represent 2 decimal places. For example, a $6 maximum discount is written as 600.",
                          "nullable": true
                        },
                        "fixed_amount": {
                          "type": "number",
                          "description": "Sets a fixed value for an order total or the item price. The value is multiplied by 100 to precisely represent 2 decimal places. For example, a $10 discount is written as 1000. If the fixed amount is calculated by the formula, i.e. the `fixed_amount_formula` parameter is present in the fixed amount definition, this value becomes the **fallback value**. As a result, if the formula cannot be calculated due to missing metadata, for example, this value will be used as the fixed value.",
                          "nullable": true
                        },
                        "fixed_amount_formula": {
                          "type": "string",
                          "nullable": true
                        }
                      }
                    },
                    "bundle": {
                      "$ref": "#/components/schemas/Bundle"
                    },
                    "gift": {
                      "title": "ValidationsValidateResponseBodyRedeemablesItemResultGift",
                      "description": "Stores the amount of gift card credits to be applied.",
                      "type": "object",
                      "properties": {
                        "balance": {
                          "type": "integer",
                          "description": "Available funds at the moment of validation. The value is multiplied by 100 to represent 2 decimal places. For example `10000 cents` for `$100.00`.",
                          "nullable": true
                        },
                        "credits": {
                          "type": "integer",
                          "description": "Total number of gift card credits to be applied. The value is multiplied by 100 to represent 2 decimal places. For example `10000 cents` for `$100.00`.",
                          "nullable": true
                        }
                      },
                      "nullable": true
                    },
                    "loyalty_card": {
                      "title": "ValidationsValidateResponseBodyRedeemablesItemResultLoyaltyCard",
                      "description": "Stores the amount of loyalty card points to be applied in the redemption.",
                      "type": "object",
                      "properties": {
                        "points": {
                          "type": "integer",
                          "description": "Total number of loyalty points to be applied in the redemption.",
                          "nullable": true
                        }
                      },
                      "nullable": true
                    },
                    "error": {
                      "$ref": "#/components/schemas/Error"
                    },
                    "details": {
                      "title": "ValidationsValidateResponseBodyRedeemablesItemResultDetails",
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "metadata": {
                  "title": "ValidationsValidateResponseBodyRedeemablesItemMetadata",
                  "type": "object",
                  "description": "The metadata object stores all custom attributes in the form of key/value pairs assigned to the redeemable.",
                  "nullable": true
                },
                "categories": {
                  "title": "ValidationsValidateResponseBodyRedeemablesItemCategories",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CategoryWithStackingRulesType"
                  },
                  "nullable": true
                },
                "campaign_name": {
                  "type": "string",
                  "description": "Campaign name. Displayed only if the `options.expand` is passed with a `redeemable` value in the validation request body.",
                  "nullable": true
                },
                "campaign_id": {
                  "type": "string",
                  "description": "Unique campaign ID assigned by Voucherify. Displayed only if the `options.expand` is passed with a `redeemable` value in the validation request body.",
                  "example": "camp_pqZjuhG6Mgtp4GD0zD7b8hA3",
                  "nullable": true
                },
                "name": {
                  "type": "string",
                  "description": "Name of the promotion tier. Displayed only if the `options.expand` is passed with a `redeemable` value in the validation request body.",
                  "nullable": true
                }
              }
            },
            "nullable": true
          },
          "skipped_redeemables": {
            "title": "ValidationsValidateResponseBodySkippedRedeemables",
            "type": "array",
            "description": "Lists validation results of each skipped redeemable.",
            "items": {
              "$ref": "#/components/schemas/ValidationsRedeemableSkipped"
            },
            "nullable": true
          },
          "inapplicable_redeemables": {
            "title": "ValidationsValidateResponseBodyInapplicableRedeemables",
            "type": "array",
            "description": "Lists validation results of each inapplicable redeemable.",
            "items": {
              "$ref": "#/components/schemas/ValidationsRedeemableInapplicable"
            },
            "nullable": true
          },
          "order": {
            "$ref": "#/components/schemas/OrderCalculated"
          },
          "tracking_id": {
            "type": "string",
            "example": "track_VAVo1/z+G2GI2LPw==",
            "description": "Hashed customer source ID.",
            "nullable": true
          },
          "session": {
            "$ref": "#/components/schemas/Session"
          },
          "stacking_rules": {
            "$ref": "#/components/schemas/StackingRules"
          }
        },
        "required": [
          "stacking_rules"
        ]
      },
      "VouchersBalanceUpdateRequestBody": {
        "title": "VouchersBalanceUpdateRequestBody",
        "type": "object",
        "description": "Request body schema for `vouchers/{code}/balance`.",
        "properties": {
          "amount": {
            "type": "integer",
            "description": "The incremental amount to be added to or removed from the current balance on the gift card or loyalty card. The value is multiplied by 100 to represent 2 decimal places. For example `10000 cents` for `$100.00`. To remove balance, simply add a minus sign before the value, i.e. to remove $20, use -2000.",
            "nullable": true
          },
          "source_id": {
            "type": "string",
            "description": "The merchant's transaction ID if it is different from the Voucherify transaction ID. It is really useful in case of an integration between multiple systems. It can be a transaction ID from a CRM system, database or 3rd-party service.",
            "nullable": true
          },
          "reason": {
            "type": "string",
            "description": "Reason why the transaction occurred.",
            "nullable": true
          }
        },
        "required": []
      },
      "VouchersBalanceUpdateResponseBody": {
        "title": "VouchersBalanceUpdateResponseBody",
        "description": "Response body schema for `vouchers/{code}/balance.`",
        "type": "object",
        "required": [],
        "properties": {
          "amount": {
            "type": "integer",
            "description": "The incremental amount added (positive integer) or subtracted (negative integer) to the current balance on the gift card or loyalty card. The value is multiplied by 100 to represent 2 decimal places. For example `10000 cents` for `$100.00`.",
            "nullable": true
          },
          "total": {
            "type": "integer",
            "description": "Total income incurred over the lifespan of the gift card or loyalty card.",
            "nullable": true
          },
          "balance": {
            "type": "integer",
            "description": "The balance after adding or subtracting a specified amount. The value is multiplied by 100 to represent 2 decimal places. For example `10000 cents` for `$100.00`.",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "The type of voucher being modified.",
            "enum": [
              "gift_voucher",
              "loyalty_card"
            ],
            "nullable": true
          },
          "operation_type": {
            "type": "string",
            "description": "The type of the operation being performed.",
            "default": "MANUAL",
            "enum": [
              "MANUAL"
            ],
            "nullable": true
          },
          "object": {
            "type": "string",
            "description": "The type of the object represented by JSON. Default is `balance`.",
            "default": "balance",
            "enum": [
              "balance"
            ],
            "nullable": true
          },
          "related_object": {
            "title": "VouchersBalanceUpdateResponseBodyRelatedObject",
            "type": "object",
            "description": "Defines the resource that is being modified with the values that are returned in the balance object.",
            "required": [],
            "properties": {
              "type": {
                "type": "string",
                "description": "The object being modified, i.e. `voucher`.",
                "default": "voucher",
                "enum": [
                  "voucher"
                ],
                "nullable": true
              },
              "id": {
                "type": "string",
                "description": "Identifies the voucher that is being modified, this is the ID that was assigned by the Voucherify API.",
                "example": "v_abCdEfghI1JKLMNPqRS2Tu3vWXyza4bc",
                "nullable": true
              }
            },
            "nullable": true
          }
        }
      },
      "VouchersCreateRequestBody": {
        "title": "VouchersCreateRequestBody",
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "example": "WVPblOYX",
            "description": "Code that identifies a voucher. The pattern can use all the letters of the English alphabet, Arabic numerals, and special characters. Pass this attribute in the request body to create a distinct code. Otherwise, either use the `code_config` object to set the rules that the Voucherify API will use to create a random code, or don't pass any code and Voucherify will generate a random code.",
            "nullable": true
          },
          "campaign": {
            "type": "string",
            "example": "Gift Card Campaign",
            "description": "Identifies the voucher's parent campaign using a unique campaign name.",
            "nullable": true
          },
          "campaign_id": {
            "type": "string",
            "example": "camp_FNYR4jhqZBM9xTptxDGgeNBV",
            "description": "Identifies the voucher's parent campaign using a unique campaign ID assigned by the Voucherify API.",
            "nullable": true
          },
          "category": {
            "type": "string",
            "description": "The name of the category that this voucher belongs to. Useful when listing vouchers with the [List Vouchers](ref:list-vouchers) endpoint.",
            "nullable": true
          },
          "category_id": {
            "type": "string",
            "description": "Unique identifier assigned by Voucherify to the name of the category that this voucher belongs to. Useful when listing vouchers with the [List Vouchers](ref:list-vouchers) endpoint.",
            "example": "cat_0b6152ce12414820dc",
            "nullable": true
          },
          "start_date": {
            "type": "string",
            "example": "2021-12-01T00:00:00.000Z",
            "format": "date-time",
            "description": "Start date defines when the code starts to be active. Activation timestamp is presented in the ISO 8601 format. Voucher is *inactive before* this date.",
            "nullable": true
          },
          "expiration_date": {
            "type": "string",
            "example": "2021-12-31T00:00:00.000Z",
            "format": "date-time",
            "description": "Expiration date defines when the code expires. Expiration timestamp is presented in the ISO 8601 format.  Voucher is *inactive after* this date.",
            "nullable": true
          },
          "validity_timeframe": {
            "$ref": "#/components/schemas/ValidityTimeframe"
          },
          "validity_day_of_week": {
            "$ref": "#/components/schemas/ValidityDayOfWeek"
          },
          "validity_hours": {
            "$ref": "#/components/schemas/ValidityHours"
          },
          "active": {
            "type": "boolean",
            "description": "A flag to toggle the voucher on or off. You can disable a voucher even though it's within the active period defined by the `start_date` and `expiration_date`.  \n\n- `true` indicates an *active* voucher\n- `false` indicates an *inactive* voucher",
            "nullable": true
          },
          "additional_info": {
            "type": "string",
            "description": "An optional field to keep any extra textual information about the code such as a code description and details.",
            "nullable": true
          },
          "metadata": {
            "title": "VouchersCreateRequestBodyMetadata",
            "type": "object",
            "description": "The metadata object stores all custom attributes assigned to the code. A set of key/value pairs that you can attach to a voucher object. It can be useful for storing additional information about the voucher in a structured format.",
            "nullable": true
          },
          "validation_rules": {
            "title": "VouchersCreateRequestBodyValidationRules",
            "type": "array",
            "description": "Array containing the ID of the validation rule associated with the voucher.",
            "items": {
              "title": "VouchersCreateRequestBodyValidationRulesItem",
              "type": "string",
              "example": "[val_4j7DCRm2IS59]"
            },
            "nullable": true
          },
          "redemption": {
            "title": "VouchersCreateRequestBodyRedemption",
            "type": "object",
            "properties": {
              "quantity": {
                "type": "integer",
                "description": "How many times a voucher can be redeemed. A `null` value means unlimited.",
                "nullable": true
              }
            },
            "nullable": true
          },
          "type": {
            "type": "string",
            "enum": [
              "LOYALTY_CARD",
              "GIFT_VOUCHER",
              "DISCOUNT_VOUCHER"
            ],
            "nullable": true
          },
          "loyalty_card": {
            "$ref": "#/components/schemas/SimpleLoyaltyCard"
          },
          "code_config": {
            "$ref": "#/components/schemas/CodeConfig"
          },
          "gift": {
            "$ref": "#/components/schemas/Gift"
          },
          "discount": {
            "$ref": "#/components/schemas/Discount"
          }
        }
      },
      "VouchersCreateResponseBody": {
        "title": "VouchersCreateResponseBody",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "v_mkZN9v7vjYUadXnHrMza8W5c34fE5KiV",
            "description": "Assigned by the Voucherify API, identifies the voucher.",
            "nullable": true
          },
          "code": {
            "type": "string",
            "example": "WVPblOYX",
            "description": "A code that identifies a voucher. Pattern can use all letters of the English alphabet, Arabic numerals, and special characters.",
            "nullable": true
          },
          "campaign": {
            "type": "string",
            "example": "Gift Card Campaign",
            "description": "A unique campaign name, identifies the voucher's parent campaign.",
            "nullable": true
          },
          "campaign_id": {
            "type": "string",
            "example": "camp_FNYR4jhqZBM9xTptxDGgeNBV",
            "description": "Assigned by the Voucherify API, identifies the voucher's parent campaign.",
            "nullable": true
          },
          "category": {
            "type": "string",
            "description": "Tag defining the category that this voucher belongs to. Useful when listing vouchers using the List Vouchers endpoint.",
            "nullable": true
          },
          "category_id": {
            "type": "string",
            "description": "Unique category ID assigned by Voucherify.",
            "example": "cat_0bb343dee3cdb5ec0c",
            "nullable": true
          },
          "type": {
            "type": "string",
            "enum": [
              "GIFT_VOUCHER",
              "DISCOUNT_VOUCHER",
              "LOYALTY_CARD"
            ],
            "description": "Defines the type of the voucher. ",
            "nullable": true
          },
          "discount": {
            "$ref": "#/components/schemas/Discount"
          },
          "gift": {
            "title": "VouchersCreateResponseBodyGift",
            "type": "object",
            "description": "Object representing gift parameters. Child attributes are present only if `type` is `GIFT_VOUCHER`. Defaults to `null`.",
            "properties": {
              "amount": {
                "type": "integer",
                "example": 10000,
                "description": "Total gift card income over the lifetime of the card. The value is multiplied by 100 to represent 2 decimal places. For example `10000 cents` for `$100.00`.",
                "nullable": true
              },
              "subtracted_amount": {
                "type": "integer",
                "description": "Total amount of subtracted credits over the gift card lifetime. The value is multiplied by 100 to represent 2 decimal places. For example `10000 cents` for `$100.00`.",
                "nullable": true
              },
              "balance": {
                "type": "integer",
                "example": 500,
                "description": "Available funds. The value is multiplied by 100 to represent 2 decimal places. For example `10000 cents` for `$100.00`.",
                "nullable": true
              },
              "effect": {
                "type": "string",
                "enum": [
                  "APPLY_TO_ORDER",
                  "APPLY_TO_ITEMS"
                ],
                "description": "Defines how the credits are applied to the customer's order.",
                "nullable": true
              }
            },
            "nullable": true
          },
          "loyalty_card": {
            "title": "VouchersCreateResponseBodyLoyaltyCard",
            "type": "object",
            "description": "Object representing loyalty card parameters. Child attributes are present only if `type` is `LOYALTY_CARD`. Defaults to `null`.",
            "properties": {
              "points": {
                "type": "integer",
                "example": 7000,
                "description": "Total number of points added to the loyalty card over its lifespan.",
                "nullable": true
              },
              "balance": {
                "type": "integer",
                "example": 6970,
                "description": "Points available for reward redemption. This is calculated as follows: `balance` = `points` - `expired_points` - `subtracted_points` - `redemption.redeemed_points`.",
                "nullable": true
              },
              "next_expiration_date": {
                "type": "string",
                "format": "date",
                "example": "2023-05-30",
                "description": "The next closest date when the next set of points are due to expire.",
                "nullable": true
              },
              "next_expiration_points": {
                "type": "integer",
                "description": "The amount of points that are set to expire next.",
                "nullable": true
              },
              "pending_points": {
                "type": "integer",
                "description": "Shows the number of pending points that will be added to the loyalty card when they are activated automatically or manually.",
                "nullable": true
              },
              "expired_points": {
                "type": "integer",
                "description": "Shows the total number of expired points over the lifetime of the loyalty card.",
                "nullable": true
              },
              "subtracted_points": {
                "type": "integer",
                "description": "Shows the total number of subtracted points over the lifetime of the loyalty card.",
                "nullable": true
              }
            },
            "nullable": true
          },
          "start_date": {
            "type": "string",
            "example": "2021-12-01T00:00:00.000Z",
            "format": "date-time",
            "description": "Activation timestamp defines when the code starts to be active in ISO 8601 format. Voucher is *inactive before* this date. ",
            "nullable": true
          },
          "expiration_date": {
            "type": "string",
            "example": "2021-12-31T00:00:00.000Z",
            "format": "date-time",
            "description": "Expiration timestamp defines when the code expires in ISO 8601 format.  Voucher is *inactive after* this date.",
            "nullable": true
          },
          "validity_timeframe": {
            "$ref": "#/components/schemas/ValidityTimeframe"
          },
          "validity_day_of_week": {
            "$ref": "#/components/schemas/ValidityDayOfWeek"
          },
          "validity_hours": {
            "$ref": "#/components/schemas/ValidityHours"
          },
          "active": {
            "type": "boolean",
            "nullable": true,
            "description": "A flag to toggle the voucher on or off. You can disable a voucher even though it's within the active period defined by the `start_date` and `expiration_date`.  \n\n- `true` indicates an *active* voucher\n- `false` indicates an *inactive* voucher"
          },
          "additional_info": {
            "type": "string",
            "description": "An optional field to keep any extra textual information about the code such as a code description and details.",
            "nullable": true
          },
          "metadata": {
            "title": "VouchersCreateResponseBodyMetadata",
            "type": "object",
            "description": "The metadata object stores all custom attributes assigned to the code. A set of key/value pairs that you can attach to a voucher object. It can be useful for storing additional information about the voucher in a structured format.",
            "nullable": true
          },
          "assets": {
            "$ref": "#/components/schemas/VoucherAssets"
          },
          "is_referral_code": {
            "type": "boolean",
            "nullable": true,
            "description": "Flag indicating whether this voucher is a referral code; `true` for campaign type `REFERRAL_PROGRAM`."
          },
          "created_at": {
            "type": "string",
            "example": "2021-12-22T10:13:06.487Z",
            "description": "Timestamp representing the date and time when the voucher was created. The value is shown in the ISO 8601 format.",
            "format": "date-time",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "example": "2021-12-22T10:14:45.316Z",
            "format": "date-time",
            "description": "Timestamp representing the date and time when the voucher was last updated in ISO 8601 format.",
            "nullable": true
          },
          "holder_id": {
            "type": "string",
            "example": "cust_eWgXlBBiY6THFRJwX45Iakv4",
            "description": "Unique customer identifier of the redeemable holder. It equals to the customer ID assigned by Voucherify.",
            "nullable": true
          },
          "referrer_id": {
            "type": "string",
            "description": "Unique identifier of the referring person.",
            "example": "cust_Vzck5i8U3OhcEUFY6MKhN9Rv",
            "nullable": true
          },
          "object": {
            "type": "string",
            "description": "The type of the object represented by JSON. Default is `voucher`.",
            "default": "voucher",
            "nullable": true
          },
          "publish": {
            "title": "VouchersCreateResponseBodyPublish",
            "type": "object",
            "description": "Stores a summary of publication events: an event counter and endpoint to return details of each event. Publication is an assignment of a code to a customer, e.g. through a distribution.",
            "properties": {
              "object": {
                "type": "string",
                "default": "list",
                "description": "The type of the object represented is by default `list`. To get this list, you need to make a call to the endpoint returned in the `url` attribute.",
                "nullable": true
              },
              "count": {
                "type": "integer",
                "example": 0,
                "description": "Publication events counter.",
                "nullable": true
              },
              "url": {
                "type": "string",
                "example": "/v1/vouchers/WVPblOYX/publications?page=1&limit=10",
                "description": "The endpoint where this list of publications can be accessed using a **GET** method. `/v1/vouchers/{voucher_code}/publications`",
                "nullable": true
              }
            },
            "nullable": true
          },
          "redemption": {
            "title": "VouchersCreateResponseBodyRedemption",
            "type": "object",
            "description": "Stores a summary of redemptions that have been applied to the voucher.",
            "properties": {
              "quantity": {
                "type": "integer",
                "description": "How many times a voucher can be redeemed. A `null` value means unlimited.",
                "nullable": true
              },
              "redeemed_quantity": {
                "type": "integer",
                "example": 1,
                "description": "How many times a voucher has already been redeemed.",
                "nullable": true
              },
              "redeemed_points": {
                "type": "integer",
                "example": 100000,
                "description": "Total loyalty points redeemed.",
                "nullable": true
              },
              "object": {
                "type": "string",
                "default": "list",
                "description": "The type of the object represented is by default `list`. To get this list, you need to make a call to the endpoint returned in the url attribute.",
                "nullable": true
              },
              "url": {
                "type": "string",
                "example": "/v1/vouchers/WVPblOYX/redemptions?page=1&limit=10",
                "description": "The endpoint where this list of redemptions can be accessed using a **GET** method. `/v1/vouchers/{voucher_code}/redemptions`",
                "nullable": true
              }
            },
            "nullable": true
          },
          "categories": {
            "title": "VouchersCreateResponseBodyCategories",
            "type": "array",
            "description": "Contains details about the category.",
            "items": {
              "$ref": "#/components/schemas/Category"
            },
            "nullable": true
          },
          "validation_rules_assignments": {
            "$ref": "#/components/schemas/ValidationRulesAssignmentsList"
          }
        },
        "description": "Response body schema for **POST** `v1/vouchers` and `/vouchers/{code}`"
      },
      "VouchersCreateWithSpecificCodeRequestBody": {
        "title": "VouchersCreateWithSpecificCodeRequestBody",
        "type": "object",
        "properties": {
          "campaign": {
            "type": "string",
            "example": "Gift Card Campaign",
            "description": "Identifies the voucher's parent campaign using a unique campaign name.",
            "nullable": true
          },
          "campaign_id": {
            "type": "string",
            "example": "camp_FNYR4jhqZBM9xTptxDGgeNBV",
            "description": "Identifies the voucher's parent campaign using a unique campaign ID assigned by the Voucherify API.",
            "nullable": true
          },
          "category": {
            "type": "string",
            "description": "The name of the category that this voucher belongs to. Useful when listing vouchers with the [List Vouchers](ref:list-vouchers) endpoint.",
            "nullable": true
          },
          "category_id": {
            "type": "string",
            "description": "Unique identifier assigned by Voucherify to the name of the category that this voucher belongs to. Useful when listing vouchers with the [List Vouchers](ref:list-vouchers) endpoint.",
            "example": "cat_0b6152ce12414820dc",
            "nullable": true
          },
          "start_date": {
            "type": "string",
            "example": "2021-12-01T00:00:00.000Z",
            "format": "date-time",
            "description": "Start date defines when the code starts to be active. Activation timestamp is presented in the ISO 8601 format. Voucher is *inactive before* this date.",
            "nullable": true
          },
          "expiration_date": {
            "type": "string",
            "example": "2021-12-31T00:00:00.000Z",
            "format": "date-time",
            "description": "Expiration date defines when the code expires. Expiration timestamp is presented in the ISO 8601 format.  Voucher is *inactive after* this date.",
            "nullable": true
          },
          "validity_timeframe": {
            "$ref": "#/components/schemas/ValidityTimeframe"
          },
          "validity_day_of_week": {
            "$ref": "#/components/schemas/ValidityDayOfWeek"
          },
          "validity_hours": {
            "$ref": "#/components/schemas/ValidityHours"
          },
          "active": {
            "type": "boolean",
            "description": "A flag to toggle the voucher on or off. You can disable a voucher even though it's within the active period defined by the `start_date` and `expiration_date`.  \n\n- `true` indicates an *active* voucher\n- `false` indicates an *inactive* voucher",
            "nullable": true
          },
          "additional_info": {
            "type": "string",
            "description": "An optional field to keep any extra textual information about the code such as a code description and details.",
            "nullable": true
          },
          "metadata": {
            "title": "VouchersCreateWithSpecificCodeRequestBodyMetadata",
            "type": "object",
            "description": "The metadata object stores all custom attributes assigned to the code. A set of key/value pairs that you can attach to a voucher object. It can be useful for storing additional information about the voucher in a structured format.",
            "nullable": true
          },
          "validation_rules": {
            "title": "VouchersCreateWithSpecificCodeRequestBodyValidationRules",
            "type": "array",
            "description": "Array containing the ID of the validation rule associated with the voucher.",
            "items": {
              "title": "VouchersCreateWithSpecificCodeRequestBodyValidationRulesItem",
              "type": "string",
              "example": "[val_4j7DCRm2IS59]"
            },
            "nullable": true
          },
          "redemption": {
            "title": "VouchersCreateWithSpecificCodeRequestBodyRedemption",
            "type": "object",
            "properties": {
              "quantity": {
                "type": "integer",
                "description": "How many times a voucher can be redeemed. A `null` value means unlimited.",
                "nullable": true
              }
            },
            "nullable": true
          },
          "type": {
            "type": "string",
            "enum": [
              "LOYALTY_CARD",
              "GIFT_VOUCHER",
              "DISCOUNT_VOUCHER"
            ],
            "nullable": true
          },
          "loyalty_card": {
            "$ref": "#/components/schemas/SimpleLoyaltyCard"
          },
          "gift": {
            "$ref": "#/components/schemas/Gift"
          },
          "discount": {
            "$ref": "#/components/schemas/Discount"
          }
        }
      },
      "VouchersDisableResponseBody": {
        "title": "VouchersDisableResponseBody",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "v_mkZN9v7vjYUadXnHrMza8W5c34fE5KiV",
            "description": "Assigned by the Voucherify API, identifies the voucher.",
            "nullable": true
          },
          "code": {
            "type": "string",
            "example": "WVPblOYX",
            "description": "A code that identifies a voucher. Pattern can use all letters of the English alphabet, Arabic numerals, and special characters.",
            "nullable": true
          },
          "campaign": {
            "type": "string",
            "example": "Gift Card Campaign",
            "description": "A unique campaign name, identifies the voucher's parent campaign.",
            "nullable": true
          },
          "campaign_id": {
            "type": "string",
            "example": "camp_FNYR4jhqZBM9xTptxDGgeNBV",
            "description": "Assigned by the Voucherify API, identifies the voucher's parent campaign.",
            "nullable": true
          },
          "category": {
            "type": "string",
            "description": "Tag defining the category that this voucher belongs to. Useful when listing vouchers using the List Vouchers endpoint.",
            "nullable": true
          },
          "category_id": {
            "type": "string",
            "description": "Unique category ID assigned by Voucherify.",
            "example": "cat_0bb343dee3cdb5ec0c",
            "nullable": true
          },
          "type": {
            "type": "string",
            "enum": [
              "GIFT_VOUCHER",
              "DISCOUNT_VOUCHER",
              "LOYALTY_CARD"
            ],
            "description": "Defines the type of the voucher. ",
            "nullable": true
          },
          "discount": {
            "$ref": "#/components/schemas/Discount"
          },
          "gift": {
            "title": "VouchersDisableResponseBodyGift",
            "type": "object",
            "description": "Object representing gift parameters. Child attributes are present only if `type` is `GIFT_VOUCHER`. Defaults to `null`.",
            "properties": {
              "amount": {
                "type": "integer",
                "example": 10000,
                "description": "Total gift card income over the lifetime of the card. The value is multiplied by 100 to represent 2 decimal places. For example `10000 cents` for `$100.00`.",
                "nullable": true
              },
              "subtracted_amount": {
                "type": "integer",
                "description": "Total amount of subtracted credits over the gift card lifetime. The value is multiplied by 100 to represent 2 decimal places. For example `10000 cents` for `$100.00`.",
                "nullable": true
              },
              "balance": {
                "type": "integer",
                "example": 500,
                "description": "Available funds. The value is multiplied by 100 to represent 2 decimal places. For example `10000 cents` for `$100.00`.",
                "nullable": true
              },
              "effect": {
                "type": "string",
                "enum": [
                  "APPLY_TO_ORDER",
                  "APPLY_TO_ITEMS"
                ],
                "description": "Defines how the credits are applied to the customer's order.",
                "nullable": true
              }
            },
            "nullable": true
          },
          "loyalty_card": {
            "title": "VouchersDisableResponseBodyLoyaltyCard",
            "type": "object",
            "description": "Object representing loyalty card parameters. Child attributes are present only if `type` is `LOYALTY_CARD`. Defaults to `null`.",
            "properties": {
              "points": {
                "type": "integer",
                "example": 7000,
                "description": "Total number of points added to the loyalty card over its lifespan.",
                "nullable": true
              },
              "balance": {
                "type": "integer",
                "example": 6970,
                "description": "Points available for reward redemption. This is calculated as follows: `balance` = `points` - `expired_points` - `subtracted_points` - `redemption.redeemed_points`.",
                "nullable": true
              },
              "next_expiration_date": {
                "type": "string",
                "format": "date",
                "example": "2023-05-30",
                "description": "The next closest date when the next set of points are due to expire.",
                "nullable": true
              },
              "next_expiration_points": {
                "type": "integer",
                "description": "The amount of points that are set to expire next.",
                "nullable": true
              },
              "pending_points": {
                "type": "integer",
                "description": "Shows the number of pending points that will be added to the loyalty card when they are activated automatically or manually.",
                "nullable": true
              },
              "expired_points": {
                "type": "integer",
                "description": "Shows the total number of expired points over the lifetime of the loyalty card.",
                "nullable": true
              },
              "subtracted_points": {
                "type": "integer",
                "description": "Shows the total number of subtracted points over the lifetime of the loyalty card.",
                "nullable": true
              }
            },
            "nullable": true
          },
          "start_date": {
            "type": "string",
            "example": "2021-12-01T00:00:00.000Z",
            "format": "date-time",
            "description": "Activation timestamp defines when the code starts to be active in ISO 8601 format. Voucher is *inactive before* this date. ",
            "nullable": true
          },
          "expiration_date": {
            "type": "string",
            "example": "2021-12-31T00:00:00.000Z",
            "format": "date-time",
            "description": "Expiration timestamp defines when the code expires in ISO 8601 format.  Voucher is *inactive after* this date.",
            "nullable": true
          },
          "validity_timeframe": {
            "$ref": "#/components/schemas/ValidityTimeframe"
          },
          "validity_day_of_week": {
            "$ref": "#/components/schemas/ValidityDayOfWeek"
          },
          "validity_hours": {
            "$ref": "#/components/schemas/ValidityHours"
          },
          "active": {
            "type": "boolean",
            "nullable": true,
            "description": "A flag to toggle the voucher on or off. You can disable a voucher even though it's within the active period defined by the `start_date` and `expiration_date`.  \n\n- `true` indicates an *active* voucher\n- `false` indicates an *inactive* voucher"
          },
          "additional_info": {
            "type": "string",
            "description": "An optional field to keep any extra textual information about the code such as a code description and details.",
            "nullable": true
          },
          "metadata": {
            "title": "VouchersDisableResponseBodyMetadata",
            "type": "object",
            "description": "The metadata object stores all custom attributes assigned to the code. A set of key/value pairs that you can attach to a voucher object. It can be useful for storing additional information about the voucher in a structured format.",
            "nullable": true
          },
          "assets": {
            "$ref": "#/components/schemas/VoucherAssets"
          },
          "is_referral_code": {
            "type": "boolean",
            "nullable": true,
            "description": "Flag indicating whether this voucher is a referral code; `true` for campaign type `REFERRAL_PROGRAM`."
          },
          "created_at": {
            "type": "string",
            "example": "2021-12-22T10:13:06.487Z",
            "description": "Timestamp representing the date and time when the voucher was created. The value is shown in the ISO 8601 format.",
            "format": "date-time",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "example": "2021-12-22T10:14:45.316Z",
            "format": "date-time",
            "description": "Timestamp representing the date and time when the voucher was last updated in ISO 8601 format.",
            "nullable": true
          },
          "holder_id": {
            "type": "string",
            "example": "cust_eWgXlBBiY6THFRJwX45Iakv4",
            "description": "Unique customer identifier of the redeemable holder. It equals to the customer ID assigned by Voucherify.",
            "nullable": true
          },
          "referrer_id": {
            "type": "string",
            "description": "Unique identifier of the referring person.",
            "example": "cust_Vzck5i8U3OhcEUFY6MKhN9Rv",
            "nullable": true
          },
          "object": {
            "type": "string",
            "description": "The type of the object represented by JSON. Default is `voucher`.",
            "default": "voucher",
            "nullable": true
          },
          "publish": {
            "title": "VouchersDisableResponseBodyPublish",
            "type": "object",
            "description": "Stores a summary of publication events: an event counter and endpoint to return details of each event. Publication is an assignment of a code to a customer, e.g. through a distribution.",
            "properties": {
              "object": {
                "type": "string",
                "default": "list",
                "description": "The type of the object represented is by default `list`. To get this list, you need to make a call to the endpoint returned in the `url` attribute.",
                "nullable": true
              },
              "count": {
                "type": "integer",
                "example": 0,
                "description": "Publication events counter.",
                "nullable": true
              },
              "url": {
                "type": "string",
                "example": "/v1/vouchers/WVPblOYX/publications?page=1&limit=10",
                "description": "The endpoint where this list of publications can be accessed using a **GET** method. `/v1/vouchers/{voucher_code}/publications`",
                "nullable": true
              }
            },
            "nullable": true
          },
          "redemption": {
            "title": "VouchersDisableResponseBodyRedemption",
            "type": "object",
            "description": "Stores a summary of redemptions that have been applied to the voucher.",
            "properties": {
              "quantity": {
                "type": "integer",
                "description": "How many times a voucher can be redeemed. A `null` value means unlimited.",
                "nullable": true
              },
              "redeemed_quantity": {
                "type": "integer",
                "example": 1,
                "description": "How many times a voucher has already been redeemed.",
                "nullable": true
              },
              "redeemed_points": {
                "type": "integer",
                "example": 100000,
                "description": "Total loyalty points redeemed.",
                "nullable": true
              },
              "object": {
                "type": "string",
                "default": "list",
                "description": "The type of the object represented is by default `list`. To get this list, you need to make a call to the endpoint returned in the url attribute.",
                "nullable": true
              },
              "url": {
                "type": "string",
                "example": "/v1/vouchers/WVPblOYX/redemptions?page=1&limit=10",
                "description": "The endpoint where this list of redemptions can be accessed using a **GET** method. `/v1/vouchers/{voucher_code}/redemptions`",
                "nullable": true
              }
            },
            "nullable": true
          },
          "categories": {
            "title": "VouchersDisableResponseBodyCategories",
            "type": "array",
            "description": "Contains details about the category.",
            "items": {
              "$ref": "#/components/schemas/Category"
            },
            "nullable": true
          },
          "validation_rules_assignments": {
            "$ref": "#/components/schemas/ValidationRulesAssignmentsList"
          }
        },
        "description": "Response body schema for **POST** `v1/vouchers/{code}/disable`."
      },
      "VouchersEnableResponseBody": {
        "title": "VouchersEnableResponseBody",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "v_mkZN9v7vjYUadXnHrMza8W5c34fE5KiV",
            "description": "Assigned by the Voucherify API, identifies the voucher.",
            "nullable": true
          },
          "code": {
            "type": "string",
            "example": "WVPblOYX",
            "description": "A code that identifies a voucher. Pattern can use all letters of the English alphabet, Arabic numerals, and special characters.",
            "nullable": true
          },
          "campaign": {
            "type": "string",
            "example": "Gift Card Campaign",
            "description": "A unique campaign name, identifies the voucher's parent campaign.",
            "nullable": true
          },
          "campaign_id": {
            "type": "string",
            "example": "camp_FNYR4jhqZBM9xTptxDGgeNBV",
            "description": "Assigned by the Voucherify API, identifies the voucher's parent campaign.",
            "nullable": true
          },
          "category": {
            "type": "string",
            "description": "Tag defining the category that this voucher belongs to. Useful when listing vouchers using the List Vouchers endpoint.",
            "nullable": true
          },
          "category_id": {
            "type": "string",
            "description": "Unique category ID assigned by Voucherify.",
            "example": "cat_0bb343dee3cdb5ec0c",
            "nullable": true
          },
          "type": {
            "type": "string",
            "enum": [
              "GIFT_VOUCHER",
              "DISCOUNT_VOUCHER",
              "LOYALTY_CARD"
            ],
            "description": "Defines the type of the voucher. ",
            "nullable": true
          },
          "discount": {
            "$ref": "#/components/schemas/Discount"
          },
          "gift": {
            "title": "VouchersEnableResponseBodyGift",
            "type": "object",
            "description": "Object representing gift parameters. Child attributes are present only if `type` is `GIFT_VOUCHER`. Defaults to `null`.",
            "properties": {
              "amount": {
                "type": "integer",
                "example": 10000,
                "description": "Total gift card income over the lifetime of the card. The value is multiplied by 100 to represent 2 decimal places. For example `10000 cents` for `$100.00`.",
                "nullable": true
              },
              "subtracted_amount": {
                "type": "integer",
                "description": "Total amount of subtracted credits over the gift card lifetime. The value is multiplied by 100 to represent 2 decimal places. For example `10000 cents` for `$100.00`.",
                "nullable": true
              },
              "balance": {
                "type": "integer",
                "example": 500,
                "description": "Available funds. The value is multiplied by 100 to represent 2 decimal places. For example `10000 cents` for `$100.00`.",
                "nullable": true
              },
              "effect": {
                "type": "string",
                "enum": [
                  "APPLY_TO_ORDER",
                  "APPLY_TO_ITEMS"
                ],
                "description": "Defines how the credits are applied to the customer's order.",
                "nullable": true
              }
            },
            "nullable": true
          },
          "loyalty_card": {
            "title": "VouchersEnableResponseBodyLoyaltyCard",
            "type": "object",
            "description": "Object representing loyalty card parameters. Child attributes are present only if `type` is `LOYALTY_CARD`. Defaults to `null`.",
            "properties": {
              "points": {
                "type": "integer",
                "example": 7000,
                "description": "Total number of points added to the loyalty card over its lifespan.",
                "nullable": true
              },
              "balance": {
                "type": "integer",
                "example": 6970,
                "description": "Points available for reward redemption. This is calculated as follows: `balance` = `points` - `expired_points` - `subtracted_points` - `redemption.redeemed_points`.",
                "nullable": true
              },
              "next_expiration_date": {
                "type": "string",
                "format": "date",
                "example": "2023-05-30",
                "description": "The next closest date when the next set of points are due to expire.",
                "nullable": true
              },
              "next_expiration_points": {
                "type": "integer",
                "description": "The amount of points that are set to expire next.",
                "nullable": true
              },
              "pending_points": {
                "type": "integer",
                "description": "Shows the number of pending points that will be added to the loyalty card when they are activated automatically or manually.",
                "nullable": true
              },
              "expired_points": {
                "type": "integer",
                "description": "Shows the total number of expired points over the lifetime of the loyalty card.",
                "nullable": true
              },
              "subtracted_points": {
                "type": "integer",
                "description": "Shows the total number of subtracted points over the lifetime of the loyalty card.",
                "nullable": true
              }
            },
            "nullable": true
          },
          "start_date": {
            "type": "string",
            "example": "2021-12-01T00:00:00.000Z",
            "format": "date-time",
            "description": "Activation timestamp defines when the code starts to be active in ISO 8601 format. Voucher is *inactive before* this date. ",
            "nullable": true
          },
          "expiration_date": {
            "type": "string",
            "example": "2021-12-31T00:00:00.000Z",
            "format": "date-time",
            "description": "Expiration timestamp defines when the code expires in ISO 8601 format.  Voucher is *inactive after* this date.",
            "nullable": true
          },
          "validity_timeframe": {
            "$ref": "#/components/schemas/ValidityTimeframe"
          },
          "validity_day_of_week": {
            "$ref": "#/components/schemas/ValidityDayOfWeek"
          },
          "validity_hours": {
            "$ref": "#/components/schemas/ValidityHours"
          },
          "active": {
            "type": "boolean",
            "nullable": true,
            "description": "A flag to toggle the voucher on or off. You can disable a voucher even though it's within the active period defined by the `start_date` and `expiration_date`.  \n\n- `true` indicates an *active* voucher\n- `false` indicates an *inactive* voucher"
          },
          "additional_info": {
            "type": "string",
            "description": "An optional field to keep any extra textual information about the code such as a code description and details.",
            "nullable": true
          },
          "metadata": {
            "title": "VouchersEnableResponseBodyMetadata",
            "type": "object",
            "description": "The metadata object stores all custom attributes assigned to the code. A set of key/value pairs that you can attach to a voucher object. It can be useful for storing additional information about the voucher in a structured format.",
            "nullable": true
          },
          "assets": {
            "$ref": "#/components/schemas/VoucherAssets"
          },
          "is_referral_code": {
            "type": "boolean",
            "nullable": true,
            "description": "Flag indicating whether this voucher is a referral code; `true` for campaign type `REFERRAL_PROGRAM`."
          },
          "created_at": {
            "type": "string",
            "example": "2021-12-22T10:13:06.487Z",
            "description": "Timestamp representing the date and time when the voucher was created. The value is shown in the ISO 8601 format.",
            "format": "date-time",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "example": "2021-12-22T10:14:45.316Z",
            "format": "date-time",
            "description": "Timestamp representing the date and time when the voucher was last updated in ISO 8601 format.",
            "nullable": true
          },
          "holder_id": {
            "type": "string",
            "example": "cust_eWgXlBBiY6THFRJwX45Iakv4",
            "description": "Unique customer identifier of the redeemable holder. It equals to the customer ID assigned by Voucherify.",
            "nullable": true
          },
          "referrer_id": {
            "type": "string",
            "description": "Unique identifier of the referring person.",
            "example": "cust_Vzck5i8U3OhcEUFY6MKhN9Rv",
            "nullable": true
          },
          "object": {
            "type": "string",
            "description": "The type of the object represented by JSON. Default is `voucher`.",
            "default": "voucher",
            "nullable": true
          },
          "publish": {
            "title": "VouchersEnableResponseBodyPublish",
            "type": "object",
            "description": "Stores a summary of publication events: an event counter and endpoint to return details of each event. Publication is an assignment of a code to a customer, e.g. through a distribution.",
            "properties": {
              "object": {
                "type": "string",
                "default": "list",
                "description": "The type of the object represented is by default `list`. To get this list, you need to make a call to the endpoint returned in the `url` attribute.",
                "nullable": true
              },
              "count": {
                "type": "integer",
                "example": 0,
                "description": "Publication events counter.",
                "nullable": true
              },
              "url": {
                "type": "string",
                "example": "/v1/vouchers/WVPblOYX/publications?page=1&limit=10",
                "description": "The endpoint where this list of publications can be accessed using a **GET** method. `/v1/vouchers/{voucher_code}/publications`",
                "nullable": true
              }
            },
            "nullable": true
          },
          "redemption": {
            "title": "VouchersEnableResponseBodyRedemption",
            "type": "object",
            "description": "Stores a summary of redemptions that have been applied to the voucher.",
            "properties": {
              "quantity": {
                "type": "integer",
                "description": "How many times a voucher can be redeemed. A `null` value means unlimited.",
                "nullable": true
              },
              "redeemed_quantity": {
                "type": "integer",
                "example": 1,
                "description": "How many times a voucher has already been redeemed.",
                "nullable": true
              },
              "redeemed_points": {
                "type": "integer",
                "example": 100000,
                "description": "Total loyalty points redeemed.",
                "nullable": true
              },
              "object": {
                "type": "string",
                "default": "list",
                "description": "The type of the object represented is by default `list`. To get this list, you need to make a call to the endpoint returned in the url attribute.",
                "nullable": true
              },
              "url": {
                "type": "string",
                "example": "/v1/vouchers/WVPblOYX/redemptions?page=1&limit=10",
                "description": "The endpoint where this list of redemptions can be accessed using a **GET** method. `/v1/vouchers/{voucher_code}/redemptions`",
                "nullable": true
              }
            },
            "nullable": true
          },
          "categories": {
            "title": "VouchersEnableResponseBodyCategories",
            "type": "array",
            "description": "Contains details about the category.",
            "items": {
              "$ref": "#/components/schemas/Category"
            },
            "nullable": true
          },
          "validation_rules_assignments": {
            "$ref": "#/components/schemas/ValidationRulesAssignmentsList"
          }
        },
        "description": "Response body schema for **POST** `v1/vouchers/{code}/enable`."
      },
      "VouchersGetResponseBody": {
        "title": "VouchersGetResponseBody",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "v_mkZN9v7vjYUadXnHrMza8W5c34fE5KiV",
            "description": "Assigned by the Voucherify API, identifies the voucher.",
            "nullable": true
          },
          "code": {
            "type": "string",
            "example": "WVPblOYX",
            "description": "A code that identifies a voucher. Pattern can use all letters of the English alphabet, Arabic numerals, and special characters.",
            "nullable": true
          },
          "campaign": {
            "type": "string",
            "example": "Gift Card Campaign",
            "description": "A unique campaign name, identifies the voucher's parent campaign.",
            "nullable": true
          },
          "campaign_id": {
            "type": "string",
            "example": "camp_FNYR4jhqZBM9xTptxDGgeNBV",
            "description": "Assigned by the Voucherify API, identifies the voucher's parent campaign.",
            "nullable": true
          },
          "category": {
            "type": "string",
            "description": "Tag defining the category that this voucher belongs to. Useful when listing vouchers using the List Vouchers endpoint.",
            "nullable": true
          },
          "category_id": {
            "type": "string",
            "description": "Unique category ID assigned by Voucherify.",
            "example": "cat_0bb343dee3cdb5ec0c",
            "nullable": true
          },
          "type": {
            "type": "string",
            "enum": [
              "GIFT_VOUCHER",
              "DISCOUNT_VOUCHER",
              "LOYALTY_CARD"
            ],
            "description": "Defines the type of the voucher. ",
            "nullable": true
          },
          "discount": {
            "$ref": "#/components/schemas/Discount"
          },
          "gift": {
            "title": "VouchersGetResponseBodyGift",
            "type": "object",
            "description": "Object representing gift parameters. Child attributes are present only if `type` is `GIFT_VOUCHER`. Defaults to `null`.",
            "properties": {
              "amount": {
                "type": "integer",
                "example": 10000,
                "description": "Total gift card income over the lifetime of the card. The value is multiplied by 100 to represent 2 decimal places. For example `10000 cents` for `$100.00`.",
                "nullable": true
              },
              "subtracted_amount": {
                "type": "integer",
                "description": "Total amount of subtracted credits over the gift card lifetime. The value is multiplied by 100 to represent 2 decimal places. For example `10000 cents` for `$100.00`.",
                "nullable": true
              },
              "balance": {
                "type": "integer",
                "example": 500,
                "description": "Available funds. The value is multiplied by 100 to represent 2 decimal places. For example `10000 cents` for `$100.00`.",
                "nullable": true
              },
              "effect": {
                "type": "string",
                "enum": [
                  "APPLY_TO_ORDER",
                  "APPLY_TO_ITEMS"
                ],
                "description": "Defines how the credits are applied to the customer's order.",
                "nullable": true
              }
            },
            "nullable": true
          },
          "loyalty_card": {
            "title": "VouchersGetResponseBodyLoyaltyCard",
            "type": "object",
            "description": "Object representing loyalty card parameters. Child attributes are present only if `type` is `LOYALTY_CARD`. Defaults to `null`.",
            "properties": {
              "points": {
                "type": "integer",
                "example": 7000,
                "description": "Total number of points added to the loyalty card over its lifespan.",
                "nullable": true
              },
              "balance": {
                "type": "integer",
                "example": 6970,
                "description": "Points available for reward redemption. This is calculated as follows: `balance` = `points` - `expired_points` - `subtracted_points` - `redemption.redeemed_points`.",
                "nullable": true
              },
              "next_expiration_date": {
                "type": "string",
                "format": "date",
                "example": "2023-05-30",
                "description": "The next closest date when the next set of points are due to expire.",
                "nullable": true
              },
              "next_expiration_points": {
                "type": "integer",
                "description": "The amount of points that are set to expire next.",
                "nullable": true
              },
              "pending_points": {
                "type": "integer",
                "description": "Shows the number of pending points that will be added to the loyalty card when they are activated automatically or manually.",
                "nullable": true
              },
              "expired_points": {
                "type": "integer",
                "description": "Shows the total number of expired points over the lifetime of the loyalty card.",
                "nullable": true
              },
              "subtracted_points": {
                "type": "integer",
                "description": "Shows the total number of subtracted points over the lifetime of the loyalty card.",
                "nullable": true
              }
            },
            "nullable": true
          },
          "start_date": {
            "type": "string",
            "example": "2021-12-01T00:00:00.000Z",
            "format": "date-time",
            "description": "Activation timestamp defines when the code starts to be active in ISO 8601 format. Voucher is *inactive before* this date. ",
            "nullable": true
          },
          "expiration_date": {
            "type": "string",
            "example": "2021-12-31T00:00:00.000Z",
            "format": "date-time",
            "description": "Expiration timestamp defines when the code expires in ISO 8601 format.  Voucher is *inactive after* this date.",
            "nullable": true
          },
          "validity_timeframe": {
            "$ref": "#/components/schemas/ValidityTimeframe"
          },
          "validity_day_of_week": {
            "$ref": "#/components/schemas/ValidityDayOfWeek"
          },
          "validity_hours": {
            "$ref": "#/components/schemas/ValidityHours"
          },
          "active": {
            "type": "boolean",
            "nullable": true,
            "description": "A flag to toggle the voucher on or off. You can disable a voucher even though it's within the active period defined by the `start_date` and `expiration_date`.  \n\n- `true` indicates an *active* voucher\n- `false` indicates an *inactive* voucher"
          },
          "additional_info": {
            "type": "string",
            "description": "An optional field to keep any extra textual information about the code such as a code description and details.",
            "nullable": true
          },
          "metadata": {
            "title": "VouchersGetResponseBodyMetadata",
            "type": "object",
            "description": "The metadata object stores all custom attributes assigned to the code. A set of key/value pairs that you can attach to a voucher object. It can be useful for storing additional information about the voucher in a structured format.",
            "nullable": true
          },
          "assets": {
            "$ref": "#/components/schemas/VoucherAssets"
          },
          "is_referral_code": {
            "type": "boolean",
            "nullable": true,
            "description": "Flag indicating whether this voucher is a referral code; `true` for campaign type `REFERRAL_PROGRAM`."
          },
          "created_at": {
            "type": "string",
            "example": "2021-12-22T10:13:06.487Z",
            "description": "Timestamp representing the date and time when the voucher was created. The value is shown in the ISO 8601 format.",
            "format": "date-time",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "example": "2021-12-22T10:14:45.316Z",
            "format": "date-time",
            "description": "Timestamp representing the date and time when the voucher was last updated in ISO 8601 format.",
            "nullable": true
          },
          "holder_id": {
            "type": "string",
            "example": "cust_eWgXlBBiY6THFRJwX45Iakv4",
            "description": "Unique customer identifier of the redeemable holder. It equals to the customer ID assigned by Voucherify.",
            "nullable": true
          },
          "referrer_id": {
            "type": "string",
            "description": "Unique identifier of the referring person.",
            "example": "cust_Vzck5i8U3OhcEUFY6MKhN9Rv",
            "nullable": true
          },
          "object": {
            "type": "string",
            "description": "The type of the object represented by JSON. Default is `voucher`.",
            "default": "voucher",
            "nullable": true
          },
          "publish": {
            "title": "VouchersGetResponseBodyPublish",
            "type": "object",
            "description": "Stores a summary of publication events: an event counter and endpoint to return details of each event. Publication is an assignment of a code to a customer, e.g. through a distribution.",
            "properties": {
              "object": {
                "type": "string",
                "default": "list",
                "description": "The type of the object represented is by default `list`. To get this list, you need to make a call to the endpoint returned in the `url` attribute.",
                "nullable": true
              },
              "count": {
                "type": "integer",
                "example": 0,
                "description": "Publication events counter.",
                "nullable": true
              },
              "url": {
                "type": "string",
                "example": "/v1/vouchers/WVPblOYX/publications?page=1&limit=10",
                "description": "The endpoint where this list of publications can be accessed using a **GET** method. `/v1/vouchers/{voucher_code}/publications`",
                "nullable": true
              }
            },
            "nullable": true
          },
          "redemption": {
            "title": "VouchersGetResponseBodyRedemption",
            "type": "object",
            "description": "Stores a summary of redemptions that have been applied to the voucher.",
            "properties": {
              "quantity": {
                "type": "integer",
                "description": "How many times a voucher can be redeemed. A `null` value means unlimited.",
                "nullable": true
              },
              "redeemed_quantity": {
                "type": "integer",
                "example": 1,
                "description": "How many times a voucher has already been redeemed.",
                "nullable": true
              },
              "redeemed_points": {
                "type": "integer",
                "example": 100000,
                "description": "Total loyalty points redeemed.",
                "nullable": true
              },
              "object": {
                "type": "string",
                "default": "list",
                "description": "The type of the object represented is by default `list`. To get this list, you need to make a call to the endpoint returned in the url attribute.",
                "nullable": true
              },
              "url": {
                "type": "string",
                "example": "/v1/vouchers/WVPblOYX/redemptions?page=1&limit=10",
                "description": "The endpoint where this list of redemptions can be accessed using a **GET** method. `/v1/vouchers/{voucher_code}/redemptions`",
                "nullable": true
              }
            },
            "nullable": true
          },
          "categories": {
            "title": "VouchersGetResponseBodyCategories",
            "type": "array",
            "description": "Contains details about the category.",
            "items": {
              "$ref": "#/components/schemas/Category"
            },
            "nullable": true
          },
          "validation_rules_assignments": {
            "$ref": "#/components/schemas/ValidationRulesAssignmentsList"
          }
        },
        "description": "Response body schema for **GET** `v1/vouchers/{code}`."
      },
      "VouchersImportCSVRequestBody": {
        "title": "VouchersImportCSVRequestBody",
        "type": "object",
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "description": "File path.",
            "nullable": true
          },
          "webhooks_enable": {
            "type": "boolean",
            "description": "Triggers a webhook sendout for new and updated vouchers if the voucher created and voucher updated webhooks are configured in Project settings.",
            "nullable": true
          }
        },
        "description": "Request body schema for **POST** `v1/vouchers/importCSV`."
      },
      "VouchersImportCreateRequestBody": {
        "title": "VouchersImportCreateRequestBody",
        "type": "array",
        "description": "Request body schema for **POST** `v1/vouchers/import`.",
        "items": {
          "$ref": "#/components/schemas/VouchersImportCreateItemRequestBody"
        }
      },
      "VouchersImportCreateResponseBody": {
        "title": "VouchersImportCreateResponseBody",
        "type": "object",
        "properties": {
          "async_action_id": {
            "type": "string",
            "example": "aa_0a875d56c805df6601",
            "description": "The ID of the scheduled asynchronous action.",
            "nullable": true
          }
        },
        "required": [],
        "description": "Response body schema for **POST** `v1/vouchers/import`."
      },
      "VouchersImportCsvCreateResponseBody": {
        "title": "VouchersImportCsvCreateResponseBody",
        "type": "object",
        "properties": {
          "async_action_id": {
            "type": "string",
            "example": "aa_0a875d56c805df6601",
            "description": "The ID of the scheduled asynchronous action.",
            "nullable": true
          }
        },
        "required": [],
        "description": "Response body schema for **POST** `v1/vouchers/importCSV`."
      },
      "VouchersListResponseBody": {
        "title": "VouchersListResponseBody",
        "type": "object",
        "description": "Response body schema for **GET** `v1/vouchers`.",
        "properties": {
          "object": {
            "type": "string",
            "default": "list",
            "enum": [
              "list"
            ],
            "description": "The type of the object represented by JSON.",
            "nullable": true
          },
          "data_ref": {
            "type": "string",
            "default": "vouchers",
            "enum": [
              "vouchers"
            ],
            "description": "Identifies the name of the attribute that contains the array of voucher objects.",
            "nullable": true
          },
          "vouchers": {
            "title": "VouchersListResponseBodyVouchers",
            "type": "array",
            "description": "A dictionary that contains an array of  vouchers. Each entry in the array is a separate voucher object.",
            "items": {
              "$ref": "#/components/schemas/VoucherWithCategories"
            },
            "nullable": true
          },
          "total": {
            "type": "integer",
            "example": 20,
            "description": "Returns how many vouchers in the project meet the limits defined by the query parameter definitions.",
            "nullable": true
          }
        }
      },
      "VouchersMetadataUpdateInBulkRequestBody": {
        "title": "VouchersMetadataUpdateInBulkRequestBody",
        "type": "object",
        "description": "Request body schema for `vouchers/metadata/async`.",
        "x-examples": {
          "example-1": {
            "$ref": "#/components/examples/req_vouchers_metadata_1"
          },
          "example-2": {
            "$ref": "#/components/examples/req_vouchers_metadata_2"
          }
        },
        "properties": {
          "codes": {
            "title": "VouchersMetadataUpdateInBulkRequestBodyCodes",
            "type": "array",
            "description": "An array of voucher codes.",
            "items": {
              "title": "VouchersMetadataUpdateInBulkRequestBodyCodesItem",
              "type": "string"
            },
            "nullable": true
          },
          "metadata": {
            "title": "VouchersMetadataUpdateInBulkRequestBodyMetadata",
            "type": "object",
            "description": "The metadata object stores all custom attributes assigned to the code. A set of key/value pairs that you can attach to a voucher object. It can be useful for storing additional information about the voucher in a structured format.",
            "example": {
              "lang": "en",
              "authorized_internally": true
            },
            "nullable": true
          }
        },
        "required": []
      },
      "VouchersMetadataUpdateInBulkResponseBody": {
        "title": "VouchersMetadataUpdateInBulkResponseBody",
        "type": "object",
        "properties": {
          "async_action_id": {
            "type": "string",
            "example": "aa_0a875d56c805df6601",
            "description": "The ID of the scheduled asynchronous action.",
            "nullable": true
          }
        },
        "required": [],
        "description": "Response body schema for **POST** `v1/vouchers/metadata/async`."
      },
      "VouchersRedemptionGetResponseBody": {
        "title": "VouchersRedemptionGetResponseBody",
        "type": "object",
        "description": "Response body schema for **GET** `v1/vouchers/{code}/redemption`.",
        "properties": {
          "quantity": {
            "type": "integer",
            "nullable": true,
            "description": "The maximum number of times a voucher can be redeemed."
          },
          "redeemed_quantity": {
            "type": "integer",
            "description": "The number of times the voucher was redeemed successfully.",
            "nullable": true
          },
          "object": {
            "type": "string",
            "default": "list",
            "description": "The type of the object represented by JSON. This object stores information about redemptions in a dictionary.",
            "nullable": true
          },
          "url": {
            "type": "string",
            "example": "/v1/vouchers/PROMO-CODE2/redemptions?page=1&limit=10",
            "description": "URL",
            "nullable": true
          },
          "data_ref": {
            "type": "string",
            "default": "redemption_entries",
            "description": "Identifies the name of the attribute that contains the array of `redemption_entries`.",
            "nullable": true
          },
          "total": {
            "type": "integer",
            "description": "Total number of redemption objects.",
            "nullable": true
          },
          "redemption_entries": {
            "description": "Contains the array of successful and failed redemption objects.",
            "items": {
              "$ref": "#/components/schemas/RedemptionEntry"
            }
          }
        },
        "required": [
          "redemption_entries"
        ]
      },
      "VouchersTransactionsExportCreateRequestBody": {
        "title": "VouchersTransactionsExportCreateRequestBody",
        "description": "Request body schema for **POST** `v1/vouchers/transactions/export`.",
        "type": "object",
        "properties": {
          "parameters": {
            "$ref": "#/components/schemas/VoucherTransactionsExportParameters"
          }
        }
      },
      "VouchersTransactionsExportCreateResponseBody": {
        "title": "VouchersTransactionsExportCreateResponseBody",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique export ID.",
            "example": "exp_FFfp9o7daWuJqJCKp5xqqli4",
            "nullable": true
          },
          "object": {
            "type": "string",
            "default": "export",
            "description": "The type of object being represented. This object stores information about the `export`.",
            "enum": [
              "export"
            ],
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "example": "2022-04-28T11:23:20.922Z",
            "description": "Timestamp representing the date and time when the export was scheduled in ISO 8601 format.",
            "format": "date-time",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "Status of the export. Informs you whether the export has already been completed, i.e. indicates whether the file containing the exported data has been generated.",
            "default": "SCHEDULED",
            "enum": [
              "SCHEDULED"
            ],
            "nullable": true
          },
          "channel": {
            "type": "string",
            "description": "The channel through which the export was triggered.",
            "default": "API",
            "nullable": true
          },
          "exported_object": {
            "type": "string",
            "description": "The type of exported object.",
            "default": "voucher_transactions",
            "enum": [
              "voucher_transactions"
            ],
            "nullable": true
          },
          "parameters": {
            "$ref": "#/components/schemas/VoucherTransactionsFilters"
          },
          "result": {
            "title": "VouchersTransactionsExportCreateResponseBodyResult",
            "type": "object",
            "nullable": true,
            "description": "Contains the URL of the CSV file.",
            "required": [],
            "properties": {
              "url": {
                "type": "string",
                "description": "URL of the CSV file location. It contains the `token` used for authorization in the <!-- [Download export](OpenAPI.json/paths/~1exports~1{export_Id}/get) -->[Download export](ref:download-export) method.",
                "nullable": true
              }
            }
          },
          "user_id": {
            "type": "string",
            "nullable": true,
            "description": "Identifies the specific user who initiated the export through the Voucherify Dashboard; returned when the `channel` value is `WEBSITE`.",
            "example": "user_g24UoRO3Caxu7FCT4n5tpYEa3zUG0FrH"
          }
        },
        "required": [
          "parameters"
        ],
        "description": "Response body schema for **POST** `v1/vouchers/{code}/transactions/export`."
      },
      "VouchersTransactionsListResponseBody": {
        "title": "VouchersTransactionsListResponseBody",
        "type": "object",
        "description": "Response body schema for **GET** `v1/vouchers/{code}/transactions`.",
        "properties": {
          "object": {
            "type": "string",
            "default": "list",
            "description": "The type of the object represented by JSON.",
            "enum": [
              "list"
            ],
            "nullable": true
          },
          "data_ref": {
            "type": "string",
            "default": "data",
            "description": "Identifies the name of the attribute that contains the array of transaction objects.",
            "enum": [
              "data"
            ],
            "nullable": true
          },
          "data": {
            "title": "VouchersTransactionsListResponseBodyData",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VoucherTransaction"
            },
            "description": "A dictionary that contains an array of transactions. Each entry in the array is a separate transaction object.",
            "nullable": true
          },
          "has_more": {
            "type": "boolean",
            "description": "As query results are always limited (by the limit parameter), the `has_more` flag indicates if there are more records for given filter parameters. This lets you know if you can run another request (with a different paging or a different start date filter) to get more records returned in the results.",
            "nullable": true
          },
          "more_starting_after": {
            "type": "string",
            "description": "Returns an ID that can be used to return another page of results. Use the transaction ID in the `starting_after_id` query parameter to display another page of the results starting after the transaction with that ID.",
            "nullable": true
          }
        },
        "required": []
      },
      "VouchersUpdateInBulkRequestBody": {
        "title": "VouchersUpdateInBulkRequestBody",
        "type": "array",
        "description": "Request body schema for **POST** `v1/vouchers/bulk/async`.",
        "items": {
          "$ref": "#/components/schemas/VouchersUpdateInBulkItemRequestBody"
        }
      },
      "VouchersUpdateInBulkResponseBody": {
        "title": "VouchersUpdateInBulkResponseBody",
        "type": "object",
        "properties": {
          "async_action_id": {
            "type": "string",
            "example": "aa_0a875d56c805df6601",
            "description": "The ID of the scheduled asynchronous action.",
            "nullable": true
          }
        },
        "required": [],
        "description": "Response body schema for **POST** `v1/vouchers/bulk/async`."
      },
      "VouchersUpdateRequestBody": {
        "title": "VouchersUpdateRequestBody",
        "type": "object",
        "properties": {
          "category": {
            "type": "string",
            "description": "The name of the category that this voucher belongs to. Useful when listing vouchers with the [List Vouchers](ref:list-vouchers) endpoint.",
            "nullable": true
          },
          "category_id": {
            "type": "string",
            "description": "Unique identifier assigned by Voucherify to the name of the category that this voucher belongs to. Useful when listing vouchers with the [List Vouchers](ref:list-vouchers) endpoint.",
            "example": "cat_0bb81a481615a37b5e",
            "nullable": true
          },
          "start_date": {
            "type": "string",
            "example": "2021-12-01T00:00:00.000Z",
            "format": "date-time",
            "description": "Start date defines when the code starts to be active. Activation timestamp is presented in the ISO 8601 format. Voucher is *inactive before* this date.",
            "nullable": true
          },
          "expiration_date": {
            "type": "string",
            "example": "2021-12-31T00:00:00.000Z",
            "format": "date-time",
            "description": "Expiration date defines when the code expires. Expiration timestamp is presented in the ISO 8601 format.  Voucher is *inactive after* this date.",
            "nullable": true
          },
          "validity_timeframe": {
            "$ref": "#/components/schemas/ValidityTimeframe"
          },
          "validity_day_of_week": {
            "$ref": "#/components/schemas/ValidityDayOfWeek"
          },
          "validity_hours": {
            "$ref": "#/components/schemas/ValidityHours"
          },
          "active": {
            "type": "boolean",
            "description": "A flag to toggle the voucher on or off. You can disable a voucher even though it's within the active period defined by the `start_date` and `expiration_date`.  \n\n- `true` indicates an *active* voucher\n- `false` indicates an *inactive* voucher",
            "nullable": true
          },
          "additional_info": {
            "type": "string",
            "description": "An optional field to keep any extra textual information about the code such as a code description and details.",
            "nullable": true
          },
          "metadata": {
            "title": "VouchersUpdateRequestBodyMetadata",
            "type": "object",
            "description": "The metadata object stores all custom attributes assigned to the code. A set of key/value pairs that you can attach to a voucher object. It can be useful for storing additional information about the voucher in a structured format.",
            "nullable": true
          },
          "type": {
            "type": "string",
            "enum": [
              "LOYALTY_CARD",
              "GIFT_VOUCHER",
              "DISCOUNT_VOUCHER"
            ],
            "nullable": true
          },
          "loyalty_card": {
            "$ref": "#/components/schemas/SimpleLoyaltyCard"
          },
          "gift": {
            "$ref": "#/components/schemas/Gift"
          },
          "discount": {
            "$ref": "#/components/schemas/Discount"
          }
        }
      },
      "VouchersUpdateResponseBody": {
        "title": "VouchersUpdateResponseBody",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "v_mkZN9v7vjYUadXnHrMza8W5c34fE5KiV",
            "description": "Assigned by the Voucherify API, identifies the voucher.",
            "nullable": true
          },
          "code": {
            "type": "string",
            "example": "WVPblOYX",
            "description": "A code that identifies a voucher. Pattern can use all letters of the English alphabet, Arabic numerals, and special characters.",
            "nullable": true
          },
          "campaign": {
            "type": "string",
            "example": "Gift Card Campaign",
            "description": "A unique campaign name, identifies the voucher's parent campaign.",
            "nullable": true
          },
          "campaign_id": {
            "type": "string",
            "example": "camp_FNYR4jhqZBM9xTptxDGgeNBV",
            "description": "Assigned by the Voucherify API, identifies the voucher's parent campaign.",
            "nullable": true
          },
          "category": {
            "type": "string",
            "description": "Tag defining the category that this voucher belongs to. Useful when listing vouchers using the List Vouchers endpoint.",
            "nullable": true
          },
          "category_id": {
            "type": "string",
            "description": "Unique category ID assigned by Voucherify.",
            "example": "cat_0bb343dee3cdb5ec0c",
            "nullable": true
          },
          "type": {
            "type": "string",
            "enum": [
              "GIFT_VOUCHER",
              "DISCOUNT_VOUCHER",
              "LOYALTY_CARD"
            ],
            "description": "Defines the type of the voucher. ",
            "nullable": true
          },
          "discount": {
            "$ref": "#/components/schemas/Discount"
          },
          "gift": {
            "title": "VouchersUpdateResponseBodyGift",
            "type": "object",
            "description": "Object representing gift parameters. Child attributes are present only if `type` is `GIFT_VOUCHER`. Defaults to `null`.",
            "properties": {
              "amount": {
                "type": "integer",
                "example": 10000,
                "description": "Total gift card income over the lifetime of the card. The value is multiplied by 100 to represent 2 decimal places. For example `10000 cents` for `$100.00`.",
                "nullable": true
              },
              "subtracted_amount": {
                "type": "integer",
                "description": "Total amount of subtracted credits over the gift card lifetime. The value is multiplied by 100 to represent 2 decimal places. For example `10000 cents` for `$100.00`.",
                "nullable": true
              },
              "balance": {
                "type": "integer",
                "example": 500,
                "description": "Available funds. The value is multiplied by 100 to represent 2 decimal places. For example `10000 cents` for `$100.00`.",
                "nullable": true
              },
              "effect": {
                "type": "string",
                "enum": [
                  "APPLY_TO_ORDER",
                  "APPLY_TO_ITEMS"
                ],
                "description": "Defines how the credits are applied to the customer's order.",
                "nullable": true
              }
            },
            "nullable": true
          },
          "loyalty_card": {
            "title": "VouchersUpdateResponseBodyLoyaltyCard",
            "type": "object",
            "description": "Object representing loyalty card parameters. Child attributes are present only if `type` is `LOYALTY_CARD`. Defaults to `null`.",
            "properties": {
              "points": {
                "type": "integer",
                "example": 7000,
                "description": "Total number of points added to the loyalty card over its lifespan.",
                "nullable": true
              },
              "balance": {
                "type": "integer",
                "example": 6970,
                "description": "Points available for reward redemption. This is calculated as follows: `balance` = `points` - `expired_points` - `subtracted_points` - `redemption.redeemed_points`.",
                "nullable": true
              },
              "next_expiration_date": {
                "type": "string",
                "format": "date",
                "example": "2023-05-30",
                "description": "The next closest date when the next set of points are due to expire.",
                "nullable": true
              },
              "next_expiration_points": {
                "type": "integer",
                "description": "The amount of points that are set to expire next.",
                "nullable": true
              },
              "pending_points": {
                "type": "integer",
                "description": "Shows the number of pending points that will be added to the loyalty card when they are activated automatically or manually.",
                "nullable": true
              },
              "expired_points": {
                "type": "integer",
                "description": "Shows the total number of expired points over the lifetime of the loyalty card.",
                "nullable": true
              },
              "subtracted_points": {
                "type": "integer",
                "description": "Shows the total number of subtracted points over the lifetime of the loyalty card.",
                "nullable": true
              }
            },
            "nullable": true
          },
          "start_date": {
            "type": "string",
            "example": "2021-12-01T00:00:00.000Z",
            "format": "date-time",
            "description": "Activation timestamp defines when the code starts to be active in ISO 8601 format. Voucher is *inactive before* this date. ",
            "nullable": true
          },
          "expiration_date": {
            "type": "string",
            "example": "2021-12-31T00:00:00.000Z",
            "format": "date-time",
            "description": "Expiration timestamp defines when the code expires in ISO 8601 format.  Voucher is *inactive after* this date.",
            "nullable": true
          },
          "validity_timeframe": {
            "$ref": "#/components/schemas/ValidityTimeframe"
          },
          "validity_day_of_week": {
            "$ref": "#/components/schemas/ValidityDayOfWeek"
          },
          "validity_hours": {
            "$ref": "#/components/schemas/ValidityHours"
          },
          "active": {
            "type": "boolean",
            "nullable": true,
            "description": "A flag to toggle the voucher on or off. You can disable a voucher even though it's within the active period defined by the `start_date` and `expiration_date`.  \n\n- `true` indicates an *active* voucher\n- `false` indicates an *inactive* voucher"
          },
          "additional_info": {
            "type": "string",
            "description": "An optional field to keep any extra textual information about the code such as a code description and details.",
            "nullable": true
          },
          "metadata": {
            "title": "VouchersUpdateResponseBodyMetadata",
            "type": "object",
            "description": "The metadata object stores all custom attributes assigned to the code. A set of key/value pairs that you can attach to a voucher object. It can be useful for storing additional information about the voucher in a structured format.",
            "nullable": true
          },
          "assets": {
            "$ref": "#/components/schemas/VoucherAssets"
          },
          "is_referral_code": {
            "type": "boolean",
            "nullable": true,
            "description": "Flag indicating whether this voucher is a referral code; `true` for campaign type `REFERRAL_PROGRAM`."
          },
          "created_at": {
            "type": "string",
            "example": "2021-12-22T10:13:06.487Z",
            "description": "Timestamp representing the date and time when the voucher was created. The value is shown in the ISO 8601 format.",
            "format": "date-time",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "example": "2021-12-22T10:14:45.316Z",
            "format": "date-time",
            "description": "Timestamp representing the date and time when the voucher was last updated in ISO 8601 format.",
            "nullable": true
          },
          "holder_id": {
            "type": "string",
            "example": "cust_eWgXlBBiY6THFRJwX45Iakv4",
            "description": "Unique customer identifier of the redeemable holder. It equals to the customer ID assigned by Voucherify.",
            "nullable": true
          },
          "referrer_id": {
            "type": "string",
            "description": "Unique identifier of the referring person.",
            "example": "cust_Vzck5i8U3OhcEUFY6MKhN9Rv",
            "nullable": true
          },
          "object": {
            "type": "string",
            "description": "The type of the object represented by JSON. Default is `voucher`.",
            "default": "voucher",
            "nullable": true
          },
          "publish": {
            "title": "VouchersUpdateResponseBodyPublish",
            "type": "object",
            "description": "Stores a summary of publication events: an event counter and endpoint to return details of each event. Publication is an assignment of a code to a customer, e.g. through a distribution.",
            "properties": {
              "object": {
                "type": "string",
                "default": "list",
                "description": "The type of the object represented is by default `list`. To get this list, you need to make a call to the endpoint returned in the `url` attribute.",
                "nullable": true
              },
              "count": {
                "type": "integer",
                "example": 0,
                "description": "Publication events counter.",
                "nullable": true
              },
              "url": {
                "type": "string",
                "example": "/v1/vouchers/WVPblOYX/publications?page=1&limit=10",
                "description": "The endpoint where this list of publications can be accessed using a **GET** method. `/v1/vouchers/{voucher_code}/publications`",
                "nullable": true
              }
            },
            "nullable": true
          },
          "redemption": {
            "title": "VouchersUpdateResponseBodyRedemption",
            "type": "object",
            "description": "Stores a summary of redemptions that have been applied to the voucher.",
            "properties": {
              "quantity": {
                "type": "integer",
                "description": "How many times a voucher can be redeemed. A `null` value means unlimited.",
                "nullable": true
              },
              "redeemed_quantity": {
                "type": "integer",
                "example": 1,
                "description": "How many times a voucher has already been redeemed.",
                "nullable": true
              },
              "redeemed_points": {
                "type": "integer",
                "example": 100000,
                "description": "Total loyalty points redeemed.",
                "nullable": true
              },
              "object": {
                "type": "string",
                "default": "list",
                "description": "The type of the object represented is by default `list`. To get this list, you need to make a call to the endpoint returned in the url attribute.",
                "nullable": true
              },
              "url": {
                "type": "string",
                "example": "/v1/vouchers/WVPblOYX/redemptions?page=1&limit=10",
                "description": "The endpoint where this list of redemptions can be accessed using a **GET** method. `/v1/vouchers/{voucher_code}/redemptions`",
                "nullable": true
              }
            },
            "nullable": true
          },
          "categories": {
            "title": "VouchersUpdateResponseBodyCategories",
            "type": "array",
            "description": "Contains details about the category.",
            "items": {
              "$ref": "#/components/schemas/Category"
            },
            "nullable": true
          },
          "validation_rules_assignments": {
            "$ref": "#/components/schemas/ValidationRulesAssignmentsList"
          }
        },
        "description": "Response body schema for **PUT** `v1/vouchers/{code}`."
      },
      "ParameterCreatedBeforeAfter": {
        "title": "ParameterCreatedBeforeAfter",
        "type": "object",
        "properties": {
          "before": {
            "type": "string",
            "example": "2021-12-22T10:13:06.487Z",
            "description": "Timestamp representing the date and time before the voucher was created. The value is shown in the ISO 8601 format.",
            "format": "date-time",
            "nullable": true
          },
          "after": {
            "type": "string",
            "example": "2021-12-22T10:13:06.487Z",
            "description": "Timestamp representing the date and time after the voucher was created. The value is shown in the ISO 8601 format.",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "ParameterUpdatedBeforeAfter": {
        "title": "ParameterUpdatedBeforeAfter",
        "type": "object",
        "properties": {
          "before": {
            "type": "string",
            "example": "2021-12-22T10:13:06.487Z",
            "description": "Timestamp representing the date and time before the voucher was updated. The value is shown in the ISO 8601 format.",
            "format": "date-time",
            "nullable": true
          },
          "after": {
            "type": "string",
            "example": "2021-12-22T10:13:06.487Z",
            "description": "Timestamp representing the date and time after the voucher was updated. The value is shown in the ISO 8601 format.",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "ParameterIds": {
        "title": "ParameterIds",
        "type": "array",
        "items": {
          "title": "ParameterIdsItem",
          "type": "string"
        }
      },
      "ParameterOrder": {
        "title": "ParameterOrder",
        "type": "string",
        "enum": [
          "created_at",
          "-created_at",
          "updated_at",
          "-updated_at",
          "type",
          "-type",
          "code",
          "-code",
          "campaign",
          "-campaign",
          "category",
          "-category"
        ]
      },
      "ParameterOrigin": {
        "title": "ParameterOrigin",
        "type": "string",
        "format": "hostname"
      },
      "AccessSettings": {
        "title": "AccessSettings",
        "type": "object",
        "description": "Assigns or unassigns an area or store to the campaign.\n\n**NOTE**: this object can be sent if the Areas and Stores enterprise feature is enabled. Contact [Voucherify Sales](https://www.voucherify.io/contact-sales) to learn more.",
        "properties": {
          "assign": {
            "title": "AccessSettingsAssign",
            "type": "object",
            "description": "Assigns the campaign to an area or a store. Provide the area and/or store IDs in the respective arrays. If a campaign changes assignments between areas or stores, unassign it from the area. For example, if a campaign is assigned to Area-01, but it must be now assigned to Store-01 within this area, you have to unassign the campaign from Area-01 and assign to Store-01 only.\n\nIf you want to assign the campaign to stores only, you do not have to send the area ID.",
            "properties": {
              "areas_ids": {
                "title": "AccessSettingsAssignAreasIds",
                "type": "array",
                "description": "List all area IDs to which the campaign will be assigned.",
                "items": {
                  "title": "AccessSettingsAssignAreasIdsItem",
                  "type": "string"
                },
                "nullable": true
              },
              "area_stores_ids": {
                "title": "AccessSettingsAssignAreaStoresIds",
                "type": "array",
                "description": "List all store IDs to which the campaign will be assigned.",
                "items": {
                  "title": "AccessSettingsAssignAreaStoresIdsItem",
                  "type": "string"
                },
                "nullable": true
              },
              "area_all_stores_ids": {
                "title": "AccessSettingsAssignAreaAllStoresIds",
                "type": "array",
                "description": "List all area IDs where the campaign is assigned to all stores in the area. This assignment is not equal to the assignment to all `area_stores_ids` listed separately.",
                "items": {
                  "title": "AccessSettingsAssignAreaAllStoresIdsItem",
                  "type": "string"
                },
                "nullable": true
              }
            },
            "nullable": true
          },
          "unassign": {
            "title": "AccessSettingsUnassign",
            "type": "object",
            "description": "Unassigns the campaign from an area or a store. Provide the area and/or store IDs in the respective arrays. If a campaign changes assignments between areas or stores, unassign it first. For example, if a campaign is assigned to Area-01, but it must be now assigned to Store-01 within this area, you have to unassign the campaign from Area-01 and assigned to Store-01 only.\n\nIf you want to assign the campaign to stores only, you do not have to send the area ID.",
            "properties": {
              "areas_ids": {
                "title": "AccessSettingsUnassignAreasIds",
                "type": "array",
                "description": "List all area IDs from which the campaign will be unassigned.",
                "items": {
                  "title": "AccessSettingsUnassignAreasIdsItem",
                  "type": "string"
                },
                "nullable": true
              },
              "area_stores_ids": {
                "title": "AccessSettingsUnassignAreaStoresIds",
                "type": "array",
                "description": "List all store IDs from which the campaign will be unassigned.",
                "items": {
                  "title": "AccessSettingsUnassignAreaStoresIdsItem",
                  "type": "string"
                },
                "nullable": true
              },
              "area_all_stores_ids": {
                "title": "AccessSettingsUnassignAreaAllStoresIds",
                "type": "array",
                "description": "List all area IDs where the campaign will be unassigned from all stores in the area. This unassignment is not equal to the unassignment from all `area_stores_ids` listed separately.",
                "items": {
                  "title": "AccessSettingsUnassignAreaAllStoresIdsItem",
                  "type": "string"
                },
                "nullable": true
              }
            },
            "nullable": true
          }
        }
      },
      "AccessSettingsCampaignAssignmentsList": {
        "title": "AccessSettingsCampaignAssignmentsList",
        "type": "object",
        "description": "Lists all assignments of the campaign to areas and stores. For [GET List Campaigns](ref:list-campaigns), this is returned if the `expand=access_settings_assignments` query parameter is passed in the request. This object is not returned for the [GET Campaign summary endpoint](ref:get-campaign-summary).\n\n**NOTE**: This object is returned only if the Areas and Stores enterprise feature is enabled. Contact [Voucherify Sales](https://www.voucherify.io/contact-sales) to learn more.",
        "properties": {
          "object": {
            "type": "string",
            "default": "list",
            "description": "The type of the object represented by JSON. Default is `list`. This object stores information about campaign assignments to areas and stores",
            "enum": [
              "list"
            ],
            "nullable": true
          },
          "data_ref": {
            "type": "string",
            "default": "data",
            "description": "Identifies the name of the attribute that contains the array of campaign assignments.",
            "enum": [
              "data"
            ],
            "nullable": true
          },
          "data": {
            "title": "AccessSettingsCampaignAssignmentsListData",
            "type": "array",
            "description": "Contains an array of campaign assignments.",
            "items": {
              "$ref": "#/components/schemas/AreaStoreCampaignAssignment"
            },
            "nullable": true
          },
          "total": {
            "type": "integer",
            "description": "Total number of areas and stores to which the campaign is assigned.",
            "minimum": 0,
            "nullable": true
          }
        },
        "required": []
      },
      "ApplicableTo": {
        "title": "ApplicableTo",
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "enum": [
              "product",
              "sku",
              "products_collection"
            ],
            "description": "This object stores information about the resource to which the discount is applicable.",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "Unique product collection, product, or SKU identifier assigned by Voucherify.",
            "nullable": true
          },
          "source_id": {
            "type": "string",
            "description": "The source identifier from your inventory system.",
            "nullable": true
          },
          "product_id": {
            "type": "string",
            "description": "Parent product's unique ID assigned by Voucherify.",
            "nullable": true
          },
          "product_source_id": {
            "type": "string",
            "description": "Parent product's source ID from your inventory system.",
            "nullable": true
          },
          "price": {
            "type": "number",
            "description": "New fixed price of an item. Value is multiplied by 100 to precisely represent 2 decimal places. For example, a $10 price is written as 1000. In case of the fixed price being calculated by the formula, i.e. the price_formula parameter is present in the fixed price definition, this value becomes the fallback value. Such that in a case where the formula cannot be calculated due to missing metadata, for example, this value will be used as the fixed price.",
            "nullable": true
          },
          "price_formula": {
            "type": "number",
            "description": "Formula used to calculate the discounted price of an item.",
            "nullable": true
          },
          "effect": {
            "$ref": "#/components/schemas/ApplicableToEffect"
          },
          "quantity_limit": {
            "type": "integer",
            "description": "The maximum number of units allowed to be discounted per order line item.",
            "nullable": true
          },
          "aggregated_quantity_limit": {
            "type": "integer",
            "description": "The maximum number of units allowed to be discounted combined across all matched order line items.",
            "nullable": true
          },
          "amount_limit": {
            "type": "integer",
            "description": "Upper limit allowed to be applied as a discount per order line item. Value is multiplied by 100 to precisely represent 2 decimal places. For example, a $6 maximum discount is written as 600.",
            "nullable": true
          },
          "aggregated_amount_limit": {
            "type": "integer",
            "description": "Maximum discount amount per order. Value is multiplied by 100 to precisely represent 2 decimal places. For example, a $6 maximum discount on the entire order is written as 600. This value is definable for the following discount effects:\n- `APPLY_TO_ITEMS` (each item subtotal is discounted equally)\n- `APPLY_TO_ITEMS_BY_QUANTITY` (each unit of matched products has the same discount value)",
            "nullable": true
          },
          "order_item_indices": {
            "title": "ApplicableToOrderItemIndices",
            "type": "array",
            "description": "Lists which order lines are (not) covered by the discount. The order in the array is determined by the sequence of applied discounts, while the numbers correspond to the order lines sent in the `order` object in the request. The first order line is assigned `0`, the second order line is assigned `1`, and so on.",
            "items": {
              "title": "ApplicableToOrderItemIndicesItem",
              "type": "integer"
            },
            "nullable": true
          },
          "order_item_units": {
            "title": "ApplicableToOrderItemUnits",
            "type": "array",
            "description": "Lists which units within order lines are covered by the discount. The order line items are listed according to sequence of applied discounts while the `index` corresponds to the order line sent in the `order` object in the request.",
            "items": {
              "title": "ApplicableToOrderItemUnitsItem",
              "type": "object",
              "properties": {
                "index": {
                  "type": "integer",
                  "description": "Number assigned to the order line item in accordance with the order sent in the request.",
                  "minimum": 0
                },
                "units": {
                  "title": "ApplicableToOrderItemUnitsItemUnits",
                  "type": "array",
                  "description": "Numbers of units in the order line covered by the discount; e.g. `2, 5, 8` for 10 units with the setting `\"skip_initially\": 1`, `\"repeat\": 3`. The counting of units starts from `1`. The maximum quantity of all handled units is 1000. If the quantity of all order items exceeds 1000, this array is not returned, but `units_limit_exceeded: true`. However, the discount is calculated properly for all relevant units.",
                  "items": {
                    "title": "ApplicableToOrderItemUnitsItemUnitsItem",
                    "type": "integer"
                  }
                },
                "units_limit_exceeded": {
                  "type": "boolean",
                  "description": "Returned as `true` only when the sum total of `quantity` of all order items exceeds 1000."
                }
              }
            },
            "nullable": true
          },
          "repeat": {
            "type": "integer",
            "description": "Determines the recurrence of the discount, e.g. `\"repeat\": 3` means that the discount is applied to every third item.",
            "nullable": true
          },
          "skip_initially": {
            "type": "integer",
            "description": "Determines how many items are skipped before the discount is applied.",
            "nullable": true
          },
          "target": {
            "type": "string",
            "description": "Determines to which kinds of objects the discount is applicable. `ITEM` includes products and SKUs. `UNIT` means particular units within an order line.",
            "nullable": true
          },
          "strict": {
            "type": "boolean",
            "nullable": true
          }
        },
        "required": [
          "effect"
        ]
      },
      "ApplicableToResultList": {
        "title": "ApplicableToResultList",
        "type": "object",
        "properties": {
          "data": {
            "title": "ApplicableToResultListData",
            "type": "array",
            "description": "Contains array of items to which the discount can apply.",
            "items": {
              "$ref": "#/components/schemas/ApplicableTo"
            },
            "nullable": true
          },
          "total": {
            "type": "integer",
            "minimum": 0,
            "description": "Total number of objects defining included products, SKUs, or product collections.",
            "nullable": true
          },
          "object": {
            "type": "string",
            "default": "list",
            "enum": [
              "list"
            ],
            "description": "The type of the object represented by JSON.",
            "nullable": true
          },
          "data_ref": {
            "type": "string",
            "description": "The type of the object represented by JSON.",
            "default": "data",
            "enum": [
              "data"
            ],
            "nullable": true
          }
        },
        "required": []
      },
      "ApplicationDetails": {
        "title": "ApplicationDetails",
        "type": "array",
        "description": "Array containing details about the items that are replaced and the items that are replacements for discounts with the `REPLACE_ITEMS` effect.",
        "items": {
          "title": "ApplicationDetailsItem",
          "type": "object",
          "description": "Object representing item replacement.",
          "properties": {
            "source_index": {
              "type": "integer",
              "description": "Index number of the source item that is replaced. The enumeration starts from `0`, which represents the first item in the request, e.g., if the replaced item is passed as the second in the request, `source_index` equals `3`.",
              "minimum": 0
            },
            "source_applied_quantity": {
              "type": "integer",
              "description": "Number of source units that are replaced.",
              "maximum": -1
            },
            "source_applied_quantity_amount": {
              "type": "integer",
              "description": "Amount equal to the price of the units that are replaced. Determines the change of the amount of the source item quantity.",
              "maximum": 0
            },
            "target_index": {
              "type": "integer",
              "description": "Index number of the target item that is a replacement of the source item. The enumeration continues the values for the order items, e.g. if there are three items in the request, `target_index` equals `3`, as enumeration starts from `0`."
            },
            "target_applied_quantity": {
              "type": "integer",
              "description": "Number of added target units that are replacements."
            },
            "target_applied_quantity_amount": {
              "type": "integer",
              "description": "Amount equal to the price of the units that are replacements. Determines the change in the amount of the target item quantity."
            },
            "target_applied_discount_amount": {
              "type": "integer",
              "description": "Discount amount applied to the target item with regard to the replacement. Equals the `target_applied_quantity_amount` minus `source_applied_quantity_amount`."
            }
          }
        }
      },
      "AsyncActionBase": {
        "title": "AsyncActionBase",
        "type": "object",
        "description": "This is an object representing an asynchronous action.",
        "properties": {
          "id": {
            "type": "string",
            "example": "aa_0adad13d6f057f088e",
            "description": "Async action unique ID.",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "Type of async action.",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "Status of the async action. Informs you whether the async action has already been completed.",
            "enum": [
              "DONE",
              "ENQUEUED",
              "FAILED",
              "IN_PROGRESS"
            ],
            "nullable": true
          },
          "operation_status": {
            "type": "string",
            "description": "Status of async action processing. Informs about the async action status, whether it failed, succeeded, or the status is unknown.",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "description": "Timestamp representing the date and time when the async action was scheduled in ISO 8601 format.",
            "example": "2022-06-23T11:21:45.578Z",
            "format": "date-time",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "example": "2022-06-23T11:21:46.795Z",
            "description": "Timestamp representing the date and time when the async action was updated. The value is shown in the ISO 8601 format.",
            "format": "date-time",
            "nullable": true
          },
          "request_id": {
            "type": "string",
            "example": "v-0b45cee140c3c9b5ca",
            "description": "Unique request ID.",
            "nullable": true
          },
          "processing_time": {
            "type": "integer",
            "example": 1217,
            "description": "The length of time it took to process the request in milliseconds.",
            "nullable": true
          },
          "progress": {
            "type": "integer",
            "description": "% progress to completion of the asynchronous action.",
            "minimum": 0,
            "maximum": 100,
            "nullable": true
          },
          "object": {
            "type": "string",
            "default": "async_action",
            "description": "The type of the object represented by JSON. This object stores information about the `async_action`.",
            "enum": [
              "async_action"
            ],
            "nullable": true
          }
        }
      },
      "Bundle": {
        "title": "Bundle",
        "type": "object",
        "description": "Determines how the bundle conditions are met by the customer's order items. The items in the order meet the bundle condition in the following way: SKU, then product, then collection.",
        "properties": {
          "quantity": {
            "type": "integer",
            "description": "Determines how many bundles are qualified. If there are missing bundle products, the value is `0`. If the bundle is qualified, the value is `1`. The maximum number of identified bundles can equal the number set in `limit`. Also defines the multiplier of the discount for `AMOUNT`, `PERCENT`, and `UNIT` discount types. To inform end-customers that more products can be added to meet additional bundles, compare this parameter with `limit`.",
            "minimum": 0,
            "maximum": 100,
            "nullable": true
          },
          "limit": {
            "type": "integer",
            "description": "Determines the maximum number of identified bundles. This also defines the maximum multiplier of the bundle discount.",
            "minimum": 1,
            "maximum": 100,
            "nullable": true
          },
          "identified": {
            "title": "BundleIdentified",
            "type": "array",
            "description": "Determines products from the customer's order items that meet bundle conditions. SKUs meet the conditions for their product that is used in the bundle. Returns only the products and their quantity that meet the bundle.",
            "items": {
              "title": "BundleIdentifiedItem",
              "type": "object",
              "description": "Determines a product from the customer's order items that meets bundle conditions.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Unique identifier of the product or SKU that meets the bundle condition. This is an ID assigned by Voucherify."
                },
                "object": {
                  "type": "string",
                  "description": "Determines the type of the object that meets the bundle condition.",
                  "enum": [
                    "product",
                    "sku"
                  ]
                },
                "item_index": {
                  "type": "integer",
                  "description": "Number assigned to the order line item in accordance with the order sent in the request. It starts with `0` for the first order line item in the request.",
                  "minimum": 0
                },
                "item_quantity": {
                  "type": "integer",
                  "description": "Quantity of items that meet the bundle conditions. If the quantity in the order is higher than the quantity required by the bundle, this returns only the number that meets the bundle. For example, if the bundle requires `5` coffees, but the order includes `10` coffees, `item_quantity` returns `5`."
                }
              },
              "required": [
                "id",
                "object",
                "item_index",
                "item_quantity"
              ]
            },
            "nullable": true
          },
          "missing": {
            "title": "BundleMissing",
            "type": "array",
            "description": "Determines products, SKUs, or collections from the bundle that are missing in the customer's order items. Determines also the missing quantity. For collections, this means that order items do not include a sufficient number of items that belong to the collection. Not returned when all required bundle items are in the order.",
            "items": {
              "title": "BundleMissingItem",
              "type": "object",
              "description": "Determines a product, SKU, or collection that is in bundle conditions, but is missing in the customer's order items. Determines also the missing quantity.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Unique identifier of the collection, product, or SKU that is missing in the customer's order items. This is an ID assigned by Voucherify."
                },
                "object": {
                  "type": "string",
                  "description": "Determines the type of the object that is missing in the customer's order items.",
                  "enum": [
                    "product",
                    "products_collection",
                    "sku"
                  ]
                },
                "item_quantity": {
                  "type": "integer",
                  "description": "Quantity of items that are missing in the order items to meet the bundle conditions."
                }
              },
              "required": [
                "id",
                "object",
                "item_quantity"
              ]
            },
            "nullable": true
          }
        },
        "required": []
      },
      "Campaign": {
        "title": "Campaign",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique campaign ID, assigned by Voucherify.",
            "example": "camp_f7fBbQxUuTN7dI7tGOo5XMDA",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Campaign name.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "An optional field to keep any extra textual information about the campaign such as a campaign description and details.",
            "nullable": true
          },
          "campaign_type": {
            "type": "string",
            "enum": [
              "LOYALTY_PROGRAM",
              "GIFT_VOUCHERS",
              "DISCOUNT_COUPONS",
              "PROMOTION",
              "REFERRAL_PROGRAM"
            ],
            "description": "Type of campaign.",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "Defines whether the campaign can be updated with new vouchers after campaign creation or if the campaign consists of generic (standalone) voucherss.\n\n- `AUTO_UPDATE`: the campaign is dynamic, i.e. vouchers will generate based on set criteria\n-  `STATIC`: vouchers need to be manually published\n- `STANDALONE`: campaign for single vouchers",
            "enum": [
              "AUTO_UPDATE",
              "STATIC",
              "STANDALONE"
            ],
            "nullable": true
          },
          "voucher": {
            "$ref": "#/components/schemas/CampaignVoucher"
          },
          "auto_join": {
            "type": "boolean",
            "description": "Indicates whether customers will be able to auto-join a loyalty campaign if any earning rule is fulfilled.",
            "nullable": true
          },
          "join_once": {
            "type": "boolean",
            "description": "If this value is set to `true`, customers will be able to join the campaign only once. It is always `false` for generic (standalone) vouchers campaigns and it cannot be changed in them. It is always `true` for loyalty campaigns and it cannot be changed in them.",
            "nullable": true
          },
          "use_voucher_metadata_schema": {
            "type": "boolean",
            "description": "Flag indicating whether the campaign is to use the voucher's metadata schema instead of the campaign metadata schema.",
            "nullable": true
          },
          "validity_timeframe": {
            "$ref": "#/components/schemas/ValidityTimeframe"
          },
          "validity_day_of_week": {
            "$ref": "#/components/schemas/ValidityDayOfWeek"
          },
          "validity_hours": {
            "$ref": "#/components/schemas/ValidityHours"
          },
          "activity_duration_after_publishing": {
            "type": "string",
            "description": "Defines the amount of time the vouchers will be active after publishing. The value is shown in the ISO 8601 format. For example, a voucher with the value of P24D will be valid for a duration of 24 days.",
            "nullable": true
          },
          "vouchers_count": {
            "type": "integer",
            "description": "Total number of unique vouchers in campaign.",
            "nullable": true
          },
          "start_date": {
            "type": "string",
            "format": "date-time",
            "description": "Activation timestamp defines when the campaign starts to be active in ISO 8601 format. Campaign is *inactive before* this date. ",
            "example": "2022-09-20T00:00:00.000Z",
            "nullable": true
          },
          "expiration_date": {
            "type": "string",
            "format": "date-time",
            "description": "Expiration timestamp defines when the campaign expires in ISO 8601 format.  Campaign is *inactive after* this date.",
            "example": "2022-09-30T00:00:00.000Z",
            "nullable": true
          },
          "active": {
            "type": "boolean",
            "description": "A flag to toggle the campaign on or off. You can disable a campaign even though it's within the active period defined by the `start_date` and `expiration_date`.  \n\n- `true` indicates an *active* campaign\n- `false` indicates an *inactive* campaign",
            "nullable": true
          },
          "metadata": {
            "title": "CampaignMetadata",
            "type": "object",
            "description": "The metadata object stores all custom attributes assigned to the campaign. A set of key/value pairs that you can attach to a campaign object. It can be useful for storing additional information about the campaign in a structured format.",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2021-12-01T08:00:50.038Z",
            "description": "Timestamp representing the date and time when the campaign was created. The value is shown in the ISO 8601 format.",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2022-09-20T09:18:19.623Z",
            "description": "Timestamp representing the date and time when the campaign was last updated in ISO 8601 format.",
            "nullable": true
          },
          "category": {
            "type": "string",
            "description": "Unique category name.",
            "nullable": true
          },
          "creation_status": {
            "type": "string",
            "enum": [
              "DONE",
              "IN_PROGRESS",
              "FAILED",
              "DRAFT",
              "MODIFYING"
            ],
            "description": "Indicates the status of the campaign creation.",
            "nullable": true
          },
          "vouchers_generation_status": {
            "type": "string",
            "description": "Indicates the status of the campaign's voucher generation.",
            "enum": [
              "DONE",
              "IN_PROGRESS",
              "FAILED",
              "DRAFT",
              "MODIFYING"
            ],
            "nullable": true
          },
          "readonly": {
            "type": "boolean",
            "description": "Indicates whether the campaign can be only read by a restricted user in the Areas and Stores enterprise feature. It is returned only to restricted users; this field is not returned for users with other roles. It is also not returned for restricted users who use the [GET Campaign summary](ref:campaign-summary) endpoint.",
            "nullable": true
          },
          "protected": {
            "type": "boolean",
            "description": "Indicates whether the resource can be deleted.",
            "nullable": true
          },
          "category_id": {
            "type": "string",
            "nullable": true,
            "description": "Unique category ID that this campaign belongs to.",
            "example": "cat_0b688929a2476386a7"
          },
          "categories": {
            "title": "CampaignCategories",
            "type": "array",
            "description": "Contains details about the campaign category. For the GET [List campaigns](ref:list-campaigns) endpoint, this is returned only if the `expand=category` query parameter is passed in the request. Otherwise, it is returned as an empty array. For GET [Campaign summary](ref:get-campaign-summary) endpoint, it is always returned as an empty array.",
            "items": {
              "$ref": "#/components/schemas/Category"
            },
            "nullable": true
          },
          "object": {
            "type": "string",
            "default": "campaign",
            "description": "The type of the object represented by JSON. This object stores information about the campaign.",
            "nullable": true
          },
          "referral_program": {
            "$ref": "#/components/schemas/ReferralProgram"
          },
          "loyalty_tiers_expiration": {
            "$ref": "#/components/schemas/LoyaltyTiersExpirationAll"
          },
          "access_settings_assignments": {
            "$ref": "#/components/schemas/AccessSettingsCampaignAssignmentsList"
          },
          "promotion": {
            "$ref": "#/components/schemas/PromotionTiersList"
          },
          "validation_rules_assignments": {
            "$ref": "#/components/schemas/ValidationRulesAssignmentsList"
          }
        }
      },
      "CampaignBase": {
        "title": "CampaignBase",
        "type": "object",
        "description": "This is an object representing a campaign.",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique campaign ID, assigned by Voucherify.",
            "example": "camp_f7fBbQxUuTN7dI7tGOo5XMDA",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Campaign name.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "An optional field to keep any extra textual information about the campaign such as a campaign description and details.",
            "nullable": true
          },
          "campaign_type": {
            "type": "string",
            "enum": [
              "LOYALTY_PROGRAM",
              "GIFT_VOUCHERS",
              "DISCOUNT_COUPONS",
              "PROMOTION",
              "REFERRAL_PROGRAM"
            ],
            "description": "Type of campaign.",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "Defines whether the campaign can be updated with new vouchers after campaign creation or if the campaign consists of generic (standalone) voucherss.\n\n- `AUTO_UPDATE`: the campaign is dynamic, i.e. vouchers will generate based on set criteria\n-  `STATIC`: vouchers need to be manually published\n- `STANDALONE`: campaign for single vouchers",
            "enum": [
              "AUTO_UPDATE",
              "STATIC",
              "STANDALONE"
            ],
            "nullable": true
          },
          "voucher": {
            "$ref": "#/components/schemas/CampaignVoucher"
          },
          "auto_join": {
            "type": "boolean",
            "description": "Indicates whether customers will be able to auto-join a loyalty campaign if any earning rule is fulfilled.",
            "nullable": true
          },
          "join_once": {
            "type": "boolean",
            "description": "If this value is set to `true`, customers will be able to join the campaign only once. It is always `false` for generic (standalone) vouchers campaigns and it cannot be changed in them. It is always `true` for loyalty campaigns and it cannot be changed in them.",
            "nullable": true
          },
          "use_voucher_metadata_schema": {
            "type": "boolean",
            "description": "Flag indicating whether the campaign is to use the voucher's metadata schema instead of the campaign metadata schema.",
            "nullable": true
          },
          "validity_timeframe": {
            "$ref": "#/components/schemas/ValidityTimeframe"
          },
          "validity_day_of_week": {
            "$ref": "#/components/schemas/ValidityDayOfWeek"
          },
          "validity_hours": {
            "$ref": "#/components/schemas/ValidityHours"
          },
          "activity_duration_after_publishing": {
            "type": "string",
            "description": "Defines the amount of time the vouchers will be active after publishing. The value is shown in the ISO 8601 format. For example, a voucher with the value of P24D will be valid for a duration of 24 days.",
            "nullable": true
          },
          "vouchers_count": {
            "type": "integer",
            "description": "Total number of unique vouchers in campaign.",
            "nullable": true
          },
          "start_date": {
            "type": "string",
            "format": "date-time",
            "description": "Activation timestamp defines when the campaign starts to be active in ISO 8601 format. Campaign is *inactive before* this date. ",
            "example": "2022-09-20T00:00:00.000Z",
            "nullable": true
          },
          "expiration_date": {
            "type": "string",
            "format": "date-time",
            "description": "Expiration timestamp defines when the campaign expires in ISO 8601 format.  Campaign is *inactive after* this date.",
            "example": "2022-09-30T00:00:00.000Z",
            "nullable": true
          },
          "active": {
            "type": "boolean",
            "description": "A flag to toggle the campaign on or off. You can disable a campaign even though it's within the active period defined by the `start_date` and `expiration_date`.  \n\n- `true` indicates an *active* campaign\n- `false` indicates an *inactive* campaign",
            "nullable": true
          },
          "metadata": {
            "title": "CampaignBaseMetadata",
            "type": "object",
            "description": "The metadata object stores all custom attributes assigned to the campaign. A set of key/value pairs that you can attach to a campaign object. It can be useful for storing additional information about the campaign in a structured format.",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2021-12-01T08:00:50.038Z",
            "description": "Timestamp representing the date and time when the campaign was created. The value is shown in the ISO 8601 format.",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2022-09-20T09:18:19.623Z",
            "description": "Timestamp representing the date and time when the campaign was last updated in ISO 8601 format.",
            "nullable": true
          },
          "category": {
            "type": "string",
            "description": "Unique category name.",
            "nullable": true
          },
          "creation_status": {
            "type": "string",
            "enum": [
              "DONE",
              "IN_PROGRESS",
              "FAILED",
              "DRAFT",
              "MODIFYING"
            ],
            "description": "Indicates the status of the campaign creation.",
            "nullable": true
          },
          "vouchers_generation_status": {
            "type": "string",
            "description": "Indicates the status of the campaign's voucher generation.",
            "enum": [
              "DONE",
              "IN_PROGRESS",
              "FAILED",
              "DRAFT",
              "MODIFYING"
            ],
            "nullable": true
          },
          "readonly": {
            "type": "boolean",
            "description": "Indicates whether the campaign can be only read by a restricted user in the Areas and Stores enterprise feature. It is returned only to restricted users; this field is not returned for users with other roles. It is also not returned for restricted users who use the [GET Campaign summary](ref:campaign-summary) endpoint.",
            "nullable": true
          },
          "protected": {
            "type": "boolean",
            "description": "Indicates whether the resource can be deleted.",
            "nullable": true
          },
          "category_id": {
            "type": "string",
            "nullable": true,
            "description": "Unique category ID that this campaign belongs to.",
            "example": "cat_0b688929a2476386a7"
          },
          "categories": {
            "title": "CampaignBaseCategories",
            "type": "array",
            "description": "Contains details about the campaign category. For the GET [List campaigns](ref:list-campaigns) endpoint, this is returned only if the `expand=category` query parameter is passed in the request. Otherwise, it is returned as an empty array. For GET [Campaign summary](ref:get-campaign-summary) endpoint, it is always returned as an empty array.",
            "items": {
              "$ref": "#/components/schemas/Category"
            },
            "nullable": true
          },
          "object": {
            "type": "string",
            "default": "campaign",
            "description": "The type of the object represented by JSON. This object stores information about the campaign.",
            "nullable": true
          },
          "referral_program": {
            "$ref": "#/components/schemas/ReferralProgram"
          },
          "loyalty_tiers_expiration": {
            "$ref": "#/components/schemas/LoyaltyTiersExpirationAll"
          },
          "access_settings_assignments": {
            "$ref": "#/components/schemas/AccessSettingsCampaignAssignmentsList"
          }
        },
        "required": []
      },
      "CampaignLoyaltyCard": {
        "title": "CampaignLoyaltyCard",
        "type": "object",
        "description": "Schema model for a campaign loyalty card.",
        "properties": {
          "points": {
            "type": "integer",
            "description": "The initial number of points to assign to the loyalty card. This is the current loyalty card score i.e. the number of loyalty points on the card.",
            "nullable": true
          },
          "expiration_rules": {
            "title": "CampaignLoyaltyCardExpirationRules",
            "type": "object",
            "description": "Defines the loyalty point expiration rule. This expiration rule applies when there are no `expiration_rules` defined for an earning rule.",
            "properties": {
              "period_type": {
                "type": "string",
                "description": "Type of period. Can be set for `MONTH` or `FIXED_DAY_OF_YEAR`. `MONTH` requires the `period_value` field. `FIXED_DAY_OF_YEAR` requires the `fixed_month` and `fixed_day` fields.",
                "enum": [
                  "FIXED_DAY_OF_YEAR",
                  "MONTH"
                ],
                "nullable": true
              },
              "period_value": {
                "type": "integer",
                "description": "Value of the period. Required for the `period_type: MONTH`.",
                "nullable": true
              },
              "rounding_type": {
                "type": "string",
                "description": "Type of rounding of the expiration period. Optional for the `period_type: MONTH`.",
                "enum": [
                  "END_OF_MONTH",
                  "END_OF_QUARTER",
                  "END_OF_HALF_YEAR",
                  "END_OF_YEAR",
                  "PARTICULAR_MONTH"
                ],
                "nullable": true
              },
              "rounding_value": {
                "type": "integer",
                "description": "Value of rounding of the expiration period. Required for the `rounding_type`.",
                "nullable": true
              },
              "fixed_month": {
                "type": "integer",
                "description": "Determines the month when the points expire; `1` is January, `2` is February, and so on. Required for the `period_type: FIXED_DAY_OF_YEAR`.",
                "minimum": 1,
                "maximum": 12,
                "nullable": true
              },
              "fixed_day": {
                "type": "integer",
                "description": "Determines the day of the month when the points expire. Required for the `period_type: FIXED_DAY_OF_YEAR`.",
                "minimum": 1,
                "maximum": 31,
                "nullable": true
              }
            },
            "required": [],
            "nullable": true
          }
        },
        "required": []
      },
      "CampaignLoyaltyVoucher": {
        "title": "CampaignLoyaltyVoucher",
        "type": "object",
        "description": "Schema model for a discount voucher.",
        "properties": {
          "type": {
            "type": "string",
            "default": "LOYALTY_CARD",
            "description": "Type of voucher.",
            "enum": [
              "LOYALTY_CARD"
            ],
            "nullable": true
          },
          "loyalty_card": {
            "$ref": "#/components/schemas/CampaignLoyaltyCard"
          },
          "redemption": {
            "title": "CampaignLoyaltyVoucherRedemption",
            "type": "object",
            "description": "Defines the redemption limits on vouchers.",
            "properties": {
              "quantity": {
                "type": "integer",
                "nullable": true,
                "description": "How many times a voucher can be redeemed. A `null` value means unlimited."
              }
            },
            "nullable": true
          },
          "code_config": {
            "$ref": "#/components/schemas/CodeConfig"
          }
        },
        "required": [
          "loyalty_card"
        ]
      },
      "CampaignTemplate": {
        "title": "CampaignTemplate",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of the campaign template. It is assigned by Voucherify.",
            "example": "camp_tpl_eR9NsNJ5gqJRN2TG3fqCvbVl",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "User-defined name of the campaign template.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "User-defined description of the campaign template.",
            "nullable": true
          },
          "campaign_type": {
            "type": "string",
            "description": "Type of the campaign used to create the campaign template. Templates created from a promotion tier are converted to `DISCOUNT_COUPONS`.",
            "enum": [
              "DISCOUNT_COUPONS",
              "GIFT_VOUCHERS"
            ],
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp representing the date and time when the campaign template was created. The value is shown in the ISO 8601 format.",
            "example": "2024-07-16T09:05:53.175Z",
            "nullable": true
          },
          "object": {
            "type": "string",
            "description": "The type of the object represented by JSON.",
            "default": "campaign_template",
            "enum": [
              "campaign_template"
            ],
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp representing the date and time when the campaign template was last updated. The value is shown in the ISO 8601 format.",
            "example": "2024-07-17T06:25:21.500Z",
            "nullable": true
          }
        }
      },
      "CampaignVoucher": {
        "title": "CampaignVoucher",
        "type": "object",
        "description": "Schema model for a campaign voucher.",
        "properties": {
          "type": {
            "type": "string",
            "description": "Type of voucher.",
            "nullable": true
          },
          "discount": {
            "$ref": "#/components/schemas/Discount"
          },
          "gift": {
            "$ref": "#/components/schemas/Gift"
          },
          "loyalty_card": {
            "$ref": "#/components/schemas/CampaignLoyaltyCard"
          },
          "redemption": {
            "title": "CampaignVoucherRedemption",
            "type": "object",
            "description": "Defines the redemption limits on vouchers.",
            "properties": {
              "quantity": {
                "type": "integer",
                "nullable": true,
                "description": "How many times a voucher can be redeemed. A `null` value means unlimited."
              }
            },
            "required": [],
            "nullable": true
          },
          "code_config": {
            "$ref": "#/components/schemas/CodeConfig"
          },
          "is_referral_code": {
            "type": "boolean",
            "description": "Flag indicating whether this voucher is a referral code; `true` for campaign type `REFERRAL_PROGRAM`.",
            "nullable": true
          },
          "start_date": {
            "type": "string",
            "format": "date-time",
            "description": "Activation timestamp defines when the campaign starts to be active in ISO 8601 format. Campaign is *inactive before* this date. ",
            "example": "2022-09-20T00:00:00.000Z",
            "nullable": true
          },
          "expiration_date": {
            "type": "string",
            "format": "date-time",
            "description": "Expiration timestamp defines when the campaign expires in ISO 8601 format.  Campaign is *inactive after* this date.",
            "example": "2022-09-30T00:00:00.000Z",
            "nullable": true
          },
          "validity_timeframe": {
            "$ref": "#/components/schemas/ValidityTimeframe"
          },
          "validity_day_of_week": {
            "$ref": "#/components/schemas/ValidityDayOfWeek"
          },
          "validity_hours": {
            "$ref": "#/components/schemas/ValidityHours"
          }
        },
        "required": [
          "code_config"
        ]
      },
      "CampaignsImportVoucherItem": {
        "title": "CampaignsImportVoucherItem",
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Value representing the imported code.",
            "nullable": true
          },
          "redemption": {
            "title": "CampaignsImportVoucherItemRedemption",
            "type": "object",
            "properties": {
              "quantity": {
                "type": "integer",
                "description": "How many times a voucher can be redeemed. A `null` value means unlimited.",
                "example": 10,
                "nullable": true
              }
            },
            "nullable": true
          },
          "active": {
            "type": "boolean",
            "description": "A flag to toggle the voucher on or off. You can disable a voucher even though it's within the active period defined by the `start_date` and `expiration_date`.  \n\n- `true` indicates an *active* voucher\n- `false` indicates an *inactive* voucher",
            "nullable": true
          },
          "metadata": {
            "title": "CampaignsImportVoucherItemMetadata",
            "type": "object",
            "description": "The metadata object stores all custom attributes assigned to the code. A set of key/value pairs that you can attach to a voucher object. It can be useful for storing additional information about the voucher in a structured format.",
            "nullable": true
          },
          "category": {
            "type": "string",
            "description": "Tag defining the category that this voucher belongs to. Useful when listing vouchers using the [List Vouchers](ref:list-vouchers) endpoint.",
            "nullable": true
          },
          "start_date": {
            "type": "string",
            "description": "Activation timestamp presented in the ISO 8601 format. Voucher is *inactive before* this date. Start date defines when the code starts to be active.\nAllowed date formats are:\n- YYYY-MM-DD\n- YYYY-MM-DDTHH\n- YYYY-MM-DDTHH:mm\n- YYYY-MM-DDTHH:mm:ss\n- YYYY-MM-DDTHH:mm:ssZ\n- YYYY-MM-DDTHH:mm:ss.SSSZ",
            "format": "date-time",
            "example": "2020-12-28T12:49:16.272Z",
            "nullable": true
          },
          "expiration_date": {
            "type": "string",
            "description": "Expiration date defines when the code expires. Expiration timestamp is presented in the ISO 8601 format.  Voucher is *inactive after* this date.\nAllowed date formats are:\n- YYYY-MM-DD\n- YYYY-MM-DDTHH\n- YYYY-MM-DDTHH:mm\n- YYYY-MM-DDTHH:mm:ss\n- YYYY-MM-DDTHH:mm:ssZ\n- YYYY-MM-DDTHH:mm:ss.SSSZ",
            "format": "date-time",
            "example": "2053-12-28T12:49:16.272Z",
            "nullable": true
          },
          "validity_timeframe": {
            "$ref": "#/components/schemas/ValidityTimeframe"
          },
          "validity_day_of_week": {
            "$ref": "#/components/schemas/ValidityDayOfWeek"
          },
          "additional_info": {
            "type": "string",
            "description": "An optional field to keep any extra textual information about the code such as a code description and details.",
            "nullable": true
          },
          "type": {
            "type": "string",
            "enum": [
              "LOYALTY_CARD",
              "GIFT_VOUCHER",
              "DISCOUNT_VOUCHER"
            ],
            "nullable": true
          },
          "loyalty_card": {
            "$ref": "#/components/schemas/SimpleLoyaltyCard"
          },
          "gift": {
            "$ref": "#/components/schemas/Gift"
          },
          "discount": {
            "$ref": "#/components/schemas/Discount"
          }
        }
      },
      "Category": {
        "title": "Category",
        "description": "This is an object representing a category.",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique category ID assigned by Voucherify.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Category name.",
            "nullable": true
          },
          "hierarchy": {
            "type": "integer",
            "description": "Category hierarchy. Categories with lower hierarchy are processed before categories with higher hierarchy value.",
            "minimum": 0,
            "nullable": true
          },
          "object": {
            "type": "string",
            "default": "category",
            "enum": [
              "category"
            ],
            "description": "The type of the object represented by the JSON. This object stores information about the category.",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "description": "Timestamp representing the date and time when the category was created. The value is shown in the ISO 8601 format.",
            "example": "2022-07-14T10:45:13.156Z",
            "format": "date-time",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "example": "2022-08-16T10:52:08.094Z",
            "description": "Timestamp representing the date and time when the category was updated. The value is shown in the ISO 8601 format.",
            "format": "date-time",
            "nullable": true
          }
        },
        "required": []
      },
      "CategoryWithStackingRulesType": {
        "title": "CategoryWithStackingRulesType",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique category ID assigned by Voucherify.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Category name.",
            "nullable": true
          },
          "hierarchy": {
            "type": "integer",
            "description": "Category hierarchy. Categories with lower hierarchy are processed before categories with higher hierarchy value.",
            "minimum": 0,
            "nullable": true
          },
          "object": {
            "type": "string",
            "default": "category",
            "enum": [
              "category"
            ],
            "description": "The type of the object represented by the JSON. This object stores information about the category.",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "description": "Timestamp representing the date and time when the category was created. The value is shown in the ISO 8601 format.",
            "example": "2022-07-14T10:45:13.156Z",
            "format": "date-time",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "example": "2022-08-16T10:52:08.094Z",
            "description": "Timestamp representing the date and time when the category was updated. The value is shown in the ISO 8601 format.",
            "format": "date-time",
            "nullable": true
          },
          "stacking_rules_type": {
            "type": "string",
            "description": "The type of the stacking rule eligibility.",
            "enum": [
              "JOINT",
              "EXCLUSIVE"
            ],
            "nullable": true
          }
        },
        "description": "Category object with `stacking_rules_type`"
      },
      "CodeConfig": {
        "title": "CodeConfig",
        "type": "object",
        "description": "Contains information about the config used for the voucher code. Defines the code's pattern (prefix, postfix, length, charset, etc).",
        "properties": {
          "length": {
            "type": "number",
            "description": "Number of characters in a generated code (excluding prefix and postfix).",
            "nullable": true
          },
          "charset": {
            "type": "string",
            "description": "Characters that can appear in the code.  \n\nExamples:\n\n- Alphanumeric: `0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ` \n- Alphabetic: `abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ` \n- Alphabetic Lowercase: `abcdefghijklmnopqrstuvwxyz` \n- Alphabetic Uppercase: `ABCDEFGHIJKLMNOPQRSTUVWXYZ` \n- Numbers: `0123456789`  \n- Custom: a custom character set",
            "nullable": true
          },
          "prefix": {
            "type": "string",
            "description": "A text appended before the code.",
            "nullable": true
          },
          "postfix": {
            "type": "string",
            "description": "A text appended after the code.",
            "nullable": true
          },
          "pattern": {
            "type": "string",
            "description": "A pattern for codes where hashes (#) will be replaced with random characters. Overrides `length`.",
            "nullable": true
          },
          "initial_count": {
            "type": "integer",
            "description": "Internal value, does not change anything if provided.",
            "nullable": true
          }
        }
      },
      "CustomerActivity": {
        "title": "CustomerActivity",
        "type": "object",
        "description": "This is an object representing customer activity.  \n\nThis is a general object which presents moments from customers' activity. There are all types of different events that customers perform during their journey once they participate in Promotions. Events describe moments when customers redeem coupons and earn points or rewards. The list of all types of activities is listed below.\n\nThe details describing the activity are collected in a property named `data`. In this object, software integrators will find all further information explaining the event context.",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique event ID, assigned by Voucherify.",
            "example": "evcus_0c150c51730c6b60b1",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "Event type.",
            "nullable": true
          },
          "data": {
            "title": "CustomerActivityData",
            "type": "object",
            "description": "Contains details about the event. The objects that are returned in the data attribute differ based on the context of the event type.",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "description": "Timestamp representing the date and time when the customer activity occurred in ISO 8601 format.",
            "example": "2022-08-30T09:14:07.660Z",
            "format": "date-time",
            "nullable": true
          },
          "group_id": {
            "type": "string",
            "description": "Unique identifier of the request that caused the event.",
            "example": "v-1f36113948e50fc4ge",
            "nullable": true
          }
        }
      },
      "CustomerId": {
        "title": "CustomerId",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "A unique identifier of an existing customer.",
            "nullable": true
          },
          "object": {
            "type": "string",
            "description": "The type of the object represented by JSON.",
            "default": "customer",
            "enum": [
              "customer"
            ],
            "nullable": true
          }
        },
        "required": []
      },
      "CustomerLoyalty": {
        "title": "CustomerLoyalty",
        "type": "object",
        "properties": {
          "points": {
            "type": "integer",
            "description": "Customer's loyalty points minus expired for all loyalty cards which the customer has.",
            "nullable": true
          },
          "referred_customers": {
            "type": "integer",
            "description": "Total number of customers referred by the customer.",
            "nullable": true
          },
          "campaigns": {
            "title": "CustomerLoyaltyCampaigns",
            "type": "object",
            "description": "Contains campaigns with details about point balances and how many customers were referred by the customer.",
            "nullable": true
          }
        },
        "required": []
      },
      "CustomerRedeemable": {
        "title": "CustomerRedeemable",
        "type": "object",
        "description": "Single customer's redeemable",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique redeemable holder identifier.",
            "example": "rh_0e7b8db4700106a852",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp representing the date and time when the redeemable was assigned. The value is shown in the ISO 8601 format.",
            "example": "2024-03-22T17:48:25.910Z",
            "nullable": true
          },
          "redeemable_id": {
            "type": "string",
            "description": "Identifier of the redeemable item.",
            "example": "v_GXVguPhq2khgFxH7GrRXWA91gDr1LiA1",
            "nullable": true
          },
          "redeemable_object": {
            "type": "string",
            "description": "Type of the redeemable.",
            "example": "voucher",
            "nullable": true
          },
          "customer_id": {
            "type": "string",
            "description": "Identifier of the customer.",
            "example": "cust_p1ufreYbVbwZ1x70nFkH9rF9",
            "nullable": true
          },
          "holder_role": {
            "type": "string",
            "description": "Role of the holder.",
            "enum": [
              "OWNER",
              "REFERRER",
              "REFEREE"
            ],
            "default": "OWNER",
            "example": "OWNER",
            "nullable": true
          },
          "campaign_id": {
            "type": "string",
            "nullable": true,
            "description": "Unique campaign identifier, assigned by Voucherify.",
            "example": "camp_weer1c3p5ZgktqfW56RfoNaG"
          },
          "campaign_type": {
            "type": "string",
            "nullable": true,
            "description": "Defines the type of the campaign.",
            "enum": [
              "LOYALTY_PROGRAM",
              "GIFT_VOUCHERS",
              "DISCOUNT_COUPONS",
              "PROMOTION",
              "REFERRAL_PROGRAM"
            ],
            "example": "DISCOUNT_COUPONS",
            "default": "DISCOUNT_COUPONS"
          },
          "voucher_type": {
            "type": "string",
            "description": "Defines the type of the voucher.",
            "enum": [
              "GIFT_VOUCHER",
              "DISCOUNT_VOUCHER",
              "LOYALTY_CARD"
            ],
            "default": "DISCOUNT_VOUCHER",
            "example": "DISCOUNT_VOUCHER",
            "nullable": true
          },
          "redeemable": {
            "title": "CustomerRedeemableRedeemable",
            "type": "object",
            "description": "Detailed information about the customer's redeemable item",
            "properties": {
              "type": {
                "type": "string",
                "description": "Type of the redeemable.",
                "example": "voucher",
                "nullable": true
              },
              "voucher": {
                "$ref": "#/components/schemas/RedeemableVoucher"
              },
              "status": {
                "type": "string",
                "description": "Status of the redeemable.",
                "enum": [
                  "ACTIVE",
                  "USED",
                  "DISABLED",
                  "NOT_ACTIVE_YET",
                  "EXPIRED",
                  "NO_BALANCE"
                ],
                "default": "ACTIVE",
                "example": "ACTIVE",
                "nullable": true
              }
            },
            "required": [
              "voucher"
            ],
            "nullable": true
          }
        },
        "required": []
      },
      "CustomerReferrals": {
        "title": "CustomerReferrals",
        "type": "object",
        "description": "Summary of customer's referrals, in this case, the customer being the referee, i.e. information about the source of referrals and number of times the customer was referred by other customers.",
        "properties": {
          "total": {
            "type": "integer",
            "description": "Total number of times this customer received a referral, i.e. was referred by another customer.",
            "nullable": true
          },
          "campaigns": {
            "title": "CustomerReferralsCampaigns",
            "type": "array",
            "description": "Contains an array of campaigns that served as the source of a referral for the customer.",
            "items": {
              "title": "CustomerReferralsCampaignsItem",
              "type": "object",
              "description": "Contains information about the source of the referral.",
              "properties": {
                "campaign_id": {
                  "type": "string",
                  "description": "Unique campaign ID, assigned by Voucherify.",
                  "example": "camp_rRsfatlwN7unSeUIJDCYedal"
                },
                "referrer_id": {
                  "type": "string",
                  "example": "cust_sehkNIi8Uq2qQuRqSr7xn4Zi",
                  "description": "Unique referrer ID, assigned by Voucherify. This is the customer ID of a customer that is referring this customer."
                },
                "related_object_id": {
                  "type": "string",
                  "description": "Related object id",
                  "example": "r_0b9d4cc4aa164dd073"
                },
                "related_object_type": {
                  "type": "string",
                  "description": "Related object type, i.e. `redemption`."
                },
                "date": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2022-08-30T10:19:39.196Z",
                  "description": "Timestamp representing the date and time when the customer was referred in ISO 8601 format."
                }
              },
              "required": [
                "campaign_id",
                "referrer_id",
                "related_object_id",
                "related_object_type",
                "date"
              ]
            },
            "nullable": true
          }
        },
        "required": []
      },
      "CustomerSummary": {
        "title": "CustomerSummary",
        "type": "object",
        "properties": {
          "redemptions": {
            "$ref": "#/components/schemas/CustomerSummaryRedemptions"
          },
          "orders": {
            "$ref": "#/components/schemas/CustomerSummaryOrders"
          }
        },
        "required": [
          "redemptions",
          "orders"
        ]
      },
      "CustomerWithSummaryLoyaltyReferrals": {
        "title": "CustomerWithSummaryLoyaltyReferrals",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of an existing customer that will be linked to redemption in this request.",
            "nullable": true
          },
          "source_id": {
            "type": "string",
            "description": "A unique identifier of the customer who validates a voucher. It can be a customer ID or email from a CRM system, database, or a third-party service. If you also pass a customer ID (unique ID assigned by Voucherify), the source ID will be ignored.",
            "nullable": true
          },
          "summary": {
            "$ref": "#/components/schemas/CustomerSummary"
          },
          "loyalty": {
            "$ref": "#/components/schemas/CustomerLoyalty"
          },
          "referrals": {
            "$ref": "#/components/schemas/CustomerReferrals"
          },
          "system_metadata": {
            "title": "CustomerWithSummaryLoyaltyReferralsSystemMetadata",
            "type": "object",
            "description": "Object used to store system metadata information.",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "description": "Timestamp representing the date and time when the customer was created. The value is shown in the ISO 8601 format.",
            "example": "2022-08-30T06:32:07.380Z",
            "format": "date-time",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "description": "Timestamp representing the date and time when the customer was updated. The value is shown in the ISO 8601 format.",
            "example": "2022-08-31T06:32:07.380Z",
            "format": "date-time",
            "nullable": true
          },
          "assets": {
            "title": "CustomerWithSummaryLoyaltyReferralsAssets",
            "type": "object",
            "description": "Contains information about the customer's cockpit.",
            "properties": {
              "cockpit_url": {
                "type": "string",
                "description": "Customer's cockpit URL address.",
                "nullable": true
              }
            },
            "nullable": true
          },
          "object": {
            "type": "string",
            "description": "The type of the object represented by JSON.",
            "default": "customer",
            "enum": [
              "customer"
            ],
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Customer's first and last name.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "An arbitrary string that you can attach to a customer object.",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "Customer's email address.",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "description": "Customer's phone number. This parameter is mandatory when you try to send out codes to customers via an SMS channel.",
            "nullable": true
          },
          "birthday": {
            "type": "string",
            "description": "`Deprecated`. ~~Customer's birthdate; format YYYY-MM-DD~~.",
            "format": "date",
            "nullable": true
          },
          "birthdate": {
            "type": "string",
            "description": "Customer's birthdate; format YYYY-MM-DD.",
            "format": "date",
            "nullable": true
          },
          "address": {
            "title": "CustomerWithSummaryLoyaltyReferralsAddress",
            "type": "object",
            "nullable": true,
            "description": "Customer's address.",
            "properties": {
              "city": {
                "type": "string",
                "description": "City",
                "nullable": true
              },
              "state": {
                "type": "string",
                "description": "State",
                "nullable": true
              },
              "line_1": {
                "type": "string",
                "description": "First line of address.",
                "nullable": true
              },
              "line_2": {
                "type": "string",
                "description": "Second line of address.",
                "nullable": true
              },
              "country": {
                "type": "string",
                "description": "Country.",
                "nullable": true
              },
              "postal_code": {
                "type": "string",
                "description": "Postal code.",
                "nullable": true
              }
            }
          },
          "metadata": {
            "title": "CustomerWithSummaryLoyaltyReferralsMetadata",
            "type": "object",
            "description": "A set of custom key/value pairs that you can attach to a customer. The metadata object stores all custom attributes assigned to the customer. It can be useful for storing additional information about the customer in a structured format. This metadata can be used for validating whether the customer qualifies for a discount or it can be used in building customer segments.",
            "nullable": true
          }
        }
      },
      "Discount": {
        "title": "Discount",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "AMOUNT",
              "UNIT",
              "PERCENT",
              "FIXED"
            ],
            "nullable": true
          },
          "amount_off": {
            "type": "number",
            "description": "Amount taken off the subtotal of a price. Value is multiplied by 100 to precisely represent 2 decimal places. For example, a $10 discount is written as 1000.",
            "nullable": true
          },
          "amount_off_formula": {
            "type": "string",
            "nullable": true
          },
          "aggregated_amount_limit": {
            "type": "integer",
            "description": "Maximum discount amount per order.",
            "nullable": true
          },
          "effect": {
            "type": "string",
            "enum": [
              "APPLY_TO_ORDER",
              "APPLY_TO_ITEMS",
              "APPLY_TO_ITEMS_PROPORTIONALLY",
              "APPLY_TO_ITEMS_PROPORTIONALLY_BY_QUANTITY",
              "APPLY_TO_ITEMS_BY_QUANTITY",
              "ADD_MISSING_ITEMS",
              "ADD_NEW_ITEMS",
              "ADD_MANY_ITEMS"
            ],
            "nullable": true
          },
          "is_dynamic": {
            "type": "boolean",
            "description": "Flag indicating whether the discount was calculated using a formula.",
            "nullable": true
          },
          "unit_off": {
            "type": "integer",
            "description": "Number of units to be granted a full value discount.",
            "nullable": true
          },
          "unit_off_formula": {
            "type": "string",
            "description": "Formula used to calculate the number of units.",
            "nullable": true
          },
          "unit_type": {
            "type": "string",
            "description": "The product deemed as free, chosen from product inventory (e.g. time, items).",
            "nullable": true
          },
          "product": {
            "title": "DiscountProduct",
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Unique product ID, assigned by Voucherify.",
                "nullable": true
              },
              "source_id": {
                "type": "string",
                "description": "Product's source ID.",
                "nullable": true
              },
              "name": {
                "type": "string",
                "description": "Product name.",
                "nullable": true
              }
            },
            "required": [],
            "nullable": true
          },
          "sku": {
            "$ref": "#/components/schemas/SimpleSkuDiscountUnit"
          },
          "units": {
            "title": "DiscountUnits",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DiscountUnitMultipleOneUnit"
            },
            "nullable": true
          },
          "percent_off": {
            "type": "number",
            "description": "The percent discount that the customer will receive.",
            "nullable": true
          },
          "percent_off_formula": {
            "type": "string",
            "nullable": true
          },
          "amount_limit": {
            "type": "number",
            "description": "Upper limit allowed to be applied as a discount. Value is multiplied by 100 to precisely represent 2 decimal places. For example, a $6 maximum discount is written as 600.",
            "nullable": true
          },
          "fixed_amount": {
            "type": "number",
            "description": "Sets a fixed value for an order total or the item price. The value is multiplied by 100 to precisely represent 2 decimal places. For example, a $10 discount is written as 1000. If the fixed amount is calculated by the formula, i.e. the `fixed_amount_formula` parameter is present in the fixed amount definition, this value becomes the **fallback value**. As a result, if the formula cannot be calculated due to missing metadata, for example, this value will be used as the fixed value.",
            "nullable": true
          },
          "fixed_amount_formula": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "DiscountUnitMultipleOneUnit": {
        "title": "DiscountUnitMultipleOneUnit",
        "type": "object",
        "properties": {
          "unit_off": {
            "type": "number",
            "description": "Number of units to be granted a full value discount.",
            "nullable": true
          },
          "unit_off_formula": {
            "type": "string",
            "description": "Formula used to calculate the number of units.",
            "nullable": true
          },
          "effect": {
            "type": "string",
            "enum": [
              "ADD_NEW_ITEMS",
              "ADD_MISSING_ITEMS"
            ],
            "description": "Defines how the unit is added to the customer's order.\n\n",
            "nullable": true
          },
          "unit_type": {
            "type": "string",
            "description": "The product deemed as free, chosen from product inventory (e.g. time, items).",
            "nullable": true
          },
          "product": {
            "$ref": "#/components/schemas/SimpleProductDiscountUnit"
          },
          "sku": {
            "$ref": "#/components/schemas/SimpleSkuDiscountUnit"
          }
        },
        "required": []
      },
      "EarningRule": {
        "title": "EarningRule",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Assigned by the Voucherify API, identifies the earning rule object.",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp representing the date and time when the earning rule was created. The value is shown in the ISO 8601 format.",
            "nullable": true
          },
          "loyalty": {
            "title": "EarningRuleLoyalty",
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "FIXED",
                  "PROPORTIONAL"
                ],
                "nullable": true
              },
              "points": {
                "type": "integer",
                "description": "Defines how the points will be added to the loyalty card. FIXED adds a fixed number of points.",
                "nullable": true
              },
              "calculation_type": {
                "type": "string",
                "enum": [
                  "ORDER_AMOUNT",
                  "ORDER_TOTAL_AMOUNT",
                  "ORDER_METADATA",
                  "ORDER_ITEMS_QUANTITY",
                  "ORDER_ITEMS_AMOUNT",
                  "ORDER_ITEMS_SUBTOTAL_AMOUNT",
                  "CUSTOMER_METADATA",
                  "CUSTOM_EVENT_METADATA"
                ],
                "nullable": true
              },
              "order": {
                "title": "EarningRuleLoyaltyOrder",
                "type": "object",
                "properties": {
                  "amount": {
                    "title": "EarningRuleLoyaltyOrderAmount",
                    "type": "object",
                    "required": [],
                    "description": "Defines the ratio based on the property defined in the calculation_type parameter. For every set of value (1, 10, etc) defined in the every parameter for the property defined in calculation_type, give the customer the number of points defined in the points parameter. In other words, for every calculation_type, give points.",
                    "properties": {
                      "every": {
                        "type": "integer",
                        "description": "Value is multiplied by 100 to precisely represent 2 decimal places. For example, a $10 order amount is written as 1000.",
                        "nullable": true
                      },
                      "points": {
                        "type": "integer",
                        "description": "Number of points to be awarded, i.e. how many points to be added to the loyalty card.",
                        "nullable": true
                      }
                    },
                    "nullable": true
                  },
                  "total_amount": {
                    "title": "EarningRuleLoyaltyOrderTotalAmount",
                    "type": "object",
                    "required": [],
                    "description": "Defines the ratio based on the property defined in the calculation_type parameter. For every set of value (1, 10, etc) defined in the every parameter for the property defined in calculation_type, give the customer the number of points defined in the points parameter. In other words, for every calculation_type, give points.",
                    "properties": {
                      "every": {
                        "type": "integer",
                        "description": "Value is multiplied by 100 to precisely represent 2 decimal places. For example, a $10 order amount is written as 1000.",
                        "nullable": true
                      },
                      "points": {
                        "type": "integer",
                        "description": "Number of points to be awarded, i.e. how many points to be added to the loyalty card.",
                        "nullable": true
                      }
                    },
                    "nullable": true
                  },
                  "metadata": {
                    "title": "EarningRuleLoyaltyOrderMetadata",
                    "type": "object",
                    "required": [],
                    "description": "Defines the ratio based on the property defined in the calculation_type parameter. For every given increment of value (1, 10, etc) defined in the every parameter for the property defined in calculation_type, give the customer the number of points defined in the points parameter. In other words, for every order metadata property value, give points.",
                    "properties": {
                      "every": {
                        "type": "integer",
                        "description": "For how many increments of the order metadata property to grant points for.",
                        "nullable": true
                      },
                      "points": {
                        "type": "integer",
                        "description": "Number of points to be awarded, i.e. how many points to be added to the loyalty card.",
                        "nullable": true
                      },
                      "property": {
                        "type": "string",
                        "description": "Order metadata property.",
                        "nullable": true
                      }
                    },
                    "nullable": true
                  }
                },
                "nullable": true
              },
              "order_items": {
                "title": "EarningRuleLoyaltyOrderItems",
                "type": "object",
                "properties": {
                  "quantity": {
                    "title": "EarningRuleLoyaltyOrderItemsQuantity",
                    "type": "object",
                    "required": [],
                    "description": "Defines the ratio based on the property defined in the calculation_type parameter. For every set of value (1, 10, etc) defined in the every parameter for the property defined in calculation_type, give the customer the number of points defined in the points parameter. In other words, for every calculation_type, give points.",
                    "properties": {
                      "every": {
                        "type": "integer",
                        "description": "Value is multiplied by 100 to precisely represent 2 decimal places. For example, a $10 order amount is written as 1000.",
                        "nullable": true
                      },
                      "points": {
                        "type": "integer",
                        "description": "Number of points to be awarded, i.e. how many points to be added to the loyalty card.",
                        "nullable": true
                      },
                      "object": {
                        "type": "string",
                        "description": "Type of object taken under consideration.",
                        "enum": [
                          "products_collection",
                          "product",
                          "sku"
                        ],
                        "nullable": true
                      },
                      "id": {
                        "type": "string",
                        "description": "Unique ID of the resource, i.e. pc_75U0dHlr7u75BJodrW1AE3t6, prod_0bae32322150fd0546, or sku_0b7d7dfb090be5c619.",
                        "nullable": true
                      }
                    },
                    "nullable": true
                  },
                  "amount": {
                    "title": "EarningRuleLoyaltyOrderItemsAmount",
                    "type": "object",
                    "required": [],
                    "description": "Defines the ratio based on the property defined in the calculation_type parameter. For every set of value (1, 10, etc) defined in the every parameter for the property defined in calculation_type, give the customer the number of points defined in the points parameter. In other words, for every calculation_type, give points.",
                    "properties": {
                      "every": {
                        "type": "integer",
                        "description": "Value is multiplied by 100 to precisely represent 2 decimal places. For example, a $10 order amount is written as 1000.",
                        "nullable": true
                      },
                      "points": {
                        "type": "integer",
                        "description": "Number of points to be awarded, i.e. how many points to be added to the loyalty card.",
                        "nullable": true
                      },
                      "object": {
                        "type": "string",
                        "description": "Type of object taken under consideration.",
                        "enum": [
                          "products_collection",
                          "product",
                          "sku"
                        ],
                        "nullable": true
                      },
                      "id": {
                        "type": "string",
                        "description": "Unique ID of the resource, i.e. pc_75U0dHlr7u75BJodrW1AE3t6, prod_0bae32322150fd0546, or sku_0b7d7dfb090be5c619.",
                        "nullable": true
                      }
                    },
                    "nullable": true
                  },
                  "subtotal_amount": {
                    "title": "EarningRuleLoyaltyOrderItemsSubtotalAmount",
                    "type": "object",
                    "required": [],
                    "description": "Defines the ratio based on the property defined in the calculation_type parameter. For every set of value (1, 10, etc) defined in the every parameter for the property defined in calculation_type, give the customer the number of points defined in the points parameter. In other words, for every calculation_type, give points.",
                    "properties": {
                      "every": {
                        "type": "integer",
                        "description": "Value is multiplied by 100 to precisely represent 2 decimal places. For example, a $10 order amount is written as 1000.",
                        "nullable": true
                      },
                      "points": {
                        "type": "integer",
                        "description": "Number of points to be awarded, i.e. how many points to be added to the loyalty card.",
                        "nullable": true
                      },
                      "object": {
                        "type": "string",
                        "description": "Type of object taken under consideration.",
                        "enum": [
                          "products_collection",
                          "product",
                          "sku"
                        ],
                        "nullable": true
                      },
                      "id": {
                        "type": "string",
                        "description": "Unique ID of the resource, i.e. pc_75U0dHlr7u75BJodrW1AE3t6, prod_0bae32322150fd0546, or sku_0b7d7dfb090be5c619.",
                        "nullable": true
                      }
                    },
                    "nullable": true
                  }
                },
                "nullable": true
              },
              "customer": {
                "title": "EarningRuleLoyaltyCustomer",
                "type": "object",
                "required": [],
                "properties": {
                  "metadata": {
                    "title": "EarningRuleLoyaltyCustomerMetadata",
                    "type": "object",
                    "required": [],
                    "description": "Defines the ratio based on the property defined in the calculation_type parameter. For every given increment of value (1, 10, etc) defined in the every parameter for the property defined in calculation_type, give the customer the number of points defined in the points parameter. In other words, for every order metadata property value, give points.",
                    "properties": {
                      "every": {
                        "type": "integer",
                        "description": "For how many increments of the customer metadata property to grant points for.",
                        "nullable": true
                      },
                      "points": {
                        "type": "integer",
                        "description": "Number of points to be awarded, i.e. how many points to be added to the loyalty card.",
                        "nullable": true
                      },
                      "property": {
                        "type": "string",
                        "description": "Customer metadata property.",
                        "nullable": true
                      }
                    },
                    "nullable": true
                  }
                },
                "nullable": true
              },
              "custom_event": {
                "title": "EarningRuleLoyaltyCustomEvent",
                "type": "object",
                "required": [],
                "properties": {
                  "metadata": {
                    "title": "EarningRuleLoyaltyCustomEventMetadata",
                    "type": "object",
                    "required": [],
                    "description": "Defines the ratio based on the property defined in the calculation_type parameter. For every given increment of value (1, 10, etc) defined in the every parameter for the property defined in calculation_type, give the customer the number of points defined in the points parameter. In other words, for every order metadata property value, give points.",
                    "properties": {
                      "every": {
                        "type": "integer",
                        "description": "For how many increments of the customer metadata property to grant points for.",
                        "nullable": true
                      },
                      "points": {
                        "type": "integer",
                        "description": "Number of points to be awarded, i.e. how many points to be added to the loyalty card.",
                        "nullable": true
                      },
                      "property": {
                        "type": "string",
                        "description": "\nCustom event metadata property.",
                        "nullable": true
                      }
                    },
                    "nullable": true
                  }
                },
                "nullable": true
              }
            },
            "nullable": true
          },
          "event": {
            "$ref": "#/components/schemas/EarningRuleEvent"
          },
          "custom_event": {
            "title": "EarningRuleCustomEvent",
            "description": "Contains details about the custom event.",
            "type": "object",
            "properties": {
              "schema_id": {
                "description": "Unique identifier of the custom event schema",
                "type": "string",
                "nullable": true
              }
            },
            "required": [],
            "nullable": true
          },
          "segment": {
            "title": "EarningRuleSegment",
            "type": "object",
            "description": "Contains the ID of a customer segment. Required for the `customer.segment.entered` option in the event.",
            "properties": {
              "id": {
                "type": "string",
                "description": "Contains a unique identifier of a customer segment. Assigned by the Voucherify API.",
                "nullable": true
              }
            },
            "required": [],
            "nullable": true
          },
          "loyalty_tier": {
            "title": "EarningRuleLoyaltyTier",
            "type": "object",
            "description": "Defines the tier associated with the earning rule definition.",
            "properties": {
              "id": {
                "type": "string",
                "description": "Unique loyalty tier ID associated with the earning rule.    \n\n- `__ANY__`: any loyalty tier within the campaign",
                "example": "ltr_pudTGWasuIqxdiDM0go31OV1",
                "nullable": true
              }
            },
            "nullable": true
          },
          "pending_points": {
            "title": "EarningRulePendingPoints",
            "type": "object",
            "description": "Defines the configuration for pending points. Pending points can be used only with the `order.paid` event.",
            "properties": {
              "period_type": {
                "type": "string",
                "description": "Defines the type of the period during which the points are in the pending state. Currently, only `DAY` value is accepted.",
                "default": "DAY",
                "enum": [
                  "DAY"
                ],
                "nullable": true
              },
              "period_value": {
                "type": "integer",
                "description": "Defines for how long the points are in the pending state. The minimum value is 1, maximum is 90.",
                "minimum": 1,
                "maximum": 90,
                "nullable": true
              }
            },
            "nullable": true
          },
          "source": {
            "title": "EarningRuleSource",
            "type": "object",
            "required": [],
            "description": "Contains the custom earning rule name and parent campaign.",
            "properties": {
              "banner": {
                "type": "string",
                "description": "Name of the earning rule. This is displayed as a header for the earning rule in the Dashboard.",
                "nullable": true
              },
              "object_id": {
                "type": "string",
                "description": "A unique campaign identifier assigned by the Voucherify API.",
                "nullable": true
              },
              "object_type": {
                "type": "string",
                "description": "Defines the object associated with the earning rule. Defaults to `campaign`.",
                "default": "campaign",
                "enum": [
                  "campaign"
                ],
                "nullable": true
              }
            },
            "nullable": true
          },
          "object": {
            "type": "string",
            "default": "earning_rule",
            "enum": [
              "earning_rule"
            ],
            "description": "The type of the object represented by JSON. Default is earning_rule.",
            "nullable": true
          },
          "automation_id": {
            "type": "string",
            "description": "For internal use by Voucherify.",
            "nullable": true
          },
          "start_date": {
            "type": "string",
            "description": "Start date defines when the earning rule starts to be active. Activation timestamp is presented in the ISO 8601 format. The earning rule is inactive before this date. If you do not define the start date for an earning rule, it will inherit the campaign start date by default.",
            "nullable": true
          },
          "expiration_date": {
            "type": "string",
            "description": "Expiration date defines when the earning rule expires. Expiration timestamp is presented in the ISO 8601 format. The earning rule is inactive after this date. If you do not define the expiration date for an earning rule, it will inherit the campaign expiration date by default.",
            "nullable": true
          },
          "validity_timeframe": {
            "$ref": "#/components/schemas/ValidityTimeframe"
          },
          "validity_day_of_week": {
            "$ref": "#/components/schemas/ValidityDayOfWeek"
          },
          "validity_hours": {
            "$ref": "#/components/schemas/ValidityHours"
          },
          "metadata": {
            "title": "EarningRuleMetadata",
            "type": "object",
            "description": "The metadata object stores all custom attributes assigned to the earning rule. A set of key/value pairs that you can attach to an earning rule object. It can be useful for storing additional information about the earning rule in a structured format.",
            "nullable": true
          },
          "expiration_rules": {
            "$ref": "#/components/schemas/EarningRuleExpirationRules"
          },
          "validation_rule_id": {
            "type": "string",
            "nullable": true,
            "description": "A unique validation rule identifier assigned by the Voucherify API. The validation rule is verified before points are added to the balance."
          },
          "updated_at": {
            "type": "string",
            "nullable": true,
            "format": "date-time",
            "description": "Timestamp representing the date and time when the earning rule was last updated in ISO 8601 format."
          },
          "active": {
            "type": "boolean",
            "description": "A flag to toggle the earning rule on or off. You can disable an earning rule even though it's within the active period defined by the start_date and expiration_date of the campaign or the earning rule's own start_date and expiration_date.\n\n- `true` indicates an active earning rule\n- `false` indicates an inactive earning rule",
            "nullable": true
          }
        }
      },
      "EarningRuleEvent": {
        "title": "EarningRuleEvent",
        "example": "`order.paid`, `customer.segment.entered`, `customer.loyalty.tier.upgraded`, `customer.loyalty.tier.downgraded`, `customer.loyalty.tier.prolonged`, `customer.loyalty.tier.joined`, `customer.loyalty.tier.left`",
        "type": "string"
      },
      "EarningRuleExpirationRules": {
        "title": "EarningRuleExpirationRules",
        "type": "object",
        "description": "Defines the loyalty point expiration rule. This expiration rule applies only to this earning rule and supersedes `expiration_rules` defined in the `voucher.loyalty_card` object.",
        "properties": {
          "period_type": {
            "type": "string",
            "description": "Type of period. Can be set for `MONTH` or `FIXED_DAY_OF_YEAR`. `MONTH` requires the `period_value` field. `FIXED_DAY_OF_YEAR` requires the `fixed_month` and `fixed_day` fields.",
            "enum": [
              "FIXED_DAY_OF_YEAR",
              "MONTH"
            ],
            "nullable": true
          },
          "period_value": {
            "type": "integer",
            "description": "Value of the period. Required for the `period_type: MONTH`.",
            "nullable": true
          },
          "rounding_type": {
            "type": "string",
            "description": "Type of rounding of the expiration period. Optional for the `period_type: MONTH`.",
            "enum": [
              "END_OF_MONTH",
              "END_OF_QUARTER",
              "END_OF_HALF_YEAR",
              "END_OF_YEAR",
              "PARTICULAR_MONTH"
            ],
            "nullable": true
          },
          "rounding_value": {
            "type": "integer",
            "description": "Value of rounding of the expiration period. Required for the `rounding_type`.",
            "nullable": true
          },
          "fixed_month": {
            "type": "integer",
            "description": "Determines the month when the points expire; `1` is January, `2` is February, and so on. Required for the `period_type: FIXED_DAY_OF_YEAR`.",
            "minimum": 1,
            "maximum": 12,
            "nullable": true
          },
          "fixed_day": {
            "type": "integer",
            "description": "Determines the day of the month when the points expire. Required for the `period_type: FIXED_DAY_OF_YEAR`.",
            "minimum": 1,
            "maximum": 31,
            "nullable": true
          }
        },
        "required": []
      },
      "Error": {
        "title": "Error",
        "type": "object",
        "description": "Error details",
        "properties": {
          "code": {
            "type": "integer",
            "description": "Error's HTTP status code.",
            "nullable": true
          },
          "key": {
            "type": "string",
            "description": "Short string describing the kind of error which occurred.",
            "nullable": true
          },
          "message": {
            "type": "string",
            "description": "A human-readable message providing a short description of the error.",
            "nullable": true
          },
          "details": {
            "type": "string",
            "description": "A human-readable message providing more details about the error.",
            "nullable": true
          },
          "request_id": {
            "type": "string",
            "example": "v-0a885062c80375740f",
            "description": "This ID is useful when troubleshooting and/or finding the root cause of an error response by our support team.",
            "nullable": true
          },
          "resource_id": {
            "type": "string",
            "description": "Unique resource ID that can be used in another endpoint to get more details.",
            "example": "rf_0c5d710a87c8a31f86",
            "nullable": true
          },
          "resource_type": {
            "type": "string",
            "description": "The resource type.",
            "example": "voucher",
            "nullable": true
          },
          "error": {
            "title": "ErrorError",
            "type": "object",
            "description": "Includes additional information about the error.",
            "properties": {
              "message": {
                "type": "string",
                "description": "The message configured by the user in a validation rule.",
                "nullable": true
              }
            },
            "nullable": true
          }
        },
        "required": []
      },
      "Export": {
        "title": "Export",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique export ID.",
            "nullable": true
          },
          "object": {
            "type": "string",
            "default": "export",
            "enum": [
              "export"
            ],
            "description": "The type of object being represented. This object stores information about the export.",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp representing the date and time when the export was scheduled in ISO 8601 format.",
            "nullable": true
          },
          "status": {
            "enum": [
              "SCHEDULED",
              "IN_PROGRESS",
              "DONE",
              "ERROR"
            ],
            "type": "string",
            "description": "Status of the export. Informs you whether the export has already been completed, i.e. indicates whether the file containing the exported data has been generated.",
            "nullable": true
          },
          "channel": {
            "type": "string",
            "description": "The channel through which the export was triggered.",
            "nullable": true
          },
          "result": {
            "title": "ExportResult",
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "description": "URL of the CSV file location. It contains the token used for authorization in the Download export method.",
                "nullable": true
              }
            },
            "nullable": true
          },
          "user_id": {
            "type": "string",
            "nullable": true,
            "description": "Identifies the specific user who initiated the export through the Voucherify Dashboard; returned when the channel value is WEBSITE."
          },
          "exported_object": {
            "type": "string",
            "enum": [
              "voucher",
              "redemption",
              "customer",
              "publication",
              "order",
              "points_expiration",
              "voucher_transactions"
            ],
            "nullable": true
          },
          "parameters": {
            "title": "ExportParameters",
            "type": "object",
            "properties": {
              "order": {
                "type": "string",
                "enum": [
                  "-created_at",
                  "created_at",
                  "-updated_at",
                  "updated_at",
                  "-code",
                  "code",
                  "-id",
                  "id",
                  "-voucher_code",
                  "voucher_code",
                  "-tracking_id",
                  "tracking_id",
                  "-customer_id",
                  "customer_id",
                  "-name",
                  "name",
                  "-email",
                  "email",
                  "-source_id",
                  "source_id",
                  "-channel",
                  "channel",
                  "-status",
                  "status",
                  "-expires_at",
                  "expires_at"
                ],
                "nullable": true
              },
              "fields": {
                "title": "ExportParametersFields",
                "type": "array",
                "items": {
                  "title": "ExportParametersFieldsItem",
                  "type": "string",
                  "enum": [
                    "code",
                    "voucher_type",
                    "value",
                    "formula",
                    "discount_type",
                    "campaign",
                    "category",
                    "start_date",
                    "expiration_date",
                    "gift_balance",
                    "loyalty_balance",
                    "redemption_quantity",
                    "redemption_count",
                    "active",
                    "qr_code",
                    "bar_code",
                    "metadata",
                    "id",
                    "is_referral_code",
                    "created_at",
                    "updated_at",
                    "validity_timeframe_interval",
                    "validity_timeframe_duration",
                    "validity_day_of_week",
                    "discount_amount_limit",
                    "campaign_id",
                    "additional_info",
                    "customer_id",
                    "discount_effect",
                    "discount_unit_type",
                    "discount_unit_effect",
                    "validation_rules_id",
                    "customer_source_id",
                    "object",
                    "date",
                    "voucher_code",
                    "promotion_tier_id",
                    "customer_name",
                    "tracking_id",
                    "order_id",
                    "order_amount",
                    "gift_amount",
                    "loyalty_points",
                    "result",
                    "failure_code",
                    "failure_message",
                    "name",
                    "description",
                    "email",
                    "source_id",
                    "address_city",
                    "address_state",
                    "address_line_1",
                    "address_line_2",
                    "address_country",
                    "address_postal_code",
                    "redemptions_total_redeemed",
                    "redemptions_total_failed",
                    "redemptions_total_succeeded",
                    "redemptions_total_rolled_back",
                    "redemptions_total_rollback_failed",
                    "redemptions_total_rollback_succeeded",
                    "orders_total_amount",
                    "orders_total_count",
                    "orders_average_amount",
                    "orders_last_order_amount",
                    "orders_last_order_date",
                    "loyalty_referred_customers",
                    "phone",
                    "birthday",
                    "birthdate",
                    "channel",
                    "is_winner",
                    "status",
                    "amount",
                    "discount_amount",
                    "items_discount_amount",
                    "total_discount_amount",
                    "total_amount",
                    "referrer_id",
                    "voucher_id",
                    "points",
                    "expires_at",
                    "type",
                    "reason",
                    "source",
                    "balance",
                    "related_transaction_id",
                    "details"
                  ]
                },
                "nullable": true,
                "description": "Array of strings containing the data in the export. These fields define the headers in the CSV file."
              },
              "filters": {
                "title": "ExportParametersFilters",
                "nullable": true,
                "type": "object",
                "description": "Allowed additional properties must start with \"metadata.\" or \"redemption.\" and Allowed additional properties must start with \"metadata.\" and Allowed additional properties must start with \"metadata.\" or \"address.\" or \"summary.\" or \"loyalty.\" or \"loyalty_tier.\" or \"loyalty_points.\" or \"system_metadata.\""
              }
            },
            "nullable": true
          }
        }
      },
      "ExportCampaignTransactionsFilters": {
        "title": "ExportCampaignTransactionsFilters",
        "description": "Data filters and their conditions to narrow down the returned data.",
        "type": "object",
        "properties": {
          "junction": {
            "$ref": "#/components/schemas/Junction"
          },
          "created_at": {
            "$ref": "#/components/schemas/FilterConditionsDateTime"
          },
          "voucher_id": {
            "$ref": "#/components/schemas/FilterConditionsString"
          }
        }
      },
      "ExportOrderFields": {
        "title": "ExportOrderFields",
        "type": "string",
        "enum": [
          "id",
          "source_id",
          "created_at",
          "updated_at",
          "status",
          "amount",
          "discount_amount",
          "items_discount_amount",
          "total_discount_amount",
          "total_amount",
          "customer_id",
          "referrer_id",
          "metadata"
        ]
      },
      "ExportOrderFilters": {
        "title": "ExportOrderFilters",
        "description": "Allowed additional properties must start with \"metadata.\"",
        "type": "object"
      },
      "ExportOrderOrder": {
        "title": "ExportOrderOrder",
        "type": "string",
        "enum": [
          "-created_at",
          "created_at",
          "-updated_at",
          "updated_at",
          "-status",
          "status"
        ]
      },
      "ExportVoucherTransactionsFields": {
        "title": "ExportVoucherTransactionsFields",
        "type": "string",
        "enum": [
          "id",
          "campaign_id",
          "voucher_id",
          "type",
          "source_id",
          "reason",
          "source",
          "balance",
          "amount",
          "related_transaction_id",
          "created_at",
          "details"
        ]
      },
      "ExportVoucherTransactionsFilters": {
        "title": "ExportVoucherTransactionsFilters",
        "type": "object",
        "properties": {
          "junction": {
            "$ref": "#/components/schemas/Junction"
          },
          "created_at": {
            "$ref": "#/components/schemas/FieldConditions"
          },
          "voucher_id": {
            "$ref": "#/components/schemas/FieldConditions"
          },
          "campaign_id": {
            "$ref": "#/components/schemas/FieldConditions"
          }
        }
      },
      "ExportVoucherTransactionsOrder": {
        "title": "ExportVoucherTransactionsOrder",
        "type": "string",
        "enum": [
          "-created_at",
          "created_at"
        ]
      },
      "FilterConditionsDateTime": {
        "title": "FilterConditionsDateTime",
        "type": "object",
        "description": "Data filters used to narrow down the data records to be returned in the result.",
        "properties": {
          "$after": {
            "type": "string",
            "description": "Value is after this date. The value for this parameter is shown in the ISO 8601 format.",
            "format": "date-time",
            "example": "2024-01-01T00:00:00.000Z",
            "nullable": true
          },
          "$before": {
            "type": "string",
            "description": "Value is before this date. The value for this parameter is shown in the ISO 8601 format.",
            "format": "date-time",
            "example": "2024-01-01T00:00:00.000Z",
            "nullable": true
          },
          "$has_value": {
            "type": "string",
            "description": "Value is NOT null. The value for this parameter is an empty string.",
            "nullable": true
          },
          "$is_unknown": {
            "type": "string",
            "description": "Value is null. The value for this parameter is an empty string.",
            "nullable": true
          },
          "$more_than": {
            "type": "integer",
            "description": "Value is more days ago before the current date and time, e.g. more than `10` days ago.",
            "nullable": true
          },
          "$less_than": {
            "type": "integer",
            "description": "Value is less days before the current date and time, e.g. less than `10` days ago.",
            "nullable": true
          }
        }
      },
      "FilterConditionsString": {
        "title": "FilterConditionsString",
        "type": "object",
        "description": "Data filters used to narrow down the data records to be returned in the result.",
        "properties": {
          "$in": {
            "title": "FilterConditionsStringIn",
            "type": "array",
            "description": "Array of resource values that should be included in the results (multiple values).",
            "items": {
              "title": "FilterConditionsStringInItem",
              "type": "string"
            },
            "nullable": true
          },
          "$not_in": {
            "title": "FilterConditionsStringNotIn",
            "type": "array",
            "description": "Array of resource values that should be included in the results (multiple values).",
            "items": {
              "title": "FilterConditionsStringNotInItem",
              "type": "string"
            },
            "nullable": true
          },
          "$is": {
            "type": "string",
            "description": "Value is exactly this value (single value).",
            "nullable": true
          },
          "$is_not": {
            "type": "string",
            "description": "Results omit this value (single value).",
            "nullable": true
          },
          "$has_value": {
            "type": "string",
            "description": "Value is NOT null. The value for this parameter is an empty string.",
            "nullable": true
          },
          "$is_unknown": {
            "type": "string",
            "description": "Value is null. The value for this parameter is an empty string.",
            "nullable": true
          },
          "$starts_with": {
            "type": "string",
            "description": "Value starts with the specified string.",
            "nullable": true
          },
          "$ends_with": {
            "type": "string",
            "description": "Value ends with the specified string.",
            "nullable": true
          }
        }
      },
      "Gift": {
        "title": "Gift",
        "type": "object",
        "description": "Contains current gift card balance information.",
        "properties": {
          "amount": {
            "type": "number",
            "description": "Total gift card income over the lifetime of the card. The value is multiplied by 100 to represent 2 decimal places. For example `10000 cents` for `$100.00`.",
            "nullable": true
          },
          "subtracted_amount": {
            "type": "integer",
            "description": "Total amount of subtracted credits over the gift card lifetime.",
            "nullable": true
          },
          "balance": {
            "type": "number",
            "description": "Available funds. The value is multiplied by 100 to represent 2 decimal places. For example `10000 cents` for `$100.00`. `balance` = `amount` - `subtracted_amount` - `redemption.redeemed_amount`.",
            "nullable": true
          },
          "effect": {
            "type": "string",
            "description": "Defines how the credits are applied to the customer's order.",
            "enum": [
              "APPLY_TO_ORDER",
              "APPLY_TO_ITEMS"
            ],
            "nullable": true
          }
        },
        "required": []
      },
      "InapplicableToResultList": {
        "title": "InapplicableToResultList",
        "type": "object",
        "properties": {
          "data": {
            "title": "InapplicableToResultListData",
            "type": "array",
            "description": "Contains array of items to which the discount cannot apply.",
            "items": {
              "$ref": "#/components/schemas/InapplicableTo"
            },
            "nullable": true
          },
          "total": {
            "type": "integer",
            "minimum": 0,
            "description": "Total number of objects defining included products, SKUs, or product collections.",
            "nullable": true
          },
          "object": {
            "type": "string",
            "default": "list",
            "enum": [
              "list"
            ],
            "description": "The type of the object represented by JSON.",
            "nullable": true
          },
          "data_ref": {
            "type": "string",
            "description": "The type of the object represented by JSON.",
            "default": "data",
            "enum": [
              "data"
            ],
            "nullable": true
          }
        },
        "required": []
      },
      "Junction": {
        "title": "Junction",
        "description": "Logical Operator Between Filters. Filter by conditions set on the `junction` parameter indicating how the `conditions` should be accounted for in the query. An `AND` is an all-inclusive logical operator, meaning the `AND` operator displays a record if **ALL** the conditions separated by AND are TRUE, while  an `OR` operator displays a record if **ANY** of the conditions separated by OR is TRUE.",
        "enum": [
          "and",
          "or"
        ],
        "type": "string"
      },
      "ListPublicationsItemVoucher": {
        "title": "ListPublicationsItemVoucher",
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Voucher code.",
            "nullable": true
          },
          "object": {
            "type": "string",
            "description": "The type of the object represented by JSON.",
            "default": "voucher",
            "enum": [
              "voucher"
            ],
            "nullable": true
          },
          "campaign": {
            "description": "Campaign name",
            "type": "string",
            "nullable": true
          },
          "gift": {
            "$ref": "#/components/schemas/Gift"
          },
          "loyalty_card": {
            "title": "ListPublicationsItemVoucherLoyaltyCard",
            "description": "Defines the loyalty card details.",
            "type": "object",
            "nullable": true
          },
          "discount": {
            "$ref": "#/components/schemas/Discount"
          },
          "is_referral_code": {
            "type": "boolean",
            "description": "Flag indicating whether this voucher is a referral code; `true` for campaign type `REFERRAL_PROGRAM`.",
            "nullable": true
          }
        },
        "required": []
      },
      "Location": {
        "title": "Location",
        "type": "object",
        "description": "This is an object representing a location.",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique location ID, assigned by the Voucherify API.",
            "example": "loc_NoMGXmHO9OUs7iz9mGWpamma",
            "nullable": true
          },
          "object": {
            "type": "string",
            "description": "The type of the object represented by JSON. This object stores information about a `location`.",
            "default": "location",
            "enum": [
              "location"
            ],
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Location name.",
            "nullable": true
          },
          "shape": {
            "title": "LocationShape",
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "circle",
                  "polygon"
                ],
                "nullable": true
              },
              "format": {
                "type": "string",
                "enum": [
                  "distance",
                  "geojson"
                ],
                "nullable": true
              },
              "distance": {
                "title": "LocationShapeDistance",
                "type": "object",
                "description": "Defines the parameters for the circle.",
                "properties": {
                  "center": {
                    "type": "string",
                    "description": "Center of the circle identified by GPS coordinates in decimal degrees.",
                    "example": "geo:40.79372699823857,-74.15092132694554",
                    "nullable": true
                  },
                  "radius": {
                    "type": "string",
                    "description": "Defines the radius of the circle.",
                    "nullable": true
                  }
                },
                "nullable": true
              },
              "geojson": {
                "title": "LocationShapeGeojson",
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Polygon",
                      "MultiPolygon"
                    ],
                    "nullable": true
                  },
                  "coordinates": {
                    "title": "LocationShapeGeojsonCoordinates",
                    "type": "array",
                    "items": {
                      "title": "LocationShapeGeojsonCoordinatesItem",
                      "type": "array",
                      "items": {
                        "title": "LocationShapeGeojsonCoordinatesItemItem",
                        "type": "integer"
                      }
                    },
                    "nullable": true
                  }
                },
                "nullable": true
              }
            },
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "example": "2022-02-14T15:12:06.817Z",
            "description": "Timestamp representing the date and time when the location was created. The value is shown in the ISO 8601 format.",
            "format": "date-time",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "example": "2022-03-14T15:12:06.817Z",
            "nullable": true,
            "description": "Timestamp representing the date and time when the location was updated. The value is shown in the ISO 8601 format.",
            "format": "date-time"
          }
        },
        "required": []
      },
      "LoyaltiesLoyaltyTierReward": {
        "title": "LoyaltiesLoyaltyTierReward",
        "type": "object",
        "description": "This is an object representing a loyalty tier reward.",
        "properties": {
          "reward": {
            "$ref": "#/components/schemas/Reward"
          },
          "assignment": {
            "$ref": "#/components/schemas/RewardAssignment"
          },
          "object": {
            "description": "The type of the object represented by JSON. This object stores information about the loyalty tier reward.",
            "default": "loyalty_tier_reward",
            "enum": [
              "loyalty_tier_reward"
            ]
          }
        },
        "required": [
          "reward",
          "assignment",
          "object"
        ]
      },
      "LoyaltiesPointsExpirationExportCreateRequestBodyParameters": {
        "title": "LoyaltiesPointsExpirationExportCreateRequestBodyParameters",
        "type": "object",
        "description": "List of fields and filters that will be used to create the export.",
        "properties": {
          "order": {
            "type": "string",
            "description": "How the export is filtered, where the dash `-` preceding a sorting option means sorting in a descending order.",
            "enum": [
              "expires_at",
              "-expires_at"
            ],
            "nullable": true
          },
          "fields": {
            "title": "LoyaltiesPointsExpirationExportCreateRequestBodyParametersFields",
            "type": "array",
            "description": "Array of strings containing the data that was exported. These fields define the headers in the CSV file. \n\n The array can be a combination of any of the following available fields:  \n\n| **Field** | **Definition** | **Example Export** |\n|:---|:---|:---|\n| id | Loyalty points bucket ID. | lopb_Wl1o3EjJIHSNjvO5BDLy4z1n |\n| campaign_id | Campaign ID of the parent loyalty campaign. | camp_7s3uXI44aKfIk5IhmeOPr6ic |\n| voucher_id | Voucher ID of the parent loyalty card. | v_YLn0WVWXSXbUfDvxgrgUbtfJ3SQIY655 |\n| status | Status of the loyalty point bucket. | `ACTIVE` or `EXPIRED` |\n| expires_at | Timestamp in ISO 8601 format representing the date when the points expire. | 2022-06-30 |\n| points | Number of points. | 1000 |",
            "items": {
              "title": "LoyaltiesPointsExpirationExportCreateRequestBodyParametersFieldsItem",
              "type": "string",
              "enum": [
                "id",
                "campaign_id",
                "voucher_id",
                "points",
                "status",
                "expires_at"
              ]
            },
            "nullable": true
          },
          "filters": {
            "$ref": "#/components/schemas/LoyaltiesPointsExpirationExportCreateRequestBodyParametersFilters"
          }
        }
      },
      "LoyaltiesPointsExpirationExportCreateResponseBodyParameters": {
        "title": "LoyaltiesPointsExpirationExportCreateResponseBodyParameters",
        "type": "object",
        "description": "List of fields and filters that were passed in the request body to create the export.",
        "properties": {
          "order": {
            "type": "string",
            "description": "How the export is filtered, where the dash `-` preceding a sorting option means sorting in a descending order.",
            "enum": [
              "expires_at",
              "-expires_at"
            ],
            "nullable": true
          },
          "fields": {
            "title": "LoyaltiesPointsExpirationExportCreateResponseBodyParametersFields",
            "type": "array",
            "description": "Array of strings containing the data that was exported. These fields define the headers in the CSV file. \n\n The array can be a combination of any of the following available fields:  \n\n| **Field** | **Definition** | **Example Export** |\n|:---|:---|:---|\n| id | Loyalty points bucket ID. | lopb_Wl1o3EjJIHSNjvO5BDLy4z1n |\n| campaign_id | Campaign ID of the parent loyalty campaign. | camp_7s3uXI44aKfIk5IhmeOPr6ic |\n| voucher_id | Voucher ID of the parent loyalty card. | v_YLn0WVWXSXbUfDvxgrgUbtfJ3SQIY655 |\n| status | Status of the loyalty points bucket. | `ACTIVE` or `INACTIVE` |\n| expires_at | Timestamp in ISO 8601 format representing the date when the points expire. | 2022-06-30 |\n| points | Number of points. | 1000 |",
            "items": {
              "title": "LoyaltiesPointsExpirationExportCreateResponseBodyParametersFieldsItem",
              "type": "string",
              "enum": [
                "id",
                "campaign_id",
                "voucher_id",
                "points",
                "status",
                "expires_at"
              ]
            },
            "nullable": true
          },
          "filters": {
            "$ref": "#/components/schemas/LoyaltiesPointsExpirationExportCreateResponseBodyParametersFilters"
          }
        }
      },
      "LoyaltiesRewardsCreateAssignmentItemRequestBody": {
        "title": "LoyaltiesRewardsCreateAssignmentItemRequestBody",
        "type": "object",
        "properties": {
          "reward": {
            "type": "string",
            "description": "The ID of the reward that will be assigned to the campaign.",
            "nullable": true
          },
          "parameters": {
            "title": "LoyaltiesRewardsCreateAssignmentItemRequestBodyParameters",
            "type": "object",
            "description": "Defines the cost of the reward.",
            "required": [],
            "properties": {
              "loyalty": {
                "title": "LoyaltiesRewardsCreateAssignmentItemRequestBodyParametersLoyalty",
                "type": "object",
                "description": "Defines the equivalent points value of the reward.",
                "properties": {
                  "points": {
                    "type": "integer",
                    "description": "Number of points that will be subtracted from the loyalty card points balance if the reward is redeemed.",
                    "nullable": true
                  }
                },
                "nullable": true
              }
            },
            "nullable": true
          },
          "validation_rules": {
            "title": "LoyaltiesRewardsCreateAssignmentItemRequestBodyValidationRules",
            "type": "array",
            "items": {
              "title": "LoyaltiesRewardsCreateAssignmentItemRequestBodyValidationRulesItem",
              "type": "string"
            },
            "nullable": true
          }
        }
      },
      "LoyaltiesTransferPoints": {
        "title": "LoyaltiesTransferPoints",
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Unique loyalty card code from which the user wants to transfer loyalty points (source).",
            "nullable": true
          },
          "points": {
            "type": "integer",
            "description": "The number of loyalty points that the user wants to transfer to another loyalty card. The number of points cannot be higher than the current balance on the loyalty card (source).",
            "nullable": true
          },
          "reason": {
            "type": "string",
            "description": "Reason for the transfer.",
            "nullable": true
          },
          "source_id": {
            "type": "string",
            "description": "The merchant's transaction ID if it is different from the Voucherify transaction ID. It is really useful in case of an integration between multiple systems. It can be a transaction ID from a CRM system, database or 3rd-party service.",
            "nullable": true
          }
        },
        "required": []
      },
      "LoyaltyCampaign": {
        "title": "LoyaltyCampaign",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique campaign ID, assigned by Voucherify.",
            "example": "camp_f7fBbQxUuTN7dI7tGOo5XMDA",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Campaign name.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "An optional field to keep any extra textual information about the campaign such as a campaign description and details.",
            "nullable": true
          },
          "campaign_type": {
            "type": "string",
            "default": "LOYALTY_PROGRAM",
            "enum": [
              "LOYALTY_PROGRAM"
            ],
            "description": "Type of campaign.",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "Defines whether the campaign can be updated with new vouchers after campaign creation.    \n\n- `AUTO_UPDATE`: the campaign is dynamic, i.e. vouchers will generate based on set criteria    \n-  `STATIC`: vouchers need to be manually published",
            "enum": [
              "AUTO_UPDATE",
              "STATIC"
            ],
            "nullable": true
          },
          "voucher": {
            "$ref": "#/components/schemas/LoyaltyCampaignVoucher"
          },
          "auto_join": {
            "type": "boolean",
            "description": "Indicates whether customers will be able to auto-join a loyalty campaign if any earning rule is fulfilled.",
            "nullable": true
          },
          "join_once": {
            "type": "boolean",
            "description": "Always set to `true` for loyalty campaigns, meaning customers can join the campaign only once. It can't be changed to `false`.",
            "nullable": true
          },
          "use_voucher_metadata_schema": {
            "type": "boolean",
            "description": "Flag indicating whether the campaign is to use the voucher's metadata schema instead of the campaign metadata schema.",
            "nullable": true
          },
          "validity_timeframe": {
            "$ref": "#/components/schemas/ValidityTimeframe"
          },
          "validity_day_of_week": {
            "$ref": "#/components/schemas/ValidityDayOfWeek"
          },
          "validity_hours": {
            "$ref": "#/components/schemas/ValidityHours"
          },
          "activity_duration_after_publishing": {
            "type": "string",
            "description": "Defines the amount of time the campaign will be active in ISO 8601 format after publishing. For example, a campaign with a `duration` of `P24D` will be valid for a duration of 24 days.",
            "nullable": true
          },
          "vouchers_count": {
            "type": "integer",
            "description": "Total number of unique vouchers in campaign.",
            "nullable": true
          },
          "start_date": {
            "type": "string",
            "format": "date-time",
            "description": "Activation timestamp defines when the campaign starts to be active in ISO 8601 format. Campaign is *inactive before* this date. ",
            "example": "2022-09-20T00:00:00.000Z",
            "nullable": true
          },
          "expiration_date": {
            "type": "string",
            "format": "date-time",
            "description": "Expiration timestamp defines when the campaign expires in ISO 8601 format.  Campaign is *inactive after* this date.",
            "example": "2022-09-30T00:00:00.000Z",
            "nullable": true
          },
          "active": {
            "type": "boolean",
            "description": "A flag to toggle the campaign on or off. You can disable a campaign even though it's within the active period defined by the `start_date` and `expiration_date`.  \n\n- `true` indicates an *active* campaign\n- `false` indicates an *inactive* campaign",
            "nullable": true
          },
          "metadata": {
            "title": "LoyaltyCampaignMetadata",
            "type": "object",
            "description": "The metadata object stores all custom attributes assigned to the campaign. A set of key/value pairs that you can attach to a campaign object. It can be useful for storing additional information about the campaign in a structured format.",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2021-12-01T08:00:50.038Z",
            "description": "Timestamp representing the date and time when the campaign was created. The value is shown in the ISO 8601 format.",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2022-09-20T09:18:19.623Z",
            "description": "Timestamp representing the date and time when the campaign was last updated in ISO 8601 format.",
            "nullable": true
          },
          "category": {
            "type": "string",
            "description": "Unique category name.",
            "nullable": true
          },
          "creation_status": {
            "type": "string",
            "enum": [
              "DONE",
              "IN_PROGRESS",
              "FAILED",
              "DRAFT",
              "MODIFYING"
            ],
            "description": "Indicates the status of the campaign creation.",
            "nullable": true
          },
          "vouchers_generation_status": {
            "type": "string",
            "description": "Indicates the status of the campaign's voucher generation.",
            "enum": [
              "DONE",
              "IN_PROGRESS",
              "FAILED",
              "DRAFT",
              "MODIFYING"
            ],
            "nullable": true
          },
          "readonly": {
            "type": "boolean",
            "description": "Indicates whether the campaign can be only read by a restricted user in the Areas and Stores enterprise feature. It is returned only to restricted users; this field is not returned for users with other roles.",
            "nullable": true
          },
          "protected": {
            "type": "boolean",
            "description": "Indicates whether the resource can be deleted.",
            "nullable": true
          },
          "category_id": {
            "type": "string",
            "nullable": true,
            "description": "Unique category ID that this campaign belongs to.",
            "example": "cat_0b688929a2476386a7"
          },
          "categories": {
            "title": "LoyaltyCampaignCategories",
            "type": "array",
            "description": "Contains details about the category.",
            "items": {
              "$ref": "#/components/schemas/Category"
            },
            "nullable": true
          },
          "object": {
            "type": "string",
            "default": "campaign",
            "description": "The type of the object represented by JSON. This object stores information about the campaign.",
            "nullable": true
          },
          "loyalty_tiers_expiration": {
            "$ref": "#/components/schemas/LoyaltyTiersExpirationAll"
          },
          "validation_rules_assignments": {
            "$ref": "#/components/schemas/ValidationRulesAssignmentsList"
          },
          "access_settings_assignments": {
            "$ref": "#/components/schemas/AccessSettingsCampaignAssignmentsList"
          }
        },
        "required": []
      },
      "LoyaltyCampaignVoucher": {
        "title": "LoyaltyCampaignVoucher",
        "type": "object",
        "description": "Schema model for a campaign voucher.",
        "properties": {
          "type": {
            "type": "string",
            "default": "LOYALTY_CARD",
            "enum": [
              "LOYALTY_CARD"
            ],
            "description": "Type of voucher.",
            "nullable": true
          },
          "loyalty_card": {
            "$ref": "#/components/schemas/CampaignLoyaltyCard"
          },
          "redemption": {
            "title": "LoyaltyCampaignVoucherRedemption",
            "type": "object",
            "description": "Defines the redemption limits on vouchers.",
            "properties": {
              "quantity": {
                "type": "integer",
                "nullable": true,
                "description": "How many times a voucher can be redeemed. A `null` value means unlimited."
              }
            },
            "required": [],
            "nullable": true
          },
          "code_config": {
            "$ref": "#/components/schemas/CodeConfig"
          },
          "is_referral_code": {
            "type": "boolean",
            "description": "Always `false` for a loyalty card voucher",
            "nullable": true
          },
          "start_date": {
            "type": "string",
            "format": "date-time",
            "description": "Activation timestamp defines when the campaign starts to be active in ISO 8601 format. Campaign is *inactive before* this date. ",
            "example": "2022-09-20T00:00:00.000Z",
            "nullable": true
          },
          "expiration_date": {
            "type": "string",
            "format": "date-time",
            "description": "Expiration timestamp defines when the campaign expires in ISO 8601 format.  Campaign is *inactive after* this date.",
            "example": "2022-09-30T00:00:00.000Z",
            "nullable": true
          },
          "validity_timeframe": {
            "$ref": "#/components/schemas/ValidityTimeframe"
          },
          "validity_day_of_week": {
            "$ref": "#/components/schemas/ValidityDayOfWeek"
          },
          "validity_hours": {
            "$ref": "#/components/schemas/ValidityHours"
          }
        },
        "required": [
          "code_config"
        ]
      },
      "LoyaltyCardTransaction": {
        "title": "LoyaltyCardTransaction",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique transaction ID.",
            "nullable": true
          },
          "source_id": {
            "type": "string",
            "nullable": true,
            "description": "The merchant's transaction ID if it is different from the Voucherify transaction ID. It is really useful in case of an integration between multiple systems. It can be a transaction ID from a CRM system, database or 3rd-party service. In case of a redemption, this value is null."
          },
          "voucher_id": {
            "type": "string",
            "description": "Unique voucher ID.",
            "nullable": true
          },
          "campaign_id": {
            "type": "string",
            "description": "Unqiue campaign ID of the voucher's parent campaign if it is part of campaign that generates bulk codes.",
            "nullable": true
          },
          "source": {
            "type": "string",
            "nullable": true,
            "description": "The channel through which the transaction took place, whether through the API or the the Dashboard. In case of a redemption, this value is null."
          },
          "reason": {
            "type": "string",
            "nullable": true,
            "description": "Reason why the transaction occurred. In case of a redemption, this value is null."
          },
          "related_transaction_id": {
            "type": "string",
            "nullable": true,
            "description": "The related transaction ID on the receiving card."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp representing the date and time when the transaction was created. The value is shown in the ISO 8601 format.",
            "nullable": true
          },
          "details": {
            "title": "LoyaltyCardTransactionDetails",
            "type": "object",
            "description": "Contains the detailed information about the transaction.",
            "properties": {
              "balance": {
                "title": "LoyaltyCardTransactionDetailsBalance",
                "type": "object",
                "description": "Contains information on how the balance was affected by the transaction.",
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "The type of voucher whose balance is being adjusted due to the transaction.",
                    "enum": [
                      "loyalty_card",
                      "gift_voucher"
                    ],
                    "nullable": true
                  },
                  "total": {
                    "type": "integer",
                    "description": "The number of all points or credits accumulated on the card as affected by add or subtract operations.",
                    "nullable": true
                  },
                  "object": {
                    "type": "string",
                    "description": "The type of the object represented by the JSON.",
                    "default": "balance",
                    "enum": [
                      "balance"
                    ],
                    "nullable": true
                  },
                  "points": {
                    "type": "integer",
                    "description": "Points added or subtracted in the transaction of a loyalty card.",
                    "nullable": true
                  },
                  "balance": {
                    "type": "integer",
                    "description": "The available points or credits on the card after the transaction as affected by redemption or rollback.",
                    "nullable": true
                  },
                  "operation_type": {
                    "type": "string",
                    "description": "The type of the operation being performed. The operation type is `AUTOMATIC` if it is an automatic redemption.",
                    "enum": [
                      "MANUAL",
                      "AUTOMATIC"
                    ],
                    "nullable": true
                  },
                  "related_object": {
                    "title": "LoyaltyCardTransactionDetailsBalanceRelatedObject",
                    "type": "object",
                    "required": [],
                    "description": "Defines the resource that is being modified with the values that are returned in the balance object.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Identifies the voucher that is being modified. The ID is assigned by the Voucherify API.",
                        "nullable": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The object being modified, i.e. voucher.",
                        "default": "voucher",
                        "enum": [
                          "voucher"
                        ],
                        "nullable": true
                      }
                    },
                    "nullable": true
                  }
                },
                "required": []
              },
              "order": {
                "title": "LoyaltyCardTransactionDetailsOrder",
                "type": "object",
                "description": "Contains information about the original order.",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Unique order ID.",
                    "nullable": true
                  },
                  "source_id": {
                    "type": "string",
                    "description": "The merchant's order ID if it is different from the Voucherify order ID. It is really useful in case of integration between multiple systems. It can be an order ID from CRM, database or 3rd party service.",
                    "nullable": true
                  }
                },
                "required": [],
                "nullable": true
              },
              "event": {
                "title": "LoyaltyCardTransactionDetailsEvent",
                "type": "object",
                "description": "Contains information about the event that triggers the point accrual.",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Unique event ID.",
                    "nullable": true
                  },
                  "type": {
                    "type": "string",
                    "description": "Type of event.",
                    "nullable": true
                  }
                },
                "required": [],
                "nullable": true
              },
              "earning_rule": {
                "title": "LoyaltyCardTransactionDetailsEarningRule",
                "type": "object",
                "description": "Contains information about the earning rule.",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Unique identifier of an earning rule, assigned by Voucherify.",
                    "nullable": true
                  },
                  "source": {
                    "title": "LoyaltyCardTransactionDetailsEarningRuleSource",
                    "type": "object",
                    "required": [],
                    "description": "Contains the custom earning rule name.",
                    "properties": {
                      "banner": {
                        "type": "string",
                        "description": "Name of the earning rule. This is displayed as a header for the earning rule in the Dashboard.",
                        "nullable": true
                      }
                    },
                    "nullable": true
                  }
                },
                "required": [],
                "nullable": true
              },
              "segment": {
                "title": "LoyaltyCardTransactionDetailsSegment",
                "type": "object",
                "description": "Contains information about the segment.",
                "properties": {
                  "id": {
                    "type": "string",
                    "nullable": true
                  },
                  "name": {
                    "type": "string",
                    "nullable": true
                  }
                },
                "required": [],
                "nullable": true
              },
              "loyalty_tier": {
                "title": "LoyaltyCardTransactionDetailsLoyaltyTier",
                "type": "object",
                "description": "Contains information about the loyalty tier that is mapped for the earning rule and used in the transaction.",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Unique identifier of the loyalty tier, assigned by Voucherify.",
                    "nullable": true
                  },
                  "name": {
                    "type": "string",
                    "description": "User-defined name of the loyalty tier.",
                    "nullable": true
                  }
                },
                "required": [],
                "nullable": true
              },
              "redemption": {
                "title": "LoyaltyCardTransactionDetailsRedemption",
                "type": "object",
                "description": "Contains information about the original redemption.",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Unique redemption ID.",
                    "nullable": true
                  }
                },
                "required": [],
                "nullable": true
              },
              "rollback": {
                "title": "LoyaltyCardTransactionDetailsRollback",
                "type": "object",
                "description": "Contains information about the redemption rollback.",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Unique redemption rollback ID.",
                    "nullable": true
                  }
                },
                "required": [],
                "nullable": true
              },
              "custom_event": {
                "title": "LoyaltyCardTransactionDetailsCustomEvent",
                "type": "object",
                "description": "Contains information about the custom event that triggers the point accrual.",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Unique event ID.",
                    "nullable": true
                  },
                  "type": {
                    "type": "string",
                    "description": "Type of custom event.",
                    "nullable": true
                  }
                },
                "required": [],
                "nullable": true
              },
              "event_schema": {
                "title": "LoyaltyCardTransactionDetailsEventSchema",
                "type": "object",
                "description": "Contains information about the custom event metadata schema.",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Unique metadata schema ID.",
                    "nullable": true
                  },
                  "name": {
                    "type": "string",
                    "description": "Type of custom event.",
                    "nullable": true
                  }
                },
                "required": [],
                "nullable": true
              },
              "holder_loyalty_tier": {
                "title": "LoyaltyCardTransactionDetailsHolderLoyaltyTier",
                "type": "object",
                "description": "Loyalty tier of the loyalty card holder at the moment when the transaction occurred. The loyalty tier is the tier in which the holder was before the loyalty point balance changed.",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Unique identifier of the loyalty tier, assigned by Voucherify.",
                    "nullable": true
                  },
                  "name": {
                    "type": "string",
                    "description": "User-defined name of the loyalty tier.",
                    "nullable": true
                  }
                },
                "required": [],
                "nullable": true
              },
              "pending_points": {
                "$ref": "#/components/schemas/LoyaltyPendingPoints"
              },
              "reward": {
                "title": "LoyaltyCardTransactionDetailsReward",
                "type": "object",
                "description": "Contains information about the pay with points reward.",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Unique reward ID.",
                    "nullable": true
                  },
                  "name": {
                    "type": "string",
                    "description": "Reward name.",
                    "nullable": true
                  }
                },
                "required": [],
                "nullable": true
              },
              "source_voucher": {
                "$ref": "#/components/schemas/SimpleVoucher"
              },
              "destination_voucher": {
                "$ref": "#/components/schemas/SimpleVoucher"
              }
            },
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/LoyaltyCardTransactionsType"
          }
        }
      },
      "LoyaltyMember": {
        "title": "LoyaltyMember",
        "description": "This is an object representing a loyalty member.",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "v_mkZN9v7vjYUadXnHrMza8W5c34fE5KiV",
            "description": "Assigned by the Voucherify API, identifies the voucher.",
            "nullable": true
          },
          "code": {
            "type": "string",
            "example": "WVPblOYX",
            "description": "A code that identifies a voucher. Pattern can use all letters of the English alphabet, Arabic numerals, and special characters.",
            "nullable": true
          },
          "campaign": {
            "type": "string",
            "example": "Loyalty campaign",
            "description": "A unique campaign name, identifies the voucher's parent campaign.",
            "nullable": true
          },
          "campaign_id": {
            "type": "string",
            "example": "camp_FNYR4jhqZBM9xTptxDGgeNBV",
            "description": "Assigned by the Voucherify API, identifies the voucher's parent campaign.",
            "nullable": true
          },
          "category": {
            "type": "string",
            "description": "Tag defining the category that this voucher belongs to.",
            "nullable": true
          },
          "category_id": {
            "type": "string",
            "description": "Unique category ID assigned by Voucherify.",
            "example": "cat_0bb343dee3cdb5ec0c",
            "nullable": true
          },
          "type": {
            "type": "string",
            "default": "LOYALTY_CARD",
            "enum": [
              "LOYALTY_CARD"
            ],
            "description": "Defines the type of the voucher. ",
            "nullable": true
          },
          "discount": {
            "title": "LoyaltyMemberDiscount",
            "type": "object",
            "nullable": true
          },
          "gift": {
            "title": "LoyaltyMemberGift",
            "type": "object",
            "nullable": true
          },
          "loyalty_card": {
            "title": "LoyaltyMemberLoyaltyCard",
            "type": "object",
            "description": "Object representing loyalty card parameters. Child attributes are present only if `type` is `LOYALTY_CARD`. Defaults to `null`.",
            "properties": {
              "points": {
                "type": "integer",
                "example": 7000,
                "description": "Total number of points added to the loyalty card over its lifespan.",
                "nullable": true
              },
              "balance": {
                "type": "integer",
                "example": 6970,
                "description": "Points available for reward redemption. This is calculated as follows: `balance` = `points` - `expired_points` - `subtracted_points` - `redemption.redeemed_points`.",
                "nullable": true
              },
              "next_expiration_date": {
                "type": "string",
                "format": "date",
                "example": "2023-05-30",
                "description": "The next closest date when the next set of points are due to expire.",
                "nullable": true
              },
              "next_expiration_points": {
                "type": "integer",
                "description": "The amount of points that are set to expire next.",
                "nullable": true
              },
              "pending_points": {
                "type": "integer",
                "description": "Shows the number of pending points that will be added to the loyalty card when they are activated automatically or manually.",
                "nullable": true
              },
              "expired_points": {
                "type": "integer",
                "description": "Shows the total number of expired points over the lifetime of the loyalty card.",
                "nullable": true
              },
              "subtracted_points": {
                "type": "integer",
                "description": "Shows the total number of subtracted points over the lifetime of the loyalty card.",
                "nullable": true
              }
            },
            "nullable": true
          },
          "start_date": {
            "type": "string",
            "example": "2021-12-01T00:00:00.000Z",
            "format": "date-time",
            "description": "Activation timestamp defines when the code starts to be active in ISO 8601 format. Voucher is *inactive before* this date. ",
            "nullable": true
          },
          "expiration_date": {
            "type": "string",
            "example": "2021-12-31T00:00:00.000Z",
            "format": "date-time",
            "description": "Expiration timestamp defines when the code expires in ISO 8601 format.  Voucher is *inactive after* this date.",
            "nullable": true
          },
          "validity_timeframe": {
            "$ref": "#/components/schemas/ValidityTimeframe"
          },
          "validity_day_of_week": {
            "$ref": "#/components/schemas/ValidityDayOfWeek"
          },
          "validity_hours": {
            "$ref": "#/components/schemas/ValidityHours"
          },
          "active": {
            "type": "boolean",
            "nullable": true,
            "description": "A flag to toggle the voucher on or off. You can disable a voucher even though it's within the active period defined by the `start_date` and `expiration_date`.  \n\n- `true` indicates an *active* voucher\n- `false` indicates an *inactive* voucher"
          },
          "additional_info": {
            "type": "string",
            "description": "An optional field to keep any extra textual information about the code such as a code description and details.",
            "nullable": true
          },
          "metadata": {
            "title": "LoyaltyMemberMetadata",
            "type": "object",
            "description": "The metadata object stores all custom attributes assigned to the code. A set of key/value pairs that you can attach to a voucher object. It can be useful for storing additional information about the voucher in a structured format.",
            "nullable": true
          },
          "assets": {
            "$ref": "#/components/schemas/VoucherAssets"
          },
          "is_referral_code": {
            "type": "boolean",
            "nullable": true,
            "description": "This is always false for loyalty members."
          },
          "created_at": {
            "type": "string",
            "example": "2021-12-22T10:13:06.487Z",
            "description": "Timestamp representing the date and time when the voucher was created. The value is shown in the ISO 8601 format.",
            "format": "date-time",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "example": "2021-12-22T10:14:45.316Z",
            "format": "date-time",
            "description": "Timestamp representing the date and time when the voucher was last updated in ISO 8601 format.",
            "nullable": true
          },
          "holder_id": {
            "type": "string",
            "example": "cust_eWgXlBBiY6THFRJwX45Iakv4",
            "description": "Unique identifier of the customer who owns the voucher.",
            "nullable": true
          },
          "object": {
            "type": "string",
            "description": "The type of the object represented by JSON. Default is `voucher`.",
            "default": "voucher",
            "nullable": true
          },
          "publish": {
            "title": "LoyaltyMemberPublish",
            "type": "object",
            "description": "This object stores a summary of publish events: an events counter and an endpoint which can be called to return details of each event.  A publication is required for loyalty cards and referral codes. This object gets updated whenever a voucher has been published. Publication means assigning a code to a particular customer. Typically, a publication is made by distributing your codes to your customers, e.g. through Export to MailChimp or <!-- [publish voucher](OpenAPI.json/paths/~1publications/post) -->[publish voucher](ref:create-publication) API method. \n\n<!-- title: My Table Title -->\n\n| Required | Optional |\n| -------- | :------: |\n| `type`:`LOYALTY_CARD` |  `type`:`DISCOUNT_VOUCHER`   | \n| `is_referral_code`:`true`      |    `type`:`GIFT_VOUCHER`   |\n",
            "properties": {
              "object": {
                "type": "string",
                "default": "list",
                "description": "The type of the object represented is by default `list`. To get this list, you need to make a call to the endpoint returned in the `url` attribute.",
                "nullable": true
              },
              "count": {
                "type": "integer",
                "example": 0,
                "description": "Publication event counter.",
                "nullable": true
              },
              "url": {
                "type": "string",
                "example": "/v1/vouchers/WVPblOYX/publications?page=1&limit=10",
                "description": "The endpoint where this list of publications can be accessed using a **GET** method. `/v1/vouchers/{voucher_code}/publications`",
                "nullable": true
              }
            },
            "nullable": true
          },
          "redemption": {
            "title": "LoyaltyMemberRedemption",
            "type": "object",
            "description": "Stores a summary of redemptions that have been applied to the voucher.",
            "properties": {
              "quantity": {
                "type": "integer",
                "description": "How many times a voucher can be redeemed. A `null` value means unlimited.",
                "nullable": true
              },
              "redeemed_quantity": {
                "type": "integer",
                "example": 1,
                "description": "How many times a voucher has already been redeemed.",
                "nullable": true
              },
              "redeemed_points": {
                "type": "integer",
                "example": 100000,
                "description": "Total loyalty points redeemed.",
                "nullable": true
              },
              "object": {
                "type": "string",
                "default": "list",
                "description": "The type of the object represented is by default `list`. To get this list, you need to make a call to the endpoint returned in the url attribute.",
                "nullable": true
              },
              "url": {
                "type": "string",
                "example": "/v1/vouchers/WVPblOYX/redemptions?page=1&limit=10",
                "description": "The endpoint where this list of redemptions can be accessed using a **GET** method. `/v1/vouchers/{voucher_code}/redemptions`",
                "nullable": true
              }
            },
            "nullable": true
          }
        }
      },
      "LoyaltyPendingPoints": {
        "title": "LoyaltyPendingPoints",
        "type": "object",
        "description": "Contains details about the pending point entry.",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of the pending point entry, assigned by Voucherify.",
            "example": "lopp_0ffd593d5ad207ba6b",
            "nullable": true
          },
          "voucher_id": {
            "type": "string",
            "description": "Unique identifier of the loyalty card, assigned by Voucherify.",
            "example": "v_abCdEfghI1JKLMNPqRS2Tu3vWXyza4bc",
            "nullable": true
          },
          "campaign_id": {
            "type": "string",
            "description": "Unique campaign identifier, assigned by Voucherify.",
            "example": "camp_weer1c3p5ZgktqfW56RfoNaG",
            "nullable": true
          },
          "customer_id": {
            "type": "string",
            "description": "Unique customer identifier, assigned by Voucherify.",
            "example": "cust_IdgAFZxYwwHctOk9ppZMu319",
            "nullable": true
          },
          "order_id": {
            "type": "string",
            "description": "Unique order identifier, assigned by Voucherify.",
            "example": "ord_0ffc0fa65f15d2df17",
            "nullable": true
          },
          "points": {
            "type": "integer",
            "description": "Number of points in the pending state.",
            "nullable": true
          },
          "activates_at": {
            "type": "string",
            "description": "Date when the pending points are activated and added to the customer's loyalty card.",
            "format": "date",
            "nullable": true
          },
          "details": {
            "$ref": "#/components/schemas/LoyaltyPendingPointsDetails"
          },
          "created_at": {
            "type": "string",
            "description": "Timestamp representing the date and time when the pending point entry was created. The value is shown in the ISO 8601 format.",
            "format": "date-time",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "description": "Timestamp representing the date and time when the pending point entry was modified. The value is shown in the ISO 8601 format.",
            "format": "date-time",
            "nullable": true
          }
        },
        "required": [
          "details"
        ]
      },
      "LoyaltyPointsBucket": {
        "title": "LoyaltyPointsBucket",
        "type": "object",
        "description": "Contains the details about expiring loyalty points.",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of the loyalty points bucket.",
            "nullable": true
          },
          "voucher_id": {
            "type": "string",
            "description": "Unique identifier of the parent loyalty card.",
            "nullable": true
          },
          "campaign_id": {
            "type": "string",
            "description": "Unique identifier of the parent campaign.",
            "nullable": true
          },
          "bucket": {
            "title": "LoyaltyPointsBucketBucket",
            "type": "object",
            "required": [],
            "description": "Defines the number of points stored in this loyalty point bucket.",
            "properties": {
              "total_points": {
                "type": "integer",
                "description": "Total number of points in the loyalty point bucket.",
                "nullable": true
              }
            },
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "Loyalty point point bucket status.",
            "nullable": true
          },
          "expires_at": {
            "type": "string",
            "format": "date-time",
            "description": "Date when the number of points defined in the bucket object are due to expire.",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "description": "Timestamp representing the date and time when the loyalty point bucket object was created in ISO 8601 format.",
            "format": "date-time",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp representing the date and time when the loyalty point bucket object was updated in ISO 8601 format.",
            "nullable": true
          },
          "object": {
            "type": "string",
            "default": "loyalty_points_bucket",
            "enum": [
              "loyalty_points_bucket"
            ],
            "description": "The type of the object represented by JSON. This object stores information about the loyalty point bucket.",
            "nullable": true
          }
        },
        "required": []
      },
      "LoyaltyTier": {
        "title": "LoyaltyTier",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Loyalty Tier name.",
            "nullable": true
          },
          "earning_rules": {
            "title": "LoyaltyTierEarningRules",
            "type": "object",
            "description": "Contains a list of earning rule IDs and their points mapping for the given earning rule.",
            "nullable": true
          },
          "rewards": {
            "title": "LoyaltyTierRewards",
            "type": "object",
            "description": "Contains a list of reward IDs and their points mapping for the given reward.",
            "nullable": true
          },
          "points": {
            "title": "LoyaltyTierPoints",
            "type": "object",
            "description": "Defines range of loyalty tier in points.",
            "properties": {
              "from": {
                "type": "integer",
                "description": "Bottom points threshold value.",
                "nullable": true
              },
              "to": {
                "type": "integer",
                "description": "Top points threshold value.",
                "nullable": true
              }
            },
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "Unique loyalty tier ID.",
            "nullable": true
          },
          "campaign_id": {
            "type": "string",
            "description": "Unique parent campaign ID.",
            "nullable": true
          },
          "metadata": {
            "title": "LoyaltyTierMetadata",
            "type": "object",
            "nullable": true,
            "description": "The metadata object stores all custom attributes assigned to the loyalty tier. A set of key/value pairs that you can attach to a loyalty tier object. It can be useful for storing additional information about the loyalty tier in a structured format."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp representing the date and time when the loyalty tier was created. The value is shown in the ISO 8601 format.",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "nullable": true,
            "format": "date-time",
            "description": "Timestamp representing the date and time when the loyalty tier was updated. The value is shown in the ISO 8601 format."
          },
          "config": {
            "title": "LoyaltyTierConfig",
            "type": "object",
            "description": "Defines loyalty tier range in points.",
            "required": [],
            "properties": {
              "points": {
                "title": "LoyaltyTierConfigPoints",
                "type": "object",
                "description": "Defines range of loyalty tier in points.",
                "properties": {
                  "from": {
                    "type": "integer",
                    "description": "Bottom points threshold value.",
                    "nullable": true
                  },
                  "to": {
                    "type": "integer",
                    "description": "Top points threshold value.",
                    "nullable": true
                  }
                },
                "nullable": true
              }
            },
            "nullable": true
          },
          "expiration": {
            "$ref": "#/components/schemas/LoyaltyTierExpiration"
          },
          "object": {
            "type": "string",
            "default": "loyalty_tier",
            "enum": [
              "loyalty_tier"
            ],
            "description": "The type of the object represented by JSON. This object stores information about the loyalty.",
            "nullable": true
          }
        }
      },
      "LoyaltyTierBase": {
        "title": "LoyaltyTierBase",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Loyalty Tier name.",
            "nullable": true
          },
          "earning_rules": {
            "title": "LoyaltyTierBaseEarningRules",
            "type": "object",
            "description": "Contains a list of earning rule IDs and their points mapping for the given earning rule.",
            "nullable": true
          },
          "rewards": {
            "title": "LoyaltyTierBaseRewards",
            "type": "object",
            "description": "Contains a list of reward IDs and their points mapping for the given reward.",
            "nullable": true
          },
          "points": {
            "title": "LoyaltyTierBasePoints",
            "type": "object",
            "description": "Defines range of loyalty tier in points.",
            "properties": {
              "from": {
                "type": "integer",
                "description": "Bottom points threshold value.",
                "nullable": true
              },
              "to": {
                "type": "integer",
                "description": "Top points threshold value.",
                "nullable": true
              }
            },
            "nullable": true
          }
        },
        "required": []
      },
      "LoyaltyTierExpiration": {
        "title": "LoyaltyTierExpiration",
        "description": "Defines loyalty tier expiration date.",
        "type": "object",
        "properties": {
          "customer_id": {
            "type": "string",
            "description": "Unique customer identifier of the customer making the purchase. The ID is assigned by Voucherify.",
            "example": "cust_7iUa6ICKyU6gH40dBU25kQU1",
            "nullable": true
          },
          "campaign_id": {
            "type": "string",
            "description": "Unique campaign ID, assigned by Voucherify.",
            "example": "camp_rRsfatlwN7unSeUIJDCYedal",
            "nullable": true
          },
          "tier_id": {
            "type": "string",
            "description": "Unique tier ID, assigned by Voucherify.",
            "nullable": true
          },
          "start_date": {
            "type": "string",
            "description": "Activation timestamp defines when the loyalty tier starts to be active in ISO 8601 format. Loyalty tier is inactive before this date.",
            "nullable": true
          },
          "expiration_date": {
            "type": "string",
            "description": "Expiration timestamp defines when the loyalty tier expires in ISO 8601 format. Loyalty tier is inactive after this date.",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "example": "2021-12-22T10:13:06.487Z",
            "description": "Timestamp representing the date and time when the loyalty tier was created. The value is shown in the ISO 8601 format.",
            "format": "date-time",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "example": "2021-12-22T10:13:06.487Z",
            "description": "Timestamp representing the date and time when the loyalty tier was updated. The value is shown in the ISO 8601 format.",
            "format": "date-time",
            "nullable": true
          }
        },
        "required": []
      },
      "LoyaltyTiersExpirationAll": {
        "title": "LoyaltyTiersExpirationAll",
        "type": "object",
        "description": "Defines the Loyalty Tiers Expiration.",
        "properties": {
          "qualification_type": {
            "type": "string",
            "enum": [
              "BALANCE",
              "POINTS_IN_PERIOD"
            ],
            "description": "Tier qualification.   \n\n`BALANCE`: Points balance is based on the customer's current points balance. Customers qualify for the tier if their points balance is in the points range of the tier. \n `POINTS_IN_PERIOD`: A customer qualifies for the tier only if the sum of the accumulated points in a **defined time interval** reaches the tier threshold.",
            "nullable": true
          },
          "qualification_period": {
            "type": "string",
            "description": "Customers can qualify for the tier if they collected enough points in a given time period. So, in addition to the customer having to reach a points range, they also need to have collected the points within a set time period.    \n\n| **Period** | **Definition** |\n|:---|:---|\n| **Calendar Month** | Points collected in one calendar month<br>January, February, March, etc. |\n| **Calendar Quarter** | Points collected in the quarter<br>- January - March<br>- April - June<br>- July - September<br>- October - December |\n| **Calendar Half-year** | Points collected in the half-year<br>- January - June<br>- July - December |\n| **Calendar Year** | Points collected in one calendar year<br>January - December |",
            "enum": [
              "MONTH",
              "QUARTER",
              "HALF_YEAR",
              "YEAR"
            ],
            "nullable": true
          },
          "start_date": {
            "title": "LoyaltyTiersExpirationAllStartDate",
            "type": "object",
            "description": "Defines the conditions for the start date of the tier.",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "IMMEDIATE",
                  "NEXT_PERIOD"
                ],
                "description": "What triggers the tier to be valid for a customer.    \n`IMMEDIATE`: After reaching the minimum required points. \n`NEXT_PERIOD`: When the next qualification period starts.",
                "nullable": true
              }
            },
            "required": [],
            "nullable": true
          },
          "expiration_date": {
            "title": "LoyaltyTiersExpirationAllExpirationDate",
            "type": "object",
            "description": "Defines the conditions for the expiration date of a tier.",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "END_OF_PERIOD",
                  "END_OF_NEXT_PERIOD",
                  "BALANCE_DROP",
                  "CUSTOM"
                ],
                "description": "What triggers the tier to expire for a customer.    \n`END_OF_PERIOD`: Expire tier at the end of the period.    \n`END_OF_NEXT_PERIOD`:  Expire tier at the end of the next period. \n `BALANCE_DROP`: Tier expires when the points balance drops below the required range of the tier. \n `CUSTOM`: Tier expires after a certain time period passes following the instance the points balance drops below the required range of the tier.",
                "nullable": true
              },
              "extend": {
                "type": "string",
                "description": "Extend the expiration by adding extra months or days in ISO 8601 format. The tier will remain active even though it reaches its expiration time period. For example, a tier with a duration of `P3M` will be valid for an additional duration of 3 months and a tier with a duration of `P1D` will be valid for an additional duration of 1 day.",
                "nullable": true
              },
              "rounding": {
                "description": "Defines the rounding mechanism for tier expiration.",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "MONTH",
                      "QUARTER",
                      "HALF_YEAR",
                      "YEAR",
                      "CUSTOM"
                    ],
                    "description": "This mechanism describes a custom rounding for the expiration date.",
                    "nullable": true
                  },
                  "strategy": {
                    "type": "string",
                    "enum": [
                      "START",
                      "END"
                    ],
                    "description": "This mechanism describes a rounding strategy for the expiration date.",
                    "nullable": true
                  },
                  "unit": {
                    "type": "string",
                    "description": "Defines the type of unit of time in which the rounding period is counted.",
                    "default": "MONTH",
                    "enum": [
                      "MONTH"
                    ],
                    "nullable": true
                  },
                  "value": {
                    "type": "integer",
                    "description": "Value for the unit of time that the rounding applies to. Units for this parameter are defined by the `rounding.unit` parameter.    \n- `0`: January\n- `1`: February\n- `2`: March\n- `3`: April\n- `4`: May\n- `5`: June\n- `6`: July\n- `7`: August\n- `8`: September\n- `9`: October\n- `10`: November\n- `11`: December",
                    "nullable": true
                  }
                }
              }
            },
            "required": [],
            "nullable": true
          }
        },
        "required": []
      },
      "ManagementProject": {
        "title": "ManagementProject",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of the project.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The name of the project.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "A user-defined description of the project, e.g. its purpose, scope, region.",
            "nullable": true
          },
          "timezone": {
            "type": "string",
            "description": "The time zone in which the project is established. It can be in the GMT format or in accordance with IANA time zone database.",
            "nullable": true
          },
          "currency": {
            "type": "string",
            "description": "The currency used in the project. It is equal to a 3-letter ISO 4217 code.",
            "nullable": true
          },
          "dial_code": {
            "type": "string",
            "nullable": true,
            "description": "The country dial code for the project. It is equal to an ITU country code."
          },
          "webhook_version": {
            "type": "string",
            "description": "The webhook version used in the project.",
            "default": "v2024-01-01",
            "enum": [
              "v2024-01-01"
            ],
            "nullable": true
          },
          "client_trusted_domains": {
            "title": "ManagementProjectClientTrustedDomains",
            "type": "array",
            "description": "An array of URL addresses that allow client requests.",
            "items": {
              "title": "ManagementProjectClientTrustedDomainsItem",
              "type": "string"
            },
            "nullable": true
          },
          "client_redeem_enabled": {
            "type": "boolean",
            "description": "Enables client-side redemption.",
            "nullable": true
          },
          "client_publish_enabled": {
            "type": "boolean",
            "description": "Enables client-side publication.",
            "nullable": true
          },
          "client_list_vouchers_enabled": {
            "type": "boolean",
            "description": "Enables client-side listing of vouchers.",
            "nullable": true
          },
          "client_create_customer_enabled": {
            "type": "boolean",
            "description": "Enables client-side creation of customers.",
            "nullable": true
          },
          "client_loyalty_events_enabled": {
            "type": "boolean",
            "description": "Enables client-side events for loyalty and referral programs.",
            "nullable": true
          },
          "client_set_voucher_expiration_date_enabled": {
            "type": "boolean",
            "description": "Enables client-side setting of voucher expiration date.",
            "nullable": true
          },
          "webhooks_callout_notifications": {
            "title": "ManagementProjectWebhooksCalloutNotifications",
            "type": "object",
            "description": "Determines the notification settings for webhook callouts configured in Distributions and Project settings.",
            "properties": {
              "distributions": {
                "title": "ManagementProjectWebhooksCalloutNotificationsDistributions",
                "type": "object",
                "description": "Determines the notification settings for webhooks sent through Distributions.",
                "properties": {
                  "email": {
                    "type": "boolean",
                    "description": "Enables the notification through an email.",
                    "nullable": true
                  },
                  "in_app": {
                    "type": "boolean",
                    "description": "Enables the notification through an email.",
                    "nullable": true
                  },
                  "emails": {
                    "title": "ManagementProjectWebhooksCalloutNotificationsDistributionsEmails",
                    "type": "array",
                    "description": "An array of email addresses which will receive the notification.",
                    "items": {
                      "title": "ManagementProjectWebhooksCalloutNotificationsDistributionsEmailsItem",
                      "type": "string"
                    },
                    "nullable": true
                  }
                },
                "required": [],
                "nullable": true
              },
              "webhooks": {
                "title": "ManagementProjectWebhooksCalloutNotificationsWebhooks",
                "type": "object",
                "description": "Determines the notification settings for webhooks sent as set out in the Project settings.",
                "properties": {
                  "email": {
                    "type": "boolean",
                    "description": "Enables the notification through an email.",
                    "nullable": true
                  },
                  "in_app": {
                    "type": "boolean",
                    "description": "Enables the notification through an email.",
                    "nullable": true
                  },
                  "emails": {
                    "title": "ManagementProjectWebhooksCalloutNotificationsWebhooksEmails",
                    "type": "array",
                    "description": "An array of email addresses which will receive the notification.",
                    "items": {
                      "title": "ManagementProjectWebhooksCalloutNotificationsWebhooksEmailsItem",
                      "type": "string"
                    },
                    "nullable": true
                  }
                },
                "required": [],
                "nullable": true
              }
            },
            "required": [],
            "nullable": true
          },
          "api_usage_notifications": {
            "title": "ManagementProjectApiUsageNotifications",
            "type": "object",
            "description": "Determines the notification settings.",
            "properties": {
              "redemptions": {
                "$ref": "#/components/schemas/UsageNotifications"
              },
              "messages": {
                "$ref": "#/components/schemas/UsageNotifications"
              },
              "api_calls": {
                "$ref": "#/components/schemas/UsageNotifications"
              },
              "bulk_api_calls": {
                "$ref": "#/components/schemas/UsageNotifications"
              },
              "webhook_calls": {
                "$ref": "#/components/schemas/UsageNotifications"
              },
              "cycle_calls": {
                "$ref": "#/components/schemas/UsageNotifications"
              }
            },
            "required": [],
            "nullable": true
          },
          "cluster_id": {
            "type": "string",
            "description": "The identifier of the cluster where the project will be created.",
            "nullable": true
          },
          "case_sensitive_codes": {
            "type": "boolean",
            "description": "Determines if the vouchers in the project will be:\n- case sensitive - if `true`, `C0dE-cfV` is **not** equal to `c0de-cfv`),\n- case insensitive - if `false`, `C0dE-cfV` is equal to `c0de-cfv`.",
            "nullable": true
          },
          "api_version": {
            "type": "string",
            "description": "The API version used in the project. Currently, the default and only value is `v2018-08-01`.",
            "default": "v2018-08-01",
            "enum": [
              "v2018-08-01"
            ],
            "nullable": true
          },
          "is_sandbox": {
            "type": "boolean",
            "description": "Determines if the project is a sandbox project.",
            "nullable": true
          },
          "webhook_token": {
            "type": "string",
            "description": "Webhook token used for authentication.",
            "nullable": true
          },
          "default_code_config": {
            "title": "ManagementProjectDefaultCodeConfig",
            "type": "object",
            "description": "Determines the character set that is used as default for vouchers. It is affected by the `\"case_sensitive_codes\"` setting.",
            "properties": {
              "charset": {
                "type": "string",
                "description": "Lists all characters that are used as default for vouchers",
                "nullable": true
              }
            },
            "required": [],
            "nullable": true
          },
          "limits": {
            "title": "ManagementProjectLimits",
            "type": "object",
            "description": "Determines additional limits set on a given project, e.g. the Sandbox project. If no limits are returned, the limits set for the whole organization apply.",
            "properties": {
              "api_calls": {
                "title": "ManagementProjectLimitsApiCalls",
                "type": "array",
                "items": {
                  "title": "ManagementProjectLimitsApiCallsItem",
                  "type": "object",
                  "description": "Determines the limit of API calls per given unit time.",
                  "properties": {
                    "value": {
                      "type": "integer",
                      "description": "Determines the maximum number of API calls per time set in `\"duration\"`."
                    },
                    "duration": {
                      "type": "string",
                      "description": "Determines the amount of time during which the calls up to the number specified in the `value` can be made. The duration is presented in the ISO 8601 format, e.g. `PT1H` means one hour."
                    }
                  }
                },
                "nullable": true
              },
              "bulk_api_calls": {
                "title": "ManagementProjectLimitsBulkApiCalls",
                "type": "array",
                "items": {
                  "title": "ManagementProjectLimitsBulkApiCallsItem",
                  "type": "object",
                  "description": "",
                  "properties": {
                    "value": {
                      "type": "integer",
                      "description": "Determines the maximum number of API calls per time set in `\"duration\"`."
                    },
                    "duration": {
                      "type": "string",
                      "description": "Determines the amount of time during which the calls up to the number specified in the `value` can be made. The duration is presented in the ISO 8601 format, e.g. `PT1H` means one hour."
                    }
                  }
                },
                "nullable": true
              }
            },
            "nullable": true
          }
        }
      },
      "ManagementProjectsBranding": {
        "title": "ManagementProjectsBranding",
        "type": "object",
        "description": "Response brand schema.",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of the brand configuration.",
            "nullable": true
          },
          "brand": {
            "title": "ManagementProjectsBrandingBrand",
            "type": "object",
            "description": "Defines basic brand details.",
            "properties": {
              "name": {
                "type": "string",
                "description": "Defines brand name.",
                "nullable": true
              },
              "privacy_policy_url": {
                "type": "string",
                "nullable": true,
                "description": "Defines the URL to the brand's privacy policy. It must be a valid URL format."
              },
              "terms_of_use_url": {
                "type": "string",
                "nullable": true,
                "description": "Defines the URL to the brand's terms of use.  It must be a valid URL format."
              },
              "permission_reminder": {
                "type": "string",
                "description": "Defines the message that is displayed to customers who opted in an email newsletter.",
                "nullable": true
              },
              "website_url": {
                "type": "string",
                "nullable": true,
                "description": "Defines the URL to the brand's website. It must be a valid URL format."
              }
            },
            "required": [],
            "nullable": true
          },
          "address": {
            "title": "ManagementProjectsBrandingAddress",
            "type": "object",
            "description": "Defines the address details.",
            "properties": {
              "street": {
                "type": "string",
                "description": "Defines the brand's street.",
                "nullable": true
              },
              "city": {
                "type": "string",
                "description": "Defines the brand's city.",
                "nullable": true
              },
              "postal": {
                "type": "string",
                "nullable": true,
                "description": "Defines the brand's postal code."
              },
              "state": {
                "type": "string",
                "description": "Defines the brand's state or similar administrative area.",
                "nullable": true
              },
              "country": {
                "type": "string",
                "description": "Defines the brand's country.",
                "nullable": true
              }
            },
            "required": [],
            "nullable": true
          },
          "contact": {
            "title": "ManagementProjectsBrandingContact",
            "type": "object",
            "description": "Defines contact details.",
            "properties": {
              "email": {
                "type": "string",
                "description": "Defines the brand's email address. It must be a valid email format.",
                "nullable": true
              },
              "phone": {
                "type": "string",
                "nullable": true,
                "description": "Defines the brand's phone number."
              }
            },
            "required": [],
            "nullable": true
          },
          "cockpits": {
            "title": "ManagementProjectsBrandingCockpits",
            "type": "object",
            "description": "Defines customer cockpit details.",
            "properties": {
              "campaigns_overview_enabled": {
                "type": "boolean",
                "description": "Enables the campaign overview for customers.",
                "nullable": true
              },
              "loyalty_enabled": {
                "type": "boolean",
                "description": "Enables the loyalty campaign overview for customers.",
                "nullable": true
              },
              "gift_cards_enabled": {
                "type": "boolean",
                "description": "Enables the gift card overview for customers.",
                "nullable": true
              },
              "coupons_enabled": {
                "type": "boolean",
                "description": "Enables the discount coupon overview for customers.",
                "nullable": true
              },
              "referrals_enabled": {
                "type": "boolean",
                "description": "Enables the referral campaign overview for customers.",
                "nullable": true
              },
              "theme": {
                "type": "string",
                "description": "Determines the color scheme of the customer cockpit.",
                "enum": [
                  "blue",
                  "dark-green",
                  "default",
                  "green",
                  "grey",
                  "orange",
                  "purple",
                  "red"
                ],
                "nullable": true
              },
              "use_custom_double_opt_in_redirect_url": {
                "type": "boolean",
                "description": "Enables the double opt-in option. It must be a valid URL format.",
                "nullable": true
              },
              "custom_double_opt_in_redirect_url": {
                "type": "string",
                "nullable": true,
                "description": "Defines the URL for the double opt-in consent. It must be a valid URL format."
              }
            },
            "required": [],
            "nullable": true
          }
        },
        "required": []
      },
      "ManagementProjectsCustomEventSchema": {
        "title": "ManagementProjectsCustomEventSchema",
        "type": "object",
        "required": [],
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of the custom event schema.",
            "example": "ms_oA8CawM07Q8i05Cx62U6euTK",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "User-defined name of the custom event. This is also shown in **Project Settings** > **Event Schema** in the Voucherify Dashboard.",
            "nullable": true
          },
          "schema": {
            "title": "ManagementProjectsCustomEventSchemaSchema",
            "type": "object",
            "description": "Object containing custom event schema and its custom attributes (metadata).",
            "properties": {
              "properties": {
                "title": "ManagementProjectsCustomEventSchemaSchemaProperties",
                "type": "object",
                "description": "Defines custom event custom attributes (metadata).",
                "nullable": true
              }
            },
            "required": [],
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "description": "Timestamp representing the date and time when the custom event schema was created. The value is shown in the ISO 8601 format.",
            "format": "date-time",
            "example": "2024-03-27T08:00:09.472Z",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "description": "Timestamp representing the date and time when the custom event schema was updated. The value is shown in the ISO 8601 format.",
            "format": "date-time",
            "example": "2024-03-27T08:00:09.472Z",
            "nullable": true
          },
          "object": {
            "type": "string",
            "description": "The type of the object represented by JSON.",
            "example": "custom-event-schema",
            "default": "custom-event-schema",
            "enum": [
              "custom-event-schema"
            ],
            "nullable": true
          }
        },
        "description": "Object containing the response to creating a custom event schema."
      },
      "ManagementProjectsMetadataSchema": {
        "title": "ManagementProjectsMetadataSchema",
        "type": "object",
        "required": [],
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of the metadata schema.",
            "nullable": true
          },
          "related_object": {
            "type": "string",
            "description": "The resource type. You can define custom metadata schemas, which have a custom `\"related_object\"` resource type. The standard metadata schemas are: `\"campaign\"`, `\"customer\"`, `\"earning_rule\"`, `\"loyalty_tier\"`, `\"order\"`, `\"order_item\"`, `\"product\"`, `\"promotion_tier\"`, `\"publication\"`, `\"redemption\"`, `\"reward\"`, `\"voucher\"`.",
            "nullable": true
          },
          "properties": {
            "title": "ManagementProjectsMetadataSchemaProperties",
            "type": "object",
            "description": "Contains metadata definitions.",
            "nullable": true
          },
          "allow_defined_only": {
            "type": "boolean",
            "nullable": true,
            "description": "Restricts the creation of metadata fields when set to `true`. It indicates whether or not you can create new metadata definitions, e.g. in the campaign or publication manager. If set to `true`, then only the defined fields are available for assigning values."
          },
          "created_at": {
            "type": "string",
            "example": "2021-12-03T13:33:44.556Z",
            "description": "Timestamp representing the date and time when the metadata schema was created. The value for this parameter is shown in the ISO 8601 format.",
            "format": "date-time",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "nullable": true,
            "example": "2022-08-11T08:05:30.695Z",
            "description": "Timestamp representing the date and time when the metadata schema was updated. The value for this parameter is shown in the ISO 8601 format.",
            "format": "date-time"
          },
          "object": {
            "type": "string",
            "default": "metadata_schema",
            "description": "The type of the object represented by the JSON. This object stores information about the metadata schema.",
            "nullable": true
          }
        },
        "description": "Object representing a metadata schema."
      },
      "ManagementProjectsStackingRules": {
        "title": "ManagementProjectsStackingRules",
        "type": "object",
        "required": [],
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier of the stacking rules.",
            "nullable": true
          },
          "exclusive_categories": {
            "title": "ManagementProjectsStackingRulesExclusiveCategories",
            "type": "array",
            "description": "Lists the IDs of exclusive categories. A redeemable from a campaign with an exclusive category is the only redeemable to be redeemed when applied with redeemables from other campaigns unless these campaigns are exclusive or joint.",
            "items": {
              "title": "ManagementProjectsStackingRulesExclusiveCategoriesItem",
              "type": "string"
            },
            "nullable": true
          },
          "joint_categories": {
            "title": "ManagementProjectsStackingRulesJointCategories",
            "type": "array",
            "description": "Lists the IDs of the joint categories. A campaign with a joint category is always applied regardless of the exclusivity of other campaigns.",
            "items": {
              "title": "ManagementProjectsStackingRulesJointCategoriesItem",
              "type": "string"
            },
            "nullable": true
          },
          "redeemables_limit": {
            "type": "integer",
            "description": "Defines how many redeemables can be sent in one request. Note: more redeemables means more processing time.",
            "minimum": 1,
            "maximum": 30,
            "nullable": true
          },
          "applicable_redeemables_limit": {
            "type": "integer",
            "description": "Defines how many redeemables can be applied in one request. The number must be less than or equal to `redeemables_limit`. For example, a user can select 30 discounts but only 5 will be applied to the order and the remaining will be `SKIPPED` according to the `redeemables_sorting_rule`.",
            "minimum": 1,
            "maximum": 30,
            "nullable": true
          },
          "applicable_redeemables_per_category_limit": {
            "type": "integer",
            "nullable": true,
            "description": "Defines how many redeemables with the same category can be applied in one request. The number must be less than or equal to `applicable_redeemables_limit`. The ones above the limit will be `SKIPPED` according to the `redeemables_sorting_rule`.",
            "minimum": 1,
            "maximum": 30
          },
          "applicable_exclusive_redeemables_limit": {
            "type": "integer",
            "description": "Defines how many redeemables with an assigned exclusive category can be applied in one request. The ones above the limit will be `SKIPPED` according to the `redeemables_sorting_rule`.",
            "minimum": 1,
            "maximum": 5,
            "nullable": true
          },
          "applicable_exclusive_redeemables_per_category_limit": {
            "type": "integer",
            "nullable": true,
            "description": "Defines how many redeemables with an assigned exclusive category can be applied in one request. The ones above the limit will be `SKIPPED` according to the `redeemables_sorting_rule`. The number must be less than or equal to `applicable_exclusive_redeemables_limit`.",
            "minimum": 1,
            "maximum": 30
          },
          "discount_calculation_mode": {
            "type": "string",
            "description": "Defines if the discounts are applied by taking into account the initial order amount or the discounted order amount.",
            "enum": [
              "INITIAL_AMOUNT",
              "DISCOUNTED_AMOUNT"
            ],
            "nullable": true
          },
          "initial_amount_mode_categories": {
            "title": "ManagementProjectsStackingRulesInitialAmountModeCategories",
            "type": "array",
            "description": "Lists the IDs of the categories that apply a discount based on the initial amount.",
            "items": {
              "title": "ManagementProjectsStackingRulesInitialAmountModeCategoriesItem",
              "type": "string"
            },
            "nullable": true
          },
          "discounted_amount_mode_categories": {
            "title": "ManagementProjectsStackingRulesDiscountedAmountModeCategories",
            "type": "array",
            "description": "Lists the IDs of the categories that apply a discount based on the discounted amount.",
            "items": {
              "title": "ManagementProjectsStackingRulesDiscountedAmountModeCategoriesItem",
              "type": "string"
            },
            "nullable": true
          },
          "redeemables_application_mode": {
            "type": "string",
            "description": "Defines the application mode for redeemables.\n`\"ALL\"` means that all redeemables must be validated for the redemption to be successful.\n`\"PARTIAL\"` means that only those redeemables that can be validated will be redeemed. The redeemables that fail validaton will be skipped.",
            "enum": [
              "ALL",
              "PARTIAL"
            ],
            "nullable": true
          },
          "redeemables_sorting_rule": {
            "type": "string",
            "description": "Defines redeemables sorting rule. `CATEGORY_HIERARCHY` means that redeemables are applied oaccording to the category priority. `REQUESTED_ORDER` means that redeemables are applied in the sequence provided in the request.",
            "enum": [
              "CATEGORY_HIERARCHY",
              "REQUESTED_ORDER"
            ],
            "nullable": true
          },
          "redeemables_products_application_mode": {
            "type": "string",
            "description": "Defines redeemables products application mode. `STACK` means that multiple discounts can be applied to a product. `ONCE` means that only one discount can be applied to the same product.",
            "enum": [
              "STACK",
              "ONCE"
            ],
            "nullable": true
          },
          "redeemables_no_effect_rule": {
            "type": "string",
            "description": "Defines redeemables no effect rule. `REDEEM_ANYWAY` means that the redeemable will be redeemed regardless of any restrictions or conditions in place. `SKIP` means that the redeemable will be processed only when an applicable effect is calculated.",
            "enum": [
              "REDEEM_ANYWAY",
              "SKIP"
            ],
            "nullable": true
          },
          "no_effect_skip_categories": {
            "title": "ManagementProjectsStackingRulesNoEffectSkipCategories",
            "type": "array",
            "description": "Lists category IDs. Redeemables with a given category are skipped even if the `redeemables_no_effect_rule` is set to `REDEEM_ANYWAY`. Category IDs can't overlap with the IDs in `no_effect_redeem_anyway_categories`.",
            "items": {
              "title": "ManagementProjectsStackingRulesNoEffectSkipCategoriesItem",
              "type": "string"
            },
            "nullable": true
          },
          "no_effect_redeem_anyway_categories": {
            "title": "ManagementProjectsStackingRulesNoEffectRedeemAnywayCategories",
            "type": "array",
            "description": "Lists category IDs. Redeemables with a given category are redeemed anyway even if the `redeemables_no_effect_rule` is set to `SKIP`. Category IDs can't overlap with the IDs in `no_effect_skip_categories`.",
            "items": {
              "title": "ManagementProjectsStackingRulesNoEffectRedeemAnywayCategoriesItem",
              "type": "string"
            },
            "nullable": true
          },
          "redeemables_rollback_order_mode": {
            "type": "string",
            "description": "Defines the rollback mode for the order. `WITH_ORDER` is a default setting. The redemption is rolled back together with the data about the order, including related discount values. `WITHOUT_ORDER` allows rolling the redemption back without affecting order data, including the applied discount values.",
            "enum": [
              "WITH_ORDER",
              "WITHOUT_ORDER"
            ],
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "description": "Timestamp representing the date and time when the stacking rules were created. The value for this parameter is shown in the ISO 8601 format.",
            "format": "date-time",
            "example": "2024-01-02T08:31:46.562Z",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "description": "Timestamp representing the date and time when the stacking rules were updated. The value for this parameter is shown in the ISO 8601 format.",
            "format": "date-time",
            "nullable": true
          }
        },
        "description": "Object representing the details of the stacking rules."
      },
      "ManagementProjectsWebhook": {
        "title": "ManagementProjectsWebhook",
        "type": "object",
        "required": [],
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of the webhook.",
            "example": "wh_i45Uez36Uz8XNW6PXC0eyGmb",
            "nullable": true
          },
          "object": {
            "type": "string",
            "description": "The type of the object represented by JSON.",
            "default": "webhook",
            "enum": [
              "webhook"
            ],
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "description": "Timestamp representing the date and time when the webhook configuration was created. The value for this parameter is shown in the ISO 8601 format.",
            "format": "date-time",
            "example": "2024-01-02T08:31:46.562Z",
            "nullable": true
          },
          "target_url": {
            "type": "string",
            "description": "URL address that receives webhooks.",
            "nullable": true
          },
          "events": {
            "title": "ManagementProjectsWebhookEvents",
            "type": "array",
            "description": "Lists the events that trigger webhook sendout.",
            "items": {
              "title": "ManagementProjectsWebhookEventsItem",
              "type": "string",
              "enum": [
                "business_validation_rule.assignment.created",
                "business_validation_rule.assignment.deleted",
                "business_validation_rule.created",
                "business_validation_rule.deleted",
                "business_validation_rule.updated",
                "campaign.created",
                "campaign.deleted",
                "campaign.disabled",
                "campaign.enabled",
                "campaign.earning_rule.assigned",
                "campaign.earning_rule.deleted",
                "campaign.earning_rule.disabled",
                "campaign.earning_rule.enabled",
                "campaign.earning_rule.updated",
                "campaign.loyalty_tier.created",
                "campaign.loyalty_tier.deleted",
                "campaign.loyalty_tier.updated",
                "campaign.promotion_stack.created",
                "campaign.promotion_stack.updated",
                "campaign.promotion_tier.created",
                "campaign.promotion_tier.deleted",
                "campaign.promotion_tier.disabled",
                "campaign.promotion_tier.enabled",
                "campaign.promotion_tier.updated",
                "campaign.referral_tier.created",
                "campaign.referral_tier.deleted",
                "campaign.referral_tier.updated",
                "campaign.reward.assignment.created",
                "campaign.reward.assignment.deleted",
                "campaign.reward.assignment.updated",
                "campaign.updated",
                "campaign.vouchers.aded",
                "campaign.vouchers.generation.completed",
                "campaign.vouchers.generation.failed",
                "campaign.vouchers.generation.started",
                "customer.confirmed",
                "customer.created",
                "customer.deleted",
                "customer.rewarded",
                "customer.rewarded.loyalty_points",
                "publication.succeeded",
                "redemption.failed",
                "redemption.rollback.failed",
                "redemption.rollback.succeeded",
                "redemption.succeeded",
                "voucher.created",
                "voucher.deleted",
                "voucher.disabled",
                "voucher.enabled",
                "voucher.gift.balance_aded",
                "voucher.gift.transaction.created",
                "voucher.loyalty_card.pending_points.activated",
                "voucher.loyalty_card.pending_points.aded",
                "voucher.loyalty_card.pending_points.canceled",
                "voucher.loyalty_card.pending_points.updated",
                "voucher.loyalty_card.points_aded",
                "voucher.loyalty_card.points_expired",
                "voucher.loyalty_card.transaction.created",
                "voucher.published",
                "voucher.updated"
              ]
            },
            "nullable": true
          },
          "active": {
            "type": "boolean",
            "description": "Determines if the webhook configuration is active.",
            "default": true,
            "nullable": true
          }
        },
        "description": "Response body schema for webhook endpoints."
      },
      "MemberActivity": {
        "title": "MemberActivity",
        "type": "object",
        "description": "This is an object representing member activity.  \n\nThis is a general object which presents moments from members' activity. There are all types of different events that members perform during their journey once they participate in a loyalty program. Events describe moments when the members redeem loyalty cards and earn points or rewards. The list of all types of activities is listed below.\n\nThe details describing the activity are collected in an array property named `data`. In this object, software integrators can find all further information explaining the event context.",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique event ID, assigned by Voucherify.",
            "example": "evcus_0c150c51730c6b60b1",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "Event type.",
            "nullable": true
          },
          "data": {
            "title": "MemberActivityData",
            "type": "object",
            "description": "Contains details about the event. The objects that are returned in the data attribute differ based on the context of the event type.",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "description": "Timestamp representing the date and time when the member activity occurred in ISO 8601 format.",
            "example": "2022-08-30T09:14:07.660Z",
            "format": "date-time",
            "nullable": true
          },
          "group_id": {
            "type": "string",
            "description": "Unique identifier of the request that caused the event.",
            "example": "w-0e30613abc1f044513",
            "nullable": true
          }
        }
      },
      "MetadataSchemaDeprecated": {
        "title": "MetadataSchemaDeprecated",
        "type": "object",
        "required": [],
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of the metadata schema.",
            "nullable": true
          },
          "related_object": {
            "type": "string",
            "description": "The resource type. You can define custom metadata schemas, which have a custom `\"related_object\"` resource type. The standard metadata schemas are: `\"campaign\"`, `\"customer\"`, `\"earning_rule\"`, `\"loyalty_tier\"`, `\"order\"`, `\"order_item\"`, `\"product\"`, `\"promotion_tier\"`, `\"publication\"`, `\"redemption\"`, `\"reward\"`, `\"voucher\"`.",
            "nullable": true
          },
          "properties": {
            "title": "MetadataSchemaDeprecatedProperties",
            "type": "object",
            "description": "Contains metadata definitions.",
            "nullable": true
          },
          "allow_defined_only": {
            "type": "boolean",
            "nullable": true,
            "description": "Restricts the creation of metadata fields when set to `true`. It indicates whether or not you can create new metadata definitions, e.g. in the campaign or publication manager. If set to `true`, then only the defined fields are available for assigning values."
          },
          "created_at": {
            "type": "string",
            "example": "2021-12-03T13:33:44.556Z",
            "description": "Timestamp representing the date and time when the metadata schema was created. The value for this parameter is shown in the ISO 8601 format.",
            "format": "date-time",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "nullable": true,
            "example": "2022-08-11T08:05:30.695Z",
            "description": "Timestamp representing the date and time when the metadata schema was updated. The value for this parameter is shown in the ISO 8601 format.",
            "format": "date-time"
          },
          "object": {
            "type": "string",
            "default": "metadata_schema",
            "description": "The type of the object represented by the JSON. This object stores information about the metadata schema.",
            "nullable": true
          }
        },
        "description": "Object representing a metadata schema."
      },
      "Order": {
        "title": "Order",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique ID assigned by Voucherify of an existing order that will be linked to the redemption of this request.",
            "nullable": true
          },
          "source_id": {
            "type": "string",
            "nullable": true,
            "description": "Unique source ID of an existing order that will be linked to the redemption of this request."
          },
          "status": {
            "type": "string",
            "description": "The order status.",
            "enum": [
              "CREATED",
              "PAID",
              "CANCELED",
              "FULFILLED"
            ],
            "nullable": true
          },
          "amount": {
            "type": "integer",
            "description": "A positive integer in the smallest currency unit (e.g. 100 cents for $1.00) representing the total amount of the order. This is the sum of the order items' amounts.",
            "nullable": true
          },
          "initial_amount": {
            "type": "integer",
            "description": "A positive integer in the smallest currency unit (e.g. 100 cents for $1.00) representing the total amount of the order. This is the sum of the order items' amounts.",
            "nullable": true
          },
          "discount_amount": {
            "type": "integer",
            "description": "Sum of all order-level discounts applied to the order. It is expressed as an integer in the smallest currency unit (e.g. 100 cents for $1.00).",
            "nullable": true
          },
          "items": {
            "title": "OrderItems",
            "type": "array",
            "description": "Array of items applied to the order. It can include up to 500 items.",
            "items": {
              "$ref": "#/components/schemas/OrderItem"
            },
            "nullable": true
          },
          "metadata": {
            "title": "OrderMetadata",
            "type": "object",
            "description": "A set of custom key/value pairs that you can attach to an order. It can be useful for storing additional information about the order in a structured format. It can be used to define business validation rules or discount formulas.",
            "nullable": true
          }
        },
        "description": "Order information."
      },
      "OrderCalculated": {
        "title": "OrderCalculated",
        "type": "object",
        "description": "Order information.",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique ID assigned by Voucherify of an existing order that will be linked to the redemption of this request.",
            "nullable": true
          },
          "source_id": {
            "type": "string",
            "nullable": true,
            "description": "Unique source ID of an existing order that will be linked to the redemption of this request."
          },
          "status": {
            "type": "string",
            "description": "The order status.",
            "enum": [
              "CREATED",
              "PAID",
              "CANCELED",
              "FULFILLED"
            ],
            "nullable": true
          },
          "amount": {
            "type": "integer",
            "description": "This is the sum of the order items' amounts. It is expressed as an integer in the smallest currency unit (e.g. 100 cents for $1.00).",
            "nullable": true
          },
          "initial_amount": {
            "type": "integer",
            "description": "This is the sum of the order items' amounts before any discount or other effect (e.g. add missing units) is applied. It is expressed as an integer in the smallest currency unit (e.g. 100 cents for $1.00).",
            "nullable": true
          },
          "discount_amount": {
            "type": "integer",
            "description": "Sum of all order-level discounts applied to the order. It is expressed as an integer in the smallest currency unit (e.g. 100 cents for $1.00).",
            "nullable": true
          },
          "items_discount_amount": {
            "type": "integer",
            "description": "Sum of all product-specific discounts applied to the order. It is expressed as an integer in the smallest currency unit (e.g. 100 cents for $1.00).",
            "nullable": true
          },
          "total_discount_amount": {
            "type": "integer",
            "description": "Sum of all order-level AND all product-specific discounts applied to the order. It is expressed as an integer in the smallest currency unit (e.g. 100 cents for $1.00).",
            "nullable": true
          },
          "total_amount": {
            "type": "integer",
            "description": "Order amount after undoing all the discounts through the rollback redemption. It is expressed as an integer in the smallest currency unit (e.g. 100 cents for $1.00).",
            "nullable": true
          },
          "applied_discount_amount": {
            "type": "integer",
            "description": "This field shows the order-level discount applied. It is expressed as an integer in the smallest currency unit (e.g. 100 cents for $1.00).",
            "nullable": true
          },
          "items_applied_discount_amount": {
            "type": "integer",
            "description": "Sum of all product-specific discounts applied in a particular request. It is expressed as an integer in the smallest currency unit (e.g. 100 cents for $1.00).  \n`sum(items, i => i.applied_discount_amount)`",
            "nullable": true
          },
          "total_applied_discount_amount": {
            "type": "integer",
            "description": "Sum of all order-level AND all product-specific discounts applied in a particular request. It is expressed as an integer in the smallest currency unit (e.g. 100 cents for $1.00).  \n`total_applied_discount_amount` = `applied_discount_amount` + `items_applied_discount_amount`",
            "nullable": true
          },
          "metadata": {
            "title": "OrderCalculatedMetadata",
            "type": "object",
            "description": "A set of custom key/value pairs that you can attach to an order. It can be useful for storing additional information about the order in a structured format. It can be used to define business validation rules or discount formulas.",
            "nullable": true
          },
          "object": {
            "type": "string",
            "description": "The type of the object represented by JSON.",
            "default": "order",
            "enum": [
              "order"
            ],
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "example": "2021-12-22T10:13:06.487Z",
            "description": "Timestamp representing the date and time when the order was created. The value is shown in the ISO 8601 format.",
            "format": "date-time",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "nullable": true,
            "example": "2021-12-22T10:14:45.316Z",
            "format": "date-time",
            "description": "Timestamp representing the date and time when the order was last updated in ISO 8601 format."
          },
          "customer_id": {
            "type": "string",
            "nullable": true,
            "description": "Unique customer identifier of the customer making the purchase. The ID is assigned by Voucherify.",
            "example": "cust_7iUa6ICKyU6gH40dBU25kQU1"
          },
          "referrer_id": {
            "type": "string",
            "nullable": true,
            "description": "Unique referrer ID.",
            "example": "cust_nM4jqPiaXUvQdVSA6vTRUnix"
          },
          "customer": {
            "$ref": "#/components/schemas/CustomerId"
          },
          "referrer": {
            "$ref": "#/components/schemas/ReferrerId"
          },
          "redemptions": {
            "title": "OrderCalculatedRedemptions",
            "type": "object",
            "nullable": true
          },
          "items": {
            "title": "OrderCalculatedItems",
            "type": "array",
            "description": "Array of items applied to the order. It can include up 500 items.",
            "items": {
              "$ref": "#/components/schemas/OrderCalculatedItem"
            },
            "nullable": true
          }
        }
      },
      "OrderCalculatedItem": {
        "title": "OrderCalculatedItem",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of the order line item.",
            "nullable": true
          },
          "sku_id": {
            "type": "string",
            "description": "Unique identifier of the SKU. It is assigned by Voucherify.",
            "nullable": true
          },
          "product_id": {
            "type": "string",
            "description": "Unique identifier of the product. It is assigned by Voucherify.",
            "nullable": true
          },
          "related_object": {
            "type": "string",
            "enum": [
              "product",
              "sku"
            ],
            "description": "Used along with the source_id property, can be set to either sku or product.",
            "nullable": true
          },
          "source_id": {
            "type": "string",
            "description": "The merchant's product/SKU ID (if it is different from the Voucherify product/SKU ID). It is useful in the integration between multiple systems. It can be an ID from an eCommerce site, a database, or a third-party service.",
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "description": "The quantity of the particular item in the cart.",
            "nullable": true
          },
          "discount_quantity": {
            "type": "integer",
            "description": "Number of dicounted items.",
            "nullable": true
          },
          "initial_quantity": {
            "type": "integer",
            "description": "A positive integer in the smallest unit quantity representing the total amount of the order; this is the sum of the order items' quantity.",
            "nullable": true
          },
          "amount": {
            "type": "integer",
            "description": "The total amount of the order item (price * quantity).",
            "nullable": true
          },
          "discount_amount": {
            "type": "integer",
            "description": "Sum of all order-item-level discounts applied to the order.",
            "nullable": true
          },
          "applied_discount_amount": {
            "type": "integer",
            "description": "This field shows the order-level discount applied.",
            "nullable": true
          },
          "applied_discount_quantity": {
            "type": "integer",
            "description": "Number of the discounted items applied in the transaction.",
            "nullable": true
          },
          "applied_quantity": {
            "type": "integer",
            "description": "Quantity of items changed by the application of a new quantity items. It can be positive when an item is added or negative if an item is replaced.",
            "nullable": true
          },
          "applied_quantity_amount": {
            "type": "integer",
            "description": "Amount for the items changed by the application of a new quantity items. It can be positive when an item is added or negative if an item is replaced.",
            "nullable": true
          },
          "initial_amount": {
            "type": "integer",
            "description": "A positive integer in the smallest currency unit (e.g. 100 cents for $1.00) representing the total amount of the order. This is the sum of the order items' amounts.",
            "nullable": true
          },
          "price": {
            "type": "integer",
            "description": "Unit price of an item. The value is multiplied by 100 to represent 2 decimal places. For example `10000 cents` for `$100.00`.",
            "nullable": true
          },
          "subtotal_amount": {
            "type": "integer",
            "description": "Final order item amount after the applied item-level discount.  If there are no item-level discounts applied, this item is equal to the `amount`.   \n`subtotal_amount`=`amount`-`applied_discount_amount`",
            "nullable": true
          },
          "product": {
            "title": "OrderCalculatedItemProduct",
            "type": "object",
            "description": "An object containing details of the related product.",
            "properties": {
              "id": {
                "type": "string",
                "description": "A unique identifier that represents the product and is assigned by Voucherify.",
                "nullable": true
              },
              "source_id": {
                "type": "string",
                "description": "The merchant's product ID (if it is different than Voucherify's product ID). It is really useful in case of integration between multiple systems. It can be an ID from an eCommerce site, a database or a 3rd party service.",
                "nullable": true
              },
              "override": {
                "type": "boolean",
                "description": "The override set to `true` is used to store the product information in the system. If the product does not exist, it will be created with a source_id; if it does exist, the provided values for the name, price, and metadata will replace those already stored in the system.",
                "nullable": true
              },
              "name": {
                "type": "string",
                "description": "Product name.",
                "nullable": true
              },
              "metadata": {
                "title": "OrderCalculatedItemProductMetadata",
                "type": "object",
                "description": "A set of custom key/value pairs that you can attach to a product. It can be useful for storing additional information about the product in a structured format. It can be used to create product collections.",
                "nullable": true
              },
              "price": {
                "type": "number",
                "description": "Product price. A positive integer in the smallest currency unit (e.g. 100 cents for $1.00).",
                "nullable": true
              }
            },
            "nullable": true
          },
          "sku": {
            "title": "OrderCalculatedItemSku",
            "type": "object",
            "description": "An object containing details of the related SKU.",
            "properties": {
              "id": {
                "type": "string",
                "description": "A unique identifier that represents the SKU and is assigned by Voucherify.",
                "nullable": true
              },
              "source_id": {
                "type": "string",
                "description": "The merchant's SKU ID (if it is different than Voucherify's SKU ID). It is really useful in case of integration between multiple systems. It can be an ID from an eCommerce site, a database or a 3rd party service.",
                "nullable": true
              },
              "override": {
                "type": "boolean",
                "description": "The override set to `true` is used to store the product information in the system. If the product does not exist, it will be created with a source_id; if it does exist, the provided values for the name, price, and metadata will replace those already stored in the system.",
                "nullable": true
              },
              "sku": {
                "type": "string",
                "description": "The SKU name.",
                "nullable": true
              },
              "price": {
                "type": "number",
                "description": "SKU price. A positive integer in the smallest currency unit (e.g. 100 cents for $1.00).",
                "nullable": true
              },
              "metadata": {
                "title": "OrderCalculatedItemSkuMetadata",
                "type": "object",
                "description": "A set of custom key/value pairs that you can attach to an SKU. It can be useful for storing additional information about the SKU in a structured format. It can be used to create product collections.",
                "nullable": true
              }
            },
            "nullable": true
          },
          "object": {
            "type": "string",
            "default": "order_item",
            "enum": [
              "order_item"
            ],
            "description": "The type of the object represented by JSON.",
            "nullable": true
          },
          "metadata": {
            "title": "OrderCalculatedItemMetadata",
            "type": "object",
            "description": "A set of custom key/value pairs that you can attach to an item object. It can be useful for storing additional information about the item in a structured format. It can be used to define business validation rules or discount formulas.",
            "nullable": true
          },
          "application_details": {
            "$ref": "#/components/schemas/ApplicationDetails"
          }
        },
        "required": []
      },
      "OrderItem": {
        "title": "OrderItem",
        "type": "object",
        "properties": {
          "sku_id": {
            "type": "string",
            "description": "Unique identifier of the SKU. It is assigned by Voucherify.",
            "nullable": true
          },
          "product_id": {
            "type": "string",
            "description": "Unique identifier of the product. It is assigned by Voucherify.",
            "nullable": true
          },
          "related_object": {
            "type": "string",
            "enum": [
              "product",
              "sku"
            ],
            "description": "Used along with the source_id property, can be set to either sku or product.",
            "nullable": true
          },
          "source_id": {
            "type": "string",
            "description": "The merchant's product/SKU ID (if it is different from the Voucherify product/SKU ID). It is useful in the integration between multiple systems. It can be an ID from an eCommerce site, a database, or a third-party service.",
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "description": "The quantity of the particular item in the cart.",
            "nullable": true
          },
          "discount_quantity": {
            "type": "integer",
            "description": "Number of dicounted items.",
            "nullable": true
          },
          "initial_quantity": {
            "type": "integer",
            "description": "A positive integer in the smallest unit quantity representing the total amount of the order; this is the sum of the order items' quantity.",
            "nullable": true
          },
          "amount": {
            "type": "integer",
            "description": "The total amount of the order item (price * quantity).",
            "nullable": true
          },
          "discount_amount": {
            "type": "integer",
            "description": "Sum of all order-item-level discounts applied to the order.",
            "nullable": true
          },
          "initial_amount": {
            "type": "integer",
            "description": "A positive integer in the smallest currency unit (e.g. 100 cents for $1.00) representing the total amount of the order. This is the sum of the order items' amounts.",
            "nullable": true
          },
          "price": {
            "type": "integer",
            "description": "Unit price of an item. The value is multiplied by 100 to represent 2 decimal places. For example `10000 cents` for `$100.00`.",
            "nullable": true
          },
          "product": {
            "title": "OrderItemProduct",
            "type": "object",
            "description": "An object containing details of the related product.",
            "properties": {
              "id": {
                "type": "string",
                "description": "A unique identifier that represents the product and is assigned by Voucherify.",
                "nullable": true
              },
              "source_id": {
                "type": "string",
                "description": "The merchant's product ID (if it is different than Voucherify's product ID). It is really useful in case of integration between multiple systems. It can be an ID from an eCommerce site, a database or a 3rd party service.",
                "nullable": true
              },
              "override": {
                "type": "boolean",
                "description": "The override set to `true` is used to store the product information in the system. If the product does not exist, it will be created with a source_id; if it does exist, the provided values for the name, price, and metadata will replace those already stored in the system. Override works only for endpoints that create an order in the database.",
                "nullable": true
              },
              "name": {
                "type": "string",
                "description": "Product name.",
                "nullable": true
              },
              "metadata": {
                "title": "OrderItemProductMetadata",
                "type": "object",
                "description": "A set of custom key/value pairs that you can attach to a product. It can be useful for storing additional information about the product in a structured format. It can be used to create product collections.",
                "nullable": true
              },
              "price": {
                "type": "number",
                "description": "Product price. A positive integer in the smallest currency unit (e.g. 100 cents for $1.00).",
                "nullable": true
              }
            },
            "nullable": true
          },
          "sku": {
            "title": "OrderItemSku",
            "type": "object",
            "description": "An object containing details of the related SKU.",
            "properties": {
              "id": {
                "type": "string",
                "description": "A unique identifier that represents the SKU and is assigned by Voucherify.",
                "nullable": true
              },
              "source_id": {
                "type": "string",
                "description": "The merchant's SKU ID (if it is different than Voucherify's SKU ID). It is really useful in case of integration between multiple systems. It can be an ID from an eCommerce site, a database or a 3rd party service.",
                "nullable": true
              },
              "override": {
                "type": "boolean",
                "description": "The override set to `true` is used to store the product information in the system. If the product does not exist, it will be created with a source_id; if it does exist, the provided values for the name, price, and metadata will replace those already stored in the system.",
                "nullable": true
              },
              "sku": {
                "type": "string",
                "description": "The SKU name.",
                "nullable": true
              },
              "price": {
                "type": "number",
                "description": "SKU price. A positive integer in the smallest currency unit (e.g. 100 cents for $1.00).",
                "nullable": true
              },
              "metadata": {
                "title": "OrderItemSkuMetadata",
                "type": "object",
                "description": "A set of custom key/value pairs that you can attach to an order item. It can be useful for storing additional information about the order item in a structured format. It can be used to create product collections.",
                "nullable": true
              }
            },
            "nullable": true
          },
          "metadata": {
            "title": "OrderItemMetadata",
            "type": "object",
            "description": "A set of custom key/value pairs that you can attach to an order item. It can be useful for storing additional information about the order item in a structured format. It can be used to define business validation rules.",
            "nullable": true
          }
        },
        "required": [
          "object"
        ]
      },
      "PointsExpirationTypes": {
        "title": "PointsExpirationTypes",
        "type": "string",
        "enum": [
          "PROGRAM_RULES",
          "CUSTOM_DATE",
          "NON_EXPIRING"
        ]
      },
      "Product": {
        "title": "Product",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique product ID assigned by Voucherify.",
            "example": "prod_0b1da8105693710357",
            "nullable": true
          },
          "source_id": {
            "type": "string",
            "nullable": true,
            "example": "productSourceID16",
            "description": "Unique product source ID."
          },
          "name": {
            "type": "string",
            "nullable": true,
            "description": "Unique user-defined product name.",
            "example": "T-shirt"
          },
          "price": {
            "type": "integer",
            "nullable": true,
            "description": "Unit price. It is represented by a value multiplied by 100 to accurately reflect 2 decimal places, such as `$100.00` being expressed as `10000`."
          },
          "attributes": {
            "title": "ProductAttributes",
            "type": "array",
            "description": "A list of product attributes whose values you can customize for given SKUs: `[\"color\",\"size\",\"ranking\"]`. Each child SKU can have a unique value for a given attribute.",
            "items": {
              "title": "ProductAttributesItem",
              "type": "string"
            },
            "nullable": true
          },
          "metadata": {
            "title": "ProductMetadata",
            "type": "object",
            "description": "The metadata object stores all custom attributes assigned to the product. A set of key/value pairs that you can attach to a product object. It can be useful for storing additional information about the product in a structured format. It can be used to create product collections.",
            "nullable": true
          },
          "image_url": {
            "type": "string",
            "nullable": true,
            "description": "The HTTPS URL pointing to the .png or .jpg file that will be used to render the product image.",
            "example": "https://images.com/original.jpg"
          },
          "created_at": {
            "type": "string",
            "description": "Timestamp representing the date and time when the product was created. The value is shown in the ISO 8601 format.",
            "example": "2022-05-23T06:52:55.008Z",
            "format": "date-time",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "nullable": true,
            "description": "Timestamp representing the date and time when the product was updated. The value is shown in the ISO 8601 format.",
            "example": "2022-05-23T09:24:07.405Z",
            "format": "date-time"
          },
          "object": {
            "type": "string",
            "description": "The type of the object represented by JSON. This object stores information about the product.",
            "default": "product",
            "enum": [
              "product"
            ],
            "nullable": true
          },
          "skus": {
            "$ref": "#/components/schemas/SkusListForProduct"
          }
        },
        "description": "This is an object representing a product.  \n\nThis entity should be used to map product items from your inventory management system. The aim of products is to build which reflect product-specific campaigns."
      },
      "ProductCollectionsItem": {
        "title": "ProductCollectionsItem",
        "description": "This is an object representing a product collection base. ",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Product collection ID.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "example": "All Products",
            "description": "Unique user-defined product collection name.",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "Describes whether the product collection is dynamic (products come in and leave based on set criteria) or static (manually selected products).",
            "enum": [
              "STATIC",
              "AUTO_UPDATE"
            ],
            "nullable": true
          },
          "filter": {
            "title": "ProductCollectionsItemFilter",
            "type": "object",
            "description": "Defines a set of criteria and boundary conditions for an `AUTO_UPDATE` product collection type.",
            "required": [
              "junction"
            ],
            "nullable": true
          },
          "products": {
            "title": "ProductCollectionsItemProducts",
            "description": "Defines a set of products for a `STATIC` product collection type.",
            "type": "array",
            "items": {
              "title": "ProductCollectionsItemProductsItem",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "example": "prod_0a41bcf807c5fcaaf6",
                  "description": "The product ID."
                },
                "product_id": {
                  "type": "string",
                  "description": "Product ID for SKUs."
                },
                "object": {
                  "type": "string",
                  "enum": [
                    "sku",
                    "product"
                  ],
                  "description": "Denotes the type of the object represented by the ID."
                }
              },
              "required": [
                "id",
                "object"
              ]
            },
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "example": "2021-12-09T12:51:29.898Z",
            "description": "Timestamp representing the date and time when the product collection was created. The value is shown in the ISO 8601 format.",
            "format": "date-time",
            "nullable": true
          },
          "object": {
            "type": "string",
            "description": "The type of the object represented by JSON. This object stores information about the static product collection.",
            "default": "products_collection",
            "enum": [
              "products_collection"
            ],
            "nullable": true
          }
        },
        "required": []
      },
      "ProductWithoutSkus": {
        "title": "ProductWithoutSkus",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique product ID assigned by Voucherify.",
            "example": "prod_0b1da8105693710357",
            "nullable": true
          },
          "source_id": {
            "type": "string",
            "nullable": true,
            "example": "productSourceID16",
            "description": "Unique product source ID."
          },
          "name": {
            "type": "string",
            "nullable": true,
            "description": "Unique user-defined product name.",
            "example": "T-shirt"
          },
          "price": {
            "type": "integer",
            "nullable": true,
            "description": "Unit price. It is represented by a value multiplied by 100 to accurately reflect 2 decimal places, such as `$100.00` being expressed as `10000`."
          },
          "attributes": {
            "title": "ProductWithoutSkusAttributes",
            "type": "array",
            "description": "A list of product attributes whose values you can customize for given SKUs: `[\"color\",\"size\",\"ranking\"]`. Each child SKU can have a unique value for a given attribute.",
            "items": {
              "title": "ProductWithoutSkusAttributesItem",
              "type": "string"
            },
            "nullable": true
          },
          "metadata": {
            "title": "ProductWithoutSkusMetadata",
            "type": "object",
            "description": "The metadata object stores all custom attributes assigned to the product. A set of key/value pairs that you can attach to a product object. It can be useful for storing additional information about the product in a structured format. It can be used to create product collections.",
            "nullable": true
          },
          "image_url": {
            "type": "string",
            "nullable": true,
            "description": "The HTTPS URL pointing to the .png or .jpg file that will be used to render the product image.",
            "example": "https://images.com/original.jpg"
          },
          "created_at": {
            "type": "string",
            "description": "Timestamp representing the date and time when the product was created. The value is shown in the ISO 8601 format.",
            "example": "2022-05-23T06:52:55.008Z",
            "format": "date-time",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "nullable": true,
            "description": "Timestamp representing the date and time when the product was updated. The value is shown in the ISO 8601 format.",
            "example": "2022-05-23T09:24:07.405Z",
            "format": "date-time"
          },
          "object": {
            "type": "string",
            "description": "The type of the object represented by JSON. This object stores information about the product.",
            "default": "product",
            "enum": [
              "product"
            ],
            "nullable": true
          }
        },
        "required": []
      },
      "PromotionStack": {
        "title": "PromotionStack",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Promotion stack name.",
            "nullable": true
          },
          "tiers": {
            "title": "PromotionStackTiers",
            "type": "object",
            "required": [],
            "description": "Contains the tier configuration. A promotion stack can include up to 30 tiers.",
            "properties": {
              "ids": {
                "title": "PromotionStackTiersIds",
                "type": "array",
                "minItems": 1,
                "description": "Contains the list of tiers in a pre-defined sequence.",
                "items": {
                  "title": "PromotionStackTiersIdsItem",
                  "type": "string"
                },
                "nullable": true
              },
              "hierarchy_mode": {
                "type": "string",
                "default": "MANUAL",
                "enum": [
                  "MANUAL"
                ],
                "nullable": true
              }
            },
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "Unique promotion stack ID.",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp representing the date and time when the promotion stack was created. The value is shown in the ISO 8601 format.",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp representing the date and time when the promotion stack was updated. The value is shown in the ISO 8601 format.",
            "nullable": true
          },
          "campaign_id": {
            "type": "string",
            "description": "Promotion stack's parent campaign's unique ID.",
            "nullable": true
          },
          "object": {
            "type": "string",
            "default": "promotion_stack",
            "enum": [
              "promotion_stack"
            ],
            "description": "The type of the object represented by JSON. ",
            "nullable": true
          },
          "category_id": {
            "type": "string",
            "nullable": true,
            "description": "Promotion stack category ID."
          },
          "categories": {
            "title": "PromotionStackCategories",
            "type": "array",
            "description": "Details about the category assigned to the promotion stack.",
            "items": {
              "$ref": "#/components/schemas/Category"
            },
            "nullable": true
          }
        }
      },
      "PromotionStackBase": {
        "title": "PromotionStackBase",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Promotion stack name.",
            "nullable": true
          },
          "tiers": {
            "title": "PromotionStackBaseTiers",
            "type": "object",
            "required": [],
            "description": "Contains the tier configuration. A promotion stack can include up to 30 tiers.",
            "properties": {
              "ids": {
                "title": "PromotionStackBaseTiersIds",
                "type": "array",
                "minItems": 1,
                "description": "Contains the list of tiers in a pre-defined sequence.",
                "items": {
                  "title": "PromotionStackBaseTiersIdsItem",
                  "type": "string"
                },
                "nullable": true
              },
              "hierarchy_mode": {
                "type": "string",
                "default": "MANUAL",
                "enum": [
                  "MANUAL"
                ],
                "nullable": true
              }
            },
            "nullable": true
          }
        },
        "required": []
      },
      "PromotionTier": {
        "title": "PromotionTier",
        "type": "object",
        "description": "This is an object representing a promotion tier. Promotion tiers are always assigned to a campaign and cannot be used standalone.",
        "properties": {
          "id": {
            "type": "string",
            "example": "promo_63fYCt81Aw0h7lzyRkrGZh9p",
            "description": "Unique promotion tier ID.",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "example": "2021-12-15T11:34:01.333Z",
            "format": "date-time",
            "description": "Timestamp representing the date and time when the promotion tier was created. The value is shown in the ISO 8601 format.",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "example": "2022-02-09T09:20:05.603Z",
            "format": "date-time",
            "description": "Timestamp representing the date and time when the promotion tier was updated. The value is shown in the ISO 8601 format.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Name of the promotion tier.",
            "nullable": true
          },
          "banner": {
            "type": "string",
            "description": "Text to be displayed to your customers on your website.",
            "nullable": true
          },
          "action": {
            "title": "PromotionTierAction",
            "type": "object",
            "description": "Contains details about the discount applied by the promotion tier.",
            "properties": {
              "discount": {
                "$ref": "#/components/schemas/Discount"
              }
            },
            "nullable": true
          },
          "metadata": {
            "title": "PromotionTierMetadata",
            "type": "object",
            "description": "The metadata object stores all custom attributes assigned to the promotion tier. A set of key/value pairs that you can attach to a promotion tier object. It can be useful for storing additional information about the promotion tier in a structured format.",
            "nullable": true
          },
          "hierarchy": {
            "type": "integer",
            "description": "The promotions hierarchy defines the order in which the discounts from different tiers will be applied to a customer's order. If a customer qualifies for discounts from more than one tier, discounts will be applied in the order defined in the hierarchy.",
            "nullable": true
          },
          "promotion_id": {
            "type": "string",
            "description": "Promotion unique ID.",
            "nullable": true
          },
          "campaign": {
            "title": "PromotionTierCampaign",
            "type": "object",
            "description": "Contains details about promotion tier's parent campaign.",
            "properties": {
              "id": {
                "type": "string",
                "description": "Unique campaign ID.",
                "nullable": true
              },
              "start_date": {
                "type": "string",
                "description": "Activation timestamp defines when the campaign starts to be active in ISO 8601 format. Campaign is *inactive before* this date. ",
                "format": "date-time",
                "example": "2022-09-22T00:00:00.000Z",
                "nullable": true
              },
              "expiration_date": {
                "type": "string",
                "format": "date-time",
                "description": "Expiration timestamp defines when the campaign expires in ISO 8601 format.  Campaign is *inactive after* this date.",
                "example": "2022-09-30T00:00:00.000Z",
                "nullable": true
              },
              "validity_timeframe": {
                "$ref": "#/components/schemas/ValidityTimeframe"
              },
              "validity_day_of_week": {
                "$ref": "#/components/schemas/ValidityDayOfWeek"
              },
              "validity_hours": {
                "$ref": "#/components/schemas/ValidityHours"
              },
              "active": {
                "type": "boolean",
                "description": "A flag indicating whether the campaign is active or not active. A campaign can be disabled even though it's within the active period defined by the `start_date` and `expiration_date` using the <!-- [Disable Campaign](OpenAPI.json/paths/~1campaigns~1{campaignId}~1disable) -->[Disable Campaign](ref:disable-campaign) endpoint.  \n\n- `true` indicates an *active* campaign\n- `false` indicates an *inactive* campaign",
                "nullable": true
              },
              "category_id": {
                "type": "string",
                "example": "cat_0b688929a2476386a6",
                "description": "Unique category ID that this campaign belongs to.",
                "nullable": true
              },
              "object": {
                "type": "string",
                "description": "The type of the object represented by the campaign object. This object stores information about the campaign.",
                "default": "campaign",
                "nullable": true
              }
            },
            "nullable": true
          },
          "campaign_id": {
            "type": "string",
            "description": "Promotion tier's parent campaign's unique ID.",
            "nullable": true
          },
          "active": {
            "type": "boolean",
            "description": "A flag to toggle the promotion tier on or off. You can disable a promotion tier even though it's within the active period defined by the `start_date` and `expiration_date`.  \n\n- `true` indicates an *active* promotion tier\n- `false` indicates an *inactive* promotion tier",
            "nullable": true
          },
          "start_date": {
            "type": "string",
            "description": "Activation timestamp defines when the promotion tier starts to be active in ISO 8601 format. Promotion tier is *inactive before* this date. ",
            "format": "date-time",
            "example": "2022-09-23T00:00:00.000Z",
            "nullable": true
          },
          "expiration_date": {
            "type": "string",
            "description": "Activation timestamp defines when the promotion tier expires in ISO 8601 format. Promotion tier is *inactive after* this date. ",
            "format": "date-time",
            "example": "2022-09-26T00:00:00.000Z",
            "nullable": true
          },
          "validity_timeframe": {
            "$ref": "#/components/schemas/ValidityTimeframe"
          },
          "validity_day_of_week": {
            "$ref": "#/components/schemas/ValidityDayOfWeek"
          },
          "validity_hours": {
            "$ref": "#/components/schemas/ValidityHours"
          },
          "summary": {
            "title": "PromotionTierSummary",
            "type": "object",
            "description": "Contains statistics about promotion tier redemptions and orders.",
            "properties": {
              "redemptions": {
                "title": "PromotionTierSummaryRedemptions",
                "type": "object",
                "description": "Contains statistics about promotion tier redemptions.",
                "properties": {
                  "total_redeemed": {
                    "type": "integer",
                    "description": "Number of times the promotion tier was redeemed.",
                    "nullable": true
                  }
                },
                "nullable": true
              },
              "orders": {
                "title": "PromotionTierSummaryOrders",
                "type": "object",
                "description": "Contains statistics about orders related to the promotion tier.",
                "properties": {
                  "total_amount": {
                    "type": "integer",
                    "description": "Sum of order totals.",
                    "nullable": true
                  },
                  "total_discount_amount": {
                    "type": "integer",
                    "description": "Sum of total discount applied using the promotion tier.",
                    "nullable": true
                  }
                },
                "nullable": true
              }
            },
            "nullable": true
          },
          "object": {
            "type": "string",
            "default": "promotion_tier",
            "description": "The type of the object represented by JSON. This object stores information about the promotion tier.",
            "nullable": true
          },
          "validation_rule_assignments": {
            "$ref": "#/components/schemas/ValidationRuleAssignmentsList"
          },
          "category_id": {
            "type": "string",
            "description": "Promotion tier category ID.",
            "example": "cat_0c9da30e7116ba6bba",
            "nullable": true
          },
          "categories": {
            "title": "PromotionTierCategories",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Category"
            },
            "nullable": true
          }
        }
      },
      "PromotionTierCreateParams": {
        "title": "PromotionTierCreateParams",
        "type": "object",
        "description": "This is an object representing a promotion tier create params. Promotion tiers are always assigned to a campaign and cannot be used standalone.",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the promotion tier.",
            "nullable": true
          },
          "banner": {
            "type": "string",
            "description": "Text to be displayed to your customers on your website.",
            "nullable": true
          },
          "action": {
            "title": "PromotionTierCreateParamsAction",
            "type": "object",
            "description": "Contains details about the discount applied by the promotion tier.",
            "properties": {
              "discount": {
                "$ref": "#/components/schemas/Discount"
              }
            },
            "nullable": true
          },
          "metadata": {
            "title": "PromotionTierCreateParamsMetadata",
            "type": "object",
            "description": "The metadata object stores all custom attributes assigned to the promotion tier. A set of key/value pairs that you can attach to a promotion tier object. It can be useful for storing additional information about the promotion tier in a structured format.",
            "nullable": true
          },
          "validation_rules": {
            "title": "PromotionTierCreateParamsValidationRules",
            "type": "array",
            "description": "Array containing the ID of the validation rule associated with the promotion tier.",
            "items": {
              "title": "PromotionTierCreateParamsValidationRulesItem",
              "type": "string"
            },
            "nullable": true
          },
          "active": {
            "type": "boolean",
            "description": "A flag to toggle the promotion tier on or off. You can disable a promotion tier even though it's within the active period defined by the `start_date` and `expiration_date`.  \n\n- `true` indicates an *active* promotion tier\n- `false` indicates an *inactive* promotion tier",
            "nullable": true
          },
          "hierarchy": {
            "type": "integer",
            "description": "The promotions hierarchy defines the order in which the discounts from different tiers will be applied to a customer's order. If a customer qualifies for discounts from more than one tier, discounts will be applied in the order defined in the hierarchy.",
            "nullable": true
          },
          "start_date": {
            "type": "string",
            "description": "Activation timestamp defines when the promotion tier starts to be active in ISO 8601 format. Promotion tier is *inactive before* this date. ",
            "format": "date-time",
            "example": "2022-09-23T00:00:00.000Z",
            "nullable": true
          },
          "expiration_date": {
            "type": "string",
            "description": "Activation timestamp defines when the promotion tier expires in ISO 8601 format. Promotion tier is *inactive after* this date. ",
            "format": "date-time",
            "example": "2022-09-26T00:00:00.000Z",
            "nullable": true
          },
          "validity_timeframe": {
            "$ref": "#/components/schemas/ValidityTimeframe"
          },
          "validity_day_of_week": {
            "$ref": "#/components/schemas/ValidityDayOfWeek"
          },
          "validity_hours": {
            "$ref": "#/components/schemas/ValidityHours"
          },
          "category": {
            "type": "string",
            "description": "Assign category to the promotion tier.",
            "nullable": true
          },
          "category_id": {
            "type": "string",
            "description": "Instead of using the category name, you can alternatively assign a new category to a promotion tier using a unique category ID, i.e. `cat_0c9da30e7116ba6bba`.",
            "example": "cat_0c9da30e7116ba6bba",
            "nullable": true
          }
        },
        "required": []
      },
      "PromotionTiersList": {
        "title": "PromotionTiersList",
        "type": "object",
        "description": "Promotion Tiers",
        "properties": {
          "object": {
            "type": "string",
            "default": "list",
            "description": "The type of the object represented by JSON. This object stores information about promotion tiers in a dictionary.",
            "nullable": true
          },
          "data_ref": {
            "type": "string",
            "default": "tiers",
            "description": "Identifies the name of the attribute that contains the array of promotion tier objects.",
            "nullable": true
          },
          "tiers": {
            "title": "PromotionTiersListTiers",
            "type": "array",
            "description": "Contains array of promotion tier objects.",
            "items": {
              "$ref": "#/components/schemas/PromotionTier"
            },
            "nullable": true
          },
          "total": {
            "type": "integer",
            "description": "Total number of promotion tiers.",
            "nullable": true
          },
          "has_more": {
            "type": "boolean",
            "description": "As query results are always limited (by the limit parameter), the `has_more` flag indicates if there are more records for given filter parameters. This lets you know if you can run another request to get more records returned in the results.",
            "nullable": true
          }
        }
      },
      "QualificationsOption": {
        "title": "QualificationsOption",
        "type": "object",
        "description": "Configure parameters returned in the response.",
        "properties": {
          "limit": {
            "type": "integer",
            "description": "The maximum number of redeemables to be returned in the API request. The actual number of returned redeemables will be determined by the API. The default value is set to 5",
            "maximum": 50,
            "nullable": true
          },
          "starting_after": {
            "type": "string",
            "nullable": true,
            "example": "2021-09-08T13:52:18.227Z",
            "format": "date-time",
            "description": "Cursor used for paging."
          },
          "filters": {
            "title": "QualificationsOptionFilters",
            "type": "object",
            "description": "A set of filters to return only a specific category or type of redeemable.",
            "properties": {
              "junction": {
                "$ref": "#/components/schemas/Junction"
              },
              "category_id": {
                "$ref": "#/components/schemas/QualificationsFieldConditions"
              },
              "campaign_id": {
                "$ref": "#/components/schemas/QualificationsFieldConditions"
              },
              "campaign_type": {
                "title": "QualificationsOptionFiltersCampaignType",
                "type": "object",
                "description": "Returns both campaigns and their vouchers or promotion tiers. Use other filters, e.g. `resource_type`, to narrow down the results.",
                "properties": {
                  "conditions": {
                    "title": "QualificationsOptionFiltersCampaignTypeConditions",
                    "description": "Data filters used to narrow down the data records to be returned in the result.",
                    "type": "object",
                    "properties": {
                      "$is": {
                        "title": "QualificationsOptionFiltersCampaignTypeConditionsIs",
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/ParameterCampaignType"
                        },
                        "nullable": true
                      },
                      "$is_not": {
                        "title": "QualificationsOptionFiltersCampaignTypeConditionsIsNot",
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/ParameterCampaignType"
                        },
                        "nullable": true
                      },
                      "$in": {
                        "title": "QualificationsOptionFiltersCampaignTypeConditionsIn",
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/ParameterCampaignType"
                        },
                        "nullable": true
                      },
                      "$not_in": {
                        "title": "QualificationsOptionFiltersCampaignTypeConditionsNotIn",
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/ParameterCampaignType"
                        },
                        "nullable": true
                      }
                    },
                    "nullable": true
                  }
                },
                "nullable": true
              },
              "resource_id": {
                "$ref": "#/components/schemas/QualificationsFieldConditions"
              },
              "resource_type": {
                "title": "QualificationsOptionFiltersResourceType",
                "type": "object",
                "properties": {
                  "conditions": {
                    "title": "QualificationsOptionFiltersResourceTypeConditions",
                    "description": "Data filters used to narrow down the data records to be returned in the result.\n- `campaign` refers to campaigns;\n- `voucher` refers to generic (standalone) vouchers or published vouchers;\n- `promotion_tier` refers to promotion tiers.",
                    "type": "object",
                    "properties": {
                      "$is": {
                        "title": "QualificationsOptionFiltersResourceTypeConditionsIs",
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/ResourceTypes"
                        },
                        "nullable": true
                      },
                      "$is_not": {
                        "title": "QualificationsOptionFiltersResourceTypeConditionsIsNot",
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/ResourceTypes"
                        },
                        "nullable": true
                      },
                      "$in": {
                        "title": "QualificationsOptionFiltersResourceTypeConditionsIn",
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/ResourceTypes"
                        },
                        "nullable": true
                      },
                      "$not_in": {
                        "title": "QualificationsOptionFiltersResourceTypeConditionsNotIn",
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/ResourceTypes"
                        },
                        "nullable": true
                      }
                    },
                    "nullable": true
                  }
                },
                "nullable": true
              },
              "voucher_type": {
                "$ref": "#/components/schemas/QualificationsFieldConditions"
              },
              "code": {
                "$ref": "#/components/schemas/QualificationsFieldConditions"
              },
              "holder_role": {
                "title": "QualificationsOptionFiltersHolderRole",
                "type": "object",
                "properties": {
                  "conditions": {
                    "title": "QualificationsOptionFiltersHolderRoleConditions",
                    "description": "Data filters used to narrow down the data records to be returned in the result.",
                    "type": "object",
                    "properties": {
                      "$is": {
                        "title": "QualificationsOptionFiltersHolderRoleConditionsIs",
                        "type": "array",
                        "description": "Will return records only for the first value in the array.",
                        "items": {
                          "title": "QualificationsOptionFiltersHolderRoleConditionsIsItem",
                          "enum": [
                            "OWNER",
                            "REFERRER",
                            "REFEREE"
                          ]
                        },
                        "nullable": true
                      },
                      "$is_not": {
                        "title": "QualificationsOptionFiltersHolderRoleConditionsIsNot",
                        "type": "array",
                        "description": "Will return records only for the first value in the array.",
                        "items": {
                          "title": "QualificationsOptionFiltersHolderRoleConditionsIsNotItem",
                          "enum": [
                            "OWNER",
                            "REFERRER",
                            "REFEREE"
                          ]
                        },
                        "nullable": true
                      },
                      "$in": {
                        "title": "QualificationsOptionFiltersHolderRoleConditionsIn",
                        "type": "array",
                        "description": "Will return records for the values in the array.",
                        "items": {
                          "title": "QualificationsOptionFiltersHolderRoleConditionsInItem",
                          "enum": [
                            "OWNER",
                            "REFERRER",
                            "REFEREE"
                          ]
                        },
                        "nullable": true
                      },
                      "$not_in": {
                        "title": "QualificationsOptionFiltersHolderRoleConditionsNotIn",
                        "type": "array",
                        "description": "Will return records for the values in the array.",
                        "items": {
                          "title": "QualificationsOptionFiltersHolderRoleConditionsNotInItem",
                          "enum": [
                            "OWNER",
                            "REFERRER",
                            "REFEREE"
                          ]
                        },
                        "nullable": true
                      }
                    },
                    "nullable": true
                  }
                },
                "nullable": true
              }
            },
            "nullable": true
          },
          "expand": {
            "title": "QualificationsOptionExpand",
            "type": "array",
            "description": "The expand array lets you configure the parameters included in the response. Depending on the strings included in the array, the response will contain different details. \n\n| **Expand Option** | **Response Body** |\n|:---|:---|\n| [`\"redeemable\"`] | Returns the redeemables':<br>- metadata<br>- redeemable name,<br>- campaign name,<br>- campaign ID|\n| [`\"category\"`] | - Returns an expanded `categories` object, showing details about the category. |\n| [`\"validation_rules\"`] | - Returns an expanded `validation_rules` object, showing details about the validation rules. |",
            "items": {
              "title": "QualificationsOptionExpandItem",
              "type": "string",
              "enum": [
                "redeemable",
                "category",
                "validation_rules"
              ]
            },
            "nullable": true
          },
          "sorting_rule": {
            "type": "string",
            "description": "Is used to determine the order in which data is displayed in the result array. \n\n - `DEFAULT` - Sorting descending by `created_at` \n - `BEST_DEAL` - Sorting descending by `total_applied_discount_amount` \n - `LEAST_DEAL` - Sorting ascending by `total_applied_discount_amount`",
            "enum": [
              "BEST_DEAL",
              "LEAST_DEAL",
              "DEFAULT"
            ],
            "nullable": true
          }
        }
      },
      "QualificationsRedeemables": {
        "title": "QualificationsRedeemables",
        "type": "object",
        "description": "List of redeemables for examine qualification.",
        "properties": {
          "object": {
            "type": "string",
            "default": "list",
            "description": "The type of the object represented by JSON. Default is `list`.",
            "enum": [
              "list"
            ],
            "nullable": true
          },
          "data_ref": {
            "type": "string",
            "default": "data",
            "description": "Identifies the name of the attribute that contains the array of qualified redeemables.",
            "enum": [
              "data"
            ],
            "nullable": true
          },
          "data": {
            "title": "QualificationsRedeemablesData",
            "type": "array",
            "description": "Array of qualified redeemables.",
            "items": {
              "$ref": "#/components/schemas/QualificationsRedeemable"
            },
            "nullable": true
          },
          "total": {
            "type": "integer",
            "example": 5,
            "description": "The number of redeemables returned in the API request.",
            "nullable": true
          },
          "has_more": {
            "type": "boolean",
            "description": "As results are always limited, the `has_more` flag indicates if there are more records for given parameters. This lets you know if you can run another request (with different options) to get more records returned in the results.",
            "nullable": true
          },
          "more_starting_after": {
            "type": "string",
            "description": "Timestamp representing the date and time to use in `starting_after` cursor to get more redeemables.",
            "format": "date-time",
            "example": "2023-10-31T12:13:16.374Z",
            "nullable": true
          }
        },
        "required": []
      },
      "RedeemableHolder": {
        "title": "RedeemableHolder",
        "type": "object",
        "description": "Single customer's redeemable",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of the redeemable holder.",
            "example": "rh_0e7b8db4700106a852",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp representing the date and time when the redeemable was assigned. The value is shown in the ISO 8601 format.",
            "example": "2024-03-22T17:48:25.910Z",
            "nullable": true
          },
          "redeemable_id": {
            "type": "string",
            "description": "Identifier of the redeemable item.",
            "example": "v_GXVguPhq2khgFxH7GrRXWA91gDr1LiA1",
            "nullable": true
          },
          "redeemable_object": {
            "type": "string",
            "description": "Type of the redeemable.",
            "example": "voucher",
            "nullable": true
          },
          "customer_id": {
            "type": "string",
            "description": "Unique identifier of the customer.",
            "example": "cust_p1ufreYbVbwZ1x70nFkH9rF9",
            "nullable": true
          },
          "holder_role": {
            "type": "string",
            "description": "Role of the holder.",
            "enum": [
              "OWNER",
              "REFERRER",
              "REFEREE"
            ],
            "example": "OWNER",
            "nullable": true
          },
          "campaign_id": {
            "type": "string",
            "description": "Unique identifier of the campaign as assigned by Voucherify.",
            "example": "camp_weer1c3p5ZgktqfW56RfoNaG",
            "nullable": true
          },
          "campaign_type": {
            "type": "string",
            "description": "Defines the type of the campaign.",
            "default": "REFERRAL_PROGRAM",
            "enum": [
              "REFERRAL_PROGRAM"
            ],
            "example": "REFERRAL_PROGRAM",
            "nullable": true
          },
          "voucher_type": {
            "type": "string",
            "description": "Defines the type of the voucher.",
            "enum": [
              "GIFT_VOUCHER",
              "DISCOUNT_VOUCHER",
              "LOYALTY_CARD"
            ],
            "example": "DISCOUNT_VOUCHER",
            "nullable": true
          },
          "metadata": {
            "title": "RedeemableHolderMetadata",
            "type": "object",
            "description": "A set of custom key/value pairs that you can attach to a redeemable holder. The metadata object stores all custom attributes assigned to the `redeemable_holder` object.",
            "nullable": true
          },
          "object": {
            "type": "string",
            "description": "The type of the object represented by JSON.",
            "default": "redeemable_holder",
            "enum": [
              "redeemable_holder"
            ],
            "nullable": true
          }
        },
        "required": []
      },
      "Redemption": {
        "title": "Redemption",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "r_0bc92f81a6801f9bca",
            "description": "Unique redemption ID.",
            "nullable": true
          },
          "object": {
            "type": "string",
            "description": "The type of the object represented by the JSON",
            "default": "redemption",
            "enum": [
              "redemption"
            ],
            "nullable": true
          },
          "date": {
            "type": "string",
            "example": "2021-12-22T10:13:06.487Z",
            "description": "Timestamp representing the date and time when the object was created. The value is shown in the ISO 8601 format.",
            "format": "date-time",
            "nullable": true
          },
          "customer_id": {
            "type": "string",
            "nullable": true,
            "example": "cust_i8t5Tt6eiKG5K79KQlJ0Vs64",
            "description": "Unique customer ID of the redeeming customer."
          },
          "tracking_id": {
            "type": "string",
            "nullable": true,
            "description": "Hashed customer source ID."
          },
          "metadata": {
            "title": "RedemptionMetadata",
            "type": "object",
            "nullable": true,
            "description": "The metadata object stores all custom attributes assigned to the redemption."
          },
          "amount": {
            "type": "integer",
            "description": "For gift cards, this is a positive integer in the smallest currency unit (e.g. 100 cents for $1.00) representing the number of redeemed credits.\nFor loyalty cards, this is the number of loyalty points used in the transaction.",
            "example": 10000,
            "nullable": true
          },
          "redemption": {
            "nullable": true,
            "type": "string",
            "description": "Unique redemption ID of the parent redemption.",
            "example": "r_0c656311b5878a2031"
          },
          "result": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "FAILURE"
            ],
            "description": "Redemption result.",
            "nullable": true
          },
          "status": {
            "type": "string",
            "enum": [
              "SUCCEEDED",
              "FAILED",
              "ROLLED_BACK"
            ],
            "description": "Redemption status.",
            "nullable": true
          },
          "session": {
            "title": "RedemptionSession",
            "type": "object",
            "description": "Contains details about the redemption session lock. Sessions can be established only for discount vouchers, promotions, and gift cards.",
            "properties": {
              "key": {
                "type": "string",
                "description": "The session unique ID assigned by Voucherify or your own unique session ID sent in the request.",
                "nullable": true
              }
            },
            "nullable": true
          },
          "related_redemptions": {
            "title": "RedemptionRelatedRedemptions",
            "type": "object",
            "properties": {
              "rollbacks": {
                "title": "RedemptionRelatedRedemptionsRollbacks",
                "type": "array",
                "items": {
                  "title": "RedemptionRelatedRedemptionsRollbacksItem",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "rr_0bc92f81a6801f9bca",
                      "description": "Unique rollback redemption ID."
                    },
                    "date": {
                      "type": "string",
                      "example": "2021-12-22T10:13:06.487Z",
                      "description": "Timestamp representing the date and time when the object was created. The value is shown in the ISO 8601 format.",
                      "format": "date-time"
                    },
                    "rollback_order_mode": {
                      "type": "string",
                      "description": "Defines the rollback mode for the order. `WITH_ORDER` is a default setting. The redemption is rolled back together with the data about the order, including related discount values. `WITHOUT_ORDER` allows rolling the redemption back without affecting order data, including the applied discount values. This is returned only in GET `v1/redemptions/` and GET `v1/redemptions/{redemptionId}` endpoints.",
                      "enum": [
                        "WITH_ORDER",
                        "WITHOUT_ORDER"
                      ]
                    }
                  }
                },
                "nullable": true
              },
              "redemptions": {
                "title": "RedemptionRelatedRedemptionsRedemptions",
                "type": "array",
                "items": {
                  "title": "RedemptionRelatedRedemptionsRedemptionsItem",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "r_0bc92f81a6801f9bca",
                      "description": "Unique redemption ID."
                    },
                    "date": {
                      "type": "string",
                      "example": "2021-12-22T10:13:06.487Z",
                      "description": "Timestamp representing the date and time when the object was created. The value is shown in the ISO 8601 format.",
                      "format": "date-time"
                    }
                  }
                },
                "nullable": true
              }
            },
            "nullable": true
          },
          "failure_code": {
            "type": "string",
            "example": "customer_rules_violated",
            "description": "If the result is `FAILURE`, this parameter will provide a generic reason as to why the redemption failed.",
            "nullable": true
          },
          "failure_message": {
            "type": "string",
            "description": "If the result is `FAILURE`, this parameter will provide a more expanded reason as to why the redemption failed.",
            "nullable": true
          },
          "order": {
            "$ref": "#/components/schemas/OrderCalculated"
          },
          "channel": {
            "title": "RedemptionChannel",
            "type": "object",
            "description": "Defines the details of the channel through which the redemption was issued.",
            "properties": {
              "channel_id": {
                "type": "string",
                "example": "user_g24UoRO3Caxu7FCT4n5tpYEa3zUG0FrH",
                "description": "Unique channel ID of the user performing the redemption. This is either a user ID from a user using the Voucherify Dashboard or an X-APP-Id of a user using the API. For `AUTO_REDEEM`, it is the reward assignment ID.",
                "nullable": true
              },
              "channel_type": {
                "type": "string",
                "description": "The source of the channel for the redemption. A `USER` corresponds to the Voucherify Dashboard, `API` corresponds to the API, and `AUTO_REDEEM` corresponds to a loyalty campaign reward that has been redeemed automatically.",
                "enum": [
                  "USER",
                  "API",
                  "AUTO_REDEEM"
                ],
                "nullable": true
              }
            },
            "nullable": true
          },
          "customer": {
            "$ref": "#/components/schemas/SimpleCustomer"
          },
          "related_object_type": {
            "type": "string",
            "description": "Defines the related object.",
            "enum": [
              "voucher",
              "promotion_tier",
              "redemption"
            ],
            "nullable": true
          },
          "related_object_id": {
            "type": "string",
            "description": "Unique related object ID assigned by Voucherify, i.e. v_lfZi4rcEGe0sN9gmnj40bzwK2FH6QUno for a voucher.",
            "nullable": true
          },
          "promotion_tier": {
            "$ref": "#/components/schemas/PromotionTier"
          },
          "reward": {
            "$ref": "#/components/schemas/RedemptionRewardResult"
          },
          "gift": {
            "title": "RedemptionGift",
            "type": "object",
            "description": "Contains the amount subtracted from the gift card for the redemption.",
            "properties": {
              "amount": {
                "type": "integer",
                "description": "Amount subtracted from the gift card as a result of the redemption. The amount is expressed as the smallest currency unit (e.g. 100 cents for $1.00).",
                "nullable": true
              }
            },
            "nullable": true
          },
          "loyalty_card": {
            "title": "RedemptionLoyaltyCard",
            "type": "object",
            "description": "Contains the number of points subtracted from the loyalty card for the redemption.",
            "properties": {
              "points": {
                "type": "integer",
                "description": "Number of points subtracted from the loyalty card as a result of the redemption.",
                "nullable": true
              }
            },
            "nullable": true
          },
          "voucher": {
            "title": "RedemptionVoucher",
            "description": "Defines the details of the voucher being redeemed.",
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "example": "v_mkZN9v7vjYUadXnHrMza8W5c34fE5KiV",
                "description": "Assigned by the Voucherify API, identifies the voucher.",
                "nullable": true
              },
              "code": {
                "type": "string",
                "example": "WVPblOYX",
                "description": "A code that identifies a voucher. Pattern can use all letters of the English alphabet, Arabic numerals, and special characters.",
                "nullable": true
              },
              "campaign": {
                "type": "string",
                "example": "Gift Card Campaign",
                "description": "A unique campaign name, identifies the voucher's parent campaign.",
                "nullable": true
              },
              "campaign_id": {
                "type": "string",
                "example": "camp_FNYR4jhqZBM9xTptxDGgeNBV",
                "description": "Assigned by the Voucherify API, identifies the voucher's parent campaign.",
                "nullable": true
              },
              "category": {
                "type": "string",
                "description": "Tag defining the category that this voucher belongs to. Useful when listing vouchers using the List Vouchers endpoint.",
                "nullable": true
              },
              "category_id": {
                "type": "string",
                "description": "Unique category ID assigned by Voucherify.",
                "example": "cat_0bb343dee3cdb5ec0c",
                "nullable": true
              },
              "type": {
                "type": "string",
                "enum": [
                  "GIFT_VOUCHER",
                  "DISCOUNT_VOUCHER",
                  "LOYALTY_CARD"
                ],
                "description": "Defines the type of the voucher. ",
                "nullable": true
              },
              "discount": {
                "$ref": "#/components/schemas/Discount"
              },
              "gift": {
                "title": "RedemptionVoucherGift",
                "type": "object",
                "description": "Object representing gift parameters. Child attributes are present only if `type` is `GIFT_VOUCHER`. Defaults to `null`.",
                "properties": {
                  "amount": {
                    "type": "integer",
                    "example": 10000,
                    "description": "Total gift card income over the lifetime of the card. The value is multiplied by 100 to represent 2 decimal places. For example `10000 cents` for `$100.00`.",
                    "nullable": true
                  },
                  "subtracted_amount": {
                    "type": "integer",
                    "description": "Total amount of subtracted credits over the gift card lifetime. The value is multiplied by 100 to represent 2 decimal places. For example `10000 cents` for `$100.00`.",
                    "nullable": true
                  },
                  "balance": {
                    "type": "integer",
                    "example": 500,
                    "description": "Available funds. The value is multiplied by 100 to represent 2 decimal places. For example `10000 cents` for `$100.00`.",
                    "nullable": true
                  },
                  "effect": {
                    "type": "string",
                    "enum": [
                      "APPLY_TO_ORDER",
                      "APPLY_TO_ITEMS"
                    ],
                    "description": "Defines how the credits are applied to the customer's order.",
                    "nullable": true
                  }
                },
                "nullable": true
              },
              "loyalty_card": {
                "title": "RedemptionVoucherLoyaltyCard",
                "type": "object",
                "description": "Object representing loyalty card parameters. Child attributes are present only if `type` is `LOYALTY_CARD`. Defaults to `null`.",
                "properties": {
                  "points": {
                    "type": "integer",
                    "example": 7000,
                    "description": "Total number of points added to the loyalty card over its lifespan.",
                    "nullable": true
                  },
                  "balance": {
                    "type": "integer",
                    "example": 6970,
                    "description": "Points available for reward redemption. This is calculated as follows: `balance` = `points` - `expired_points` - `subtracted_points` - `redemption.redeemed_points`.",
                    "nullable": true
                  },
                  "next_expiration_date": {
                    "type": "string",
                    "format": "date",
                    "example": "2023-05-30",
                    "description": "The next closest date when the next set of points are due to expire.",
                    "nullable": true
                  },
                  "next_expiration_points": {
                    "type": "integer",
                    "description": "The amount of points that are set to expire next.",
                    "nullable": true
                  },
                  "pending_points": {
                    "type": "integer",
                    "description": "Shows the number of pending points that will be added to the loyalty card when they are activated automatically or manually.",
                    "nullable": true
                  },
                  "expired_points": {
                    "type": "integer",
                    "description": "Shows the total number of expired points over the lifetime of the loyalty card.",
                    "nullable": true
                  },
                  "subtracted_points": {
                    "type": "integer",
                    "description": "Shows the total number of subtracted points over the lifetime of the loyalty card.",
                    "nullable": true
                  }
                },
                "nullable": true
              },
              "start_date": {
                "type": "string",
                "example": "2021-12-01T00:00:00.000Z",
                "format": "date-time",
                "description": "Activation timestamp defines when the code starts to be active in ISO 8601 format. Voucher is *inactive before* this date. ",
                "nullable": true
              },
              "expiration_date": {
                "type": "string",
                "example": "2021-12-31T00:00:00.000Z",
                "format": "date-time",
                "description": "Expiration timestamp defines when the code expires in ISO 8601 format.  Voucher is *inactive after* this date.",
                "nullable": true
              },
              "validity_timeframe": {
                "$ref": "#/components/schemas/ValidityTimeframe"
              },
              "validity_day_of_week": {
                "$ref": "#/components/schemas/ValidityDayOfWeek"
              },
              "validity_hours": {
                "$ref": "#/components/schemas/ValidityHours"
              },
              "active": {
                "type": "boolean",
                "nullable": true,
                "description": "A flag to toggle the voucher on or off. You can disable a voucher even though it's within the active period defined by the `start_date` and `expiration_date`.  \n\n- `true` indicates an *active* voucher\n- `false` indicates an *inactive* voucher"
              },
              "additional_info": {
                "type": "string",
                "description": "An optional field to keep any extra textual information about the code such as a code description and details.",
                "nullable": true
              },
              "metadata": {
                "title": "RedemptionVoucherMetadata",
                "type": "object",
                "description": "The metadata object stores all custom attributes assigned to the code. A set of key/value pairs that you can attach to a voucher object. It can be useful for storing additional information about the voucher in a structured format.",
                "nullable": true
              },
              "assets": {
                "$ref": "#/components/schemas/VoucherAssets"
              },
              "is_referral_code": {
                "type": "boolean",
                "nullable": true,
                "description": "Flag indicating whether this voucher is a referral code; `true` for campaign type `REFERRAL_PROGRAM`."
              },
              "created_at": {
                "type": "string",
                "example": "2021-12-22T10:13:06.487Z",
                "description": "Timestamp representing the date and time when the voucher was created. The value is shown in the ISO 8601 format.",
                "format": "date-time",
                "nullable": true
              },
              "updated_at": {
                "type": "string",
                "example": "2021-12-22T10:14:45.316Z",
                "format": "date-time",
                "description": "Timestamp representing the date and time when the voucher was last updated in ISO 8601 format.",
                "nullable": true
              },
              "holder_id": {
                "type": "string",
                "example": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                "description": "Unique customer identifier of the redeemable holder. It equals to the customer ID assigned by Voucherify.",
                "nullable": true
              },
              "referrer_id": {
                "type": "string",
                "description": "Unique identifier of the referring person.",
                "example": "cust_Vzck5i8U3OhcEUFY6MKhN9Rv",
                "nullable": true
              },
              "object": {
                "type": "string",
                "description": "The type of the object represented by JSON. Default is `voucher`.",
                "default": "voucher",
                "nullable": true
              },
              "publish": {
                "title": "RedemptionVoucherPublish",
                "type": "object",
                "description": "Stores a summary of publication events: an event counter and endpoint to return details of each event. Publication is an assignment of a code to a customer, e.g. through a distribution.",
                "properties": {
                  "object": {
                    "type": "string",
                    "default": "list",
                    "description": "The type of the object represented is by default `list`. To get this list, you need to make a call to the endpoint returned in the `url` attribute.",
                    "nullable": true
                  },
                  "count": {
                    "type": "integer",
                    "example": 0,
                    "description": "Publication events counter.",
                    "nullable": true
                  },
                  "url": {
                    "type": "string",
                    "example": "/v1/vouchers/WVPblOYX/publications?page=1&limit=10",
                    "description": "The endpoint where this list of publications can be accessed using a **GET** method. `/v1/vouchers/{voucher_code}/publications`",
                    "nullable": true
                  }
                },
                "nullable": true
              },
              "redemption": {
                "title": "RedemptionVoucherRedemption",
                "type": "object",
                "description": "Stores a summary of redemptions that have been applied to the voucher.",
                "properties": {
                  "quantity": {
                    "type": "integer",
                    "description": "How many times a voucher can be redeemed. A `null` value means unlimited.",
                    "nullable": true
                  },
                  "redeemed_quantity": {
                    "type": "integer",
                    "example": 1,
                    "description": "How many times a voucher has already been redeemed.",
                    "nullable": true
                  },
                  "redeemed_points": {
                    "type": "integer",
                    "example": 100000,
                    "description": "Total loyalty points redeemed.",
                    "nullable": true
                  },
                  "object": {
                    "type": "string",
                    "default": "list",
                    "description": "The type of the object represented is by default `list`. To get this list, you need to make a call to the endpoint returned in the url attribute.",
                    "nullable": true
                  },
                  "url": {
                    "type": "string",
                    "example": "/v1/vouchers/WVPblOYX/redemptions?page=1&limit=10",
                    "description": "The endpoint where this list of redemptions can be accessed using a **GET** method. `/v1/vouchers/{voucher_code}/redemptions`",
                    "nullable": true
                  }
                },
                "nullable": true
              },
              "categories": {
                "title": "RedemptionVoucherCategories",
                "type": "array",
                "description": "Contains details about the category.",
                "items": {
                  "$ref": "#/components/schemas/CategoryWithStackingRulesType"
                },
                "nullable": true
              },
              "validation_rules_assignments": {
                "$ref": "#/components/schemas/ValidationRulesAssignmentsList"
              },
              "holder": {
                "$ref": "#/components/schemas/SimpleCustomer"
              }
            },
            "nullable": true
          }
        },
        "description": "This is an object representing a redemption for **POST** `v1/redemptions` and **POST** `/client/v1/redemptions`."
      },
      "RedemptionEntry": {
        "title": "RedemptionEntry",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "object": {
            "type": "string",
            "enum": [
              "redemption",
              "redemption_rollback"
            ],
            "nullable": true
          },
          "date": {
            "type": "string",
            "example": "2021-12-22T10:13:06.487Z",
            "description": "Timestamp representing the date and time when the object was created. The value is shown in the ISO 8601 format.",
            "format": "date-time",
            "nullable": true
          },
          "customer_id": {
            "type": "string",
            "nullable": true,
            "example": "cust_i8t5Tt6eiKG5K79KQlJ0Vs64",
            "description": "Unique customer ID of the redeeming customer."
          },
          "tracking_id": {
            "type": "string",
            "nullable": true,
            "description": "Hashed customer source ID."
          },
          "metadata": {
            "title": "RedemptionEntryMetadata",
            "type": "object",
            "nullable": true,
            "description": "The metadata object stores all custom attributes assigned to the redemption."
          },
          "amount": {
            "type": "integer",
            "nullable": true,
            "description": "For gift cards, this is a positive integer in the smallest currency unit (e.g. 100 cents for $1.00) representing the number of redeemed credits.\nFor loyalty cards, this is the number of loyalty points used in the transaction. and For gift cards, this represents the number of the credits restored to the card in the rolledback redemption. The number is a negative integer in the smallest currency unit, e.g. -100 cents for $1.00 added back to the card.\nFor loyalty cards, this represents the number of loyalty points restored to the card in the rolledback redemption. The number is a negative integer."
          },
          "redemption": {
            "nullable": true,
            "type": "string",
            "description": "Unique redemption ID of the parent redemption.",
            "example": "r_0c656311b5878a2031"
          },
          "result": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "FAILURE"
            ],
            "description": "Redemption result.",
            "nullable": true
          },
          "status": {
            "type": "string",
            "enum": [
              "SUCCEEDED",
              "FAILED",
              "ROLLED_BACK"
            ],
            "nullable": true
          },
          "session": {
            "title": "RedemptionEntrySession",
            "type": "object",
            "description": "Contains details about the redemption session lock. Sessions can be established only for discount vouchers, promotions, and gift cards.",
            "properties": {
              "key": {
                "type": "string",
                "description": "The session unique ID assigned by Voucherify or your own unique session ID sent in the request.",
                "nullable": true
              }
            },
            "nullable": true
          },
          "related_redemptions": {
            "title": "RedemptionEntryRelatedRedemptions",
            "type": "object",
            "properties": {
              "rollbacks": {
                "title": "RedemptionEntryRelatedRedemptionsRollbacks",
                "type": "array",
                "items": {
                  "title": "RedemptionEntryRelatedRedemptionsRollbacksItem",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "date": {
                      "type": "string",
                      "example": "2021-12-22T10:13:06.487Z",
                      "description": "Timestamp representing the date and time when the object was created. The value is shown in the ISO 8601 format.",
                      "format": "date-time"
                    },
                    "rollback_order_mode": {
                      "type": "string",
                      "description": "Defines the rollback mode for the order. `WITH_ORDER` is a default setting. The redemption is rolled back together with the data about the order, including related discount values. `WITHOUT_ORDER` allows rolling the redemption back without affecting order data, including the applied discount values. This is returned only in GET `v1/redemptions/` and GET `v1/redemptions/{redemptionId}` endpoints.",
                      "enum": [
                        "WITH_ORDER",
                        "WITHOUT_ORDER"
                      ]
                    }
                  }
                },
                "nullable": true
              },
              "redemptions": {
                "title": "RedemptionEntryRelatedRedemptionsRedemptions",
                "type": "array",
                "items": {
                  "title": "RedemptionEntryRelatedRedemptionsRedemptionsItem",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "r_0bc92f81a6801f9bca",
                      "description": "Unique redemption ID."
                    },
                    "date": {
                      "type": "string",
                      "example": "2021-12-22T10:13:06.487Z",
                      "description": "Timestamp representing the date and time when the object was created. The value is shown in the ISO 8601 format.",
                      "format": "date-time"
                    }
                  }
                },
                "nullable": true
              }
            },
            "nullable": true
          },
          "failure_code": {
            "type": "string",
            "example": "customer_rules_violated",
            "description": "If the result is `FAILURE`, this parameter will provide a generic reason as to why the redemption failed.",
            "nullable": true
          },
          "failure_message": {
            "type": "string",
            "description": "If the result is `FAILURE`, this parameter will provide a more expanded reason as to why the redemption failed.",
            "nullable": true
          },
          "order": {
            "title": "RedemptionEntryOrder",
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Unique ID assigned by Voucherify of an existing order that will be linked to the redemption of this request.",
                "nullable": true
              },
              "source_id": {
                "type": "string",
                "nullable": true,
                "description": "Unique source ID of an existing order that will be linked to the redemption of this request."
              },
              "status": {
                "type": "string",
                "description": "The order status.",
                "enum": [
                  "CREATED",
                  "PAID",
                  "CANCELED",
                  "FULFILLED"
                ],
                "nullable": true
              },
              "amount": {
                "type": "integer",
                "description": "This is the sum of the order items' amounts. It is expressed as an integer in the smallest currency unit (e.g. 100 cents for $1.00).",
                "nullable": true
              },
              "initial_amount": {
                "type": "integer",
                "description": "This is the sum of the order items' amounts before any discount or other effect (e.g. add missing units) is applied. It is expressed as an integer in the smallest currency unit (e.g. 100 cents for $1.00).",
                "nullable": true
              },
              "discount_amount": {
                "type": "integer",
                "description": "Sum of all order-level discounts applied to the order. It is expressed as an integer in the smallest currency unit (e.g. 100 cents for $1.00).",
                "nullable": true
              },
              "items_discount_amount": {
                "type": "integer",
                "description": "Sum of all product-specific discounts applied to the order. It is expressed as an integer in the smallest currency unit (e.g. 100 cents for $1.00).",
                "nullable": true
              },
              "total_discount_amount": {
                "type": "integer",
                "description": "Sum of all order-level AND all product-specific discounts applied to the order. It is expressed as an integer in the smallest currency unit (e.g. 100 cents for $1.00).",
                "nullable": true
              },
              "total_amount": {
                "type": "integer",
                "description": "Order amount after undoing all the discounts through the rollback redemption. It is expressed as an integer in the smallest currency unit (e.g. 100 cents for $1.00).",
                "nullable": true
              },
              "applied_discount_amount": {
                "type": "integer",
                "description": "This field shows the order-level discount applied. It is expressed as an integer in the smallest currency unit (e.g. 100 cents for $1.00).",
                "nullable": true
              },
              "items_applied_discount_amount": {
                "type": "integer",
                "description": "Sum of all product-specific discounts applied in a particular request. It is expressed as an integer in the smallest currency unit (e.g. 100 cents for $1.00).  \n`sum(items, i => i.applied_discount_amount)`",
                "nullable": true
              },
              "total_applied_discount_amount": {
                "type": "integer",
                "description": "Sum of all order-level AND all product-specific discounts applied in a particular request. It is expressed as an integer in the smallest currency unit (e.g. 100 cents for $1.00).  \n`total_applied_discount_amount` = `applied_discount_amount` + `items_applied_discount_amount`",
                "nullable": true
              },
              "metadata": {
                "title": "RedemptionEntryOrderMetadata",
                "type": "object",
                "description": "A set of custom key/value pairs that you can attach to an order. It can be useful for storing additional information about the order in a structured format. It can be used to define business validation rules or discount formulas.",
                "nullable": true
              },
              "object": {
                "type": "string",
                "description": "The type of the object represented by JSON.",
                "default": "order",
                "enum": [
                  "order"
                ],
                "nullable": true
              },
              "created_at": {
                "type": "string",
                "example": "2021-12-22T10:13:06.487Z",
                "description": "Timestamp representing the date and time when the order was created. The value is shown in the ISO 8601 format.",
                "format": "date-time",
                "nullable": true
              },
              "updated_at": {
                "type": "string",
                "nullable": true,
                "example": "2021-12-22T10:14:45.316Z",
                "format": "date-time",
                "description": "Timestamp representing the date and time when the order was last updated in ISO 8601 format."
              },
              "customer_id": {
                "type": "string",
                "nullable": true,
                "description": "Unique customer identifier of the customer making the purchase. The ID is assigned by Voucherify.",
                "example": "cust_7iUa6ICKyU6gH40dBU25kQU1"
              },
              "referrer_id": {
                "type": "string",
                "nullable": true,
                "description": "Unique referrer ID.",
                "example": "cust_nM4jqPiaXUvQdVSA6vTRUnix"
              },
              "customer": {
                "title": "RedemptionEntryOrderCustomer",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "A unique identifier of an existing customer.",
                    "nullable": true
                  },
                  "object": {
                    "type": "string",
                    "description": "The type of the object represented by JSON.",
                    "default": "customer",
                    "enum": [
                      "customer"
                    ],
                    "nullable": true
                  }
                },
                "nullable": true
              },
              "referrer": {
                "title": "RedemptionEntryOrderReferrer",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "A unique identifier of an existing customer.",
                    "nullable": true
                  },
                  "object": {
                    "type": "string",
                    "description": "The type of the object represented by JSON.",
                    "default": "customer",
                    "enum": [
                      "customer"
                    ],
                    "nullable": true
                  }
                },
                "nullable": true
              },
              "redemptions": {
                "title": "RedemptionEntryOrderRedemptions",
                "type": "object",
                "nullable": true
              },
              "items": {
                "title": "RedemptionEntryOrderItems",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OrderCalculatedItem"
                },
                "nullable": true,
                "description": "Array of items applied to the order. It can include up 500 items."
              }
            },
            "nullable": true
          },
          "channel": {
            "title": "RedemptionEntryChannel",
            "type": "object",
            "properties": {
              "channel_id": {
                "type": "string",
                "nullable": true
              },
              "channel_type": {
                "type": "string",
                "enum": [
                  "USER",
                  "API",
                  "AUTO_REDEEM"
                ],
                "nullable": true
              }
            },
            "nullable": true
          },
          "customer": {
            "title": "RedemptionEntryCustomer",
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Unique identifier of an existing customer. It is assigned by Voucherify.",
                "nullable": true
              },
              "name": {
                "type": "string",
                "description": "Customer's first and last name.",
                "nullable": true
              },
              "email": {
                "type": "string",
                "description": "Customer's email address.",
                "nullable": true
              },
              "source_id": {
                "type": "string",
                "description": "A unique identifier of the customer. It can be a customer ID or email from a CRM system, database, or a third-party service.",
                "nullable": true
              },
              "metadata": {
                "title": "RedemptionEntryCustomerMetadata",
                "type": "object",
                "description": "A set of custom key/value pairs that are attached to the customer. It stores all custom attributes assigned to the customer.",
                "nullable": true
              },
              "object": {
                "type": "string",
                "description": "The type of the object represented by JSON.",
                "default": "customer",
                "enum": [
                  "customer"
                ],
                "nullable": true
              }
            },
            "nullable": true
          },
          "related_object_type": {
            "type": "string",
            "description": "Defines the related object.",
            "enum": [
              "voucher",
              "promotion_tier",
              "redemption"
            ],
            "nullable": true
          },
          "related_object_id": {
            "type": "string",
            "nullable": true
          },
          "promotion_tier": {
            "title": "RedemptionEntryPromotionTier",
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "example": "promo_63fYCt81Aw0h7lzyRkrGZh9p",
                "description": "Unique promotion tier ID.",
                "nullable": true
              },
              "created_at": {
                "type": "string",
                "example": "2021-12-15T11:34:01.333Z",
                "format": "date-time",
                "description": "Timestamp representing the date and time when the promotion tier was created. The value is shown in the ISO 8601 format.",
                "nullable": true
              },
              "updated_at": {
                "type": "string",
                "example": "2022-02-09T09:20:05.603Z",
                "format": "date-time",
                "description": "Timestamp representing the date and time when the promotion tier was updated. The value is shown in the ISO 8601 format.",
                "nullable": true
              },
              "name": {
                "type": "string",
                "description": "Name of the promotion tier.",
                "nullable": true
              },
              "banner": {
                "type": "string",
                "description": "Text to be displayed to your customers on your website.",
                "nullable": true
              },
              "action": {
                "title": "RedemptionEntryPromotionTierAction",
                "type": "object",
                "properties": {
                  "discount": {
                    "$ref": "#/components/schemas/Discount"
                  }
                },
                "nullable": true
              },
              "metadata": {
                "title": "RedemptionEntryPromotionTierMetadata",
                "type": "object",
                "description": "The metadata object stores all custom attributes assigned to the promotion tier. A set of key/value pairs that you can attach to a promotion tier object. It can be useful for storing additional information about the promotion tier in a structured format.",
                "nullable": true
              },
              "hierarchy": {
                "type": "integer",
                "description": "The promotions hierarchy defines the order in which the discounts from different tiers will be applied to a customer's order. If a customer qualifies for discounts from more than one tier, discounts will be applied in the order defined in the hierarchy.",
                "nullable": true
              },
              "promotion_id": {
                "type": "string",
                "description": "Promotion unique ID.",
                "nullable": true
              },
              "campaign": {
                "title": "RedemptionEntryPromotionTierCampaign",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Unique campaign ID.",
                    "nullable": true
                  },
                  "start_date": {
                    "type": "string",
                    "description": "Activation timestamp defines when the campaign starts to be active in ISO 8601 format. Campaign is *inactive before* this date. ",
                    "format": "date-time",
                    "example": "2022-09-22T00:00:00.000Z",
                    "nullable": true
                  },
                  "expiration_date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Expiration timestamp defines when the campaign expires in ISO 8601 format.  Campaign is *inactive after* this date.",
                    "example": "2022-09-30T00:00:00.000Z",
                    "nullable": true
                  },
                  "validity_timeframe": {
                    "$ref": "#/components/schemas/ValidityTimeframe"
                  },
                  "validity_day_of_week": {
                    "$ref": "#/components/schemas/ValidityDayOfWeek"
                  },
                  "validity_hours": {
                    "$ref": "#/components/schemas/ValidityHours"
                  },
                  "active": {
                    "type": "boolean",
                    "description": "A flag indicating whether the campaign is active or not active. A campaign can be disabled even though it's within the active period defined by the `start_date` and `expiration_date` using the <!-- [Disable Campaign](OpenAPI.json/paths/~1campaigns~1{campaignId}~1disable) -->[Disable Campaign](ref:disable-campaign) endpoint.  \n\n- `true` indicates an *active* campaign\n- `false` indicates an *inactive* campaign",
                    "nullable": true
                  },
                  "category_id": {
                    "type": "string",
                    "example": "cat_0b688929a2476386a6",
                    "description": "Unique category ID that this campaign belongs to.",
                    "nullable": true
                  },
                  "object": {
                    "type": "string",
                    "description": "The type of the object represented by the campaign object. This object stores information about the campaign.",
                    "default": "campaign",
                    "nullable": true
                  }
                },
                "nullable": true
              },
              "campaign_id": {
                "type": "string",
                "description": "Promotion tier's parent campaign's unique ID.",
                "nullable": true
              },
              "active": {
                "type": "boolean",
                "description": "A flag to toggle the promotion tier on or off. You can disable a promotion tier even though it's within the active period defined by the `start_date` and `expiration_date`.  \n\n- `true` indicates an *active* promotion tier\n- `false` indicates an *inactive* promotion tier",
                "nullable": true
              },
              "start_date": {
                "type": "string",
                "description": "Activation timestamp defines when the promotion tier starts to be active in ISO 8601 format. Promotion tier is *inactive before* this date. ",
                "format": "date-time",
                "example": "2022-09-23T00:00:00.000Z",
                "nullable": true
              },
              "expiration_date": {
                "type": "string",
                "description": "Activation timestamp defines when the promotion tier expires in ISO 8601 format. Promotion tier is *inactive after* this date. ",
                "format": "date-time",
                "example": "2022-09-26T00:00:00.000Z",
                "nullable": true
              },
              "validity_timeframe": {
                "$ref": "#/components/schemas/ValidityTimeframe"
              },
              "validity_day_of_week": {
                "$ref": "#/components/schemas/ValidityDayOfWeek"
              },
              "validity_hours": {
                "$ref": "#/components/schemas/ValidityHours"
              },
              "summary": {
                "title": "RedemptionEntryPromotionTierSummary",
                "type": "object",
                "properties": {
                  "redemptions": {
                    "title": "RedemptionEntryPromotionTierSummaryRedemptions",
                    "type": "object",
                    "properties": {
                      "total_redeemed": {
                        "type": "integer",
                        "description": "Number of times the promotion tier was redeemed.",
                        "nullable": true
                      }
                    },
                    "nullable": true
                  },
                  "orders": {
                    "title": "RedemptionEntryPromotionTierSummaryOrders",
                    "type": "object",
                    "properties": {
                      "total_amount": {
                        "type": "integer",
                        "description": "Sum of order totals.",
                        "nullable": true
                      },
                      "total_discount_amount": {
                        "type": "integer",
                        "description": "Sum of total discount applied using the promotion tier.",
                        "nullable": true
                      }
                    },
                    "nullable": true
                  }
                },
                "nullable": true
              },
              "object": {
                "type": "string",
                "default": "promotion_tier",
                "description": "The type of the object represented by JSON. This object stores information about the promotion tier.",
                "nullable": true
              },
              "validation_rule_assignments": {
                "$ref": "#/components/schemas/ValidationRuleAssignmentsList"
              },
              "category_id": {
                "type": "string",
                "description": "Promotion tier category ID.",
                "example": "cat_0c9da30e7116ba6bba",
                "nullable": true
              },
              "categories": {
                "title": "RedemptionEntryPromotionTierCategories",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Category"
                },
                "nullable": true
              }
            },
            "nullable": true
          },
          "reward": {
            "$ref": "#/components/schemas/RedemptionRewardResult"
          },
          "gift": {
            "title": "RedemptionEntryGift",
            "type": "object",
            "properties": {
              "amount": {
                "type": "integer",
                "nullable": true,
                "description": "Amount subtracted from the gift card as a result of the redemption. The amount is expressed as the smallest currency unit (e.g. 100 cents for $1.00). and Amount returned to the gift card as a result of the redemption rollback and expressed as a negative integer. The amount is expressed as the smallest currency unit (e.g. -100 cents for $1.00 returned)."
              }
            },
            "nullable": true
          },
          "loyalty_card": {
            "title": "RedemptionEntryLoyaltyCard",
            "type": "object",
            "properties": {
              "points": {
                "type": "integer",
                "nullable": true,
                "description": "Number of points subtracted from the loyalty card as a result of the redemption. and Number of points being returned to the loyalty card for the reward redemption rollback. It is expressed as a negative integer."
              }
            },
            "nullable": true
          },
          "voucher": {
            "title": "RedemptionEntryVoucher",
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "example": "v_mkZN9v7vjYUadXnHrMza8W5c34fE5KiV",
                "description": "Assigned by the Voucherify API, identifies the voucher.",
                "nullable": true
              },
              "code": {
                "type": "string",
                "example": "WVPblOYX",
                "description": "A code that identifies a voucher. Pattern can use all letters of the English alphabet, Arabic numerals, and special characters.",
                "nullable": true
              },
              "campaign": {
                "type": "string",
                "example": "Gift Card Campaign",
                "description": "A unique campaign name, identifies the voucher's parent campaign.",
                "nullable": true
              },
              "campaign_id": {
                "type": "string",
                "example": "camp_FNYR4jhqZBM9xTptxDGgeNBV",
                "description": "Assigned by the Voucherify API, identifies the voucher's parent campaign.",
                "nullable": true
              },
              "category": {
                "type": "string",
                "description": "Tag defining the category that this voucher belongs to. Useful when listing vouchers using the List Vouchers endpoint.",
                "nullable": true
              },
              "category_id": {
                "type": "string",
                "description": "Unique category ID assigned by Voucherify.",
                "example": "cat_0bb343dee3cdb5ec0c",
                "nullable": true
              },
              "type": {
                "type": "string",
                "enum": [
                  "GIFT_VOUCHER",
                  "DISCOUNT_VOUCHER",
                  "LOYALTY_CARD"
                ],
                "description": "Defines the type of the voucher. ",
                "nullable": true
              },
              "discount": {
                "$ref": "#/components/schemas/Discount"
              },
              "gift": {
                "title": "RedemptionEntryVoucherGift",
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "integer",
                    "example": 10000,
                    "description": "Total gift card income over the lifetime of the card. The value is multiplied by 100 to represent 2 decimal places. For example `10000 cents` for `$100.00`.",
                    "nullable": true
                  },
                  "subtracted_amount": {
                    "type": "integer",
                    "description": "Total amount of subtracted credits over the gift card lifetime. The value is multiplied by 100 to represent 2 decimal places. For example `10000 cents` for `$100.00`.",
                    "nullable": true
                  },
                  "balance": {
                    "type": "integer",
                    "example": 500,
                    "description": "Available funds. The value is multiplied by 100 to represent 2 decimal places. For example `10000 cents` for `$100.00`.",
                    "nullable": true
                  },
                  "effect": {
                    "type": "string",
                    "enum": [
                      "APPLY_TO_ORDER",
                      "APPLY_TO_ITEMS"
                    ],
                    "description": "Defines how the credits are applied to the customer's order.",
                    "nullable": true
                  }
                },
                "nullable": true
              },
              "loyalty_card": {
                "title": "RedemptionEntryVoucherLoyaltyCard",
                "type": "object",
                "properties": {
                  "points": {
                    "type": "integer",
                    "example": 7000,
                    "description": "Total number of points added to the loyalty card over its lifespan.",
                    "nullable": true
                  },
                  "balance": {
                    "type": "integer",
                    "example": 6970,
                    "description": "Points available for reward redemption. This is calculated as follows: `balance` = `points` - `expired_points` - `subtracted_points` - `redemption.redeemed_points`.",
                    "nullable": true
                  },
                  "next_expiration_date": {
                    "type": "string",
                    "format": "date",
                    "example": "2023-05-30",
                    "description": "The next closest date when the next set of points are due to expire.",
                    "nullable": true
                  },
                  "next_expiration_points": {
                    "type": "integer",
                    "description": "The amount of points that are set to expire next.",
                    "nullable": true
                  },
                  "pending_points": {
                    "type": "integer",
                    "description": "Shows the number of pending points that will be added to the loyalty card when they are activated automatically or manually.",
                    "nullable": true
                  },
                  "expired_points": {
                    "type": "integer",
                    "description": "Shows the total number of expired points over the lifetime of the loyalty card.",
                    "nullable": true
                  },
                  "subtracted_points": {
                    "type": "integer",
                    "description": "Shows the total number of subtracted points over the lifetime of the loyalty card.",
                    "nullable": true
                  }
                },
                "nullable": true
              },
              "start_date": {
                "type": "string",
                "example": "2021-12-01T00:00:00.000Z",
                "format": "date-time",
                "description": "Activation timestamp defines when the code starts to be active in ISO 8601 format. Voucher is *inactive before* this date. ",
                "nullable": true
              },
              "expiration_date": {
                "type": "string",
                "example": "2021-12-31T00:00:00.000Z",
                "format": "date-time",
                "description": "Expiration timestamp defines when the code expires in ISO 8601 format.  Voucher is *inactive after* this date.",
                "nullable": true
              },
              "validity_timeframe": {
                "$ref": "#/components/schemas/ValidityTimeframe"
              },
              "validity_day_of_week": {
                "$ref": "#/components/schemas/ValidityDayOfWeek"
              },
              "validity_hours": {
                "$ref": "#/components/schemas/ValidityHours"
              },
              "active": {
                "type": "boolean",
                "nullable": true,
                "description": "A flag to toggle the voucher on or off. You can disable a voucher even though it's within the active period defined by the `start_date` and `expiration_date`.  \n\n- `true` indicates an *active* voucher\n- `false` indicates an *inactive* voucher"
              },
              "additional_info": {
                "type": "string",
                "description": "An optional field to keep any extra textual information about the code such as a code description and details.",
                "nullable": true
              },
              "metadata": {
                "title": "RedemptionEntryVoucherMetadata",
                "type": "object",
                "description": "The metadata object stores all custom attributes assigned to the code. A set of key/value pairs that you can attach to a voucher object. It can be useful for storing additional information about the voucher in a structured format.",
                "nullable": true
              },
              "assets": {
                "$ref": "#/components/schemas/VoucherAssets"
              },
              "is_referral_code": {
                "type": "boolean",
                "nullable": true,
                "description": "Flag indicating whether this voucher is a referral code; `true` for campaign type `REFERRAL_PROGRAM`."
              },
              "created_at": {
                "type": "string",
                "example": "2021-12-22T10:13:06.487Z",
                "description": "Timestamp representing the date and time when the voucher was created. The value is shown in the ISO 8601 format.",
                "format": "date-time",
                "nullable": true
              },
              "updated_at": {
                "type": "string",
                "example": "2021-12-22T10:14:45.316Z",
                "format": "date-time",
                "description": "Timestamp representing the date and time when the voucher was last updated in ISO 8601 format.",
                "nullable": true
              },
              "holder_id": {
                "type": "string",
                "example": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                "description": "Unique customer identifier of the redeemable holder. It equals to the customer ID assigned by Voucherify.",
                "nullable": true
              },
              "referrer_id": {
                "type": "string",
                "description": "Unique identifier of the referring person.",
                "example": "cust_Vzck5i8U3OhcEUFY6MKhN9Rv",
                "nullable": true
              },
              "object": {
                "type": "string",
                "description": "The type of the object represented by JSON. Default is `voucher`.",
                "default": "voucher",
                "nullable": true
              },
              "publish": {
                "title": "RedemptionEntryVoucherPublish",
                "type": "object",
                "properties": {
                  "object": {
                    "type": "string",
                    "default": "list",
                    "description": "The type of the object represented is by default `list`. To get this list, you need to make a call to the endpoint returned in the `url` attribute.",
                    "nullable": true
                  },
                  "count": {
                    "type": "integer",
                    "example": 0,
                    "description": "Publication events counter.",
                    "nullable": true
                  },
                  "url": {
                    "type": "string",
                    "example": "/v1/vouchers/WVPblOYX/publications?page=1&limit=10",
                    "description": "The endpoint where this list of publications can be accessed using a **GET** method. `/v1/vouchers/{voucher_code}/publications`",
                    "nullable": true
                  }
                },
                "nullable": true
              },
              "redemption": {
                "title": "RedemptionEntryVoucherRedemption",
                "type": "object",
                "properties": {
                  "quantity": {
                    "type": "integer",
                    "description": "How many times a voucher can be redeemed. A `null` value means unlimited.",
                    "nullable": true
                  },
                  "redeemed_quantity": {
                    "type": "integer",
                    "example": 1,
                    "description": "How many times a voucher has already been redeemed.",
                    "nullable": true
                  },
                  "redeemed_points": {
                    "type": "integer",
                    "example": 100000,
                    "description": "Total loyalty points redeemed.",
                    "nullable": true
                  },
                  "object": {
                    "type": "string",
                    "default": "list",
                    "description": "The type of the object represented is by default `list`. To get this list, you need to make a call to the endpoint returned in the url attribute.",
                    "nullable": true
                  },
                  "url": {
                    "type": "string",
                    "example": "/v1/vouchers/WVPblOYX/redemptions?page=1&limit=10",
                    "description": "The endpoint where this list of redemptions can be accessed using a **GET** method. `/v1/vouchers/{voucher_code}/redemptions`",
                    "nullable": true
                  }
                },
                "nullable": true
              },
              "categories": {
                "title": "RedemptionEntryVoucherCategories",
                "type": "array",
                "description": "Contains details about the category.",
                "items": {
                  "$ref": "#/components/schemas/Category"
                },
                "nullable": true
              },
              "validation_rules_assignments": {
                "$ref": "#/components/schemas/ValidationRulesAssignmentsList"
              },
              "holder": {
                "$ref": "#/components/schemas/SimpleCustomer"
              }
            },
            "nullable": true
          },
          "reason": {
            "type": "string",
            "description": "System generated cause for the redemption being invalid in the context of the provided parameters.",
            "nullable": true
          }
        }
      },
      "RedemptionRewardResult": {
        "title": "RedemptionRewardResult",
        "type": "object",
        "properties": {
          "customer": {
            "$ref": "#/components/schemas/SimpleCustomer"
          },
          "assignment_id": {
            "type": "string",
            "nullable": true,
            "description": "Unique reward assignment ID assigned by Voucherify."
          },
          "voucher": {
            "$ref": "#/components/schemas/Voucher"
          },
          "product": {
            "$ref": "#/components/schemas/Product"
          },
          "sku": {
            "$ref": "#/components/schemas/Sku"
          },
          "loyalty_tier_id": {
            "type": "string",
            "nullable": true,
            "description": "Unique loyalty tier ID assigned by Voucherify."
          },
          "id": {
            "type": "string",
            "example": "rew_0bc92f81a6801f9bca",
            "description": "Unique reward ID.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "example": "Reward Name",
            "description": "Name of the reward.",
            "nullable": true
          },
          "object": {
            "type": "string",
            "description": "The type of the object represented by the JSON",
            "default": "reward",
            "enum": [
              "reward"
            ],
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "example": "2021-12-22T10:13:06.487Z",
            "description": "Timestamp representing the date and time when the redemption was created. The value is shown in the ISO 8601 format.",
            "format": "date-time",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2022-10-03T12:24:58.008Z",
            "description": "Timestamp in ISO 8601 format indicating when the reward was updated.",
            "nullable": true
          },
          "parameters": {
            "title": "RedemptionRewardResultParameters",
            "type": "object",
            "description": "These are parameters representing a material reward.",
            "properties": {
              "campaign": {
                "title": "RedemptionRewardResultParametersCampaign",
                "type": "object",
                "description": "Defines the product redeemed as a reward.",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Campaign unique ID.",
                    "example": "camp_13BbZ0kQsNinhqsX3wUts2UP",
                    "nullable": true
                  },
                  "balance": {
                    "type": "integer",
                    "description": "Points available for reward redemption. This is calculated as follows: `balance` = `points` - `expired_points` - `subtracted_points` - `redemption.redeemed_points`.",
                    "nullable": true
                  },
                  "type": {
                    "type": "string",
                    "description": "Defines the type of the campaign.",
                    "nullable": true
                  }
                },
                "nullable": true
              },
              "product": {
                "title": "RedemptionRewardResultParametersProduct",
                "type": "object",
                "description": "Defines the product redeemed as a reward.",
                "properties": {
                  "id": {
                    "type": "string",
                    "example": "prod_0b7d7dfb05cbe5c616",
                    "description": "Unique product ID, assigned by Voucherify. ",
                    "nullable": true
                  },
                  "sku_id": {
                    "type": "string",
                    "description": "Unique identifier of the SKU. It is assigned by Voucherify.",
                    "example": "sku_0a41e31c7b41c28358",
                    "nullable": true
                  }
                },
                "nullable": true
              },
              "coin": {
                "title": "RedemptionRewardResultParametersCoin",
                "type": "object",
                "description": "Defines the ratio by mapping the number of loyalty points in `points_ratio` to a predefined cash amount in `exchange_ratio`.",
                "properties": {
                  "exchange_ratio": {
                    "type": "integer",
                    "description": "The cash equivalent of the points defined in the `points_ratio` property.",
                    "nullable": true
                  },
                  "points_ratio": {
                    "type": "integer",
                    "description": "The number of loyalty points that will map to the predefined cash amount defined by the `exchange_ratio` property.",
                    "nullable": true
                  }
                },
                "nullable": true
              }
            },
            "nullable": true
          },
          "metadata": {
            "title": "RedemptionRewardResultMetadata",
            "type": "object",
            "description": "A set of custom key/value pairs that you can attach to a reward. The metadata object stores all custom attributes assigned to the reward.",
            "nullable": true
          },
          "type": {
            "type": "string",
            "enum": [
              "CAMPAIGN",
              "COIN",
              "MATERIAL"
            ],
            "description": "Reward type.",
            "nullable": true
          }
        },
        "required": [
          "reward"
        ]
      },
      "RedemptionRollback": {
        "title": "RedemptionRollback",
        "type": "object",
        "description": "This is an object representing a redemption rollback.",
        "properties": {
          "id": {
            "type": "string",
            "example": "rr_0efeb3dab05e62e599",
            "description": "Unique identifier of the redemption rollback.",
            "nullable": true
          },
          "object": {
            "type": "string",
            "description": "The type of the object represented by the JSON",
            "default": "redemption_rollback",
            "enum": [
              "redemption_rollback"
            ],
            "nullable": true
          },
          "date": {
            "type": "string",
            "example": "2021-12-22T10:13:06.487Z",
            "description": "Timestamp representing the date and time when the object was created. The value is shown in the ISO 8601 format.",
            "format": "date-time",
            "nullable": true
          },
          "customer_id": {
            "type": "string",
            "nullable": true,
            "example": "cust_i8t5Tt6eiKG5K79KQlJ0Vs64",
            "description": "Unique customer ID of the redeeming customer."
          },
          "tracking_id": {
            "type": "string",
            "nullable": true,
            "description": "Hashed customer source ID."
          },
          "metadata": {
            "title": "RedemptionRollbackMetadata",
            "type": "object",
            "nullable": true,
            "description": "The metadata object stores all custom attributes assigned to the redemption."
          },
          "amount": {
            "type": "integer",
            "description": "For gift cards, this represents the number of the credits restored to the card in the rolledback redemption. The number is a negative integer in the smallest currency unit, e.g. -100 cents for $1.00 added back to the card.\nFor loyalty cards, this represents the number of loyalty points restored to the card in the rolledback redemption. The number is a negative integer.",
            "example": -10000,
            "nullable": true
          },
          "redemption": {
            "nullable": true,
            "type": "string",
            "description": "Unique redemption ID of the parent redemption.",
            "example": "r_0c656311b5878a2031"
          },
          "reason": {
            "type": "string",
            "description": "System generated cause for the redemption being invalid in the context of the provided parameters.",
            "nullable": true
          },
          "result": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "FAILURE"
            ],
            "description": "Redemption result.",
            "nullable": true
          },
          "status": {
            "type": "string",
            "enum": [
              "SUCCEEDED",
              "FAILED"
            ],
            "description": "Redemption status.",
            "nullable": true
          },
          "failure_code": {
            "type": "string",
            "example": "customer_rules_violated",
            "description": "If the result is `FAILURE`, this parameter will provide a generic reason as to why the redemption failed.",
            "nullable": true
          },
          "failure_message": {
            "type": "string",
            "description": "If the result is `FAILURE`, this parameter will provide a more expanded reason as to why the redemption failed.",
            "nullable": true
          },
          "order": {
            "$ref": "#/components/schemas/OrderCalculated"
          },
          "channel": {
            "title": "RedemptionRollbackChannel",
            "type": "object",
            "description": "Defines the details of the channel through which the redemption was issued.",
            "properties": {
              "channel_id": {
                "type": "string",
                "example": "user_g24UoRO3Caxu7FCT4n5tpYEa3zUG0FrH",
                "description": "Unique identifier of the channel which was used by the user performing the redemption rollback. This is either a user ID from the user using the Voucherify Dashboard or an X-APP-Id of a user using the API.",
                "nullable": true
              },
              "channel_type": {
                "type": "string",
                "description": "The source of the channel for the redemption. A `USER` corresponds to the Voucherify Dashboard and an `API` corresponds to the API.",
                "enum": [
                  "USER",
                  "API"
                ],
                "nullable": true
              }
            },
            "nullable": true
          },
          "customer": {
            "$ref": "#/components/schemas/SimpleCustomer"
          },
          "related_object_type": {
            "type": "string",
            "description": "Defines the related object.",
            "enum": [
              "voucher",
              "promotion_tier",
              "redemption"
            ],
            "nullable": true
          },
          "related_object_id": {
            "type": "string",
            "description": "Unique identifier of the related object. It is assigned by Voucherify, i.e. `v_lfZi4rcEGe0sN9gmnj40bzwK2FH6QUno` for a voucher.",
            "nullable": true
          },
          "voucher": {
            "$ref": "#/components/schemas/Voucher"
          },
          "promotion_tier": {
            "$ref": "#/components/schemas/PromotionTier"
          },
          "reward": {
            "$ref": "#/components/schemas/RedemptionRewardResult"
          },
          "gift": {
            "title": "RedemptionRollbackGift",
            "type": "object",
            "description": "Contains the amount returned to the gift card in the redemption rollback. It is expressed as a negative integer.",
            "properties": {
              "amount": {
                "type": "integer",
                "description": "Amount returned to the gift card as a result of the redemption rollback and expressed as a negative integer. The amount is expressed as the smallest currency unit (e.g. -100 cents for $1.00 returned).",
                "nullable": true
              }
            },
            "nullable": true
          },
          "loyalty_card": {
            "title": "RedemptionRollbackLoyaltyCard",
            "type": "object",
            "description": "Contains the number of points returned to the loyalty card in the reward redemption rollback. It is expressed as a negative integer.",
            "properties": {
              "points": {
                "type": "integer",
                "description": "Number of points being returned to the loyalty card for the reward redemption rollback. It is expressed as a negative integer.",
                "nullable": true
              }
            },
            "nullable": true
          },
          "related_redemptions": {
            "title": "RedemptionRollbackRelatedRedemptions",
            "type": "object",
            "properties": {
              "rollbacks": {
                "title": "RedemptionRollbackRelatedRedemptionsRollbacks",
                "type": "array",
                "items": {
                  "title": "RedemptionRollbackRelatedRedemptionsRollbacksItem",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "rr_0bc92f81a6801f9bca",
                      "description": "Unique identifier of the redemption rollback."
                    },
                    "date": {
                      "type": "string",
                      "example": "2021-12-22T10:13:06.487Z",
                      "description": "Timestamp representing the date and time when the object was created. The value is shown in the ISO 8601 format.",
                      "format": "date-time"
                    }
                  }
                },
                "nullable": true
              },
              "redemptions": {
                "title": "RedemptionRollbackRelatedRedemptionsRedemptions",
                "type": "array",
                "items": {
                  "title": "RedemptionRollbackRelatedRedemptionsRedemptionsItem",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "r_0bc92f81a6801f9bca",
                      "description": "Unique redemption ID."
                    },
                    "date": {
                      "type": "string",
                      "example": "2021-12-22T10:13:06.487Z",
                      "description": "Timestamp representing the date and time when the object was created. The value is shown in the ISO 8601 format.",
                      "format": "date-time"
                    }
                  }
                },
                "nullable": true
              }
            },
            "nullable": true
          }
        },
        "required": []
      },
      "ReferralProgram": {
        "title": "ReferralProgram",
        "description": "Defines the referee reward and the way a referral is triggered. Context: `REFERRAL_PROGRAM`.",
        "type": "object",
        "properties": {
          "conversion_event_type": {
            "type": "string",
            "enum": [
              "redemption",
              "custom_event"
            ],
            "description": "Define how a referral is triggered.",
            "nullable": true
          },
          "custom_event": {
            "title": "ReferralProgramCustomEvent",
            "type": "object",
            "description": "Contains details about the custom event.",
            "properties": {
              "id": {
                "type": "string",
                "example": "ms_Ll9enAm2BCN0M1s4VxWobLFM",
                "description": "Unique custom event ID.",
                "nullable": true
              },
              "name": {
                "type": "string",
                "description": "Custom event name.",
                "nullable": true
              }
            },
            "nullable": true
          },
          "referee_reward": {
            "title": "ReferralProgramRefereeReward",
            "type": "object",
            "description": "Defines the referee reward.",
            "properties": {
              "related_object_parent": {
                "title": "ReferralProgramRefereeRewardRelatedObjectParent",
                "type": "object",
                "description": "Details of the resource from which the reward originates.",
                "properties": {
                  "id": {
                    "type": "string",
                    "example": "camp_kdxp3vf1clQ9CFs1jpqv3tZe",
                    "description": "Unique ID of the reward source.",
                    "nullable": true
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the reward source.",
                    "nullable": true
                  },
                  "object": {
                    "type": "string",
                    "default": "CAMPAIGN",
                    "enum": [
                      "CAMPAIGN"
                    ],
                    "description": "Type of resource represented by the source of the reward.",
                    "nullable": true
                  }
                },
                "nullable": true
              },
              "type": {
                "type": "string",
                "enum": [
                  "LOYALTY_CARD",
                  "GIFT_VOUCHER"
                ],
                "description": "Type of reward.",
                "nullable": true
              },
              "amount": {
                "type": "string",
                "description": "Define the number of `points` to add to a loyalty card or `credits` to the balance on a gift card. In case of the gift card, the value is multiplied by 100 to precisely represent 2 decimal places. For example, $100 amount is written as 10000.",
                "nullable": true
              }
            },
            "nullable": true
          }
        }
      },
      "Referrer": {
        "title": "Referrer",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of an existing customer.",
            "nullable": true
          },
          "source_id": {
            "type": "string",
            "description": "A unique identifier of the customer who validates a voucher. It can be a customer ID or email from a CRM system, database, or a third-party service. If you also pass a customer ID (unique ID assigned by Voucherify), the source ID will be ignored.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Customer's first and last name.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "An arbitrary string that you can attach to a customer object.",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "Customer's email address.",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "description": "Customer's phone number. This parameter is mandatory when you try to send out codes to customers via an SMS channel.",
            "nullable": true
          },
          "birthday": {
            "type": "string",
            "description": "`Deprecated`. ~~Customer's birthdate; format YYYY-MM-DD~~.",
            "format": "date",
            "nullable": true
          },
          "birthdate": {
            "type": "string",
            "description": "Customer's birthdate; format YYYY-MM-DD.",
            "format": "date",
            "nullable": true
          },
          "address": {
            "title": "ReferrerAddress",
            "type": "object",
            "nullable": true,
            "description": "Customer's address.",
            "properties": {
              "city": {
                "type": "string",
                "description": "City",
                "nullable": true
              },
              "state": {
                "type": "string",
                "description": "State",
                "nullable": true
              },
              "line_1": {
                "type": "string",
                "description": "First line of address.",
                "nullable": true
              },
              "line_2": {
                "type": "string",
                "description": "Second line of address.",
                "nullable": true
              },
              "country": {
                "type": "string",
                "description": "Country.",
                "nullable": true
              },
              "postal_code": {
                "type": "string",
                "description": "Postal code.",
                "nullable": true
              }
            }
          },
          "metadata": {
            "title": "ReferrerMetadata",
            "type": "object",
            "description": "A set of custom key/value pairs that you can attach to a customer. The metadata object stores all custom attributes assigned to the customer. It can be useful for storing additional information about the customer in a structured format. This metadata can be used for validating whether the customer qualifies for a discount or it can be used in building customer segments.",
            "nullable": true
          }
        }
      },
      "ReferrerId": {
        "title": "ReferrerId",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "A unique identifier of an existing customer.",
            "nullable": true
          },
          "object": {
            "type": "string",
            "description": "The type of the object represented by JSON.",
            "default": "customer",
            "enum": [
              "customer"
            ],
            "nullable": true
          }
        },
        "required": []
      },
      "RewardAssignment": {
        "title": "RewardAssignment",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "rewa_PbIRoMXpwe5QhobW4JKu0VjH",
            "description": "Unique reward assignment ID, assigned by Voucherify.",
            "nullable": true
          },
          "reward_id": {
            "type": "string",
            "description": "Associated reward ID.",
            "example": "rew_C7wS9eHFDN4CIbXI5PpLSkGY",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "description": "Timestamp representing the date and time when the reward assignment was created. The value is shown in the ISO 8601 format.",
            "example": "2022-08-11T14:49:22.586Z",
            "format": "date-time",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "nullable": true,
            "description": "Timestamp representing the date and time when the reward assignment was updated. The value is shown in the ISO 8601 format.",
            "example": "2022-08-11T16:01:34.885Z",
            "format": "date-time"
          },
          "object": {
            "type": "string",
            "description": "The type of the object represented by the JSON. This object stores information about the reward assignment.",
            "default": "reward_assignment",
            "enum": [
              "reward_assignment"
            ],
            "nullable": true
          },
          "related_object_id": {
            "type": "string",
            "description": "Related object ID to which the reward was assigned.",
            "example": "camp_wciTvaOfYmAa3EmIIW3QpXXZ",
            "nullable": true
          },
          "related_object_type": {
            "type": "string",
            "description": "Related object type to which the reward was assigned.",
            "default": "campaign",
            "enum": [
              "campaign"
            ],
            "nullable": true
          },
          "parameters": {
            "title": "RewardAssignmentParameters",
            "description": "Defines the cost of the reward.",
            "type": "object",
            "properties": {
              "loyalty": {
                "title": "RewardAssignmentParametersLoyalty",
                "type": "object",
                "description": "Defines the equivalent points value of the reward.",
                "properties": {
                  "points": {
                    "type": "integer",
                    "description": "The number of points required to redeem the reward.",
                    "nullable": true
                  },
                  "auto_redeem": {
                    "type": "boolean",
                    "nullable": true,
                    "description": "Determines if the reward is redeemed automatically when the customer reaches the sufficient number of points to redeem it. Value `true` means that the automatic reward redemption is active. Only one reward can be set to be redeemed automatically in a loyalty campaign, i.e. only one can have the value `true`."
                  }
                },
                "nullable": true
              }
            },
            "required": [],
            "nullable": true
          }
        }
      },
      "RewardType": {
        "title": "RewardType",
        "type": "object",
        "properties": {
          "campaign": {
            "title": "RewardTypeCampaign",
            "type": "object",
            "required": [],
            "description": "Objects stores information about the campaign related to the reward.",
            "properties": {
              "id": {
                "type": "string",
                "description": "Unique campaign ID, assigned by Voucherify.",
                "nullable": true
              },
              "balance": {
                "type": "integer",
                "description": "The number of points to be added to a loyalty card or the amount to be added to the current balance on the gift card.\n\nFor gift cards, the value is multiplied by 100 to precisely represent 2 decimal places. For example, $100 amount is written as 10000.",
                "nullable": true
              },
              "type": {
                "type": "string",
                "enum": [
                  "DISCOUNT_COUPONS",
                  "GIFT_VOUCHERS",
                  "LOYALTY_PROGRAM"
                ],
                "description": "Campaign type.",
                "nullable": true
              }
            },
            "nullable": true
          },
          "coin": {
            "title": "RewardTypeCoin",
            "type": "object",
            "required": [],
            "description": "Defines the ratio by mapping the number of loyalty points in points_ratio to a predefined cash amount in exchange_ratio.",
            "properties": {
              "exchange_ratio": {
                "type": "number",
                "description": "The cash equivalent of the points defined in the points_ratio property.",
                "nullable": true
              },
              "points_ratio": {
                "type": "integer",
                "description": "The number of loyalty points that will map to the predefined cash amount defined by the exchange_ratio property.",
                "nullable": true
              }
            },
            "nullable": true
          },
          "product": {
            "title": "RewardTypeProduct",
            "type": "object",
            "required": [],
            "description": "Contains information about the product given as a reward.",
            "properties": {
              "id": {
                "type": "string",
                "example": "prod_0b7d7dfb05cbe5c616",
                "description": "Unique product ID, assigned by Voucherify.",
                "nullable": true
              },
              "sku_id": {
                "type": "string",
                "nullable": true,
                "example": "sku_0b7d7dfb090be5c619",
                "description": "Unique SKU ID, assigned by Voucherify, of the SKU given as a reward."
              }
            },
            "nullable": true
          }
        }
      },
      "Session": {
        "title": "Session",
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "The session unique ID assigned by Voucherify or your own unique session ID. Sending an existing ID will result in overwriting an existing session. If no session key is provided, then a new ID will be generated.",
            "nullable": true
          },
          "type": {
            "type": "string",
            "default": "LOCK",
            "enum": [
              "LOCK"
            ],
            "description": "This parameter is required to establish a new session.",
            "nullable": true
          },
          "ttl": {
            "type": "number",
            "description": "Value for the period of time that the session is active. Units for this parameter are defined by the session.ttl_unit parameter.",
            "nullable": true
          },
          "ttl_unit": {
            "type": "string",
            "enum": [
              "DAYS",
              "HOURS",
              "MICROSECONDS",
              "MILLISECONDS",
              "MINUTES",
              "NANOSECONDS",
              "SECONDS"
            ],
            "description": "Defines the type of unit in which the session time is counted.",
            "nullable": true
          }
        }
      },
      "SimpleCustomer": {
        "title": "SimpleCustomer",
        "type": "object",
        "description": "Simplified customer data.",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of an existing customer. It is assigned by Voucherify.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Customer's first and last name.",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "Customer's email address.",
            "nullable": true
          },
          "source_id": {
            "type": "string",
            "description": "A unique identifier of the customer. It can be a customer ID or email from a CRM system, database, or a third-party service.",
            "nullable": true
          },
          "metadata": {
            "title": "SimpleCustomerMetadata",
            "type": "object",
            "description": "A set of custom key/value pairs that are attached to the customer. It stores all custom attributes assigned to the customer.",
            "nullable": true
          },
          "object": {
            "type": "string",
            "description": "The type of the object represented by JSON.",
            "default": "customer",
            "enum": [
              "customer"
            ],
            "nullable": true
          }
        }
      },
      "SimpleCustomerRequiredObjectType": {
        "title": "SimpleCustomerRequiredObjectType",
        "type": "object",
        "description": "This is an object representing a customer with limited properties used in Event Tracking endpoints.",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique ID of a customer that is assigned by Voucherify.",
            "example": "cust_CSnYd37MXmrbS19XCrghjBsv",
            "nullable": true
          },
          "source_id": {
            "type": "string",
            "description": "The merchant's customer ID if it is different from the Voucherify customer ID. It is really useful in case of an integration between multiple systems. It can be a customer ID from a CRM system, database or 3rd-party service.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Customer's first and last name.",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "Customer's email address.",
            "nullable": true
          },
          "metadata": {
            "title": "SimpleCustomerRequiredObjectTypeMetadata",
            "type": "object",
            "description": "A set of custom key/value pairs that you can attach to a customer. The metadata object stores all custom attributes assigned to the customer. It can be useful for storing additional information about the customer in a structured format. This metadata can be used for validating whether the customer qualifies for a discount or it can be used in building customer segments. ",
            "nullable": true
          },
          "object": {
            "type": "string",
            "description": "The type of the object represented by the JSON. This object stores information about the customer.",
            "default": "customer",
            "nullable": true
          }
        },
        "required": []
      },
      "SimpleLoyaltyCard": {
        "title": "SimpleLoyaltyCard",
        "type": "object",
        "description": "Simplified loyalty card data.",
        "required": [],
        "properties": {
          "points": {
            "type": "integer",
            "description": "Total number of points added to the loyalty card over its lifespan.",
            "nullable": true
          },
          "balance": {
            "type": "integer",
            "description": "Points available for reward redemption. This is calculated as follows: `balance` = `points` - `expired_points` - `subtracted_points` - `redemption.redeemed_points`.",
            "nullable": true
          },
          "next_expiration_date": {
            "type": "string",
            "description": "The next closest date when the next set of points are due to expire.",
            "nullable": true
          },
          "next_expiration_points": {
            "type": "integer",
            "description": "The amount of points that are set to expire next.",
            "nullable": true
          },
          "pending_points": {
            "type": "integer",
            "description": "Shows the number of pending points that will be added to the loyalty card when they are activated automatically or manually.",
            "nullable": true
          },
          "expired_points": {
            "type": "integer",
            "description": "Shows the total number of expired points over the lifetime of the loyalty card.",
            "nullable": true
          },
          "subtracted_points": {
            "type": "integer",
            "description": "Shows the total number of subtracted points over the lifetime of the loyalty card.",
            "nullable": true
          }
        }
      },
      "SimpleSegment": {
        "title": "SimpleSegment",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique segment ID.",
            "example": "seg_DNAOhUtJffvX0f57ajLMFBYR",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Segment name.",
            "nullable": true
          },
          "object": {
            "type": "string",
            "description": "The type of the object represented by the ID.",
            "default": "segment",
            "enum": [
              "segment"
            ],
            "nullable": true
          }
        },
        "required": []
      },
      "SimpleSkuDiscountUnit": {
        "title": "SimpleSkuDiscountUnit",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique SKU ID, assigned by Voucherify.",
            "nullable": true
          },
          "source_id": {
            "type": "string",
            "description": "Product variant's source ID.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Sku name",
            "nullable": true
          }
        },
        "required": []
      },
      "Sku": {
        "title": "Sku",
        "type": "object",
        "description": "This is an object representing a product SKU.",
        "properties": {
          "id": {
            "type": "string",
            "example": "sku_0b1621b319d248b79f",
            "description": "A unique identifier that represents the SKU and is assigned by Voucherify.",
            "nullable": true
          },
          "source_id": {
            "type": "string",
            "nullable": true,
            "example": "sku_source_id_4",
            "description": "A unique SKU identifier from your inventory system."
          },
          "product_id": {
            "type": "string",
            "example": "prod_0b15f6b9f650c16990",
            "description": "The parent product's unique ID.",
            "nullable": true
          },
          "sku": {
            "type": "string",
            "nullable": true,
            "example": "Large Pink Shirt",
            "description": "Unique user-defined SKU name."
          },
          "price": {
            "type": "integer",
            "nullable": true,
            "description": "Unit price. It is represented by a value multiplied by 100 to accurately reflect 2 decimal places, such as `$100.00` being expressed as `10000`."
          },
          "currency": {
            "type": "string",
            "nullable": true,
            "description": "SKU price currency.",
            "example": "USD"
          },
          "attributes": {
            "title": "SkuAttributes",
            "type": "object",
            "description": "The attributes object stores values for all custom attributes inherited by the SKU from the parent product. A set of key/value pairs that are attached to a SKU object and are unique to each SKU within a product family.",
            "nullable": true
          },
          "image_url": {
            "type": "string",
            "nullable": true,
            "description": "The HTTPS URL pointing to the .png or .jpg file that will be used to render the SKU image."
          },
          "metadata": {
            "title": "SkuMetadata",
            "type": "object",
            "description": "The metadata object stores all custom attributes assigned to the SKU. A set of key/value pairs that you can attach to a SKU object. It can be useful for storing additional information about the SKU in a structured format. It can be used to create product collections.",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "example": "2022-05-17T10:36:30.187Z",
            "description": "Timestamp representing the date and time when the SKU was created. The value is shown in the ISO 8601 format.",
            "format": "date-time",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "nullable": true,
            "example": "2022-05-17T10:55:09.137Z",
            "description": "Timestamp representing the date and time when the SKU was updated. The value is shown in the ISO 8601 format.",
            "format": "date-time"
          },
          "object": {
            "type": "string",
            "default": "sku",
            "description": "The type of the object represented by JSON. This object stores information about the `SKU`.",
            "enum": [
              "sku"
            ],
            "nullable": true
          }
        },
        "required": []
      },
      "SkusListForProduct": {
        "title": "SkusListForProduct",
        "type": "object",
        "description": "Contains information about child SKUs.",
        "properties": {
          "object": {
            "type": "string",
            "description": "The type of the object represented by JSON. This object stores information about SKUs.",
            "default": "list",
            "nullable": true
          },
          "data_ref": {
            "type": "string",
            "description": "Identifies the name of the JSON property that contains the array of SKUs.",
            "default": "data",
            "nullable": true
          },
          "data": {
            "title": "SkusListForProductData",
            "type": "array",
            "description": "A dictionary that contains an array of SKUs.",
            "items": {
              "$ref": "#/components/schemas/Sku"
            },
            "nullable": true
          },
          "total": {
            "type": "integer",
            "description": "Total number of SKUs in the product.",
            "nullable": true
          }
        },
        "required": []
      },
      "StackingRules": {
        "title": "StackingRules",
        "type": "object",
        "description": "Defines stacking rules for redeemables. Read more in the [Stacking Rule Documentation](https://support.voucherify.io/article/604-stacking-rules).",
        "properties": {
          "redeemables_limit": {
            "type": "integer",
            "description": "Defines how many redeemables can be sent in one request. Note: more redeemables means more processing time.",
            "default": 30,
            "maximum": 30,
            "minimum": 1,
            "nullable": true
          },
          "applicable_redeemables_limit": {
            "type": "integer",
            "description": "Defines how many redeemables can be applied in one request. The number must be less than or equal to `redeemables_limit`. For example, a user can select 30 discounts but only 5 will be applied to the order and the remaining will be `SKIPPED` according to the `redeemables_sorting_rule`.",
            "default": 5,
            "maximum": 30,
            "minimum": 1,
            "nullable": true
          },
          "applicable_redeemables_per_category_limit": {
            "type": "integer",
            "description": "Defines how many redeemables with the same category can be applied in one request. The number must be less than or equal to `applicable_redeemables_limit`. The ones above the limit will be `SKIPPED` according to the `redeemables_sorting_rule`.",
            "default": 1,
            "maximum": 30,
            "minimum": 1,
            "nullable": true
          },
          "applicable_exclusive_redeemables_limit": {
            "type": "integer",
            "description": "Defines how many redeemables with an assigned exclusive category can be applied in one request. The ones above the limit will be `SKIPPED` according to the `redeemables_sorting_rule`.",
            "default": 1,
            "maximum": 5,
            "minimum": 1,
            "nullable": true
          },
          "applicable_exclusive_redeemables_per_category_limit": {
            "type": "integer",
            "description": "Defines how many redeemables with an exclusive category per category in stacking rules can be applied in one request. The ones above the limit will be `SKIPPED` according to the `redeemables_sorting_rule`.",
            "default": 1,
            "maximum": 5,
            "minimum": 1,
            "nullable": true
          },
          "exclusive_categories": {
            "title": "StackingRulesExclusiveCategories",
            "type": "array",
            "description": "Lists the IDs of exclusive categories. A redeemable from a campaign with an exclusive category is the only redeemable to be redeemed when applied with redeemables from other campaigns unless these campaigns are exclusive or joint.",
            "items": {
              "title": "StackingRulesExclusiveCategoriesItem",
              "type": "string"
            },
            "nullable": true
          },
          "joint_categories": {
            "title": "StackingRulesJointCategories",
            "type": "array",
            "description": "Lists the IDs of the joint categories. A campaign with a joint category is always applied regardless of the exclusivity of other campaigns.",
            "items": {
              "title": "StackingRulesJointCategoriesItem",
              "type": "string"
            },
            "nullable": true
          },
          "redeemables_application_mode": {
            "type": "string",
            "description": "Defines the application mode for redeemables.\n`\"ALL\"` means that all redeemables must be validated for the redemption to be successful.\n`\"PARTIAL\"` means that only those redeemables that can be validated will be redeemed. The redeemables that fail validaton will be skipped.",
            "enum": [
              "ALL",
              "PARTIAL"
            ],
            "nullable": true
          },
          "redeemables_sorting_rule": {
            "type": "string",
            "description": "Defines redeemables sorting rule. `CATEGORY_HIERARCHY` means that redeemables are applied oaccording to the category priority. `REQUESTED_ORDER` means that redeemables are applied in the sequence provided in the request.",
            "enum": [
              "CATEGORY_HIERARCHY",
              "REQUESTED_ORDER"
            ],
            "default": "REQUESTED_ORDER",
            "nullable": true
          },
          "redeemables_products_application_mode": {
            "type": "string",
            "description": "Defines redeemables products application mode. `STACK` means that multiple discounts can be applied to a product. `ONCE` means that only one discount can be applied to the same product.",
            "enum": [
              "STACK",
              "ONCE"
            ],
            "nullable": true
          },
          "redeemables_no_effect_rule": {
            "type": "string",
            "description": "Defines redeemables no effect rule. `REDEEM_ANYWAY` means that the redeemable will be redeemed regardless of any restrictions or conditions in place. `SKIP` means that the redeemable will be processed only when an applicable effect is calculated.",
            "enum": [
              "REDEEM_ANYWAY",
              "SKIP"
            ],
            "nullable": true
          },
          "no_effect_skip_categories": {
            "title": "StackingRulesNoEffectSkipCategories",
            "type": "array",
            "description": "Lists category IDs. Redeemables with a given category are skipped even if the `redeemables_no_effect_rule` is set to `REDEEM_ANYWAY`. Category IDs can't overlap with the IDs in `no_effect_redeem_anyway_categories`.",
            "items": {
              "title": "StackingRulesNoEffectSkipCategoriesItem",
              "type": "string"
            },
            "nullable": true
          },
          "no_effect_redeem_anyway_categories": {
            "title": "StackingRulesNoEffectRedeemAnywayCategories",
            "type": "array",
            "description": "Lists category IDs. Redeemables with a given category are redeemed anyway even if the `redeemables_no_effect_rule` is set to `SKIP`. Category IDs can't overlap with the IDs in `no_effect_skip_categories`.",
            "items": {
              "title": "StackingRulesNoEffectRedeemAnywayCategoriesItem",
              "type": "string"
            },
            "nullable": true
          },
          "redeemables_rollback_order_mode": {
            "type": "string",
            "description": "Defines the rollback mode for the order. `WITH_ORDER` is a default setting. The redemption is rolled back together with the data about the order, including related discount values. `WITHOUT_ORDER` allows rolling the redemption back without affecting order data, including the applied discount values.",
            "enum": [
              "WITH_ORDER",
              "WITHOUT_ORDER"
            ],
            "nullable": true
          }
        },
        "required": []
      },
      "TrashBinItem": {
        "title": "TrashBinItem",
        "type": "object",
        "description": "Resource moved to the bin, i.e. a campaign, product, SKU, or voucher.",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of the trash bin entry. It should not be confused with the ID of the resource moved to the bin.",
            "example": "tbe_0e8213a0a78020ec64",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "description": "Timestamp representing the date and time when the resource was moved to the bin. The value for this parameter is shown in the ISO 8601 format.",
            "example": "2024-03-27T19:24:26.142Z",
            "format": "date-time",
            "nullable": true
          },
          "deleted_by_user_id": {
            "type": "string",
            "nullable": true,
            "description": "Unique identifier of the user who moved the resource to the bin. It returns a user ID if the resource was moved to the bin through an action in the website. It returns a `null` if the resource was deleted through the API.",
            "example": "user_lNTg47u7Ip0Smgcm1k3ShHuUdH4qToNc"
          },
          "resource_id": {
            "type": "string",
            "description": "Unique identifier of the resource moved to the bin, i.e. an ID of a campaign, product, SKU, or voucher.",
            "example": "v_ZUFwkglCEWaEfXqkJYd3uogTEEHEEU8S",
            "nullable": true
          },
          "resource_type": {
            "type": "string",
            "description": "Type of the resource moved to the bin.",
            "enum": [
              "campaign",
              "product",
              "sku",
              "voucher"
            ],
            "example": "voucher",
            "nullable": true
          },
          "resource_name": {
            "type": "string",
            "description": "Name of the resouce moved to the bin. It is the name of the campaign, product or SKU, or the voucher code.",
            "example": "BLCKFRIDAY_2024",
            "nullable": true
          },
          "resource_parent_id": {
            "type": "string",
            "nullable": true,
            "description": "Unique identifier of the parent resource. For a voucher, it is a campaign ID, except for generic (standalone) voucherss. For an SKU, it is the product ID. It returns `null` for campaigns and base products.",
            "example": "camp_snn0eQL0PYWl5b6lY6HQNPfb"
          },
          "object": {
            "type": "string",
            "description": "The type of the object represented by JSON. It is equal to the `resource_type`.",
            "example": "voucher",
            "enum": [
              "campaign",
              "product",
              "sku",
              "voucher"
            ],
            "nullable": true
          }
        },
        "required": []
      },
      "UsageNotifications": {
        "title": "UsageNotifications",
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean",
            "description": "Enables the notification.",
            "nullable": true
          },
          "value": {
            "type": "integer",
            "minimum": 10,
            "maximum": 90,
            "description": "The percent value of the limit which, when reached, triggers the notification.",
            "nullable": true
          },
          "in_app": {
            "type": "boolean",
            "description": "Enables the notification in the application.",
            "nullable": true
          },
          "emails": {
            "title": "UsageNotificationsEmails",
            "type": "array",
            "description": "An array of email addresses which will receive the notification.",
            "items": {
              "title": "UsageNotificationsEmailsItem",
              "type": "string"
            },
            "nullable": true
          }
        },
        "required": []
      },
      "User": {
        "title": "User",
        "type": "object",
        "description": "Details about the user.",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier of the user who has been assigned to the project.",
            "nullable": true
          },
          "login": {
            "type": "string",
            "description": "The login data of the user who has been assigned to the project.",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "The email address of the user who has been assigned to the project.",
            "nullable": true
          },
          "first_name": {
            "type": "string",
            "description": "The first name of the user who has been assigned to the project.",
            "nullable": true
          },
          "last_name": {
            "type": "string",
            "description": "The last name of the user who has been assigned to the project.",
            "nullable": true
          },
          "projects": {
            "title": "UserProjects",
            "type": "object",
            "description": "Lists key-value pairs, where the key is the project to which the user is assigned. The value is the role assigned in a given project. The predefined Voucherify roles are: `ADMIN`, `USER`, `VIEWER`, `MERCHANT`, `USER_RESTRICTED` (for the Areas and Stores, an Enterprise feature).",
            "nullable": true
          },
          "is_owner": {
            "type": "boolean",
            "description": "Determines if the user is the owner for the organization in Voucherify.",
            "nullable": true
          }
        },
        "required": [
          "role"
        ]
      },
      "ValidationRule": {
        "title": "ValidationRule",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Custom, unique name for set of validation rules.",
            "example": "Business Validation Rule",
            "nullable": true
          },
          "rules": {
            "$ref": "#/components/schemas/ValidationRuleRules"
          },
          "bundle_rules": {
            "$ref": "#/components/schemas/ValidationRuleBundleRules"
          },
          "error": {
            "title": "ValidationRuleError",
            "type": "object",
            "description": "Contains the error message returned from API when validation / redemption fails to meet requirements of defined rules.",
            "properties": {
              "message": {
                "type": "string",
                "description": "The error message returned from API when validation / redemption fails to meet requirements of defined rules.",
                "nullable": true
              }
            },
            "nullable": true
          },
          "applicable_to": {
            "title": "ValidationRuleApplicableTo",
            "type": "object",
            "properties": {
              "excluded": {
                "title": "ValidationRuleApplicableToExcluded",
                "type": "array",
                "description": "Defines which items are excluded from a discount.",
                "items": {
                  "$ref": "#/components/schemas/ApplicableTo"
                },
                "nullable": true
              },
              "included": {
                "title": "ValidationRuleApplicableToIncluded",
                "type": "array",
                "description": "Defines which items are included in a discount.",
                "items": {
                  "$ref": "#/components/schemas/ApplicableTo"
                },
                "nullable": true
              },
              "included_all": {
                "type": "boolean",
                "description": "Indicates whether all items are included in the discount.",
                "nullable": true
              }
            },
            "nullable": true
          },
          "type": {
            "type": "string",
            "enum": [
              "expression",
              "basic",
              "advanced",
              "complex"
            ],
            "default": "expression",
            "description": "Type of validation rule.",
            "nullable": true
          },
          "context_type": {
            "type": "string",
            "default": "global",
            "enum": [
              "earning_rule.order.paid",
              "earning_rule.custom_event",
              "earning_rule.customer.segment.entered",
              "earning_rule.customer.tier.joined",
              "earning_rule.customer.tier.left",
              "earning_rule.customer.tier.upgraded",
              "earning_rule.customer.tier.downgraded",
              "earning_rule.customer.tier.prolonged",
              "campaign.discount_coupons",
              "campaign.discount_coupons.discount.apply_to_order",
              "campaign.discount_coupons.discount.apply_to_items",
              "campaign.discount_coupons.discount.apply_to_items_proportionally",
              "campaign.discount_coupons.discount.apply_to_items_proportionally_by_quantity",
              "campaign.discount_coupons.discount.apply_to_items_by_quantity",
              "campaign.discount_coupons.discount.fixed.apply_to_items",
              "campaign.discount_coupons.discount.percent.apply_to_items",
              "campaign.gift_vouchers",
              "campaign.gift_vouchers.gift.apply_to_order",
              "campaign.gift_vouchers.gift.apply_to_items",
              "campaign.referral_program",
              "campaign.referral_program.discount.apply_to_order",
              "campaign.referral_program.discount.apply_to_items",
              "campaign.referral_program.discount.apply_to_items_proportionally",
              "campaign.referral_program.discount.apply_to_items_proportionally_by_quantity",
              "campaign.referral_program.discount.apply_to_items_by_quantity",
              "campaign.referral_program.discount.fixed.apply_to_items",
              "campaign.referral_program.discount.percent.apply_to_items",
              "campaign.promotion",
              "campaign.promotion.discount.apply_to_order",
              "campaign.promotion.discount.apply_to_items",
              "campaign.promotion.discount.apply_to_items_proportionally",
              "campaign.promotion.discount.apply_to_items_proportionally_by_quantity",
              "campaign.promotion.discount.apply_to_items_by_quantity",
              "campaign.promotion.discount.fixed.apply_to_items",
              "campaign.promotion.discount.percent.apply_to_items",
              "campaign.loyalty_program",
              "voucher.discount_voucher",
              "voucher.discount_voucher.discount.apply_to_order",
              "voucher.discount_voucher.discount.apply_to_items",
              "voucher.discount_voucher.discount.apply_to_items_proportionally",
              "voucher.discount_voucher.discount.apply_to_items_proportionally_by_quantity",
              "voucher.discount_voucher.discount.apply_to_items_by_quantity",
              "voucher.discount_voucher.discount.fixed.apply_to_items",
              "voucher.discount_voucher.discount.percent.apply_to_items",
              "voucher.gift_voucher",
              "voucher.gift_voucher.gift.apply_to_order",
              "voucher.gift_voucher.gift.apply_to_items",
              "voucher.loyalty_card",
              "distribution.custom_event",
              "distribution.order.paid",
              "distribution.order.created",
              "distribution.order.canceled",
              "distribution.order.updated",
              "reward_assignment.pay_with_points",
              "global"
            ],
            "description": "Validation rule context type.  \n\n| **Context Type** | **Definition** |\n|:---|:---|\n| earning_rule.order.paid |  |\n| earning_rule.custom_event |  |\n| earning_rule.customer.segment.entered |  |\n| campaign.discount_coupons |  |\n| campaign.discount_coupons.discount.apply_to_order |  |\n| campaign.discount_coupons.discount.apply_to_items |  |\n| campaign.discount_coupons.discount.apply_to_items_proportionally |  |\n| campaign.discount_coupons.discount.apply_to_items_proportionally_by_quantity |  |\n| campaign.discount_coupons.discount.fixed.apply_to_items |  |\n| campaign.gift_vouchers |  |\n| campaign.gift_vouchers.gift.apply_to_order |  |\n| campaign.gift_vouchers.gift.apply_to_items |  |\n| campaign.referral_program |  |\n| campaign.referral_program.discount.apply_to_order |  |\n| campaign.referral_program.discount.apply_to_items |  |\n| campaign.referral_program.discount.apply_to_items_proportionally |  |\n| campaign.referral_program.discount.apply_to_items_proportionally_by_quantity |  |\n| campaign.referral_program.discount.fixed.apply_to_items |  |\n| campaign.promotion |  |\n| campaign.promotion.discount.apply_to_order |  |\n| campaign.promotion.discount.apply_to_items |  |\n| campaign.promotion.discount.apply_to_items_proportionally |  |\n| campaign.promotion.discount.apply_to_items_proportionally_by_quantity |  |\n| campaign.promotion.discount.fixed.apply_to_items |  |\n| campaign.loyalty_program |  |\n| voucher.discount_voucher |  |\n| voucher.discount_voucher.discount.apply_to_order |  |\n| voucher.discount_voucher.discount.apply_to_items |  |\n| voucher.discount_voucher.discount.apply_to_items_proportionally |  |\n| voucher.discount_voucher.discount.apply_to_items_proportionally_by_quantity |  |\n| voucher.discount_voucher.discount.fixed.apply_to_items |  |\n| voucher.gift_voucher |  |\n| voucher.gift_voucher.gift.apply_to_order |  |\n| voucher.gift_voucher.gift.apply_to_items |  |\n| voucher.loyalty_card |  |\n| distribution.custom_event |  |\n| reward_assignment.pay_with_points |  |\n| global |  |",
            "nullable": true
          },
          "id": {
            "type": "string",
            "example": "val_eR1c41hu0vUU",
            "description": "Unique validation rule ID.",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "example": "2022-03-23T07:44:00.444Z",
            "description": "Timestamp representing the date and time when the validation rule was created. The value is shown in the ISO 8601 format.",
            "format": "date-time",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "example": "2022-04-26T08:35:54.960Z",
            "description": "Timestamp representing the date and time when the validation rule was updated. The value is shown in the ISO 8601 format.",
            "format": "date-time",
            "nullable": true
          },
          "assignments_count": {
            "description": "The number of instances the validation rule has been assigned to different types of redeemables.",
            "type": "integer",
            "nullable": true
          },
          "object": {
            "type": "string",
            "default": "validation_rules",
            "description": "The type of the object represented by JSON. This object stores information about the validation rule.",
            "nullable": true
          }
        }
      },
      "ValidationRuleAssignment": {
        "title": "ValidationRuleAssignment",
        "type": "object",
        "description": "This is an object representing a validation rule assignment.",
        "properties": {
          "id": {
            "type": "string",
            "example": "asgm_74F7QZoYbUoljwQO",
            "description": "Validation rule assignment ID.",
            "nullable": true
          },
          "rule_id": {
            "type": "string",
            "example": "val_4j7DCRm2IS59",
            "description": "Validation rule ID.",
            "nullable": true
          },
          "related_object_id": {
            "type": "string",
            "example": "v_JtWunK6jUo7X2qOFj0SyRHq4p9tgENlT",
            "description": "The resource ID to which the validation rule was assigned.",
            "nullable": true
          },
          "related_object_type": {
            "type": "string",
            "description": "The type of resource to which the validation rule was assigned.",
            "enum": [
              "voucher",
              "campaign",
              "earning_rule",
              "reward_assignment",
              "promotion_tier",
              "distribution"
            ],
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "example": "2022-02-17T08:18:15.085Z",
            "description": "Timestamp representing the date and time when the validation rule assignment was created. The value is shown in the ISO 8601 format.",
            "format": "date-time",
            "nullable": true
          },
          "object": {
            "type": "string",
            "default": "validation_rules_assignment",
            "description": "The type of the object represented by the ID.",
            "enum": [
              "validation_rules_assignment"
            ],
            "nullable": true
          }
        },
        "required": []
      },
      "ValidationRuleAssignmentsList": {
        "title": "ValidationRuleAssignmentsList",
        "type": "object",
        "description": "Validation Rule Assignments List",
        "properties": {
          "object": {
            "type": "string",
            "description": "The type of the object represented by JSON. This object stores information about validation rule assignments.",
            "default": "list",
            "nullable": true
          },
          "data_ref": {
            "type": "string",
            "description": "Identifies the name of the JSON property that contains the array of validation rule assignments.",
            "default": "data",
            "nullable": true
          },
          "data": {
            "title": "ValidationRuleAssignmentsListData",
            "type": "array",
            "description": "A dictionary that contains an array of validation rule assignments.",
            "items": {
              "$ref": "#/components/schemas/ValidationRuleAssignment"
            },
            "nullable": true
          },
          "total": {
            "type": "integer",
            "description": "Total number of validation rule assignments.",
            "nullable": true
          }
        },
        "required": []
      },
      "ValidationRuleBundleRules": {
        "title": "ValidationRuleBundleRules",
        "type": "object",
        "description": "Contains all the definitions for the bundle rules. It is a set of key value pairs representing the rules and logic between them. The keys are numbered consecutively beginning from `1`. The values are objects containing the rule conditions.\n\nWhile updating with the PUT method, you can pass `\"bundle_rules\": null` to delete the configuration; in the response, an empty object is then returned."
      },
      "ValidationRuleRules": {
        "title": "ValidationRuleRules",
        "type": "object",
        "description": "Contains all the rule definitions for the validation rule. It is a set of key value pairs representing the rules and logic between the rules. The keys are numbered consecutively beginning from `1`. The values are objects containing the rule conditions."
      },
      "ValidationRulesAssignmentsList": {
        "title": "ValidationRulesAssignmentsList",
        "description": "List of Validation Rules Assignments",
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "default": "list",
            "enum": [
              "list"
            ],
            "description": "The type of the object represented by JSON. This object stores information about validation rules assignments.",
            "nullable": true
          },
          "data_ref": {
            "type": "string",
            "default": "data",
            "enum": [
              "data"
            ],
            "description": "Identifies the name of the attribute that contains the array of validation rules assignments.",
            "nullable": true
          },
          "data": {
            "title": "ValidationRulesAssignmentsListData",
            "type": "array",
            "description": "Contains array of validation rules assignments.",
            "items": {
              "$ref": "#/components/schemas/BusValRuleAssignment"
            },
            "nullable": true
          },
          "total": {
            "type": "integer",
            "minimum": 0,
            "description": "Total number of validation rules assignments.",
            "nullable": true
          }
        },
        "required": []
      },
      "ValidationsRedeemableInapplicable": {
        "title": "ValidationsRedeemableInapplicable",
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "default": "INAPPLICABLE",
            "enum": [
              "INAPPLICABLE"
            ],
            "description": "Indicates whether the redeemable can be applied or not applied based on the validation rules.",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "Redeemable ID, i.e. the voucher code.",
            "nullable": true
          },
          "object": {
            "type": "string",
            "description": "Redeemable's object type.",
            "enum": [
              "voucher",
              "promotion_tier"
            ],
            "nullable": true
          },
          "result": {
            "title": "ValidationsRedeemableInapplicableResult",
            "type": "object",
            "description": "Includes the error object with details about the reason why the redeemable is inapplicable",
            "properties": {
              "error": {
                "$ref": "#/components/schemas/Error"
              },
              "details": {
                "title": "ValidationsRedeemableInapplicableResultDetails",
                "type": "object",
                "description": "Provides details about the reason why the redeemable is inapplicable.",
                "properties": {
                  "message": {
                    "type": "string",
                    "description": "Generic message from the `message` string shown in the `error` object or the message configured in a validation rule.",
                    "nullable": true
                  },
                  "key": {
                    "type": "string",
                    "description": "Generic message from the `key` string shown in the `error` object.",
                    "nullable": true
                  }
                },
                "nullable": true
              },
              "bundle": {
                "$ref": "#/components/schemas/Bundle"
              }
            },
            "nullable": true
          },
          "metadata": {
            "title": "ValidationsRedeemableInapplicableMetadata",
            "type": "object",
            "description": "The metadata object stores all custom attributes in the form of key/value pairs assigned to the redeemable.",
            "nullable": true
          },
          "categories": {
            "title": "ValidationsRedeemableInapplicableCategories",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CategoryWithStackingRulesType"
            },
            "nullable": true
          },
          "campaign_name": {
            "type": "string",
            "description": "Campaign name. Displayed only if the `options.expand` is passed with a `redeemable` value in the validation request body.",
            "nullable": true
          },
          "campaign_id": {
            "type": "string",
            "description": "Unique campaign ID assigned by Voucherify. Displayed only if the `options.expand` is passed with a `redeemable` value in the validation request body.",
            "example": "camp_pqZjuhG6Mgtp4GD0zD7b8hA3",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Name of the promotion tier. Displayed only if the `options.expand` is passed with a `redeemable` value in the validation request body.",
            "nullable": true
          }
        },
        "required": []
      },
      "ValidationsRedeemableSkipped": {
        "title": "ValidationsRedeemableSkipped",
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "default": "SKIPPED",
            "enum": [
              "SKIPPED"
            ],
            "description": "Indicates whether the redeemable can be applied or not applied based on the validation rules.",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "Redeemable ID, i.e. the voucher code.",
            "nullable": true
          },
          "object": {
            "type": "string",
            "description": "Redeemable's object type.",
            "enum": [
              "voucher",
              "promotion_tier"
            ],
            "nullable": true
          },
          "result": {
            "title": "ValidationsRedeemableSkippedResult",
            "type": "object",
            "description": "Provides details about the reason why the redeemable is skipped.",
            "properties": {
              "details": {
                "title": "ValidationsRedeemableSkippedResultDetails",
                "type": "object",
                "properties": {
                  "key": {
                    "type": "string",
                    "enum": [
                      "applicable_redeemables_limit_exceeded",
                      "applicable_redeemables_per_category_limit_exceeded",
                      "applicable_exclusive_redeemables_limit_exceeded",
                      "applicable_exclusive_redeemables_per_category_limit_exceeded",
                      "exclusion_rules_not_met",
                      "preceding_validation_failed"
                    ],
                    "nullable": true
                  },
                  "message": {
                    "type": "string",
                    "nullable": true
                  }
                },
                "nullable": true
              }
            },
            "nullable": true
          },
          "metadata": {
            "title": "ValidationsRedeemableSkippedMetadata",
            "type": "object",
            "description": "The metadata object stores all custom attributes in the form of key/value pairs assigned to the redeemable.",
            "nullable": true
          },
          "categories": {
            "title": "ValidationsRedeemableSkippedCategories",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CategoryWithStackingRulesType"
            },
            "nullable": true
          },
          "campaign_name": {
            "type": "string",
            "description": "Campaign name. Displayed only if the `options.expand` is passed with a `redeemable` value in the validation request body.",
            "nullable": true
          },
          "campaign_id": {
            "type": "string",
            "description": "Unique campaign ID assigned by Voucherify. Displayed only if the `options.expand` is passed with a `redeemable` value in the validation request body.",
            "example": "camp_pqZjuhG6Mgtp4GD0zD7b8hA3",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Name of the promotion tier. Displayed only if the `options.expand` is passed with a `redeemable` value in the validation request body.",
            "nullable": true
          }
        },
        "required": []
      },
      "ValidityDayOfWeek": {
        "title": "ValidityDayOfWeek",
        "type": "array",
        "description": "Integer array corresponding to the particular days of the week in which the voucher is valid.\n\n- `0` Sunday\n- `1` Monday\n- `2` Tuesday\n- `3` Wednesday\n- `4` Thursday\n- `5` Friday\n- `6` Saturday",
        "items": {
          "title": "ValidityDayOfWeekItem",
          "type": "integer",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6
          ]
        }
      },
      "ValidityHours": {
        "title": "ValidityHours",
        "type": "object",
        "description": "Determines the hours of validity, e.g. to create a happy hours scenario.",
        "properties": {
          "daily": {
            "title": "ValidityHoursDaily",
            "type": "array",
            "description": "Defines the reccuring period(s) when the resource is active. The periods should not overlap.",
            "items": {
              "title": "ValidityHoursDailyItem",
              "type": "object",
              "description": "Defines the reccuring period(s) when the resource will be active.",
              "properties": {
                "start_time": {
                  "type": "string",
                  "format": "time",
                  "description": "Defines the starting hour of validity in the HH:mm format. The resource is *inactive before* this time.",
                  "example": "12:00"
                },
                "days_of_week": {
                  "title": "ValidityHoursDailyItemDaysOfWeek",
                  "type": "array",
                  "description": "Integer array corresponding to the particular days of the week in which the resource is valid.\n\n- `0` Sunday\n- `1` Monday\n- `2` Tuesday\n- `3`  Wednesday\n- `4` Thursday\n- `5` Friday\n- `6` Saturday",
                  "items": {
                    "title": "ValidityHoursDailyItemDaysOfWeekItem",
                    "type": "integer",
                    "enum": [
                      0,
                      1,
                      2,
                      3,
                      4,
                      5,
                      6
                    ]
                  }
                },
                "expiration_time": {
                  "type": "string",
                  "format": "time",
                  "description": "Defines the ending hour of validity in the HH:mm format. The resource is *inactive after* this time.",
                  "example": "14:00"
                }
              }
            },
            "nullable": true
          }
        }
      },
      "ValidityTimeframe": {
        "title": "ValidityTimeframe",
        "type": "object",
        "description": "Set recurrent time periods when the earning rule is valid. For example, valid for 1 hour every other day.`start_date` **required** when including the `validity_timeframe`.",
        "properties": {
          "duration": {
            "type": "string",
            "description": "Defines the amount of time an earning rule will be active in ISO 8601 format. For example, an earning rule with a `duration` of `PT1H` will be valid for a duration of one hour.",
            "example": "PT1H",
            "nullable": true
          },
          "interval": {
            "type": "string",
            "description": "Defines the intervening time between two time points in ISO 8601 format, expressed as a duration. For example, an earning rule with an `interval` of `P2D` will be valid every other day.",
            "example": "P2D",
            "nullable": true
          }
        }
      },
      "Voucher": {
        "title": "Voucher",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "v_mkZN9v7vjYUadXnHrMza8W5c34fE5KiV",
            "description": "Assigned by the Voucherify API, identifies the voucher.",
            "nullable": true
          },
          "code": {
            "type": "string",
            "example": "WVPblOYX",
            "description": "A code that identifies a voucher. Pattern can use all letters of the English alphabet, Arabic numerals, and special characters.",
            "nullable": true
          },
          "campaign": {
            "type": "string",
            "example": "Gift Card Campaign",
            "description": "A unique campaign name, identifies the voucher's parent campaign.",
            "nullable": true
          },
          "campaign_id": {
            "type": "string",
            "example": "camp_FNYR4jhqZBM9xTptxDGgeNBV",
            "description": "Assigned by the Voucherify API, identifies the voucher's parent campaign.",
            "nullable": true
          },
          "category": {
            "type": "string",
            "description": "Tag defining the category that this voucher belongs to. Useful when listing vouchers using the List Vouchers endpoint.",
            "nullable": true
          },
          "category_id": {
            "type": "string",
            "description": "Unique category ID assigned by Voucherify.",
            "example": "cat_0bb343dee3cdb5ec0c",
            "nullable": true
          },
          "type": {
            "type": "string",
            "enum": [
              "GIFT_VOUCHER",
              "DISCOUNT_VOUCHER",
              "LOYALTY_CARD"
            ],
            "description": "Defines the type of the voucher. ",
            "nullable": true
          },
          "discount": {
            "$ref": "#/components/schemas/Discount"
          },
          "gift": {
            "title": "VoucherGift",
            "type": "object",
            "description": "Object representing gift parameters. Child attributes are present only if `type` is `GIFT_VOUCHER`. Defaults to `null`.",
            "properties": {
              "amount": {
                "type": "integer",
                "example": 10000,
                "description": "Total gift card income over the lifetime of the card. The value is multiplied by 100 to represent 2 decimal places. For example `10000 cents` for `$100.00`.",
                "nullable": true
              },
              "subtracted_amount": {
                "type": "integer",
                "description": "Total amount of subtracted credits over the gift card lifetime. The value is multiplied by 100 to represent 2 decimal places. For example `10000 cents` for `$100.00`.",
                "nullable": true
              },
              "balance": {
                "type": "integer",
                "example": 500,
                "description": "Available funds. The value is multiplied by 100 to represent 2 decimal places. For example `10000 cents` for `$100.00`.",
                "nullable": true
              },
              "effect": {
                "type": "string",
                "enum": [
                  "APPLY_TO_ORDER",
                  "APPLY_TO_ITEMS"
                ],
                "description": "Defines how the credits are applied to the customer's order.",
                "nullable": true
              }
            },
            "nullable": true
          },
          "loyalty_card": {
            "title": "VoucherLoyaltyCard",
            "type": "object",
            "description": "Object representing loyalty card parameters. Child attributes are present only if `type` is `LOYALTY_CARD`. Defaults to `null`.",
            "properties": {
              "points": {
                "type": "integer",
                "example": 7000,
                "description": "Total number of points added to the loyalty card over its lifespan.",
                "nullable": true
              },
              "balance": {
                "type": "integer",
                "example": 6970,
                "description": "Points available for reward redemption. This is calculated as follows: `balance` = `points` - `expired_points` - `subtracted_points` - `redemption.redeemed_points`.",
                "nullable": true
              },
              "next_expiration_date": {
                "type": "string",
                "format": "date",
                "example": "2023-05-30",
                "description": "The next closest date when the next set of points are due to expire.",
                "nullable": true
              },
              "next_expiration_points": {
                "type": "integer",
                "description": "The amount of points that are set to expire next.",
                "nullable": true
              },
              "pending_points": {
                "type": "integer",
                "description": "Shows the number of pending points that will be added to the loyalty card when they are activated automatically or manually.",
                "nullable": true
              },
              "expired_points": {
                "type": "integer",
                "description": "Shows the total number of expired points over the lifetime of the loyalty card.",
                "nullable": true
              },
              "subtracted_points": {
                "type": "integer",
                "description": "Shows the total number of subtracted points over the lifetime of the loyalty card.",
                "nullable": true
              }
            },
            "nullable": true
          },
          "start_date": {
            "type": "string",
            "example": "2021-12-01T00:00:00.000Z",
            "format": "date-time",
            "description": "Activation timestamp defines when the code starts to be active in ISO 8601 format. Voucher is *inactive before* this date. ",
            "nullable": true
          },
          "expiration_date": {
            "type": "string",
            "example": "2021-12-31T00:00:00.000Z",
            "format": "date-time",
            "description": "Expiration timestamp defines when the code expires in ISO 8601 format.  Voucher is *inactive after* this date.",
            "nullable": true
          },
          "validity_timeframe": {
            "$ref": "#/components/schemas/ValidityTimeframe"
          },
          "validity_day_of_week": {
            "$ref": "#/components/schemas/ValidityDayOfWeek"
          },
          "validity_hours": {
            "$ref": "#/components/schemas/ValidityHours"
          },
          "active": {
            "type": "boolean",
            "nullable": true,
            "description": "A flag to toggle the voucher on or off. You can disable a voucher even though it's within the active period defined by the `start_date` and `expiration_date`.  \n\n- `true` indicates an *active* voucher\n- `false` indicates an *inactive* voucher"
          },
          "additional_info": {
            "type": "string",
            "description": "An optional field to keep any extra textual information about the code such as a code description and details.",
            "nullable": true
          },
          "metadata": {
            "title": "VoucherMetadata",
            "type": "object",
            "description": "The metadata object stores all custom attributes assigned to the code. A set of key/value pairs that you can attach to a voucher object. It can be useful for storing additional information about the voucher in a structured format.",
            "nullable": true
          },
          "assets": {
            "$ref": "#/components/schemas/VoucherAssets"
          },
          "is_referral_code": {
            "type": "boolean",
            "nullable": true,
            "description": "Flag indicating whether this voucher is a referral code; `true` for campaign type `REFERRAL_PROGRAM`."
          },
          "created_at": {
            "type": "string",
            "example": "2021-12-22T10:13:06.487Z",
            "description": "Timestamp representing the date and time when the voucher was created. The value is shown in the ISO 8601 format.",
            "format": "date-time",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "example": "2021-12-22T10:14:45.316Z",
            "format": "date-time",
            "description": "Timestamp representing the date and time when the voucher was last updated in ISO 8601 format.",
            "nullable": true
          },
          "holder_id": {
            "type": "string",
            "example": "cust_eWgXlBBiY6THFRJwX45Iakv4",
            "description": "Unique customer identifier of the redeemable holder. It equals to the customer ID assigned by Voucherify.",
            "nullable": true
          },
          "referrer_id": {
            "type": "string",
            "description": "Unique identifier of the referring person.",
            "example": "cust_Vzck5i8U3OhcEUFY6MKhN9Rv",
            "nullable": true
          },
          "object": {
            "type": "string",
            "description": "The type of the object represented by JSON. Default is `voucher`.",
            "default": "voucher",
            "nullable": true
          },
          "publish": {
            "title": "VoucherPublish",
            "type": "object",
            "description": "Stores a summary of publication events: an event counter and endpoint to return details of each event. Publication is an assignment of a code to a customer, e.g. through a distribution.",
            "properties": {
              "object": {
                "type": "string",
                "default": "list",
                "description": "The type of the object represented is by default `list`. To get this list, you need to make a call to the endpoint returned in the `url` attribute.",
                "nullable": true
              },
              "count": {
                "type": "integer",
                "example": 0,
                "description": "Publication events counter.",
                "nullable": true
              },
              "url": {
                "type": "string",
                "example": "/v1/vouchers/WVPblOYX/publications?page=1&limit=10",
                "description": "The endpoint where this list of publications can be accessed using a **GET** method. `/v1/vouchers/{voucher_code}/publications`",
                "nullable": true
              }
            },
            "nullable": true
          },
          "redemption": {
            "title": "VoucherRedemption",
            "type": "object",
            "description": "Stores a summary of redemptions that have been applied to the voucher.",
            "properties": {
              "quantity": {
                "type": "integer",
                "description": "How many times a voucher can be redeemed. A `null` value means unlimited.",
                "nullable": true
              },
              "redeemed_quantity": {
                "type": "integer",
                "example": 1,
                "description": "How many times a voucher has already been redeemed.",
                "nullable": true
              },
              "redeemed_points": {
                "type": "integer",
                "example": 100000,
                "description": "Total loyalty points redeemed.",
                "nullable": true
              },
              "object": {
                "type": "string",
                "default": "list",
                "description": "The type of the object represented is by default `list`. To get this list, you need to make a call to the endpoint returned in the url attribute.",
                "nullable": true
              },
              "url": {
                "type": "string",
                "example": "/v1/vouchers/WVPblOYX/redemptions?page=1&limit=10",
                "description": "The endpoint where this list of redemptions can be accessed using a **GET** method. `/v1/vouchers/{voucher_code}/redemptions`",
                "nullable": true
              }
            },
            "nullable": true
          },
          "categories": {
            "title": "VoucherCategories",
            "type": "array",
            "description": "Contains details about the category.",
            "items": {
              "$ref": "#/components/schemas/Category"
            },
            "nullable": true
          },
          "validation_rules_assignments": {
            "$ref": "#/components/schemas/ValidationRulesAssignmentsList"
          }
        },
        "description": "This is an object representing a voucher with categories and validation rules assignments."
      },
      "VoucherAssets": {
        "title": "VoucherAssets",
        "type": "object",
        "description": "Stores links to images of QR and barcode that correspond to an encrypted voucher code.",
        "properties": {
          "qr": {
            "title": "VoucherAssetsQr",
            "type": "object",
            "description": "Stores Quick Response (QR) representation of encrypted code.",
            "properties": {
              "id": {
                "type": "string",
                "example": "U2FsdGVkX19ucFhvVmBVpVYG5KoswTsjSIaqoKg5L9ie4BK+t4pp7U7oFzjGJzj9q/bmuMOj9mEFiVKDMIkSaruKedMvHbKoPX5Sg+BaZk5QwXMf8k/OzSlOEVybpwSq+AiqPoNtjeuqtIgkDyvT6Q==",
                "description": "Encrypted voucher code ID.",
                "nullable": true
              },
              "url": {
                "type": "string",
                "example": "https://dev.dl.voucherify.io/api/v1/assets/qr/U2FsdGVkX19ucFhvVmBVpVYG5KoswTsjSIaqoKg5L9ie4BK%2Bt4pp7U7oFzjGJzj9q%2FbmuMOj9mEFiVKDMIkSaruKedMvHbKoPX5Sg%2BBaZk5QwXMf8k%2FOzSlOEVybpwSq%2BAiqPoNtjeuqtIgkDyvT6Q%3D%3D",
                "description": "URL to QR code  \n\n*Optional:* Attach query parameters to base URL to customize the image of the encrypted voucher code.  \n\n- `size`: integer value from `1` to `100`  \n- `format`: string, either `png` (default) or `svg`",
                "nullable": true
              }
            },
            "nullable": true
          },
          "barcode": {
            "title": "VoucherAssetsBarcode",
            "type": "object",
            "description": "Stores barcode representation of encrypted code.",
            "properties": {
              "id": {
                "type": "string",
                "example": "U2FsdGVkX19eJhGfWwUrH9+tulBkON+AnMktic+N6CVWzZ9+fHVxuVx22WakrzxiWXy0skuvvEHSeZIw9HlgyIJ+kJ1iPdUKpyENuNYJKzoZlO0mmTf6WQM6/pFs61apEn9SJx32ttCF6d3oxKISQQ==",
                "description": "Encrypted voucher code ID.",
                "nullable": true
              },
              "url": {
                "type": "string",
                "example": "https://dev.dl.voucherify.io/api/v1/assets/barcode/U2FsdGVkX19eJhGfWwUrH9%2BtulBkON%2BAnMktic%2BN6CVWzZ9%2BfHVxuVx22WakrzxiWXy0skuvvEHSeZIw9HlgyIJ%2BkJ1iPdUKpyENuNYJKzoZlO0mmTf6WQM6%2FpFs61apEn9SJx32ttCF6d3oxKISQQ%3D%3D",
                "description": "URL to barcode  \n\n*Optional:* Attach query parameters to base URL to customize the image of the encrypted voucher code.  \n\n- `size`: integer value from `1` to `100`  \n- `format`: string, either `png` (default) or `svg`",
                "nullable": true
              }
            },
            "nullable": true
          }
        }
      },
      "VoucherTransaction": {
        "title": "VoucherTransaction",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique transaction ID.",
            "nullable": true
          },
          "source_id": {
            "type": "string",
            "nullable": true,
            "description": "The merchant's transaction ID if it is different from the Voucherify transaction ID. It is really useful in case of an integration between multiple systems. It can be a transaction ID from a CRM system, database or 3rd-party service. In case of a redemption, this value is null."
          },
          "voucher_id": {
            "type": "string",
            "description": "Unique voucher ID.",
            "nullable": true
          },
          "campaign_id": {
            "type": "string",
            "description": "Unqiue campaign ID of the voucher's parent campaign if it is part of campaign that generates bulk codes.",
            "nullable": true
          },
          "source": {
            "type": "string",
            "nullable": true,
            "description": "The channel through which the transaction took place, whether through the API or the the Dashboard. In case of a redemption, this value is null."
          },
          "reason": {
            "type": "string",
            "nullable": true,
            "description": "Reason why the transaction occurred. In case of a redemption, this value is null."
          },
          "related_transaction_id": {
            "type": "string",
            "nullable": true,
            "description": "The related transaction ID on the receiving card."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp representing the date and time when the transaction was created. The value is shown in the ISO 8601 format.",
            "nullable": true
          },
          "details": {
            "title": "VoucherTransactionDetails",
            "type": "object",
            "description": "Contains the detailed information about the transaction.",
            "properties": {
              "balance": {
                "title": "VoucherTransactionDetailsBalance",
                "type": "object",
                "description": "Contains information on how the balance was affected by the transaction.",
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "The type of voucher whose balance is being adjusted due to the transaction.",
                    "enum": [
                      "loyalty_card",
                      "gift_voucher"
                    ],
                    "nullable": true
                  },
                  "total": {
                    "type": "integer",
                    "description": "The number of all points or credits accumulated on the card as affected by add or subtract operations.",
                    "nullable": true
                  },
                  "object": {
                    "type": "string",
                    "description": "The type of the object represented by the JSON.",
                    "default": "balance",
                    "enum": [
                      "balance"
                    ],
                    "nullable": true
                  },
                  "points": {
                    "type": "integer",
                    "description": "Points added or subtracted in the transaction of a loyalty card.",
                    "nullable": true
                  },
                  "balance": {
                    "type": "integer",
                    "description": "The available points or credits on the card after the transaction as affected by redemption or rollback.",
                    "nullable": true
                  },
                  "operation_type": {
                    "type": "string",
                    "description": "The type of the operation being performed. The operation type is `AUTOMATIC` if it is an automatic redemption.",
                    "enum": [
                      "MANUAL",
                      "AUTOMATIC"
                    ],
                    "nullable": true
                  },
                  "related_object": {
                    "title": "VoucherTransactionDetailsBalanceRelatedObject",
                    "type": "object",
                    "required": [],
                    "description": "Defines the resource that is being modified with the values that are returned in the balance object.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Identifies the voucher that is being modified. The ID is assigned by the Voucherify API.",
                        "nullable": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The object being modified, i.e. voucher.",
                        "default": "voucher",
                        "enum": [
                          "voucher"
                        ],
                        "nullable": true
                      }
                    },
                    "nullable": true
                  }
                },
                "required": []
              },
              "order": {
                "title": "VoucherTransactionDetailsOrder",
                "type": "object",
                "description": "Contains information about the original order.",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Unique order ID.",
                    "nullable": true
                  },
                  "source_id": {
                    "type": "string",
                    "description": "The merchant's order ID if it is different from the Voucherify order ID. It is really useful in case of integration between multiple systems. It can be an order ID from CRM, database or 3rd party service.",
                    "nullable": true
                  }
                },
                "required": [],
                "nullable": true
              },
              "event": {
                "title": "VoucherTransactionDetailsEvent",
                "type": "object",
                "description": "Contains information about the event that triggers the point accrual.",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Unique event ID.",
                    "nullable": true
                  },
                  "type": {
                    "type": "string",
                    "description": "Type of event.",
                    "nullable": true
                  }
                },
                "required": [],
                "nullable": true
              },
              "earning_rule": {
                "title": "VoucherTransactionDetailsEarningRule",
                "type": "object",
                "description": "Contains information about the earning rule.",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Unique identifier of an earning rule, assigned by Voucherify.",
                    "nullable": true
                  },
                  "source": {
                    "title": "VoucherTransactionDetailsEarningRuleSource",
                    "type": "object",
                    "required": [],
                    "description": "Contains the custom earning rule name.",
                    "properties": {
                      "banner": {
                        "type": "string",
                        "description": "Name of the earning rule. This is displayed as a header for the earning rule in the Dashboard.",
                        "nullable": true
                      }
                    },
                    "nullable": true
                  }
                },
                "required": [],
                "nullable": true
              },
              "segment": {
                "title": "VoucherTransactionDetailsSegment",
                "type": "object",
                "description": "Contains information about the segment.",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Unique identifier of the segment.",
                    "nullable": true
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the segment.",
                    "nullable": true
                  }
                },
                "required": [],
                "nullable": true
              },
              "loyalty_tier": {
                "title": "VoucherTransactionDetailsLoyaltyTier",
                "type": "object",
                "description": "Contains information about the loyalty tier that is mapped for the earning rule and used in the transaction.",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Unique identifier of the loyalty tier, assigned by Voucherify.",
                    "nullable": true
                  },
                  "name": {
                    "type": "string",
                    "description": "User-defined name of the loyalty tier.",
                    "nullable": true
                  }
                },
                "required": [],
                "nullable": true
              },
              "redemption": {
                "title": "VoucherTransactionDetailsRedemption",
                "type": "object",
                "description": "Contains information about the original redemption.",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Unique redemption ID.",
                    "nullable": true
                  }
                },
                "required": [],
                "nullable": true
              },
              "rollback": {
                "title": "VoucherTransactionDetailsRollback",
                "type": "object",
                "description": "Contains information about the redemption rollback.",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Unique identifier of the redemption rollback.",
                    "nullable": true
                  }
                },
                "required": [],
                "nullable": true
              },
              "custom_event": {
                "title": "VoucherTransactionDetailsCustomEvent",
                "type": "object",
                "description": "Contains information about the custom event that triggers the point accrual.",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Unique identifier of the event.",
                    "nullable": true
                  },
                  "type": {
                    "type": "string",
                    "description": "Type of the custom event.",
                    "nullable": true
                  }
                },
                "required": [],
                "nullable": true
              },
              "event_schema": {
                "title": "VoucherTransactionDetailsEventSchema",
                "type": "object",
                "description": "Contains information about the custom event metadata schema.",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Unique identifier of the metadata schema.",
                    "nullable": true
                  },
                  "name": {
                    "type": "string",
                    "description": "Type of the custom event.",
                    "nullable": true
                  }
                },
                "required": [],
                "nullable": true
              },
              "holder_loyalty_tier": {
                "title": "VoucherTransactionDetailsHolderLoyaltyTier",
                "type": "object",
                "description": "Loyalty tier of the loyalty card holder at the moment when the transaction occurred. The loyalty tier is the tier in which the holder was before the loyalty point balance changed.",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Unique identifier of the loyalty tier, assigned by Voucherify.",
                    "nullable": true
                  },
                  "name": {
                    "type": "string",
                    "description": "User-defined name of the loyalty tier.",
                    "nullable": true
                  }
                },
                "required": [],
                "nullable": true
              },
              "pending_points": {
                "$ref": "#/components/schemas/LoyaltyPendingPoints"
              },
              "reward": {
                "title": "VoucherTransactionDetailsReward",
                "type": "object",
                "description": "Contains information about the pay with points reward.",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Unique reward ID.",
                    "nullable": true
                  },
                  "name": {
                    "type": "string",
                    "description": "Reward name.",
                    "nullable": true
                  }
                },
                "required": [],
                "nullable": true
              },
              "source_voucher": {
                "$ref": "#/components/schemas/SimpleVoucher"
              },
              "destination_voucher": {
                "$ref": "#/components/schemas/SimpleVoucher"
              }
            },
            "nullable": true
          },
          "type": {
            "type": "string",
            "enum": [
              "CREDITS_REDEMPTION",
              "CREDITS_REFUND",
              "CREDITS_ADDITION",
              "CREDITS_REMOVAL",
              "POINTS_PENDING_ACTIVATION",
              "POINTS_ACCRUAL",
              "POINTS_REDEMPTION",
              "POINTS_REFUND",
              "POINTS_ADDITION",
              "POINTS_REMOVAL",
              "POINTS_EXPIRATION",
              "POINTS_TRANSFER_IN",
              "POINTS_TRANSFER_OUT"
            ],
            "nullable": true
          }
        }
      },
      "VoucherTransactionsExportParameters": {
        "title": "VoucherTransactionsExportParameters",
        "description": "List of available fields and filters that can be exported with a gift card or loyalty card transactions export along with the sorting order of the returned data.",
        "type": "object",
        "properties": {
          "order": {
            "type": "string",
            "description": "How the export is filtered, where the dash `-` preceding a sorting option means sorting in a descending order.",
            "enum": [
              "-created_at",
              "created_at"
            ],
            "nullable": true
          },
          "fields": {
            "title": "VoucherTransactionsExportParametersFields",
            "type": "array",
            "description": "Array of strings containing the data in the export. These fields define the headers in the CSV file. The array can be a combination of any of the following available fields:\n\n| **Field** | **Definition** | **Example Export** |\n|:---|:---|:---|\n| id | Unique transaction ID. | vtx_0cb7811f1c07765800 |\n| type | Transaction type. | - `CREDITS_REMOVAL` <br> - `CREDITS_ADDITION` <br> - `CREDITS_REFUND` <br> - `CREDITS_REDEMPTION` <br> - `POINTS_ACCRUAL` <br> - `POINTS_REDEMPTION`<br> - `POINTS_REFUND`<br> - `POINTS_ADDITION`<br> - `POINTS_REMOVAL`<br> - `POINTS_EXPIRATION`<br> - `POINTS_TRANSFER_IN`<br> - `POINTS_TRANSFER_OUT` |\n| source_id | Unique transaction source ID. | 8638 |\n| reason | Contains the reason for the transaction if one was included originally. |  |\n| balance | The gift card or loyalty card balance after the transaction. |  |\n| amount | The amount of gift card or loyalty card credits being allocated during the transaction. This value can either be negative or positive depending on the nature of the transaction. |  |\n| created_at | Timestamp in ISO 8601 format representing the date and time when the transaction was created. | 2022-03-09T09:16:32.521Z  |\n| voucher_id | Unique Voucher ID. | v_dky7ksKfPX50Wb2Bxvcoeb1xT20b6tcp |\n| campaign_id | Parent campaign ID. | camp_FNYR4jhqZBM9xTptxDGgeNBV |\n| source|  Channel through which the transaction was initiated. | API |\n| details | More detailed information stored in the form of a JSON. | Provides more details related to the transaction in the form of an object. |\n| related_transaction_id | Unique transaction ID related to a receiver/donor card in the case of a points transfer from/to another card. | vtx_0c9afe802593b34b80 |",
            "items": {
              "title": "VoucherTransactionsExportParametersFieldsItem",
              "type": "string",
              "enum": [
                "id",
                "type",
                "source_id",
                "reason",
                "balance",
                "amount",
                "created_at",
                "voucher_id",
                "campaign_id",
                "source",
                "details",
                "related_transaction_id"
              ]
            },
            "nullable": true
          }
        }
      },
      "VoucherTransactionsFilters": {
        "title": "VoucherTransactionsFilters",
        "description": "List of available fields and filters that can be exported with gift card or loyalty card transactions along with the sorting order of the returned data.",
        "type": "object",
        "properties": {
          "order": {
            "type": "string",
            "description": "How the export is filtered, where the dash `-` preceding a sorting option means sorting in a descending order.",
            "enum": [
              "-created_at",
              "created_at"
            ],
            "nullable": true
          },
          "fields": {
            "title": "VoucherTransactionsFiltersFields",
            "type": "array",
            "description": "Array of strings containing the data in the export. These fields define the headers in the CSV file. The array can be a combination of any of the following available fields:\n\n| **Field** | **Definition** | **Example Export** |\n|:---|:---|:---|\n| id | Unique transaction ID. | vtx_0cb7811f1c07765800 |\n| type | Transaction type. | - `CREDITS_REMOVAL` <br> - `CREDITS_ADDITION` <br> - `CREDITS_REFUND` <br> - `CREDITS_REDEMPTION` <br> - `POINTS_ACCRUAL`<br> - `POINTS_REDEMPTION`<br> - `POINTS_REFUND`<br> - `POINTS_ADDITION`<br> - `POINTS_REMOVAL`<br> - `POINTS_EXPIRATION`<br> - `POINTS_TRANSFER_IN`<br> - `POINTS_TRANSFER_OUT` |\n| source_id | Unique transaction source ID. | 8638 |\n| reason | Contains the reason for the transaction if one was included originally. |  |\n| balance | The gift card or loyalty card balance after the transaction. |  |\n| amount | The amount of gift card or loyalty card credits being allocated during the transaction. This value can either be negative or positive depending on the nature of the transaction. |  |\n| created_at | Timestamp in ISO 8601 format representing the date and time when the transaction was created. | 2022-03-09T09:16:32.521Z  |\n| voucher_id | Unique Voucher ID. | v_dky7ksKfPX50Wb2Bxvcoeb1xT20b6tcp |\n| campaign_id | Parent campaign ID. | camp_FNYR4jhqZBM9xTptxDGgeNBV |\n| source|  Channel through which the transaction was initiated. | API |\n| details | More detailed information stored in the form of a JSON. | Provides more details related to the transaction in the form of an object. |\n| related_transaction_id | Unique transaction ID related to a receiver/donor card in the case of a points transfer from/to another card. | vtx_0c9afe802593b34b80 |",
            "items": {
              "title": "VoucherTransactionsFiltersFieldsItem",
              "type": "string",
              "enum": [
                "id",
                "type",
                "source_id",
                "reason",
                "balance",
                "amount",
                "created_at",
                "voucher_id",
                "campaign_id",
                "source",
                "details",
                "related_transaction_id"
              ]
            },
            "nullable": true
          },
          "filters": {
            "$ref": "#/components/schemas/VoucherTransactionsExportFilterConditions"
          }
        },
        "required": [
          "filters"
        ]
      },
      "VoucherWithCategories": {
        "title": "VoucherWithCategories",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "v_mkZN9v7vjYUadXnHrMza8W5c34fE5KiV",
            "description": "Assigned by the Voucherify API, identifies the voucher.",
            "nullable": true
          },
          "code": {
            "type": "string",
            "example": "WVPblOYX",
            "description": "A code that identifies a voucher. Pattern can use all letters of the English alphabet, Arabic numerals, and special characters.",
            "nullable": true
          },
          "campaign": {
            "type": "string",
            "example": "Gift Card Campaign",
            "description": "A unique campaign name, identifies the voucher's parent campaign.",
            "nullable": true
          },
          "campaign_id": {
            "type": "string",
            "example": "camp_FNYR4jhqZBM9xTptxDGgeNBV",
            "description": "Assigned by the Voucherify API, identifies the voucher's parent campaign.",
            "nullable": true
          },
          "category": {
            "type": "string",
            "description": "Tag defining the category that this voucher belongs to. Useful when listing vouchers using the List Vouchers endpoint.",
            "nullable": true
          },
          "category_id": {
            "type": "string",
            "description": "Unique category ID assigned by Voucherify.",
            "example": "cat_0bb343dee3cdb5ec0c",
            "nullable": true
          },
          "type": {
            "type": "string",
            "enum": [
              "GIFT_VOUCHER",
              "DISCOUNT_VOUCHER",
              "LOYALTY_CARD"
            ],
            "description": "Defines the type of the voucher. ",
            "nullable": true
          },
          "discount": {
            "$ref": "#/components/schemas/Discount"
          },
          "gift": {
            "title": "VoucherWithCategoriesGift",
            "type": "object",
            "description": "Object representing gift parameters. Child attributes are present only if `type` is `GIFT_VOUCHER`. Defaults to `null`.",
            "properties": {
              "amount": {
                "type": "integer",
                "example": 10000,
                "description": "Total gift card income over the lifetime of the card. The value is multiplied by 100 to represent 2 decimal places. For example `10000 cents` for `$100.00`.",
                "nullable": true
              },
              "subtracted_amount": {
                "type": "integer",
                "description": "Total amount of subtracted credits over the gift card lifetime. The value is multiplied by 100 to represent 2 decimal places. For example `10000 cents` for `$100.00`.",
                "nullable": true
              },
              "balance": {
                "type": "integer",
                "example": 500,
                "description": "Available funds. The value is multiplied by 100 to represent 2 decimal places. For example `10000 cents` for `$100.00`.",
                "nullable": true
              },
              "effect": {
                "type": "string",
                "enum": [
                  "APPLY_TO_ORDER",
                  "APPLY_TO_ITEMS"
                ],
                "description": "Defines how the credits are applied to the customer's order.",
                "nullable": true
              }
            },
            "nullable": true
          },
          "loyalty_card": {
            "title": "VoucherWithCategoriesLoyaltyCard",
            "type": "object",
            "description": "Object representing loyalty card parameters. Child attributes are present only if `type` is `LOYALTY_CARD`. Defaults to `null`.",
            "properties": {
              "points": {
                "type": "integer",
                "example": 7000,
                "description": "Total number of points added to the loyalty card over its lifespan.",
                "nullable": true
              },
              "balance": {
                "type": "integer",
                "example": 6970,
                "description": "Points available for reward redemption. This is calculated as follows: `balance` = `points` - `expired_points` - `subtracted_points` - `redemption.redeemed_points`.",
                "nullable": true
              },
              "next_expiration_date": {
                "type": "string",
                "format": "date",
                "example": "2023-05-30",
                "description": "The next closest date when the next set of points are due to expire.",
                "nullable": true
              },
              "next_expiration_points": {
                "type": "integer",
                "description": "The amount of points that are set to expire next.",
                "nullable": true
              },
              "pending_points": {
                "type": "integer",
                "description": "Shows the number of pending points that will be added to the loyalty card when they are activated automatically or manually.",
                "nullable": true
              },
              "expired_points": {
                "type": "integer",
                "description": "Shows the total number of expired points over the lifetime of the loyalty card.",
                "nullable": true
              },
              "subtracted_points": {
                "type": "integer",
                "description": "Shows the total number of subtracted points over the lifetime of the loyalty card.",
                "nullable": true
              }
            },
            "nullable": true
          },
          "start_date": {
            "type": "string",
            "example": "2021-12-01T00:00:00.000Z",
            "format": "date-time",
            "description": "Activation timestamp defines when the code starts to be active in ISO 8601 format. Voucher is *inactive before* this date. ",
            "nullable": true
          },
          "expiration_date": {
            "type": "string",
            "example": "2021-12-31T00:00:00.000Z",
            "format": "date-time",
            "description": "Expiration timestamp defines when the code expires in ISO 8601 format.  Voucher is *inactive after* this date.",
            "nullable": true
          },
          "validity_timeframe": {
            "$ref": "#/components/schemas/ValidityTimeframe"
          },
          "validity_day_of_week": {
            "$ref": "#/components/schemas/ValidityDayOfWeek"
          },
          "validity_hours": {
            "$ref": "#/components/schemas/ValidityHours"
          },
          "active": {
            "type": "boolean",
            "nullable": true,
            "description": "A flag to toggle the voucher on or off. You can disable a voucher even though it's within the active period defined by the `start_date` and `expiration_date`.  \n\n- `true` indicates an *active* voucher\n- `false` indicates an *inactive* voucher"
          },
          "additional_info": {
            "type": "string",
            "description": "An optional field to keep any extra textual information about the code such as a code description and details.",
            "nullable": true
          },
          "metadata": {
            "title": "VoucherWithCategoriesMetadata",
            "type": "object",
            "description": "The metadata object stores all custom attributes assigned to the code. A set of key/value pairs that you can attach to a voucher object. It can be useful for storing additional information about the voucher in a structured format.",
            "nullable": true
          },
          "assets": {
            "$ref": "#/components/schemas/VoucherAssets"
          },
          "is_referral_code": {
            "type": "boolean",
            "nullable": true,
            "description": "Flag indicating whether this voucher is a referral code; `true` for campaign type `REFERRAL_PROGRAM`."
          },
          "created_at": {
            "type": "string",
            "example": "2021-12-22T10:13:06.487Z",
            "description": "Timestamp representing the date and time when the voucher was created. The value is shown in the ISO 8601 format.",
            "format": "date-time",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "example": "2021-12-22T10:14:45.316Z",
            "format": "date-time",
            "description": "Timestamp representing the date and time when the voucher was last updated in ISO 8601 format.",
            "nullable": true
          },
          "holder_id": {
            "type": "string",
            "example": "cust_eWgXlBBiY6THFRJwX45Iakv4",
            "description": "Unique customer identifier of the redeemable holder. It equals to the customer ID assigned by Voucherify.",
            "nullable": true
          },
          "referrer_id": {
            "type": "string",
            "description": "Unique identifier of the referring person.",
            "example": "cust_Vzck5i8U3OhcEUFY6MKhN9Rv",
            "nullable": true
          },
          "object": {
            "type": "string",
            "description": "The type of the object represented by JSON. Default is `voucher`.",
            "default": "voucher",
            "nullable": true
          },
          "publish": {
            "title": "VoucherWithCategoriesPublish",
            "type": "object",
            "description": "Stores a summary of publication events: an event counter and endpoint to return details of each event. Publication is an assignment of a code to a customer, e.g. through a distribution.",
            "properties": {
              "object": {
                "type": "string",
                "default": "list",
                "description": "The type of the object represented is by default `list`. To get this list, you need to make a call to the endpoint returned in the `url` attribute.",
                "nullable": true
              },
              "count": {
                "type": "integer",
                "example": 0,
                "description": "Publication events counter.",
                "nullable": true
              },
              "url": {
                "type": "string",
                "example": "/v1/vouchers/WVPblOYX/publications?page=1&limit=10",
                "description": "The endpoint where this list of publications can be accessed using a **GET** method. `/v1/vouchers/{voucher_code}/publications`",
                "nullable": true
              }
            },
            "nullable": true
          },
          "redemption": {
            "title": "VoucherWithCategoriesRedemption",
            "type": "object",
            "description": "Stores a summary of redemptions that have been applied to the voucher.",
            "properties": {
              "quantity": {
                "type": "integer",
                "description": "How many times a voucher can be redeemed. A `null` value means unlimited.",
                "nullable": true
              },
              "redeemed_quantity": {
                "type": "integer",
                "example": 1,
                "description": "How many times a voucher has already been redeemed.",
                "nullable": true
              },
              "redeemed_points": {
                "type": "integer",
                "example": 100000,
                "description": "Total loyalty points redeemed.",
                "nullable": true
              },
              "object": {
                "type": "string",
                "default": "list",
                "description": "The type of the object represented is by default `list`. To get this list, you need to make a call to the endpoint returned in the url attribute.",
                "nullable": true
              },
              "url": {
                "type": "string",
                "example": "/v1/vouchers/WVPblOYX/redemptions?page=1&limit=10",
                "description": "The endpoint where this list of redemptions can be accessed using a **GET** method. `/v1/vouchers/{voucher_code}/redemptions`",
                "nullable": true
              }
            },
            "nullable": true
          },
          "categories": {
            "title": "VoucherWithCategoriesCategories",
            "type": "array",
            "description": "Contains details about the category.",
            "items": {
              "$ref": "#/components/schemas/Category"
            },
            "nullable": true
          }
        },
        "description": "This is an object representing a voucher with categories."
      },
      "VouchersImportCreateItemRequestBody": {
        "title": "VouchersImportCreateItemRequestBody",
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Value representing the imported code.",
            "nullable": true
          },
          "redemption": {
            "title": "VouchersImportCreateItemRequestBodyRedemption",
            "type": "object",
            "properties": {
              "quantity": {
                "type": "integer",
                "description": "How many times a voucher can be redeemed. A `null` value means unlimited.",
                "example": 10,
                "nullable": true
              }
            },
            "nullable": true
          },
          "active": {
            "type": "boolean",
            "description": "A flag to toggle the voucher on or off. You can disable a voucher even though it's within the active period defined by the `start_date` and `expiration_date`.  \n\n- `true` indicates an *active* voucher\n- `false` indicates an *inactive* voucher",
            "nullable": true
          },
          "metadata": {
            "title": "VouchersImportCreateItemRequestBodyMetadata",
            "type": "object",
            "description": "The metadata object stores all custom attributes assigned to the code. A set of key/value pairs that you can attach to a voucher object. It can be useful for storing additional information about the voucher in a structured format.",
            "nullable": true
          },
          "category": {
            "type": "string",
            "description": "Tag defining the category that this voucher belongs to. Useful when listing vouchers using the [List Vouchers](ref:list-vouchers) endpoint.",
            "nullable": true
          },
          "start_date": {
            "type": "string",
            "description": "Activation timestamp presented in the ISO 8601 format. Voucher is *inactive before* this date. Start date defines when the code starts to be active.\nAllowed date formats are:\n- YYYY-MM-DD\n- YYYY-MM-DDTHH\n- YYYY-MM-DDTHH:mm\n- YYYY-MM-DDTHH:mm:ss\n- YYYY-MM-DDTHH:mm:ssZ\n- YYYY-MM-DDTHH:mm:ss.SSSZ",
            "format": "date-time",
            "example": "2020-12-28T12:49:16.272Z",
            "nullable": true
          },
          "expiration_date": {
            "type": "string",
            "description": "Expiration date defines when the code expires. Expiration timestamp is presented in the ISO 8601 format.  Voucher is *inactive after* this date.\nAllowed date formats are:\n- YYYY-MM-DD\n- YYYY-MM-DDTHH\n- YYYY-MM-DDTHH:mm\n- YYYY-MM-DDTHH:mm:ss\n- YYYY-MM-DDTHH:mm:ssZ\n- YYYY-MM-DDTHH:mm:ss.SSSZ",
            "format": "date-time",
            "example": "2053-12-28T12:49:16.272Z",
            "nullable": true
          },
          "validity_timeframe": {
            "$ref": "#/components/schemas/ValidityTimeframe"
          },
          "validity_day_of_week": {
            "$ref": "#/components/schemas/ValidityDayOfWeek"
          },
          "additional_info": {
            "type": "string",
            "description": "An optional field to keep any extra textual information about the code such as a code description and details.",
            "nullable": true
          },
          "type": {
            "type": "string",
            "enum": [
              "GIFT_VOUCHER",
              "DISCOUNT_VOUCHER"
            ],
            "nullable": true
          },
          "gift": {
            "$ref": "#/components/schemas/Gift"
          },
          "discount": {
            "$ref": "#/components/schemas/Discount"
          }
        }
      },
      "VouchersUpdateInBulkItemRequestBody": {
        "title": "VouchersUpdateInBulkItemRequestBody",
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Unique voucher code.",
            "nullable": true
          },
          "metadata": {
            "title": "VouchersUpdateInBulkItemRequestBodyMetadata",
            "type": "object",
            "description": "The metadata object stores all custom attributes assigned to the code. A set of key/value pairs that you can attach to a voucher object. It can be useful for storing additional information about the voucher in a structured format.",
            "nullable": true
          }
        },
        "required": []
      },
      "ApplicableToEffect": {
        "title": "ApplicableToEffect",
        "type": "string",
        "enum": [
          "APPLY_TO_EVERY",
          "APPLY_TO_CHEAPEST",
          "APPLY_FROM_CHEAPEST",
          "APPLY_TO_MOST_EXPENSIVE",
          "APPLY_FROM_MOST_EXPENSIVE"
        ]
      },
      "AreaStoreCampaignAssignment": {
        "title": "AreaStoreCampaignAssignment",
        "type": "object",
        "description": "An object representing an assignment of a campaign to an area or store.",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of the campaign assignment.",
            "example": "arsca_0ef5ee192117ae2416",
            "nullable": true
          },
          "area_id": {
            "type": "string",
            "description": "Unique identifier of the area to which the campaign is assigned.",
            "example": "ar_0ea6cd7b781b8f857f",
            "nullable": true
          },
          "all_stores": {
            "type": "boolean",
            "description": "Determines if the campaign is assigned to all of the stores in the area, i.e. if an area ID is passed in the `access_settings.assign.area_all_stores_ids` in the request.",
            "nullable": true
          },
          "area_store_id": {
            "type": "string",
            "description": "Unique identifier of the store to which the campaign is assigned.",
            "example": "ars_0ec347e2016bed85f4",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "description": "Date and time when the assignment was made. The value is shown in the ISO 8601 format.",
            "format": "date-time",
            "example": "2024-06-25T19:04:16.260Z",
            "nullable": true
          },
          "object": {
            "type": "string",
            "description": "The type of the object represented by JSON. This object stores information about the campaign assignment to areas or stores.",
            "default": "area_store_campaign_assignment",
            "enum": [
              "area_store_campaign_assignment"
            ],
            "nullable": true
          }
        },
        "required": []
      },
      "BusValRuleAssignment": {
        "title": "BusValRuleAssignment",
        "description": "Assignments of business validation rule",
        "example": {
          "id": "asgm_LnY1g7UNFA9KyDrD",
          "rule_id": "val_3gPNA6SnH4ae",
          "related_object_id": "camp_CZOnEGiZfwIKWmSjhIoIT7Ol",
          "related_object_type": "campaign",
          "object": "validation_rules_assignment",
          "validation_status": "PARTIALLY_VALID",
          "validation_omitted_rules": [
            "1"
          ]
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier for a assignment",
            "nullable": true
          },
          "rule_id": {
            "type": "string",
            "description": "The unique identifier for a rule",
            "nullable": true
          },
          "related_object_id": {
            "type": "string",
            "description": "The unique identifier for a related object",
            "nullable": true
          },
          "related_object_type": {
            "type": "string",
            "description": "The type of related object",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "description": "Timestamp representing the date and time when the object was created. The value is shown in the ISO 8601 format.",
            "example": "2022-03-09T11:19:04.819Z",
            "format": "date-time",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "description": "Timestamp representing the date and time when the object was last updated in ISO 8601 format.",
            "example": "2022-03-09T11:19:04.819Z",
            "format": "date-time",
            "nullable": true
          },
          "object": {
            "type": "string",
            "description": "The type of the object represented by JSON.",
            "default": "validation_rules_assignment",
            "enum": [
              "validation_rules_assignment"
            ],
            "nullable": true
          },
          "validation_status": {
            "type": "string",
            "description": "The validation status of the assignment",
            "enum": [
              "VALID",
              "PARTIALLY_VALID",
              "INVALID"
            ],
            "nullable": true
          },
          "validation_omitted_rules": {
            "title": "BusValRuleAssignmentValidationOmittedRules",
            "type": "array",
            "description": "The list of omitted rules",
            "items": {
              "title": "BusValRuleAssignmentValidationOmittedRulesItem",
              "type": "string"
            },
            "nullable": true
          }
        },
        "required": []
      },
      "CustomerSummaryOrders": {
        "title": "CustomerSummaryOrders",
        "description": "Lists details about orders related to the customer. Lists only data for orders with the `PAID` or `FULFILLED` status. Data from orders with a `CREATED` or `CANCELED` status are not included. The data is updated also when an order changes status.",
        "type": "object",
        "properties": {
          "total_amount": {
            "type": "integer",
            "description": "The total amount spent by the customer. The value is multiplied by 100 to represent 2 decimal places. For example `10000 cents` for `$100.00`.",
            "nullable": true
          },
          "total_count": {
            "type": "integer",
            "description": "Total number of orders made by the customer.",
            "nullable": true
          },
          "average_amount": {
            "type": "integer",
            "description": "Average amount spent on orders. `total_amount` &divide; `total_count`. The value is multiplied by 100 to represent 2 decimal places. For example `10000 cents` for `$100.00`.",
            "nullable": true
          },
          "last_order_amount": {
            "type": "integer",
            "description": "Amount spent on last order. The value is multiplied by 100 to represent 2 decimal places. For example `10000 cents` for `$100.00`.",
            "nullable": true
          },
          "last_order_date": {
            "type": "string",
            "format": "date-time",
            "example": "2022-08-30T11:51:08.029Z",
            "description": "Timestamp representing the date and time of the customer's last order in ISO 8601 format.",
            "nullable": true
          }
        },
        "required": []
      },
      "CustomerSummaryRedemptions": {
        "title": "CustomerSummaryRedemptions",
        "type": "object",
        "properties": {
          "total_redeemed": {
            "type": "integer",
            "description": "Total number of redemptions made by the customer.",
            "nullable": true
          },
          "total_failed": {
            "type": "integer",
            "description": "Total number of redemptions that failed.",
            "nullable": true
          },
          "total_succeeded": {
            "type": "integer",
            "description": "Total number of redemptions that succeeded.",
            "nullable": true
          },
          "total_rolled_back": {
            "type": "integer",
            "description": "Total number of redemptions that were rolled back for the customer.",
            "nullable": true
          },
          "total_rollback_failed": {
            "type": "integer",
            "description": "Total number of redemption rollbacks that failed.",
            "nullable": true
          },
          "total_rollback_succeeded": {
            "type": "integer",
            "description": "Total number of redemption rollbacks that succeeded.",
            "nullable": true
          },
          "gift": {
            "title": "CustomerSummaryRedemptionsGift",
            "type": "object",
            "description": "Summary of gift card credits.",
            "required": [],
            "properties": {
              "redeemed_amount": {
                "type": "integer",
                "description": "Total amount of gift card credits redeemed by customer. The value is multiplied by 100 to represent 2 decimal places. For example `10000 cents` for `$100.00`.",
                "default": 0,
                "nullable": true
              },
              "amount_to_go": {
                "type": "integer",
                "description": "Remaining gift card balance across all gift cards. The value is multiplied by 100 to represent 2 decimal places. For example `10000 cents` for `$100.00`.",
                "default": 0,
                "nullable": true
              }
            },
            "nullable": true
          },
          "loyalty_card": {
            "title": "CustomerSummaryRedemptionsLoyaltyCard",
            "type": "object",
            "description": "Summary of loyalty points.",
            "required": [],
            "properties": {
              "redeemed_points": {
                "type": "integer",
                "description": "Total number of loyalty points redeemed by the customer.",
                "nullable": true
              },
              "points_to_go": {
                "type": "integer",
                "description": "Sum of remaining available point balance across all loyalty cards.",
                "nullable": true
              }
            },
            "nullable": true
          }
        },
        "required": []
      },
      "FieldConditions": {
        "title": "FieldConditions",
        "type": "object",
        "properties": {
          "conditions": {
            "$ref": "#/components/schemas/FiltersCondition"
          }
        }
      },
      "InapplicableTo": {
        "title": "InapplicableTo",
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "enum": [
              "product",
              "sku",
              "products_collection"
            ],
            "description": "This object stores information about the resource to which the discount is applicable.",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "Unique product collection, product, or SKU identifier assigned by Voucherify.",
            "nullable": true
          },
          "source_id": {
            "type": "string",
            "description": "The source identifier from your inventory system.",
            "nullable": true
          },
          "product_id": {
            "type": "string",
            "description": "Parent product's unique ID assigned by Voucherify.",
            "nullable": true
          },
          "product_source_id": {
            "type": "string",
            "description": "Parent product's source ID from your inventory system.",
            "nullable": true
          },
          "price": {
            "type": "number",
            "description": "New fixed price of an item. Value is multiplied by 100 to precisely represent 2 decimal places. For example, a $10 price is written as 1000. In case of the fixed price being calculated by the formula, i.e. the price_formula parameter is present in the fixed price definition, this value becomes the fallback value. Such that in a case where the formula cannot be calculated due to missing metadata, for example, this value will be used as the fixed price.",
            "nullable": true
          },
          "price_formula": {
            "type": "number",
            "description": "Formula used to calculate the discounted price of an item.",
            "nullable": true
          },
          "effect": {
            "$ref": "#/components/schemas/ApplicableToEffect"
          },
          "quantity_limit": {
            "type": "integer",
            "description": "The maximum number of units allowed to be discounted per order line item.",
            "nullable": true
          },
          "aggregated_quantity_limit": {
            "type": "integer",
            "description": "The maximum number of units allowed to be discounted combined across all matched order line items.",
            "nullable": true
          },
          "amount_limit": {
            "type": "integer",
            "description": "Upper limit allowed to be applied as a discount per order line item. Value is multiplied by 100 to precisely represent 2 decimal places. For example, a $6 maximum discount is written as 600.",
            "nullable": true
          },
          "aggregated_amount_limit": {
            "type": "integer",
            "description": "Maximum discount amount per order. Value is multiplied by 100 to precisely represent 2 decimal places. For example, a $6 maximum discount on the entire order is written as 600. This value is definable for the following discount effects:\n- `APPLY_TO_ITEMS` (each item subtotal is discounted equally)\n- `APPLY_TO_ITEMS_BY_QUANTITY` (each unit of matched products has the same discount value)",
            "nullable": true
          },
          "order_item_indices": {
            "title": "InapplicableToOrderItemIndices",
            "type": "array",
            "description": "Lists which order lines are (not) covered by the discount. The order in the array is determined by the sequence of applied discounts, while the numbers correspond to the order lines sent in the `order` object in the request. The first order line is assigned `0`, the second order line is assigned `1`, and so on.",
            "items": {
              "title": "InapplicableToOrderItemIndicesItem",
              "type": "integer"
            },
            "nullable": true
          },
          "order_item_units": {
            "title": "InapplicableToOrderItemUnits",
            "type": "array",
            "description": "Lists which units within order lines are covered by the discount. The order line items are listed according to sequence of applied discounts while the `index` corresponds to the order line sent in the `order` object in the request.",
            "items": {
              "title": "InapplicableToOrderItemUnitsItem",
              "type": "object",
              "properties": {
                "index": {
                  "type": "integer",
                  "description": "Number assigned to the order line item in accordance with the order sent in the request.",
                  "minimum": 0
                },
                "units": {
                  "title": "InapplicableToOrderItemUnitsItemUnits",
                  "type": "array",
                  "description": "Numbers of units in the order line covered by the discount; e.g. `2, 5, 8` for 10 units with the setting `\"skip_initially\": 1`, `\"repeat\": 3`. The counting of units starts from `1`. The maximum quantity of all handled units is 1000. If the quantity of all order items exceeds 1000, this array is not returned, but `units_limit_exceeded: true`. However, the discount is calculated properly for all relevant units.",
                  "items": {
                    "title": "InapplicableToOrderItemUnitsItemUnitsItem",
                    "type": "integer"
                  }
                },
                "units_limit_exceeded": {
                  "type": "boolean",
                  "description": "Returned as `true` only when the sum total of `quantity` of all order items exceeds 1000."
                }
              }
            },
            "nullable": true
          },
          "repeat": {
            "type": "integer",
            "description": "Determines the recurrence of the discount, e.g. `\"repeat\": 3` means that the discount is applied to every third item.",
            "nullable": true
          },
          "skip_initially": {
            "type": "integer",
            "description": "Determines how many items are skipped before the discount is applied.",
            "nullable": true
          },
          "target": {
            "type": "string",
            "description": "Determines to which kinds of objects the discount is applicable. `ITEM` includes products and SKUs. `UNIT` means particular units within an order line.",
            "nullable": true
          },
          "strict": {
            "type": "boolean",
            "nullable": true
          }
        },
        "required": [
          "effect"
        ]
      },
      "LoyaltiesPointsExpirationExportCreateRequestBodyParametersFilters": {
        "title": "LoyaltiesPointsExpirationExportCreateRequestBodyParametersFilters",
        "type": "object",
        "description": "Data filters used to narrow down the data records to be returned in the export.",
        "properties": {
          "junction": {
            "$ref": "#/components/schemas/Junction"
          },
          "voucher_id": {
            "title": "LoyaltiesPointsExpirationExportCreateRequestBodyParametersFiltersVoucherId",
            "type": "object",
            "description": "Data filters used to narrow down the data records to be returned in the result.",
            "properties": {
              "conditions": {
                "title": "LoyaltiesPointsExpirationExportCreateRequestBodyParametersFiltersVoucherIdConditions",
                "type": "object",
                "description": "Data filters used to narrow down the data records to be returned in the result.",
                "properties": {
                  "$in": {
                    "title": "LoyaltiesPointsExpirationExportCreateRequestBodyParametersFiltersVoucherIdConditionsIn",
                    "type": "array",
                    "description": "Array of the resource values that should be included in the results.",
                    "items": {
                      "title": "LoyaltiesPointsExpirationExportCreateRequestBodyParametersFiltersVoucherIdConditionsInItem",
                      "type": "string"
                    },
                    "nullable": true
                  },
                  "$not_in": {
                    "title": "LoyaltiesPointsExpirationExportCreateRequestBodyParametersFiltersVoucherIdConditionsNotIn",
                    "type": "array",
                    "description": "Array of the resource values that should be included in the results.",
                    "items": {
                      "title": "LoyaltiesPointsExpirationExportCreateRequestBodyParametersFiltersVoucherIdConditionsNotInItem",
                      "type": "string"
                    },
                    "nullable": true
                  },
                  "$is": {
                    "type": "string",
                    "description": "Specify the exact resource value.",
                    "nullable": true
                  },
                  "$is_not": {
                    "type": "string",
                    "description": "Results should omit this value.",
                    "nullable": true
                  }
                },
                "nullable": true
              }
            },
            "nullable": true
          },
          "campaign_id": {
            "title": "LoyaltiesPointsExpirationExportCreateRequestBodyParametersFiltersCampaignId",
            "type": "object",
            "description": "Data filters used to narrow down the data records to be returned in the result.",
            "properties": {
              "conditions": {
                "title": "LoyaltiesPointsExpirationExportCreateRequestBodyParametersFiltersCampaignIdConditions",
                "type": "object",
                "description": "Data filters used to narrow down the data records to be returned in the result.",
                "properties": {
                  "$in": {
                    "title": "LoyaltiesPointsExpirationExportCreateRequestBodyParametersFiltersCampaignIdConditionsIn",
                    "type": "array",
                    "description": "Array of the resource values that should be included in the results.",
                    "items": {
                      "title": "LoyaltiesPointsExpirationExportCreateRequestBodyParametersFiltersCampaignIdConditionsInItem",
                      "type": "string"
                    },
                    "nullable": true
                  },
                  "$not_in": {
                    "title": "LoyaltiesPointsExpirationExportCreateRequestBodyParametersFiltersCampaignIdConditionsNotIn",
                    "type": "array",
                    "description": "Array of the resource values that should be included in the results.",
                    "items": {
                      "title": "LoyaltiesPointsExpirationExportCreateRequestBodyParametersFiltersCampaignIdConditionsNotInItem",
                      "type": "string"
                    },
                    "nullable": true
                  },
                  "$is": {
                    "type": "string",
                    "description": "Specify the exact resource value.",
                    "nullable": true
                  },
                  "$is_not": {
                    "type": "string",
                    "description": "Results should omit this value.",
                    "nullable": true
                  }
                },
                "nullable": true
              }
            },
            "nullable": true
          }
        }
      },
      "LoyaltiesPointsExpirationExportCreateResponseBodyParametersFilters": {
        "title": "LoyaltiesPointsExpirationExportCreateResponseBodyParametersFilters",
        "type": "object",
        "description": "Data filters used to narrow down the data records to be returned in the export.",
        "properties": {
          "junction": {
            "$ref": "#/components/schemas/Junction"
          },
          "voucher_id": {
            "title": "LoyaltiesPointsExpirationExportCreateResponseBodyParametersFiltersVoucherId",
            "type": "object",
            "description": "Data filters used to narrow down the data records to be returned in the result.",
            "properties": {
              "conditions": {
                "title": "LoyaltiesPointsExpirationExportCreateResponseBodyParametersFiltersVoucherIdConditions",
                "type": "object",
                "description": "Data filters used to narrow down the data records to be returned in the result.",
                "properties": {
                  "$in": {
                    "title": "LoyaltiesPointsExpirationExportCreateResponseBodyParametersFiltersVoucherIdConditionsIn",
                    "type": "array",
                    "description": "Array of the resource values that should be included in the results.",
                    "items": {
                      "title": "LoyaltiesPointsExpirationExportCreateResponseBodyParametersFiltersVoucherIdConditionsInItem",
                      "type": "string"
                    },
                    "nullable": true
                  },
                  "$not_in": {
                    "title": "LoyaltiesPointsExpirationExportCreateResponseBodyParametersFiltersVoucherIdConditionsNotIn",
                    "type": "array",
                    "description": "Array of the resource values that should be excluded from the results.",
                    "items": {
                      "title": "LoyaltiesPointsExpirationExportCreateResponseBodyParametersFiltersVoucherIdConditionsNotInItem",
                      "type": "string"
                    },
                    "nullable": true
                  },
                  "$is": {
                    "type": "string",
                    "description": "Specify the exact resource value.",
                    "nullable": true
                  },
                  "$is_not": {
                    "type": "string",
                    "description": "Results should omit this value.",
                    "nullable": true
                  }
                },
                "nullable": true
              }
            },
            "nullable": true
          },
          "campaign_id": {
            "title": "LoyaltiesPointsExpirationExportCreateResponseBodyParametersFiltersCampaignId",
            "type": "object",
            "description": "Data filters used to narrow down the data records to be returned in the result.",
            "properties": {
              "conditions": {
                "title": "LoyaltiesPointsExpirationExportCreateResponseBodyParametersFiltersCampaignIdConditions",
                "type": "object",
                "description": "Data filters used to narrow down the data records to be returned in the result.",
                "properties": {
                  "$in": {
                    "title": "LoyaltiesPointsExpirationExportCreateResponseBodyParametersFiltersCampaignIdConditionsIn",
                    "type": "array",
                    "description": "Array of the resource values that should be included in the results.",
                    "items": {
                      "title": "LoyaltiesPointsExpirationExportCreateResponseBodyParametersFiltersCampaignIdConditionsInItem",
                      "type": "string"
                    },
                    "nullable": true
                  },
                  "$not_in": {
                    "title": "LoyaltiesPointsExpirationExportCreateResponseBodyParametersFiltersCampaignIdConditionsNotIn",
                    "type": "array",
                    "description": "Array of the resource values that should be included in the results.",
                    "items": {
                      "title": "LoyaltiesPointsExpirationExportCreateResponseBodyParametersFiltersCampaignIdConditionsNotInItem",
                      "type": "string"
                    },
                    "nullable": true
                  },
                  "$is": {
                    "type": "string",
                    "description": "Specify the exact resource value.",
                    "nullable": true
                  },
                  "$is_not": {
                    "type": "string",
                    "description": "Results should omit this value.",
                    "nullable": true
                  }
                },
                "nullable": true
              }
            },
            "nullable": true
          }
        }
      },
      "LoyaltyCardTransactionsType": {
        "title": "LoyaltyCardTransactionsType",
        "type": "string",
        "description": "Transaction types concerning loyalty points.",
        "enum": [
          "POINTS_PENDING_ACTIVATION",
          "POINTS_ACCRUAL",
          "POINTS_REDEMPTION",
          "POINTS_REFUND",
          "POINTS_ADDITION",
          "POINTS_REMOVAL",
          "POINTS_EXPIRATION",
          "POINTS_TRANSFER_IN",
          "POINTS_TRANSFER_OUT"
        ]
      },
      "LoyaltyPendingPointsDetails": {
        "title": "LoyaltyPendingPointsDetails",
        "type": "object",
        "description": "Details about how the pending points were earned.",
        "properties": {
          "loyalty_tier": {
            "title": "LoyaltyPendingPointsDetailsLoyaltyTier",
            "type": "object",
            "description": "The loyalty tier that is mapped for the earning rule and used in the pending point transaction.",
            "properties": {
              "id": {
                "type": "string",
                "description": "Unique identifier of the loyalty tier, assigned by Voucherify.",
                "nullable": true
              },
              "name": {
                "type": "string",
                "description": "User-defined name of the loyalty tier.",
                "nullable": true
              }
            },
            "required": [],
            "nullable": true
          },
          "holder_loyalty_tier": {
            "title": "LoyaltyPendingPointsDetailsHolderLoyaltyTier",
            "type": "object",
            "description": "Loyalty tier of the loyalty card holder at the moment when the transaction occurred. The loyalty tier is the tier in which the holder was at the moment pending points were created.",
            "properties": {
              "id": {
                "type": "string",
                "description": "Unique identifier of the loyalty tier, assigned by Voucherify.",
                "nullable": true
              },
              "name": {
                "type": "string",
                "description": "User-defined name of the loyalty tier.",
                "nullable": true
              }
            },
            "required": [],
            "nullable": true
          },
          "event": {
            "title": "LoyaltyPendingPointsDetailsEvent",
            "type": "object",
            "description": "Details about the event that created pending points.",
            "properties": {
              "id": {
                "type": "string",
                "description": "Unique event identifier, assigned by Voucherify.",
                "nullable": true
              },
              "type": {
                "type": "string",
                "description": "Type of the event that triggered the creation of pending points.",
                "default": "customer.order.paid",
                "enum": [
                  "customer.order.paid"
                ],
                "nullable": true
              },
              "group_id": {
                "type": "string",
                "description": "Unique identifier of the request that triggered the event, assigned by Voucherify.",
                "nullable": true
              },
              "entity_id": {
                "type": "string",
                "description": "Unique identifier of the entity that triggered the event, assigned by Voucherify. For pending points, it is the `customer_id` of the customer who paid for the order.",
                "nullable": true
              },
              "created_at": {
                "type": "string",
                "description": "Timestamp representing the date and time when the event occurred. The value is shown in the ISO 8601 format.",
                "format": "date-time",
                "nullable": true
              },
              "category": {
                "type": "string",
                "description": "Type of the event.",
                "enum": [
                  "ACTION",
                  "EFFECT"
                ],
                "nullable": true
              },
              "event_source": {
                "$ref": "#/components/schemas/EventSource"
              }
            },
            "nullable": true
          },
          "earning_rule": {
            "title": "LoyaltyPendingPointsDetailsEarningRule",
            "type": "object",
            "description": "Contains information about the earning rule.",
            "properties": {
              "id": {
                "type": "string",
                "description": "Unique identifier of an earning rule, assigned by Voucherify.",
                "nullable": true
              },
              "source": {
                "title": "LoyaltyPendingPointsDetailsEarningRuleSource",
                "type": "object",
                "required": [],
                "description": "Contains the custom earning rule name.",
                "properties": {
                  "banner": {
                    "type": "string",
                    "description": "Name of the earning rule. This is displayed as a header for the earning rule in the Dashboard.",
                    "nullable": true
                  }
                },
                "nullable": true
              }
            },
            "required": [],
            "nullable": true
          },
          "order": {
            "title": "LoyaltyPendingPointsDetailsOrder",
            "type": "object",
            "description": "Details about the order that caused adding pending points.",
            "properties": {
              "id": {
                "type": "string",
                "description": "Unique order identifier, assigned by Voucherify.",
                "nullable": true
              },
              "source_id": {
                "nullable": true,
                "type": "string",
                "description": "User-defined order identifier."
              }
            },
            "required": [],
            "nullable": true
          }
        },
        "required": []
      },
      "QualificationsFieldConditions": {
        "title": "QualificationsFieldConditions",
        "type": "object",
        "properties": {
          "conditions": {
            "$ref": "#/components/schemas/QualificationsFiltersCondition"
          }
        }
      },
      "QualificationsRedeemable": {
        "title": "QualificationsRedeemable",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id of the redeemable.",
            "nullable": true
          },
          "object": {
            "type": "string",
            "description": "Object type of the redeemable.",
            "enum": [
              "campaign",
              "promotion_tier",
              "promotion_stack",
              "voucher"
            ],
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "description": "Timestamp representing the date and time when the object was created. The value is shown in the ISO 8601 format.",
            "example": "2022-03-09T11:19:04.819Z",
            "format": "date-time",
            "nullable": true
          },
          "result": {
            "$ref": "#/components/schemas/RedeemableResult"
          },
          "order": {
            "$ref": "#/components/schemas/OrderCalculated"
          },
          "validation_rule_id": {
            "type": "string",
            "description": "A unique validation rule identifier assigned by the Voucherify API. The validation rule is verified before points are added to the balance.",
            "nullable": true
          },
          "applicable_to": {
            "$ref": "#/components/schemas/ApplicableToResultList"
          },
          "inapplicable_to": {
            "$ref": "#/components/schemas/InapplicableToResultList"
          },
          "metadata": {
            "title": "QualificationsRedeemableMetadata",
            "type": "object",
            "description": "The metadata object stores all custom attributes assigned to the product. A set of key/value pairs that you can attach to a product object. It can be useful for storing additional information about the product in a structured format.",
            "nullable": true
          },
          "categories": {
            "title": "QualificationsRedeemableCategories",
            "type": "array",
            "description": "List of category information.",
            "items": {
              "$ref": "#/components/schemas/CategoryWithStackingRulesType"
            },
            "nullable": true
          },
          "banner": {
            "type": "string",
            "example": "Order Paid - You will get 100 points",
            "description": "Name of the earning rule. This is displayed as a header for the earning rule in the Dashboard.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "example": "promotion_tier_get_points",
            "description": "Name of the redeemable.",
            "nullable": true
          },
          "campaign_name": {
            "type": "string",
            "example": "PromotionCampaign",
            "description": "Name of the campaign associated to the redeemable. This field is available only if object is not `campaign`",
            "nullable": true
          },
          "campaign_id": {
            "type": "string",
            "example": "camp_Mow7u4gSxagLlZ2oDQ01ZS5N",
            "description": "Id of the campaign associated to the redeemable. This field is available only if object is not `campaign`",
            "nullable": true
          },
          "validation_rules_assignments": {
            "$ref": "#/components/schemas/ValidationRulesAssignmentsList"
          },
          "redeemables": {
            "title": "QualificationsRedeemableRedeemables",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QualificationsRedeemableBase"
            },
            "nullable": true
          }
        }
      },
      "RedeemableVoucher": {
        "title": "RedeemableVoucher",
        "type": "object",
        "description": "This is an object representing a voucher.",
        "properties": {
          "id": {
            "type": "string",
            "example": "v_mkZN9v7vjYUadXnHrMza8W5c34fE5KiV",
            "description": "Assigned by the Voucherify API, identifies the voucher.",
            "nullable": true
          },
          "code": {
            "type": "string",
            "example": "WVPblOYX",
            "description": "A code that identifies a voucher. Pattern can use all letters of the English alphabet, Arabic numerals, and special characters.",
            "nullable": true
          },
          "campaign": {
            "type": "string",
            "example": "Gift Card Campaign",
            "description": "A unique campaign name, identifies the voucher's parent campaign.",
            "nullable": true
          },
          "campaign_id": {
            "type": "string",
            "example": "camp_FNYR4jhqZBM9xTptxDGgeNBV",
            "description": "Assigned by the Voucherify API, identifies the voucher's parent campaign.",
            "nullable": true
          },
          "category": {
            "type": "string",
            "nullable": true,
            "description": "The value is null."
          },
          "category_id": {
            "type": "string",
            "description": "Unique category ID assigned by Voucherify.",
            "example": "cat_0bb343dee3cdb5ec0c",
            "nullable": true
          },
          "categories": {
            "title": "RedeemableVoucherCategories",
            "type": "array",
            "items": {
              "title": "RedeemableVoucherCategoriesItem",
              "type": "object"
            },
            "description": "Contains an empty array.",
            "nullable": true
          },
          "type": {
            "type": "string",
            "enum": [
              "GIFT_VOUCHER",
              "DISCOUNT_VOUCHER",
              "LOYALTY_CARD"
            ],
            "description": "Defines the type of the voucher. ",
            "nullable": true
          },
          "discount": {
            "$ref": "#/components/schemas/Discount"
          },
          "gift": {
            "title": "RedeemableVoucherGift",
            "type": "object",
            "description": "Object representing gift parameters. Child attributes are present only if `type` is `GIFT_VOUCHER`. Defaults to `null`.",
            "properties": {
              "amount": {
                "type": "integer",
                "example": 10000,
                "description": "Total gift card income over the lifetime of the card. The value is multiplied by 100 to represent 2 decimal places. For example `10000 cents` for `$100.00`.",
                "nullable": true
              },
              "subtracted_amount": {
                "type": "integer",
                "description": "Total amount of subtracted credits over the gift card lifetime. The value is multiplied by 100 to represent 2 decimal places. For example `10000 cents` for `$100.00`.",
                "nullable": true
              },
              "balance": {
                "type": "integer",
                "example": 500,
                "description": "Available funds. The value is multiplied by 100 to represent 2 decimal places. For example `10000 cents` for `$100.00`. `balance` = `amount` - `subtracted_amount` - `redemption.redeemed_amount`.",
                "nullable": true
              },
              "effect": {
                "type": "string",
                "enum": [
                  "APPLY_TO_ORDER",
                  "APPLY_TO_ITEMS"
                ],
                "description": "Defines how the credits are applied to the customer's order.",
                "nullable": true
              }
            },
            "nullable": true
          },
          "loyalty_card": {
            "title": "RedeemableVoucherLoyaltyCard",
            "type": "object",
            "description": "Object representing loyalty card parameters. Child attributes are present only if `type` is `LOYALTY_CARD`. Defaults to `null`.",
            "properties": {
              "points": {
                "type": "integer",
                "example": 7000,
                "description": "Total number of points added to the loyalty card over its lifespan.",
                "nullable": true
              },
              "balance": {
                "type": "integer",
                "example": 6970,
                "description": "Points available for reward redemption. This is calculated as follows: `balance` = `points` - `expired_points` - `subtracted_points` - `redemption.redeemed_points`.",
                "nullable": true
              },
              "next_expiration_date": {
                "type": "string",
                "format": "date",
                "example": "2023-05-30",
                "description": "The next closest date when the next set of points are due to expire.",
                "nullable": true
              },
              "next_expiration_points": {
                "type": "integer",
                "description": "The amount of points that are set to expire next.",
                "nullable": true
              },
              "pending_points": {
                "type": "integer",
                "description": "Shows the number of pending points that will be added to the loyalty card when they are activated automatically or manually.",
                "nullable": true
              },
              "expired_points": {
                "type": "integer",
                "description": "Shows the total number of expired points over the lifetime of the loyalty card.",
                "nullable": true
              },
              "subtracted_points": {
                "type": "integer",
                "description": "Shows the total number of subtracted points over the lifetime of the loyalty card.",
                "nullable": true
              }
            },
            "nullable": true
          },
          "start_date": {
            "type": "string",
            "example": "2021-12-01T00:00:00.000Z",
            "format": "date-time",
            "description": "Activation timestamp defines when the code starts to be active in ISO 8601 format. Voucher is *inactive before* this date. ",
            "nullable": true
          },
          "expiration_date": {
            "type": "string",
            "example": "2021-12-31T00:00:00.000Z",
            "format": "date-time",
            "description": "Expiration timestamp defines when the code expires in ISO 8601 format.  Voucher is *inactive after* this date.",
            "nullable": true
          },
          "validity_timeframe": {
            "$ref": "#/components/schemas/ValidityTimeframe"
          },
          "validity_day_of_week": {
            "$ref": "#/components/schemas/ValidityDayOfWeek"
          },
          "validity_hours": {
            "$ref": "#/components/schemas/ValidityHours"
          },
          "active": {
            "type": "boolean",
            "nullable": true,
            "description": "A flag to toggle the voucher on or off. You can disable a voucher even though it's within the active period defined by the `start_date` and `expiration_date`.  \n\n- `true` indicates an *active* voucher\n- `false` indicates an *inactive* voucher"
          },
          "additional_info": {
            "type": "string",
            "description": "An optional field to keep any extra textual information about the code such as a code description and details.",
            "nullable": true
          },
          "metadata": {
            "title": "RedeemableVoucherMetadata",
            "type": "object",
            "description": "The metadata object stores all custom attributes assigned to the code. A set of key/value pairs that you can attach to a voucher object. It can be useful for storing additional information about the voucher in a structured format.",
            "nullable": true
          },
          "assets": {
            "$ref": "#/components/schemas/VoucherAssets"
          },
          "is_referral_code": {
            "type": "boolean",
            "nullable": true,
            "description": "Flag indicating whether this voucher is a referral code; `true` for campaign type `REFERRAL_PROGRAM`."
          },
          "created_at": {
            "type": "string",
            "example": "2021-12-22T10:13:06.487Z",
            "description": "Timestamp representing the date and time when the voucher was created. The value is shown in the ISO 8601 format.",
            "format": "date-time",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "example": "2021-12-22T10:14:45.316Z",
            "format": "date-time",
            "description": "Timestamp representing the date and time when the voucher was last updated in ISO 8601 format.",
            "nullable": true
          },
          "referrer_id": {
            "type": "string",
            "description": "Unique identifier of the referring person.",
            "example": "cust_Vzck5i8U3OhcEUFY6MKhN9Rv",
            "nullable": true
          },
          "holder_id": {
            "type": "string",
            "example": "cust_eWgXlBBiY6THFRJwX45Iakv4",
            "description": "Unique customer identifier of the redeemable holder. It equals to the customer ID assigned by Voucherify.",
            "nullable": true
          },
          "object": {
            "type": "string",
            "description": "The type of the object represented by JSON. Default is `voucher`.",
            "default": "voucher",
            "nullable": true
          },
          "publish": {
            "title": "RedeemableVoucherPublish",
            "type": "object",
            "description": "This object stores a summary of publish events: an events counter and an endpoint which can be called to return details of each event.  A publication is required for loyalty cards and referral codes. This object gets updated whenever a voucher has been published. Publication means assigning a code to a particular customer. Typically, a publication is made by distributing your codes to your customers, e.g. through Export to MailChimp or <!-- [publish voucher](OpenAPI.json/paths/~1publications/post) -->[publish voucher](ref:create-publication) API method. \n\n<!-- title: My Table Title -->\n\n| Required | Optional |\n| -------- | :------: |\n| `type`:`LOYALTY_CARD` |  `type`:`DISCOUNT_VOUCHER`   | \n| `is_referral_code`:`true`      |    `type`:`GIFT_VOUCHER`   |\n",
            "properties": {
              "object": {
                "type": "string",
                "default": "list",
                "description": "The type of the object represented is by default `list`. To get this list, you need to make a call to the endpoint returned in the `url` attribute.",
                "nullable": true
              },
              "count": {
                "type": "integer",
                "example": 0,
                "description": "Publication events counter.",
                "nullable": true
              },
              "url": {
                "type": "string",
                "example": "/v1/vouchers/WVPblOYX/publications?page=1&limit=10",
                "description": "The endpoint where this list of publications can be accessed using a **GET** method. `/v1/vouchers/{voucher_code}/publications`",
                "nullable": true
              }
            },
            "nullable": true
          },
          "redemption": {
            "title": "RedeemableVoucherRedemption",
            "type": "object",
            "description": "Stores a summary of redemptions that have been applied to the voucher.",
            "properties": {
              "quantity": {
                "type": "integer",
                "description": "How many times a voucher can be redeemed. A `null` value means unlimited.",
                "nullable": true
              },
              "redeemed_quantity": {
                "type": "integer",
                "example": 1,
                "description": "How many times a voucher has already been redeemed.",
                "nullable": true
              },
              "redeemed_points": {
                "type": "integer",
                "example": 100000,
                "description": "Total loyalty points redeemed.",
                "nullable": true
              },
              "object": {
                "type": "string",
                "default": "list",
                "description": "The type of the object represented is by default `list`. To get this list, you need to make a call to the endpoint returned in the url attribute.",
                "nullable": true
              },
              "url": {
                "type": "string",
                "example": "/v1/vouchers/WVPblOYX/redemptions?page=1&limit=10",
                "description": "The endpoint where this list of redemptions can be accessed using a **GET** method. `/v1/vouchers/{voucher_code}/redemptions`",
                "nullable": true
              }
            },
            "nullable": true
          }
        }
      },
      "ResourceTypes": {
        "title": "ResourceTypes",
        "description": "Types of usable resources.",
        "type": "string",
        "enum": [
          "campaign",
          "voucher",
          "promotion_tier"
        ]
      },
      "SimpleProductDiscountUnit": {
        "title": "SimpleProductDiscountUnit",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique product ID, assigned by Voucherify.",
            "nullable": true
          },
          "source_id": {
            "type": "string",
            "description": "Product's source ID.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Product name.",
            "nullable": true
          }
        },
        "required": []
      },
      "SimpleVoucher": {
        "title": "SimpleVoucher",
        "type": "object",
        "description": "Simplified voucher data.",
        "properties": {
          "id": {
            "type": "string",
            "description": "A unique identifier that represents the voucher assigned by Voucherify.",
            "nullable": true
          },
          "code": {
            "type": "string",
            "description": "Voucher code.",
            "nullable": true
          },
          "gift": {
            "$ref": "#/components/schemas/Gift"
          },
          "discount": {
            "$ref": "#/components/schemas/Discount"
          },
          "loyalty_card": {
            "$ref": "#/components/schemas/SimpleLoyaltyCard"
          },
          "type": {
            "type": "string",
            "description": "Type of the voucher.",
            "enum": [
              "DISCOUNT_VOUCHER",
              "LOYALTY_CARD",
              "GIFT_VOUCHER"
            ],
            "nullable": true
          },
          "campaign": {
            "type": "string",
            "description": "Campaign name.",
            "nullable": true
          },
          "campaign_id": {
            "type": "string",
            "description": "Campaign unique ID.",
            "nullable": true
          },
          "is_referral_code": {
            "type": "boolean",
            "description": "Flag indicating whether this voucher is a referral code; `true` for campaign type `REFERRAL_PROGRAM`.",
            "nullable": true
          },
          "holder_id": {
            "type": "string",
            "example": "cust_eWgXlBBiY6THFRJwX45Iakv4",
            "description": "Unique customer identifier of the redeemable holder. It equals to the customer ID assigned by Voucherify.",
            "nullable": true
          },
          "referrer_id": {
            "type": "string",
            "description": "Unique identifier of the referrer assigned by Voucherify.",
            "example": "cust_nM4jqPiaXUvQdVSA6vTRUnix",
            "nullable": true
          },
          "category_id": {
            "type": "string",
            "nullable": true,
            "description": "Unique identifier of the category that this voucher belongs to.",
            "example": "cat_0b6152ce12414820dc"
          },
          "categories": {
            "title": "SimpleVoucherCategories",
            "type": "array",
            "description": "Contains details about the category.",
            "items": {
              "$ref": "#/components/schemas/Category"
            },
            "nullable": true
          },
          "active": {
            "type": "boolean",
            "description": "Shows whether the voucher is on or off. `true` indicates an *active* voucher and `false` indicates an *inactive* voucher.",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "example": "2021-12-22T10:13:06.487Z",
            "description": "Timestamp representing the date and time when the order was created in the ISO 8601 format.",
            "format": "date-time",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "example": "2024-01-01T11:11:11.111Z",
            "description": "Timestamp representing the date and time when the order was created. The value is shown in the ISO 8601 format.",
            "format": "date-time",
            "nullable": true
          },
          "redemption": {
            "title": "SimpleVoucherRedemption",
            "type": "object",
            "description": "Defines the redemption limits on vouchers.",
            "properties": {
              "quantity": {
                "type": "integer",
                "nullable": true,
                "description": "How many times a voucher can be redeemed. A `null` value means unlimited."
              },
              "redeemed_quantity": {
                "type": "integer",
                "example": 1,
                "description": "How many times a voucher has already been redeemed.",
                "nullable": true
              },
              "redeemed_points": {
                "type": "integer",
                "description": "Total loyalty points redeemed.",
                "nullable": true
              }
            },
            "required": [],
            "nullable": true
          },
          "start_date": {
            "type": "string",
            "example": "2021-12-01T00:00:00.000Z",
            "format": "date-time",
            "description": "Activation timestamp defines when the code starts to be active in ISO 8601 format. Voucher is *inactive before* this date.",
            "nullable": true
          },
          "expiration_date": {
            "type": "string",
            "example": "2021-12-31T00:00:00.000Z",
            "format": "date-time",
            "description": "Expiration timestamp defines when the code expires in ISO 8601 format.  Voucher is *inactive after* this date.",
            "nullable": true
          },
          "metadata": {
            "title": "SimpleVoucherMetadata",
            "type": "object",
            "description": "A set of custom key/value pairs that you can attach to a voucher. The metadata object stores all custom attributes assigned to the voucher.",
            "nullable": true
          },
          "object": {
            "type": "string",
            "description": "The type of the object represented by JSON.",
            "default": "voucher",
            "enum": [
              "voucher"
            ],
            "nullable": true
          }
        },
        "required": []
      },
      "VoucherBalance": {
        "title": "VoucherBalance",
        "type": "object",
        "description": "Contains information on how the balance was affected by the transaction.",
        "properties": {
          "type": {
            "type": "string",
            "description": "The type of voucher whose balance is being adjusted due to the transaction.",
            "enum": [
              "loyalty_card",
              "gift_voucher"
            ],
            "nullable": true
          },
          "total": {
            "type": "integer",
            "description": "The number of all points or credits accumulated on the card as affected by add or subtract operations.",
            "nullable": true
          },
          "object": {
            "type": "string",
            "description": "The type of the object represented by the JSON.",
            "default": "balance",
            "enum": [
              "balance"
            ],
            "nullable": true
          },
          "points": {
            "type": "integer",
            "description": "Points added or subtracted in the transaction of a loyalty card.",
            "nullable": true
          },
          "balance": {
            "type": "integer",
            "description": "The available points or credits on the card after the transaction as affected by redemption or rollback.",
            "nullable": true
          },
          "operation_type": {
            "type": "string",
            "description": "The type of the operation being performed. The operation type is `AUTOMATIC` if it is an automatic redemption.",
            "enum": [
              "MANUAL",
              "AUTOMATIC"
            ],
            "nullable": true
          },
          "related_object": {
            "title": "VoucherBalanceRelatedObject",
            "type": "object",
            "required": [],
            "description": "Defines the resource that is being modified with the values that are returned in the balance object.",
            "properties": {
              "id": {
                "type": "string",
                "description": "Identifies the voucher that is being modified. The ID is assigned by the Voucherify API.",
                "nullable": true
              },
              "type": {
                "type": "string",
                "description": "The object being modified, i.e. voucher.",
                "default": "voucher",
                "enum": [
                  "voucher"
                ],
                "nullable": true
              }
            },
            "nullable": true
          }
        },
        "required": []
      },
      "VoucherTransactionsExportFilterConditions": {
        "title": "VoucherTransactionsExportFilterConditions",
        "description": "Filter condition.",
        "type": "object",
        "required": [],
        "properties": {
          "voucher_id": {
            "title": "VoucherTransactionsExportFilterConditionsVoucherId",
            "type": "object",
            "required": [],
            "description": "Data filters used to narrow down the data records to be returned in the result.",
            "properties": {
              "conditions": {
                "title": "VoucherTransactionsExportFilterConditionsVoucherIdConditions",
                "type": "object",
                "required": [],
                "description": "Data filters used to narrow down the data records to be returned in the result.",
                "properties": {
                  "$in": {
                    "title": "VoucherTransactionsExportFilterConditionsVoucherIdConditionsIn",
                    "type": "array",
                    "minItems": 1,
                    "maxItems": 1,
                    "items": {
                      "title": "VoucherTransactionsExportFilterConditionsVoucherIdConditionsInItem",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 1
                    },
                    "nullable": true
                  }
                },
                "nullable": true
              }
            },
            "nullable": true
          }
        }
      },
      "EventSource": {
        "title": "EventSource",
        "type": "object",
        "description": "Contains the source of the object that initiated the event.",
        "required": [],
        "properties": {
          "channel": {
            "type": "string",
            "description": "Determines the channel that initiated the event.",
            "enum": [
              "USER_PORTAL",
              "API",
              "CLIENT_API",
              "INTERNAL"
            ],
            "example": "API",
            "nullable": true
          },
          "user": {
            "title": "EventSourceUser",
            "type": "object",
            "description": "Determines the Voucherify user who triggered the event.",
            "properties": {
              "id": {
                "type": "string",
                "description": "Unique identifier of the user.",
                "example": "user_xyzfghSTprSTUVWXYlk6tuvXYst7FGH7",
                "nullable": true
              }
            },
            "required": [],
            "nullable": true
          },
          "api_key": {
            "title": "EventSourceApiKey",
            "type": "object",
            "description": "Determines the API key used to initiate the event.",
            "required": [],
            "properties": {
              "name": {
                "type": "string",
                "description": "Channel name in the application keys.",
                "nullable": true
              },
              "app_id": {
                "type": "string",
                "description": "Contains the application ID from the Voucherify API key pair.",
                "example": "1XXXX5XX-0XXX-XXXb-X7XX-XX2XXaXXX6XX",
                "nullable": true
              }
            },
            "nullable": true
          }
        }
      },
      "FiltersCondition": {
        "title": "FiltersCondition",
        "type": "object",
        "properties": {
          "$in": {
            "$ref": "#/components/schemas/Any"
          },
          "$not_in": {
            "$ref": "#/components/schemas/Any"
          },
          "$is": {
            "$ref": "#/components/schemas/Any"
          },
          "$is_days_ago": {
            "$ref": "#/components/schemas/Any"
          },
          "$is_days_in_future": {
            "$ref": "#/components/schemas/Any"
          },
          "$is_not": {
            "$ref": "#/components/schemas/Any"
          },
          "$has_value": {
            "$ref": "#/components/schemas/Any"
          },
          "$is_unknown": {
            "$ref": "#/components/schemas/Any"
          },
          "$contains": {
            "$ref": "#/components/schemas/Any"
          },
          "$not_contain": {
            "$ref": "#/components/schemas/Any"
          },
          "$starts_with": {
            "$ref": "#/components/schemas/Any"
          },
          "$ends_with": {
            "$ref": "#/components/schemas/Any"
          },
          "$more_than": {
            "$ref": "#/components/schemas/Any"
          },
          "$less_than": {
            "$ref": "#/components/schemas/Any"
          },
          "$more_than_ago": {
            "$ref": "#/components/schemas/Any"
          },
          "$less_than_ago": {
            "$ref": "#/components/schemas/Any"
          },
          "$more_than_future": {
            "$ref": "#/components/schemas/Any"
          },
          "$less_than_future": {
            "$ref": "#/components/schemas/Any"
          },
          "$more_than_equal": {
            "$ref": "#/components/schemas/Any"
          },
          "$less_than_equal": {
            "$ref": "#/components/schemas/Any"
          },
          "$after": {
            "$ref": "#/components/schemas/Any"
          },
          "$before": {
            "$ref": "#/components/schemas/Any"
          },
          "$count": {
            "$ref": "#/components/schemas/Any"
          },
          "$count_less": {
            "$ref": "#/components/schemas/Any"
          },
          "$count_more": {
            "$ref": "#/components/schemas/Any"
          }
        }
      },
      "QualificationsFiltersCondition": {
        "title": "QualificationsFiltersCondition",
        "type": "object",
        "properties": {
          "$is": {
            "title": "QualificationsFiltersConditionIs",
            "type": "array",
            "items": {
              "title": "QualificationsFiltersConditionIsItem",
              "type": "string"
            },
            "nullable": true
          },
          "$is_not": {
            "title": "QualificationsFiltersConditionIsNot",
            "type": "array",
            "items": {
              "title": "QualificationsFiltersConditionIsNotItem",
              "type": "string"
            },
            "nullable": true
          },
          "$has_value": {
            "$ref": "#/components/schemas/Any"
          },
          "$is_unknown": {
            "$ref": "#/components/schemas/Any"
          },
          "$in": {
            "title": "QualificationsFiltersConditionIn",
            "type": "array",
            "items": {
              "title": "QualificationsFiltersConditionInItem",
              "type": "string"
            },
            "nullable": true
          },
          "$not_in": {
            "title": "QualificationsFiltersConditionNotIn",
            "type": "array",
            "items": {
              "title": "QualificationsFiltersConditionNotInItem",
              "type": "string"
            },
            "nullable": true
          }
        }
      },
      "QualificationsRedeemableBase": {
        "title": "QualificationsRedeemableBase",
        "description": "Data of single redeemable which was properly qualified.",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id of the redeemable.",
            "nullable": true
          },
          "object": {
            "type": "string",
            "description": "Object type of the redeemable.",
            "enum": [
              "campaign",
              "promotion_tier",
              "promotion_stack",
              "voucher"
            ],
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "description": "Timestamp representing the date and time when the object was created. The value is shown in the ISO 8601 format.",
            "example": "2022-03-09T11:19:04.819Z",
            "format": "date-time",
            "nullable": true
          },
          "result": {
            "$ref": "#/components/schemas/RedeemableResult"
          },
          "order": {
            "$ref": "#/components/schemas/OrderCalculated"
          },
          "validation_rule_id": {
            "type": "string",
            "description": "A unique validation rule identifier assigned by the Voucherify API. The validation rule is verified before points are added to the balance.",
            "nullable": true
          },
          "applicable_to": {
            "$ref": "#/components/schemas/ApplicableToResultList"
          },
          "inapplicable_to": {
            "$ref": "#/components/schemas/InapplicableToResultList"
          },
          "metadata": {
            "title": "QualificationsRedeemableBaseMetadata",
            "type": "object",
            "description": "The metadata object stores all custom attributes assigned to the product. A set of key/value pairs that you can attach to a product object. It can be useful for storing additional information about the product in a structured format.",
            "nullable": true
          },
          "categories": {
            "title": "QualificationsRedeemableBaseCategories",
            "type": "array",
            "description": "List of category information.",
            "items": {
              "$ref": "#/components/schemas/CategoryWithStackingRulesType"
            },
            "nullable": true
          },
          "banner": {
            "type": "string",
            "example": "Order Paid - You will get 100 points",
            "description": "Name of the earning rule. This is displayed as a header for the earning rule in the Dashboard.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "example": "promotion_tier_get_points",
            "description": "Name of the redeemable.",
            "nullable": true
          },
          "campaign_name": {
            "type": "string",
            "example": "PromotionCampaign",
            "description": "Name of the campaign associated to the redeemable. This field is available only if object is not `campaign`",
            "nullable": true
          },
          "campaign_id": {
            "type": "string",
            "example": "camp_Mow7u4gSxagLlZ2oDQ01ZS5N",
            "description": "Id of the campaign associated to the redeemable. This field is available only if object is not `campaign`",
            "nullable": true
          },
          "validation_rules_assignments": {
            "$ref": "#/components/schemas/ValidationRulesAssignmentsList"
          }
        }
      },
      "RedeemableResult": {
        "title": "RedeemableResult",
        "description": "Information about redeemable result.",
        "properties": {
          "discount": {
            "$ref": "#/components/schemas/Discount"
          },
          "bundle": {
            "$ref": "#/components/schemas/Bundle"
          },
          "gift": {
            "$ref": "#/components/schemas/RedeemableGift"
          },
          "loyalty_card": {
            "$ref": "#/components/schemas/RedeemableLoyaltyCard"
          },
          "error": {
            "$ref": "#/components/schemas/Error"
          }
        }
      },
      "Any": {
        "title": "Any"
      },
      "RedeemableGift": {
        "title": "RedeemableGift",
        "type": "object",
        "description": "Contains current gift card balance information.",
        "properties": {
          "balance": {
            "type": "number",
            "description": "Available funds. The value is multiplied by 100 to represent 2 decimal places. For example `10000 cents` for `$100.00`.",
            "nullable": true
          },
          "credits": {
            "type": "number",
            "description": "The number of credits that the user wants to use from the gift card to fulfil the order. The value of credits cannot be higher than the current balance on the gift card. If the user gives more points than he has on the gift card, the application will return an error code in response. The value is multiplied by 100 to represent 2 decimal places. For example `10000 cents` for `$100.00`.",
            "nullable": true
          },
          "locked_credits": {
            "type": "number",
            "description": "The number of credits that are locked under a validation session. This is returned if the qualification request includes `session.type: LOCK` parameter in the body. The value is multiplied by 100 to represent 2 decimal places. For example `10000` for `$100.00`. Returns `0` if there aren't any active validation sessions for the gift card.",
            "nullable": true
          }
        }
      },
      "RedeemableLoyaltyCard": {
        "title": "RedeemableLoyaltyCard",
        "type": "object",
        "description": "Redeemable loyalty card object response",
        "properties": {
          "points": {
            "type": "integer",
            "example": 7000,
            "description": "Total number of points added to the loyalty card over its lifespan.",
            "nullable": true
          },
          "balance": {
            "type": "integer",
            "example": 6970,
            "description": "Points available for reward redemption. This is calculated as follows: `balance` = `points` - `expired_points` - `subtracted_points` - `redemption.redeemed_points`.",
            "nullable": true
          },
          "exchange_ratio": {
            "type": "number",
            "description": "The cash equivalent of the points defined in the points_ratio property.",
            "nullable": true
          },
          "points_ratio": {
            "type": "integer",
            "description": "The number of loyalty points that will map to the predefined cash amount defined by the exchange_ratio property.",
            "nullable": true
          },
          "transfers": {
            "title": "RedeemableLoyaltyCardTransfers",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LoyaltiesTransferPoints"
            },
            "nullable": true
          }
        }
      }
    },
    "examples": {
      "req_vouchers_metadata_1": {
        "value": {
          "codes": [
            "PROMO-CODE810",
            "PROMO-CODE726"
          ],
          "metadata": {
            "lang": "en",
            "authorized_internally": true
          }
        }
      },
      "req_vouchers_metadata_2": {
        "value": {
          "codes": [
            "PROMO-CODE810",
            "PROMO-CODE726",
            "PROMO-CODE888"
          ],
          "metadata": {
            "lang": "en",
            "authorized_internally": true
          }
        }
      },
      "res_async_actions": {
        "value": {
          "async_action_id": "aa_0ab2df092385be5ca5"
        }
      }
    }
  },
  "paths": {
    "/v1/publications/create": {
      "get": {
        "operationId": "create-publication-1",
        "tags": [
          "Publications"
        ],
        "summary": "Create Publication",
        "description": "This method selects vouchers that are suitable for publication, adds a publish entry and returns the publication.\nA voucher is suitable for publication when its active and hasnt been published yet.\n ❗️ Limited access\n Access to this endpoint is limited. This endpoint is designed for specific integrations and the API keys need to be configured to access this endpoint. Navigate to the **Dashboard** &rarr; **Project Settings** &rarr; **General** &rarr; **Integration Keys** to set up a pair of API keys and use them to send the request.  \n 🚧 Clearly define the source of the voucher\n You must clearly define which source you want to publish the voucher code from. It can either be a code from a campaign or a specific voucher identified by a code.  \n 🚧 Publish multiple vouchers\n This endpoint does not support the publishing of multiple vouchers from a single campaign. In case you want to publish multiple vouchers within a single publication, you need to use a dedicated endpoint.  \n 📘 Auto-update campaign\n In case you want to ensure the number of publishable codes increases automatically with the number of customers, you should use an **auto-update** campaign.  \n# Example Request \n  \n ❗️ Required  \n Query param voucher OR campaign MUST be filled out. If you provide both, campaign param will be skipped.",
        "parameters": [
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterBoolean"
            },
            "in": "query",
            "name": "join_once",
            "description": "Through this flag, you can control if a particular person gets only one and always the same code even if the app sends multiple publication requests. It means that if you have a referral program, a referrer is assigned only to one code if an integration sends publication requests more than once for the same customer."
          },
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterCode"
            },
            "in": "query",
            "name": "voucher",
            "description": "Code of voucher being published."
          },
          {
            "name": "campaign",
            "in": "query",
            "description": "Create publication with campaign.",
            "style": "deepObject",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/CreatePublicationCampaign"
            }
          },
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterString"
            },
            "in": "query",
            "name": "source_id",
            "description": "The merchants publication ID if it is different from the Voucherify publication ID. Its an optional tracking identifier of a publication. It is really useful in case of an integration between multiple systems. It can be a publication ID from a CRM system, database or 3rd-party service.\nIf source_id is provided only 1 voucher can be published per request."
          },
          {
            "name": "customer",
            "in": "query",
            "required": true,
            "description": "Contains information about the customer to whom the publication was directed.",
            "style": "deepObject",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/Customer"
            }
          },
          {
            "name": "metadata",
            "in": "query",
            "description": "The metadata object stores all custom attributes assigned to the publication. A set of key/value pairs that you can attach to a publication object. It can be useful for storing additional information about the publication in a structured format.",
            "style": "deepObject",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/ParameterObject"
            }
          }
        ],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns a publication object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicationsCreateResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "id": "pub_ocaXCa023ayJ3WL1ARxUeKgIvg3JcEGh",
                      "object": "publication",
                      "created_at": "2022-09-30T16:30:32.924Z",
                      "customer_id": "cust_BB6F97yf0XqCe7hxVUV7M4sS",
                      "tracking_id": "pub_source_customer_5",
                      "metadata": {
                        "year": 2022
                      },
                      "channel": "myown",
                      "source_id": "publication_source_ID_10",
                      "result": "SUCCESS",
                      "customer": {
                        "id": "cust_BB6F97yf0XqCe7hxVUV7M4sS",
                        "name": "Bob Jones",
                        "email": "bob.smith@email.com",
                        "source_id": "pub_source_customer_5",
                        "metadata": {
                          "lang": "en",
                          "test": true
                        },
                        "object": "customer"
                      },
                      "voucher": {
                        "id": "v_6Hy5FdNlu3dP65fJu5BgXma31Sl3rgkf",
                        "code": "cEsMn0uA",
                        "campaign": "Test - Discount Effect - Amount - Items",
                        "campaign_id": "camp_dphuwqH7BOVkgh4JmpDtS32l",
                        "category": null,
                        "category_id": null,
                        "type": "DISCOUNT_VOUCHER",
                        "discount": {
                          "type": "AMOUNT",
                          "amount_off": 300,
                          "effect": "APPLY_TO_ITEMS"
                        },
                        "gift": null,
                        "loyalty_card": null,
                        "start_date": null,
                        "expiration_date": null,
                        "validity_timeframe": null,
                        "validity_day_of_week": null,
                        "active": true,
                        "additional_info": null,
                        "metadata": {},
                        "assets": {
                          "qr": {
                            "id": "U2FsdGVkX188XVmOotyCyR2j3G8sJR8HzS3DQ+6J1OElPWSmjlEnthuJc7rkc7WIVxjT4pTl1JVVkHEuGXNXdzRik11H8S18HQeQFJFiuwLZ2mzEC2zZitEinyUxtZwhnEHoi0eGAgYCG7iVMNuOQA==",
                            "url": "{{internalVoucherifyURL}}"
                          },
                          "barcode": {
                            "id": "U2FsdGVkX18wDd9CcLM0Ef7aBfUSXZUoCQpuNpk4CHGOipbn+wFkfzcIZGBtUlxrI2KsXciCqF+c93AKzsymq5Yw8eEAFF/FK5f94z4/sgzaLDvyBmPCXHuS11Ew9S4ZEMjdTkUJftER2IlxWaCARA==",
                            "url": "{{internalVoucherifyURL}}"
                          }
                        },
                        "is_referral_code": false,
                        "created_at": "2022-09-30T16:30:32.956Z",
                        "updated_at": null,
                        "holder_id": "cust_BB6F97yf0XqCe7hxVUV7M4sS",
                        "redemption": {
                          "quantity": 1,
                          "redeemed_quantity": 0,
                          "object": "list",
                          "url": "/v1/vouchers/cEsMn0uA/redemptions?page=1&limit=10"
                        },
                        "publish": {
                          "object": "list",
                          "count": 1,
                          "url": "/v1/vouchers/cEsMn0uA/publications?page=1&limit=10"
                        },
                        "object": "voucher"
                      },
                      "vouchers_id": [
                        "v_6Hy5FdNlu3dP65fJu5BgXma31Sl3rgkf"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/qualifications": {
      "post": {
        "operationId": "check-eligibility",
        "tags": [
          "Qualifications"
        ],
        "summary": "Check Eligibility",
        "description": "\n 🚧 The Qualifications endpoint ignores the rules checking:\n \n - Limit of total redeemed discount amount per campaign\n - Limit of total redemptions count per campaign\n - Redemptions per customer\n - Redemptions per customer in a campaign \nGenerate a list of redeemables that are applicable in the context of the customer and order.\nThe new qualifications method is an improved version of Campaign Qualifications, Voucher Qualifications, and Promotions Validation API requests. The new qualification method introduces the following improvements:\n- Qualification results are returned faster\n- No limit on the number of returned redeemables\n- Introduces new qualification scenarios, not available in the previous version\n 👍 Scenario Guide\n Read the dedicated guide to learn about some use cases this endpoint can cover.\n# Paging \nThe Voucherify Qualifications API request will return to you all of the redeemables available for the customer in batches of up to 50 redeemables. To get the next batch of redeemables, you need to use the starting_after cursor.\nTo process of paging the redeemables works in the following manner:\n- You send the first API request for Qualifications without the starting_after parameter.\n- The response will contain a parameter named has_more. If the parameters value is set to true, then more redeemables are available.\n- Get the value of the created_at parameter of the last returned redeemable. The value of this parameter will be used as a cursor to retrieve the next page of redeemables.\n- Send another API request for Qualification with the starting_after parameter set to the value taken from the created_at parameter from the last returned redeemable.\n- Voucherify will return the next page of redeemables.\n- If the has_more parameter is set to true, apply steps 3-5 to get the next page of redeemables.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "requestBody": {
          "description": "Define order and customer context.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QualificationsCheckEligibilityRequestBody"
              }
            }
          }
        },
        "responses": {
          "2XX": {
            "description": "Returns a qualifications object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QualificationsCheckEligibilityResponseBody"
                },
                "examples": {
                  "Qualification for bundles": {
                    "value": {
                      "redeemables": {
                        "object": "list",
                        "data_ref": "data",
                        "data": [
                          {
                            "id": "BUNDLE-PROD-1c",
                            "object": "voucher",
                            "created_at": "2025-03-26T11:00:17.987Z",
                            "result": {
                              "discount": {
                                "type": "AMOUNT",
                                "effect": "APPLY_TO_ITEMS",
                                "amount_off": 900,
                                "aggregated_amount_limit": 9000,
                                "is_dynamic": false
                              },
                              "bundle": {
                                "quantity": 0,
                                "identified": [
                                  {
                                    "id": "prod_0fc35dfe978defeb6b",
                                    "object": "product",
                                    "item_index": 0,
                                    "item_quantity": 1
                                  },
                                  {
                                    "id": "prod_0fc35dfeaa0defeb73",
                                    "object": "product",
                                    "item_index": 1,
                                    "item_quantity": 1
                                  },
                                  {
                                    "id": "prod_0fc35dfeabcdefeb80",
                                    "object": "product",
                                    "item_index": 2,
                                    "item_quantity": 2
                                  }
                                ],
                                "missing": [
                                  {
                                    "id": "prod_0fc35dfe978defeb6b",
                                    "object": "product",
                                    "item_quantity": 1
                                  },
                                  {
                                    "id": "pc_pWu3TzRFhJ99Xak7Z7QlynNa",
                                    "object": "products_collection",
                                    "item_quantity": 2
                                  }
                                ]
                              }
                            },
                            "order": {
                              "amount": 5496,
                              "total_amount": 5496,
                              "items": [
                                {
                                  "object": "order_item",
                                  "id": "ordli_105e1f56dc0bc19187",
                                  "quantity": 1,
                                  "initial_quantity": 1,
                                  "amount": 2499,
                                  "initial_amount": 2499,
                                  "price": 2499,
                                  "subtotal_amount": 2499,
                                  "product": {
                                    "id": "prod_0fc35dfe978defeb6b",
                                    "source_id": "star-th-bottle",
                                    "name": "Star Thermal Bottle",
                                    "metadata": {
                                      "brand": "Star"
                                    },
                                    "price": 2499
                                  }
                                },
                                {
                                  "object": "order_item",
                                  "id": "ordli_105e1f56dc0bc19188",
                                  "quantity": 1,
                                  "initial_quantity": 1,
                                  "amount": 1999,
                                  "initial_amount": 1999,
                                  "price": 1999,
                                  "subtotal_amount": 1999,
                                  "product": {
                                    "id": "prod_0fc35dfeaa0defeb73",
                                    "source_id": "adv-tshirt",
                                    "name": "Adventure T-shirt",
                                    "metadata": {
                                      "brand": "Adventure"
                                    },
                                    "price": 1999
                                  }
                                },
                                {
                                  "object": "order_item",
                                  "id": "ordli_105e1f56dc0bc19189",
                                  "quantity": 2,
                                  "initial_quantity": 2,
                                  "amount": 998,
                                  "initial_amount": 998,
                                  "price": 499,
                                  "subtotal_amount": 998,
                                  "product": {
                                    "id": "prod_0fc35dfeabcdefeb80",
                                    "source_id": "adv-scks",
                                    "name": "Adventure Socks",
                                    "metadata": {
                                      "brand": "Adventure"
                                    },
                                    "price": 499
                                  }
                                }
                              ],
                              "customer_id": null,
                              "referrer_id": null,
                              "object": "order"
                            },
                            "applicable_to": {
                              "data": [
                                {
                                  "object": "products_collection",
                                  "id": "pc_nw1xRgXB8cBzDJSrSbdSqJP4",
                                  "effect": "APPLY_TO_EVERY",
                                  "skip_initially": 0,
                                  "repeat": 1,
                                  "target": "ITEM"
                                }
                              ],
                              "total": 1,
                              "data_ref": "data",
                              "object": "list"
                            },
                            "inapplicable_to": {
                              "data": [],
                              "total": 0,
                              "data_ref": "data",
                              "object": "list"
                            },
                            "metadata": {},
                            "campaign_id": "camp_vzuF8JZdh1tdQqw3R6rS63ci",
                            "campaign_name": "Bundle-Product-Discount",
                            "validation_rules_assignments": {
                              "object": "list",
                              "data_ref": "data",
                              "data": [
                                {
                                  "id": "asgm_e9RsrtXBMCJ5ti1S",
                                  "rule_id": "val_g1rAIcaPuxAd",
                                  "related_object_id": "v_XXSJVTBFFKLPiy585UqtTPiYJMF1bnBW",
                                  "related_object_type": "voucher",
                                  "object": "validation_rules_assignment",
                                  "validation_status": "VALID"
                                }
                              ],
                              "total": 1
                            }
                          }
                        ],
                        "total": 1,
                        "has_more": true,
                        "more_starting_after": "2025-03-26T11:00:17.987Z"
                      },
                      "tracking_id": "track_C7TLT9aBmso=",
                      "order": {
                        "items": [
                          {
                            "object": "order_item",
                            "id": "ordli_105e1f56dc0bc19187",
                            "quantity": 1,
                            "product": {
                              "id": "prod_0fc35dfe978defeb6b",
                              "source_id": "star-th-bottle",
                              "name": "Star Thermal Bottle",
                              "metadata": {
                                "brand": "Star"
                              },
                              "price": 2499
                            }
                          },
                          {
                            "object": "order_item",
                            "id": "ordli_105e1f56dc0bc19188",
                            "quantity": 1,
                            "product": {
                              "id": "prod_0fc35dfeaa0defeb73",
                              "source_id": "adv-tshirt",
                              "name": "Adventure T-shirt",
                              "metadata": {
                                "brand": "Adventure"
                              },
                              "price": 1999
                            }
                          },
                          {
                            "object": "order_item",
                            "id": "ordli_105e1f56dc0bc19189",
                            "quantity": 2,
                            "product": {
                              "id": "prod_0fc35dfeabcdefeb80",
                              "source_id": "adv-scks",
                              "name": "Adventure Socks",
                              "metadata": {
                                "brand": "Adventure"
                              },
                              "price": 499
                            }
                          }
                        ],
                        "customer_id": null,
                        "referrer_id": null,
                        "object": "order"
                      },
                      "stacking_rules": {
                        "redeemables_limit": 30,
                        "applicable_redeemables_limit": 5,
                        "applicable_exclusive_redeemables_limit": 1,
                        "exclusive_categories": [],
                        "joint_categories": [],
                        "redeemables_application_mode": "PARTIAL",
                        "redeemables_sorting_rule": "REQUESTED_ORDER",
                        "redeemables_no_effect_rule": "REDEEM_ANYWAY",
                        "redeemables_products_application_mode": "STACK",
                        "redeemables_rollback_order_mode": "WITH_ORDER"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/validations": {
      "post": {
        "operationId": "validate-stacked-discounts",
        "tags": [
          "Validations"
        ],
        "summary": "Validate Stackable Discounts",
        "description": "Verify redeemables provided in the request. This method is designed for server side integration which means that it is accessible only through private keys.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidationsValidateRequestBody"
              },
              "examples": {
                "Sandbox onboarding validation": {
                  "value": {
                    "redeemables": [
                      {
                        "object": "voucher",
                        "id": "BLCKFRDY"
                      }
                    ],
                    "order": {
                      "amount": 5500
                    }
                  }
                },
                "1 Redeemable": {
                  "value": {
                    "customer": {
                      "source_id": "sample_customer",
                      "metadata": {
                        "key": "value"
                      }
                    },
                    "options": {
                      "expand": [
                        "order",
                        "redeemable",
                        "category"
                      ]
                    },
                    "redeemables": [
                      {
                        "object": "voucher",
                        "id": "voucher-code"
                      }
                    ],
                    "session": {
                      "type": "LOCK"
                    },
                    "order": {
                      "amount": 55000,
                      "status": "PAID",
                      "items": [
                        {
                          "quantity": 2,
                          "price": 20000,
                          "source_id": "sample product1",
                          "related_object": "product",
                          "product": {
                            "metadata": {
                              "key": "value"
                            }
                          }
                        },
                        {
                          "quantity": 1,
                          "price": 15000,
                          "source_id": "sample product2",
                          "related_object": "product",
                          "product": {
                            "metadata": {
                              "key": "value"
                            }
                          }
                        }
                      ],
                      "metadata": {
                        "key": "value"
                      }
                    }
                  }
                },
                "5 Redeemables": {
                  "value": {
                    "customer": {
                      "source_id": "36_bob"
                    },
                    "options": {
                      "expand": [
                        "order",
                        "redeemable",
                        "category"
                      ]
                    },
                    "redeemables": [
                      {
                        "object": "voucher",
                        "id": "GNcuPKGe"
                      },
                      {
                        "object": "voucher",
                        "id": "AnsvocvP",
                        "reward": {
                          "id": "rew_EPx1hCTpqzF0HW1z9NKckZH4"
                        }
                      },
                      {
                        "object": "voucher",
                        "id": "M3X8IwW8",
                        "gift": {
                          "credits": 100
                        }
                      },
                      {
                        "object": "promotion_tier",
                        "id": "promo_DE1N30D731Tg2F6NoMwNas2W"
                      },
                      {
                        "object": "promotion_tier",
                        "id": "promo_NDHgTg4VnOLYNjk9r7WOmQxf"
                      }
                    ],
                    "session": {
                      "type": "LOCK"
                    },
                    "order": {
                      "items": [
                        {
                          "sku_id": "sku_0a3efc90375d1217e2",
                          "quantity": 1
                        },
                        {
                          "product_id": "prod_0bc3bd8a4e072c5275",
                          "quantity": 1
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "2XX": {
            "description": "Depending on your project settings: all redeemables must be valid or just one must be valid to result as valid validation. Read more in the [Stacking Rule Documentation](https://support.voucherify.io/article/604-stacking-rules).",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationsValidateResponseBody"
                },
                "examples": {
                  "False": {
                    "value": {
                      "id": "valid_101740aa2869354c6d",
                      "valid": false,
                      "redeemables": [
                        {
                          "status": "INAPPLICABLE",
                          "id": "eee33463",
                          "object": "voucher",
                          "result": {
                            "error": {
                              "code": 404,
                              "key": "not_found",
                              "message": "Resource not found",
                              "details": "Cannot find voucher with id eee33463",
                              "request_id": "v-0c6c6e20dc42940f0b",
                              "resource_id": "eee33463",
                              "resource_type": "voucher"
                            }
                          }
                        },
                        {
                          "status": "SKIPPED",
                          "id": "promo_Mwy9XpA0TLctSGriM5kum0qp",
                          "object": "promotion_tier",
                          "result": {}
                        }
                      ],
                      "tracking_id": "track_VAVW6qltuo1/z+G2GI2LPw=="
                    }
                  },
                  "True - 5 Redeemables": {
                    "value": {
                      "valid": true,
                      "redeemables": [
                        {
                          "status": "APPLICABLE",
                          "id": "GNcuPKGe",
                          "object": "voucher",
                          "order": {
                            "amount": 2700,
                            "items_discount_amount": 1700,
                            "total_discount_amount": 1700,
                            "total_amount": 1000,
                            "items_applied_discount_amount": 1700,
                            "total_applied_discount_amount": 1700,
                            "items": [
                              {
                                "object": "order_item",
                                "product_id": "prod_s3C0nDpr0DuC7",
                                "sku_id": "sku_0a3efc90375d1217e2",
                                "quantity": 1,
                                "amount": 2000,
                                "discount_amount": 1000,
                                "applied_discount_amount": 1000,
                                "price": 2000,
                                "subtotal_amount": 1000,
                                "product": {
                                  "id": "prod_s3C0nDpr0DuC7",
                                  "source_id": "test_prod_id_2",
                                  "name": "Watchflix"
                                },
                                "sku": {
                                  "id": "sku_0a3efc90375d1217e2",
                                  "source_id": "test_standard_ultra_hd",
                                  "sku": "Premium",
                                  "price": 2000
                                }
                              },
                              {
                                "object": "order_item",
                                "product_id": "prod_0bc3bd8a4e072c5275",
                                "quantity": 1,
                                "amount": 700,
                                "discount_amount": 700,
                                "applied_discount_amount": 700,
                                "price": 700,
                                "subtotal_amount": 0,
                                "product": {
                                  "id": "prod_0bc3bd8a4e072c5275",
                                  "name": "Bouquet - Romantic Roses",
                                  "price": 700
                                }
                              }
                            ],
                            "metadata": {},
                            "customer_id": null,
                            "referrer_id": null,
                            "object": "order"
                          },
                          "applicable_to": {
                            "data": [
                              {
                                "object": "products_collection",
                                "id": "pc_a11pr0dUc75",
                                "effect": "APPLY_TO_EVERY"
                              },
                              {
                                "object": "sku",
                                "id": "sku_0a3efc90375d1217e2",
                                "source_id": "test_standard_ultra_hd",
                                "product_id": "prod_s3C0nDpr0DuC7",
                                "product_source_id": "test_prod_id_2",
                                "effect": "APPLY_TO_EVERY"
                              },
                              {
                                "object": "product",
                                "id": "prod_0bc3bd8a4e072c5275",
                                "source_id": "prod_0bc3bd8a4e072c5275",
                                "effect": "APPLY_TO_EVERY"
                              }
                            ],
                            "total": 3,
                            "data_ref": "data",
                            "object": "list"
                          },
                          "inapplicable_to": {
                            "data": [],
                            "total": 0,
                            "data_ref": "data",
                            "object": "list"
                          },
                          "result": {
                            "discount": {
                              "type": "AMOUNT",
                              "effect": "APPLY_TO_ITEMS",
                              "amount_off": 1000,
                              "is_dynamic": false
                            }
                          },
                          "metadata": {},
                          "categories": []
                        },
                        {
                          "status": "APPLICABLE",
                          "id": "AnsvocvP",
                          "object": "voucher",
                          "order": {
                            "amount": 2700,
                            "items_discount_amount": 1700,
                            "total_discount_amount": 1700,
                            "total_amount": 1000,
                            "items": [
                              {
                                "object": "order_item",
                                "product_id": "prod_s3C0nDpr0DuC7",
                                "sku_id": "sku_0a3efc90375d1217e2",
                                "quantity": 1,
                                "amount": 2000,
                                "discount_amount": 1000,
                                "price": 2000,
                                "subtotal_amount": 1000,
                                "product": {
                                  "id": "prod_s3C0nDpr0DuC7",
                                  "source_id": "test_prod_id_2",
                                  "name": "Watchflix"
                                },
                                "sku": {
                                  "id": "sku_0a3efc90375d1217e2",
                                  "source_id": "test_standard_ultra_hd",
                                  "sku": "Premium",
                                  "price": 2000
                                }
                              },
                              {
                                "object": "order_item",
                                "product_id": "prod_0bc3bd8a4e072c5275",
                                "quantity": 1,
                                "amount": 700,
                                "discount_amount": 700,
                                "price": 700,
                                "subtotal_amount": 0,
                                "product": {
                                  "id": "prod_0bc3bd8a4e072c5275",
                                  "name": "Bouquet - Romantic Roses",
                                  "price": 700
                                }
                              }
                            ],
                            "metadata": {},
                            "customer_id": null,
                            "referrer_id": null,
                            "object": "order"
                          },
                          "applicable_to": {
                            "data": [],
                            "total": 0,
                            "data_ref": "data",
                            "object": "list"
                          },
                          "inapplicable_to": {
                            "data": [],
                            "total": 0,
                            "data_ref": "data",
                            "object": "list"
                          },
                          "result": {
                            "loyalty_card": {
                              "points": 4
                            }
                          },
                          "metadata": {},
                          "categories": [
                            {
                              "id": "cat_0bb81a481615a37b5e",
                              "name": "Second",
                              "hierarchy": 2,
                              "created_at": "2022-09-20T05:58:01.561Z",
                              "object": "category"
                            }
                          ]
                        },
                        {
                          "status": "APPLICABLE",
                          "id": "M3X8IwW8",
                          "object": "voucher",
                          "order": {
                            "amount": 2700,
                            "discount_amount": 100,
                            "items_discount_amount": 1700,
                            "total_discount_amount": 1800,
                            "total_amount": 900,
                            "applied_discount_amount": 100,
                            "total_applied_discount_amount": 100,
                            "items": [
                              {
                                "object": "order_item",
                                "product_id": "prod_s3C0nDpr0DuC7",
                                "sku_id": "sku_0a3efc90375d1217e2",
                                "quantity": 1,
                                "amount": 2000,
                                "discount_amount": 1000,
                                "price": 2000,
                                "subtotal_amount": 1000,
                                "product": {
                                  "id": "prod_s3C0nDpr0DuC7",
                                  "source_id": "test_prod_id_2",
                                  "name": "Watchflix"
                                },
                                "sku": {
                                  "id": "sku_0a3efc90375d1217e2",
                                  "source_id": "test_standard_ultra_hd",
                                  "sku": "Premium",
                                  "price": 2000
                                }
                              },
                              {
                                "object": "order_item",
                                "product_id": "prod_0bc3bd8a4e072c5275",
                                "quantity": 1,
                                "amount": 700,
                                "discount_amount": 700,
                                "price": 700,
                                "subtotal_amount": 0,
                                "product": {
                                  "id": "prod_0bc3bd8a4e072c5275",
                                  "name": "Bouquet - Romantic Roses",
                                  "price": 700
                                }
                              }
                            ],
                            "metadata": {},
                            "customer_id": null,
                            "referrer_id": null,
                            "object": "order"
                          },
                          "applicable_to": {
                            "data": [],
                            "total": 0,
                            "data_ref": "data",
                            "object": "list"
                          },
                          "inapplicable_to": {
                            "data": [],
                            "total": 0,
                            "data_ref": "data",
                            "object": "list"
                          },
                          "result": {
                            "gift": {
                              "credits": 100
                            }
                          },
                          "metadata": {},
                          "categories": []
                        },
                        {
                          "status": "APPLICABLE",
                          "id": "promo_DE1N30D731Tg2F6NoMwNas2W",
                          "object": "promotion_tier",
                          "order": {
                            "amount": 2700,
                            "discount_amount": 460,
                            "items_discount_amount": 1700,
                            "total_discount_amount": 2160,
                            "total_amount": 540,
                            "applied_discount_amount": 360,
                            "total_applied_discount_amount": 360,
                            "items": [
                              {
                                "object": "order_item",
                                "product_id": "prod_s3C0nDpr0DuC7",
                                "sku_id": "sku_0a3efc90375d1217e2",
                                "quantity": 1,
                                "amount": 2000,
                                "discount_amount": 1000,
                                "price": 2000,
                                "subtotal_amount": 1000,
                                "product": {
                                  "id": "prod_s3C0nDpr0DuC7",
                                  "source_id": "test_prod_id_2",
                                  "name": "Watchflix"
                                },
                                "sku": {
                                  "id": "sku_0a3efc90375d1217e2",
                                  "source_id": "test_standard_ultra_hd",
                                  "sku": "Premium",
                                  "price": 2000
                                }
                              },
                              {
                                "object": "order_item",
                                "product_id": "prod_0bc3bd8a4e072c5275",
                                "quantity": 1,
                                "amount": 700,
                                "discount_amount": 700,
                                "price": 700,
                                "subtotal_amount": 0,
                                "product": {
                                  "id": "prod_0bc3bd8a4e072c5275",
                                  "name": "Bouquet - Romantic Roses",
                                  "price": 700
                                }
                              }
                            ],
                            "metadata": {},
                            "customer_id": null,
                            "referrer_id": null,
                            "object": "order"
                          },
                          "applicable_to": {
                            "data": [
                              {
                                "object": "sku",
                                "id": "sku_0a3efc90375d1217e2",
                                "source_id": "test_standard_ultra_hd",
                                "product_id": "prod_s3C0nDpr0DuC7",
                                "product_source_id": "test_prod_id_2",
                                "effect": "APPLY_TO_EVERY"
                              },
                              {
                                "object": "product",
                                "id": "prod_0bc3bd8a4e072c5275",
                                "source_id": "prod_0bc3bd8a4e072c5275",
                                "effect": "APPLY_TO_EVERY"
                              }
                            ],
                            "total": 2,
                            "data_ref": "data",
                            "object": "list"
                          },
                          "inapplicable_to": {
                            "data": [
                              {
                                "object": "product",
                                "id": "prod_0b2c2ddf35150b83bb",
                                "source_id": "97",
                                "effect": "APPLY_TO_EVERY"
                              }
                            ],
                            "total": 1,
                            "data_ref": "data",
                            "object": "list"
                          },
                          "result": {
                            "discount": {
                              "type": "PERCENT",
                              "effect": "APPLY_TO_ORDER",
                              "percent_off": 40,
                              "is_dynamic": false
                            }
                          },
                          "metadata": {}
                        },
                        {
                          "status": "APPLICABLE",
                          "id": "promo_NDHgTg4VnOLYNjk9r7WOmQxf",
                          "object": "promotion_tier",
                          "order": {
                            "amount": 2700,
                            "discount_amount": 490,
                            "items_discount_amount": 1700,
                            "total_discount_amount": 2190,
                            "total_amount": 510,
                            "applied_discount_amount": 30,
                            "total_applied_discount_amount": 30,
                            "items": [
                              {
                                "object": "order_item",
                                "product_id": "prod_s3C0nDpr0DuC7",
                                "sku_id": "sku_0a3efc90375d1217e2",
                                "quantity": 1,
                                "amount": 2000,
                                "discount_amount": 1000,
                                "price": 2000,
                                "subtotal_amount": 1000,
                                "product": {
                                  "id": "prod_s3C0nDpr0DuC7",
                                  "source_id": "test_prod_id_2",
                                  "name": "Watchflix"
                                },
                                "sku": {
                                  "id": "sku_0a3efc90375d1217e2",
                                  "source_id": "test_standard_ultra_hd",
                                  "sku": "Premium",
                                  "price": 2000
                                }
                              },
                              {
                                "object": "order_item",
                                "product_id": "prod_0bc3bd8a4e072c5275",
                                "quantity": 1,
                                "amount": 700,
                                "discount_amount": 700,
                                "price": 700,
                                "subtotal_amount": 0,
                                "product": {
                                  "id": "prod_0bc3bd8a4e072c5275",
                                  "name": "Bouquet - Romantic Roses",
                                  "price": 700
                                }
                              }
                            ],
                            "metadata": {},
                            "customer_id": null,
                            "referrer_id": null,
                            "object": "order"
                          },
                          "applicable_to": {
                            "data": [
                              {
                                "object": "sku",
                                "id": "sku_0a3efc90375d1217e2",
                                "source_id": "test_standard_ultra_hd",
                                "product_id": "prod_s3C0nDpr0DuC7",
                                "product_source_id": "test_prod_id_2",
                                "effect": "APPLY_TO_EVERY"
                              },
                              {
                                "object": "product",
                                "id": "prod_0bc3bd8a4e072c5275",
                                "source_id": "prod_0bc3bd8a4e072c5275",
                                "effect": "APPLY_TO_EVERY"
                              }
                            ],
                            "total": 2,
                            "data_ref": "data",
                            "object": "list"
                          },
                          "inapplicable_to": {
                            "data": [
                              {
                                "object": "product",
                                "id": "prod_0b2c2ddf35150b83bb",
                                "source_id": "97",
                                "effect": "APPLY_TO_EVERY"
                              }
                            ],
                            "total": 1,
                            "data_ref": "data",
                            "object": "list"
                          },
                          "result": {
                            "discount": {
                              "type": "AMOUNT",
                              "effect": "APPLY_TO_ORDER",
                              "amount_off": 30,
                              "is_dynamic": false
                            }
                          },
                          "metadata": {}
                        }
                      ],
                      "order": {
                        "amount": 2700,
                        "discount_amount": 490,
                        "items_discount_amount": 1700,
                        "total_discount_amount": 2190,
                        "total_amount": 510,
                        "applied_discount_amount": 490,
                        "items_applied_discount_amount": 1700,
                        "total_applied_discount_amount": 2190,
                        "items": [
                          {
                            "object": "order_item",
                            "product_id": "prod_s3C0nDpr0DuC7",
                            "sku_id": "sku_0a3efc90375d1217e2",
                            "quantity": 1,
                            "amount": 2000,
                            "discount_amount": 1000,
                            "applied_discount_amount": 1000,
                            "price": 2000,
                            "subtotal_amount": 1000,
                            "product": {
                              "id": "prod_s3C0nDpr0DuC7",
                              "source_id": "test_prod_id_2",
                              "name": "Watchflix"
                            },
                            "sku": {
                              "id": "sku_0a3efc90375d1217e2",
                              "source_id": "test_standard_ultra_hd",
                              "sku": "Premium",
                              "price": 2000
                            }
                          },
                          {
                            "object": "order_item",
                            "product_id": "prod_0bc3bd8a4e072c5275",
                            "quantity": 1,
                            "amount": 700,
                            "discount_amount": 700,
                            "applied_discount_amount": 700,
                            "price": 700,
                            "subtotal_amount": 0,
                            "product": {
                              "id": "prod_0bc3bd8a4e072c5275",
                              "name": "Bouquet - Romantic Roses",
                              "price": 700
                            }
                          }
                        ],
                        "metadata": {},
                        "customer_id": null,
                        "referrer_id": null,
                        "object": "order"
                      },
                      "tracking_id": "track_9B0kB92+bJa8a+PegaWREw==",
                      "session": {
                        "key": "ssn_pkJfPcWAgp9WyHpA62Eky8X8SzxpKub2",
                        "type": "LOCK",
                        "ttl": 7,
                        "ttl_unit": "DAYS"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/redemptions": {
      "get": {
        "operationId": "list-redemptions",
        "tags": [
          "Redemptions"
        ],
        "summary": "List Redemptions",
        "description": "Returns a list of redemptions previously created. The redemptions are returned in a sorted order, with the most recent redemptions appearing first. The response returns a list of redemptions of all vouchers. \n# Filtering results\nThe result can be narrowed according to specified (or default) filters, for example, you can sort redemptions by date:\nhttps://api.voucherify.io/v1/redemptions?limit 3&[created_at][before] 2017-09-08T13:52:18.227Z. A filter based on the object created_at field narrows down the results and lists redemptions done before or after a particular date time. You can use the following options: [created_at][after], [created_at][before]. A date value must be presented in ISO 8601 format (2016-11-16T14:14:31Z or 2016-11-16). An example: [created_at][before] 2017-09-08T13:52:18.227Z.\n# Failed Redemptions\nA redemption may fail for various reasons. You can figure out an exact reason from the failure_code:\n- resource_not_found - voucher with given code does not exist\n- voucher_not_active - voucher is not active yet (before start date)\n- voucher_expired - voucher has already expired (after expiration date)\n- voucher_disabled -  voucher has been disabled (active: false)\n- quantity_exceeded - vouchers redemptions limit has been exceeded\n- gift_amount_exceeded - gift amount has been exceeded\n- customer_rules_violated - customer did not match the segment\n- order_rules_violated - order did not match validation rules\n- invalid_order - order was specified incorrectly\n- invalid_amount - order amount was specified incorrectly\n- missing_amount - order amount was not specified\n- missing_order_items - order items were not specified\n- missing_customer - customer was not specified",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterString"
            },
            "in": "query",
            "name": "result",
            "description": "A filter on the list based on the redemption result. Available options are: SUCCESS, FAILURE. You can provide multiple values by repeating the param."
          },
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterString"
            },
            "in": "query",
            "name": "campaign",
            "description": "A filter by the campaign **name** that the redemption resources originate from."
          },
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterCustomerId"
            },
            "in": "query",
            "name": "customer",
            "description": "Return redemptions performed by the customer with given id or source_id."
          },
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterOrderListRedemptions"
            },
            "in": "query",
            "name": "order",
            "description": "Sorts the results using one of the filtering options, where the dash - preceding a sorting option means sorting in a descending order."
          },
          {
            "$ref": "#/components/parameters/created_at"
          },
          {
            "name": "filters",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ParameterFiltersListRedemptions"
            },
            "description": "Filters for listing responses.",
            "style": "deepObject",
            "explode": true
          }
        ],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns a list of redemption objects. Each entry in the array is a separate redemption object. If no more redemptions are available, the resulting array will be empty. If you provide a non-existent customer ID, this call returns an empty object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RedemptionsListResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "object": "list",
                      "data_ref": "redemptions",
                      "redemptions": [
                        {
                          "id": "r_0c0469eaf705889d99",
                          "object": "redemption",
                          "date": "2022-11-18T12:30:32.622Z",
                          "customer_id": "cust_qBwHpagDOFu71Z3F22UzR80X",
                          "tracking_id": "track_5DQxXbK0C0pvAaHk7mnulhyMBo7VratI",
                          "metadata": {
                            "store_names": "Store 2 - Florida - Miami"
                          },
                          "result": "SUCCESS",
                          "order": {
                            "id": "ord_ndw5rQJt12zvZ4upF72a3ljh",
                            "source_id": null,
                            "created_at": "2022-11-18T12:30:31.338Z",
                            "updated_at": null,
                            "status": "PAID",
                            "amount": 9680000,
                            "items_discount_amount": 9450000,
                            "total_discount_amount": 9450000,
                            "total_amount": 230000,
                            "items_applied_discount_amount": 9450000,
                            "total_applied_discount_amount": 9450000,
                            "items": [
                              {
                                "object": "order_item",
                                "product_id": "prod_0bae45ffc7003ffc52",
                                "quantity": 1,
                                "amount": 230000,
                                "price": 230000,
                                "subtotal_amount": 230000,
                                "product": {
                                  "id": "prod_0bae45ffc7003ffc52",
                                  "source_id": "second_product",
                                  "name": "Samsung Phone 2",
                                  "price": 230000
                                }
                              },
                              {
                                "object": "order_item",
                                "product_id": "prod_0bae2dc5a090fd0184",
                                "sku_id": "sku_0bae3b28f610fd0da1",
                                "quantity": 45,
                                "discount_quantity": 45,
                                "initial_quantity": 0,
                                "amount": 9450000,
                                "discount_amount": 9450000,
                                "initial_amount": 0,
                                "applied_discount_amount": 9450000,
                                "price": 210000,
                                "subtotal_amount": 0,
                                "product": {
                                  "id": "prod_0bae2dc5a090fd0184",
                                  "source_id": "first_product",
                                  "name": "Samsung Phone 1",
                                  "price": 220000
                                },
                                "sku": {
                                  "id": "sku_0bae3b28f610fd0da1",
                                  "source_id": "first_product_sku_1",
                                  "sku": "Samsung phone 256GB",
                                  "price": 210000
                                }
                              }
                            ],
                            "metadata": {},
                            "customer": {
                              "id": "cust_qBwHpagDOFu71Z3F22UzR80X",
                              "object": "customer"
                            },
                            "customer_id": "cust_qBwHpagDOFu71Z3F22UzR80X",
                            "referrer_id": null,
                            "object": "order",
                            "redemptions": {
                              "r_0c0469eaf705889d99": {
                                "date": "2022-11-18T12:30:31.388Z",
                                "related_object_type": "promotion_tier",
                                "related_object_id": "promo_ZWkx6R0I1Ts3N9HL4kfTdxOm",
                                "related_object_parent_id": "camp_40LC42P5NFbkkD4RWoJ4btks"
                              }
                            }
                          },
                          "channel": {
                            "channel_id": "user_g24UoRO3Caxu7FCT4n5tpYEa3zUG0FrH",
                            "channel_type": "USER"
                          },
                          "customer": {
                            "id": "cust_qBwHpagDOFu71Z3F22UzR80X",
                            "name": "Bob Jones",
                            "email": "bob.smith@email.com",
                            "source_id": "pub_source_customer_5_a",
                            "metadata": {
                              "lang": "en",
                              "test": true
                            },
                            "object": "customer"
                          },
                          "related_object_type": "promotion_tier",
                          "related_object_id": "promo_ZWkx6R0I1Ts3N9HL4kfTdxOm",
                          "voucher": null,
                          "promotion_tier": {
                            "id": "promo_ZWkx6R0I1Ts3N9HL4kfTdxOm",
                            "campaign": {
                              "id": "camp_40LC42P5NFbkkD4RWoJ4btks"
                            }
                          }
                        },
                        {
                          "id": "r_0bf9cf0a8b12dc5ba6",
                          "object": "redemption",
                          "date": "2022-11-10T06:49:03.835Z",
                          "customer_id": "cust_tAED42tFhLM9v7GmZUaklJFd",
                          "tracking_id": "track_fxEMFisanb4sbl4Z4yCnJyDW013IrRbJmqKByTNHbXE=",
                          "metadata": {},
                          "amount": 200,
                          "result": "SUCCESS",
                          "order": {
                            "id": "ord_jAifScsbOqxgb12hLu7hXrLU",
                            "source_id": null,
                            "created_at": "2022-11-10T06:49:02.703Z",
                            "updated_at": null,
                            "status": "PAID",
                            "amount": 4500,
                            "discount_amount": 4000,
                            "total_discount_amount": 4000,
                            "total_amount": 500,
                            "applied_discount_amount": 4000,
                            "total_applied_discount_amount": 4000,
                            "items": [
                              {
                                "object": "order_item",
                                "product_id": "prod_0b72b0bd64d198e3ae",
                                "quantity": 3,
                                "amount": 4500,
                                "price": 1500,
                                "subtotal_amount": 4500,
                                "product": {
                                  "id": "prod_0b72b0bd64d198e3ae",
                                  "source_id": "vase_1",
                                  "name": "Vase - Boho Vintage",
                                  "price": 1500
                                }
                              }
                            ],
                            "metadata": {},
                            "customer": {
                              "id": "cust_tAED42tFhLM9v7GmZUaklJFd",
                              "object": "customer"
                            },
                            "customer_id": "cust_tAED42tFhLM9v7GmZUaklJFd",
                            "referrer_id": null,
                            "object": "order",
                            "redemptions": {
                              "r_0bf9cf0a8b12dc5ba6": {
                                "date": "2022-11-10T06:49:02.764Z",
                                "related_object_type": "voucher",
                                "related_object_id": "v_Xak3ViMbxCH8Lb4ZG0lWwC0goMRBXWB4",
                                "related_object_parent_id": "camp_fkZ28pe7DUAEmmabofkxHI8N"
                              }
                            }
                          },
                          "channel": {
                            "channel_id": "user_g24UoRO3Caxu7FCT4n5tpYEa3zUG0FrH",
                            "channel_type": "USER"
                          },
                          "customer": {
                            "id": "cust_tAED42tFhLM9v7GmZUaklJFd",
                            "name": "Bobby McDonald",
                            "email": "bobby.mcdonald@email.com",
                            "source_id": "bobby.mcdonald@email.com",
                            "metadata": {
                              "acquisition_channel": "Facebook",
                              "customer_life_time_value": 100
                            },
                            "object": "customer"
                          },
                          "related_object_type": "voucher",
                          "related_object_id": "v_Xak3ViMbxCH8Lb4ZG0lWwC0goMRBXWB4",
                          "voucher": {
                            "id": "v_Xak3ViMbxCH8Lb4ZG0lWwC0goMRBXWB4",
                            "code": "LT1-wMPnRhxb",
                            "campaign": "Loyalty Campaign - Tiers - 1",
                            "campaign_id": "camp_fkZ28pe7DUAEmmabofkxHI8N"
                          },
                          "reward": {
                            "customer": {
                              "id": "cust_tAED42tFhLM9v7GmZUaklJFd",
                              "name": "Bobby McDonald",
                              "email": "bobby.mcdonald@email.com",
                              "source_id": "bobby.mcdonald@email.com",
                              "metadata": {
                                "acquisition_channel": "Facebook",
                                "customer_life_time_value": 100
                              },
                              "object": "customer"
                            },
                            "assignment_id": "rewa_nMXB59qGTNYawMT8eP8M4oUp",
                            "id": "rew_MVXA2kV7lZ1zC057WUaTrvNz",
                            "object": "reward",
                            "name": "100 Points = $20",
                            "created_at": "2022-09-09T06:41:54.496Z",
                            "updated_at": null,
                            "parameters": {
                              "coin": {
                                "exchange_ratio": 20,
                                "points_ratio": 100
                              }
                            },
                            "type": "COIN"
                          },
                          "loyalty_card": {
                            "points": 200
                          }
                        },
                        {
                          "id": "rf_0bf9caf744d2dc593a",
                          "object": "redemption",
                          "date": "2022-11-10T06:31:15.477Z",
                          "customer_id": "cust_tAED42tFhLM9v7GmZUaklJFd",
                          "tracking_id": "track_fxEMFisanb4sbl4Z4yCnJyDW013IrRbJmqKByTNHbXE=",
                          "metadata": {},
                          "result": "FAILURE",
                          "failure_code": "loyalty_card_points_exceeded",
                          "failure_message": "loyalty card points exceeded",
                          "order": null,
                          "channel": {
                            "channel_id": "user_g24UoRO3Caxu7FCT4n5tpYEa3zUG0FrH",
                            "channel_type": "USER"
                          },
                          "customer": {
                            "id": "cust_tAED42tFhLM9v7GmZUaklJFd",
                            "name": "Bobby McDonald",
                            "email": "bobby.mcdonald@email.com",
                            "source_id": "bobby.mcdonald@email.com",
                            "metadata": {
                              "acquisition_channel": "Facebook",
                              "customer_life_time_value": 100
                            },
                            "object": "customer"
                          },
                          "related_object_type": "voucher",
                          "related_object_id": "v_Xak3ViMbxCH8Lb4ZG0lWwC0goMRBXWB4",
                          "voucher": {
                            "id": "v_Xak3ViMbxCH8Lb4ZG0lWwC0goMRBXWB4",
                            "code": "LT1-wMPnRhxb",
                            "campaign": "Loyalty Campaign - Tiers - 1",
                            "campaign_id": "camp_fkZ28pe7DUAEmmabofkxHI8N"
                          }
                        },
                        {
                          "id": "rf_0bf8c023eb4d4aa4ad",
                          "object": "redemption",
                          "date": "2022-11-09T11:05:28.074Z",
                          "customer_id": "cust_tAED42tFhLM9v7GmZUaklJFd",
                          "tracking_id": "track_fxEMFisanb4sbl4Z4yCnJyDW013IrRbJmqKByTNHbXE=",
                          "metadata": {},
                          "result": "FAILURE",
                          "failure_code": "customer_rules_violated",
                          "failure_message": "customer does not match validation rules",
                          "order": null,
                          "channel": {
                            "channel_id": "user_g24UoRO3Caxu7FCT4n5tpYEa3zUG0FrH",
                            "channel_type": "USER"
                          },
                          "customer": {
                            "id": "cust_tAED42tFhLM9v7GmZUaklJFd",
                            "name": "Bob Smith",
                            "email": "bob.smith@email.com",
                            "source_id": "bob.smith@email.com",
                            "metadata": {
                              "acquisition_channel": "Facebook"
                            },
                            "object": "customer"
                          },
                          "related_object_type": "voucher",
                          "related_object_id": "v_FGQjOjqasEbbdpnySdCpUoalJio3OHWK",
                          "voucher": {
                            "id": "v_FGQjOjqasEbbdpnySdCpUoalJio3OHWK",
                            "code": "3rqWOTAh",
                            "campaign_id": null
                          }
                        },
                        {
                          "id": "r_0ba9fa02fcd28ed8f1",
                          "object": "redemption",
                          "date": "2022-09-09T06:38:20.085Z",
                          "customer_id": "cust_tAED42tFhLM9v7GmZUaklJFd",
                          "tracking_id": "track_fxEMFisanb4sbl4Z4yCnJyDW013IrRbJmqKByTNHbXE=",
                          "metadata": {},
                          "amount": 300,
                          "result": "SUCCESS",
                          "order": {
                            "id": "ord_G9LBb5SOPa36pHdwxUvzkw4P",
                            "source_id": null,
                            "created_at": "2022-09-09T06:38:17.984Z",
                            "updated_at": null,
                            "status": "PAID",
                            "amount": 4600,
                            "items_discount_amount": 300,
                            "total_discount_amount": 300,
                            "total_amount": 4300,
                            "items_applied_discount_amount": 300,
                            "total_applied_discount_amount": 300,
                            "items": [
                              {
                                "object": "order_item",
                                "product_id": "prod_0b7d7dfb05cbe5c616",
                                "sku_id": "sku_0b7d7dfb090be5c619",
                                "quantity": 1,
                                "amount": 1600,
                                "price": 1600,
                                "subtotal_amount": 1600,
                                "product": {
                                  "id": "prod_0b7d7dfb05cbe5c616",
                                  "source_id": "Books",
                                  "name": "Comic Books1",
                                  "price": 1600
                                },
                                "sku": {
                                  "id": "sku_0b7d7dfb090be5c619",
                                  "source_id": "ComicBook_1",
                                  "sku": "Comics1",
                                  "price": 1600
                                }
                              },
                              {
                                "object": "order_item",
                                "product_id": "prod_0a65b3ff8592d7a5b5",
                                "quantity": 1,
                                "amount": 3000,
                                "discount_amount": 300,
                                "applied_discount_amount": 300,
                                "price": 3000,
                                "subtotal_amount": 2700,
                                "product": {
                                  "id": "prod_0a65b3ff8592d7a5b5",
                                  "name": "Koffee Cup",
                                  "price": 3000
                                }
                              }
                            ],
                            "metadata": {},
                            "customer": {
                              "id": "cust_tAED42tFhLM9v7GmZUaklJFd",
                              "object": "customer"
                            },
                            "customer_id": "cust_tAED42tFhLM9v7GmZUaklJFd",
                            "referrer_id": null,
                            "object": "order",
                            "redemptions": {
                              "r_0ba9fa02fcd28ed8f1": {
                                "date": "2022-09-09T06:38:18.099Z",
                                "related_object_type": "voucher",
                                "related_object_id": "v_KqP2NOSb4dJb1D6UBhcq7ScPZXun0y40",
                                "related_object_parent_id": "camp_hC2GdqYtOmTT45zfhib62cK1"
                              }
                            }
                          },
                          "channel": {
                            "channel_id": "user_g24UoRO3Caxu7FCT4n5tpYEa3zUG0FrH",
                            "channel_type": "USER"
                          },
                          "customer": {
                            "id": "cust_tAED42tFhLM9v7GmZUaklJFd",
                            "name": "Bob Smith",
                            "email": "bob.smith@email.com",
                            "source_id": "bob.smith@email.com",
                            "metadata": {},
                            "object": "customer"
                          },
                          "related_object_type": "voucher",
                          "related_object_id": "v_KqP2NOSb4dJb1D6UBhcq7ScPZXun0y40",
                          "voucher": {
                            "id": "v_KqP2NOSb4dJb1D6UBhcq7ScPZXun0y40",
                            "code": "vTcguVLE",
                            "campaign": "SL-Gift",
                            "campaign_id": "camp_hC2GdqYtOmTT45zfhib62cK1"
                          },
                          "gift": {
                            "amount": 300
                          }
                        },
                        {
                          "id": "rf_0bf8bfe0808d4aa473",
                          "object": "redemption",
                          "date": "2022-11-09T11:04:19.062Z",
                          "customer_id": null,
                          "tracking_id": null,
                          "metadata": {},
                          "result": "FAILURE",
                          "failure_code": "missing_customer",
                          "failure_message": "Missing customer",
                          "order": null,
                          "channel": {
                            "channel_id": "user_g24UoRO3Caxu7FCT4n5tpYEa3zUG0FrH",
                            "channel_type": "USER"
                          },
                          "customer": null,
                          "related_object_type": "voucher",
                          "related_object_id": "v_FGQjOjqasEbbdpnySdCpUoalJio3OHWK",
                          "voucher": {
                            "id": "v_FGQjOjqasEbbdpnySdCpUoalJio3OHWK",
                            "code": "3rqWOTAh",
                            "campaign_id": null
                          }
                        }
                      ],
                      "total": 6
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "redeem-stacked-discounts",
        "tags": [
          "Redemptions"
        ],
        "summary": "Redeem Stackable Discounts",
        "description": "# How API returns calculated discounts and order amounts in the response\nIn the table below, you can see the logic the API follows to calculate discounts and amounts:\n\n\n 📘 Rollbacks\n You cant roll back a child redemption. When you call rollback on a stacked redemption, all child redemptions will be rolled back. You need to refer to a parent redemption ID in your rollback request.    \n 📘 Also available on client-side\n This method is also accessible through public keys which you can use in client-side​ apps: mobile and web browser apps. Go to the dedicated endpoint to learn more.\n - Use X-Client-Application-Id as the application ID header.\n - Use X-Client-Token as the appliction secret key header.\n - Use client-side base URL.\n - Use an origin header for your custom domain.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RedemptionsRedeemRequestBody"
              },
              "examples": {
                "Sandbox onboarding redemption": {
                  "value": {
                    "redeemables": [
                      {
                        "object": "voucher",
                        "id": "BLCKFRDY"
                      }
                    ],
                    "order": {
                      "amount": 5500
                    }
                  }
                },
                "General example": {
                  "value": {
                    "customer": {
                      "source_id": "sample_customer",
                      "metadata": {
                        "key": "value"
                      }
                    },
                    "options": {
                      "expand": [
                        "order",
                        "redeemable",
                        "category"
                      ]
                    },
                    "redeemables": [
                      {
                        "object": "voucher",
                        "id": "voucher-code"
                      }
                    ],
                    "session": {
                      "type": "LOCK",
                      "key": "session_key"
                    },
                    "order": {
                      "amount": 55000,
                      "status": "PAID",
                      "items": [
                        {
                          "quantity": 2,
                          "price": 20000,
                          "source_id": "sample product1",
                          "related_object": "product",
                          "product": {
                            "metadata": {
                              "key": "value"
                            }
                          }
                        },
                        {
                          "quantity": 1,
                          "price": 15000,
                          "source_id": "sample product2",
                          "related_object": "product",
                          "product": {
                            "metadata": {
                              "key": "value"
                            }
                          }
                        }
                      ],
                      "metadata": {
                        "key": "value"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "2XX": {
            "description": "Depending on your project settings: all redeemables must be valid or just one must be valid to result as valid redemption. Read more in the [Stacking Rule Documentation](https://support.voucherify.io/article/604-stacking-rules).",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RedemptionsRedeemResponseBody"
                }
              }
            }
          }
        }
      }
    },
    "/v1/vouchers": {
      "get": {
        "operationId": "list-vouchers",
        "tags": [
          "Vouchers"
        ],
        "summary": "List Vouchers",
        "description": "Returns a list of vouchers. By default, the vouchers are returned sorted by creation date, with the most recent vouchers appearing first. A maximum of 100 vouchers are returned in the response.\nWhen you get a list of vouchers, you can optionally specify query parameters to customize the number of vouchers returned per call using limit, which page of vouchers to return using page, sort the vouchers using the order query parameter and more.\nThis method will return an error when trying to return a limit of more than 100 vouchers.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/category"
          },
          {
            "in": "query",
            "name": "campaign_id",
            "description": "Limit search results to vouchers within the specified campaign",
            "schema": {
              "$ref": "#/components/schemas/ParameterCampaignId"
            }
          },
          {
            "$ref": "#/components/parameters/customer"
          },
          {
            "$ref": "#/components/parameters/campaign"
          },
          {
            "$ref": "#/components/parameters/created_at"
          },
          {
            "$ref": "#/components/parameters/updated_at"
          },
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterOrderVouchers"
            },
            "in": "query",
            "name": "order",
            "description": "Sorts the results using one of the filtering options, where the dash - preceding a sorting option means sorting in a descending order."
          },
          {
            "name": "code",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/ParameterCode"
            }
          },
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns a dictionary that contains an array of vouchers. Each entry in the array is a separate voucher object. If no more vouchers are available (query parameter `page` incremented over and above the voucher count), the resulting array will be empty. The result can be narrowed down according to specified (or default) filters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VouchersListResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "object": "list",
                      "data_ref": "vouchers",
                      "vouchers": [
                        {
                          "id": "v_hrMBBeT4sOP9VSGPmj5KAgJwX202UjiY",
                          "code": "LOYALTY-CARD-xLPbpbXR",
                          "campaign": "Loyalty Program Fall 2022",
                          "campaign_id": "camp_f7fBbQxUuTN7dI7tGOo5XMDA",
                          "category": "First",
                          "category_id": "cat_0bb343dee3cdb5ec0c",
                          "categories": [
                            {
                              "id": "cat_0bb343dee3cdb5ec0c",
                              "name": "First",
                              "hierarchy": 1,
                              "created_at": "2022-09-16T11:47:19.568Z",
                              "object": "category"
                            }
                          ],
                          "type": "LOYALTY_CARD",
                          "discount": null,
                          "gift": null,
                          "loyalty_card": {
                            "points": 110,
                            "balance": 100,
                            "next_expiration_date": "2023-12-31",
                            "next_expiration_points": 100
                          },
                          "start_date": null,
                          "expiration_date": null,
                          "validity_timeframe": null,
                          "validity_day_of_week": null,
                          "active": true,
                          "additional_info": null,
                          "metadata": {},
                          "assets": {
                            "qr": {
                              "id": "U2FsdGVkX19OrTPNyUztbNretF7tPRL4ZlUDPAUXVGL9e5UCPh6dic8zXEP8/6I6hUEqtz/F6IMIghWz1ljdjzpdizGHG3HZBw4c19fd8SD/DjhBRDSr8APqKGpZTLKe4QC2gislFTeDAq2lmJb6T1oOTBUGkUEwMgEX1Vlco9A=",
                              "url": "{{internalVoucherifyURL}}"
                            },
                            "barcode": {
                              "id": "U2FsdGVkX1/SpYuOrU9wd6/o1wzy6E/04wURHJ1xuMutzkIUx6OBTmHX5BO8XZRmEFHkgjC5eWJ27ArgAruJfwRXWuQfTNFD4raI9YvIiQNEzsZ0ydxwKBqJ/FJtiw69djuzQk1f4HdQo8s5gaZ7fd2U+1zbaeAvi9usyvRHZE4=",
                              "url": "{{internalVoucherifyURL}}"
                            }
                          },
                          "is_referral_code": false,
                          "created_at": "2022-09-19T07:56:22.355Z",
                          "updated_at": "2022-09-19T08:04:22.458Z",
                          "holder_id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                          "redemption": {
                            "quantity": null,
                            "redeemed_quantity": 1,
                            "redeemed_points": 10,
                            "object": "list",
                            "url": "/v1/vouchers/LOYALTY-CARD-xLPbpbXR/redemptions?page=1&limit=10"
                          },
                          "publish": {
                            "object": "list",
                            "count": 1,
                            "url": "/v1/vouchers/LOYALTY-CARD-xLPbpbXR/publications?page=1&limit=10"
                          },
                          "object": "voucher"
                        },
                        {
                          "id": "v_OBVfpTVf24DBz0HZmKVZa5UEl1DUg2bn",
                          "code": "AmountDiscount",
                          "campaign": null,
                          "campaign_id": null,
                          "category": "First",
                          "category_id": "cat_0bb343dee3cdb5ec0c",
                          "categories": [
                            {
                              "id": "cat_0bb343dee3cdb5ec0c",
                              "name": "First",
                              "hierarchy": 1,
                              "created_at": "2022-09-16T11:47:19.568Z",
                              "object": "category"
                            }
                          ],
                          "type": "DISCOUNT_VOUCHER",
                          "discount": {
                            "type": "AMOUNT",
                            "amount_off": 400,
                            "amount_off_formula": "IF(CUSTOMER_METADATA(\"favorite_brands\") contains \"Nike\";20;CUSTOMER_METADATA(\"age\"))",
                            "effect": "APPLY_TO_ORDER"
                          },
                          "gift": null,
                          "loyalty_card": null,
                          "start_date": "2022-09-01T00:00:00.000Z",
                          "expiration_date": "2022-10-31T00:00:00.000Z",
                          "validity_timeframe": null,
                          "validity_day_of_week": [
                            1,
                            2,
                            3,
                            4,
                            5
                          ],
                          "active": true,
                          "additional_info": "This voucher discount is based on a formula, payment must be using VISA, and order must be over $100.",
                          "metadata": {},
                          "assets": {
                            "qr": {
                              "id": "U2FsdGVkX18tV6jdzxWPwEzjeiX4DoM06JpwaoKUNGMNx4Td5e8FwA68uIHQwPaRpJr9CUCpiP4IsSD8nEJn1YtEv6FnY83wIv7uljYoQOYmMPyhKec8Ct3zH7KurMGuj4Fhws3HNA3bqP5MYEy+aA==",
                              "url": "{{internalVoucherifyURL}}"
                            },
                            "barcode": {
                              "id": "U2FsdGVkX181+WljOgxIt9Jg1Urbuv226+8Ug0DIyZiI0WtThPNYKZZEodzqQpIsGSdrDGXr2chLo+4FH3Ey8G2YXCPM6nUhZRSMF5oL3+uNjcLtBvb7MF5+ynY5fIgpXolwUK0R/BuT4Pa8prhgTg==",
                              "url": "{{internalVoucherifyURL}}"
                            }
                          },
                          "is_referral_code": false,
                          "created_at": "2022-09-12T07:51:02.145Z",
                          "updated_at": "2022-09-19T08:29:12.566Z",
                          "holder_id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                          "redemption": {
                            "quantity": null,
                            "redeemed_quantity": 2,
                            "object": "list",
                            "url": "/v1/vouchers/AmountDiscount/redemptions?page=1&limit=10"
                          },
                          "publish": {
                            "object": "list",
                            "count": 1,
                            "url": "/v1/vouchers/AmountDiscount/publications?page=1&limit=10"
                          },
                          "object": "voucher"
                        }
                      ],
                      "total": 2
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "generate-random-code",
        "tags": [
          "Vouchers"
        ],
        "summary": "Generate Random Code",
        "description": "Create a generic (standalone) vouchers. You can choose to create a GIFT_VOUCHER, a DISCOUNT_VOUCHER, or a LOYALTY_CARD. \nWhen you create a new voucher, you can specify a type to create it.\nCreating a new voucher will create a new generic (standalone) vouchers if no campaign name or campaign_id is provided. However, if an ID or name of a campaign with the type set to STANDALONE is provided, the voucher will be added to such campaign. In case of the loyalty card, a campaign name is required.\nYou can optionally use the code parameter to define a specific code or the code_config parameter to design rules for Voucherify API to create a random code. If neither of the two parameters are passed, then a random code is generated by the Voucherify API.\nThis method will return an error when trying to create a voucher that already exists.\n🚧 Standalone Vouchers and Campaigns\nIn version [v20241004](https://support.voucherify.io/article/23-whats-new-in-voucherify#v20241004), generic (standalone) voucherss created through the Voucherify dashboard create a campaign for that voucher. However, vouchers created through the API do not have a campaign attached, so the values for campaign and campaign_id are null.\nVoucherify developers work on adding an optional feature to create a generic (standalone) vouchers campaign through the API.\nFollow the [Voucherify Release Notes](https://support.voucherify.io/article/23-whats-new-in-voucherify#v20241004) for more details about released features.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "requestBody": {
          "description": "Specify the details of the voucher that you would like to create.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VouchersCreateRequestBody"
              },
              "examples": {
                "Percentage Discount": {
                  "value": {
                    "category": "New Customers",
                    "code": "NEW-WELCOME-COUPON",
                    "type": "DISCOUNT_VOUCHER",
                    "campaign_id": "camp_Y6dLsYIZloGqP8izufXY6SSJ",
                    "discount": {
                      "percent_off": 10,
                      "type": "PERCENT",
                      "effect": "APPLY_TO_ORDER"
                    },
                    "start_date": "2016-01-01T00:00:00Z",
                    "expiration_date": "2022-12-31T23:59:59Z",
                    "validity_timeframe": {
                      "duration": "PT1H",
                      "interval": "P2D"
                    },
                    "validity_day_of_week": [
                      1,
                      2,
                      3,
                      4,
                      5
                    ],
                    "active": false,
                    "additional_info": "This voucher will remain inactive until enabled.",
                    "redemption": {
                      "quantity": 10
                    },
                    "metadata": {
                      "test": true,
                      "locale": "de-en"
                    },
                    "validation_rules": [
                      "val_4j7DCRm2IS59"
                    ]
                  }
                },
                "Gift Card": {
                  "value": {
                    "category": "New Customers",
                    "type": "GIFT_VOUCHER",
                    "gift": {
                      "amount": 10000,
                      "effect": "APPLY_TO_ORDER"
                    },
                    "start_date": "2022-01-01T00:00:00Z",
                    "active": true,
                    "additional_info": "This gift card is enabled immediately upon creation.",
                    "metadata": {
                      "test": true,
                      "locale": "de-en"
                    },
                    "code_config": {
                      "pattern": "GIFT-CARD-##########",
                      "prefix": "New-",
                      "postfix": "0",
                      "charset": "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"
                    }
                  }
                },
                "Loyalty Card": {
                  "value": {
                    "category": "New Customers",
                    "campaign": "camp_E87CubZLZ8eoQt3c4kAEZsx0",
                    "type": "LOYALTY_CARD",
                    "loyalty_card": {
                      "points": 10000
                    },
                    "additional_info": "This loyalty card is enabled immediately upon creation.",
                    "metadata": {
                      "test": true,
                      "locale": "de-en"
                    },
                    "code_config": {
                      "pattern": "LOYALTY-CARD-##",
                      "prefix": "New-",
                      "postfix": "1",
                      "charset": "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"
                    }
                  }
                },
                "Unit Discount Multiple Items": {
                  "value": {
                    "category": "New Customers",
                    "code": "MultipleUnitTypesUnitDiscount",
                    "type": "DISCOUNT_VOUCHER",
                    "discount": {
                      "type": "UNIT",
                      "effect": "ADD_MANY_ITEMS",
                      "units": [
                        {
                          "unit_off": 1,
                          "unit_type": "prod_0a9f9ab4ab019a42d5",
                          "effect": "ADD_NEW_ITEMS"
                        },
                        {
                          "unit_off": 1,
                          "unit_type": "prod_0a9f9aeddb019a42db",
                          "effect": "ADD_MISSING_ITEMS"
                        }
                      ]
                    },
                    "start_date": "2020-01-01T00:00:00Z",
                    "expiration_date": "2022-12-31T23:59:59Z",
                    "validity_timeframe": {
                      "duration": "PT1H",
                      "interval": "P2D"
                    },
                    "validity_day_of_week": [
                      1,
                      2,
                      3,
                      4,
                      5
                    ],
                    "active": false,
                    "additional_info": "This voucher will remain inactive until enabled.",
                    "redemption": {
                      "quantity": 5
                    },
                    "metadata": {
                      "test": true,
                      "locale": "de-en"
                    }
                  }
                },
                "Unit Discount Single Item": {
                  "value": {
                    "category": "New Customers",
                    "code": "AddMissingItemDiscount",
                    "type": "DISCOUNT_VOUCHER",
                    "discount": {
                      "type": "UNIT",
                      "unit_off": 1,
                      "unit_type": "prod_0a9f9ab4ab019a42d5",
                      "effect": "ADD_MISSING_ITEMS"
                    },
                    "start_date": "2020-01-01T00:00:00Z",
                    "expiration_date": "2022-12-31T23:59:59Z",
                    "active": false,
                    "additional_info": "This voucher will remain inactive until enabled.",
                    "redemption": {
                      "quantity": 3
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "2XX": {
            "description": "Returns a voucher object if the call succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VouchersCreateResponseBody"
                },
                "examples": {
                  "Percentage Discount": {
                    "value": {
                      "id": "v_YJYfeKoR0XAGIvaM7k51wTbDjU4WIpC5",
                      "code": "NEW-WELCOME-COUPON",
                      "campaign": "Bug fix",
                      "campaign_id": "camp_Y6dLsYIZloGqP8izufXY6SSJ",
                      "category": "New Customers",
                      "type": "DISCOUNT_VOUCHER",
                      "discount": {
                        "type": "PERCENT",
                        "percent_off": 10,
                        "effect": "APPLY_TO_ORDER"
                      },
                      "gift": null,
                      "loyalty_card": null,
                      "start_date": "2016-01-01T00:00:00.000Z",
                      "expiration_date": "2022-12-31T23:59:59.000Z",
                      "validity_timeframe": {
                        "interval": "P2D",
                        "duration": "PT1H"
                      },
                      "validity_day_of_week": [
                        1,
                        2,
                        3,
                        4,
                        5
                      ],
                      "active": false,
                      "additional_info": "This voucher will remain inactive until enabled.",
                      "metadata": {
                        "test": true,
                        "locale": "de-en"
                      },
                      "assets": {
                        "qr": {
                          "id": "U2FsdGVkX180g6GhUA0kT47tHGvZ5thjCgY5nbsPtiecixkkEznFVg2v3SDG9dpCbXR6BSUdM/d78Wm/zru1ybT4+AQ2X0JnEy86N7TZ/aoezZORjcBRUfyVM/scUUF/vmD4Ezn+Elp2+V9AFcAXN/WthaRMl9e7xvEeIEQ5nao=",
                          "url": "{{internalVoucherifyURL}}"
                        },
                        "barcode": {
                          "id": "U2FsdGVkX1/AynivxYCEIxfTnf3A1lO0xsNihOlbUMo6Y6873LQ2qpmkk90aUFnaFKd7pVumcirRweblzGVSxy24Phhd174VSPaLxxmSKp0FPv0dRos/XWBg8zu0Kta0pA/yvFK3WWGlNoPPPnvEhVWKKzOr09Gj94SMrr+TGlI=",
                          "url": "{{internalVoucherifyURL}}"
                        }
                      },
                      "is_referral_code": false,
                      "created_at": "2022-02-17T07:14:40.096Z",
                      "updated_at": null,
                      "validation_rules_assignments": {
                        "object": "list",
                        "data_ref": "data",
                        "data": [
                          {
                            "id": "asgm_COu5PJAsWmAwuCqR",
                            "rule_id": "val_4j7DCRm2IS59",
                            "related_object_id": "v_YJYfeKoR0XAGIvaM7k51wTbDjU4WIpC5",
                            "related_object_type": "voucher",
                            "created_at": "2022-02-17T07:14:40.280Z",
                            "object": "validation_rules_assignment"
                          }
                        ],
                        "total": 1
                      },
                      "redemption": {
                        "quantity": 10,
                        "redeemed_quantity": 0,
                        "object": "list",
                        "url": "/v1/vouchers/NEW-WELCOME-COUPON/redemptions?page=1&limit=10"
                      },
                      "publish": {
                        "object": "list",
                        "count": 0,
                        "url": "/v1/vouchers/NEW-WELCOME-COUPON/publications?page=1&limit=10"
                      },
                      "object": "voucher"
                    }
                  },
                  "Gift Voucher": {
                    "value": {
                      "id": "v_yAZyBimXtF9yQ2C5BEF9WMhNzOMJNfz6",
                      "code": "New-GIFT-CARD-8tqB6FcyhE0",
                      "campaign": null,
                      "campaign_id": null,
                      "category": "New Customers",
                      "type": "GIFT_VOUCHER",
                      "discount": null,
                      "gift": {
                        "amount": 10000,
                        "balance": 10000,
                        "effect": "APPLY_TO_ORDER"
                      },
                      "loyalty_card": null,
                      "start_date": "2022-01-01T00:00:00.000Z",
                      "expiration_date": null,
                      "validity_timeframe": null,
                      "validity_day_of_week": null,
                      "active": true,
                      "additional_info": "This gift card is enabled immediately upon creation.",
                      "metadata": {
                        "test": true,
                        "locale": "de-en"
                      },
                      "assets": {
                        "qr": {
                          "id": "U2FsdGVkX1+pm0q3U4i/KrjResuZpwDigEa5WcDOlwYS/bj3rsesZXDpJF5MNHMUsKqy0+wn5tY3QbjPGv0dwbqRn/OjrIRgNlP99azD0n0n9C/chiTABp8BxlJmMKKFo5AggBbQu4+Mw8Cv8V3+0Ga7ETzeehS+Yrj6c+3ioxg=",
                          "url": "{{internalVoucherifyURL}}"
                        },
                        "barcode": {
                          "id": "U2FsdGVkX1/UaGX0zV8oXbpYah2G76V1ljYSy6hDSnWAZhpz5v10vRibGaOJUahyLcClMyxAsUhU9WXWi4BUGWIEEu510AxzxyGHOTDTjavJH0Q79PI0ciLHdujNFOgLOXWe9Ffwzj+Kvjmbhb22/SVZd/xzQlUBJcv7XboJYU0=",
                          "url": "{{internalVoucherifyURL}}"
                        }
                      },
                      "is_referral_code": false,
                      "created_at": "2022-02-17T07:49:10.834Z",
                      "updated_at": null,
                      "redemption": {
                        "quantity": null,
                        "redeemed_quantity": 0,
                        "redeemed_amount": 0,
                        "object": "list",
                        "url": "/v1/vouchers/New-GIFT-CARD-8tqB6FcyhE0/redemptions?page=1&limit=10"
                      },
                      "publish": {
                        "object": "list",
                        "count": 0,
                        "url": "/v1/vouchers/New-GIFT-CARD-8tqB6FcyhE0/publications?page=1&limit=10"
                      },
                      "object": "voucher"
                    }
                  },
                  "Loyalty Card": {
                    "value": {
                      "id": "v_tVkcOhjHCz9W7q8QnuJnTGPBR2hdaYrC",
                      "code": "New-LOYALTY-CARD-UC1",
                      "campaign": "Loyalty Campaign",
                      "campaign_id": "camp_E87CubZLZ8eoQt3c4kAEZsx0",
                      "category": "New Customers",
                      "type": "LOYALTY_CARD",
                      "discount": null,
                      "gift": null,
                      "loyalty_card": {
                        "points": 10000,
                        "balance": 10000
                      },
                      "start_date": null,
                      "expiration_date": null,
                      "validity_timeframe": null,
                      "validity_day_of_week": null,
                      "active": true,
                      "additional_info": "This loyalty card is enabled immediately upon creation.",
                      "metadata": {
                        "test": true,
                        "locale": "de-en"
                      },
                      "assets": {
                        "qr": {
                          "id": "U2FsdGVkX1+6lGBFlqtS9OoY2wbAsoSupV43qa+g5sGu+R0IDTq2k85LIfbKfV9sDSYv80pP9ucsazJ6qGI9ineqQyhv9VVHdsJ2qGRiuZzpw/vRkSA0a7J9N1MpANgzqpIULZHLjYtrCQ/2el72nZ6Hpr2NkWtk19JTpNwB8tk=",
                          "url": "{{internalVoucherifyURL}}"
                        },
                        "barcode": {
                          "id": "U2FsdGVkX180bvJVsyZvpAqwYXTnm4MvvH4Rur+ZhM+Mbmnva/fgYUcUbOttsFXPY/PMZ9Xi8pomVp26a7amIPguNimD8w4PMZLMavMtH7EtJ4k+0V0Wp7JUkudIKeRw2fDnQ3/0cgqvK6PMReUwFWb5nUT3ABpZDAdaOVoMDhE=",
                          "url": "{{internalVoucherifyURL}}"
                        }
                      },
                      "is_referral_code": false,
                      "created_at": "2022-02-17T08:06:41.091Z",
                      "updated_at": null,
                      "redemption": {
                        "quantity": null,
                        "redeemed_quantity": 0,
                        "redeemed_points": 0,
                        "object": "list",
                        "url": "/v1/vouchers/New-LOYALTY-CARD-UC1/redemptions?page=1&limit=10"
                      },
                      "publish": {
                        "object": "list",
                        "count": 0,
                        "url": "/v1/vouchers/New-LOYALTY-CARD-UC1/publications?page=1&limit=10"
                      },
                      "object": "voucher"
                    }
                  },
                  "Unit Discount Multiple Items": {
                    "value": {
                      "id": "v_cu8nyozvTDA413H17bH5BLha0cjxt7s8",
                      "code": "MultipleUnitTypesUnitDiscount",
                      "campaign": null,
                      "campaign_id": null,
                      "category": "New Customers",
                      "type": "DISCOUNT_VOUCHER",
                      "discount": {
                        "type": "UNIT",
                        "effect": "ADD_MANY_ITEMS",
                        "units": [
                          {
                            "unit_off": 1,
                            "unit_type": "prod_0a9f9ab4ab019a42d5",
                            "effect": "ADD_NEW_ITEMS"
                          },
                          {
                            "unit_off": 1,
                            "unit_type": "prod_0a9f9aeddb019a42db",
                            "effect": "ADD_MISSING_ITEMS"
                          }
                        ]
                      },
                      "gift": null,
                      "loyalty_card": null,
                      "start_date": "2020-01-01T00:00:00.000Z",
                      "expiration_date": "2022-12-31T23:59:59.000Z",
                      "validity_timeframe": {
                        "interval": "P2D",
                        "duration": "PT1H"
                      },
                      "validity_day_of_week": [
                        1,
                        2,
                        3,
                        4,
                        5
                      ],
                      "active": false,
                      "additional_info": "This voucher will remain inactive until enabled.",
                      "metadata": {
                        "test": true,
                        "locale": "de-en"
                      },
                      "assets": {
                        "qr": {
                          "id": "U2FsdGVkX1+ocJBtZ9NqT97gZ/QTfOz54TAoRoKO3tnCYBtHZWMghEHT0b2aFrPSL1lqMyf6fYy6DH2/DkH5p5Vd8dOozW1LV6wPVatWpa1lZMeMIB0OcARCW3q+3QydoW2KdliLKyksFwumH9C7Fsnj6HTaEbUjSttTZE/be+o=",
                          "url": "{{internalVoucherifyURL}}"
                        },
                        "barcode": {
                          "id": "U2FsdGVkX1+Sly3IYj3EbZFHGGNxV6Ns4j76O8d0kRQe3WriJz5qY6s4GBIwlsdy13AciaQuiVt232HlOlZ4TzGaSSk3+ZMldwBGaTp/fIN9SGBW/NVUtfDOI2sIDLZCBBrdK7WVvtCQQ+1Y+6qClYg/QurJExCFRkDeKpKjDug=",
                          "url": "{{internalVoucherifyURL}}"
                        }
                      },
                      "is_referral_code": false,
                      "created_at": "2022-02-18T06:27:45.619Z",
                      "updated_at": null,
                      "redemption": {
                        "quantity": 5,
                        "redeemed_quantity": 0,
                        "object": "list",
                        "url": "/v1/vouchers/MultipleUnitTypesUnitDiscount/redemptions?page=1&limit=10"
                      },
                      "publish": {
                        "object": "list",
                        "count": 0,
                        "url": "/v1/vouchers/MultipleUnitTypesUnitDiscount/publications?page=1&limit=10"
                      },
                      "object": "voucher"
                    }
                  },
                  "Unit Discount Single Item": {
                    "value": {
                      "id": "v_NQdraO4fXWYvMMWYL9OY22hRernr553n",
                      "code": "AddMissingItemDiscount",
                      "campaign": null,
                      "campaign_id": null,
                      "category": "New Customers",
                      "type": "DISCOUNT_VOUCHER",
                      "discount": {
                        "type": "UNIT",
                        "unit_off": 1,
                        "unit_type": "prod_0a9f9ab4ab019a42d5",
                        "effect": "ADD_MISSING_ITEMS"
                      },
                      "gift": null,
                      "loyalty_card": null,
                      "start_date": "2020-01-01T00:00:00.000Z",
                      "expiration_date": "2022-12-31T23:59:59.000Z",
                      "validity_timeframe": null,
                      "validity_day_of_week": null,
                      "active": false,
                      "additional_info": "This voucher will remain inactive until enabled.",
                      "metadata": {},
                      "assets": {
                        "qr": {
                          "id": "U2FsdGVkX19Yh7LTNyOVKSXQ+ceTr023saElWAUeucwOgjTH50x1SoSF/PP1aoGBr6sSxHZNZOvBGumWNHjsF85y7cPY7La/4a0d1kWqnAiBWeWnGOgDFeQFqthGswypFOK1jdAzUPqLSbxW3O6q936N6Bsmoz4QHYE//kfWFhs=",
                          "url": "{{internalVoucherifyURL}}"
                        },
                        "barcode": {
                          "id": "U2FsdGVkX1+RqzgyYsIJzAEBxmQt1OZLu4+PSUDQBldDKK1o5XsEoBSQEMPWHis1wJSg4ZNqJ9ZdJ0Ukc+K6X1fjg0ggDsCdXP2ZxpyGPD8/1ReggJZ/tq823ji7A5pzhG1TljA6+vmISuHvs2wkcum0djN9AWuAlB0F/vbXexo=",
                          "url": "{{internalVoucherifyURL}}"
                        }
                      },
                      "is_referral_code": false,
                      "created_at": "2022-02-18T06:46:44.536Z",
                      "updated_at": null,
                      "redemption": {
                        "quantity": 3,
                        "redeemed_quantity": 0,
                        "object": "list",
                        "url": "/v1/vouchers/AddMissingItemDiscount/redemptions?page=1&limit=10"
                      },
                      "publish": {
                        "object": "list",
                        "count": 0,
                        "url": "/v1/vouchers/AddMissingItemDiscount/publications?page=1&limit=10"
                      },
                      "object": "voucher"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/vouchers/{code}": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterCode"
          },
          "in": "path",
          "name": "code",
          "description": "A unique **code** that identifies the voucher.",
          "required": true
        }
      ],
      "get": {
        "operationId": "get-voucher",
        "tags": [
          "Vouchers"
        ],
        "summary": "Get Voucher",
        "description": "Retrieves the voucher with the given code or unique Voucherify ID. You can either pass the voucher ID which was assigned by Voucherify, e.g., v_7HxHkf4VAkMuc8u4lZs78lyRwhRze5UE, or the code of the voucher as the path parameter value, e.g., 7fjWdr.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns a voucher object if a valid identifier was provided. \n\nAdditionally, the response returns validation rules related to the voucher object. They can be inherited from a campaign.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VouchersGetResponseBody"
                },
                "examples": {
                  "Loyalty Card": {
                    "value": {
                      "id": "v_hrMBBeT4sOP9VSGPmj5KAgJwX202UjiY",
                      "code": "LOYALTY-CARD-xLPbpbXR",
                      "campaign": "Loyalty Program Fall 2022",
                      "campaign_id": "camp_f7fBbQxUuTN7dI7tGOo5XMDA",
                      "category": "First",
                      "category_id": "cat_0bb343dee3cdb5ec0c",
                      "categories": [
                        {
                          "id": "cat_0bb343dee3cdb5ec0c",
                          "name": "First",
                          "hierarchy": 1,
                          "created_at": "2022-09-16T11:47:19.568Z",
                          "object": "category"
                        }
                      ],
                      "type": "LOYALTY_CARD",
                      "discount": null,
                      "gift": null,
                      "loyalty_card": {
                        "points": 110,
                        "balance": 100,
                        "next_expiration_date": "2023-12-31",
                        "next_expiration_points": 100
                      },
                      "start_date": null,
                      "expiration_date": null,
                      "validity_timeframe": null,
                      "validity_day_of_week": null,
                      "active": true,
                      "additional_info": null,
                      "metadata": {},
                      "assets": {
                        "qr": {
                          "id": "U2FsdGVkX19OrTPNyUztbNretF7tPRL4ZlUDPAUXVGL9e5UCPh6dic8zXEP8/6I6hUEqtz/F6IMIghWz1ljdjzpdizGHG3HZBw4c19fd8SD/DjhBRDSr8APqKGpZTLKe4QC2gislFTeDAq2lmJb6T1oOTBUGkUEwMgEX1Vlco9A=",
                          "url": "{{internalVoucherifyURL}}"
                        },
                        "barcode": {
                          "id": "U2FsdGVkX1/SpYuOrU9wd6/o1wzy6E/04wURHJ1xuMutzkIUx6OBTmHX5BO8XZRmEFHkgjC5eWJ27ArgAruJfwRXWuQfTNFD4raI9YvIiQNEzsZ0ydxwKBqJ/FJtiw69djuzQk1f4HdQo8s5gaZ7fd2U+1zbaeAvi9usyvRHZE4=",
                          "url": "{{internalVoucherifyURL}}"
                        }
                      },
                      "is_referral_code": false,
                      "created_at": "2022-09-19T07:56:22.355Z",
                      "updated_at": "2022-09-19T08:04:22.458Z",
                      "holder_id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                      "validation_rules_assignments": {
                        "object": "list",
                        "data_ref": "data",
                        "data": [],
                        "total": 0
                      },
                      "redemption": {
                        "quantity": null,
                        "redeemed_quantity": 1,
                        "redeemed_points": 10,
                        "object": "list",
                        "url": "/v1/vouchers/LOYALTY-CARD-xLPbpbXR/redemptions?page=1&limit=10"
                      },
                      "publish": {
                        "object": "list",
                        "count": 1,
                        "url": "/v1/vouchers/LOYALTY-CARD-xLPbpbXR/publications?page=1&limit=10"
                      },
                      "object": "voucher"
                    }
                  },
                  "Gift Card": {
                    "value": {
                      "id": "v_hS8JFl8S6lNcd1L69wLIoXgTio7eWEgk",
                      "code": "GIFT-CARD-xwc6X7Tk",
                      "campaign": "Gift Cards",
                      "campaign_id": "camp_kdxp3vf1clQ9CFs1jpqv3tZe",
                      "category": null,
                      "category_id": null,
                      "type": "GIFT_VOUCHER",
                      "discount": null,
                      "gift": {
                        "amount": 55000,
                        "balance": 44700,
                        "effect": "APPLY_TO_ORDER"
                      },
                      "loyalty_card": null,
                      "start_date": null,
                      "expiration_date": null,
                      "validity_timeframe": null,
                      "validity_day_of_week": null,
                      "active": true,
                      "additional_info": null,
                      "metadata": {},
                      "assets": {
                        "qr": {
                          "id": "U2FsdGVkX19SdT2kQZokSFsMRa5NmGvsHunHReeb4gF9b5LtLA4rCTM/aTyHCYfr7kRWb2vv08WIgY/Tv53SJGW+k2keqfsTq/Ohb5shkCN3FTFsaI8gulTp616sEGn/JJoIInIoNkO9Vd1+AfrKiAjmirCmekE6cz2SVCyNAXs=",
                          "url": "{{internalVoucherifyURL}}"
                        },
                        "barcode": {
                          "id": "U2FsdGVkX18vWc/qplwajJz4RIIy2wDUcAXVo1KEmyXx2IJy44xxHg608po3RizU9OYOzKelOAEjXFf7E4BS5Q01s4dds8Du70LGAp3idYMKAaXIjMTcFjMNczNO6ULK7r4eDx2Np8jvO/199U+zicnFNWqg/jF5ZCQW+6jO1q8=",
                          "url": "{{internalVoucherifyURL}}"
                        }
                      },
                      "is_referral_code": false,
                      "created_at": "2022-07-08T09:44:33.179Z",
                      "updated_at": "2022-08-29T09:37:20.185Z",
                      "holder_id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                      "validation_rules_assignments": {
                        "object": "list",
                        "data_ref": "data",
                        "data": [],
                        "total": 0
                      },
                      "redemption": {
                        "quantity": null,
                        "redeemed_quantity": 7,
                        "redeemed_amount": 10300,
                        "object": "list",
                        "url": "/v1/vouchers/GIFT-CARD-xwc6X7Tk/redemptions?page=1&limit=10"
                      },
                      "publish": {
                        "object": "list",
                        "count": 1,
                        "url": "/v1/vouchers/GIFT-CARD-xwc6X7Tk/publications?page=1&limit=10"
                      },
                      "object": "voucher"
                    }
                  },
                  "Amount Discount": {
                    "value": {
                      "id": "v_OBVfpTVf24DBz0HZmKVZa5UEl1DUg2bn",
                      "code": "AMOUNTDISCOUNTUSINGFORMULA",
                      "campaign": null,
                      "campaign_id": null,
                      "category": "First",
                      "category_id": "cat_0bb343dee3cdb5ec0c",
                      "categories": [
                        {
                          "id": "cat_0bb343dee3cdb5ec0c",
                          "name": "First",
                          "hierarchy": 1,
                          "created_at": "2022-09-16T11:47:19.568Z",
                          "object": "category"
                        }
                      ],
                      "type": "DISCOUNT_VOUCHER",
                      "discount": {
                        "type": "AMOUNT",
                        "amount_off": 400,
                        "amount_off_formula": "IF(CUSTOMER_METADATA(\"favorite_brands\") contains \"Nike\";20;CUSTOMER_METADATA(\"age\"))",
                        "effect": "APPLY_TO_ORDER"
                      },
                      "gift": null,
                      "loyalty_card": null,
                      "start_date": "2022-09-01T00:00:00.000Z",
                      "expiration_date": "2022-10-31T00:00:00.000Z",
                      "validity_timeframe": null,
                      "validity_day_of_week": [
                        1,
                        2,
                        3,
                        4,
                        5
                      ],
                      "active": true,
                      "additional_info": "This voucher discount is based on a formula, payment must be using VISA, and order must be over $100.",
                      "metadata": {},
                      "assets": {
                        "qr": {
                          "id": "U2FsdGVkX18tV6jdzxWPwEzjeiX4DoM06JpwaoKUNGMNx4Td5e8FwA68uIHQwPaRpJr9CUCpiP4IsSD8nEJn1YtEv6FnY83wIv7uljYoQOYmMPyhKec8Ct3zH7KurMGuj4Fhws3HNA3bqP5MYEy+aA==",
                          "url": "{{internalVoucherifyURL}}"
                        },
                        "barcode": {
                          "id": "U2FsdGVkX181+WljOgxIt9Jg1Urbuv226+8Ug0DIyZiI0WtThPNYKZZEodzqQpIsGSdrDGXr2chLo+4FH3Ey8G2YXCPM6nUhZRSMF5oL3+uNjcLtBvb7MF5+ynY5fIgpXolwUK0R/BuT4Pa8prhgTg==",
                          "url": "{{internalVoucherifyURL}}"
                        }
                      },
                      "is_referral_code": false,
                      "created_at": "2022-09-12T07:51:02.145Z",
                      "updated_at": "2022-09-19T08:29:12.566Z",
                      "holder_id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                      "validation_rules_assignments": {
                        "object": "list",
                        "data_ref": "data",
                        "data": [
                          {
                            "id": "asgm_tO5AuzXIkkNPTC50",
                            "rule_id": "val_5h0wc453_2",
                            "related_object_id": "v_OBVfpTVf24DBz0HZmKVZa5UEl1DUg2bn",
                            "related_object_type": "voucher",
                            "created_at": "2022-09-19T08:27:59.160Z",
                            "object": "validation_rules_assignment"
                          }
                        ],
                        "total": 1
                      },
                      "redemption": {
                        "quantity": null,
                        "redeemed_quantity": 2,
                        "object": "list",
                        "url": "/v1/vouchers/AMOUNTDISCOUNTUSINGFORMULA/redemptions?page=1&limit=10"
                      },
                      "publish": {
                        "object": "list",
                        "count": 1,
                        "url": "/v1/vouchers/AMOUNTDISCOUNTUSINGFORMULA/publications?page=1&limit=10"
                      },
                      "object": "voucher"
                    }
                  },
                  "Percent Discount": {
                    "value": {
                      "id": "v_2LcXRN4X0TNNgPoBceXIsE4LYs13kta1",
                      "code": "PercentDiscountUsingFormula",
                      "campaign": null,
                      "campaign_id": null,
                      "category": null,
                      "category_id": null,
                      "type": "DISCOUNT_VOUCHER",
                      "discount": {
                        "type": "PERCENT",
                        "percent_off": 3,
                        "percent_off_formula": "CUSTOMER_METADATA(\"age\")",
                        "effect": "APPLY_TO_ITEMS"
                      },
                      "gift": null,
                      "loyalty_card": null,
                      "start_date": null,
                      "expiration_date": null,
                      "validity_timeframe": null,
                      "validity_day_of_week": null,
                      "active": true,
                      "additional_info": null,
                      "metadata": {},
                      "assets": {
                        "qr": {
                          "id": "U2FsdGVkX1+74dNbbuHNdVR+5SXVrdo6Zp2tUInlseZtheoYEvrayBBDEoJFaeDuC1BzQr+j8ayuFU7+BtCdNe25YRae4Mp+3Y1HsrkVudshKRzMBdS/43GT9Qi6tOXQDsYjHh70zNz13lMOC9bnaX6WZCVU0vRWM/VDXbYNxGZH6V1wpcGOkmkhkEYPSuIXBDF65FsgHOAwIPvKBxa/aQ==",
                          "url": "{{internalVoucherifyURL}}"
                        },
                        "barcode": {
                          "id": "U2FsdGVkX19t8/dJWDNnnwPtxt3e0kZTDAELYiQcSHWIEO5wr6uLeDbM2KKbGYUfkKKtZRsWtiKhOQQc7zmNoCqR82UB+p0gzGM0tyXa/npbPUTe0Y5Y/arDPnomb9AaUFjK9Uq5OUBYbxi1ERqEhy/20Owr0m0e0E2I3jQmgAxkNokRm1g31zX4zheea8gTtiFwb6ZrYvGbaOhj5IxYWg==",
                          "url": "{{internalVoucherifyURL}}"
                        }
                      },
                      "is_referral_code": false,
                      "created_at": "2022-09-15T10:20:46.467Z",
                      "updated_at": "2022-09-15T10:43:51.116Z",
                      "validation_rules_assignments": {
                        "object": "list",
                        "data_ref": "data",
                        "data": [
                          {
                            "id": "asgm_EuYasM5fyDR9G2r4",
                            "rule_id": "val_0k19OQHjNZRT",
                            "related_object_id": "v_2LcXRN4X0TNNgPoBceXIsE4LYs13kta1",
                            "related_object_type": "voucher",
                            "created_at": "2022-09-15T10:20:46.460Z",
                            "object": "validation_rules_assignment"
                          }
                        ],
                        "total": 1
                      },
                      "redemption": {
                        "quantity": null,
                        "redeemed_quantity": 3,
                        "object": "list",
                        "url": "/v1/vouchers/PercentDiscountUsingFormula/redemptions?page=1&limit=10"
                      },
                      "publish": {
                        "object": "list",
                        "count": 0,
                        "url": "/v1/vouchers/PercentDiscountUsingFormula/publications?page=1&limit=10"
                      },
                      "object": "voucher"
                    }
                  },
                  "Fixed Discount": {
                    "value": {
                      "id": "v_zXQtyi5FYQYoRXv459hmK8M5Gi2lLoDl",
                      "code": "FixedDiscountUsingFormula",
                      "campaign": null,
                      "campaign_id": null,
                      "category": null,
                      "category_id": null,
                      "type": "DISCOUNT_VOUCHER",
                      "discount": {
                        "type": "FIXED",
                        "effect": "APPLY_TO_ORDER",
                        "fixed_amount": 200,
                        "fixed_amount_formula": "IF(ORDER_UNITS_QUANTITY > 3;CUSTOMER_METADATA(\"age\") + 2;CUSTOMER_METADATA(\"age\") - 2)"
                      },
                      "gift": null,
                      "loyalty_card": null,
                      "start_date": null,
                      "expiration_date": null,
                      "validity_timeframe": null,
                      "validity_day_of_week": null,
                      "active": true,
                      "additional_info": null,
                      "metadata": {},
                      "assets": {
                        "qr": {
                          "id": "U2FsdGVkX1+sY8iWRFMrrPOjY6pS7JZSqJUPIzAgFO5oy5GvTj27KrukNxucE4wrA4n9QL7pua3CfJzGWe0Hc5J6XXU2m5ktik4iUNRO6pxZmL4ZuR96C1XHJAGaIiI7lM17OjJD2b72/hyyDUi8DflzcYixFdXTOR3o1rcaPoY=",
                          "url": "{{internalVoucherifyURL}}"
                        },
                        "barcode": {
                          "id": "U2FsdGVkX1+af+iouhzUVUL0IocB7BAWR8rB0z8/9/OgYi32EHQ9salEEtE3XYPWtseOAxi5keMRp6K3JLDyx4RvYpw3Fe5SN0ed7PEcWr4fLUoUBntHtH0lOPFOtWxpY3tAjnyWpE/CYTR/S135KZ6GIfCS/+VQNrzbS/bFXgY=",
                          "url": "{{internalVoucherifyURL}}"
                        }
                      },
                      "is_referral_code": false,
                      "created_at": "2022-09-15T12:46:55.818Z",
                      "updated_at": "2022-09-16T10:03:25.057Z",
                      "validation_rules_assignments": {
                        "object": "list",
                        "data_ref": "data",
                        "data": [],
                        "total": 0
                      },
                      "redemption": {
                        "quantity": null,
                        "redeemed_quantity": 5,
                        "object": "list",
                        "url": "/v1/vouchers/FixedDiscountUsingFormula/redemptions?page=1&limit=10"
                      },
                      "publish": {
                        "object": "list",
                        "count": 0,
                        "url": "/v1/vouchers/FixedDiscountUsingFormula/publications?page=1&limit=10"
                      },
                      "object": "voucher"
                    }
                  },
                  "Unit Discount": {
                    "value": {
                      "id": "v_JkjV4v9OKTsaIuHoqXGrkGijNaRGYNzm",
                      "code": "UnitDiscountUsingFormula",
                      "campaign": null,
                      "campaign_id": null,
                      "category": null,
                      "category_id": null,
                      "type": "DISCOUNT_VOUCHER",
                      "discount": {
                        "type": "UNIT",
                        "unit_off": 1,
                        "unit_off_formula": "IF(ORDER_UNITS_QUANTITY > 3;CUSTOMER_METADATA(\"age\") / 5;CUSTOMER_METADATA(\"age\") / 10)",
                        "unit_type": "sku_0b661e41eccd35a8e9",
                        "effect": "ADD_MISSING_ITEMS"
                      },
                      "gift": null,
                      "loyalty_card": null,
                      "start_date": null,
                      "expiration_date": null,
                      "validity_timeframe": null,
                      "validity_day_of_week": null,
                      "active": true,
                      "additional_info": null,
                      "metadata": {},
                      "assets": {
                        "qr": {
                          "id": "U2FsdGVkX1+6okuUQBKDcu0jGGg0jOU3kwYUFhX79TdwYKjXyV14BX74z/lehzciL0vdtutoiMVf8Nzl+B278gSHI5TiecPsTXChbGKSjH9gYUxZkdQev0qfmR4frKHjKKHHfT9DEcRWCLwKDJ9V+b89EAmbMouLlaDvkD63bZI=",
                          "url": "{{internalVoucherifyURL}}"
                        },
                        "barcode": {
                          "id": "U2FsdGVkX19E7POETWB9YO+S4gkbGFQSm4VDNXEvqdlln6cWiyWTplnWkiUbs/2XMIva3q2rHDFP4toeKrLOGeS5mqhJcdd3yVsWXjHaALwCJIis2D4l5soDvz+Ka/vTqJdFWQzqsIl0BqEpr1tLLy8JFMGN7MY5nY3nr/ciSN8=",
                          "url": "{{internalVoucherifyURL}}"
                        }
                      },
                      "is_referral_code": false,
                      "created_at": "2022-09-15T13:36:27.838Z",
                      "updated_at": "2022-09-16T10:03:25.057Z",
                      "validation_rules_assignments": {
                        "object": "list",
                        "data_ref": "data",
                        "data": [],
                        "total": 0
                      },
                      "redemption": {
                        "quantity": null,
                        "redeemed_quantity": 5,
                        "object": "list",
                        "url": "/v1/vouchers/UnitDiscountUsingFormula/redemptions?page=1&limit=10"
                      },
                      "publish": {
                        "object": "list",
                        "count": 0,
                        "url": "/v1/vouchers/UnitDiscountUsingFormula/publications?page=1&limit=10"
                      },
                      "object": "voucher"
                    }
                  },
                  "Multiple Unit Discount": {
                    "value": {
                      "id": "v_5Xgi5ht4sw432LQ7bwmyjKnUAYtOrJAh",
                      "code": "UnitDiscountUsingFormulaForMultipleProductVariants",
                      "campaign": null,
                      "campaign_id": null,
                      "category": null,
                      "category_id": null,
                      "type": "DISCOUNT_VOUCHER",
                      "discount": {
                        "type": "UNIT",
                        "effect": "ADD_MANY_ITEMS",
                        "units": [
                          {
                            "unit_off": 3,
                            "unit_off_formula": "IF(ORDER_AMOUNT > 100;CUSTOMER_METADATA(\"age\");CUSTOMER_METADATA(\"age\") / 2)",
                            "unit_type": "sku_0b661e41fc8d35a8f7",
                            "effect": "ADD_MISSING_ITEMS"
                          },
                          {
                            "unit_off": 4,
                            "unit_off_formula": "IF(ORDER_AMOUNT > 100;CUSTOMER_METADATA(\"age\") + 2;CUSTOMER_METADATA(\"age\") - -2)",
                            "unit_type": "sku_0b661e41fc8d35a8f6",
                            "effect": "ADD_NEW_ITEMS"
                          }
                        ]
                      },
                      "gift": null,
                      "loyalty_card": null,
                      "start_date": null,
                      "expiration_date": null,
                      "validity_timeframe": null,
                      "validity_day_of_week": null,
                      "active": true,
                      "additional_info": null,
                      "metadata": {},
                      "assets": {
                        "qr": {
                          "id": "U2FsdGVkX1+qkwm+Yu29uhfotQxirJftPuWjA1P9WGxHqqmOHsU9esf6R5Ln7AeiqX8l9iIpy+D3yav5GmF2UrY6PD6fS9Y+yu+7yTVQu+agFZqdN1jvWw4DBOCHKPgynaMiNS29Cv4EIOFCY9Ux+4Lp8aVdalItCVCEH25DxWD+HUKq1lE31Y0DfWssg95oO2m73ZeGa8je7zd09eW7cg==",
                          "url": "{{internalVoucherifyURL}}"
                        },
                        "barcode": {
                          "id": "U2FsdGVkX1+poCeZMw207p8HWtpoeokpaPfUQQoRIxpGXmqi5ic2ZPhQwKrUnujPDW4Sw1ODgHV6nLWQQQ9g7j3S4793YfzHDi1H8L3kZroH0TwWFNBgzQkV/QLqc387xUUckr0fvmhTBCarpsB+dWPOwlaNuVivTVB+Yyh/1FcbGbjvbj1Sm12wVNom2KZ3m1K/lJ6vBoGkXqq0jutytA==",
                          "url": "{{internalVoucherifyURL}}"
                        }
                      },
                      "is_referral_code": false,
                      "created_at": "2022-09-16T05:44:50.722Z",
                      "updated_at": "2022-09-19T09:25:17.303Z",
                      "validation_rules_assignments": {
                        "object": "list",
                        "data_ref": "data",
                        "data": [],
                        "total": 0
                      },
                      "redemption": {
                        "quantity": null,
                        "redeemed_quantity": 3,
                        "object": "list",
                        "url": "/v1/vouchers/UnitDiscountUsingFormulaForMultipleProductVariants/redemptions?page=1&limit=10"
                      },
                      "publish": {
                        "object": "list",
                        "count": 0,
                        "url": "/v1/vouchers/UnitDiscountUsingFormulaForMultipleProductVariants/publications?page=1&limit=10"
                      },
                      "object": "voucher"
                    }
                  },
                  "Free Shipping": {
                    "value": {
                      "id": "v_gO13ON60WqVmP1DASWuJRF83Xt5KrVNL",
                      "code": "FreeShipping",
                      "campaign": null,
                      "campaign_id": null,
                      "category": null,
                      "category_id": null,
                      "type": "DISCOUNT_VOUCHER",
                      "discount": {
                        "type": "UNIT",
                        "unit_off": 1,
                        "unit_type": "prod_5h1pp1ng",
                        "effect": "ADD_MISSING_ITEMS"
                      },
                      "gift": null,
                      "loyalty_card": null,
                      "start_date": null,
                      "expiration_date": null,
                      "validity_timeframe": null,
                      "validity_day_of_week": null,
                      "active": true,
                      "additional_info": null,
                      "metadata": {},
                      "assets": {
                        "qr": {
                          "id": "U2FsdGVkX19R0AaZSL8eog8GYSGvRcADkJ24Hhr52Awb2KNF11CE7oyTHVBq+S3gexrVR8PxHgEz/jR1Hh2YfM5h0k5CYPD24I/pXJYQVTa1CpXFBrrxVET9QyK48z5hxu2nsHHBsV7g0zK1nIVibsw06db8x1F1zaR7Un9oq6A=",
                          "url": "{{internalVoucherifyURL}}"
                        },
                        "barcode": {
                          "id": "U2FsdGVkX19XHGrCUHCfcSz/VLWmN1UU13QmDsH9ezEYtzHAUAeaLvN12Yv5eBJ7h7R2Og2pNm7mdHxfMR8gBJWEgHuBkodwXch1llhO6hNy9KXebNU+McRx9iEB/DqSzagjaxCiUNB1xitLgXDlUH5cH9naOCOtCHGMrEQW4h0=",
                          "url": "{{internalVoucherifyURL}}"
                        }
                      },
                      "is_referral_code": false,
                      "created_at": "2022-09-16T07:19:53.945Z",
                      "updated_at": "2022-09-16T07:26:35.361Z",
                      "validation_rules_assignments": {
                        "object": "list",
                        "data_ref": "data",
                        "data": [],
                        "total": 0
                      },
                      "redemption": {
                        "quantity": null,
                        "redeemed_quantity": 2,
                        "object": "list",
                        "url": "/v1/vouchers/FreeShipping/redemptions?page=1&limit=10"
                      },
                      "publish": {
                        "object": "list",
                        "count": 0,
                        "url": "/v1/vouchers/FreeShipping/publications?page=1&limit=10"
                      },
                      "object": "voucher"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "update-voucher",
        "tags": [
          "Vouchers"
        ],
        "summary": "Update Voucher",
        "description": "Updates the specified voucher by setting the values of the parameters passed in the request body. Any parameters not provided in the payload will be left unchanged.\nFields other than the ones listed in the request body wont be modified. Even if provided, they will be silently skipped.\nIf you want to change the amount on a gift card or the number of points on a loyalty card, use the Add or remove voucher balance endpoint.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Specify the parameters to be updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VouchersUpdateRequestBody"
              },
              "examples": {
                "Percent Discount": {
                  "value": {
                    "category": "Second",
                    "type": "DISCOUNT_VOUCHER",
                    "discount": {
                      "type": "PERCENT",
                      "percent_off": 45,
                      "percent_off_formula": "IF(ORDER_AMOUNT > 100;CUSTOMER_METADATA(\"age\");CUSTOMER_METADATA(\"age\") / 2)",
                      "amount_limit": 1800,
                      "effect": "APPLY_TO_ORDER"
                    },
                    "start_date": "2020-02-01T00:00:00Z",
                    "expiration_date": "2023-12-31T23:59:59Z",
                    "validity_timeframe": {
                      "duration": "PT2H",
                      "interval": "P3D"
                    },
                    "validity_day_of_week": [
                      0,
                      1,
                      2
                    ],
                    "active": false,
                    "additional_info": "This voucher can be used with other coupons. Please feel free to do so.",
                    "metadata": {
                      "Season": "Winter"
                    }
                  }
                },
                "Gift Card": {
                  "value": {
                    "category": "Existing Customers",
                    "gift": {
                      "amount": 20000,
                      "effect": "APPLY_TO_ITEMS"
                    },
                    "start_date": "2021-01-01T00:00:00Z",
                    "active": false,
                    "additional_info": "This gift card is disabled.",
                    "metadata": {
                      "test": false,
                      "locale": "de-en-pl"
                    }
                  }
                },
                "Loyalty Card": {
                  "value": {
                    "category": "Existing Customers",
                    "loyalty_card": {
                      "points": 20000
                    },
                    "active": false,
                    "additional_info": "This loyalty card is being deactivated and points updated.",
                    "metadata": {
                      "test": false,
                      "locale": "de-en-pl"
                    }
                  }
                },
                "Amount Discount": {
                  "value": {
                    "category": "Existing Customers",
                    "discount": {
                      "amount_off": 2000,
                      "type": "AMOUNT",
                      "effect": "APPLY_TO_ITEMS"
                    },
                    "start_date": "2021-01-01T00:00:00Z"
                  }
                },
                "Fixed Discount": {
                  "value": {
                    "category": "Existing Customers",
                    "discount": {
                      "type": "FIXED",
                      "fixed_amount": 2000,
                      "effect": "APPLY_TO_ITEMS"
                    },
                    "start_date": "2021-01-01T00:00:00Z"
                  }
                },
                "Unit Discount": {
                  "value": {
                    "discount": {
                      "type": "UNIT",
                      "effect": "ADD_MANY_ITEMS",
                      "units": [
                        {
                          "unit_off": 2,
                          "unit_type": "prod_0a9f9ab4ab019a42d5",
                          "effect": "ADD_MISSING_ITEMS"
                        },
                        {
                          "unit_off": 1,
                          "unit_type": "prod_0a9f9aeddb019a42db",
                          "effect": "ADD_MISSING_ITEMS"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "2XX": {
            "description": "Returns the voucher object if the update succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VouchersUpdateResponseBody"
                },
                "examples": {
                  "Percent Discount": {
                    "value": {
                      "id": "v_9PbXndxO3S8xfztwMtIvuMXReonF248m",
                      "code": "percent1",
                      "campaign": null,
                      "campaign_id": null,
                      "category": "Second",
                      "category_id": "cat_0bb81a481615a37b5e",
                      "categories": [
                        {
                          "id": "cat_0bb81a481615a37b5e",
                          "name": "Second",
                          "hierarchy": 2,
                          "created_at": "2022-09-20T05:58:01.561Z",
                          "object": "category"
                        }
                      ],
                      "type": "DISCOUNT_VOUCHER",
                      "discount": {
                        "type": "PERCENT",
                        "amount_limit": 1800,
                        "percent_off": 45,
                        "percent_off_formula": "IF(ORDER_AMOUNT > 100;CUSTOMER_METADATA(\"age\");CUSTOMER_METADATA(\"age\") / 2)",
                        "effect": "APPLY_TO_ORDER"
                      },
                      "gift": null,
                      "loyalty_card": null,
                      "start_date": "2020-02-01T00:00:00.000Z",
                      "expiration_date": "2023-12-31T23:59:59.000Z",
                      "validity_timeframe": {
                        "interval": "P3D",
                        "duration": "PT2H"
                      },
                      "validity_day_of_week": [
                        0,
                        1,
                        2
                      ],
                      "active": false,
                      "additional_info": "This voucher can be used with other coupons. Please feel free to do so.",
                      "metadata": {
                        "Season": "Winter"
                      },
                      "assets": {
                        "qr": {
                          "id": "U2FsdGVkX19MPtNCPjoG/pKloolK+BZH/OCIpjYqj+B6IVJJmTYKeBINcB0JioL/tSw3iuK4FvgF8VyDyTfL26IpzbT81DDOnKeFIDUJraQDJiKxWcrG/RCFsVky4olBJ+GZFb9pLpN5gC/rn0pqYw==",
                          "url": "{{internalVoucherifyURL}}"
                        },
                        "barcode": {
                          "id": "U2FsdGVkX1/J73XXWgMf2BsVM21kpnFLQak5dpGzThYNTYPT62U6q+5RDlh/CXylkTrhegRnWJw1HA7iehT8iUoV4M4cV0KBdp5WgJ3lXeFZcpX3Mpu0T02PRcYbdCIiSO1kO50Y8Hg/heHcshw22Q==",
                          "url": "{{internalVoucherifyURL}}"
                        }
                      },
                      "is_referral_code": false,
                      "created_at": "2022-09-19T14:41:30.976Z",
                      "updated_at": "2022-09-20T06:00:50.202Z",
                      "validation_rules_assignments": {
                        "object": "list",
                        "data_ref": "data",
                        "data": [],
                        "total": 0
                      },
                      "redemption": {
                        "quantity": 101,
                        "redeemed_quantity": 0,
                        "object": "list",
                        "url": "/v1/vouchers/percent1/redemptions?page=1&limit=10"
                      },
                      "publish": {
                        "object": "list",
                        "count": 0,
                        "url": "/v1/vouchers/percent1/publications?page=1&limit=10"
                      },
                      "object": "voucher"
                    }
                  },
                  "Gift Card": {
                    "value": {
                      "id": "v_7xaObxyK5LG62Rp0Xqpez7lqiBFL62pL",
                      "code": "welcomegiftcard",
                      "campaign": null,
                      "campaign_id": null,
                      "category": "Existing Customers",
                      "type": "GIFT_VOUCHER",
                      "discount": null,
                      "gift": {
                        "amount": 20000,
                        "balance": 20000,
                        "effect": "APPLY_TO_ITEMS"
                      },
                      "loyalty_card": null,
                      "start_date": "2021-01-01T00:00:00.000Z",
                      "expiration_date": null,
                      "validity_timeframe": null,
                      "validity_day_of_week": null,
                      "active": false,
                      "additional_info": "This gift card is disabled.",
                      "metadata": {
                        "test": false,
                        "locale": "de-en-pl"
                      },
                      "assets": {
                        "qr": {
                          "id": "U2FsdGVkX1+mTbI2MdzBdMJ7AsOPKvGGgRB7O4oHZv5qq8I3M/OBPJm4PV8bTtBgR+oXOU4Jv1ucbIV7yg1mzC86LVFKjO7Ptnj+63mS9QdHvvILEAulBuZZQ+hZ0HmFXjDl4Quz/kUqGwffKGTziQ==",
                          "url": "{{internalVoucherifyURL}}"
                        },
                        "barcode": {
                          "id": "U2FsdGVkX184KgQ11OfpqB4WkJuH9ushSwZb0YrcN+8OaGPHxBQMiBr2axwnvQlZYv6YhqWtnc5iHByHrkg+6qYHxOLBPRMWCysIhcuUEB57IDhgYUHRPyM2bWjQadVHngGfVGCQ0CUy4PO/71RdMw==",
                          "url": "{{internalVoucherifyURL}}"
                        }
                      },
                      "is_referral_code": false,
                      "created_at": "2022-02-17T09:09:49.665Z",
                      "updated_at": "2022-02-17T11:11:48.071Z",
                      "validation_rules_assignments": {
                        "object": "list",
                        "data_ref": "data",
                        "data": [],
                        "total": 0
                      },
                      "redemption": {
                        "quantity": null,
                        "redeemed_quantity": 0,
                        "redeemed_amount": 0,
                        "object": "list",
                        "url": "/v1/vouchers/welcomegiftcard/redemptions?page=1&limit=10"
                      },
                      "publish": {
                        "object": "list",
                        "count": 0,
                        "url": "/v1/vouchers/welcomegiftcard/publications?page=1&limit=10"
                      },
                      "object": "voucher"
                    }
                  },
                  "Loyalty Card": {
                    "value": {
                      "id": "v_l84t3fy3keMUiOeaHbN1cbTdW8O5eUlm",
                      "code": "welcomeloyalty",
                      "campaign": "Loyalty Campaign",
                      "campaign_id": "camp_E87CubZLZ8eoQt3c4kAEZsx0",
                      "category": "Existing Customers",
                      "type": "LOYALTY_CARD",
                      "discount": null,
                      "gift": null,
                      "loyalty_card": {
                        "points": 20000,
                        "balance": 20000
                      },
                      "start_date": null,
                      "expiration_date": null,
                      "validity_timeframe": null,
                      "validity_day_of_week": null,
                      "active": false,
                      "additional_info": "This loyalty card is being deactivated and points updated.",
                      "metadata": {
                        "test": false,
                        "locale": "de-en-pl"
                      },
                      "assets": {
                        "qr": {
                          "id": "U2FsdGVkX186PCWooyrNsjfI+nb+Y9ziUZ1k7xe+nJQ53Ms1ynNJOX6JXC6SwxS1WDhYwAKX5FxaDoKyuPf5MkQrkeB6u5bSx333ldAyLypNnqwBD2N17S64WFnTqV7eXUk3hS30wDYcz0cQAJFDcQ==",
                          "url": "{{internalVoucherifyURL}}"
                        },
                        "barcode": {
                          "id": "U2FsdGVkX1/FWUg0RbOU7R7Zqg7/8Ba6oYuXrmIl7EdXGgaPMPfpePNGRzxBu4LP2dNEUO9h1Sh37MR1PxOoaemPwlgTDo/1G8dX1JjSppNoaTHhkzk2w4yutNhP7o8cq3ZBbT3TNMTKb2H3fUMc7A==",
                          "url": "{{internalVoucherifyURL}}"
                        }
                      },
                      "is_referral_code": false,
                      "created_at": "2022-02-17T09:12:01.428Z",
                      "updated_at": "2022-02-17T11:20:12.447Z",
                      "validation_rules_assignments": {
                        "object": "list",
                        "data_ref": "data",
                        "data": [],
                        "total": 0
                      },
                      "redemption": {
                        "quantity": null,
                        "redeemed_quantity": 0,
                        "redeemed_points": 0,
                        "object": "list",
                        "url": "/v1/vouchers/welcomeloyalty/redemptions?page=1&limit=10"
                      },
                      "publish": {
                        "object": "list",
                        "count": 0,
                        "url": "/v1/vouchers/welcomeloyalty/publications?page=1&limit=10"
                      },
                      "object": "voucher"
                    }
                  },
                  "Amount Discount": {
                    "value": {
                      "id": "v_jMIjKfG2oJ7vCwIPhsLsbXYGTdPLlbJd",
                      "code": "WelcomeDiscountAmount",
                      "campaign": null,
                      "campaign_id": null,
                      "category": "Existing Customers",
                      "type": "DISCOUNT_VOUCHER",
                      "discount": {
                        "type": "AMOUNT",
                        "amount_off": 2000,
                        "effect": "APPLY_TO_ITEMS"
                      },
                      "gift": null,
                      "loyalty_card": null,
                      "start_date": "2021-01-01T00:00:00.000Z",
                      "expiration_date": "2022-12-31T23:59:59.000Z",
                      "validity_timeframe": {
                        "interval": "P2D",
                        "duration": "PT1H"
                      },
                      "validity_day_of_week": [
                        1,
                        2,
                        3,
                        4,
                        5
                      ],
                      "active": false,
                      "additional_info": "This voucher will remain inactive until enabled.",
                      "metadata": {
                        "test": true,
                        "locale": "de-en"
                      },
                      "assets": {
                        "qr": {
                          "id": "U2FsdGVkX1+TcEE9sZP6aMfAW3NZv9GWlCnUNn+SiK4FIbMRWWjN5hzTR7Yc/73yfldUb6SMgIvUNL551Nz/nPjrMY2iauia1MSWX21MItsSPfy8qccrC+WAlvpGK/1ZklnxYaeKqxTqwSXl7ppSlgcuEejbFiaqEDajvYUZsF4=",
                          "url": "{{internalVoucherifyURL}}"
                        },
                        "barcode": {
                          "id": "U2FsdGVkX1/AhpZMq/h+Phi8JZF9m4qL8/U/Z5AST82jaAOnnhdHdbaGjB1+/0VFIdGBA8w2+3JX5qd61Dfk6yfiLCraVw7lYjQddCHF5SKtJs4hqsLHZevQTCzpZkeIHC3ThsG/fLZTsaNn8tjewd/W4qn/2Cc5NgTdv7fqui4=",
                          "url": "{{internalVoucherifyURL}}"
                        }
                      },
                      "is_referral_code": false,
                      "created_at": "2022-02-17T11:41:05.236Z",
                      "updated_at": "2022-02-17T11:45:29.269Z",
                      "validation_rules_assignments": {
                        "object": "list",
                        "data_ref": "data",
                        "data": [
                          {
                            "id": "asgm_tDN7MJNayjrf1wyn",
                            "rule_id": "val_4j7DCRm2IS59",
                            "related_object_id": "v_jMIjKfG2oJ7vCwIPhsLsbXYGTdPLlbJd",
                            "related_object_type": "voucher",
                            "created_at": "2022-02-17T11:41:05.210Z",
                            "object": "validation_rules_assignment"
                          }
                        ],
                        "total": 1
                      },
                      "redemption": {
                        "quantity": 10,
                        "redeemed_quantity": 0,
                        "object": "list",
                        "url": "/v1/vouchers/WelcomeDiscountAmount/redemptions?page=1&limit=10"
                      },
                      "publish": {
                        "object": "list",
                        "count": 0,
                        "url": "/v1/vouchers/WelcomeDiscountAmount/publications?page=1&limit=10"
                      },
                      "object": "voucher"
                    }
                  },
                  "Fixed Discount": {
                    "value": {
                      "id": "v_B1Pe7QPTjXCHm8IcDkJAQs4g6Zc08UlK",
                      "code": "wou4w1Og",
                      "campaign": "Fixed",
                      "campaign_id": "camp_2jVA6EKGSAe6scyc3i1q9ROD",
                      "category": "Existing Customers",
                      "type": "DISCOUNT_VOUCHER",
                      "discount": {
                        "type": "FIXED",
                        "effect": "APPLY_TO_ITEMS",
                        "fixed_amount": 2000
                      },
                      "gift": null,
                      "loyalty_card": null,
                      "start_date": "2021-01-01T00:00:00.000Z",
                      "expiration_date": null,
                      "validity_timeframe": null,
                      "validity_day_of_week": null,
                      "active": true,
                      "additional_info": null,
                      "metadata": {},
                      "assets": {
                        "qr": {
                          "id": "U2FsdGVkX18zxYPpRIYeGHCoCAp3ZAPEUM0qacHQIIW/82oGOW24bFMA06kahjkZKVA/1mqqJsqh83C29Jhdz82KrRsM2zl9nzplu5hrmn7m0twnf5NQaTTcovEvnBV8Kej9tGhzc/dPwqE+xEKuDg==",
                          "url": "{{internalVoucherifyURL}}"
                        },
                        "barcode": {
                          "id": "U2FsdGVkX18tsK1tz0X2IQWbFHCY4wZBDjoysFt1fBlWo/9bm/HNTci1Q3bSFuIzqIQqlU2TkSacFBgOWGuVG08XboZsqNSXXsAgST9tyoxpaOJ22B2EwWspdvuwJqvZh4PpEyh3BBDS7eOWsr3+Sw==",
                          "url": "{{internalVoucherifyURL}}"
                        }
                      },
                      "is_referral_code": false,
                      "created_at": "2022-02-17T11:54:37.766Z",
                      "updated_at": "2022-02-17T12:04:53.346Z",
                      "validation_rules_assignments": {
                        "object": "list",
                        "data_ref": "data",
                        "data": [],
                        "total": 0
                      },
                      "redemption": {
                        "quantity": 1,
                        "redeemed_quantity": 0,
                        "object": "list",
                        "url": "/v1/vouchers/wou4w1Og/redemptions?page=1&limit=10"
                      },
                      "publish": {
                        "object": "list",
                        "count": 0,
                        "url": "/v1/vouchers/wou4w1Og/publications?page=1&limit=10"
                      },
                      "object": "voucher"
                    }
                  },
                  "Unit Discount": {
                    "value": {
                      "id": "v_cu8nyozvTDA413H17bH5BLha0cjxt7s8",
                      "code": "MultipleUnitTypesUnitDiscount",
                      "campaign": null,
                      "campaign_id": null,
                      "category": "New Customers",
                      "type": "DISCOUNT_VOUCHER",
                      "discount": {
                        "type": "UNIT",
                        "effect": "ADD_MANY_ITEMS",
                        "units": [
                          {
                            "unit_off": 2,
                            "unit_type": "prod_0a9f9ab4ab019a42d5",
                            "effect": "ADD_MISSING_ITEMS"
                          },
                          {
                            "unit_off": 1,
                            "unit_type": "prod_0a9f9aeddb019a42db",
                            "effect": "ADD_MISSING_ITEMS"
                          }
                        ]
                      },
                      "gift": null,
                      "loyalty_card": null,
                      "start_date": "2020-01-01T00:00:00.000Z",
                      "expiration_date": "2022-12-31T23:59:59.000Z",
                      "validity_timeframe": {
                        "interval": "P2D",
                        "duration": "PT1H"
                      },
                      "validity_day_of_week": [
                        1,
                        2,
                        3,
                        4,
                        5
                      ],
                      "active": false,
                      "additional_info": "This voucher will remain inactive until enabled.",
                      "metadata": {
                        "test": true,
                        "locale": "de-en"
                      },
                      "assets": {
                        "qr": {
                          "id": "U2FsdGVkX1+ocJBtZ9NqT97gZ/QTfOz54TAoRoKO3tnCYBtHZWMghEHT0b2aFrPSL1lqMyf6fYy6DH2/DkH5p5Vd8dOozW1LV6wPVatWpa1lZMeMIB0OcARCW3q+3QydoW2KdliLKyksFwumH9C7Fsnj6HTaEbUjSttTZE/be+o=",
                          "url": "{{internalVoucherifyURL}}"
                        },
                        "barcode": {
                          "id": "U2FsdGVkX1+Sly3IYj3EbZFHGGNxV6Ns4j76O8d0kRQe3WriJz5qY6s4GBIwlsdy13AciaQuiVt232HlOlZ4TzGaSSk3+ZMldwBGaTp/fIN9SGBW/NVUtfDOI2sIDLZCBBrdK7WVvtCQQ+1Y+6qClYg/QurJExCFRkDeKpKjDug=",
                          "url": "{{internalVoucherifyURL}}"
                        }
                      },
                      "is_referral_code": false,
                      "created_at": "2022-02-18T06:27:45.619Z",
                      "updated_at": "2022-02-18T06:31:08.630Z",
                      "validation_rules_assignments": {
                        "object": "list",
                        "data_ref": "data",
                        "data": [],
                        "total": 0
                      },
                      "redemption": {
                        "quantity": 5,
                        "redeemed_quantity": 0,
                        "object": "list",
                        "url": "/v1/vouchers/MultipleUnitTypesUnitDiscount/redemptions?page=1&limit=10"
                      },
                      "publish": {
                        "object": "list",
                        "count": 0,
                        "url": "/v1/vouchers/MultipleUnitTypesUnitDiscount/publications?page=1&limit=10"
                      },
                      "object": "voucher"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "delete-voucher",
        "tags": [
          "Vouchers"
        ],
        "summary": "Delete Voucher",
        "description": "Deletes a voucher. This operation cannot be undone. Additionally, this operation removes any redemptions on the voucher.\nIf the force parameter is set to false or not set at all, the voucher will be moved to the bin.",
        "parameters": [
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterBoolean"
            },
            "in": "query",
            "name": "force",
            "description": "If this flag is set to true, the voucher will be removed permanently. If it is set to false or not set at all, the voucher will be moved to the bin. Going forward, the user will be able to create another voucher with exactly the same code."
          }
        ],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns no content if deletion is successful."
          }
        }
      },
      "post": {
        "operationId": "create-voucher",
        "tags": [
          "Vouchers"
        ],
        "summary": "Create Voucher",
        "description": "Create a generic (standalone) vouchers. You can choose to create a GIFT_VOUCHER, a DISCOUNT_VOUCHER, or a LOYALTY_CARD. The code path parameter can use all letters of the English alphabet, Arabic numerals and special characters.\nWhen you create a new voucher, you can specify a type to create it.\nCreating a new voucher will create a new generic (standalone) vouchers if no campaign name or campaign_id is provided. However, if an ID or name of a campaign with the type set to STANDALONE is provided, the voucher will be added to such campaign. In the case of the loyalty card, a campaign name or ID is required.\n🚧 Standalone Vouchers and Campaigns\nIn version [v20241004](https://support.voucherify.io/article/23-whats-new-in-voucherify#v20241004), generic (standalone) voucherss created through the Voucherify dashboard create a campaign for that voucher. However, vouchers created through the API do not have a campaign attached, so the values for campaign and campaign_id are null.\nVoucherify developers work on adding an optional feature to create a generic (standalone) vouchers campaign through the API.\nFollow the [Voucherify Release Notes](https://support.voucherify.io/article/23-whats-new-in-voucherify#v20241004) for more details about released features.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "requestBody": {
          "description": "Specify the details of the voucher that you would like to create.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VouchersCreateWithSpecificCodeRequestBody"
              },
              "examples": {
                "Percentage Discount": {
                  "value": {
                    "category": "New Customers",
                    "type": "DISCOUNT_VOUCHER",
                    "discount": {
                      "percent_off": 10,
                      "type": "PERCENT",
                      "effect": "APPLY_TO_ORDER"
                    },
                    "start_date": "2022-01-01T00:00:00Z",
                    "expiration_date": "2022-12-31T23:59:59Z",
                    "validity_timeframe": {
                      "duration": "PT1H",
                      "interval": "P2D"
                    },
                    "validity_day_of_week": [
                      1,
                      2,
                      3,
                      4,
                      5
                    ],
                    "active": false,
                    "additional_info": "This voucher will remain inactive until enabled.",
                    "redemption": {
                      "quantity": 10
                    },
                    "metadata": {
                      "test": true,
                      "locale": "de-en"
                    },
                    "validation_rules": [
                      "val_4j7DCRm2IS59"
                    ]
                  }
                },
                "Gift Card": {
                  "value": {
                    "category": "New Customers",
                    "type": "GIFT_VOUCHER",
                    "gift": {
                      "amount": 10000,
                      "effect": "APPLY_TO_ORDER"
                    },
                    "start_date": "2022-01-01T00:00:00Z",
                    "active": true,
                    "additional_info": "This gift card is enabled immediately upon creation.",
                    "metadata": {
                      "test": true,
                      "locale": "de-en"
                    }
                  }
                },
                "Loyalty Card": {
                  "value": {
                    "category": "New Customers",
                    "campaign": "camp_E87CubZLZ8eoQt3c4kAEZsx0",
                    "type": "LOYALTY_CARD",
                    "loyalty_card": {
                      "points": 10000
                    },
                    "additional_info": "This loyalty card is enabled immediately upon creation.",
                    "metadata": {
                      "test": true,
                      "locale": "de-en"
                    }
                  }
                },
                "Amount Discount with Formula": {
                  "value": {
                    "category": "First",
                    "type": "DISCOUNT_VOUCHER",
                    "discount": {
                      "type": "AMOUNT",
                      "amount_off": 100,
                      "amount_off_formula": "IF(CUSTOMER_METADATA(\"favorite_brands\") contains \"Nike\";20;CUSTOMER_METADATA(\"age\"))",
                      "effect": "APPLY_TO_ORDER"
                    },
                    "start_date": "2020-01-01T00:00:00Z",
                    "expiration_date": "2022-12-31T23:59:59Z",
                    "validity_timeframe": {
                      "duration": "PT1H",
                      "interval": "P2D"
                    },
                    "validity_day_of_week": [
                      1,
                      2,
                      3,
                      4,
                      5
                    ],
                    "active": true,
                    "additional_info": "This voucher can be used with other coupons.",
                    "redemption": {
                      "quantity": 100
                    },
                    "metadata": {
                      "Season": "Spring"
                    }
                  }
                },
                "Percent Discount with Formula": {
                  "value": {
                    "category": "First",
                    "type": "DISCOUNT_VOUCHER",
                    "discount": {
                      "type": "PERCENT",
                      "percent_off": 40,
                      "percent_off_formula": "IF(CUSTOMER_METADATA(\"favorite_brands\") contains \"Nike\";20;CUSTOMER_METADATA(\"age\"))",
                      "amount_limit": 1700,
                      "effect": "APPLY_TO_ORDER"
                    },
                    "start_date": "2020-01-01T00:00:00Z",
                    "expiration_date": "2022-12-31T23:59:59Z",
                    "validity_timeframe": {
                      "duration": "PT1H",
                      "interval": "P2D"
                    },
                    "validity_day_of_week": [
                      0,
                      1
                    ],
                    "active": true,
                    "additional_info": "This voucher can be used with other coupons.",
                    "redemption": {
                      "quantity": 101
                    },
                    "metadata": {
                      "Season": "Fall"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "2XX": {
            "description": "Returns a voucher object if the call succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VouchersCreateResponseBody"
                },
                "examples": {
                  "Percentage Discount": {
                    "value": {
                      "id": "v_MBOEmHelKwvykVZ8JcT4TE5Kla5IMJyc",
                      "code": "welcome",
                      "campaign": null,
                      "campaign_id": null,
                      "category": "New Customers",
                      "type": "DISCOUNT_VOUCHER",
                      "discount": {
                        "type": "PERCENT",
                        "percent_off": 10,
                        "effect": "APPLY_TO_ORDER"
                      },
                      "gift": null,
                      "loyalty_card": null,
                      "start_date": "2022-01-01T00:00:00.000Z",
                      "expiration_date": "2022-12-31T23:59:59.000Z",
                      "validity_timeframe": {
                        "interval": "P2D",
                        "duration": "PT1H"
                      },
                      "validity_day_of_week": [
                        1,
                        2,
                        3,
                        4,
                        5
                      ],
                      "active": false,
                      "additional_info": "This voucher will remain inactive until enabled.",
                      "metadata": {
                        "test": true,
                        "locale": "de-en"
                      },
                      "assets": {
                        "qr": {
                          "id": "U2FsdGVkX1+by33CNzWu6xXjCrLKRr1+H9K3I9wOSa7idiHrMYJe0HlrWiy7INhaJf1BnaKJjLKcUC+4/hCbILtJ9lHXZWhewG5q5rmx29gK0IH2eRauw1qCZKIlXfqeGTG2T5ftPsEl1D4xf8W2MA==",
                          "url": "{{internalVoucherifyURL}}"
                        },
                        "barcode": {
                          "id": "U2FsdGVkX19wOdFeXYXZ4Xu22L0Ummk03Urz/ZTnXUFeHeehtK4L6RTvNgVeSR+McTZR4DYNLEGydZ+Fo2xEqqM1UWyl8Bx22Pi1CxghADOcy3bAvSca7EEPpvKrCY403UWUDvaO/OEAjvVoiEuaHA==",
                          "url": "{{internalVoucherifyURL}}"
                        }
                      },
                      "is_referral_code": false,
                      "created_at": "2022-02-17T09:05:34.668Z",
                      "updated_at": null,
                      "validation_rules_assignments": {
                        "object": "list",
                        "data_ref": "data",
                        "data": [
                          {
                            "id": "asgm_74F7QZoYbUoljwQO",
                            "rule_id": "val_4j7DCRm2IS59",
                            "related_object_id": "v_MBOEmHelKwvykVZ8JcT4TE5Kla5IMJyc",
                            "related_object_type": "voucher",
                            "created_at": "2022-02-17T09:05:34.642Z",
                            "object": "validation_rules_assignment"
                          }
                        ],
                        "total": 1
                      },
                      "redemption": {
                        "quantity": 10,
                        "redeemed_quantity": 0,
                        "object": "list",
                        "url": "/v1/vouchers/welcome/redemptions?page=1&limit=10"
                      },
                      "publish": {
                        "object": "list",
                        "count": 0,
                        "url": "/v1/vouchers/welcome/publications?page=1&limit=10"
                      },
                      "object": "voucher"
                    }
                  },
                  "Gift Card": {
                    "value": {
                      "id": "v_7xaObxyK5LG62Rp0Xqpez7lqiBFL62pL",
                      "code": "welcomegiftcard",
                      "campaign": null,
                      "campaign_id": null,
                      "category": "New Customers",
                      "type": "GIFT_VOUCHER",
                      "discount": null,
                      "gift": {
                        "amount": 10000,
                        "balance": 10000,
                        "effect": "APPLY_TO_ORDER"
                      },
                      "loyalty_card": null,
                      "start_date": "2022-01-01T00:00:00.000Z",
                      "expiration_date": null,
                      "validity_timeframe": null,
                      "validity_day_of_week": null,
                      "active": true,
                      "additional_info": "This gift card is enabled immediately upon creation.",
                      "metadata": {
                        "test": true,
                        "locale": "de-en"
                      },
                      "assets": {
                        "qr": {
                          "id": "U2FsdGVkX1+mTbI2MdzBdMJ7AsOPKvGGgRB7O4oHZv5qq8I3M/OBPJm4PV8bTtBgR+oXOU4Jv1ucbIV7yg1mzC86LVFKjO7Ptnj+63mS9QdHvvILEAulBuZZQ+hZ0HmFXjDl4Quz/kUqGwffKGTziQ==",
                          "url": "{{internalVoucherifyURL}}"
                        },
                        "barcode": {
                          "id": "U2FsdGVkX184KgQ11OfpqB4WkJuH9ushSwZb0YrcN+8OaGPHxBQMiBr2axwnvQlZYv6YhqWtnc5iHByHrkg+6qYHxOLBPRMWCysIhcuUEB57IDhgYUHRPyM2bWjQadVHngGfVGCQ0CUy4PO/71RdMw==",
                          "url": "{{internalVoucherifyURL}}"
                        }
                      },
                      "is_referral_code": false,
                      "created_at": "2022-02-17T09:09:49.665Z",
                      "updated_at": null,
                      "redemption": {
                        "quantity": null,
                        "redeemed_quantity": 0,
                        "redeemed_amount": 0,
                        "object": "list",
                        "url": "/v1/vouchers/welcomegiftcard/redemptions?page=1&limit=10"
                      },
                      "publish": {
                        "object": "list",
                        "count": 0,
                        "url": "/v1/vouchers/welcomegiftcard/publications?page=1&limit=10"
                      },
                      "object": "voucher"
                    }
                  },
                  "Loyalty Card": {
                    "value": {
                      "id": "v_l84t3fy3keMUiOeaHbN1cbTdW8O5eUlm",
                      "code": "welcomeloyalty",
                      "campaign": "Loyalty Campaign",
                      "campaign_id": "camp_E87CubZLZ8eoQt3c4kAEZsx0",
                      "category": "New Customers",
                      "type": "LOYALTY_CARD",
                      "discount": null,
                      "gift": null,
                      "loyalty_card": {
                        "points": 10000,
                        "balance": 10000
                      },
                      "start_date": null,
                      "expiration_date": null,
                      "validity_timeframe": null,
                      "validity_day_of_week": null,
                      "active": true,
                      "additional_info": "This loyalty card is enabled immediately upon creation.",
                      "metadata": {
                        "test": true,
                        "locale": "de-en"
                      },
                      "assets": {
                        "qr": {
                          "id": "U2FsdGVkX186PCWooyrNsjfI+nb+Y9ziUZ1k7xe+nJQ53Ms1ynNJOX6JXC6SwxS1WDhYwAKX5FxaDoKyuPf5MkQrkeB6u5bSx333ldAyLypNnqwBD2N17S64WFnTqV7eXUk3hS30wDYcz0cQAJFDcQ==",
                          "url": "{{internalVoucherifyURL}}"
                        },
                        "barcode": {
                          "id": "U2FsdGVkX1/FWUg0RbOU7R7Zqg7/8Ba6oYuXrmIl7EdXGgaPMPfpePNGRzxBu4LP2dNEUO9h1Sh37MR1PxOoaemPwlgTDo/1G8dX1JjSppNoaTHhkzk2w4yutNhP7o8cq3ZBbT3TNMTKb2H3fUMc7A==",
                          "url": "{{internalVoucherifyURL}}"
                        }
                      },
                      "is_referral_code": false,
                      "created_at": "2022-02-17T09:12:01.428Z",
                      "updated_at": null,
                      "redemption": {
                        "quantity": null,
                        "redeemed_quantity": 0,
                        "redeemed_points": 0,
                        "object": "list",
                        "url": "/v1/vouchers/welcomeloyalty/redemptions?page=1&limit=10"
                      },
                      "publish": {
                        "object": "list",
                        "count": 0,
                        "url": "/v1/vouchers/welcomeloyalty/publications?page=1&limit=10"
                      },
                      "object": "voucher"
                    }
                  },
                  "Amount Discount with Formula": {
                    "value": {
                      "id": "v_pmjVYKEDFzMqwNroHTlFcI1yKLqUcVVS",
                      "code": "amount1",
                      "campaign": null,
                      "campaign_id": null,
                      "category": "First",
                      "category_id": "cat_0bb343dee3cdb5ec0c",
                      "categories": [
                        {
                          "id": "cat_0bb343dee3cdb5ec0c",
                          "name": "First",
                          "hierarchy": 1,
                          "created_at": "2022-09-16T11:47:19.568Z",
                          "object": "category"
                        }
                      ],
                      "type": "DISCOUNT_VOUCHER",
                      "discount": {
                        "type": "AMOUNT",
                        "amount_off": 100,
                        "amount_off_formula": "IF(CUSTOMER_METADATA(\"favorite_brands\") contains \"Nike\";20;CUSTOMER_METADATA(\"age\"))",
                        "effect": "APPLY_TO_ORDER"
                      },
                      "gift": null,
                      "loyalty_card": null,
                      "start_date": "2020-01-01T00:00:00.000Z",
                      "expiration_date": "2022-12-31T23:59:59.000Z",
                      "validity_timeframe": {
                        "interval": "P2D",
                        "duration": "PT1H"
                      },
                      "validity_day_of_week": [
                        1,
                        2,
                        3,
                        4,
                        5
                      ],
                      "active": true,
                      "additional_info": "This voucher can be used with other coupons.",
                      "metadata": {
                        "Season": "Spring"
                      },
                      "assets": {
                        "qr": {
                          "id": "U2FsdGVkX1+aMFY2yoGxlWkhulvTPR8RlMZtfOaWXnL6PCnegsV73aCTsue+JlUrQsbh+dmp2gJigaVixgvyC7/zUxQjf8tnVT4R79G4LmUkltHMqHsaf++fsP1G07nDl9/2WHh/QVb6z4KP/DX5Dw==",
                          "url": "{{internalVoucherifyURL}}"
                        },
                        "barcode": {
                          "id": "U2FsdGVkX1+X2OimwSCEmGvGrZXXK+b4OrStQELVsHRup8Su+uISCOBz7xWdbpoLVJlSFepcRxSNUUdjcbpgKH7YNfaclrta8Ig6/GK/4YFlh0cPKCGOG5WWyXWzxxmVgVqRdI7KR8/hdaq2FCQeWA==",
                          "url": "{{internalVoucherifyURL}}"
                        }
                      },
                      "is_referral_code": false,
                      "created_at": "2022-09-19T14:22:50.552Z",
                      "updated_at": null,
                      "redemption": {
                        "quantity": 100,
                        "redeemed_quantity": 0,
                        "object": "list",
                        "url": "/v1/vouchers/amount1/redemptions?page=1&limit=10"
                      },
                      "publish": {
                        "object": "list",
                        "count": 0,
                        "url": "/v1/vouchers/amount1/publications?page=1&limit=10"
                      },
                      "object": "voucher"
                    }
                  },
                  "Percent Discount with Formula": {
                    "value": {
                      "id": "v_9PbXndxO3S8xfztwMtIvuMXReonF248m",
                      "code": "percent1",
                      "campaign": null,
                      "campaign_id": null,
                      "category": "First",
                      "category_id": "cat_0bb343dee3cdb5ec0c",
                      "categories": [
                        {
                          "id": "cat_0bb343dee3cdb5ec0c",
                          "name": "First",
                          "hierarchy": 1,
                          "created_at": "2022-09-16T11:47:19.568Z",
                          "object": "category"
                        }
                      ],
                      "type": "DISCOUNT_VOUCHER",
                      "discount": {
                        "type": "PERCENT",
                        "amount_limit": 1700,
                        "percent_off": 40,
                        "percent_off_formula": "IF(CUSTOMER_METADATA(\"favorite_brands\") contains \"Nike\";20;CUSTOMER_METADATA(\"age\"))",
                        "effect": "APPLY_TO_ORDER"
                      },
                      "gift": null,
                      "loyalty_card": null,
                      "start_date": "2020-01-01T00:00:00.000Z",
                      "expiration_date": "2022-12-31T23:59:59.000Z",
                      "validity_timeframe": {
                        "interval": "P2D",
                        "duration": "PT1H"
                      },
                      "validity_day_of_week": [
                        0,
                        1
                      ],
                      "active": true,
                      "additional_info": "This voucher can be used with other coupons.",
                      "metadata": {
                        "Season": "Fall"
                      },
                      "assets": {
                        "qr": {
                          "id": "U2FsdGVkX19MPtNCPjoG/pKloolK+BZH/OCIpjYqj+B6IVJJmTYKeBINcB0JioL/tSw3iuK4FvgF8VyDyTfL26IpzbT81DDOnKeFIDUJraQDJiKxWcrG/RCFsVky4olBJ+GZFb9pLpN5gC/rn0pqYw==",
                          "url": "{{internalVoucherifyURL}}"
                        },
                        "barcode": {
                          "id": "U2FsdGVkX1/J73XXWgMf2BsVM21kpnFLQak5dpGzThYNTYPT62U6q+5RDlh/CXylkTrhegRnWJw1HA7iehT8iUoV4M4cV0KBdp5WgJ3lXeFZcpX3Mpu0T02PRcYbdCIiSO1kO50Y8Hg/heHcshw22Q==",
                          "url": "{{internalVoucherifyURL}}"
                        }
                      },
                      "is_referral_code": false,
                      "created_at": "2022-09-19T14:41:30.976Z",
                      "updated_at": null,
                      "redemption": {
                        "quantity": 101,
                        "redeemed_quantity": 0,
                        "object": "list",
                        "url": "/v1/vouchers/percent1/redemptions?page=1&limit=10"
                      },
                      "publish": {
                        "object": "list",
                        "count": 0,
                        "url": "/v1/vouchers/percent1/publications?page=1&limit=10"
                      },
                      "object": "voucher"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/vouchers/{code}/enable": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterCode"
          },
          "name": "code",
          "in": "path",
          "description": "A **code** that identifies the voucher or a unique voucher ID assigned by Voucherify, i.e. v_TzD19aeNiqGc9LWciMWknyEZT8IW7u4u.",
          "required": true
        }
      ],
      "post": {
        "operationId": "enable-voucher",
        "tags": [
          "Vouchers"
        ],
        "summary": "Enable Voucher",
        "description": "There are various times when youll want to manage a vouchers accessibility. This can be done by two API methods for managing the voucher state - *enable* and *disable*.  \n___\nThe method sets the voucher state to **active**. The voucher can be redeemed - only if the redemption occurs after the start date and the voucher is not expired.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns a voucher object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VouchersEnableResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "id": "v_TzD19aeNiqGc9LWciMWknyEZT8IW7u4u",
                      "code": "2CpRCE2c",
                      "campaign": null,
                      "campaign_id": null,
                      "category": null,
                      "category_id": null,
                      "type": "DISCOUNT_VOUCHER",
                      "discount": {
                        "type": "AMOUNT",
                        "amount_off": 300,
                        "effect": "APPLY_TO_ITEMS_PROPORTIONALLY"
                      },
                      "gift": null,
                      "loyalty_card": null,
                      "start_date": null,
                      "expiration_date": null,
                      "validity_timeframe": null,
                      "validity_day_of_week": null,
                      "active": true,
                      "additional_info": null,
                      "metadata": {},
                      "assets": {
                        "qr": {
                          "id": "U2FsdGVkX1+ro/6HLsfI9E/rz0QEoYv+rcVIEERdbV3gB4104zYyGfpydtSxS1WfpbuiDUfMizQAl1EMzoYsud5XTKBBwUkGkI5IPl84lPz+WQtg4nKpjUS0wcA7AuIbz2zb870YfJO/r5UBS5gCqQ==",
                          "url": "{{internalVoucherifyURL}}}"
                        },
                        "barcode": {
                          "id": "U2FsdGVkX19SWjP3ZUbFh26gCGb4xm3K95jhzfk1XXlKcYlHPtDTYR3/4dYbig4xxRmkgpQLa93Woz9Hq3h4JBQ+aTlftkEzL4D4OSAWi1aWlfxVikrJd6TMFLh9mmbmskodjs4MIdOFlluDWyarlw==",
                          "url": "{{internalVoucherifyURL}}}"
                        }
                      },
                      "is_referral_code": false,
                      "created_at": "2022-09-19T10:06:07.932Z",
                      "updated_at": "2022-09-19T11:54:17.248Z",
                      "validation_rules_assignments": {
                        "object": "list",
                        "data_ref": "data",
                        "data": [
                          {
                            "id": "asgm_HesdqEzt5e9c0T56",
                            "rule_id": "val_gZft0NKZSUWK",
                            "related_object_id": "v_TzD19aeNiqGc9LWciMWknyEZT8IW7u4u",
                            "related_object_type": "voucher",
                            "created_at": "2022-09-19T10:06:07.934Z",
                            "object": "validation_rules_assignment"
                          }
                        ],
                        "total": 1
                      },
                      "redemption": {
                        "quantity": null,
                        "redeemed_quantity": 0,
                        "object": "list",
                        "url": "/v1/vouchers/2CpRCE2c/redemptions?page=1&limit=10"
                      },
                      "publish": {
                        "object": "list",
                        "count": 0,
                        "url": "/v1/vouchers/2CpRCE2c/publications?page=1&limit=10"
                      },
                      "object": "voucher"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/vouchers/{code}/disable": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterCode"
          },
          "name": "code",
          "in": "path",
          "required": true,
          "description": "A **code** that identifies the voucher or a unique voucher ID assigned by Voucherify, i.e. v_TzD19aeNiqGc9LWciMWknyEZT8IW7u4u."
        }
      ],
      "post": {
        "operationId": "disable-voucher",
        "tags": [
          "Vouchers"
        ],
        "summary": "Disable Voucher",
        "description": "There are various times when youll want to manage a vouchers accessibility. This can be done by two API methods for managing the voucher state - *enable* and *disable*.  \n___\nThis method sets the voucher state to **inactive**. The voucher cannot be redeemed.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns a voucher object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VouchersDisableResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "id": "v_TzD19aeNiqGc9LWciMWknyEZT8IW7u4u",
                      "code": "2CpRCE2c",
                      "campaign": null,
                      "campaign_id": null,
                      "category": null,
                      "category_id": null,
                      "type": "DISCOUNT_VOUCHER",
                      "discount": {
                        "type": "AMOUNT",
                        "amount_off": 300,
                        "effect": "APPLY_TO_ITEMS_PROPORTIONALLY"
                      },
                      "gift": null,
                      "loyalty_card": null,
                      "start_date": null,
                      "expiration_date": null,
                      "validity_timeframe": null,
                      "validity_day_of_week": null,
                      "active": false,
                      "additional_info": null,
                      "metadata": {},
                      "assets": {
                        "qr": {
                          "id": "U2FsdGVkX1+ro/6HLsfI9E/rz0QEoYv+rcVIEERdbV3gB4104zYyGfpydtSxS1WfpbuiDUfMizQAl1EMzoYsud5XTKBBwUkGkI5IPl84lPz+WQtg4nKpjUS0wcA7AuIbz2zb870YfJO/r5UBS5gCqQ==",
                          "url": "{{internalVoucherifyURL}}"
                        },
                        "barcode": {
                          "id": "U2FsdGVkX19SWjP3ZUbFh26gCGb4xm3K95jhzfk1XXlKcYlHPtDTYR3/4dYbig4xxRmkgpQLa93Woz9Hq3h4JBQ+aTlftkEzL4D4OSAWi1aWlfxVikrJd6TMFLh9mmbmskodjs4MIdOFlluDWyarlw==",
                          "url": "{{internalVoucherifyURL}}"
                        }
                      },
                      "is_referral_code": false,
                      "created_at": "2022-09-19T10:06:07.932Z",
                      "updated_at": "2022-09-19T11:53:23.452Z",
                      "validation_rules_assignments": {
                        "object": "list",
                        "data_ref": "data",
                        "data": [
                          {
                            "id": "asgm_HesdqEzt5e9c0T56",
                            "rule_id": "val_gZft0NKZSUWK",
                            "related_object_id": "v_TzD19aeNiqGc9LWciMWknyEZT8IW7u4u",
                            "related_object_type": "voucher",
                            "created_at": "2022-09-19T10:06:07.934Z",
                            "object": "validation_rules_assignment"
                          }
                        ],
                        "total": 1
                      },
                      "redemption": {
                        "quantity": null,
                        "redeemed_quantity": 0,
                        "object": "list",
                        "url": "/v1/vouchers/2CpRCE2c/redemptions?page=1&limit=10"
                      },
                      "publish": {
                        "object": "list",
                        "count": 0,
                        "url": "/v1/vouchers/2CpRCE2c/publications?page=1&limit=10"
                      },
                      "object": "voucher"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/vouchers/{code}/balance": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterCode"
          },
          "name": "code",
          "in": "path",
          "required": true,
          "description": "A **code** that identifies the voucher or a unique voucher ID assigned by Voucherify, i.e. v_TzD19aeNiqGc9LWciMWknyEZT8IW7u4u."
        }
      ],
      "post": {
        "operationId": "update-voucher-balance",
        "tags": [
          "Vouchers"
        ],
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "summary": "Adjust Voucher Balance",
        "description": "Add balance to an existing gift card or loyalty card. For loyalty cards, it must be assigned to a holder.",
        "requestBody": {
          "required": true,
          "description": "Provide the amount to be added to/subtracted from the voucher.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VouchersBalanceUpdateRequestBody"
              },
              "examples": {
                "Example": {
                  "value": {
                    "amount": 10000
                  }
                }
              }
            }
          }
        },
        "responses": {
          "2XX": {
            "description": "Returns a balance object if the operation succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VouchersBalanceUpdateResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "amount": 10000,
                      "total": 20100,
                      "balance": 20100,
                      "type": "gift_voucher",
                      "object": "balance",
                      "related_object": {
                        "type": "voucher",
                        "id": "v_abCdEfghI1JKLMNPqRS2Tu3vWXyza4bc"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/vouchers/{code}/transactions": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterCode"
          },
          "name": "code",
          "in": "path",
          "required": true,
          "description": "A **code** that identifies the voucher or a unique voucher ID assigned by Voucherify, i.e. v_TzD19aeNiqGc9LWciMWknyEZT8IW7u4u."
        }
      ],
      "get": {
        "operationId": "list-voucher-transactions",
        "tags": [
          "Vouchers"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterOrderListTransactions"
            },
            "in": "query",
            "name": "order",
            "description": "Sorts the results using one of the filtering options, where the dash - preceding a sorting option means sorting in a descending order."
          },
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterString"
            },
            "in": "query",
            "name": "starting_after_id",
            "description": "A cursor for pagination. It retrieves the transactions starting after a transaction with the given ID."
          }
        ],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "summary": "List Voucher Transactions",
        "description": "List transactions that are associated with credit movements on a gift card or loyalty card.",
        "responses": {
          "2XX": {
            "description": "Returns a dictionary of transaction objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VouchersTransactionsListResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "object": "list",
                      "data_ref": "data",
                      "data": [
                        {
                          "id": "vtx_0c9dccc4d5813e71bd",
                          "source_id": "20230317_subtract_1",
                          "voucher_id": "v_dky7ksKfPX50Wb2Bxvcoeb1xT20b6tcp",
                          "campaign_id": "camp_FNYR4jhqZBM9xTptxDGgeNBV",
                          "source": "API",
                          "reason": "Subtracting credits from card",
                          "type": "CREDITS_REMOVAL",
                          "details": {
                            "balance": {
                              "type": "gift_voucher",
                              "total": 128020,
                              "amount": -2000,
                              "object": "balance",
                              "balance": 121020,
                              "related_object": {
                                "id": "v_dky7ksKfPX50Wb2Bxvcoeb1xT20b6tcp",
                                "type": "voucher"
                              }
                            }
                          },
                          "related_transaction_id": null,
                          "created_at": "2023-03-17T15:50:00.786Z"
                        },
                        {
                          "id": "vtx_0c9dcc920ac0e9ef82",
                          "source_id": "20230317_add_1",
                          "voucher_id": "v_dky7ksKfPX50Wb2Bxvcoeb1xT20b6tcp",
                          "campaign_id": "camp_FNYR4jhqZBM9xTptxDGgeNBV",
                          "source": "API",
                          "reason": "Adding more points to card",
                          "type": "CREDITS_ADDITION",
                          "details": {
                            "balance": {
                              "type": "gift_voucher",
                              "total": 130020,
                              "amount": 20,
                              "object": "balance",
                              "balance": 123020,
                              "related_object": {
                                "id": "v_dky7ksKfPX50Wb2Bxvcoeb1xT20b6tcp",
                                "type": "voucher"
                              }
                            }
                          },
                          "related_transaction_id": null,
                          "created_at": "2023-03-17T15:49:08.768Z"
                        },
                        {
                          "id": "vtx_0c94f018d30bef6689",
                          "source_id": "HRwc0oHz_reward",
                          "voucher_id": "v_dky7ksKfPX50Wb2Bxvcoeb1xT20b6tcp",
                          "campaign_id": "camp_FNYR4jhqZBM9xTptxDGgeNBV",
                          "source": "voucherify-web-ui",
                          "reason": "cash reward",
                          "type": "CREDITS_ADDITION",
                          "details": {
                            "balance": {
                              "type": "gift_voucher",
                              "total": 130000,
                              "amount": 2000,
                              "object": "balance",
                              "balance": 123000,
                              "related_object": {
                                "id": "v_dky7ksKfPX50Wb2Bxvcoeb1xT20b6tcp",
                                "type": "voucher"
                              }
                            }
                          },
                          "related_transaction_id": null,
                          "created_at": "2023-03-10T18:38:02.055Z"
                        },
                        {
                          "id": "vtx_0c94edbbaccbef5db6",
                          "source_id": null,
                          "voucher_id": "v_dky7ksKfPX50Wb2Bxvcoeb1xT20b6tcp",
                          "campaign_id": "camp_FNYR4jhqZBM9xTptxDGgeNBV",
                          "source": null,
                          "reason": null,
                          "type": "CREDITS_REFUND",
                          "details": {
                            "balance": {
                              "type": "gift_voucher",
                              "total": 128000,
                              "amount": 44,
                              "object": "balance",
                              "balance": 121000,
                              "related_object": {
                                "id": "v_dky7ksKfPX50Wb2Bxvcoeb1xT20b6tcp",
                                "type": "voucher"
                              }
                            },
                            "order": {
                              "id": "ord_jj5EzDxDOd2xFPsAJJ18IaZK",
                              "source_id": null
                            },
                            "redemption": {
                              "id": "r_0c94ed583fcafc31c1"
                            },
                            "rollback": {
                              "id": "rr_0c94edbb8d0bef5d9e"
                            }
                          },
                          "related_transaction_id": null,
                          "created_at": "2023-03-10T18:27:42.389Z"
                        },
                        {
                          "id": "vtx_0c94ed584f4afc31da",
                          "source_id": null,
                          "voucher_id": "v_dky7ksKfPX50Wb2Bxvcoeb1xT20b6tcp",
                          "campaign_id": "camp_FNYR4jhqZBM9xTptxDGgeNBV",
                          "source": null,
                          "reason": null,
                          "type": "CREDITS_REDEMPTION",
                          "details": {
                            "balance": {
                              "type": "gift_voucher",
                              "total": 128000,
                              "amount": -44,
                              "object": "balance",
                              "balance": 120956,
                              "related_object": {
                                "id": "v_dky7ksKfPX50Wb2Bxvcoeb1xT20b6tcp",
                                "type": "voucher"
                              }
                            },
                            "order": {
                              "id": "ord_jj5EzDxDOd2xFPsAJJ18IaZK",
                              "source_id": null
                            },
                            "redemption": {
                              "id": "r_0c94ed583fcafc31c1"
                            }
                          },
                          "related_transaction_id": null,
                          "created_at": "2023-03-10T18:26:00.640Z"
                        },
                        {
                          "id": "vtx_0c94e9432c4afc2134",
                          "source_id": "HRwc0oHz_removal",
                          "voucher_id": "v_dky7ksKfPX50Wb2Bxvcoeb1xT20b6tcp",
                          "campaign_id": "camp_FNYR4jhqZBM9xTptxDGgeNBV",
                          "source": "voucherify-web-ui",
                          "reason": "removal",
                          "type": "CREDITS_REMOVAL",
                          "details": {
                            "balance": {
                              "type": "gift_voucher",
                              "total": 128000,
                              "amount": -2000,
                              "object": "balance",
                              "balance": 121000,
                              "related_object": {
                                "id": "v_dky7ksKfPX50Wb2Bxvcoeb1xT20b6tcp",
                                "type": "voucher"
                              }
                            }
                          },
                          "related_transaction_id": null,
                          "created_at": "2023-03-10T18:08:10.413Z"
                        },
                        {
                          "id": "vtx_0c94e8100f8afc1c6c",
                          "source_id": null,
                          "voucher_id": "v_dky7ksKfPX50Wb2Bxvcoeb1xT20b6tcp",
                          "campaign_id": "camp_FNYR4jhqZBM9xTptxDGgeNBV",
                          "source": null,
                          "reason": null,
                          "type": "CREDITS_REDEMPTION",
                          "details": {
                            "balance": {
                              "type": "gift_voucher",
                              "total": 130000,
                              "amount": -7000,
                              "object": "balance",
                              "balance": 123000,
                              "related_object": {
                                "id": "v_dky7ksKfPX50Wb2Bxvcoeb1xT20b6tcp",
                                "type": "voucher"
                              }
                            },
                            "order": {
                              "id": "ord_qZX3pEt5rFf5W23qRMDQcVt9",
                              "source_id": null
                            },
                            "redemption": {
                              "id": "r_0c94e80fda4afc1c59"
                            }
                          },
                          "related_transaction_id": null,
                          "created_at": "2023-03-10T18:02:55.935Z"
                        },
                        {
                          "id": "vtx_0c94e6b82a4bef406c",
                          "source_id": "walmart",
                          "voucher_id": "v_dky7ksKfPX50Wb2Bxvcoeb1xT20b6tcp",
                          "campaign_id": "camp_FNYR4jhqZBM9xTptxDGgeNBV",
                          "source": "voucherify-web-ui",
                          "reason": "return",
                          "type": "CREDITS_ADDITION",
                          "details": {
                            "balance": {
                              "type": "gift_voucher",
                              "total": 130000,
                              "amount": 5000,
                              "object": "balance",
                              "balance": 130000,
                              "related_object": {
                                "id": "v_dky7ksKfPX50Wb2Bxvcoeb1xT20b6tcp",
                                "type": "voucher"
                              }
                            }
                          },
                          "related_transaction_id": null,
                          "created_at": "2023-03-10T17:57:03.758Z"
                        }
                      ],
                      "has_more": true,
                      "more_starting_after": "vtx_0c94e6b82a4bef406c"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/vouchers/{code}/transactions/export": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterCode"
          },
          "example": "GIFT-CARD-1",
          "name": "code",
          "in": "path",
          "required": true,
          "description": "A **code** that identifies the voucher or a unique voucher ID assigned by Voucherify, i.e. v_TzD19aeNiqGc9LWciMWknyEZT8IW7u4u."
        }
      ],
      "post": {
        "operationId": "export-voucher-transactions",
        "tags": [
          "Vouchers"
        ],
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "summary": "Export Voucher Transactions",
        "description": "Export transactions that are associated with credit movements on a gift card or loyalty card.\n\n\n",
        "requestBody": {
          "description": "Specify the parameters for the camapign transaction export.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VouchersTransactionsExportCreateRequestBody"
              },
              "examples": {
                "Example": {
                  "value": {
                    "parameters": {
                      "order": "-created_at",
                      "fields": [
                        "id",
                        "type",
                        "source_id",
                        "reason",
                        "balance",
                        "amount",
                        "created_at",
                        "voucher_id",
                        "campaign_id",
                        "details",
                        "source"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "2XX": {
            "description": "Returns an export object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VouchersTransactionsExportCreateResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "id": "exp_ARi2UbRjgfrHQJoVcKFrBUgA",
                      "object": "export",
                      "created_at": "2023-05-16T08:30:21.496Z",
                      "status": "SCHEDULED",
                      "channel": "API",
                      "exported_object": "voucher_transactions",
                      "parameters": {
                        "order": "-created_at",
                        "fields": [
                          "id",
                          "type",
                          "source_id",
                          "reason",
                          "balance",
                          "amount",
                          "created_at",
                          "voucher_id",
                          "campaign_id",
                          "details",
                          "related_transaction_id",
                          "source"
                        ],
                        "filters": {
                          "voucher_id": {
                            "conditions": {
                              "$in": [
                                "HRwc0oHz"
                              ]
                            }
                          }
                        }
                      },
                      "result": null,
                      "user_id": null
                    }
                  },
                  "No request body": {
                    "value": {
                      "id": "exp_ExEE5A6OIK4tssuNswr5O6SU",
                      "object": "export",
                      "created_at": "2023-03-21T13:34:57.034Z",
                      "status": "SCHEDULED",
                      "channel": "API",
                      "exported_object": "voucher_transactions",
                      "parameters": {
                        "filters": {
                          "voucher_id": {
                            "conditions": {
                              "$in": [
                                "HRwc0oHz"
                              ]
                            }
                          }
                        }
                      },
                      "result": null,
                      "user_id": null
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/vouchers/import": {
      "post": {
        "operationId": "import-vouchers",
        "tags": [
          "Vouchers"
        ],
        "summary": "Import Vouchers",
        "description": "Import generic (standalone) voucherss and gift cards into the repository.\n 📘 Important notes\n - **Start and expiration dates** need to be provided in compliance with the ISO 8601 norms. For example, 2020-03-11T09:00:00.000Z.\n - Custom code attributes (not supported by-default) need to be added as code **metadata**.\n - You **cannot import the same codes** to a single Voucherify Project.\nAny parameters not provided in the payload will be left blank or null.\nFor both **standalone discount vouchers and gift cards**, you can import the following fields:  \n- code\n- category\n- active\n- type\n- start_date\n- expiration_date\n- redemption.quantity\n- additional_info\n- metadata\nFor **gift cards**, you can also import the following field:\n- gift.amount\nFor **discount vouchers**, you can import the discount object. The object will slightly vary depending on the type of discount. Each discount type **requires** the type to be defined in the import.\n\n\nFields other than the ones listed above wont be imported. Even if provided, they will be silently skipped.\nThis API request starts a process that affects Voucherify data in bulk. \nIn case of small jobs (like bulk update) the request is put into a queue and processed once every other bulk request placed in the queue prior to this request is finished. However, when the job takes a longer time (like vouchers generation) then it is processed in small portions in a round-robin fashion. When there is a list of vouchers generation scheduled, then they will all have the IN_PROGRESS status shortly. This way, small jobs added just after scheduling big jobs of the same type will be processed in a short time window. \nThe result will return the async ID. You can verify the status of your request via this API request.\n🚧 Standalone Vouchers and Campaigns\nIn version [v20241004](https://support.voucherify.io/article/23-whats-new-in-voucherify#v20241004), generic (standalone) voucherss created through the Voucherify dashboard create a campaign for that voucher. However, vouchers imported through the dashboard in the Vouchers section or through the API do not have a campaign attached, so the values for campaign and campaign_id are null.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "requestBody": {
          "required": true,
          "description": "The request body is an array of objects. Each object contains details about a specific voucher. ",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VouchersImportCreateRequestBody"
              },
              "examples": {
                "Example": {
                  "value": [
                    {
                      "code": "PROMO-CODE30OFF-NO-EFFECT",
                      "category": "new customer acquisition",
                      "type": "DISCOUNT_VOUCHER",
                      "active": true,
                      "discount": {
                        "amount_off": 3000,
                        "type": "AMOUNT"
                      },
                      "start_date": "2020-12-01T23:00:00Z",
                      "expiration_date": "2023-12-19T23:00:00Z",
                      "redemption": {
                        "quantity": 1
                      },
                      "metadata": {
                        "unit": "EUR"
                      },
                      "additional_info": "secret-code1"
                    },
                    {
                      "code": "PROMO-CODE30-PERCENT-NO-EFFECT",
                      "type": "DISCOUNT_VOUCHER",
                      "active": false,
                      "discount": {
                        "percent_off": 30,
                        "type": "PERCENT"
                      },
                      "start_date": "2020-12-10T23:00:00Z",
                      "expiration_date": "2023-12-31T23:00:00Z",
                      "redemption": {
                        "quantity": 1
                      },
                      "metadata": {
                        "unit": "EUR"
                      },
                      "additional_info": "secret-code2"
                    },
                    {
                      "code": "GIFT-CARD-100",
                      "type": "GIFT_VOUCHER",
                      "active": true,
                      "category": "new customer acquisition",
                      "gift": {
                        "amount": 10000
                      },
                      "start_date": "2020-12-10T23:00:00Z",
                      "expiration_date": "2023-12-31T23:00:00Z",
                      "redemption": {
                        "quantity": 5
                      },
                      "metadata": {
                        "unit": "EUR"
                      },
                      "additional_info": "secret-GIFT-code2"
                    },
                    {
                      "code": "PROMO-CODE1-PERCENT-EFFECT-ORDER",
                      "type": "DISCOUNT_VOUCHER",
                      "active": false,
                      "discount": {
                        "percent_off": 30,
                        "type": "PERCENT",
                        "effect": "APPLY_TO_ORDER"
                      },
                      "start_date": "2020-12-10T23:00:00Z",
                      "expiration_date": "2023-12-31T23:00:00Z",
                      "redemption": {
                        "quantity": 1
                      },
                      "metadata": {
                        "unit": "EUR"
                      },
                      "additional_info": "secret-code2"
                    },
                    {
                      "code": "PROMO-CODE2-PERCENT-EFFECT-ITEM",
                      "type": "DISCOUNT_VOUCHER",
                      "active": false,
                      "discount": {
                        "percent_off": 30,
                        "type": "PERCENT",
                        "effect": "APPLY_TO_ITEMS"
                      },
                      "start_date": "2020-12-10T23:00:00Z",
                      "expiration_date": "2023-12-31T23:00:00Z",
                      "redemption": {
                        "quantity": 1
                      },
                      "metadata": {
                        "unit": "EUR"
                      },
                      "additional_info": "secret-code2"
                    },
                    {
                      "code": "PROMO-CODE1-PERCENT-NO-EFFECT-REDEEMED-QUANTITY-ATTRIBUTE-DOESNT-GET-PASSED",
                      "type": "DISCOUNT_VOUCHER",
                      "active": false,
                      "discount": {
                        "percent_off": 30,
                        "type": "PERCENT"
                      },
                      "start_date": "2020-12-10T23:00:00Z",
                      "expiration_date": "2023-12-31T23:00:00Z",
                      "redemption": {
                        "quantity": 1,
                        "redeemed_quantity": 1
                      },
                      "metadata": {
                        "unit": "EUR"
                      },
                      "additional_info": "secret-code2"
                    },
                    {
                      "code": "PROMO-CODE1-AMOUNT-EFFECT-ITEMS-PROPORTIONALLY",
                      "type": "DISCOUNT_VOUCHER",
                      "active": false,
                      "discount": {
                        "amount_off": 30,
                        "type": "AMOUNT",
                        "effect": "APPLY_TO_ITEMS_PROPORTIONALLY"
                      },
                      "start_date": "2020-12-10T23:00:00Z",
                      "expiration_date": "2023-12-31T23:00:00Z",
                      "redemption": {
                        "quantity": 1
                      },
                      "metadata": {
                        "unit": "EUR"
                      },
                      "additional_info": "secret-code2"
                    },
                    {
                      "code": "PROMO-CODE1-FIXED-EFFECT-ORDER",
                      "type": "DISCOUNT_VOUCHER",
                      "active": false,
                      "discount": {
                        "fixed_amount": 30,
                        "type": "FIXED",
                        "effect": "APPLY_TO_ORDER"
                      },
                      "start_date": "2020-12-10T23:00:00Z",
                      "expiration_date": "2023-12-31T23:00:00Z",
                      "redemption": {
                        "quantity": 1
                      },
                      "metadata": {
                        "unit": "EUR"
                      },
                      "additional_info": "secret-code2"
                    },
                    {
                      "code": "PROMO-CODE1-UNIT-SINGLE-ITEM-EFFECT-MISSING",
                      "type": "DISCOUNT_VOUCHER",
                      "active": false,
                      "discount": {
                        "unit_off": 1,
                        "unit_type": "prod_0a9f9aeddb019a42db",
                        "type": "UNIT",
                        "effect": "ADD_MISSING_ITEMS"
                      },
                      "start_date": "2020-12-10T23:00:00Z",
                      "expiration_date": "2023-12-31T23:00:00Z",
                      "redemption": {
                        "quantity": 1
                      },
                      "metadata": {
                        "unit": "EUR"
                      },
                      "additional_info": "secret-code2"
                    },
                    {
                      "code": "PROMO-CODE2-UNIT-MULTIPLE-ITEMS",
                      "type": "DISCOUNT_VOUCHER",
                      "active": true,
                      "discount": {
                        "type": "UNIT",
                        "effect": "ADD_MANY_ITEMS",
                        "units": [
                          {
                            "unit_off": 1,
                            "unit_type": "prod_0a9f9aeddb019a42db",
                            "effect": "ADD_MISSING_ITEMS"
                          },
                          {
                            "unit_off": 1,
                            "unit_type": "prod_0a9f9aeddb019a42db",
                            "effect": "ADD_NEW_ITEMS"
                          }
                        ]
                      },
                      "start_date": "2020-12-10T23:00:00Z",
                      "expiration_date": "2023-12-31T23:00:00Z",
                      "redemption": {
                        "quantity": 1
                      },
                      "metadata": {
                        "unit": "EUR"
                      },
                      "additional_info": "secret-code2"
                    },
                    {
                      "code": "PROMO-CODE1-SHIPPING",
                      "type": "DISCOUNT_VOUCHER",
                      "active": false,
                      "discount": {
                        "type": "UNIT",
                        "unit_off": 1,
                        "unit_type": "prod_5h1pp1ng",
                        "effect": "ADD_MISSING_ITEMS"
                      },
                      "start_date": "2020-12-10T23:00:00Z",
                      "expiration_date": "2023-12-31T23:00:00Z",
                      "redemption": {
                        "quantity": 1
                      },
                      "metadata": {
                        "unit": "EUR"
                      },
                      "additional_info": "secret-code2"
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "2XX": {
            "description": "Returns ID of the scheduled async action. The response informs you that your request has been accepted and vouchers will be added to the repository asynchronously. To check the import status and result, copy the `async_action_id` from the response and pass it using the <!-- [Get Async Action](OpenAPI.json/paths/~1async-actions~1{asyncActionId}/get) -->[Get Async Action](ref:get-async-action) endpoint.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VouchersImportCreateResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "async_action_id": "aa_0aac93c6af84485df3"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/vouchers/importCSV": {
      "post": {
        "operationId": "import-vouchers-using-csv",
        "tags": [
          "Vouchers"
        ],
        "summary": "Import Vouchers using CSV",
        "description": "Import generic (standalone) voucherss into the repository using a CSV file.\nThe CSV file has to include headers in the first line. All properties listed in the file headers that cannot be mapped to standard voucher fields will be added to the metadata object.  \nYou can find an example CSV file [here](https://support.voucherify.io/article/45-import-codes-and-share-them-digitally#coupons).\n___\n 📘 Standard voucher fields mapping\n - Go to the import vouchers endpoint to see all standard CSV fields description (body params section).\n - Supported CSV file headers: Code,Voucher Type,Value,Discount Type,Category,Start Date,Expiration Date,Redemption Limit,Redeemed Quantity, Redeemed Amount,Active,Additional Info,Custom Metadata Property Name\n- **Start and expiration dates** need to be provided in compliance with the ISO 8601 standard. For example, 2020-03-11T09:00:00.000Z.  \n    - YYYY-MM-DD\n    - YYYY-MM-DDTHH\n    - YYYY-MM-DDTHH:mm\n    - YYYY-MM-DDTHH:mm:ss\n    - YYYY-MM-DDTHH:mm:ssZ\n    - YYYY-MM-DDTHH:mm:ssZ\n    - YYYY-MM-DDTHH:mm:ss.SSSZ\n - Custom code attributes (not supported by-default) need to be added as code **metadata**.\n - You **cannot import the same codes** to a single Voucherify project.\n - You can, however, upload the same codes to update them.\n 📘 Categories\n In the structure representing your data, you can define a category that the voucher belongs to. You can later use the category of a voucher to group and search by specific criteria in the Dashboard and using the List Vouchers endpoint.\nThis API request starts a process that affects Voucherify data in bulk. \nIn case of small jobs (like bulk update) the request is put into a queue and processed once every other bulk request placed in the queue prior to this request is finished. However, when the job takes a longer time (like vouchers generation) then it is processed in small portions in a round-robin fashion. When there is a list of vouchers generation scheduled, then they will all have the IN_PROGRESS status shortly. This way, small jobs added just after scheduling big jobs of the same type will be processed in a short time window. \nThe result will return the async ID. You can verify the status of your request via this API request.\nYou can pass the webhooks_enable true parameter to trigger a webhook sendout for created or updated vouchers. Configure the respective webhooks in Project settings. For updated webhooks, a webhook is sent even if the voucher hasnt been changed in the CSV file.\n🚧 Generic (standalone) vouchers and campaigns\nIn version [v20241004](https://support.voucherify.io/article/23-whats-new-in-voucherify#v20241004), generic (standalone) voucherss created through the Voucherify dashboard create a campaign for that voucher. However, vouchers imported through the dashboard in the Vouchers section or through the API do not have a campaign attached, so the values for campaign and campaign_id are null.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "requestBody": {
          "description": "The file path is stored in the form file header.",
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/VouchersImportCSVRequestBody"
              }
            }
          }
        },
        "responses": {
          "2XX": {
            "description": "Returns ID of the scheduled async action. The response informs you that your request has been accepted and vouchers will be added to the repository asynchronously. To check the import status and result, copy the `async_action_id` from the **response** and pass it using the <!-- [Get Async Action](OpenAPI.json/paths/~1async-actions~1{asyncActionId}/get) -->[Get Async Action](ref:get-async-action) endpoint.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VouchersImportCsvCreateResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "async_action_id": "aa_0a875d56c805df6601"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/vouchers/bulk/async": {
      "post": {
        "operationId": "update-vouchers-in-bulk",
        "tags": [
          "Vouchers"
        ],
        "summary": "Update Vouchers in Bulk",
        "description": "Updates specific metadata parameters for each code, respectively, in one asynchronous operation.\nThe request can include up to **10 MB** of data.\nUpserts are not supported.\n 🚧\n \n Currently, only **metadata** updates are supported.\nThe response returns a unique asynchronous action ID. Use this ID in the query paramater of the GET Async Action endpoint to check, e.g.:\n- The status of your request (in queue, in progress, done, or failed)\n- Resources that failed to be updated\n- The report file with details about the update\nThis API request starts a process that affects Voucherify data in bulk. In the case of small jobs (like bulk update), the request is put into a queue and processed when every other bulk request placed in the queue prior to this request is finished.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "requestBody": {
          "required": true,
          "description": "List the codes to be updated with the metadata key/value pairs for that code.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VouchersUpdateInBulkRequestBody"
              },
              "examples": {
                "Example": {
                  "value": [
                    {
                      "code": "example_code",
                      "metadata": {
                        "lang": "en",
                        "test": false,
                        "MetadataTest": "Update metadata",
                        "update_value": 1,
                        "next_update_date": "2022-11-11T09:00:00.000Z"
                      }
                    },
                    {
                      "code": "example_code2",
                      "metadata": {
                        "lang": "pl",
                        "test": false,
                        "MetadataTest": "Update metadata",
                        "update_value": 2
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "2XX": {
            "description": "Returns the ID of the scheduled asynchronous action. The response informs you that the request has been accepted and the resources will be updated in the repository asynchronously. To check the status and result, copy the `async_action_id` from the response and use it as a query parameter in the [GET Async Action](ref:get-async-action) endpoint.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VouchersUpdateInBulkResponseBody"
                },
                "examples": {
                  "Example": {
                    "$ref": "#/components/examples/res_async_actions"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/vouchers/metadata/async": {
      "post": {
        "operationId": "update-vouchers-metadata-in-bulk",
        "tags": [
          "Vouchers"
        ],
        "summary": "Update Vouchers' Metadata in Bulk",
        "description": "Updates metadata parameters for a list of codes. Every resource in the list will receive the metadata defined in the request.\nThe request can include up to **10 MB** of data.\nUpserts are not supported.\nThe response returns a unique asynchronous action ID. Use this ID in the query paramater of the GET Async Action endpoint to check, e.g.:\n- The status of your request (in queue, in progress, done, or failed)\n- Resources that failed to be updated\n- The report file with details about the update\nThis API request starts a process that affects Voucherify data in bulk. In the case of small jobs (like bulk update), the request is put into a queue and processed when every other bulk request placed in the queue prior to this request is finished.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "requestBody": {
          "required": true,
          "description": "List the codes of the vouchers you would like to update with the metadata key/value pairs.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VouchersMetadataUpdateInBulkRequestBody"
              },
              "examples": {
                "Example": {
                  "value": {
                    "codes": [
                      "PROMO-CODE810",
                      "PROMO-CODE726"
                    ],
                    "metadata": {
                      "lang": "en",
                      "authorized_internally": true
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "2XX": {
            "description": "Returns the ID of the scheduled asynchronous action. The response informs you that the request has been accepted and the resources will be updated in the repository asynchronously. To check the status and result, copy the `async_action_id` from the response and use it as a query parameter in the [GET Async Action](ref:get-async-action) endpoint.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VouchersMetadataUpdateInBulkResponseBody"
                },
                "examples": {
                  "Example": {
                    "$ref": "#/components/examples/res_async_actions"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/vouchers/{code}/sessions/{sessionKey}": {
      "parameters": [
        {
          "name": "code",
          "in": "path",
          "schema": {
            "$ref": "#/components/schemas/ParameterCode"
          },
          "description": "A **code** that identifies the voucher or a unique voucher ID assigned by Voucherify.",
          "required": true
        },
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterString"
          },
          "example": "ssn_yQGMTeKBSw8OOuFPwlBEjzGy8d8VA9Ts",
          "name": "sessionKey",
          "in": "path",
          "required": true,
          "description": "A unique session identifier."
        }
      ],
      "delete": {
        "operationId": "release-validation-session",
        "tags": [
          "Vouchers"
        ],
        "summary": "Release Validation Session",
        "description": "Manually release a validation session that has been set up for the voucher. This method undoes the actions that are explained in the Locking validation session guide. \n 📘 Release session in the Dashboard\n You can also use the [Validations Manager](https://support.voucherify.io/article/16-dashboard-sections#sessions) in the Dashboard to unlock sessions.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns no content if the validation session was released successfully."
          }
        }
      }
    },
    "/v1/campaigns": {
      "post": {
        "operationId": "create-campaign",
        "tags": [
          "Campaigns"
        ],
        "summary": "Create Campaign",
        "description": "Method to create a batch of vouchers aggregated in one campaign. You can choose a variety of voucher types and define a unique pattern for generating codes.  \n 📘 Global uniqueness\n All campaign codes are unique across the whole project. Voucherify will not allow you to generate 2 campaigns with the same coupon code.  \n 🚧 Code generation status\n This is an asynchronous action; you cant read or modify a newly created campaign until the code generation is completed. See the creation_status field in the campaign object description.\n🚧 Standalone Vouchers and Campaigns\nIn version [v20241004](https://support.voucherify.io/article/23-whats-new-in-voucherify#v20241004), generic (standalone) voucherss created through the Voucherify dashboard create a campaign for that voucher. However, you cannot create a standalone discount or gift voucher campaign with the type: STANDALONE through the API. Voucherify developers work on adding that feature.\nFollow the [Voucherify Release Notes](https://support.voucherify.io/article/23-whats-new-in-voucherify#v20241004) for more details about released features.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "requestBody": {
          "description": "Specify the details of the campaign that you would like to create.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CampaignsCreateRequestBody"
              },
              "examples": {
                "Discount Campaign": {
                  "value": {
                    "name": "Discount Campaign 4",
                    "campaign_type": "DISCOUNT_COUPONS",
                    "join_once": true,
                    "type": "AUTO_UPDATE",
                    "start_date": "2020-08-16T00:00:00Z",
                    "expiration_date": "2023-12-26T00:00:00Z",
                    "vouchers_count": 3,
                    "voucher": {
                      "type": "DISCOUNT_VOUCHER",
                      "discount": {
                        "percent_off": 10,
                        "type": "PERCENT"
                      },
                      "redemption": {
                        "quantity": 10
                      },
                      "code_config": {
                        "pattern": "10OFF-#######"
                      }
                    },
                    "validity_timeframe": {
                      "interval": "P2D",
                      "duration": "P1D"
                    },
                    "validity_day_of_week": [
                      0,
                      1,
                      2
                    ],
                    "activity_duration_after_publishing": "P24D",
                    "use_voucher_metadata_schema": false,
                    "metadata": {
                      "region": "AMER"
                    }
                  }
                },
                "Gift Card Campaign": {
                  "value": {
                    "name": "Gift Card Campaign",
                    "campaign_type": "GIFT_VOUCHERS",
                    "join_once": true,
                    "type": "AUTO_UPDATE",
                    "start_date": "2020-08-16T00:00:00Z",
                    "expiration_date": "2023-12-26T00:00:00Z",
                    "vouchers_count": 2,
                    "voucher": {
                      "type": "GIFT_VOUCHER",
                      "gift": {
                        "amount": 1000,
                        "effect": "APPLY_TO_ORDER"
                      },
                      "redemption": {
                        "quantity": 10
                      },
                      "code_config": {
                        "pattern": "GIFT-CARD-#######"
                      }
                    },
                    "validity_timeframe": {
                      "interval": "P2D",
                      "duration": "P1D"
                    },
                    "validity_day_of_week": [
                      0,
                      1,
                      2
                    ],
                    "activity_duration_after_publishing": "P24D",
                    "use_voucher_metadata_schema": false,
                    "metadata": {
                      "region": "APAC"
                    }
                  }
                },
                "Loyalty Program": {
                  "value": {
                    "name": "Loyalty Campaign",
                    "campaign_type": "LOYALTY_PROGRAM",
                    "auto_join": true,
                    "join_once": true,
                    "type": "AUTO_UPDATE",
                    "start_date": "2020-08-16T00:00:00Z",
                    "expiration_date": "2023-12-26T00:00:00Z",
                    "vouchers_count": 2,
                    "voucher": {
                      "type": "LOYALTY_CARD",
                      "loyalty_card": {
                        "points": 1000,
                        "expiration_rules": {
                          "period_type": "MONTH",
                          "period_value": 3,
                          "rounding_type": "END_OF_YEAR"
                        }
                      },
                      "redemption": {
                        "quantity": 10
                      },
                      "code_config": {
                        "pattern": "LOYALTY-CARD-#######"
                      }
                    },
                    "validity_timeframe": {
                      "interval": "P2D",
                      "duration": "P1D"
                    },
                    "validity_day_of_week": [
                      0,
                      1,
                      2
                    ],
                    "activity_duration_after_publishing": "P24D",
                    "use_voucher_metadata_schema": false,
                    "metadata": {
                      "region": "APAC"
                    }
                  }
                },
                "Promotion": {
                  "value": {
                    "name": "Promotion - API - 4",
                    "campaign_type": "PROMOTION",
                    "type": "STATIC",
                    "use_voucher_metadata_schema": false,
                    "start_date": "2020-08-16T00:00:00Z",
                    "expiration_date": "2023-12-26T00:00:00Z",
                    "active": false,
                    "promotion": {
                      "tiers": [
                        {
                          "name": "Percent Discount",
                          "banner": "Get 40% off",
                          "action": {
                            "discount": {
                              "type": "PERCENT",
                              "percent_off": 40,
                              "effect": "APPLY_TO_ORDER"
                            }
                          },
                          "metadata": {
                            "level": "B"
                          },
                          "active": false,
                          "start_date": "2022-09-21T00:00:00.000Z",
                          "expiration_date": "2022-09-30T00:00:00.000Z",
                          "validity_timeframe": {
                            "interval": "P2D",
                            "duration": "P1D"
                          },
                          "validity_day_of_week": [
                            1,
                            2,
                            3,
                            4
                          ],
                          "validation_rules": [
                            "val_q8qUBMOh5qIQ"
                          ]
                        },
                        {
                          "name": "Order more than $100",
                          "banner": "Get $30 off",
                          "action": {
                            "discount": {
                              "type": "AMOUNT",
                              "amount_off": 3000,
                              "effect": "APPLY_TO_ORDER"
                            }
                          },
                          "metadata": {
                            "level": "A"
                          },
                          "active": false,
                          "start_date": "2022-09-21T00:00:00.000Z",
                          "expiration_date": "2022-09-30T00:00:00.000Z",
                          "validity_timeframe": {
                            "interval": "P2D",
                            "duration": "P1D"
                          },
                          "validity_day_of_week": [
                            1,
                            2,
                            3,
                            4
                          ],
                          "validation_rules": [
                            "val_q8qUBMOh5qIQ"
                          ]
                        }
                      ]
                    },
                    "validity_timeframe": {
                      "interval": "P2D",
                      "duration": "P1D"
                    },
                    "validity_day_of_week": [
                      0,
                      1,
                      2
                    ],
                    "activity_duration_after_publishing": "P24D",
                    "metadata": {
                      "region": "APAC"
                    }
                  }
                },
                "Referral Program": {
                  "value": {
                    "name": "Referral Campaign 2",
                    "campaign_type": "REFERRAL_PROGRAM",
                    "join_once": true,
                    "type": "AUTO_UPDATE",
                    "start_date": "2020-08-16T00:00:00Z",
                    "expiration_date": "2023-12-26T00:00:00Z",
                    "vouchers_count": 2,
                    "referral_program": {
                      "conversion_event_type": "redemption"
                    },
                    "voucher": {
                      "type": "DISCOUNT_VOUCHER",
                      "discount": {
                        "type": "PERCENT",
                        "percent_off": 45,
                        "effect": "APPLY_TO_ORDER",
                        "amount_limit": 15
                      },
                      "redemption": {
                        "quantity": 10
                      },
                      "code_config": {
                        "pattern": "REFERRAL-CODE-#######"
                      },
                      "is_referral_code": true
                    },
                    "validity_timeframe": {
                      "interval": "P2D",
                      "duration": "P1D"
                    },
                    "validity_day_of_week": [
                      0,
                      1,
                      2
                    ],
                    "activity_duration_after_publishing": "P24D",
                    "use_voucher_metadata_schema": false,
                    "metadata": {
                      "region": "APAC"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "2XX": {
            "description": "Returns a campaign object if the call succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignsCreateResponseBody"
                },
                "examples": {
                  "Discount Campaign": {
                    "value": {
                      "id": "camp_NdBCAQk1AAZcMcv6kt6X164Q",
                      "name": "Discount Campaign 4",
                      "campaign_type": "DISCOUNT_COUPONS",
                      "type": "AUTO_UPDATE",
                      "voucher": {
                        "type": "DISCOUNT_VOUCHER",
                        "discount": {
                          "type": "PERCENT",
                          "percent_off": 10
                        },
                        "redemption": {
                          "quantity": 10
                        },
                        "code_config": {
                          "length": 7,
                          "charset": "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ",
                          "pattern": "10OFF-#######"
                        },
                        "is_referral_code": false,
                        "start_date": "2020-08-16T00:00:00.000Z",
                        "expiration_date": "2023-12-26T00:00:00.000Z",
                        "validity_timeframe": {
                          "interval": "P2D",
                          "duration": "P1D"
                        }
                      },
                      "auto_join": false,
                      "join_once": true,
                      "use_voucher_metadata_schema": false,
                      "start_date": "2020-08-16T00:00:00.000Z",
                      "expiration_date": "2023-12-26T00:00:00.000Z",
                      "validity_timeframe": {
                        "interval": "P2D",
                        "duration": "P1D"
                      },
                      "validity_day_of_week": [
                        0,
                        1,
                        2
                      ],
                      "activity_duration_after_publishing": "P24D",
                      "vouchers_count": 0,
                      "active": true,
                      "metadata": {
                        "region": "AMER"
                      },
                      "created_at": "2022-09-21T09:25:49.617Z",
                      "category": "First",
                      "creation_status": "IN_PROGRESS",
                      "vouchers_generation_status": "IN_PROGRESS",
                      "protected": false,
                      "validation_rules_assignments": {
                        "object": "list",
                        "data_ref": "data",
                        "data": [],
                        "total": 0
                      },
                      "category_id": "cat_0bb343dee3cdb5ec0c",
                      "categories": [
                        {
                          "id": "cat_0bb343dee3cdb5ec0c",
                          "name": "First",
                          "hierarchy": 1,
                          "created_at": "2022-09-16T11:47:19.568Z",
                          "object": "category"
                        }
                      ],
                      "object": "campaign"
                    }
                  },
                  "Gift Card Campaign": {
                    "value": {
                      "id": "camp_B2Gx83JsSbmvj05MOwxYbNm6",
                      "name": "Gift Card Campaign",
                      "campaign_type": "GIFT_VOUCHERS",
                      "type": "AUTO_UPDATE",
                      "voucher": {
                        "type": "GIFT_VOUCHER",
                        "gift": {
                          "amount": 1000,
                          "effect": "APPLY_TO_ORDER"
                        },
                        "redemption": {
                          "quantity": 10
                        },
                        "code_config": {
                          "length": 7,
                          "charset": "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ",
                          "pattern": "GIFT-CARD-#######"
                        },
                        "is_referral_code": false,
                        "start_date": "2020-08-16T00:00:00.000Z",
                        "expiration_date": "2023-12-26T00:00:00.000Z",
                        "validity_timeframe": {
                          "interval": "P2D",
                          "duration": "P1D"
                        }
                      },
                      "auto_join": false,
                      "join_once": true,
                      "use_voucher_metadata_schema": false,
                      "start_date": "2020-08-16T00:00:00.000Z",
                      "expiration_date": "2023-12-26T00:00:00.000Z",
                      "validity_timeframe": {
                        "interval": "P2D",
                        "duration": "P1D"
                      },
                      "validity_day_of_week": [
                        0,
                        1,
                        2
                      ],
                      "activity_duration_after_publishing": "P24D",
                      "vouchers_count": 0,
                      "active": true,
                      "metadata": {
                        "region": "APAC"
                      },
                      "created_at": "2022-09-21T09:31:16.266Z",
                      "category": "First",
                      "creation_status": "IN_PROGRESS",
                      "vouchers_generation_status": "IN_PROGRESS",
                      "protected": false,
                      "validation_rules_assignments": {
                        "object": "list",
                        "data_ref": "data",
                        "data": [],
                        "total": 0
                      },
                      "category_id": "cat_0bb343dee3cdb5ec0c",
                      "categories": [
                        {
                          "id": "cat_0bb343dee3cdb5ec0c",
                          "name": "First",
                          "hierarchy": 1,
                          "created_at": "2022-09-16T11:47:19.568Z",
                          "object": "category"
                        }
                      ],
                      "object": "campaign"
                    }
                  },
                  "Loyalty Program": {
                    "value": {
                      "id": "camp_FZL4iTTdZw36nZOoXYQ172fQ",
                      "name": "Loyalty Campaign",
                      "campaign_type": "LOYALTY_PROGRAM",
                      "type": "AUTO_UPDATE",
                      "voucher": {
                        "type": "LOYALTY_CARD",
                        "loyalty_card": {
                          "points": 1000,
                          "expiration_rules": {
                            "period_type": "MONTH",
                            "period_value": 3,
                            "rounding_type": "END_OF_YEAR"
                          }
                        },
                        "redemption": {
                          "quantity": 10
                        },
                        "code_config": {
                          "length": 7,
                          "charset": "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ",
                          "pattern": "LOYALTY-CARD-#######"
                        },
                        "is_referral_code": false,
                        "start_date": "2020-08-16T00:00:00.000Z",
                        "expiration_date": "2023-12-26T00:00:00.000Z",
                        "validity_timeframe": {
                          "interval": "P2D",
                          "duration": "P1D"
                        }
                      },
                      "auto_join": true,
                      "join_once": true,
                      "use_voucher_metadata_schema": false,
                      "start_date": "2020-08-16T00:00:00.000Z",
                      "expiration_date": "2023-12-26T00:00:00.000Z",
                      "validity_timeframe": {
                        "interval": "P2D",
                        "duration": "P1D"
                      },
                      "validity_day_of_week": [
                        0,
                        1,
                        2
                      ],
                      "activity_duration_after_publishing": "P24D",
                      "vouchers_count": 0,
                      "active": true,
                      "metadata": {
                        "region": "APAC"
                      },
                      "created_at": "2022-09-21T09:39:45.479Z",
                      "category": "First",
                      "creation_status": "IN_PROGRESS",
                      "vouchers_generation_status": "IN_PROGRESS",
                      "protected": false,
                      "validation_rules_assignments": {
                        "object": "list",
                        "data_ref": "data",
                        "data": [],
                        "total": 0
                      },
                      "category_id": "cat_0bb343dee3cdb5ec0c",
                      "categories": [
                        {
                          "id": "cat_0bb343dee3cdb5ec0c",
                          "name": "First",
                          "hierarchy": 1,
                          "created_at": "2022-09-16T11:47:19.568Z",
                          "object": "category"
                        }
                      ],
                      "object": "campaign"
                    }
                  },
                  "Promotion": {
                    "value": {
                      "id": "camp_ru1B8mQjY75KxXupt7RPZcb8",
                      "name": "Promotion - API - 4",
                      "campaign_type": "PROMOTION",
                      "type": "STATIC",
                      "auto_join": false,
                      "join_once": false,
                      "use_voucher_metadata_schema": false,
                      "start_date": "2020-08-16T00:00:00.000Z",
                      "expiration_date": "2023-12-26T00:00:00.000Z",
                      "validity_timeframe": {
                        "interval": "P2D",
                        "duration": "P1D"
                      },
                      "validity_day_of_week": [
                        0,
                        1,
                        2
                      ],
                      "activity_duration_after_publishing": "P24D",
                      "active": true,
                      "metadata": {
                        "region": "APAC"
                      },
                      "created_at": "2022-09-23T08:54:38.281Z",
                      "category": "First",
                      "creation_status": "DONE",
                      "vouchers_generation_status": "DONE",
                      "protected": false,
                      "promotion": {
                        "object": "list",
                        "data_ref": "tiers",
                        "tiers": [
                          {
                            "id": "promo_M4OfmMgSUyN12JPAw3l4hWjD",
                            "created_at": "2022-09-23T08:54:38.286Z",
                            "name": "Percent Discount",
                            "banner": "Get 40% off",
                            "action": {
                              "discount": {
                                "type": "PERCENT",
                                "percent_off": 40,
                                "effect": "APPLY_TO_ORDER"
                              }
                            },
                            "metadata": {
                              "level": "B"
                            },
                            "hierarchy": 1,
                            "promotion_id": "camp_ru1B8mQjY75KxXupt7RPZcb8",
                            "campaign": {
                              "id": "camp_ru1B8mQjY75KxXupt7RPZcb8",
                              "start_date": "2020-08-16T00:00:00.000Z",
                              "expiration_date": "2023-12-26T00:00:00.000Z",
                              "validity_timeframe": {
                                "interval": "P2D",
                                "duration": "P1D"
                              },
                              "validity_day_of_week": [
                                0,
                                1,
                                2
                              ],
                              "active": true,
                              "category_id": "cat_0bb343dee3cdb5ec0c",
                              "object": "campaign"
                            },
                            "campaign_id": "camp_ru1B8mQjY75KxXupt7RPZcb8",
                            "active": false,
                            "start_date": "2022-09-21T00:00:00.000Z",
                            "expiration_date": "2022-09-30T00:00:00.000Z",
                            "validity_timeframe": {
                              "interval": "P2D",
                              "duration": "P1D"
                            },
                            "validity_day_of_week": [
                              1,
                              2,
                              3,
                              4
                            ],
                            "summary": {
                              "redemptions": {
                                "total_redeemed": 0
                              },
                              "orders": {
                                "total_amount": 0,
                                "total_discount_amount": 0
                              }
                            },
                            "object": "promotion_tier",
                            "validation_rule_assignments": {
                              "object": "list",
                              "data_ref": "data",
                              "data": [
                                {
                                  "id": "asgm_dr3oXeN98YfiTF60",
                                  "rule_id": "val_q8qUBMOh5qIQ",
                                  "related_object_id": "promo_M4OfmMgSUyN12JPAw3l4hWjD",
                                  "related_object_type": "promotion_tier",
                                  "created_at": "2022-09-23T08:54:38.286Z",
                                  "object": "validation_rules_assignment"
                                }
                              ],
                              "total": 1
                            }
                          },
                          {
                            "id": "promo_uMSxvzhxXDp3Ijs3659npqb2",
                            "created_at": "2022-09-23T08:54:38.314Z",
                            "name": "Order more than $100",
                            "banner": "Get $30 off",
                            "action": {
                              "discount": {
                                "type": "AMOUNT",
                                "amount_off": 3000,
                                "effect": "APPLY_TO_ORDER"
                              }
                            },
                            "metadata": {
                              "level": "A"
                            },
                            "hierarchy": 2,
                            "promotion_id": "camp_ru1B8mQjY75KxXupt7RPZcb8",
                            "campaign": {
                              "id": "camp_ru1B8mQjY75KxXupt7RPZcb8",
                              "start_date": "2020-08-16T00:00:00.000Z",
                              "expiration_date": "2023-12-26T00:00:00.000Z",
                              "validity_timeframe": {
                                "interval": "P2D",
                                "duration": "P1D"
                              },
                              "validity_day_of_week": [
                                0,
                                1,
                                2
                              ],
                              "active": true,
                              "category_id": "cat_0bb343dee3cdb5ec0c",
                              "object": "campaign"
                            },
                            "campaign_id": "camp_ru1B8mQjY75KxXupt7RPZcb8",
                            "active": false,
                            "start_date": "2022-09-21T00:00:00.000Z",
                            "expiration_date": "2022-09-30T00:00:00.000Z",
                            "validity_timeframe": {
                              "interval": "P2D",
                              "duration": "P1D"
                            },
                            "validity_day_of_week": [
                              1,
                              2,
                              3,
                              4
                            ],
                            "summary": {
                              "redemptions": {
                                "total_redeemed": 0
                              },
                              "orders": {
                                "total_amount": 0,
                                "total_discount_amount": 0
                              }
                            },
                            "object": "promotion_tier",
                            "validation_rule_assignments": {
                              "object": "list",
                              "data_ref": "data",
                              "data": [
                                {
                                  "id": "asgm_jgJlWms7GVK59iNR",
                                  "rule_id": "val_q8qUBMOh5qIQ",
                                  "related_object_id": "promo_uMSxvzhxXDp3Ijs3659npqb2",
                                  "related_object_type": "promotion_tier",
                                  "created_at": "2022-09-23T08:54:38.314Z",
                                  "object": "validation_rules_assignment"
                                }
                              ],
                              "total": 1
                            }
                          }
                        ],
                        "total": 2,
                        "has_more": false
                      },
                      "category_id": "cat_0bb343dee3cdb5ec0c",
                      "categories": [
                        {
                          "id": "cat_0bb343dee3cdb5ec0c",
                          "name": "First",
                          "hierarchy": 1,
                          "created_at": "2022-09-16T11:47:19.568Z",
                          "object": "category"
                        }
                      ],
                      "object": "campaign"
                    }
                  },
                  "Referral Program": {
                    "value": {
                      "id": "camp_N8rztKAqOYIdFxNLr9eNIjyB",
                      "name": "Referral Campaign 2",
                      "campaign_type": "REFERRAL_PROGRAM",
                      "type": "AUTO_UPDATE",
                      "voucher": {
                        "type": "DISCOUNT_VOUCHER",
                        "discount": {
                          "type": "PERCENT",
                          "amount_limit": 15,
                          "percent_off": 45,
                          "effect": "APPLY_TO_ORDER"
                        },
                        "redemption": {
                          "quantity": 10
                        },
                        "code_config": {
                          "length": 7,
                          "charset": "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ",
                          "pattern": "REFERRAL-CODE-#######"
                        },
                        "is_referral_code": true,
                        "start_date": "2020-08-16T00:00:00.000Z",
                        "expiration_date": "2023-12-26T00:00:00.000Z",
                        "validity_timeframe": {
                          "interval": "P2D",
                          "duration": "P1D"
                        }
                      },
                      "referral_program": {
                        "conversion_event_type": "redemption"
                      },
                      "auto_join": false,
                      "join_once": true,
                      "use_voucher_metadata_schema": false,
                      "start_date": "2020-08-16T00:00:00.000Z",
                      "expiration_date": "2023-12-26T00:00:00.000Z",
                      "validity_timeframe": {
                        "interval": "P2D",
                        "duration": "P1D"
                      },
                      "validity_day_of_week": [
                        0,
                        1,
                        2
                      ],
                      "activity_duration_after_publishing": "P24D",
                      "vouchers_count": 0,
                      "active": true,
                      "metadata": {
                        "region": "APAC"
                      },
                      "created_at": "2022-09-23T09:06:41.757Z",
                      "category": "First",
                      "creation_status": "IN_PROGRESS",
                      "vouchers_generation_status": "IN_PROGRESS",
                      "protected": false,
                      "validation_rules_assignments": {
                        "object": "list",
                        "data_ref": "data",
                        "data": [],
                        "total": 0
                      },
                      "category_id": "cat_0bb343dee3cdb5ec0c",
                      "categories": [
                        {
                          "id": "cat_0bb343dee3cdb5ec0c",
                          "name": "First",
                          "hierarchy": 1,
                          "created_at": "2022-09-16T11:47:19.568Z",
                          "object": "category"
                        }
                      ],
                      "object": "campaign"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "operationId": "list-campaigns",
        "tags": [
          "Campaigns"
        ],
        "summary": "List Campaigns",
        "description": "Retrieve a list of campaigns in a project. \nThe campaigns are returned sorted by creation date, with the most recent campaigns appearing first.  \nWhen you get a list of campaigns, you can optionally specify query parameters to customize the amount of campaigns returned per call using limit, which page of campaigns to return using page, sort the campaigns using the order query parameter and filter the results by the campaign_type.\nThis method will return an error when trying to return a limit of more than 100 campaigns.",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/campaign_type"
          },
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterExpandListCampaigns"
            },
            "in": "query",
            "name": "expand",
            "description": "Includes an expanded categories object in the response. If the [Areas and Stores](https://support.voucherify.io/article/623-areas-and-stores) Enterprise feature is enabled, add access_settings_assignments to return assigned areas and stores."
          },
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterOrderListCampaigns"
            },
            "in": "query",
            "name": "order",
            "description": "Sorts the results using one of the filtering options, where the dash - preceding a sorting option means sorting in a descending order."
          },
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterFiltersListCampaigns"
            },
            "in": "query",
            "name": "filters",
            "description": "Filters the results by various campaign properties.",
            "style": "deepObject",
            "explode": true
          }
        ],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns a dictionary with a `campaign` property that contains an array of campaigns. The maximum number of campaigns returned is determined by the `limit` query parameter. Each entry in the array is a separate campaign object. If no more campaigns are available, the resulting array on a given page will be empty.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignsListResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "object": "list",
                      "data_ref": "campaigns",
                      "campaigns": [
                        {
                          "id": "camp_SibPsDRKQvg3SUtptgPZCNZb",
                          "name": "Voucher Metadata",
                          "campaign_type": "DISCOUNT_COUPONS",
                          "type": "AUTO_UPDATE",
                          "voucher": {
                            "type": "DISCOUNT_VOUCHER",
                            "discount": {
                              "type": "PERCENT",
                              "amount_limit": 4400,
                              "percent_off": 30,
                              "effect": "APPLY_TO_ORDER"
                            },
                            "redemption": {
                              "quantity": null
                            },
                            "code_config": {
                              "length": 9,
                              "charset": "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ",
                              "pattern": "#########",
                              "prefix": "Discount-",
                              "postfix": "YY"
                            },
                            "is_referral_code": false,
                            "start_date": "2022-09-20T00:00:00.000Z",
                            "expiration_date": "2022-09-30T00:00:00.000Z",
                            "validity_timeframe": {
                              "interval": "P3D",
                              "duration": "P1D"
                            }
                          },
                          "auto_join": false,
                          "join_once": false,
                          "use_voucher_metadata_schema": false,
                          "start_date": "2022-09-20T00:00:00.000Z",
                          "expiration_date": "2022-09-30T00:00:00.000Z",
                          "validity_timeframe": {
                            "interval": "P3D",
                            "duration": "P1D"
                          },
                          "validity_day_of_week": [
                            1,
                            2,
                            3,
                            4
                          ],
                          "activity_duration_after_publishing": "P24D",
                          "vouchers_count": 1,
                          "active": true,
                          "metadata": {
                            "region": "AMER"
                          },
                          "created_at": "2022-09-20T09:32:29.530Z",
                          "creation_status": "DONE",
                          "vouchers_generation_status": "DONE",
                          "protected": false,
                          "category_id": null,
                          "object": "campaign"
                        },
                        {
                          "id": "camp_HgsbCKauXmEoPnnh8aas0ISe",
                          "name": "Static Campaign",
                          "campaign_type": "DISCOUNT_COUPONS",
                          "type": "STATIC",
                          "voucher": {
                            "type": "DISCOUNT_VOUCHER",
                            "discount": {
                              "type": "AMOUNT",
                              "amount_off": 3000,
                              "effect": "APPLY_TO_ORDER"
                            },
                            "redemption": {
                              "quantity": 1
                            },
                            "code_config": {
                              "length": 8,
                              "charset": "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ",
                              "pattern": "########"
                            },
                            "is_referral_code": false
                          },
                          "auto_join": false,
                          "join_once": true,
                          "use_voucher_metadata_schema": true,
                          "vouchers_count": 1,
                          "active": true,
                          "metadata": {},
                          "created_at": "2022-09-20T07:52:34.499Z",
                          "updated_at": "2022-09-20T11:38:13.501Z",
                          "creation_status": "DONE",
                          "vouchers_generation_status": "DONE",
                          "protected": false,
                          "category_id": null,
                          "object": "campaign"
                        },
                        {
                          "id": "camp_f7fBbQxUuTN7dI7tGOo5XMDA",
                          "name": "Loyalty Program Fall 2022",
                          "campaign_type": "LOYALTY_PROGRAM",
                          "type": "AUTO_UPDATE",
                          "voucher": {
                            "type": "LOYALTY_CARD",
                            "loyalty_card": {
                              "points": 0,
                              "expiration_rules": {
                                "period_type": "MONTH",
                                "period_value": 7,
                                "rounding_type": "END_OF_YEAR"
                              }
                            },
                            "redemption": {
                              "quantity": null
                            },
                            "code_config": {
                              "length": 8,
                              "charset": "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ",
                              "pattern": "########",
                              "prefix": "LOYALTY-CARD-"
                            },
                            "is_referral_code": false
                          },
                          "auto_join": true,
                          "join_once": true,
                          "use_voucher_metadata_schema": true,
                          "vouchers_count": 1,
                          "active": true,
                          "metadata": {},
                          "created_at": "2022-09-19T07:56:22.103Z",
                          "creation_status": "DONE",
                          "vouchers_generation_status": "DONE",
                          "protected": false,
                          "category_id": "cat_0bb343dee3cdb5ec0c",
                          "object": "campaign"
                        },
                        {
                          "id": "camp_4tHsQEDUOER6PeW8SoMdnHH6",
                          "name": "Dynamic Discounts",
                          "campaign_type": "DISCOUNT_COUPONS",
                          "type": "AUTO_UPDATE",
                          "voucher": {
                            "type": "DISCOUNT_VOUCHER",
                            "discount": {
                              "type": "PERCENT",
                              "percent_off": 5,
                              "percent_off_formula": "IF(ORDER_AMOUNT > 300;15;5)",
                              "effect": "APPLY_TO_ORDER"
                            },
                            "redemption": {
                              "quantity": null
                            },
                            "code_config": {
                              "length": 8,
                              "charset": "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ",
                              "pattern": "########",
                              "prefix": "DYNAMIC-"
                            },
                            "is_referral_code": false
                          },
                          "auto_join": false,
                          "join_once": false,
                          "use_voucher_metadata_schema": true,
                          "vouchers_count": 1,
                          "active": true,
                          "metadata": {
                            "marketing_text": "Purchases above $300 are eligible for a 15% discount."
                          },
                          "created_at": "2022-07-12T15:12:02.575Z",
                          "updated_at": "2022-07-20T10:48:05.617Z",
                          "category": "test",
                          "creation_status": "DONE",
                          "vouchers_generation_status": "DONE",
                          "protected": false,
                          "category_id": "cat_0b688929a2476386a8",
                          "object": "campaign"
                        },
                        {
                          "id": "camp_JlsseNSDO7l4neFtev6p6945",
                          "name": "$20 OFF Entire Order",
                          "campaign_type": "DISCOUNT_COUPONS",
                          "type": "AUTO_UPDATE",
                          "voucher": {
                            "type": "DISCOUNT_VOUCHER",
                            "discount": {
                              "type": "AMOUNT",
                              "amount_off": 2000,
                              "effect": "APPLY_TO_ORDER"
                            },
                            "redemption": {
                              "quantity": null
                            },
                            "code_config": {
                              "length": 8,
                              "charset": "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ",
                              "pattern": "########",
                              "prefix": "$20OFFORDER-"
                            },
                            "is_referral_code": false
                          },
                          "auto_join": false,
                          "join_once": false,
                          "use_voucher_metadata_schema": true,
                          "vouchers_count": 1,
                          "active": true,
                          "metadata": {},
                          "created_at": "2022-07-11T09:43:36.057Z",
                          "creation_status": "DONE",
                          "vouchers_generation_status": "DONE",
                          "protected": false,
                          "category_id": null,
                          "object": "campaign"
                        },
                        {
                          "id": "camp_Uj3cNbWSgt7Zl4AyHM7Sa5Qk",
                          "name": "3% OFF Entire Order",
                          "campaign_type": "DISCOUNT_COUPONS",
                          "type": "AUTO_UPDATE",
                          "voucher": {
                            "type": "DISCOUNT_VOUCHER",
                            "discount": {
                              "type": "PERCENT",
                              "percent_off": 3,
                              "effect": "APPLY_TO_ORDER"
                            },
                            "redemption": {
                              "quantity": null
                            },
                            "code_config": {
                              "length": 8,
                              "charset": "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ",
                              "pattern": "########",
                              "prefix": "3%OFFORDER-"
                            },
                            "is_referral_code": false
                          },
                          "auto_join": false,
                          "join_once": false,
                          "use_voucher_metadata_schema": true,
                          "vouchers_count": 1,
                          "active": true,
                          "metadata": {},
                          "created_at": "2022-07-11T09:41:12.087Z",
                          "creation_status": "DONE",
                          "vouchers_generation_status": "DONE",
                          "protected": false,
                          "category_id": null,
                          "object": "campaign"
                        }
                      ],
                      "total": 6
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/campaigns/{campaignId}": {
      "parameters": [
        {
          "in": "path",
          "name": "campaignId",
          "description": "You can either pass the campaign ID, which was assigned by Voucherify, or the name of the campaign as the path parameter value.",
          "schema": {
            "$ref": "#/components/schemas/ParameterCampaignId"
          },
          "required": true
        }
      ],
      "get": {
        "operationId": "get-campaign",
        "tags": [
          "Campaigns"
        ],
        "summary": "Get Campaign",
        "description": "Retrieves the campaign with the given campaign ID or campaign name.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns a campaign object if a valid identifier was provided.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignsGetResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "id": "camp_JlsseNSDO7l4neFtev6p6945",
                      "name": "$20 OFF Entire Order",
                      "campaign_type": "DISCOUNT_COUPONS",
                      "type": "AUTO_UPDATE",
                      "voucher": {
                        "type": "DISCOUNT_VOUCHER",
                        "discount": {
                          "type": "AMOUNT",
                          "amount_off": 2000,
                          "effect": "APPLY_TO_ORDER"
                        },
                        "redemption": {
                          "quantity": null
                        },
                        "code_config": {
                          "length": 8,
                          "charset": "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ",
                          "pattern": "########",
                          "prefix": "$20OFFORDER-"
                        },
                        "is_referral_code": false
                      },
                      "auto_join": false,
                      "join_once": false,
                      "use_voucher_metadata_schema": true,
                      "vouchers_count": 1,
                      "active": true,
                      "metadata": {},
                      "created_at": "2022-07-11T09:43:36.057Z",
                      "creation_status": "DONE",
                      "vouchers_generation_status": "DONE",
                      "protected": false,
                      "validation_rules_assignments": {
                        "object": "list",
                        "data_ref": "data",
                        "data": [],
                        "total": 0
                      },
                      "category_id": null,
                      "object": "campaign"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "update-campaign",
        "tags": [
          "Campaigns"
        ],
        "summary": "Update Campaign",
        "description": "Updates the specified campaign by setting the values of the parameters passed in the request body. Any parameters not provided in the payload will be left unchanged. \nFields other than the ones listed in the request body wont be modified. Even if provided, they will be silently skipped.   \n ## Vouchers will be affected\n This method will update vouchers aggregated in the campaign. It will affect all vouchers that are not published or redeemed yet.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "requestBody": {
          "description": "Specify the campaign parameters to be updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CampaignsUpdateRequestBody"
              },
              "examples": {
                "Example": {
                  "value": {
                    "description": "New description"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "2XX": {
            "description": "Returns the campaign object if the update succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignsUpdateResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "id": "camp_FZL4iTTdZw36nZOoXYQ172fQ",
                      "name": "Loyalty Campaign",
                      "campaign_type": "LOYALTY_PROGRAM",
                      "type": "AUTO_UPDATE",
                      "voucher": {
                        "type": "LOYALTY_CARD",
                        "loyalty_card": {
                          "points": 1000,
                          "expiration_rules": {
                            "period_type": "MONTH",
                            "period_value": 3,
                            "rounding_type": "END_OF_YEAR"
                          }
                        },
                        "redemption": {
                          "quantity": 10
                        },
                        "code_config": {
                          "length": 7,
                          "charset": "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ",
                          "pattern": "LOYALTY-CARD-#######"
                        },
                        "is_referral_code": false,
                        "start_date": "2020-08-16T00:00:00.000Z",
                        "expiration_date": "2023-12-26T00:00:00.000Z",
                        "validity_timeframe": {
                          "interval": "P2D",
                          "duration": "P1D"
                        }
                      },
                      "auto_join": false,
                      "join_once": false,
                      "use_voucher_metadata_schema": false,
                      "description": "New description",
                      "start_date": "2020-08-16T00:00:00.000Z",
                      "expiration_date": "2023-12-26T00:00:00.000Z",
                      "validity_timeframe": {
                        "interval": "P2D",
                        "duration": "P1D"
                      },
                      "validity_day_of_week": [
                        0,
                        1,
                        2
                      ],
                      "activity_duration_after_publishing": "P24D",
                      "vouchers_count": 2,
                      "active": true,
                      "metadata": {
                        "region": "APAC"
                      },
                      "created_at": "2022-09-21T09:39:45.479Z",
                      "updated_at": "2022-09-23T09:47:00.205Z",
                      "category": "First",
                      "creation_status": "MODIFYING",
                      "vouchers_generation_status": "MODIFYING",
                      "protected": false,
                      "validation_rules_assignments": {
                        "object": "list",
                        "data_ref": "data",
                        "data": [],
                        "total": 0
                      },
                      "category_id": "cat_0bb343dee3cdb5ec0c",
                      "categories": [
                        {
                          "id": "cat_0bb343dee3cdb5ec0c",
                          "name": "First",
                          "hierarchy": 1,
                          "created_at": "2022-09-16T11:47:19.568Z",
                          "object": "category"
                        }
                      ],
                      "object": "campaign"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "delete-campaign",
        "tags": [
          "Campaigns"
        ],
        "summary": "Delete Campaign",
        "description": "Deletes a campaign and all related vouchers. This action cannot be undone. Also, this method immediately removes any redemptions on the voucher.\nIf the force parameter is set to false or not set at all, the campaign and all related vouchers will be moved to the bin.\nThis API request starts a process that affects Voucherify data in bulk. \nIn case of small jobs (like bulk update) the request is put into a queue and processed once every other bulk request placed in the queue prior to this request is finished. However, when the job takes a longer time (like vouchers generation) then it is processed in small portions in a round-robin fashion. When there is a list of vouchers generation scheduled, then they will all have the IN_PROGRESS status shortly. This way, small jobs added just after scheduling big jobs of the same type will be processed in a short time window. \nThe result will return the async ID. You can verify the status of your request via this API request.",
        "parameters": [
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterBoolean"
            },
            "in": "query",
            "description": "If this flag is set to true, the campaign and related vouchers will be removed permanently. If it is set to false or not set at all, the campaign and related vouchers will be moved to the bin. Going forward, the user will be able to create the next campaign with exactly the same name.",
            "name": "force"
          }
        ],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns the ID of the scheduled asynchronous action, informing you that your request has been accepted and the campaign will be deleted from the repository asynchronously. To check the deletion status and result, copy the `async_action_id` from the response and pass it using <!-- [Get Async Action](OpenAPI.json/paths/~1async-actions~1{asyncActionId}/get) -->[Get Async Action](ref:get-async-action) endpoint.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignsDeleteResponseBody"
                }
              }
            }
          }
        }
      }
    },
    "/v1/campaigns/{campaignId}/vouchers": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterCampaignId"
          },
          "name": "campaignId",
          "in": "path",
          "required": true,
          "description": "The campaign ID or name of the campaign to which voucher(s) will be added. You can either pass the campaign ID, which was assigned by Voucherify, or the name of the campaign as the path parameter value."
        }
      ],
      "post": {
        "operationId": "add-vouchers-to-campaign",
        "tags": [
          "Campaigns"
        ],
        "summary": "Add Vouchers to Campaign",
        "description": "This method gives the possibility to push new vouchers to an existing campaign. New vouchers will inherit properties from the campaign profile. However, it is possible to overwrite some of them in the request body. If you provide an optional code_config parameter with a voucher code configuration, then it will be used to generate new voucher codes. Otherwise, the voucher code configuration from the campaign will be used.\nThis API request starts a process that affects Voucherify data in bulk. \nIn case of small jobs (like bulk update) the request is put into a queue and processed once every other bulk request placed in the queue prior to this request is finished. However, when the job takes a longer time (like vouchers generation) then it is processed in small portions in a round-robin fashion. When there is a list of vouchers generation scheduled, then they will all have the IN_PROGRESS status shortly. This way, small jobs added just after scheduling big jobs of the same type will be processed in a short time window. \nThe result will return the async ID. You can verify the status of your request via this API request.",
        "parameters": [
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterInteger"
            },
            "in": "query",
            "name": "vouchers_count",
            "description": "Number of vouchers that should be added."
          }
        ],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "requestBody": {
          "description": "Specify the voucher parameters that you would like to overwrite.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CampaignsVouchersCreateInBulkRequestBody"
              }
            }
          }
        },
        "responses": {
          "2XX": {
            "description": "Returns a voucher object if the call succeeded for a voucher count of 1. and Returns an `async_action_id` if the request was made to create more than 1 voucher.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignsVouchersCreateCombinedResponseBody"
                }
              }
            }
          }
        }
      }
    },
    "/v1/campaigns/{campaignId}/vouchers/{code}": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterCampaignId"
          },
          "name": "campaignId",
          "in": "path",
          "required": true,
          "description": "The campaign ID or name of the campaign to which voucher will be added. You can either pass the campaign ID, which was assigned by Voucherify, or the name of the campaign as the path parameter value."
        },
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterCode"
          },
          "name": "code",
          "in": "path",
          "required": true,
          "description": "A custom **code** that identifies the voucher."
        }
      ],
      "post": {
        "operationId": "add-voucher-with-specific-code-to-campaign",
        "tags": [
          "Campaigns"
        ],
        "summary": "Add Voucher with Specific Code to Campaign",
        "description": "This method gives a possibility to add a new voucher to an existing campaign. The voucher definition will be inherited from the definition kept in the campaign profile. However, you are able to overwrite a few properties inherited from the campaign.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "requestBody": {
          "description": "Specify the voucher parameters that you would like to overwrite.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CampaignsVouchersCreateRequestBody"
              },
              "examples": {
                "Example": {
                  "value": {
                    "category_id": "cat_0bb81a481615a37b5e",
                    "start_date": "2022-09-24T00:00:00Z",
                    "expiration_date": "2022-09-25T23:59:59Z",
                    "active": false,
                    "redemption": {
                      "quantity": null
                    },
                    "additional_info": "Voucher added using API",
                    "metadata": {
                      "Season": "Fall"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "2XX": {
            "description": "Returns a voucher object if the call succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignsVouchersCreateResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "id": "v_EJwB9Wy2aOIsDpWhnl2QBY51OqjQ5Ukg",
                      "code": "Code3",
                      "campaign": "Add Voucher to Campaign",
                      "campaign_id": "camp_xxpmFyWO9h9s5cEe7HtmOK5B",
                      "category": null,
                      "category_id": "cat_0bb81a481615a37b5e",
                      "type": "DISCOUNT_VOUCHER",
                      "discount": {
                        "type": "PERCENT",
                        "amount_limit": 2000,
                        "percent_off": 30,
                        "effect": "APPLY_TO_ORDER"
                      },
                      "gift": null,
                      "loyalty_card": null,
                      "start_date": "2022-09-24T00:00:00.000Z",
                      "expiration_date": "2022-09-25T23:59:59.000Z",
                      "validity_timeframe": null,
                      "validity_day_of_week": [
                        1,
                        2,
                        3,
                        4,
                        5
                      ],
                      "active": true,
                      "additional_info": "Voucher added using API",
                      "metadata": {
                        "Season": "Fall"
                      },
                      "assets": {
                        "qr": {
                          "id": "U2FsdGVkX1+p2kdatp7KAUZxgSATC1gRWgsb1Q3RQyClNOBrfUrRKpTjSPSzBuUSZzb45TIpfWRISSiaz1QXGh8z9sVSHIWQsGLO6+1N81zXuY6/pnC7gRBa4edwMaRoCAwzqO9JDw148AGk4XrXLg==",
                          "url": "{{internalVoucherifyURL}}"
                        },
                        "barcode": {
                          "id": "U2FsdGVkX19wrLVWzIOgoVd9an76OxiJWB5/u9yWGoD7cqN6Qd1K9noNyR1YwvHnBrcN5fa5qtY+sOXonn7WsynAWeR289gA0XobsHHE2VWe8BzNZ7h2kH90SsiW+NCQg6Ts8clYWWP5lrGyV/fzoA==",
                          "url": "{{internalVoucherifyURL}}"
                        }
                      },
                      "is_referral_code": false,
                      "created_at": "2022-09-21T07:14:28.217Z",
                      "updated_at": null,
                      "validation_rules_assignments": {
                        "object": "list",
                        "data_ref": "data",
                        "data": [],
                        "total": 0
                      },
                      "redemption": {
                        "quantity": null,
                        "redeemed_quantity": 0,
                        "object": "list",
                        "url": "/v1/vouchers/Code3/redemptions?page=1&limit=10"
                      },
                      "publish": {
                        "object": "list",
                        "count": 0,
                        "url": "/v1/vouchers/Code3/publications?page=1&limit=10"
                      },
                      "object": "voucher"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/campaigns/{campaignId}/import": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterCampaignId"
          },
          "name": "campaignId",
          "in": "path",
          "required": true,
          "description": "The ID of an existing campaign to which youre importing the codes. You can either pass the campaign ID, which was assigned by Voucherify, or the name of the campaign as the path parameter value."
        }
      ],
      "post": {
        "operationId": "import-vouchers-to-campaign",
        "tags": [
          "Campaigns"
        ],
        "summary": "Import Vouchers to Campaign",
        "description": "Imports vouchers to an **existing** campaign.\nThis API request starts a process that affects Voucherify data in bulk. \nIn case of small jobs (like bulk update) the request is put into a queue and processed once every other bulk request placed in the queue prior to this request is finished. However, when the job takes a longer time (like vouchers generation) then it is processed in small portions in a round-robin fashion. When there is a list of vouchers generation scheduled, then they will all have the IN_PROGRESS status shortly. This way, small jobs added just after scheduling big jobs of the same type will be processed in a short time window. \nThe result will return the async ID. You can verify the status of your request via this API request.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "requestBody": {
          "description": "Discount type, expiration date and the remaining attributes will be taken from the Campaign settings.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CampaignsImportCreateRequestBody"
              },
              "examples": {
                "Example": {
                  "value": [
                    {
                      "code": "CODE7",
                      "category": "First",
                      "redemption": {
                        "quantity": 1
                      },
                      "metadata": {
                        "season": "Fall"
                      },
                      "additional_info": "secret-code1",
                      "active": true
                    },
                    {
                      "code": "CODE8",
                      "category": "Second",
                      "redemption": {
                        "quantity": 18
                      },
                      "metadata": {
                        "season": "Fall"
                      },
                      "additional_info": "secret-code1",
                      "active": true
                    },
                    {
                      "code": "CODE9",
                      "redemption": {
                        "quantity": 4
                      },
                      "metadata": {
                        "season": "Fall"
                      },
                      "additional_info": "secret-code1",
                      "active": true
                    }
                  ]
                },
                "Gift Cards": {
                  "value": [
                    {
                      "code": "CODE13",
                      "category": "First",
                      "redemption": {
                        "quantity": 1
                      },
                      "metadata": {
                        "season": "Fall"
                      },
                      "additional_info": "secret-code1",
                      "gift": {
                        "amount": 500
                      },
                      "active": true
                    },
                    {
                      "code": "CODE14",
                      "category": "Second",
                      "redemption": {
                        "quantity": 18
                      },
                      "metadata": {
                        "season": "Fall"
                      },
                      "additional_info": "secret-code1",
                      "gift": {
                        "amount": 2000
                      },
                      "active": true
                    },
                    {
                      "code": "CODE15",
                      "redemption": {
                        "quantity": 4
                      },
                      "metadata": {
                        "season": "Fall"
                      },
                      "additional_info": "secret-code1",
                      "active": false
                    }
                  ]
                },
                "Loyalty Cards": {
                  "value": [
                    {
                      "code": "CODE10",
                      "category": "First",
                      "redemption": {
                        "quantity": 1
                      },
                      "metadata": {
                        "season": "Fall"
                      },
                      "additional_info": "secret-code1",
                      "loyalty_card": {
                        "points": 300
                      },
                      "active": true
                    },
                    {
                      "code": "CODE11",
                      "category": "Second",
                      "redemption": {
                        "quantity": 18
                      },
                      "metadata": {
                        "season": "Fall"
                      },
                      "additional_info": "secret-code1",
                      "loyalty_card": {
                        "points": 2000
                      },
                      "active": true
                    },
                    {
                      "code": "CODE12",
                      "redemption": {
                        "quantity": 4
                      },
                      "metadata": {
                        "season": "Fall"
                      },
                      "additional_info": "secret-code1",
                      "active": true
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "2XX": {
            "description": "Returns the ID of the scheduled asynchronous action, informing you that your request has been accepted and the vouchers will be imported to the repository asynchronously. To check the status and result, copy the `async_action_id` from the response and pass it using <!-- [Get Async Action](OpenAPI.json/paths/~1async-actions~1{asyncActionId}/get) -->[Get Async Action](ref:get-async-action) endpoint.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignsImportCreateResponseBody"
                }
              }
            }
          }
        }
      }
    },
    "/v1/campaigns/{campaignId}/importCSV": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterCampaignId"
          },
          "name": "campaignId",
          "in": "path",
          "required": true,
          "description": "The campaign ID or name of the campaign being enabled. You can either pass the campaign ID, which was assigned by Voucherify or the name of the campaign as the path parameter value."
        }
      ],
      "post": {
        "operationId": "import-vouchers-to-campaign-using-csv",
        "tags": [
          "Campaigns"
        ],
        "summary": "Import Vouchers to Campaign by CSV",
        "description": "Imports vouchers to an **existing** campaign.  \nThe CSV file has to include headers in the first line. \nThis API request starts a process that affects Voucherify data in bulk. \nIn case of small jobs (like bulk update) the request is put into a queue and processed once every other bulk request placed in the queue prior to this request is finished. However, when the job takes a longer time (like vouchers generation) then it is processed in small portions in a round-robin fashion. When there is a list of vouchers generation scheduled, then they will all have the IN_PROGRESS status shortly. This way, small jobs added just after scheduling big jobs of the same type will be processed in a short time window. \nThe result will return the async ID. You can verify the status of your request via this API request.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/CampaignsVouchersImportCSVRequestBody"
              }
            }
          },
          "description": "The file path is stored in the form file header."
        },
        "responses": {
          "2XX": {
            "description": "Returns the ID of the scheduled asynchronous action, informing you that your request has been accepted and the vouchers will be imported to the repository asynchronously. To check the status and result, copy the `async_action_id` from the response and pass it using <!-- [Get Async Action](OpenAPI.json/paths/~1async-actions~1{asyncActionId}/get) -->[Get Async Action](ref:get-async-action) endpoint.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignsImportCsvCreateResponseBody"
                },
                "examples": {
                  "Example": {
                    "$ref": "#/components/examples/res_async_actions"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/campaigns/{campaignId}/enable": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterCampaignId"
          },
          "name": "campaignId",
          "in": "path",
          "required": true,
          "description": "The campaign ID or name of the campaign being enabled. You can either pass the campaign ID, which was assigned by Voucherify or the name of the campaign as the path parameter value."
        }
      ],
      "post": {
        "operationId": "enable-campaign",
        "tags": [
          "Campaigns"
        ],
        "summary": "Enable Campaign",
        "description": "There are various times when youll want to manage a campaigns accessibility. This can be done by two API methods for managing the campaign state - *enable* and *disable*.  \nSets campaign state to **active**. The vouchers in this campaign can be redeemed - only if the redemption occurs after the start date of the campaign and voucher and the voucher and campaign are not expired.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns an empty json `{}`.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignsEnableResponseBody"
                },
                "examples": {
                  "Empty JSON": {
                    "value": {}
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/campaigns/{campaignId}/disable": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterCampaignId"
          },
          "name": "campaignId",
          "in": "path",
          "required": true,
          "description": "The campaign ID or name of the campaign being disabled. You can either pass the campaign ID, which was assigned by Voucherify, or the name of the campaign as the path parameter value."
        }
      ],
      "post": {
        "operationId": "disable-campaign",
        "tags": [
          "Campaigns"
        ],
        "summary": "Disable Campaign",
        "description": "There are various times when youll want to manage a campaigns accessibility. This can be done by two API methods for managing the campaign state - *enable* and *disable*.  \nSets campaign state to **inactive**. The vouchers in this campaign can no longer be redeemed.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns an empty json `{}`.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignsDisableResponseBody"
                },
                "examples": {
                  "Empty JSON": {
                    "value": {}
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/campaigns/{campaignId}/transactions": {
      "parameters": [
        {
          "in": "path",
          "name": "campaignId",
          "description": "You can either pass the campaign ID, which was assigned by Voucherify, or the name of the campaign as the path parameter value.",
          "schema": {
            "$ref": "#/components/schemas/ParameterCampaignId"
          },
          "required": true
        }
      ],
      "get": {
        "operationId": "list-campaign-transactions",
        "tags": [
          "Campaigns"
        ],
        "summary": "List Campaign Transactions",
        "description": "Retrieves all transactions for the campaign with the given campaign ID or campaign name. The id filter denotes the unique transaction identifier.\n 🚧\n The endpoint works only for gift card and loyalty campaigns.",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterOrderListTransactions"
            },
            "in": "query",
            "name": "order",
            "description": "Sorts the results using one of the filtering options, where the dash - preceding a sorting option means sorting in a descending order."
          },
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterString"
            },
            "in": "query",
            "name": "starting_after_id",
            "description": "A cursor for pagination. It retrieves the transactions starting after a transaction with the given ID."
          },
          {
            "name": "filters",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ParametersFiltersListCampaignTransactions"
            },
            "description": "Filters for listing responses.",
            "style": "deepObject",
            "explode": true
          }
        ],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns a dictionary with a `data` property that contains an array of transactions. The maximum number of transactions returned is determined by the `limit` query parameter. Each entry in the array is a separate transaction object. If more results are available, the `has_more` flag has value `true` and the value of the `more_starting_after` property can be used to retrieve another page of results.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignsTransactionsListResponseBody"
                },
                "examples": {
                  "Gift or loyalty campaign": {
                    "value": {
                      "object": "list",
                      "data_ref": "data",
                      "data": [
                        {
                          "id": "vtx_0f9159e2a055e41e16",
                          "source_id": null,
                          "voucher_id": "v_GNSRFoVlW2ny8uTOHhXRGvkwocR9jQ44",
                          "campaign_id": "camp_5Hn0NM3Uf77tC3IV3kX5un36",
                          "source": null,
                          "reason": null,
                          "type": "POINTS_REDEMPTION",
                          "details": {
                            "balance": {
                              "type": "loyalty_card",
                              "total": 283,
                              "object": "balance",
                              "points": -50,
                              "balance": 23,
                              "operation_type": "AUTOMATIC",
                              "related_object": {
                                "id": "v_GNSRFoVlW2ny8uTOHhXRGvkwocR9jQ44",
                                "type": "voucher"
                              }
                            },
                            "redemption": {
                              "id": "r_0f9159e29815e41e08"
                            },
                            "reward": {
                              "id": "rew_GCq9usMjLffVacs0mlyMmDZo",
                              "name": "Material"
                            }
                          },
                          "related_transaction_id": null,
                          "created_at": "2024-10-24T12:19:45.597Z"
                        },
                        {
                          "id": "vtx_0f9159e1a48b219c95",
                          "source_id": null,
                          "voucher_id": "v_GNSRFoVlW2ny8uTOHhXRGvkwocR9jQ44",
                          "campaign_id": "camp_5Hn0NM3Uf77tC3IV3kX5un36",
                          "source": "voucherify-web-ui",
                          "reason": "Apology addition",
                          "type": "POINTS_ADDITION",
                          "details": {
                            "balance": {
                              "type": "loyalty_card",
                              "total": 283,
                              "object": "balance",
                              "points": 50,
                              "balance": 73,
                              "operation_type": "MANUAL",
                              "related_object": {
                                "id": "v_GNSRFoVlW2ny8uTOHhXRGvkwocR9jQ44",
                                "type": "voucher"
                              }
                            }
                          },
                          "related_transaction_id": null,
                          "created_at": "2024-10-24T12:19:44.902Z"
                        }
                      ],
                      "has_more": true,
                      "more_starting_after": "vtx_0f9159e1a48b219c95"
                    }
                  },
                  "Other campaign types - empty data": {
                    "value": {
                      "object": "list",
                      "data_ref": "data",
                      "data": [],
                      "total": 0
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/campaigns/{campaignId}/transactions/export": {
      "parameters": [
        {
          "in": "path",
          "name": "campaignId",
          "description": "You can either pass the campaign ID, which was assigned by Voucherify, or the name of the campaign as the path parameter value.",
          "schema": {
            "$ref": "#/components/schemas/ParameterCampaignId"
          },
          "required": true
        }
      ],
      "post": {
        "operationId": "export-campaign-transactions",
        "tags": [
          "Campaigns"
        ],
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "summary": "Export Campaign Transactions",
        "description": "Export transactions is an asynchronous process that generates a CSV file with the data about credit movements on all gift cards or point movements on all loyalty cards in a given campaign.\nTo export transactions:\n1. In the export request, use parameters to select which fields will be exported, in what order, and which data will be filtered.\n2. Use the returned id to track the export status with the GET Export method.\n3. In the GET Export method, when the returned status field has the DONE value, the export file has been generated.\n4. Use the URL in the result property to download the file. You must be logged to your Voucherify account on a given cluster in the browser to be able to download the file.\nAn export request will almost always result in a single file being generated by the system. However, when the data volume is large, the system may split the results into multiple files.\nAn example export file can look as follows:\n\n\n 👍 Export Loyalty Campaign Transactions\n For loyalty campaigns, this method works in the same way the POST Export Loyalty Campaign Transactions does.",
        "requestBody": {
          "description": "Specify the parameters for the transaction export.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CampaignsTransactionsExportCreateRequestBody"
              },
              "examples": {
                "Example": {
                  "value": {
                    "order": "-created_at",
                    "parameters": {
                      "fields": [
                        "id",
                        "type",
                        "source_id",
                        "created_at"
                      ],
                      "filters": {
                        "created_at": {
                          "conditions": {
                            "$after": [
                              "2024-10-01T00:00:00.000Z"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "2XX": {
            "description": "An object representing an export.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignsTransactionsExportCreateResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "id": "exp_KBunyG5vwkuF3jSWD03kmnLx",
                      "object": "export",
                      "created_at": "2024-10-25T14:35:12.019Z",
                      "status": "SCHEDULED",
                      "channel": "API",
                      "exported_object": "voucher_transactions",
                      "parameters": {
                        "fields": [
                          "id",
                          "type",
                          "source_id",
                          "created_at"
                        ],
                        "filters": {
                          "junction": "AND",
                          "created_at": {
                            "conditions": {
                              "$after": [
                                "2024-10-01T00:00:00.000Z"
                              ]
                            }
                          },
                          "campaign_id": {
                            "conditions": {
                              "$in": [
                                "camp_5pgKwSKsAeQtFkRz6mfKpxxD"
                              ]
                            }
                          }
                        }
                      },
                      "result": null,
                      "user_id": null
                    }
                  },
                  "No request body": {
                    "value": {
                      "id": "exp_FE04bvkl4J5GQCb99Q5o7Gxa",
                      "object": "export",
                      "created_at": "2024-10-25T15:15:11.698Z",
                      "status": "SCHEDULED",
                      "channel": "API",
                      "exported_object": "voucher_transactions",
                      "parameters": {
                        "filters": {
                          "campaign_id": {
                            "conditions": {
                              "$in": [
                                "camp_5pgKwSKsAeQtFkRz6mfKpxxD"
                              ]
                            }
                          }
                        }
                      },
                      "result": null,
                      "user_id": null
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/campaigns/{campaignId}/summary": {
      "parameters": [
        {
          "in": "path",
          "name": "campaignId",
          "description": "You can either pass the campaign ID, which was assigned by Voucherify, or the name of the campaign as the path parameter value.",
          "schema": {
            "$ref": "#/components/schemas/ParameterCampaignId"
          },
          "required": true
        }
      ],
      "get": {
        "operationId": "get-campaign-summary",
        "tags": [
          "Campaigns"
        ],
        "summary": "Get Campaign Summary",
        "description": "Returns data for campaign analytics, covering validations, redemptions, publications, and other details specific to a given campaign type.\nUse start_date and end_date to narrow down the data to specific periods.\n🚧 Campaigns created before v20250602 version\nThis endpoint returns analytics data for campaigns that were created after the [v20250602 version](https://support.voucherify.io/article/23-whats-new-in-voucherify#v20250602) was released on 17 June 2025. Older campaigns return empty data.",
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ParameterDateOnly"
            },
            "description": "Timestamp representing the date which results must begin on. Represented in ISO 8601 format."
          },
          {
            "name": "end_date",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ParameterDateOnly"
            },
            "description": "Timestamp representing the date which results must end on. Represented in ISO 8601 format."
          }
        ],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns campaign analytics data. Returns different data depending on the campaign type.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignsSummaryGetResponseBody"
                },
                "examples": {
                  "Generic code discount campaign": {
                    "value": {
                      "object": "campaign_summary",
                      "campaign": {
                        "id": "camp_WaZ6r4LSF1alRaIwJVKS07bs",
                        "name": "Summer-2025",
                        "campaign_type": "DISCOUNT_COUPONS",
                        "type": "STANDALONE",
                        "voucher": {
                          "type": "DISCOUNT_VOUCHER",
                          "discount": {
                            "type": "AMOUNT",
                            "amount_off": 2000,
                            "effect": "APPLY_TO_ORDER"
                          },
                          "redemption": {
                            "quantity": null
                          },
                          "is_referral_code": false
                        },
                        "auto_join": false,
                        "join_once": false,
                        "use_voucher_metadata_schema": true,
                        "vouchers_count": 1,
                        "active": true,
                        "metadata": {},
                        "created_at": "2025-06-17T08:05:57.720Z",
                        "creation_status": "DONE",
                        "vouchers_generation_status": "DONE",
                        "protected": false,
                        "category_id": null,
                        "categories": [],
                        "object": "campaign"
                      },
                      "redemptions": 10,
                      "redemptions_succeeded": 8,
                      "redemptions_failed": 2,
                      "rollbacks": 1,
                      "rollbacks_succeeded": 1,
                      "rollbacks_failed": 0,
                      "validations": 10,
                      "validations_succeeded": 8,
                      "validations_failed": 2,
                      "vouchers_created": 1,
                      "vouchers_deleted": 0,
                      "publications": 0,
                      "publications_succeeded": 0,
                      "publications_failed": 0,
                      "discounted_amount": 20000,
                      "rolledback_discounted_amount": 200,
                      "orders_amount": 19453,
                      "orders_rolledback_amount": 800
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/promotions/tiers": {
      "get": {
        "operationId": "list-promotion-tiers",
        "tags": [
          "Promotions"
        ],
        "summary": "List Promotion Tiers",
        "description": "This method enables you to list promotion tiers.",
        "parameters": [
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterBoolean"
            },
            "in": "query",
            "name": "is_available",
            "description": "This parameter allows filtering promotions that are only available at the moment. When set to true, it selects only non-expired and active promotions."
          },
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterLimit"
            },
            "in": "query",
            "name": "limit",
            "description": "Limits the number of objects to be returned. The limit can range between 1 and 100 items."
          },
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterPage"
            },
            "in": "query",
            "description": "Which page of results to return. The lowest value is 1.",
            "name": "page"
          },
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterOrderListPromotionTiers"
            },
            "in": "query",
            "name": "order",
            "description": "Sorts the results using one of the filtering options, where the dash - preceding a sorting option means sorting in a descending order."
          }
        ],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns a dictionary with a `tiers` property that contains an array of promotion tiers.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromotionsTiersListResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "object": "list",
                      "data_ref": "tiers",
                      "tiers": [
                        {
                          "id": "promo_NzjTc3ZXTe7md5SziK3uYtei",
                          "created_at": "2022-09-21T11:38:34.962Z",
                          "name": "Order more than $100",
                          "banner": "Order more than $100",
                          "action": {
                            "discount": {
                              "type": "AMOUNT",
                              "amount_off": 3000,
                              "effect": "APPLY_TO_ORDER"
                            }
                          },
                          "metadata": {},
                          "hierarchy": 1,
                          "promotion_id": "camp_VEL7UX0jZjrvLx3hfNZBVzpq",
                          "campaign": {
                            "id": "camp_VEL7UX0jZjrvLx3hfNZBVzpq",
                            "start_date": "2022-09-21T00:00:00.000Z",
                            "expiration_date": "2022-09-30T00:00:00.000Z",
                            "validity_timeframe": {
                              "interval": "P3D",
                              "duration": "P2D"
                            },
                            "validity_day_of_week": [
                              1,
                              2,
                              3,
                              4,
                              5
                            ],
                            "active": true,
                            "category_id": "cat_0bb81a481615a37b5e",
                            "object": "campaign"
                          },
                          "campaign_id": "camp_VEL7UX0jZjrvLx3hfNZBVzpq",
                          "active": true,
                          "start_date": "2022-09-21T00:00:00.000Z",
                          "expiration_date": "2022-09-30T00:00:00.000Z",
                          "validity_timeframe": {
                            "interval": "P3D",
                            "duration": "P2D"
                          },
                          "validity_day_of_week": [
                            1,
                            2
                          ],
                          "summary": {
                            "redemptions": {
                              "total_redeemed": 0
                            },
                            "orders": {
                              "total_amount": 0,
                              "total_discount_amount": 0
                            }
                          },
                          "object": "promotion_tier",
                          "validation_rule_assignments": null
                        },
                        {
                          "id": "promo_RaYHtUBre5jU8frUXOvYBtlN",
                          "created_at": "2021-12-15T11:34:01.358Z",
                          "updated_at": "2022-02-09T09:20:08.619Z",
                          "name": "Hot Promotion - Tier 2",
                          "banner": "Get Tier 2 Discount $20 Off",
                          "action": {
                            "discount": {
                              "type": "AMOUNT",
                              "amount_off": 2000,
                              "effect": "APPLY_TO_ORDER"
                            }
                          },
                          "metadata": {},
                          "hierarchy": 2,
                          "promotion_id": "camp_5h0wc453_5",
                          "campaign": {
                            "id": "camp_5h0wc453_5",
                            "start_date": null,
                            "expiration_date": null,
                            "active": true,
                            "category_id": "cat_0b688929a2476386a6",
                            "object": "campaign"
                          },
                          "campaign_id": "camp_5h0wc453_5",
                          "active": true,
                          "summary": {
                            "redemptions": {
                              "total_redeemed": 33
                            },
                            "orders": {
                              "total_amount": 519200,
                              "total_discount_amount": 66000
                            }
                          },
                          "object": "promotion_tier",
                          "validation_rule_assignments": {
                            "object": "list",
                            "data_ref": "data",
                            "data": [
                              {
                                "id": "asgm_pEe1inoYSfmO12p7",
                                "rule_id": "val_5h0wc453_5",
                                "related_object_id": "promo_RaYHtUBre5jU8frUXOvYBtlN",
                                "related_object_type": "promotion_tier",
                                "created_at": "2021-12-15T11:34:01.358Z",
                                "object": "validation_rules_assignment"
                              }
                            ],
                            "total": 1
                          }
                        },
                        {
                          "id": "promo_63fYCt81Aw0h7lzyRkrGZh9p",
                          "created_at": "2021-12-15T11:34:01.333Z",
                          "updated_at": "2022-02-09T09:20:05.603Z",
                          "name": "Hot Promotion - Tier 1",
                          "banner": "Get Tier 1 Discount 10zl",
                          "action": {
                            "discount": {
                              "type": "AMOUNT",
                              "amount_off": 1000,
                              "effect": "APPLY_TO_ORDER"
                            }
                          },
                          "metadata": {
                            "ProductionMetaData": "Hot Promotion - Tier 1"
                          },
                          "hierarchy": 1,
                          "promotion_id": "camp_5h0wc453_5",
                          "campaign": {
                            "id": "camp_5h0wc453_5",
                            "start_date": null,
                            "expiration_date": null,
                            "active": true,
                            "category_id": "cat_0b688929a2476386a6",
                            "object": "campaign"
                          },
                          "campaign_id": "camp_5h0wc453_5",
                          "active": true,
                          "summary": {
                            "redemptions": {
                              "total_redeemed": 11
                            },
                            "orders": {
                              "total_amount": 1414979,
                              "total_discount_amount": 11000
                            }
                          },
                          "object": "promotion_tier",
                          "validation_rule_assignments": {
                            "object": "list",
                            "data_ref": "data",
                            "data": [
                              {
                                "id": "asgm_QqYs7GGVy7cuh3L9",
                                "rule_id": "val_5h0wc453_4",
                                "related_object_id": "promo_63fYCt81Aw0h7lzyRkrGZh9p",
                                "related_object_type": "promotion_tier",
                                "created_at": "2021-12-15T11:34:01.333Z",
                                "object": "validation_rules_assignment"
                              }
                            ],
                            "total": 1
                          }
                        }
                      ],
                      "total": 3
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/promotions/{campaignId}/tiers": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterCampaignId"
          },
          "name": "campaignId",
          "in": "path",
          "required": true,
          "description": "Unique campaign ID assigned by Voucherify."
        }
      ],
      "get": {
        "operationId": "list-promotion-tiers-from-campaign",
        "tags": [
          "Promotions"
        ],
        "summary": "List Promotion Tiers from Campaign",
        "description": "This method enables you to list promotion tiers from a specified campaign.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns a dictionary with a `tiers` property that contains an array of promotion tiers.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromotionsTiersListResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "object": "list",
                      "data_ref": "tiers",
                      "tiers": [
                        {
                          "id": "promo_xyOKjAmysZrwt3aqq1dMUwMU",
                          "created_at": "2022-04-07T08:43:53.730Z",
                          "updated_at": "2022-08-26T05:22:43.220Z",
                          "name": "Amount",
                          "banner": "Get $10 off entire order",
                          "action": {
                            "discount": {
                              "type": "AMOUNT",
                              "amount_off": 1000,
                              "effect": "APPLY_TO_ORDER"
                            }
                          },
                          "metadata": {},
                          "hierarchy": 2,
                          "promotion_id": "camp_SGq39XXJ47vm7Xys3D0NLgQ0",
                          "campaign": {
                            "id": "camp_SGq39XXJ47vm7Xys3D0NLgQ0",
                            "start_date": null,
                            "expiration_date": null,
                            "active": true,
                            "category_id": "cat_0b5f67863083bf7c05",
                            "object": "campaign"
                          },
                          "campaign_id": "camp_SGq39XXJ47vm7Xys3D0NLgQ0",
                          "active": true,
                          "summary": {
                            "redemptions": {
                              "total_redeemed": 1
                            },
                            "orders": {
                              "total_amount": 2187,
                              "total_discount_amount": 1000
                            }
                          },
                          "object": "promotion_tier",
                          "validation_rule_assignments": null
                        },
                        {
                          "id": "promo_CQonGnrsFAdEJfJQ3oKB3a8G",
                          "created_at": "2022-04-07T08:43:53.581Z",
                          "updated_at": "2022-08-26T05:22:43.008Z",
                          "name": "Percentage",
                          "banner": "Get 10% OFF on entire order",
                          "action": {
                            "discount": {
                              "type": "PERCENT",
                              "percent_off": 10,
                              "effect": "APPLY_TO_ORDER"
                            }
                          },
                          "metadata": {},
                          "hierarchy": 1,
                          "promotion_id": "camp_SGq39XXJ47vm7Xys3D0NLgQ0",
                          "campaign": {
                            "id": "camp_SGq39XXJ47vm7Xys3D0NLgQ0",
                            "start_date": null,
                            "expiration_date": null,
                            "active": true,
                            "category_id": "cat_0b5f67863083bf7c05",
                            "object": "campaign"
                          },
                          "campaign_id": "camp_SGq39XXJ47vm7Xys3D0NLgQ0",
                          "active": true,
                          "summary": {
                            "redemptions": {
                              "total_redeemed": 1
                            },
                            "orders": {
                              "total_amount": 71600,
                              "total_discount_amount": 7160
                            }
                          },
                          "object": "promotion_tier",
                          "validation_rule_assignments": null
                        }
                      ],
                      "total": 2,
                      "has_more": false
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "add-promotion-tier-to-campaign",
        "tags": [
          "Promotions"
        ],
        "summary": "Add Promotion Tier to Campaign",
        "description": "This method allows you to add a new promotion tier to an existing campaign. The tier hierarchy will be set as the next consequtive integer following the lowest ranking tier.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "requestBody": {
          "description": "Specify the promotion tier parameters.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PromotionsTiersCreateRequestBody"
              },
              "examples": {
                "Example": {
                  "value": {
                    "name": "Order more than $100",
                    "banner": "Order more than $100",
                    "action": {
                      "discount": {
                        "type": "AMOUNT",
                        "amount_off": 3000,
                        "effect": "APPLY_TO_ORDER"
                      }
                    },
                    "metadata": {},
                    "active": true,
                    "start_date": "2022-09-21T00:00:00.000Z",
                    "expiration_date": "2022-09-30T00:00:00.000Z",
                    "validity_timeframe": {
                      "interval": "P2D",
                      "duration": "P1D"
                    },
                    "validity_day_of_week": [
                      1,
                      2,
                      3,
                      4
                    ],
                    "validation_rules": [
                      "val_q8qUBMOh5qIQ"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "2XX": {
            "description": "Returns a promotion tier object if the promotion tier was successfully added to the campaign.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromotionsTiersCreateResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "id": "promo_JcYGIKJsnv0SpZcx2njZm69x",
                      "created_at": "2022-09-22T11:21:57.808Z",
                      "name": "Order more than $100",
                      "banner": "Order more than $100",
                      "action": {
                        "discount": {
                          "type": "AMOUNT",
                          "amount_off": 3000,
                          "effect": "APPLY_TO_ORDER"
                        }
                      },
                      "metadata": {},
                      "hierarchy": 6,
                      "campaign": {
                        "id": "camp_VEL7UX0jZjrvLx3hfNZBVzpq",
                        "start_date": "2022-09-21T00:00:00.000Z",
                        "expiration_date": "2022-09-30T00:00:00.000Z",
                        "validity_day_of_week": [
                          1,
                          2,
                          3,
                          4,
                          5
                        ],
                        "active": true,
                        "object": "campaign"
                      },
                      "campaign_id": null,
                      "active": true,
                      "start_date": "2022-09-21T00:00:00.000Z",
                      "expiration_date": "2022-09-30T00:00:00.000Z",
                      "validity_timeframe": {
                        "interval": "P2D",
                        "duration": "P1D"
                      },
                      "validity_day_of_week": [
                        1,
                        2,
                        3,
                        4
                      ],
                      "summary": {
                        "redemptions": {
                          "total_redeemed": 0
                        },
                        "orders": {
                          "total_amount": 0,
                          "total_discount_amount": 0
                        }
                      },
                      "object": "promotion_tier",
                      "validation_rule_assignments": {
                        "object": "list",
                        "data_ref": "data",
                        "data": [
                          {
                            "id": "asgm_AmeYPmiLZKaIxq01",
                            "rule_id": "val_q8qUBMOh5qIQ",
                            "related_object_id": "promo_JcYGIKJsnv0SpZcx2njZm69x",
                            "related_object_type": "promotion_tier",
                            "created_at": "2022-09-22T11:21:57.808Z",
                            "object": "validation_rules_assignment"
                          }
                        ],
                        "total": 1
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/promotions/tiers/{promotionTierId}": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterPromotionTierId"
          },
          "name": "promotionTierId",
          "in": "path",
          "required": true,
          "description": "Unique promotion tier ID."
        }
      ],
      "get": {
        "operationId": "get-promotion-tier",
        "tags": [
          "Promotions"
        ],
        "summary": "Get Promotion Tier",
        "description": "This method enables you to retrieve a specific promotion tier.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns a promotion tier object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromotionsTiersGetResponseBody"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "update-promotion-tier",
        "tags": [
          "Promotions"
        ],
        "summary": "Update Promotion Tier",
        "description": "This method updates a promotion tier.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "requestBody": {
          "description": "Specify the promotion tier parameters that you would like to update.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PromotionsTiersUpdateRequestBody"
              },
              "examples": {
                "Example": {
                  "value": {
                    "name": "Order more than $100 USD",
                    "banner": "Order more than $100 USD",
                    "action": {
                      "discount": {
                        "type": "PERCENT",
                        "percent_off": 25,
                        "effect": "APPLY_TO_ORDER"
                      }
                    },
                    "metadata": {
                      "level": "A-21"
                    },
                    "hierarchy": 1,
                    "start_date": "2022-09-22T00:00:00.000Z",
                    "expiration_date": "2022-09-29T00:00:00.000Z",
                    "validity_timeframe": {
                      "interval": "P3D",
                      "duration": "P2D"
                    },
                    "validity_day_of_week": [
                      1,
                      2,
                      3
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "2XX": {
            "description": "Returns a promotion tier object if the update was successful.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromotionsTiersUpdateResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "id": "promo_hINAfBAVhmFuSAzi3vptfyxW",
                      "created_at": "2022-09-22T12:40:23.286Z",
                      "updated_at": "2022-09-22T12:40:58.626Z",
                      "name": "Order more than $100 USD",
                      "banner": "Order more than $100 USD",
                      "action": {
                        "discount": {
                          "type": "PERCENT",
                          "percent_off": 25,
                          "effect": "APPLY_TO_ORDER"
                        }
                      },
                      "metadata": {
                        "level": "A-21"
                      },
                      "hierarchy": 1,
                      "campaign": {
                        "id": "camp_VEL7UX0jZjrvLx3hfNZBVzpq",
                        "start_date": "2022-09-21T00:00:00.000Z",
                        "expiration_date": "2022-09-30T00:00:00.000Z",
                        "validity_day_of_week": [
                          1,
                          2,
                          3,
                          4,
                          5
                        ],
                        "active": true,
                        "object": "campaign"
                      },
                      "campaign_id": null,
                      "active": false,
                      "start_date": "2022-09-22T00:00:00.000Z",
                      "expiration_date": "2022-09-29T00:00:00.000Z",
                      "validity_timeframe": {
                        "interval": "P3D",
                        "duration": "P2D"
                      },
                      "validity_day_of_week": [
                        1,
                        2,
                        3
                      ],
                      "summary": {
                        "redemptions": {
                          "total_redeemed": 0
                        },
                        "orders": {
                          "total_amount": 0,
                          "total_discount_amount": 0
                        }
                      },
                      "object": "promotion_tier",
                      "validation_rule_assignments": {
                        "object": "list",
                        "data_ref": "data",
                        "data": [
                          {
                            "id": "asgm_8e3e53ZgDNcoRGAI",
                            "rule_id": "val_q8qUBMOh5qIQ",
                            "related_object_id": "promo_hINAfBAVhmFuSAzi3vptfyxW",
                            "related_object_type": "promotion_tier",
                            "created_at": "2022-09-22T12:40:23.286Z",
                            "object": "validation_rules_assignment"
                          }
                        ],
                        "total": 1
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "delete-promotion-tier",
        "tags": [
          "Promotions"
        ],
        "summary": "Delete Promotion Tier",
        "description": "This method deletes a promotion tier.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns no content if deletion is successful."
          }
        }
      }
    },
    "/v1/promotions/tiers/{promotionTierId}/enable": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterPromotionTierId"
          },
          "name": "promotionTierId",
          "in": "path",
          "required": true,
          "description": "Unique promotion tier ID."
        }
      ],
      "post": {
        "operationId": "enable-promotion-tier",
        "tags": [
          "Promotions"
        ],
        "summary": "Enable Promotion Tier",
        "description": "This method enables a promotion tier, i.e. makes the active parameter   true.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns the promotion tier object with an updated `active` parameter.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromotionsTiersEnableResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "id": "promo_NzjTc3ZXTe7md5SziK3uYtei",
                      "created_at": "2022-09-21T11:38:34.962Z",
                      "updated_at": "2022-09-22T10:32:07.712Z",
                      "name": "Order more than $100",
                      "banner": "Order more than $100",
                      "action": {
                        "discount": {
                          "type": "AMOUNT",
                          "amount_off": 3000,
                          "effect": "APPLY_TO_ORDER"
                        }
                      },
                      "metadata": {},
                      "hierarchy": 1,
                      "campaign": {
                        "id": "camp_VEL7UX0jZjrvLx3hfNZBVzpq",
                        "start_date": "2022-09-21T00:00:00.000Z",
                        "expiration_date": "2022-09-30T00:00:00.000Z",
                        "validity_day_of_week": [
                          1,
                          2,
                          3,
                          4,
                          5
                        ],
                        "active": true,
                        "object": "campaign"
                      },
                      "campaign_id": null,
                      "active": true,
                      "start_date": "2022-09-21T00:00:00.000Z",
                      "expiration_date": "2022-09-30T00:00:00.000Z",
                      "validity_day_of_week": [
                        1,
                        2,
                        3,
                        4,
                        5
                      ],
                      "summary": {
                        "redemptions": {
                          "total_redeemed": 2
                        },
                        "orders": {
                          "total_amount": 37650,
                          "total_discount_amount": 6000
                        }
                      },
                      "object": "promotion_tier",
                      "validation_rule_assignments": null
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/promotions/tiers/{promotionTierId}/disable": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterPromotionTierId"
          },
          "name": "promotionTierId",
          "in": "path",
          "required": true,
          "description": "Unique promotion tier ID."
        }
      ],
      "post": {
        "operationId": "disable-promotion-tier",
        "tags": [
          "Promotions"
        ],
        "summary": "Disable Promotion Tier",
        "description": "This method disables a promotion tier, i.e. makes the active parameter   false.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns the promotion tier object with an updated `active` parameter.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromotionsTiersDisableResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "id": "promo_NzjTc3ZXTe7md5SziK3uYtei",
                      "created_at": "2022-09-21T11:38:34.962Z",
                      "updated_at": "2022-09-22T10:34:09.529Z",
                      "name": "Order more than $100",
                      "banner": "Order more than $100",
                      "action": {
                        "discount": {
                          "type": "AMOUNT",
                          "amount_off": 3000,
                          "effect": "APPLY_TO_ORDER"
                        }
                      },
                      "metadata": {},
                      "hierarchy": 1,
                      "campaign": {
                        "id": "camp_VEL7UX0jZjrvLx3hfNZBVzpq",
                        "start_date": "2022-09-21T00:00:00.000Z",
                        "expiration_date": "2022-09-30T00:00:00.000Z",
                        "validity_day_of_week": [
                          1,
                          2,
                          3,
                          4,
                          5
                        ],
                        "active": true,
                        "object": "campaign"
                      },
                      "campaign_id": null,
                      "active": false,
                      "start_date": "2022-09-21T00:00:00.000Z",
                      "expiration_date": "2022-09-30T00:00:00.000Z",
                      "validity_day_of_week": [
                        1,
                        2,
                        3,
                        4,
                        5
                      ],
                      "summary": {
                        "redemptions": {
                          "total_redeemed": 2
                        },
                        "orders": {
                          "total_amount": 37650,
                          "total_discount_amount": 6000
                        }
                      },
                      "object": "promotion_tier",
                      "validation_rule_assignments": null
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/promotions/stacks": {
      "get": {
        "operationId": "list-all-promotion-stacks",
        "tags": [
          "Promotions"
        ],
        "summary": "List Promotion Stacks",
        "description": "This method enables you to list promotion stacks irrespective of the campaign they are associated with. \nYou can use filters in the query parameters to specify the stacks to be returned in the response.\n# Advanced filters for fetching promotion stacks\n\n",
        "parameters": [
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterLimit"
            },
            "in": "query",
            "name": "limit",
            "description": "Limits the number of objects to be returned. The limit can range between 1 and 100 items."
          },
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterPage"
            },
            "in": "query",
            "description": "Which page of results to return. The lowest value is 1.",
            "name": "page"
          },
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterOrderListAllPromotionStacks"
            },
            "in": "query",
            "name": "order",
            "description": "Sorts the results using one of the filtering options, where the dash - preceding a sorting option means sorting in a descending order."
          },
          {
            "$ref": "#/components/parameters/created_at"
          },
          {
            "$ref": "#/components/parameters/updated_at"
          }
        ],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns a dictionary with a `data` property that contains an array of promotion stacks across all your campaigns.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromotionsStacksListResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "object": "list",
                      "data_ref": "data",
                      "data": [
                        {
                          "id": "stack_SLuhQrAt3mXwHg776lYkzZO8",
                          "name": "Stack 2",
                          "created_at": "2022-11-03T10:18:58.356Z",
                          "campaign_id": "camp_h8RyP6FV94F3Ev2odP24j5p1",
                          "object": "promotion_stack",
                          "tiers": {
                            "ids": [
                              "promo_Mfww2TuoeU23enqSmnz0f3rh",
                              "promo_vU5IHaLKS7mmZ3ylABET6ikb",
                              "promo_TeHA11JlfN29mUftDcpqIWWq",
                              "promo_bhKBsIX3tO7yqmpTLCLLuaud"
                            ],
                            "hierarchy_mode": "MANUAL"
                          }
                        },
                        {
                          "id": "stack_twQWp1TyaxX5RlSqn061xGVy",
                          "name": "First stack",
                          "created_at": "2021-12-27T11:59:21.838Z",
                          "updated_at": "2022-12-16T08:22:51.970Z",
                          "campaign_id": "camp_HXsR22VUMC4hN4DR7eAhCalp",
                          "object": "promotion_stack",
                          "tiers": {
                            "ids": [
                              "promo_Vet0vCNyyo5pOddHfu2X3FCB",
                              "promo_PoIyRVFA5c0Jk514xCpzKHga",
                              "promo_Mwy9XpA0TLctSGriM5kum0qp"
                            ],
                            "hierarchy_mode": "MANUAL"
                          }
                        },
                        {
                          "id": "stack_vhCqN5PY7rmPw8yACRvHRZaz",
                          "name": "Second stack",
                          "created_at": "2021-12-27T11:55:47.431Z",
                          "updated_at": "2022-12-16T08:22:52.221Z",
                          "campaign_id": "camp_HXsR22VUMC4hN4DR7eAhCalp",
                          "object": "promotion_stack",
                          "tiers": {
                            "ids": [
                              "promo_Vet0vCNyyo5pOddHfu2X3FCB",
                              "promo_PoIyRVFA5c0Jk514xCpzKHga",
                              "promo_Mwy9XpA0TLctSGriM5kum0qp"
                            ],
                            "hierarchy_mode": "MANUAL"
                          }
                        },
                        {
                          "id": "stack_zwChew7GY1AnDZJQ6GVP2sdT",
                          "name": "Third stack",
                          "created_at": "2021-12-27T11:54:26.283Z",
                          "updated_at": "2022-12-16T08:22:52.483Z",
                          "campaign_id": "camp_HXsR22VUMC4hN4DR7eAhCalp",
                          "object": "promotion_stack",
                          "tiers": {
                            "ids": [
                              "promo_Vet0vCNyyo5pOddHfu2X3FCB",
                              "promo_Mwy9XpA0TLctSGriM5kum0qp",
                              "promo_PoIyRVFA5c0Jk514xCpzKHga"
                            ],
                            "hierarchy_mode": "MANUAL"
                          }
                        },
                        {
                          "id": "stack_NS5hEUznL9XPa89rbrOZYMey",
                          "name": "Fourth stack",
                          "created_at": "2021-12-27T11:48:43.982Z",
                          "campaign_id": "camp_HXsR22VUMC4hN4DR7eAhCalp",
                          "object": "promotion_stack",
                          "tiers": {
                            "ids": [
                              "promo_Vet0vCNyyo5pOddHfu2X3FCB",
                              "promo_Mwy9XpA0TLctSGriM5kum0qp",
                              "promo_PoIyRVFA5c0Jk514xCpzKHga"
                            ],
                            "hierarchy_mode": "MANUAL"
                          }
                        },
                        {
                          "id": "stack_Rz0NvFtCZOObS3J5R68KET17",
                          "name": "Third stack",
                          "created_at": "2021-12-27T11:40:57.426Z",
                          "campaign_id": "camp_HXsR22VUMC4hN4DR7eAhCalp",
                          "object": "promotion_stack",
                          "tiers": {
                            "ids": [
                              "promo_Vet0vCNyyo5pOddHfu2X3FCB",
                              "promo_PoIyRVFA5c0Jk514xCpzKHga"
                            ],
                            "hierarchy_mode": "MANUAL"
                          }
                        },
                        {
                          "id": "stack_e8pH0nIuANmYRPE0x8hwDrpm",
                          "name": "Second stack",
                          "created_at": "2021-12-27T08:43:13.875Z",
                          "campaign_id": "camp_HXsR22VUMC4hN4DR7eAhCalp",
                          "object": "promotion_stack",
                          "tiers": {
                            "ids": [
                              "promo_Mwy9XpA0TLctSGriM5kum0qp",
                              "promo_PoIyRVFA5c0Jk514xCpzKHga"
                            ],
                            "hierarchy_mode": "MANUAL"
                          }
                        },
                        {
                          "id": "stack_3Q4EJpZqg3DI5IRwgBYfsb37",
                          "name": "First stack",
                          "created_at": "2021-12-27T08:43:13.498Z",
                          "campaign_id": "camp_HXsR22VUMC4hN4DR7eAhCalp",
                          "object": "promotion_stack",
                          "tiers": {
                            "ids": [
                              "promo_Vet0vCNyyo5pOddHfu2X3FCB",
                              "promo_PoIyRVFA5c0Jk514xCpzKHga"
                            ],
                            "hierarchy_mode": "MANUAL"
                          }
                        },
                        {
                          "id": "stack_KxSD0GahLUg9ULB6TseGfUHJ",
                          "name": "Stack 1",
                          "created_at": "2021-12-23T12:28:38.881Z",
                          "campaign_id": "camp_h8RyP6FV94F3Ev2odP24j5p1",
                          "object": "promotion_stack",
                          "tiers": {
                            "ids": [
                              "promo_NMex647s5UushvbBUJmYT2Fc",
                              "promo_4TqHr24boFISDrcOHSlfAxwm"
                            ],
                            "hierarchy_mode": "MANUAL"
                          }
                        }
                      ],
                      "total": 9
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/promotions/{campaignId}/stacks": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterCampaignId"
          },
          "name": "campaignId",
          "in": "path",
          "required": true,
          "description": "Unique campaign ID."
        }
      ],
      "get": {
        "operationId": "list-promotion-stacks-in-campaign",
        "tags": [
          "Promotions"
        ],
        "summary": "List Promotion Stacks in Campaign",
        "description": "This method enables you to list promotion stacks from a specified campaign.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns a list of promotion stack objects.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromotionsStacksListResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "object": "list",
                      "data_ref": "data",
                      "data": [
                        {
                          "id": "stack_p0WhtyyDU95crobleMpRabhH",
                          "name": "First stack",
                          "created_at": "2022-09-22T13:03:25.740Z",
                          "campaign_id": "camp_99HUWI53bVyLzPN1Fg5TBLWX",
                          "object": "promotion_stack",
                          "tiers": {
                            "ids": [
                              "promo_dJNhAEeV5sR5oPQq1UrUdnMC",
                              "promo_aaAF8mVAzA0PF1igia2OC63d"
                            ],
                            "hierarchy_mode": "MANUAL"
                          }
                        },
                        {
                          "id": "stack_XAzn8AFR3Ks3DBPLAQxV7zHe",
                          "name": "Second stack",
                          "created_at": "2022-09-22T13:03:25.903Z",
                          "campaign_id": "camp_99HUWI53bVyLzPN1Fg5TBLWX",
                          "object": "promotion_stack",
                          "tiers": {
                            "ids": [
                              "promo_aaAF8mVAzA0PF1igia2OC63d",
                              "promo_dJNhAEeV5sR5oPQq1UrUdnMC"
                            ],
                            "hierarchy_mode": "MANUAL"
                          }
                        }
                      ],
                      "total": 2
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "create-promotion-stack",
        "tags": [
          "Promotions"
        ],
        "summary": "Create Promotion Stack",
        "description": "This method creates one promotion stack. The sequence of promotion tier IDs will determine the promotion stacking order.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "requestBody": {
          "description": "Specify the order of promotion tiers for the promotion stack.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PromotionsStacksCreateRequestBody"
              },
              "examples": {
                "Example": {
                  "value": {
                    "name": "Fifth Stack",
                    "tiers": {
                      "ids": [
                        "promo_aaAF8mVAzA0PF1igia2OC63d",
                        "promo_t9zdL6XMFk7B8fQ23zxELtdE",
                        "promo_dJNhAEeV5sR5oPQq1UrUdnMC"
                      ],
                      "hierarchy_mode": "MANUAL"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "2XX": {
            "description": "Returns a new stack object if a valid promotion campaign identifier was provided in the path and available promotion IDs in the payload.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromotionsStacksCreateResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "id": "stack_q2AmzFvOMCmg4Wdu5bDBlME6",
                      "name": "Fifth Stack",
                      "created_at": "2022-09-23T07:44:53.888Z",
                      "campaign_id": "camp_99HUWI53bVyLzPN1Fg5TBLWX",
                      "object": "promotion_stack",
                      "tiers": {
                        "ids": [
                          "promo_aaAF8mVAzA0PF1igia2OC63d",
                          "promo_t9zdL6XMFk7B8fQ23zxELtdE",
                          "promo_dJNhAEeV5sR5oPQq1UrUdnMC"
                        ],
                        "hierarchy_mode": "MANUAL"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/promotions/{campaignId}/stacks/{stackId}": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterCampaignId"
          },
          "name": "campaignId",
          "in": "path",
          "required": true,
          "description": "ID of the promotion campaign. You can either pass the campaign ID, which was assigned by Voucherify, or the name of the campaign as the path parameter value, e.g., Loyalty Campaign. "
        },
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterPromotionStackId"
          },
          "name": "stackId",
          "in": "path",
          "required": true,
          "description": "Promotion stack ID."
        }
      ],
      "get": {
        "operationId": "get-promotion-stack",
        "tags": [
          "Promotions"
        ],
        "summary": "Get Promotion Stack",
        "description": "This method returns the details of a promotion stack, including the promotion tiers grouped within the stack.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns a stack object if valid identifiers were provided in the path.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromotionsStacksGetResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "id": "stack_p0WhtyyDU95crobleMpRabhH",
                      "name": "First stack",
                      "created_at": "2022-09-22T13:03:25.740Z",
                      "campaign_id": "camp_99HUWI53bVyLzPN1Fg5TBLWX",
                      "object": "promotion_stack",
                      "tiers": {
                        "ids": [
                          "promo_dJNhAEeV5sR5oPQq1UrUdnMC",
                          "promo_aaAF8mVAzA0PF1igia2OC63d"
                        ],
                        "hierarchy_mode": "MANUAL"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "update-promotion-stack",
        "tags": [
          "Promotions"
        ],
        "summary": "Update Promotion Stack",
        "description": "This methods allows for editing an existing stack.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "requestBody": {
          "description": "Specify the promotion stack parameters that you would like to update.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PromotionsStacksUpdateRequestBody"
              },
              "examples": {
                "Example": {
                  "value": {
                    "name": "Fifth Stack Modified",
                    "tiers": {
                      "ids": [
                        "promo_aaAF8mVAzA0PF1igia2OC63d",
                        "promo_t9zdL6XMFk7B8fQ23zxELtdE"
                      ],
                      "hierarchy_mode": "MANUAL"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "2XX": {
            "description": "Returns a promotion stack with updated parameters if the update was successful.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromotionsStacksUpdateResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "id": "stack_q2AmzFvOMCmg4Wdu5bDBlME6",
                      "name": "Fifth Stack Modified",
                      "created_at": "2022-09-23T07:44:53.888Z",
                      "updated_at": "2022-09-23T07:59:44.172Z",
                      "campaign_id": "camp_99HUWI53bVyLzPN1Fg5TBLWX",
                      "object": "promotion_stack",
                      "tiers": {
                        "ids": [
                          "promo_aaAF8mVAzA0PF1igia2OC63d",
                          "promo_t9zdL6XMFk7B8fQ23zxELtdE"
                        ],
                        "hierarchy_mode": "MANUAL"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "delete-promotion-stack",
        "tags": [
          "Promotions"
        ],
        "summary": "Delete Promotion Stack",
        "description": "This method deletes a promotion stack.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns no content if deletion is successful."
          }
        }
      }
    },
    "/v1/rewards": {
      "get": {
        "operationId": "list-rewards",
        "tags": [
          "Rewards"
        ],
        "summary": "List Rewards",
        "description": "Retrieve rewards.",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterRewardAssignmentId"
            },
            "in": "query",
            "name": "assignment_id",
            "description": "A unique reward assignment ID. Use this parameter to get the reward details in the context of an assignment ID."
          }
        ],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns a dictionary of reward objects.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RewardsListResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "object": "list",
                      "data_ref": "data",
                      "data": [
                        {
                          "id": "rew_3e7IqghVtTR7L3xQMSCxjFu2",
                          "name": "Get $10",
                          "type": "CAMPAIGN",
                          "parameters": {
                            "campaign": {
                              "id": "camp_FNYR4jhqZBM9xTptxDGgeNBV",
                              "balance": 1000,
                              "type": "GIFT_VOUCHERS"
                            }
                          },
                          "stock": null,
                          "redeemed": null,
                          "attributes": {},
                          "created_at": "2022-03-10T08:40:20.917Z",
                          "updated_at": "2022-08-17T07:52:56.965Z",
                          "metadata": null,
                          "object": "reward"
                        },
                        {
                          "id": "rew_nIy4gHpQHle2c3pNMwuj7G6j",
                          "name": "Get 100 Points",
                          "type": "CAMPAIGN",
                          "parameters": {
                            "campaign": {
                              "id": "camp_E87CubZLZ8eoQt3c4kAEZsx0",
                              "balance": 100,
                              "type": "LOYALTY_PROGRAM"
                            }
                          },
                          "stock": null,
                          "redeemed": null,
                          "attributes": {},
                          "created_at": "2022-02-28T11:56:13.764Z",
                          "updated_at": null,
                          "metadata": null,
                          "object": "reward"
                        },
                        {
                          "id": "rew_BNZ3van6AF2AiquWp8Lfw0xq",
                          "name": "30% discount",
                          "type": "CAMPAIGN",
                          "parameters": {
                            "campaign": {
                              "id": "camp_ZtHLATYVpItqmuSqmaz1rZ2Y",
                              "type": "DISCOUNT_COUPONS"
                            }
                          },
                          "stock": null,
                          "redeemed": null,
                          "attributes": {},
                          "created_at": "2022-08-11T09:48:50.609Z",
                          "updated_at": null,
                          "metadata": {},
                          "object": "reward"
                        },
                        {
                          "id": "rew_nlV8bgWU1jNO9YWQ7CdZmzq7",
                          "name": "1 point = $0.01",
                          "type": "COIN",
                          "parameters": {
                            "coin": {
                              "exchange_ratio": 0.01,
                              "points_ratio": 1
                            }
                          },
                          "stock": null,
                          "redeemed": null,
                          "attributes": {},
                          "created_at": "2022-08-11T16:45:21.582Z",
                          "updated_at": null,
                          "metadata": {
                            "Type": "0.01"
                          },
                          "object": "reward"
                        },
                        {
                          "id": "rew_x6FmF1KFdDs06hYPr9lK6ajf",
                          "name": "Material Reward",
                          "type": "MATERIAL",
                          "parameters": {
                            "product": {
                              "id": "prod_0b7d7dfb05cbe5c616",
                              "sku_id": "sku_0b7d7dfb090be5c619"
                            }
                          },
                          "stock": "4",
                          "redeemed": "1",
                          "attributes": {
                            "image_url": "https://voucherify-uploads.s3.amazonaws.com/org_2qt8DYlM/img_wJHdZUAVSpWtYM6ORq4up3I2.png",
                            "description": "Get a Comic Book in Archie's series."
                          },
                          "created_at": "2022-08-17T07:13:32.781Z",
                          "updated_at": null,
                          "metadata": {
                            "Type": "Personal"
                          },
                          "object": "reward"
                        }
                      ],
                      "total": 5
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "create-reward",
        "tags": [
          "Rewards"
        ],
        "summary": "Create Reward",
        "description": "Create a new reward.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "requestBody": {
          "description": "Define parameters of the new reward.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RewardsCreateRequestBody"
              },
              "examples": {
                "Gift card credits": {
                  "value": {
                    "name": "Digital - Gift Card Reward",
                    "type": "CAMPAIGN",
                    "metadata": {
                      "Type": "Gift"
                    },
                    "parameters": {
                      "campaign": {
                        "id": "camp_hC2GdqYtOmTT45zfhib62cK1",
                        "balance": 3000
                      }
                    }
                  }
                },
                "Discount Coupon": {
                  "value": {
                    "name": "Digital - Discount Coupon",
                    "type": "CAMPAIGN",
                    "metadata": {
                      "Type": "Discount"
                    },
                    "parameters": {
                      "campaign": {
                        "id": "camp_hC2GdqYtOmTT45zfhib62cK1"
                      }
                    }
                  }
                },
                "Loyalty Points": {
                  "value": {
                    "name": "Digital - Loyalty Points Reward",
                    "type": "CAMPAIGN",
                    "metadata": {
                      "Type": "Loyalty Points"
                    },
                    "parameters": {
                      "campaign": {
                        "id": "camp_hC2GdqYtOmTT45zfhib62cK1",
                        "balance": 100
                      }
                    }
                  }
                },
                "Pay with Points": {
                  "value": {
                    "name": "Pay with Points Reward",
                    "type": "COIN",
                    "metadata": {
                      "Type": "Coin"
                    },
                    "parameters": {
                      "coin": {
                        "exchange_ratio": 900,
                        "points_ratio": 8000
                      }
                    }
                  }
                },
                "Material Reward": {
                  "value": {
                    "name": "Get a Comic Book",
                    "metadata": {
                      "Type": "Material"
                    },
                    "type": "MATERIAL",
                    "parameters": {
                      "product": {
                        "id": "prod_0b15f6b9f650c16990",
                        "sku_id": "sku_0b1621b319d248b79f"
                      }
                    },
                    "stock": 2,
                    "attributes": {
                      "image_url": "https://www.website.com/img_fPHsk9Ob.png",
                      "description": "Archie's Series"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "2XX": {
            "description": "Returns a reward object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RewardsCreateResponseBody"
                },
                "examples": {
                  "Material": {
                    "value": {
                      "id": "rew_Crmu3hu2FKZWZIML59AeAs1n",
                      "name": "Material Reward",
                      "type": "MATERIAL",
                      "parameters": {
                        "product": {
                          "id": "prod_0b15f6b9f650c16990",
                          "sku_id": "sku_0b1621b319d248b79f"
                        }
                      },
                      "stock": "2",
                      "redeemed": null,
                      "attributes": {
                        "image_url": "{{internalVoucherifyURL}}",
                        "description": "Archie's Series"
                      },
                      "created_at": "2022-08-25T11:20:58.172Z",
                      "updated_at": null,
                      "metadata": {
                        "Type": "Material"
                      },
                      "object": "reward"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/rewards/{rewardId}": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterRewardId"
          },
          "name": "rewardId",
          "in": "path",
          "required": true,
          "description": "A unique reward ID."
        }
      ],
      "get": {
        "operationId": "get-reward",
        "tags": [
          "Rewards"
        ],
        "summary": "Get Reward",
        "description": "Retrieve a reward by the reward ID.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns a reward object if a valid identifier was provided. ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Reward"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "update-reward",
        "tags": [
          "Rewards"
        ],
        "summary": "Update Reward",
        "description": "Update the details of a reward.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "requestBody": {
          "description": "Define the parameters to be updated for the reward.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RewardsUpdateRequestBody"
              },
              "examples": {
                "Gift card credits": {
                  "value": {
                    "name": "Digital - Gift Card Reward",
                    "metadata": {
                      "Type": "Gift"
                    },
                    "parameters": {
                      "campaign": {
                        "id": "camp_hC2GdqYtOmTT45zfhib62cK1",
                        "balance": 3000
                      }
                    }
                  }
                },
                "Discount Coupon": {
                  "value": {
                    "name": "Digital - Discount Coupon",
                    "metadata": {
                      "Type": "Discount"
                    },
                    "parameters": {
                      "campaign": {
                        "id": "camp_hC2GdqYtOmTT45zfhib62cK1"
                      }
                    }
                  }
                },
                "Loyalty points": {
                  "value": {
                    "name": "Digital - Loyalty Points Reward",
                    "metadata": {
                      "Type": "Loyalty Points"
                    },
                    "parameters": {
                      "campaign": {
                        "id": "camp_hC2GdqYtOmTT45zfhib62cK1",
                        "balance": 100
                      }
                    }
                  }
                },
                "Pay with Points": {
                  "value": {
                    "name": "Pay with Points Reward",
                    "metadata": {
                      "Type": "Coin"
                    },
                    "parameters": {
                      "coin": {
                        "exchange_ratio": 900,
                        "points_ratio": 8000
                      }
                    }
                  }
                },
                "Material Reward": {
                  "value": {
                    "name": "Get a Comic Book",
                    "metadata": {
                      "Type": "Physical product"
                    },
                    "parameters": {
                      "product": {
                        "id": "prod_0b15f6b9f650c16990",
                        "sku_id": "sku_0b1621b319d248b79f"
                      }
                    },
                    "stock": 2,
                    "attributes": {
                      "image_url": "{{internalVoucherifyURL}}",
                      "description": "Comic book"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "2XX": {
            "description": "Returns an updated reward object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RewardsUpdateResponseBody"
                },
                "examples": {
                  "Material": {
                    "value": {
                      "id": "rew_wg2pvCr5LDhCq4uVQZ9LhuZm",
                      "name": "Get a Comic Book",
                      "type": "MATERIAL",
                      "parameters": {
                        "product": {
                          "id": "prod_0b15f6b9f650c16990",
                          "sku_id": "sku_0b1621b319d248b79f"
                        }
                      },
                      "stock": "2",
                      "redeemed": null,
                      "attributes": {
                        "image_url": "{{internalVoucherifyURL}}",
                        "description": "Comic book"
                      },
                      "created_at": "2022-08-25T10:00:12.794Z",
                      "updated_at": "2022-08-25T10:06:30.655Z",
                      "metadata": {
                        "Type": "Physical product"
                      },
                      "object": "reward"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "delete-reward",
        "tags": [
          "Rewards"
        ],
        "summary": "Delete Reward",
        "description": "Delete a reward.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns no content if deletion is successful."
          }
        }
      }
    },
    "/v1/rewards/{rewardId}/assignments": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterRewardId"
          },
          "name": "rewardId",
          "in": "path",
          "required": true,
          "description": "A unique reward ID."
        }
      ],
      "get": {
        "operationId": "list-reward-assignments",
        "tags": [
          "Rewards"
        ],
        "summary": "List Reward Assignments",
        "description": "Retrieve reward assignments by the reward ID.",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/page"
          }
        ],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns a dictionary of reward assignment objects. Each object contains information regarding the resource to which the reward was assigned and the cost in loyalty points for the reward.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RewardsAssignmentsListResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "object": "list",
                      "data_ref": "data",
                      "data": [
                        {
                          "id": "rewa_PbIRoMXpwe5QhobW4JKu0VjH",
                          "reward_id": "rew_C7wS9eHFDN4CIbXI5PpLSkGY",
                          "related_object_id": "camp_wciTvaOfYmAa3EmIIW3QpXXZ",
                          "related_object_type": "campaign",
                          "parameters": {
                            "loyalty": {
                              "points": 15
                            }
                          },
                          "created_at": "2022-08-17T08:13:02.507Z",
                          "updated_at": null,
                          "object": "reward_assignment"
                        },
                        {
                          "id": "rewa_pJYQBXSitK2OVPK3XMXZK76X",
                          "reward_id": "rew_C7wS9eHFDN4CIbXI5PpLSkGY",
                          "related_object_id": "camp_jcErmtGAOmHUAy0oUgkwKnPZ",
                          "related_object_type": "campaign",
                          "parameters": {
                            "loyalty": {
                              "points": 20
                            }
                          },
                          "created_at": "2022-08-24T11:40:22.418Z",
                          "updated_at": null,
                          "object": "reward_assignment"
                        }
                      ],
                      "total": 2
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "create-reward-assignment",
        "tags": [
          "Rewards"
        ],
        "summary": "Create Reward Assignment",
        "description": "Assigns a reward to a specified loyalty campaign.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "requestBody": {
          "description": "Provide the campaign ID of the campaign to which the reward is to be assigned and define the cost of the reward in terms of loyalty points.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RewardsAssignmentsCreateRequestBody"
              },
              "examples": {
                "Example": {
                  "value": {
                    "campaign": "camp_OTuGGP90PivbvROsRvfM65El",
                    "parameters": {
                      "loyalty": {
                        "points": 39
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "2XX": {
            "description": "Returns a reward assignment object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RewardsAssignmentsCreateResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "id": "rewa_cqD2XE5x8LcD2c1FLlvqikti",
                      "reward_id": "rew_C7wS9eHFDN4CIbXI5PpLSkGY",
                      "related_object_id": "camp_OTuGGP90PivbvROsRvfM65El",
                      "related_object_type": "campaign",
                      "parameters": {
                        "loyalty": {
                          "points": 39
                        }
                      },
                      "created_at": "2022-08-24T13:44:42.610Z",
                      "updated_at": null,
                      "object": "reward_assignment"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/rewards/{rewardId}/assignments/{assignmentId}": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterRewardId"
          },
          "name": "rewardId",
          "in": "path",
          "required": true,
          "description": "A unique reward ID."
        },
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterRewardAssignmentId"
          },
          "name": "assignmentId",
          "in": "path",
          "required": true,
          "description": "A unique reward assignment ID."
        }
      ],
      "put": {
        "operationId": "update-reward-assignment",
        "tags": [
          "Rewards"
        ],
        "summary": "Update Reward Assignment",
        "description": "Update the number of points needed to successfully redeem the reward.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "requestBody": {
          "description": "Define the number of points required to exchange for the reward.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RewardsAssignmentsUpdateRequestBody"
              },
              "examples": {
                "Example": {
                  "value": {
                    "parameters": {
                      "loyalty": {
                        "points": 35
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "2XX": {
            "description": "Returns the updated reward assignment object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RewardsAssignmentsUpdateResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "id": "rewa_pJYQBXSitK2OVPK3XMXZK76X",
                      "reward_id": "rew_C7wS9eHFDN4CIbXI5PpLSkGY",
                      "related_object_id": "camp_jcErmtGAOmHUAy0oUgkwKnPZ",
                      "related_object_type": "campaign",
                      "parameters": {
                        "loyalty": {
                          "points": 35
                        }
                      },
                      "created_at": "2022-08-24T11:40:22.418Z",
                      "updated_at": "2022-08-24T13:02:32.262Z",
                      "object": "reward_assignment"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "delete-reward-assignment",
        "tags": [
          "Rewards"
        ],
        "summary": "Delete Reward Assignment",
        "description": "This method deletes a reward assignment for a particular reward.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns no content if deletion is successful."
          }
        }
      },
      "get": {
        "operationId": "get-reward-assignment",
        "tags": [
          "Rewards"
        ],
        "summary": "Get Reward Assignment",
        "description": "Retrieve a reward assignment.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns a reward assignment object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RewardsAssignmentsGetResponseBody"
                }
              }
            }
          }
        }
      }
    },
    "/v1/publications": {
      "get": {
        "operationId": "list-publications",
        "tags": [
          "Publications"
        ],
        "summary": "List Publications",
        "description": "Retrieve a list of publications. To return a **particular** publication, you can use the source_id query parameter and provide the source_id of the publication you are looking for specifically.\n# Pagination\n 🚧 Important!\n If you want to scroll through a huge set of records, it is recommended to use the Exports API. This API will return an error page_over_limit if you reach a page above 1000.\n# Filter Query\nThe filters query parameter allows for joining multiple parameters with logical operators. The syntax looks as follows:\n\n## Operators:\n\n## Examples\n\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterOrderListPublications"
            },
            "in": "query",
            "name": "order",
            "description": "Sorts the results using one of the filtering options, where the dash - preceding a sorting option means sorting in a descending order."
          },
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterString"
            },
            "in": "query",
            "name": "campaign",
            "description": "Filters by a given campaign name."
          },
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterCustomerId"
            },
            "in": "query",
            "name": "customer",
            "description": "Filters by a unique customer ID."
          },
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterCode"
            },
            "in": "query",
            "name": "voucher",
            "description": "Filters by a given voucher code."
          },
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterResultListPublications"
            },
            "in": "query",
            "name": "result",
            "description": "Filters by a publication result."
          },
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterVoucherTypeListPublications"
            },
            "in": "query",
            "name": "voucher_type",
            "description": "Filters by a voucher type."
          },
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterBoolean"
            },
            "in": "query",
            "name": "is_referral_code",
            "description": "This filter works only for the true option. If set to true, the query returns only publications of codes from referral campaigns. "
          },
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterFiltersListPublications"
            },
            "in": "query",
            "name": "filters",
            "description": "Filters for listing publications.",
            "style": "deepObject",
            "explode": true
          },
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterString"
            },
            "in": "query",
            "name": "source_id",
            "description": "Using this endpoint with a particular publication source_id, which was sent with the original request to create a publication, returns in the response, exactly the same code published initially because the code was assigned to the given publication. As a result, you can use this endpoint as a reference and return a code that was assigned in a publication by using a particular source_id."
          }
        ],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns a list of publications you've previously created with <!-- [create publication](OpenAPI.json/paths/~1publications/post) -->[create publication](ref:create-publication) or implicitly by the distribution manager. The publications are returned in sorted order, with the most recent ones appearing first.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicationsListResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "object": "list",
                      "data_ref": "publications",
                      "publications": [
                        {
                          "id": "pub_QzQT50e5i2y3bRoEVvhFgrKbZ7t6BRwu",
                          "object": "publication",
                          "created_at": "2022-09-28T13:31:23.522Z",
                          "customer_id": "cust_tAED42tFhLM9v7GmZUaklJFd",
                          "tracking_id": "cindy.jones@email.com",
                          "metadata": {
                            "distribution_id": "distr_WXm0CBttar2ug2hBx3EdPtS8Ei",
                            "source_type": "distribution",
                            "source_id": "distr_WXm0CBttar2ug2hBx3EdPtS8Ei"
                          },
                          "channel": "Automation",
                          "source_id": null,
                          "result": "SUCCESS",
                          "customer": {
                            "id": "cust_tAED42tFhLM9v7GmZUaklJFd",
                            "name": "Cindy Jones",
                            "email": "cindy.jones@email.com",
                            "source_id": "cindy.jones@email.com",
                            "metadata": {
                              "acquisition_channel": "Facebook"
                            },
                            "object": "customer"
                          },
                          "voucher": {
                            "code": "FNV5IrtY",
                            "object": "voucher",
                            "campaign": "Loyalty Campaign",
                            "loyalty_card": {
                              "points": 0,
                              "balance": 0
                            },
                            "is_referral_code": false
                          },
                          "vouchers_id": [
                            "v_i3HOzVClfJUDia0qCu7TSuGfDj7c0dgD"
                          ]
                        },
                        {
                          "id": "pub_8KOKHObAjuemuI0b6225emIhmWDL1ZoX",
                          "object": "publication",
                          "created_at": "2022-09-28T13:31:02.766Z",
                          "customer_id": "cust_tAED42tFhLM9v7GmZUaklJFd",
                          "tracking_id": "sandy.jones@email.com",
                          "metadata": {},
                          "channel": "voucherify-website",
                          "source_id": null,
                          "result": "SUCCESS",
                          "customer": {
                            "id": "cust_tAED42tFhLM9v7GmZUaklJFd",
                            "name": "Sandy Jones",
                            "email": "sandy.jones@email.com",
                            "source_id": "sandy.jones@email.com",
                            "metadata": {
                              "acquisition_channel": "Facebook"
                            },
                            "object": "customer"
                          },
                          "voucher": {
                            "code": "Voucher-1",
                            "object": "voucher",
                            "campaign": null,
                            "discount": {
                              "type": "AMOUNT",
                              "amount_off": 200,
                              "amount_off_formula": "IF(VOUCHER_PUBLISH_COUNT = 1;25;5)",
                              "effect": "APPLY_TO_ORDER"
                            },
                            "is_referral_code": false
                          },
                          "vouchers_id": [
                            "v_1iEL92K634EIOqeYJw6AHrnjEhGPEdpu"
                          ]
                        },
                        {
                          "id": "pub_DcQPfyVYzomtkQGXFW7dcdyNoJ6vQ4NV",
                          "object": "publication",
                          "created_at": "2022-09-13T06:15:08.249Z",
                          "customer_id": "cust_ur1hIPGflbaAe14mLlLdon3G",
                          "tracking_id": "1",
                          "metadata": {},
                          "channel": "voucherify-website",
                          "source_id": null,
                          "result": "SUCCESS",
                          "customer": {
                            "id": "cust_ur1hIPGflbaAe14mLlLdon3G",
                            "name": "Bob Jones",
                            "email": "bob.jones@email.com",
                            "source_id": "1",
                            "metadata": {
                              "accepts_marketing": false
                            },
                            "object": "customer"
                          },
                          "voucher": {
                            "code": "GIFT-WOZaK5YF1Fs87tAX",
                            "object": "voucher",
                            "campaign": "Gift Cards",
                            "gift": {
                              "amount": 0,
                              "balance": 0
                            },
                            "is_referral_code": false
                          },
                          "vouchers_id": [
                            "v_yzOeb7vw63vbPfA30215dFm7aRXa8Xoc"
                          ]
                        }
                      ],
                      "total": 3
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "create-publication",
        "tags": [
          "Publications"
        ],
        "summary": "Create Publication",
        "description": "This method selects vouchers that are suitable for publication, adds a publish entry and returns the publication.\nA voucher is suitable for publication when its active and hasnt been published yet.  \n 🚧 Clearly define the source of the voucher\n You must clearly define which source you want to publish the voucher code from. It can either be a code from a campaign or a specific voucher identified by a code.  \n 🚧 Publish multiple vouchers\n In case you want to publish multiple vouchers within a single publication, you need to specify the campaign name and number of vouchers you want to publish.  \n 📘 Auto-update campaign\n In case you want to ensure the number of publishable codes increases automatically with the number of customers, you should use an **auto-update** campaign.",
        "parameters": [
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterBoolean"
            },
            "in": "query",
            "name": "join_once",
            "description": "Through this flag, you can control if a particular person gets only one and always the same code even if the app sends multiple publication requests. It means that if you have a referral program, a referrer is assigned only to one code if an integration sends publication requests more than once for the same customer."
          }
        ],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "requestBody": {
          "description": "Specify the publication parameters.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PublicationsCreateRequestBody"
              },
              "examples": {
                "Example - Specific Voucher": {
                  "value": {
                    "campaign": {
                      "name": "campaign-name"
                    },
                    "customer": {
                      "source_id": "source-id",
                      "Name": "Customer Name",
                      "email": "customer email"
                    },
                    "voucher": "voucher-code",
                    "metadata": {
                      "key": "value"
                    }
                  }
                },
                "Example - Random Voucher": {
                  "value": {
                    "campaign": {
                      "name": "campaign-name",
                      "count": 1
                    },
                    "customer": {
                      "source_id": "source-id",
                      "Name": "Customer Name",
                      "email": "customer email"
                    },
                    "voucher": "voucher-code",
                    "metadata": {
                      "key": "value"
                    }
                  }
                },
                "Example 3": {
                  "value": {
                    "source_id": "publication_source_ID_10",
                    "campaign": "Test - Discount Effect - Amount - Items",
                    "channel": "myown",
                    "customer": {
                      "source_id": "pub_source_customer_5",
                      "name": "Bob Jones",
                      "description": "A frequent customer",
                      "email": "bob.smith@email.com",
                      "phone": "+1 933 222 3333",
                      "address": {
                        "city": "New York",
                        "country": "United States",
                        "line_1": "123 Main St.",
                        "line_2": "APT 3 BLG 5",
                        "postal_code": "10001",
                        "state": "NY"
                      },
                      "metadata": {
                        "lang": "en",
                        "test": true
                      },
                      "birthday": "1901-12-01"
                    },
                    "metadata": {
                      "year": 2022
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "2XX": {
            "description": "Returns a publication object if a valid identifier was provided.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicationsCreateResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "id": "pub_ocaXCa023ayJ3WL1ARxUeKgIvg3JcEGh",
                      "object": "publication",
                      "created_at": "2022-09-30T16:30:32.924Z",
                      "customer_id": "cust_BB6F97yf0XqCe7hxVUV7M4sS",
                      "tracking_id": "pub_source_customer_5",
                      "metadata": {
                        "year": 2022
                      },
                      "channel": "myown",
                      "source_id": "publication_source_ID_10",
                      "result": "SUCCESS",
                      "customer": {
                        "id": "cust_BB6F97yf0XqCe7hxVUV7M4sS",
                        "name": "Bob Jones",
                        "email": "bob.smith@email.com",
                        "source_id": "pub_source_customer_5",
                        "metadata": {
                          "lang": "en",
                          "test": true
                        },
                        "object": "customer"
                      },
                      "voucher": {
                        "id": "v_6Hy5FdNlu3dP65fJu5BgXma31Sl3rgkf",
                        "code": "cEsMn0uA",
                        "campaign": "Test - Discount Effect - Amount - Items",
                        "campaign_id": "camp_dphuwqH7BOVkgh4JmpDtS32l",
                        "category": null,
                        "category_id": null,
                        "type": "DISCOUNT_VOUCHER",
                        "discount": {
                          "type": "AMOUNT",
                          "amount_off": 300,
                          "effect": "APPLY_TO_ITEMS"
                        },
                        "gift": null,
                        "loyalty_card": null,
                        "start_date": null,
                        "expiration_date": null,
                        "validity_timeframe": null,
                        "validity_day_of_week": null,
                        "active": true,
                        "additional_info": null,
                        "metadata": {},
                        "assets": {
                          "qr": {
                            "id": "U2FsdGVkX188XVmOotyCyR2j3G8sJR8HzS3DQ+6J1OElPWSmjlEnthuJc7rkc7WIVxjT4pTl1JVVkHEuGXNXdzRik11H8S18HQeQFJFiuwLZ2mzEC2zZitEinyUxtZwhnEHoi0eGAgYCG7iVMNuOQA==",
                            "url": "{{internalVoucherifyURL}}"
                          },
                          "barcode": {
                            "id": "U2FsdGVkX18wDd9CcLM0Ef7aBfUSXZUoCQpuNpk4CHGOipbn+wFkfzcIZGBtUlxrI2KsXciCqF+c93AKzsymq5Yw8eEAFF/FK5f94z4/sgzaLDvyBmPCXHuS11Ew9S4ZEMjdTkUJftER2IlxWaCARA==",
                            "url": "{{internalVoucherifyURL}}"
                          }
                        },
                        "is_referral_code": false,
                        "created_at": "2022-09-30T16:30:32.956Z",
                        "updated_at": null,
                        "holder_id": "cust_BB6F97yf0XqCe7hxVUV7M4sS",
                        "redemption": {
                          "quantity": 1,
                          "redeemed_quantity": 0,
                          "object": "list",
                          "url": "/v1/vouchers/cEsMn0uA/redemptions?page=1&limit=10"
                        },
                        "publish": {
                          "object": "list",
                          "count": 1,
                          "url": "/v1/vouchers/cEsMn0uA/publications?page=1&limit=10"
                        },
                        "object": "voucher"
                      },
                      "vouchers_id": [
                        "v_6Hy5FdNlu3dP65fJu5BgXma31Sl3rgkf"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/redemptions/{redemptionId}": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterString"
          },
          "name": "redemptionId",
          "in": "path",
          "required": true,
          "description": "ID of previously created redemption."
        }
      ],
      "get": {
        "operationId": "get-redemption",
        "tags": [
          "Redemptions"
        ],
        "summary": "Get Redemption",
        "description": "Return a redemption or redemption rollback object. This object can either be a successfull or failed redemption or redemption rollback.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns a redemption object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RedemptionsGetResponseBody"
                },
                "examples": {
                  "Discount Voucher": {
                    "value": {
                      "id": "r_0bade27c428db5873e",
                      "object": "redemption",
                      "date": "2022-09-12T07:29:28.211Z",
                      "customer_id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                      "tracking_id": "track_9B0kB92+bJa8a+PegaWREw==",
                      "metadata": {},
                      "result": "SUCCESS",
                      "order": {
                        "id": "ord_ebmAU9uv3dTE2Khqyh7i5ka7",
                        "source_id": null,
                        "created_at": "2022-09-12T07:29:26.245Z",
                        "updated_at": null,
                        "status": "PAID",
                        "amount": 22500,
                        "discount_amount": 300,
                        "total_discount_amount": 300,
                        "total_amount": 22200,
                        "applied_discount_amount": 300,
                        "total_applied_discount_amount": 300,
                        "items": [
                          {
                            "object": "order_item",
                            "product_id": "prod_0b2c36568000039138",
                            "quantity": 1,
                            "amount": 22500,
                            "price": 22500,
                            "subtotal_amount": 22500,
                            "product": {
                              "id": "prod_0b2c36568000039138",
                              "source_id": "86",
                              "name": "[Sample] Able Brewing System",
                              "price": 22500
                            }
                          }
                        ],
                        "metadata": {},
                        "customer": {
                          "id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                          "object": "customer"
                        },
                        "customer_id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                        "referrer_id": null,
                        "object": "order",
                        "redemptions": {
                          "r_0bade27c428db5873e": {
                            "date": "2022-09-12T07:29:26.282Z",
                            "related_object_type": "voucher",
                            "related_object_id": "v_c1yOEjZXOyVIe89VAYiRvL3QimZjXo8h"
                          }
                        }
                      },
                      "channel": {
                        "channel_id": "user_g24UoRO3Caxu7FCT4n5tpYEa3zUG0FrH",
                        "channel_type": "USER"
                      },
                      "customer": {
                        "id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                        "name": "Bob Jones",
                        "email": "bob.jones@email.com",
                        "source_id": "36_bob",
                        "metadata": {
                          "accepts_marketing": false
                        },
                        "object": "customer"
                      },
                      "related_object_type": "voucher",
                      "related_object_id": "v_c1yOEjZXOyVIe89VAYiRvL3QimZjXo8h",
                      "voucher": {
                        "id": "v_c1yOEjZXOyVIe89VAYiRvL3QimZjXo8h",
                        "code": "FB-metadata-string",
                        "campaign": null,
                        "campaign_id": null,
                        "category": null,
                        "categories": [],
                        "discount": null,
                        "gift": null,
                        "loyalty_card": null,
                        "start_date": null,
                        "expiration_date": null,
                        "validity_timeframe": null,
                        "validity_day_of_week": null,
                        "additional_info": null,
                        "assets": {
                          "qr": {},
                          "barcode": {}
                        },
                        "updated_at": null,
                        "object": "voucher"
                      }
                    }
                  },
                  "Loyalty Card - Material Reward Product Type": {
                    "value": {
                      "id": "r_0c5bf0e6d601c7d7de",
                      "object": "redemption",
                      "date": "2023-01-25T12:08:09.503Z",
                      "customer_id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                      "tracking_id": "track_9B0kB92+bJa8a+PegaWREw==",
                      "metadata": {},
                      "amount": 4,
                      "result": "SUCCESS",
                      "order": {
                        "id": "ord_dSOsWkNCRT24lHPkMu8o5QbX",
                        "source_id": null,
                        "created_at": "2023-01-25T12:08:07.750Z",
                        "updated_at": null,
                        "status": "PAID",
                        "items": [],
                        "metadata": {},
                        "customer": {
                          "id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                          "object": "customer"
                        },
                        "customer_id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                        "referrer_id": null,
                        "object": "order",
                        "redemptions": {
                          "r_0c5bf0e6d601c7d7de": {
                            "date": "2023-01-25T12:08:07.768Z",
                            "related_object_type": "voucher",
                            "related_object_id": "v_u3dRiZ0XHqX5Euhy5ezB5UQ5Sf85VXFP",
                            "related_object_parent_id": "camp_22noMlhTADb7Fq2UL3vWu3d1"
                          }
                        }
                      },
                      "channel": {
                        "channel_id": "user_g24UoRO3Caxu7FCT4n5tpYEa3zUG0FrH",
                        "channel_type": "USER"
                      },
                      "customer": {
                        "id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                        "name": "Bob Jones",
                        "email": "bob.jones@email.com",
                        "source_id": "36_bob",
                        "metadata": {
                          "age": 26,
                          "favorite_brands": [
                            "Nike",
                            "Adidas",
                            "Reebok"
                          ],
                          "accepts_marketing": false,
                          "acquisition_channel": "Facebook"
                        },
                        "object": "customer"
                      },
                      "related_object_type": "voucher",
                      "related_object_id": "v_u3dRiZ0XHqX5Euhy5ezB5UQ5Sf85VXFP",
                      "voucher": {
                        "id": "v_u3dRiZ0XHqX5Euhy5ezB5UQ5Sf85VXFP",
                        "code": "AnsvocvP",
                        "campaign": "Loyalty Campaign - Test Points",
                        "campaign_id": "camp_22noMlhTADb7Fq2UL3vWu3d1",
                        "category": null,
                        "categories": [],
                        "discount": null,
                        "gift": null,
                        "loyalty_card": null,
                        "start_date": null,
                        "expiration_date": null,
                        "validity_timeframe": null,
                        "validity_day_of_week": null,
                        "additional_info": null,
                        "assets": {
                          "qr": {},
                          "barcode": {}
                        },
                        "updated_at": null,
                        "object": "voucher"
                      },
                      "reward": {
                        "customer": {
                          "id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                          "name": "Bob Jones",
                          "email": "bob.jones@email.com",
                          "source_id": "36_bob",
                          "metadata": {
                            "age": 26,
                            "favorite_brands": [
                              "Nike",
                              "Adidas",
                              "Reebok"
                            ],
                            "accepts_marketing": false,
                            "acquisition_channel": "Facebook"
                          },
                          "object": "customer"
                        },
                        "assignment_id": "rewa_LRx3Y1iHFWTt217NVrknkpi5",
                        "product": {
                          "id": "prod_0b2c2ddf35150b83bb",
                          "source_id": "97",
                          "name": "[Sample] Tiered Wire Basket",
                          "price": 11995,
                          "attributes": [],
                          "metadata": {
                            "source": "bigcommerce",
                            "bigcommerce_product_categories": [
                              21,
                              23
                            ]
                          },
                          "image_url": null,
                          "created_at": "2022-06-03T13:36:16.084Z",
                          "updated_at": "2022-06-07T09:10:44.644Z",
                          "object": "product"
                        },
                        "id": "rew_EPx1hCTpqzF0HW1z9NKckZH4",
                        "object": "reward",
                        "name": "Present",
                        "created_at": "2022-06-13T06:59:01.694Z",
                        "updated_at": null,
                        "parameters": {
                          "product": {
                            "id": "prod_0b2c2ddf35150b83bb",
                            "sku_id": null
                          }
                        },
                        "type": "MATERIAL"
                      },
                      "loyalty_card": {
                        "points": 4
                      }
                    }
                  },
                  "Loyalty Card - Material Reward SKU Type": {
                    "value": {
                      "id": "r_0c5bf18dad48a34392",
                      "object": "redemption",
                      "date": "2023-01-25T12:11:00.543Z",
                      "customer_id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                      "tracking_id": "track_9B0kB92+bJa8a+PegaWREw==",
                      "metadata": {},
                      "amount": 6,
                      "result": "SUCCESS",
                      "order": {
                        "id": "ord_dwb6bpqjIlMuXFS71NuHed9S",
                        "source_id": null,
                        "created_at": "2023-01-25T12:10:58.598Z",
                        "updated_at": null,
                        "status": "PAID",
                        "items": [],
                        "metadata": {},
                        "customer": {
                          "id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                          "object": "customer"
                        },
                        "customer_id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                        "referrer_id": null,
                        "object": "order",
                        "redemptions": {
                          "r_0c5bf18dad48a34392": {
                            "date": "2023-01-25T12:10:58.613Z",
                            "related_object_type": "voucher",
                            "related_object_id": "v_u3dRiZ0XHqX5Euhy5ezB5UQ5Sf85VXFP",
                            "related_object_parent_id": "camp_22noMlhTADb7Fq2UL3vWu3d1"
                          }
                        }
                      },
                      "channel": {
                        "channel_id": "user_g24UoRO3Caxu7FCT4n5tpYEa3zUG0FrH",
                        "channel_type": "USER"
                      },
                      "customer": {
                        "id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                        "name": "Bob Jones",
                        "email": "bob.jones@email.com",
                        "source_id": "36_bob",
                        "metadata": {
                          "age": 26,
                          "favorite_brands": [
                            "Nike",
                            "Adidas",
                            "Reebok"
                          ],
                          "accepts_marketing": false,
                          "acquisition_channel": "Facebook"
                        },
                        "object": "customer"
                      },
                      "related_object_type": "voucher",
                      "related_object_id": "v_u3dRiZ0XHqX5Euhy5ezB5UQ5Sf85VXFP",
                      "voucher": {
                        "id": "v_u3dRiZ0XHqX5Euhy5ezB5UQ5Sf85VXFP",
                        "code": "AnsvocvP",
                        "campaign": "Loyalty Campaign - Test Points",
                        "campaign_id": "camp_22noMlhTADb7Fq2UL3vWu3d1",
                        "category": null,
                        "categories": [],
                        "discount": null,
                        "gift": null,
                        "loyalty_card": null,
                        "start_date": null,
                        "expiration_date": null,
                        "validity_timeframe": null,
                        "validity_day_of_week": null,
                        "additional_info": null,
                        "assets": {
                          "qr": {},
                          "barcode": {}
                        },
                        "updated_at": null,
                        "object": "voucher"
                      },
                      "reward": {
                        "customer": {
                          "id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                          "name": "Bob Jones",
                          "email": "bob.jones@email.com",
                          "source_id": "36_bob",
                          "metadata": {
                            "age": 26,
                            "favorite_brands": [
                              "Nike",
                              "Adidas",
                              "Reebok"
                            ],
                            "accepts_marketing": false,
                            "acquisition_channel": "Facebook"
                          },
                          "object": "customer"
                        },
                        "assignment_id": "rewa_gfpRNkOT0pwzF7P5tXWXOs4H",
                        "product": {
                          "id": "prod_5h0wc453_2",
                          "source_id": "jonah-nystrom-bourbon",
                          "name": "Johan & Nyström - Bourbon",
                          "price": null,
                          "attributes": [
                            "categories",
                            "description",
                            "weight"
                          ],
                          "metadata": {
                            "company": "Johan & Nyström",
                            "showcase": true
                          },
                          "image_url": null,
                          "created_at": "2021-12-01T08:00:49.418Z",
                          "updated_at": null,
                          "object": "product"
                        },
                        "sku": {
                          "id": "sku_0a3efc9044dd121803",
                          "source_id": "jonah-nystrom-bourbon-250g",
                          "product_id": "prod_5h0wc453_2",
                          "sku": "250g",
                          "price": 1750,
                          "currency": null,
                          "attributes": {
                            "categories": "Coffee, Whole Bean",
                            "description": "Background for this blend comes from the longing for a real dark roasting of high-quality coffee beans. Although the beans are dark roasted, they keep their clear and intense aroma. This coffee has a smoky flavour with a slight hint of sweetness and loads of fruit notes. Thanks to the experience in the dark roasting of coffee, the beans still retain most of their aromas. Its aftertaste is clear and remains for a long time. This coffee is perfect for a Dripper, French Press, Moka coffee maker and the traditional espresso brewing method.",
                            "weight": 250
                          },
                          "image_url": null,
                          "metadata": {},
                          "created_at": "2021-12-01T08:00:49.427Z",
                          "updated_at": null,
                          "object": "sku"
                        },
                        "id": "rew_SfQCsap5R8UBTVbdMTRx10x8",
                        "object": "reward",
                        "name": "Present - SKU",
                        "created_at": "2023-01-25T12:10:16.060Z",
                        "updated_at": null,
                        "parameters": {
                          "product": {
                            "id": "prod_5h0wc453_2",
                            "sku_id": "sku_0a3efc9044dd121803"
                          }
                        },
                        "type": "MATERIAL"
                      },
                      "loyalty_card": {
                        "points": 6
                      }
                    }
                  },
                  "Loyalty Card - Pay with Points": {
                    "value": {
                      "id": "r_0b5e402ad54a3afe9c",
                      "object": "redemption",
                      "date": "2022-07-12T11:00:26.247Z",
                      "customer_id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                      "tracking_id": "track_9B0kB92+bJa8a+PegaWREw==",
                      "metadata": null,
                      "amount": 5,
                      "redemption": "r_0b5e402ad50a3afe98",
                      "result": "SUCCESS",
                      "order": {
                        "id": "ord_9akjPYZNskEhKZ4zCZt6TKwq",
                        "source_id": null,
                        "created_at": "2022-07-12T11:00:26.224Z",
                        "amount": 20000,
                        "discount_amount": 5100,
                        "total_discount_amount": 5100,
                        "total_amount": 14900,
                        "applied_discount_amount": 500,
                        "total_applied_discount_amount": 500,
                        "metadata": {},
                        "customer_id": null,
                        "referrer_id": null,
                        "object": "order"
                      },
                      "channel": {
                        "channel_id": "abcdefg-efgj-ijkl-mnop-qrstuvxyz",
                        "channel_type": "API"
                      },
                      "customer": {
                        "id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                        "name": "Bob Jones",
                        "email": "bob.jones@email.com",
                        "source_id": "36_bob",
                        "metadata": {
                          "accepts_marketing": false
                        },
                        "object": "customer"
                      },
                      "related_object_type": "voucher",
                      "related_object_id": "v_pQZDYaH8LzoOvgh3234DqZQjGJgbPov6",
                      "voucher": {
                        "id": "v_pQZDYaH8LzoOvgh3234DqZQjGJgbPov6",
                        "code": "LOYALTY-CARD-zOR2sV9Q",
                        "campaign": "Loyalty Program",
                        "campaign_id": "camp_Hpt5hPTA8kSKRWGxBGw8Y0So",
                        "category": null,
                        "categories": [],
                        "discount": null,
                        "gift": null,
                        "loyalty_card": null,
                        "start_date": null,
                        "expiration_date": null,
                        "validity_timeframe": null,
                        "validity_day_of_week": null,
                        "additional_info": null,
                        "assets": {
                          "qr": {},
                          "barcode": {}
                        },
                        "updated_at": null,
                        "object": "voucher"
                      },
                      "reward": {
                        "customer": {
                          "id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                          "name": "Bob Jones",
                          "email": "bob.jones@email.com",
                          "source_id": "36_bob",
                          "metadata": {
                            "accepts_marketing": false
                          },
                          "object": "customer"
                        },
                        "assignment_id": "rewa_X3jnD5XFxP6GXCzPZUNknDck",
                        "id": "rew_6rhNwuuWFQJLvTPO34ilg6jq",
                        "object": "reward",
                        "name": "Pay with Points",
                        "created_at": "2022-07-11T08:18:18.205Z",
                        "updated_at": null,
                        "parameters": {
                          "coin": {
                            "exchange_ratio": 1,
                            "points_ratio": 1
                          }
                        },
                        "type": "COIN"
                      },
                      "loyalty_card": {
                        "points": 5
                      }
                    }
                  },
                  "Loyalty Card - Digital Reward - Discount Voucher": {
                    "value": {
                      "id": "r_0c5bf3323008a35032",
                      "object": "redemption",
                      "date": "2023-01-25T12:18:10.707Z",
                      "customer_id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                      "tracking_id": "track_9B0kB92+bJa8a+PegaWREw==",
                      "metadata": {
                        "redemption_location": {
                          "city": "Warsaw",
                          "state": "Polyork"
                        }
                      },
                      "amount": 2,
                      "result": "SUCCESS",
                      "order": {
                        "id": "ord_dqxr4uzaYWkTZnrSEMoQtCF8",
                        "source_id": null,
                        "created_at": "2023-01-25T12:18:09.203Z",
                        "updated_at": null,
                        "status": "PAID",
                        "amount": 2100,
                        "total_amount": 2100,
                        "items": [
                          {
                            "object": "order_item",
                            "product_id": "prod_0bc3bd8a4e072c5275",
                            "quantity": 3,
                            "amount": 2100,
                            "price": 700,
                            "subtotal_amount": 2100,
                            "product": {
                              "id": "prod_0bc3bd8a4e072c5275",
                              "name": "Bouquet - Romantic Roses",
                              "price": 700
                            }
                          }
                        ],
                        "metadata": {},
                        "customer": {
                          "id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                          "object": "customer"
                        },
                        "customer_id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                        "referrer_id": null,
                        "object": "order",
                        "redemptions": {
                          "r_0c5bf3323008a35032": {
                            "date": "2023-01-25T12:18:09.216Z",
                            "related_object_type": "voucher",
                            "related_object_id": "v_u3dRiZ0XHqX5Euhy5ezB5UQ5Sf85VXFP",
                            "related_object_parent_id": "camp_22noMlhTADb7Fq2UL3vWu3d1"
                          }
                        }
                      },
                      "channel": {
                        "channel_id": "user_g24UoRO3Caxu7FCT4n5tpYEa3zUG0FrH",
                        "channel_type": "USER"
                      },
                      "customer": {
                        "id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                        "name": "Bob Jones",
                        "email": "bob.jones@email.com",
                        "source_id": "36_bob",
                        "metadata": {
                          "age": 26,
                          "favorite_brands": [
                            "Nike",
                            "Adidas",
                            "Reebok"
                          ],
                          "accepts_marketing": false,
                          "acquisition_channel": "Facebook"
                        },
                        "object": "customer"
                      },
                      "related_object_type": "voucher",
                      "related_object_id": "v_u3dRiZ0XHqX5Euhy5ezB5UQ5Sf85VXFP",
                      "voucher": {
                        "id": "v_u3dRiZ0XHqX5Euhy5ezB5UQ5Sf85VXFP",
                        "code": "AnsvocvP",
                        "campaign": "Loyalty Campaign - Test Points",
                        "campaign_id": "camp_22noMlhTADb7Fq2UL3vWu3d1",
                        "category": null,
                        "categories": [],
                        "discount": null,
                        "gift": null,
                        "loyalty_card": null,
                        "start_date": null,
                        "expiration_date": null,
                        "validity_timeframe": null,
                        "validity_day_of_week": null,
                        "additional_info": null,
                        "assets": {
                          "qr": {},
                          "barcode": {}
                        },
                        "updated_at": null,
                        "object": "voucher"
                      },
                      "reward": {
                        "customer": {
                          "id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                          "name": "Bob Jones",
                          "email": "bob.jones@email.com",
                          "source_id": "36_bob",
                          "metadata": {
                            "age": 26,
                            "favorite_brands": [
                              "Nike",
                              "Adidas",
                              "Reebok"
                            ],
                            "accepts_marketing": false,
                            "acquisition_channel": "Facebook"
                          },
                          "object": "customer"
                        },
                        "assignment_id": "rewa_0ZwLAHgeU9IrI2V1ofYRmW7g",
                        "voucher": {
                          "id": "v_4GaEX7clyqMaveT7vHhoyRpsIgxv95Q6",
                          "code": "HAPPY-ORDER5My",
                          "campaign": "$20 off the entire order",
                          "campaign_id": "camp_5h0wc453_4",
                          "category": null,
                          "category_id": "cat_0b688929a2476386a6",
                          "categories": [],
                          "type": "DISCOUNT_VOUCHER",
                          "discount": {
                            "type": "AMOUNT",
                            "amount_off": 2000,
                            "effect": "APPLY_TO_ORDER"
                          },
                          "gift": null,
                          "loyalty_card": null,
                          "start_date": "2022-09-20T00:00:00.000Z",
                          "expiration_date": "2022-09-30T00:00:00.000Z",
                          "validity_timeframe": null,
                          "validity_day_of_week": null,
                          "active": true,
                          "additional_info": null,
                          "metadata": {},
                          "assets": {
                            "qr": {
                              "id": "21ceb848-4869-4dac-ba41-f854bda3a101",
                              "url": "{{internalVoucherifyURL}}"
                            },
                            "barcode": {
                              "id": "1dba9cb2-fb28-4c8d-8548-5edb2eb01f5a",
                              "url": "{{internalVoucherifyURL}}"
                            }
                          },
                          "is_referral_code": false,
                          "created_at": "2023-01-25T12:18:09.256Z",
                          "updated_at": null,
                          "holder_id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                          "redemption": {
                            "quantity": null,
                            "redeemed_quantity": 0,
                            "object": "list",
                            "url": "/v1/vouchers/HAPPY-ORDER5My/redemptions?page=1&limit=10"
                          },
                          "publish": {
                            "object": "list",
                            "count": 1,
                            "url": "/v1/vouchers/HAPPY-ORDER5My/publications?page=1&limit=10"
                          },
                          "object": "voucher"
                        },
                        "id": "rew_MF4hKh1IKYgJkPjbcFbH94Ho",
                        "object": "reward",
                        "name": "Digital Present",
                        "created_at": "2023-01-25T12:16:44.557Z",
                        "updated_at": null,
                        "parameters": {
                          "campaign": {
                            "id": "camp_5h0wc453_4",
                            "type": "DISCOUNT_COUPONS"
                          }
                        },
                        "type": "CAMPAIGN"
                      },
                      "loyalty_card": {
                        "points": 2
                      }
                    }
                  },
                  "Loyalty Card - Digital Reward - Credits on Gift Card": {
                    "value": {
                      "id": "r_0c5c1435d053202118",
                      "object": "redemption",
                      "date": "2023-01-25T14:42:25.206Z",
                      "customer_id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                      "tracking_id": "track_9B0kB92+bJa8a+PegaWREw==",
                      "metadata": {},
                      "amount": 1,
                      "result": "SUCCESS",
                      "order": {
                        "id": "ord_v0r7JfUQgWRpw28UJm9Z5AaH",
                        "source_id": null,
                        "created_at": "2023-01-25T14:42:23.637Z",
                        "updated_at": null,
                        "status": "PAID",
                        "amount": 22500,
                        "total_amount": 22500,
                        "items": [
                          {
                            "object": "order_item",
                            "product_id": "prod_0b2c36568000039138",
                            "quantity": 1,
                            "amount": 22500,
                            "price": 22500,
                            "subtotal_amount": 22500,
                            "product": {
                              "id": "prod_0b2c36568000039138",
                              "source_id": "86",
                              "name": "[Sample] Able Brewing System",
                              "price": 22500
                            }
                          }
                        ],
                        "metadata": {},
                        "customer": {
                          "id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                          "object": "customer"
                        },
                        "customer_id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                        "referrer_id": null,
                        "object": "order",
                        "redemptions": {
                          "r_0c5c1435d053202118": {
                            "date": "2023-01-25T14:42:23.681Z",
                            "related_object_type": "voucher",
                            "related_object_id": "v_u3dRiZ0XHqX5Euhy5ezB5UQ5Sf85VXFP",
                            "related_object_parent_id": "camp_22noMlhTADb7Fq2UL3vWu3d1"
                          }
                        }
                      },
                      "channel": {
                        "channel_id": "user_g24UoRO3Caxu7FCT4n5tpYEa3zUG0FrH",
                        "channel_type": "USER"
                      },
                      "customer": {
                        "id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                        "name": "Bob Jones",
                        "email": "bob.jones@email.com",
                        "source_id": "36_bob",
                        "metadata": {
                          "age": 26,
                          "favorite_brands": [
                            "Nike",
                            "Adidas",
                            "Reebok"
                          ],
                          "accepts_marketing": false,
                          "acquisition_channel": "Facebook"
                        },
                        "object": "customer"
                      },
                      "related_object_type": "voucher",
                      "related_object_id": "v_u3dRiZ0XHqX5Euhy5ezB5UQ5Sf85VXFP",
                      "voucher": {
                        "id": "v_u3dRiZ0XHqX5Euhy5ezB5UQ5Sf85VXFP",
                        "code": "AnsvocvP",
                        "campaign": "Loyalty Campaign - Test Points",
                        "campaign_id": "camp_22noMlhTADb7Fq2UL3vWu3d1",
                        "category": null,
                        "categories": [],
                        "discount": null,
                        "gift": null,
                        "loyalty_card": null,
                        "start_date": null,
                        "expiration_date": null,
                        "validity_timeframe": null,
                        "validity_day_of_week": null,
                        "additional_info": null,
                        "assets": {
                          "qr": {},
                          "barcode": {}
                        },
                        "updated_at": null,
                        "object": "voucher"
                      },
                      "reward": {
                        "customer": {
                          "id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                          "name": "Bob Jones",
                          "email": "bob.jones@email.com",
                          "source_id": "36_bob",
                          "metadata": {
                            "age": 26,
                            "favorite_brands": [
                              "Nike",
                              "Adidas",
                              "Reebok"
                            ],
                            "accepts_marketing": false,
                            "acquisition_channel": "Facebook"
                          },
                          "object": "customer"
                        },
                        "assignment_id": "rewa_U554pL2BhDIDZOvZ8y9YQ9hA",
                        "voucher": {
                          "id": "v_hS8JFl8S6lNcd1L69wLIoXgTio7eWEgk",
                          "code": "GIFT-CARD-xwc6X7Tk",
                          "campaign": "Gift Cards",
                          "campaign_id": "camp_kdxp3vf1clQ9CFs1jpqv3tZe",
                          "category": null,
                          "category_id": "cat_0bb81a481615a37b5e",
                          "categories": [],
                          "type": "GIFT_VOUCHER",
                          "discount": null,
                          "gift": {
                            "amount": 55080,
                            "balance": 44780
                          },
                          "loyalty_card": null,
                          "start_date": null,
                          "expiration_date": null,
                          "validity_timeframe": null,
                          "validity_day_of_week": null,
                          "active": true,
                          "additional_info": null,
                          "metadata": {},
                          "assets": {
                            "qr": {
                              "id": "U2FsdGVkX19SdT2kQZokSFsMRa5NmGvsHunHReeb4gF9b5LtLA4rCTM/aTyHCYfr7kRWb2vv08WIgY/Tv53SJGW+k2keqfsTq/Ohb5shkCN3FTFsaI8gulTp616sEGn/JJoIInIoNkO9Vd1+AfrKiAjmirCmekE6cz2SVCyNAXs=",
                              "url": "{{internalVoucherifyURL}}"
                            },
                            "barcode": {
                              "id": "U2FsdGVkX18vWc/qplwajJz4RIIy2wDUcAXVo1KEmyXx2IJy44xxHg608po3RizU9OYOzKelOAEjXFf7E4BS5Q01s4dds8Du70LGAp3idYMKAaXIjMTcFjMNczNO6ULK7r4eDx2Np8jvO/199U+zicnFNWqg/jF5ZCQW+6jO1q8=",
                              "url": "{{internalVoucherifyURL}}"
                            }
                          },
                          "is_referral_code": false,
                          "created_at": "2022-07-08T09:44:33.179Z",
                          "updated_at": "2023-01-11T15:23:02.789Z",
                          "holder_id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                          "redemption": {
                            "quantity": null,
                            "redeemed_quantity": 7,
                            "redeemed_amount": 10300,
                            "object": "list",
                            "url": "/v1/vouchers/GIFT-CARD-xwc6X7Tk/redemptions?page=1&limit=10"
                          },
                          "publish": {
                            "object": "list",
                            "count": 1,
                            "url": "/v1/vouchers/GIFT-CARD-xwc6X7Tk/publications?page=1&limit=10"
                          },
                          "object": "voucher"
                        },
                        "id": "rew_6bvM4vnaVdbPVQxYpuN37rhH",
                        "object": "reward",
                        "name": "Present Credits on Gift Card",
                        "created_at": "2023-01-25T14:41:31.858Z",
                        "updated_at": null,
                        "parameters": {
                          "campaign": {
                            "id": "camp_kdxp3vf1clQ9CFs1jpqv3tZe",
                            "balance": 4000,
                            "type": "GIFT_VOUCHERS"
                          }
                        },
                        "type": "CAMPAIGN"
                      },
                      "loyalty_card": {
                        "points": 1
                      }
                    }
                  },
                  "Loyalty Card - Digital Reward - Points on Loyalty Card": {
                    "value": {
                      "id": "r_0c5c226f498f1a93f0",
                      "object": "redemption",
                      "date": "2023-01-25T15:44:34.317Z",
                      "customer_id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                      "tracking_id": "track_9B0kB92+bJa8a+PegaWREw==",
                      "metadata": {},
                      "amount": 1,
                      "result": "SUCCESS",
                      "order": {
                        "id": "ord_1fv4ITwpUQra6iDTHFPVfnRR",
                        "source_id": null,
                        "created_at": "2023-01-25T15:44:32.494Z",
                        "updated_at": null,
                        "status": "PAID",
                        "amount": 700,
                        "total_amount": 700,
                        "items": [
                          {
                            "object": "order_item",
                            "product_id": "prod_0bc3bd8a4e072c5275",
                            "quantity": 1,
                            "amount": 700,
                            "price": 700,
                            "subtotal_amount": 700,
                            "product": {
                              "id": "prod_0bc3bd8a4e072c5275",
                              "name": "Bouquet - Romantic Roses",
                              "price": 700
                            }
                          }
                        ],
                        "metadata": {},
                        "customer": {
                          "id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                          "object": "customer"
                        },
                        "customer_id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                        "referrer_id": null,
                        "object": "order",
                        "redemptions": {
                          "r_0c5c226f498f1a93f0": {
                            "date": "2023-01-25T15:44:32.550Z",
                            "related_object_type": "voucher",
                            "related_object_id": "v_u3dRiZ0XHqX5Euhy5ezB5UQ5Sf85VXFP",
                            "related_object_parent_id": "camp_22noMlhTADb7Fq2UL3vWu3d1"
                          }
                        }
                      },
                      "channel": {
                        "channel_id": "user_g24UoRO3Caxu7FCT4n5tpYEa3zUG0FrH",
                        "channel_type": "USER"
                      },
                      "customer": {
                        "id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                        "name": "Bob Jones",
                        "email": "bob.jones@email.com",
                        "source_id": "36_bob",
                        "metadata": {
                          "age": 26,
                          "favorite_brands": [
                            "Nike",
                            "Adidas",
                            "Reebok"
                          ],
                          "accepts_marketing": false,
                          "acquisition_channel": "Facebook"
                        },
                        "object": "customer"
                      },
                      "related_object_type": "voucher",
                      "related_object_id": "v_u3dRiZ0XHqX5Euhy5ezB5UQ5Sf85VXFP",
                      "voucher": {
                        "id": "v_u3dRiZ0XHqX5Euhy5ezB5UQ5Sf85VXFP",
                        "code": "AnsvocvP",
                        "campaign": "Loyalty Campaign - Test Points",
                        "campaign_id": "camp_22noMlhTADb7Fq2UL3vWu3d1",
                        "category": null,
                        "categories": [],
                        "discount": null,
                        "gift": null,
                        "loyalty_card": null,
                        "start_date": null,
                        "expiration_date": null,
                        "validity_timeframe": null,
                        "validity_day_of_week": null,
                        "additional_info": null,
                        "assets": {
                          "qr": {},
                          "barcode": {}
                        },
                        "updated_at": null,
                        "object": "voucher"
                      },
                      "reward": {
                        "customer": {
                          "id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                          "name": "Bob Jones",
                          "email": "bob.jones@email.com",
                          "source_id": "36_bob",
                          "metadata": {
                            "age": 26,
                            "favorite_brands": [
                              "Nike",
                              "Adidas",
                              "Reebok"
                            ],
                            "accepts_marketing": false,
                            "acquisition_channel": "Facebook"
                          },
                          "object": "customer"
                        },
                        "assignment_id": "rewa_BpytIepuSekuXXwb9qkLJfCU",
                        "voucher": {
                          "id": "v_pQZDYaH8LzoOvgh3234DqZQjGJgbPov6",
                          "code": "LOYALTY-CARD-zOR2sV9Q",
                          "campaign": "Loyalty Program",
                          "campaign_id": "camp_Hpt5hPTA8kSKRWGxBGw8Y0So",
                          "category": null,
                          "category_id": null,
                          "categories": [],
                          "type": "LOYALTY_CARD",
                          "discount": null,
                          "gift": null,
                          "loyalty_card": {
                            "points": 1000,
                            "balance": 870
                          },
                          "start_date": null,
                          "expiration_date": null,
                          "validity_timeframe": null,
                          "validity_day_of_week": null,
                          "active": true,
                          "additional_info": null,
                          "metadata": {},
                          "assets": {
                            "qr": {
                              "id": "U2FsdGVkX1/THRRj1QegAan0r5U+wRoHuFEA6FR7TrvZm8N+8cK7niF/8uAqFdVYTU1JD0/CdoSXlYqiGgz3PAFOGWFSJt8vkM50fcMtMNLsaudU+YrPDeT2HCB7o0Ts7h1FnbD85+0F7lwrbKmkGW6kub0mjCaRdJYS/axIAq4=",
                              "url": "{{internalVoucherifyURL}}"
                            },
                            "barcode": {
                              "id": "U2FsdGVkX1+yREd0zRAfZY9uwtMZsl4eDd8+LeiKGVI5OzOQRpjhtV91IuEe7/SXEW8m4F2Llg2//yieX2zsP3UtWasWxw8ZkHMRSIdxfxzSdSj8ap0dI5xwKW4OE1Q6Sgsb+kZVfCKUHbwXCcd8y5a6xTpVIg97y74Ng1Vg2PY=",
                              "url": "{{internalVoucherifyURL}}"
                            }
                          },
                          "is_referral_code": false,
                          "created_at": "2022-07-11T08:19:28.780Z",
                          "updated_at": "2022-10-01T00:02:05.604Z",
                          "holder_id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                          "redemption": {
                            "quantity": null,
                            "redeemed_quantity": 26,
                            "redeemed_points": 130,
                            "object": "list",
                            "url": "/v1/vouchers/LOYALTY-CARD-zOR2sV9Q/redemptions?page=1&limit=10"
                          },
                          "publish": {
                            "object": "list",
                            "count": 1,
                            "url": "/v1/vouchers/LOYALTY-CARD-zOR2sV9Q/publications?page=1&limit=10"
                          },
                          "object": "voucher"
                        },
                        "id": "rew_7ZM476Q77dH5KvHk4KzoRNvF",
                        "object": "reward",
                        "name": "Present on Loyalty Card",
                        "created_at": "2023-01-25T15:43:40.716Z",
                        "updated_at": null,
                        "parameters": {
                          "campaign": {
                            "id": "camp_Hpt5hPTA8kSKRWGxBGw8Y0So",
                            "balance": 20,
                            "type": "LOYALTY_PROGRAM"
                          }
                        },
                        "type": "CAMPAIGN"
                      },
                      "loyalty_card": {
                        "points": 1
                      }
                    }
                  },
                  "Gift Card": {
                    "value": {
                      "id": "r_0b5e7d29ba4fb72ee4",
                      "object": "redemption",
                      "date": "2022-07-12T15:26:52.777Z",
                      "customer_id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                      "tracking_id": "track_9B0kB92+bJa8a+PegaWREw==",
                      "metadata": null,
                      "amount": 5000,
                      "redemption": "r_0b5e7d29ba0fb72ee2",
                      "result": "SUCCESS",
                      "order": {
                        "id": "ord_5iOTjTG4I3Yo2G2bH1qHk66a",
                        "source_id": null,
                        "created_at": "2022-07-12T15:26:52.773Z",
                        "amount": 30200,
                        "discount_amount": 9530,
                        "total_discount_amount": 9530,
                        "total_amount": 20670,
                        "applied_discount_amount": 5000,
                        "total_applied_discount_amount": 5000,
                        "metadata": {},
                        "customer_id": null,
                        "referrer_id": null,
                        "object": "order"
                      },
                      "channel": {
                        "channel_id": "abcdefg-efgj-ijkl-mnop-qrstuvxyz",
                        "channel_type": "API"
                      },
                      "customer": {
                        "id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                        "name": "Bob Jones",
                        "email": "bob.jones@email.com",
                        "source_id": "36_bob",
                        "metadata": {
                          "accepts_marketing": false
                        },
                        "object": "customer"
                      },
                      "related_object_type": "voucher",
                      "related_object_id": "v_hS8JFl8S6lNcd1L69wLIoXgTio7eWEgk",
                      "voucher": {
                        "id": "v_hS8JFl8S6lNcd1L69wLIoXgTio7eWEgk",
                        "code": "GIFT-CARD-xwc6X7Tk",
                        "campaign": "Gift Cards",
                        "campaign_id": "camp_kdxp3vf1clQ9CFs1jpqv3tZe",
                        "category": null,
                        "categories": [],
                        "discount": null,
                        "gift": null,
                        "loyalty_card": null,
                        "start_date": null,
                        "expiration_date": null,
                        "validity_timeframe": null,
                        "validity_day_of_week": null,
                        "additional_info": null,
                        "assets": {
                          "qr": {},
                          "barcode": {}
                        },
                        "updated_at": null,
                        "object": "voucher"
                      },
                      "gift": {
                        "amount": 5000
                      }
                    }
                  },
                  "Promotion Tier": {
                    "value": {
                      "id": "r_0c5d6689b35320059a",
                      "object": "redemption",
                      "date": "2023-01-26T15:20:35.916Z",
                      "customer_id": "cust_SolpIN5N4oZbCnrxZ5NHrbVB",
                      "tracking_id": "track_VAVW6qltuo1/z+G2GI2LPw==",
                      "metadata": null,
                      "result": "SUCCESS",
                      "order": {
                        "id": "ord_4kVJ1PiXP3TNfik3pM79KZsn",
                        "source_id": null,
                        "created_at": "2023-01-26T15:20:34.216Z",
                        "updated_at": null,
                        "status": "PAID",
                        "amount": 200000,
                        "discount_amount": 80000,
                        "total_discount_amount": 80000,
                        "total_amount": 120000,
                        "applied_discount_amount": 80000,
                        "total_applied_discount_amount": 80000,
                        "items": [
                          {
                            "object": "order_item",
                            "source_id": "apple534",
                            "related_object": "product",
                            "product_id": "prod_anJ03RZZq74z4v",
                            "quantity": 2,
                            "amount": 100000,
                            "price": 50000,
                            "subtotal_amount": 100000,
                            "product": {
                              "name": "Apple iPhone 8",
                              "metadata": {
                                "shop": "citycenter",
                                "category": "electronics"
                              }
                            },
                            "metadata": {
                              "series": "2022-783CV"
                            }
                          },
                          {
                            "object": "order_item",
                            "source_id": "apple534-ihd5",
                            "related_object": "sku",
                            "sku_id": "sku_0KtP4rvwEECQ2U",
                            "quantity": 1,
                            "amount": 100000,
                            "price": 100000,
                            "subtotal_amount": 100000,
                            "sku": {
                              "sku": "Apple iPad 10 Silver 64GB",
                              "metadata": {
                                "category": "electronics"
                              }
                            }
                          }
                        ],
                        "metadata": {},
                        "customer": {
                          "id": "cust_SolpIN5N4oZbCnrxZ5NHrbVB",
                          "object": "customer"
                        },
                        "customer_id": "cust_SolpIN5N4oZbCnrxZ5NHrbVB",
                        "referrer_id": null,
                        "object": "order",
                        "redemptions": {
                          "r_0c5d6689b35320059a": {
                            "date": "2023-01-26T15:20:34.253Z",
                            "related_object_type": "promotion_tier",
                            "related_object_id": "promo_DE1N30D731Tg2F6NoMwNas2W",
                            "related_object_parent_id": "camp_w7BUstntAm8jbIDjfM49volj"
                          }
                        }
                      },
                      "channel": {
                        "channel_id": "abcdefg-efgj-ijkl-mnop-qrstuvxyz",
                        "channel_type": "API"
                      },
                      "customer": {
                        "id": "cust_SolpIN5N4oZbCnrxZ5NHrbVB",
                        "name": "Annie Lemon",
                        "email": "annie@lemon.com",
                        "source_id": "annie@lemon.com",
                        "object": "customer"
                      },
                      "related_object_type": "promotion_tier",
                      "related_object_id": "promo_DE1N30D731Tg2F6NoMwNas2W",
                      "voucher": null,
                      "promotion_tier": {
                        "id": "promo_DE1N30D731Tg2F6NoMwNas2W",
                        "action": null,
                        "campaign": {
                          "id": "camp_w7BUstntAm8jbIDjfM49volj",
                          "start_date": null,
                          "expiration_date": null,
                          "object": "campaign"
                        },
                        "campaign_id": null,
                        "summary": {
                          "redemptions": {
                            "total_redeemed": 0
                          },
                          "orders": {
                            "total_amount": 0,
                            "total_discount_amount": 0
                          }
                        },
                        "object": "promotion_tier",
                        "validation_rule_assignments": null
                      }
                    }
                  },
                  "Stacked Redemption": {
                    "value": {
                      "id": "r_0b5e3e2b7f851d0192",
                      "object": "redemption",
                      "date": "2022-07-12T10:51:33.098Z",
                      "customer_id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                      "tracking_id": "track_9B0kB92+bJa8a+PegaWREw==",
                      "metadata": null,
                      "result": "SUCCESS",
                      "order": {
                        "id": "ord_qjnno0eUQ1fs0RMjejfbZp7q",
                        "source_id": null,
                        "created_at": "2022-07-12T10:51:31.687Z",
                        "updated_at": null,
                        "status": "PAID",
                        "amount": 20000,
                        "discount_amount": 6100,
                        "total_discount_amount": 6100,
                        "total_amount": 13900,
                        "applied_discount_amount": 6100,
                        "total_applied_discount_amount": 6100,
                        "metadata": {},
                        "customer": {
                          "id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                          "object": "customer"
                        },
                        "customer_id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                        "referrer_id": null,
                        "object": "order",
                        "redemptions": {
                          "r_0b5e3e2b7f851d0192": {
                            "date": "2022-07-12T10:51:31.711Z",
                            "related_object_type": "redemption",
                            "related_object_id": "r_0b5e3e2b7f851d0192",
                            "stacked": [
                              "r_0b5e3e2b7f851d0193",
                              "r_0b5e3e2b7fc51d0194",
                              "r_0b5e3e2b7fc51d0195",
                              "r_0b5e3e2b7fc51d0196",
                              "r_0b5e3e2b7fc51d0197"
                            ]
                          }
                        }
                      },
                      "channel": {
                        "channel_id": "abcdefg-efgj-ijkl-mnop-qrstuvxyz",
                        "channel_type": "API"
                      },
                      "customer": {
                        "id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                        "name": "Bob Jones",
                        "email": "bob.jones@email.com",
                        "source_id": "36_bob",
                        "metadata": {
                          "accepts_marketing": false
                        },
                        "object": "customer"
                      },
                      "related_object_type": "redemption",
                      "related_object_id": "r_0b5e3e2b7f851d0192",
                      "voucher": null
                    }
                  },
                  "Failed Voucher": {
                    "value": {
                      "id": "rf_0c5bd3c15701c78243",
                      "object": "redemption",
                      "date": "2023-01-25T10:00:47.812Z",
                      "customer_id": "cust_w1aRTTkpzeTGtOauISc8CKUN",
                      "tracking_id": "track_hr0jh/qNQqZWu7gkCEcVwEg27bNVrn2+",
                      "metadata": {
                        "location_id": [],
                        "redemption_location": {
                          "city": "Albany",
                          "state": "New York"
                        }
                      },
                      "result": "FAILURE",
                      "failure_code": "voucher_disabled",
                      "failure_message": "voucher is disabled",
                      "order": null,
                      "channel": {
                        "channel_id": "user_g24UoRO3Caxu7FCT4n5tpYEa3zUG0FrH",
                        "channel_type": "USER"
                      },
                      "customer": {
                        "id": "cust_w1aRTTkpzeTGtOauISc8CKUN",
                        "name": "Bobby's Friend",
                        "email": null,
                        "source_id": "create_order_referrer_1",
                        "metadata": {},
                        "object": "customer"
                      },
                      "related_object_type": "voucher",
                      "related_object_id": "v_zr4XJD6b6JtldZq9EorHf4jxRbahjkfi",
                      "voucher": {
                        "id": "v_zr4XJD6b6JtldZq9EorHf4jxRbahjkfi",
                        "code": "PROMO-CODE2",
                        "campaign": null,
                        "campaign_id": null,
                        "category": null,
                        "categories": [],
                        "discount": null,
                        "gift": null,
                        "loyalty_card": null,
                        "start_date": null,
                        "expiration_date": null,
                        "validity_timeframe": null,
                        "validity_day_of_week": null,
                        "additional_info": null,
                        "assets": {
                          "qr": {},
                          "barcode": {}
                        },
                        "updated_at": null,
                        "object": "voucher"
                      }
                    }
                  },
                  "Failed Promotion Tier": {
                    "value": {
                      "id": "rf_0c5d6e47050156bfc2",
                      "object": "redemption",
                      "date": "2023-01-26T15:54:23.508Z",
                      "customer_id": "cust_SolpIN5N4oZbCnrxZ5NHrbVB",
                      "tracking_id": "track_VAVW6qltuo1/z+G2GI2LPw==",
                      "metadata": null,
                      "result": "FAILURE",
                      "failure_code": "promotion_inactive",
                      "failure_message": "Inactive Promotion",
                      "order": null,
                      "channel": {
                        "channel_id": "abcdefg-efgj-ijkl-mnop-qrstuvxyz",
                        "channel_type": "API"
                      },
                      "customer": {
                        "id": "cust_SolpIN5N4oZbCnrxZ5NHrbVB",
                        "name": "Annie Lemon",
                        "email": "annie@lemon.com",
                        "source_id": "annie@lemon.com",
                        "metadata": {
                          "age": 2
                        },
                        "object": "customer"
                      },
                      "related_object_type": "promotion_tier",
                      "related_object_id": "promo_DE1N30D731Tg2F6NoMwNas2W",
                      "voucher": null,
                      "promotion_tier": {
                        "id": "promo_DE1N30D731Tg2F6NoMwNas2W",
                        "action": null,
                        "campaign": {
                          "id": "camp_w7BUstntAm8jbIDjfM49volj",
                          "start_date": null,
                          "expiration_date": null,
                          "object": "campaign"
                        },
                        "campaign_id": null,
                        "summary": {
                          "redemptions": {
                            "total_redeemed": 0
                          },
                          "orders": {
                            "total_amount": 0,
                            "total_discount_amount": 0
                          }
                        },
                        "object": "promotion_tier",
                        "validation_rule_assignments": null
                      }
                    }
                  },
                  "Failed Redemption": {
                    "value": {
                      "id": "rf_0c5bde8dfc0156f0e3",
                      "object": "redemption",
                      "date": "2023-01-25T10:47:58.578Z",
                      "customer_id": null,
                      "tracking_id": null,
                      "metadata": null,
                      "result": "FAILURE",
                      "failure_code": "not_found",
                      "failure_message": "Resource not found",
                      "order": null,
                      "channel": {
                        "channel_id": "abcdefg-efgj-ijkl-mnop-qrstuvxyz",
                        "channel_type": "API"
                      },
                      "customer": null,
                      "related_object_type": "redemption",
                      "related_object_id": "rf_0c5bde8dfc0156f0e3",
                      "voucher": null
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/vouchers/{code}/redemption": {
      "parameters": [
        {
          "$ref": "#/components/parameters/code"
        }
      ],
      "get": {
        "operationId": "get-voucher-redemptions",
        "tags": [
          "Redemptions"
        ],
        "summary": "Get Voucher's Redemptions",
        "description": "Retrieve the number of times a voucher was redeemed and each of the redemption details.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "A dictionary with a `redemption_entries` property that contains an array of voucher's redemptions.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VouchersRedemptionGetResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "quantity": null,
                      "redeemed_quantity": 6,
                      "object": "list",
                      "url": "/v1/vouchers/Test - FB - Vouchers - 9/redemptions?page=1&limit=10",
                      "data_ref": "redemption_entries",
                      "total": 6,
                      "redemption_entries": [
                        {
                          "id": "r_0bc92f81a6801f9bca",
                          "object": "redemption",
                          "date": "2022-10-03T12:24:58.008Z",
                          "customer_id": "cust_i8t5Tt6eiKG5K79KQlJ0Vs64",
                          "tracking_id": "track_fxEMFisanb6bqeHALcTMxy9fmc+1Azdq951CZwGFCweQF8eGLowFHg==",
                          "metadata": {},
                          "result": "SUCCESS",
                          "order": {
                            "id": "ord_bhp1EH2SDz7UwkkurPFPLPhi",
                            "source_id": null,
                            "created_at": "2022-10-03T12:24:56.179Z",
                            "updated_at": null,
                            "status": "PAID",
                            "amount": 230000,
                            "discount_amount": 100,
                            "total_discount_amount": 100,
                            "total_amount": 229900,
                            "applied_discount_amount": 100,
                            "total_applied_discount_amount": 100,
                            "items": [
                              {
                                "object": "order_item",
                                "product_id": "prod_0bae45ffc7003ffc52",
                                "quantity": 1,
                                "amount": 230000,
                                "price": 230000,
                                "subtotal_amount": 230000,
                                "product": {
                                  "id": "prod_0bae45ffc7003ffc52",
                                  "source_id": "second_product",
                                  "name": "Samsung Phone 2",
                                  "price": 230000
                                }
                              }
                            ],
                            "metadata": {},
                            "customer": {
                              "id": "cust_i8t5Tt6eiKG5K79KQlJ0Vs64",
                              "object": "customer"
                            },
                            "customer_id": "cust_i8t5Tt6eiKG5K79KQlJ0Vs64",
                            "referrer_id": null,
                            "object": "order",
                            "redemptions": {
                              "r_0bc92f81a6801f9bca": {
                                "date": "2022-10-03T12:24:56.219Z",
                                "related_object_type": "voucher",
                                "related_object_id": "v_lfZi4rcEGe0sN9gmnj40bzwK2FH6QUno"
                              }
                            }
                          },
                          "channel": {
                            "channel_id": "user_g24UoRO3Caxu7FCT4n5tpYEa3zUG0FrH",
                            "channel_type": "USER"
                          },
                          "customer": {
                            "id": "cust_i8t5Tt6eiKG5K79KQlJ0Vs64",
                            "name": null,
                            "email": null,
                            "source_id": "johnnyy@email.com",
                            "metadata": {},
                            "object": "customer"
                          },
                          "related_object_type": "voucher",
                          "related_object_id": "v_lfZi4rcEGe0sN9gmnj40bzwK2FH6QUno",
                          "voucher": {
                            "id": "v_lfZi4rcEGe0sN9gmnj40bzwK2FH6QUno",
                            "code": "Test - FB - Vouchers - 9",
                            "campaign_id": null
                          }
                        },
                        {
                          "id": "r_0bc92e6a68050e118c",
                          "object": "redemption",
                          "date": "2022-10-03T12:20:11.873Z",
                          "customer_id": "cust_TzWOhveicr7BI1Qg4bCFrrQQ",
                          "tracking_id": "track_5DQxXbK0C0pvAaHk7mnulmKhuFqhawWj",
                          "metadata": {},
                          "result": "SUCCESS",
                          "order": {
                            "id": "ord_rBsuJYqf4eFZgqj6IxeJgEcN",
                            "source_id": null,
                            "created_at": "2022-10-03T12:20:10.222Z",
                            "updated_at": null,
                            "status": "PAID",
                            "amount": 230000,
                            "discount_amount": 100,
                            "total_discount_amount": 100,
                            "total_amount": 229900,
                            "applied_discount_amount": 100,
                            "total_applied_discount_amount": 100,
                            "items": [
                              {
                                "object": "order_item",
                                "product_id": "prod_0bae45ffc7003ffc52",
                                "quantity": 1,
                                "amount": 230000,
                                "price": 230000,
                                "subtotal_amount": 230000,
                                "product": {
                                  "id": "prod_0bae45ffc7003ffc52",
                                  "source_id": "second_product",
                                  "name": "Samsung Phone 2",
                                  "price": 230000
                                }
                              }
                            ],
                            "metadata": {},
                            "customer": {
                              "id": "cust_TzWOhveicr7BI1Qg4bCFrrQQ",
                              "object": "customer"
                            },
                            "customer_id": "cust_TzWOhveicr7BI1Qg4bCFrrQQ",
                            "referrer_id": null,
                            "object": "order",
                            "redemptions": {
                              "r_0bc92e6a68050e118c": {
                                "date": "2022-10-03T12:20:10.272Z",
                                "related_object_type": "voucher",
                                "related_object_id": "v_lfZi4rcEGe0sN9gmnj40bzwK2FH6QUno"
                              }
                            }
                          },
                          "channel": {
                            "channel_id": "user_g24UoRO3Caxu7FCT4n5tpYEa3zUG0FrH",
                            "channel_type": "USER"
                          },
                          "customer": {
                            "id": "cust_TzWOhveicr7BI1Qg4bCFrrQQ",
                            "name": "Bob Jones",
                            "email": "bob.smith@email.com",
                            "source_id": "pub_source_customer_4",
                            "metadata": {
                              "lang": "en",
                              "test": true
                            },
                            "object": "customer"
                          },
                          "related_object_type": "voucher",
                          "related_object_id": "v_lfZi4rcEGe0sN9gmnj40bzwK2FH6QUno",
                          "voucher": {
                            "id": "v_lfZi4rcEGe0sN9gmnj40bzwK2FH6QUno",
                            "code": "Test - FB - Vouchers - 9",
                            "campaign_id": null
                          }
                        },
                        {
                          "id": "r_0bc92db6e6001f9aa8",
                          "object": "redemption",
                          "date": "2022-10-03T12:17:07.780Z",
                          "customer_id": "cust_BB6F97yf0XqCe7hxVUV7M4sS",
                          "tracking_id": "track_5DQxXbK0C0pvAaHk7mnulmYlx396Pk4X",
                          "metadata": {},
                          "result": "SUCCESS",
                          "order": {
                            "id": "ord_JvZbg1LFcXdQ67no5SENGldH",
                            "source_id": null,
                            "created_at": "2022-10-03T12:17:06.404Z",
                            "updated_at": null,
                            "status": "PAID",
                            "amount": 230000,
                            "discount_amount": 1200,
                            "total_discount_amount": 1200,
                            "total_amount": 228800,
                            "applied_discount_amount": 1200,
                            "total_applied_discount_amount": 1200,
                            "items": [
                              {
                                "object": "order_item",
                                "product_id": "prod_0bae45ffc7003ffc52",
                                "quantity": 1,
                                "amount": 230000,
                                "price": 230000,
                                "subtotal_amount": 230000,
                                "product": {
                                  "id": "prod_0bae45ffc7003ffc52",
                                  "source_id": "second_product",
                                  "name": "Samsung Phone 2",
                                  "price": 230000
                                }
                              }
                            ],
                            "metadata": {},
                            "customer": {
                              "id": "cust_BB6F97yf0XqCe7hxVUV7M4sS",
                              "object": "customer"
                            },
                            "customer_id": "cust_BB6F97yf0XqCe7hxVUV7M4sS",
                            "referrer_id": null,
                            "object": "order",
                            "redemptions": {
                              "r_0bc92db6e6001f9aa8": {
                                "date": "2022-10-03T12:17:06.456Z",
                                "related_object_type": "voucher",
                                "related_object_id": "v_lfZi4rcEGe0sN9gmnj40bzwK2FH6QUno"
                              }
                            }
                          },
                          "channel": {
                            "channel_id": "user_g24UoRO3Caxu7FCT4n5tpYEa3zUG0FrH",
                            "channel_type": "USER"
                          },
                          "customer": {
                            "id": "cust_BB6F97yf0XqCe7hxVUV7M4sS",
                            "name": "Bob Jones",
                            "email": "bob.smith@email.com",
                            "source_id": "pub_source_customer_5",
                            "metadata": {
                              "lang": "en",
                              "test": true
                            },
                            "object": "customer"
                          },
                          "related_object_type": "voucher",
                          "related_object_id": "v_lfZi4rcEGe0sN9gmnj40bzwK2FH6QUno",
                          "voucher": {
                            "id": "v_lfZi4rcEGe0sN9gmnj40bzwK2FH6QUno",
                            "code": "Test - FB - Vouchers - 9",
                            "campaign_id": null
                          }
                        },
                        {
                          "id": "r_0bc2dc6404426c0ab3",
                          "object": "redemption",
                          "date": "2022-09-28T14:30:56.199Z",
                          "customer_id": "cust_i8t5Tt6eiKG5K79KQlJ0Vs64",
                          "tracking_id": "track_fxEMFisanb6bqeHALcTMxy9fmc+1Azdq951CZwGFCweQF8eGLowFHg==",
                          "metadata": {},
                          "result": "SUCCESS",
                          "order": {
                            "id": "ord_6uuhGraDuXMOpVRTJT251kKW",
                            "source_id": null,
                            "created_at": "2022-09-28T14:30:54.681Z",
                            "updated_at": null,
                            "status": "PAID",
                            "amount": 230000,
                            "discount_amount": 800,
                            "total_discount_amount": 800,
                            "total_amount": 229200,
                            "applied_discount_amount": 800,
                            "total_applied_discount_amount": 800,
                            "items": [
                              {
                                "object": "order_item",
                                "product_id": "prod_0bae45ffc7003ffc52",
                                "quantity": 1,
                                "amount": 230000,
                                "price": 230000,
                                "subtotal_amount": 230000,
                                "product": {
                                  "id": "prod_0bae45ffc7003ffc52",
                                  "source_id": "second_product",
                                  "name": "Samsung Phone 2",
                                  "price": 230000
                                }
                              }
                            ],
                            "metadata": {},
                            "customer": {
                              "id": "cust_i8t5Tt6eiKG5K79KQlJ0Vs64",
                              "object": "customer"
                            },
                            "customer_id": "cust_i8t5Tt6eiKG5K79KQlJ0Vs64",
                            "referrer_id": null,
                            "object": "order",
                            "redemptions": {
                              "r_0bc2dc6404426c0ab3": {
                                "date": "2022-09-28T14:30:54.737Z",
                                "related_object_type": "voucher",
                                "related_object_id": "v_lfZi4rcEGe0sN9gmnj40bzwK2FH6QUno"
                              }
                            }
                          },
                          "channel": {
                            "channel_id": "user_g24UoRO3Caxu7FCT4n5tpYEa3zUG0FrH",
                            "channel_type": "USER"
                          },
                          "customer": {
                            "id": "cust_i8t5Tt6eiKG5K79KQlJ0Vs64",
                            "name": null,
                            "email": null,
                            "source_id": "jonny@email.com",
                            "metadata": {},
                            "object": "customer"
                          },
                          "related_object_type": "voucher",
                          "related_object_id": "v_lfZi4rcEGe0sN9gmnj40bzwK2FH6QUno",
                          "voucher": {
                            "id": "v_lfZi4rcEGe0sN9gmnj40bzwK2FH6QUno",
                            "code": "Test - FB - Vouchers - 9",
                            "campaign_id": null
                          }
                        },
                        {
                          "id": "r_0bc2d6f0ebc95f1783",
                          "object": "redemption",
                          "date": "2022-09-28T14:07:07.516Z",
                          "customer_id": "cust_H0nXrItO1DNV3UiPIl54HA5o",
                          "tracking_id": "track_ThofCMTQe4EVIo0zvvOlTor1twaQNd7E",
                          "metadata": {},
                          "result": "SUCCESS",
                          "order": {
                            "id": "ord_ZQevc2J2sBegsnp5DwanXHsa",
                            "source_id": null,
                            "created_at": "2022-09-28T14:07:06.073Z",
                            "updated_at": null,
                            "status": "PAID",
                            "amount": 230000,
                            "discount_amount": 0,
                            "total_discount_amount": 0,
                            "total_amount": 230000,
                            "applied_discount_amount": 0,
                            "total_applied_discount_amount": 0,
                            "items": [
                              {
                                "object": "order_item",
                                "product_id": "prod_0bae45ffc7003ffc52",
                                "quantity": 1,
                                "amount": 230000,
                                "price": 230000,
                                "subtotal_amount": 230000,
                                "product": {
                                  "id": "prod_0bae45ffc7003ffc52",
                                  "source_id": "second_product",
                                  "name": "Samsung Phone 2",
                                  "price": 230000
                                }
                              }
                            ],
                            "metadata": {},
                            "customer": {
                              "id": "cust_H0nXrItO1DNV3UiPIl54HA5o",
                              "object": "customer"
                            },
                            "customer_id": "cust_H0nXrItO1DNV3UiPIl54HA5o",
                            "referrer_id": null,
                            "object": "order",
                            "redemptions": {
                              "r_0bc2d6f0ebc95f1783": {
                                "date": "2022-09-28T14:07:06.159Z",
                                "related_object_type": "voucher",
                                "related_object_id": "v_lfZi4rcEGe0sN9gmnj40bzwK2FH6QUno"
                              }
                            }
                          },
                          "channel": {
                            "channel_id": "user_g24UoRO3Caxu7FCT4n5tpYEa3zUG0FrH",
                            "channel_type": "USER"
                          },
                          "customer": {
                            "id": "cust_H0nXrItO1DNV3UiPIl54HA5o",
                            "name": "Bob Smith",
                            "email": "bob.smith.1@email.com",
                            "source_id": "bob.smith.1@email.com",
                            "metadata": {
                              "lang": "en",
                              "test": false
                            },
                            "object": "customer"
                          },
                          "related_object_type": "voucher",
                          "related_object_id": "v_lfZi4rcEGe0sN9gmnj40bzwK2FH6QUno",
                          "voucher": {
                            "id": "v_lfZi4rcEGe0sN9gmnj40bzwK2FH6QUno",
                            "code": "Test - FB - Vouchers - 9",
                            "campaign_id": null
                          }
                        },
                        {
                          "id": "r_0bc2d3c4f7495f159a",
                          "object": "redemption",
                          "date": "2022-09-28T13:53:16.057Z",
                          "customer_id": "cust_tAED42tFhLM9v7GmZUaklJFd",
                          "tracking_id": "track_fxEMFisanb4sbl4Z4yCnJyDW013IrRbJmqKByTNHbXE=",
                          "metadata": {},
                          "result": "SUCCESS",
                          "order": {
                            "id": "ord_ff6rwr58kmdyuLsi5orplnVW",
                            "source_id": null,
                            "created_at": "2022-09-28T13:53:14.604Z",
                            "updated_at": null,
                            "status": "PAID",
                            "amount": 230000,
                            "discount_amount": 800,
                            "total_discount_amount": 800,
                            "total_amount": 229200,
                            "applied_discount_amount": 800,
                            "total_applied_discount_amount": 800,
                            "items": [
                              {
                                "object": "order_item",
                                "product_id": "prod_0bae45ffc7003ffc52",
                                "quantity": 1,
                                "amount": 230000,
                                "price": 230000,
                                "subtotal_amount": 230000,
                                "product": {
                                  "id": "prod_0bae45ffc7003ffc52",
                                  "source_id": "second_product",
                                  "name": "Samsung Phone 2",
                                  "price": 230000
                                }
                              }
                            ],
                            "metadata": {},
                            "customer": {
                              "id": "cust_tAED42tFhLM9v7GmZUaklJFd",
                              "object": "customer"
                            },
                            "customer_id": "cust_tAED42tFhLM9v7GmZUaklJFd",
                            "referrer_id": null,
                            "object": "order",
                            "redemptions": {
                              "r_0bc2d3c4f7495f159a": {
                                "date": "2022-09-28T13:53:14.717Z",
                                "related_object_type": "voucher",
                                "related_object_id": "v_lfZi4rcEGe0sN9gmnj40bzwK2FH6QUno"
                              }
                            }
                          },
                          "channel": {
                            "channel_id": "user_g24UoRO3Caxu7FCT4n5tpYEa3zUG0FrH",
                            "channel_type": "USER"
                          },
                          "customer": {
                            "id": "cust_tAED42tFhLM9v7GmZUaklJFd",
                            "name": "John Smith",
                            "email": "john.smith@email.com",
                            "source_id": "john.smith@email.com",
                            "metadata": {
                              "acquisition_channel": "Facebook"
                            },
                            "object": "customer"
                          },
                          "related_object_type": "voucher",
                          "related_object_id": "v_lfZi4rcEGe0sN9gmnj40bzwK2FH6QUno",
                          "voucher": {
                            "id": "v_lfZi4rcEGe0sN9gmnj40bzwK2FH6QUno",
                            "code": "Test - FB - Vouchers - 9",
                            "campaign_id": null
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/redemptions/{redemptionId}/rollback": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterRedemptionId"
          },
          "name": "redemptionId",
          "in": "path",
          "required": true,
          "description": "The original redemption ID to be rolled back (undone)."
        }
      ],
      "post": {
        "operationId": "rollback-redemption",
        "tags": [
          "Redemptions"
        ],
        "summary": "Rollback Redemption",
        "description": "Your business logic may include a case when you need to undo a redemption. You can revert a redemption by calling this API endpoint. This endpoint rolls back only single redemptions, meaning those that are not stacked. Stacked redemptions belong to a parent redemption. To roll back a parent redemption, including all of its individual redemptions, use the POST Rollback Stackable Redemptions \n🚧 \nYou can roll back a redemption up to 3 months back. \n # Effect \nThe operation \n- creates a rollback entry in vouchers redemption history (redemption.redemption_entries) and \n- gives 1 redemption back to the pool (decreases redeemed_quantity by 1). \n# Returned funds \nIn case of *gift card vouchers*, this method returns funds back according to the source redemption. In case of *loyalty card vouchers*, this method returns points back according to the source redemption.",
        "parameters": [
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterString"
            },
            "in": "query",
            "name": "reason",
            "description": "Reason for the rollback."
          },
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterString"
            },
            "in": "query",
            "name": "tracking_id",
            "description": "Customers source_id."
          }
        ],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "requestBody": {
          "description": "Add information about the original customer and order. Customer data and Redemption metadata can be updated in Voucherify when passing the customer data in the request body.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RedemptionsRollbackCreateRequestBody"
              },
              "examples": {
                "Promotion": {
                  "value": {
                    "customer": {
                      "id": "cust_SolpIN5N4oZbCnrxZ5NHrbVB",
                      "name": "Annie Lemons",
                      "email": "annie@lemon.com",
                      "phone": "+1 933 222 3334",
                      "birthday": "1900-12-02",
                      "birthdate": "1900-12-01",
                      "address": {
                        "city": "New York",
                        "state": "NY",
                        "line_1": "123 Main St.",
                        "line_2": "APT 3 BLG 5",
                        "country": "United States",
                        "postal_code": "100012"
                      },
                      "metadata": {
                        "age": 23
                      }
                    },
                    "order": {
                      "source_id": "test_rollback_8"
                    },
                    "metadata": {
                      "location_id": [
                        "L2"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "2XX": {
            "description": "Returns a redemption rollback object indicating the result of the rollback.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RedemptionsRollbackCreateResponseBody"
                },
                "examples": {
                  "Loyalty Card": {
                    "value": {
                      "id": "rr_0c5eba630bc4979e70",
                      "object": "redemption_rollback",
                      "date": "2023-01-27T16:05:23.631Z",
                      "customer_id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                      "tracking_id": "track_9B0kB92+bJa8a+PegaWREw==",
                      "metadata": null,
                      "amount": -2,
                      "redemption": "r_0c5bf3323008a35032",
                      "reason": "A UI rollback to check for result in API response to listing.",
                      "result": "SUCCESS",
                      "order": {
                        "id": "ord_dqxr4uzaYWkTZnrSEMoQtCF8",
                        "source_id": null,
                        "created_at": "2023-01-25T12:18:09.203Z",
                        "updated_at": "2023-01-27T16:05:23.687Z",
                        "status": "CANCELED",
                        "amount": 2100,
                        "total_amount": 2100,
                        "items": [
                          {
                            "object": "order_item",
                            "product_id": "prod_0bc3bd8a4e072c5275",
                            "quantity": 3,
                            "amount": 2100,
                            "price": 700,
                            "subtotal_amount": 2100,
                            "product": {
                              "name": "Bouquet - Romantic Roses",
                              "price": 700
                            }
                          }
                        ],
                        "metadata": {},
                        "customer": {
                          "id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                          "object": "customer"
                        },
                        "customer_id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                        "referrer_id": null,
                        "object": "order",
                        "redemptions": {
                          "r_0c5bf3323008a35032": {
                            "date": "2023-01-25T12:18:09.216Z",
                            "rollback_id": "rr_0c5eba630bc4979e70",
                            "rollback_date": "2023-01-27T16:05:23.631Z",
                            "related_object_type": "voucher",
                            "related_object_id": "v_u3dRiZ0XHqX5Euhy5ezB5UQ5Sf85VXFP",
                            "related_object_parent_id": "camp_22noMlhTADb7Fq2UL3vWu3d1"
                          }
                        }
                      },
                      "channel": {
                        "channel_id": "user_g24UoRO3Caxu7FCT4n5tpYEa3zUG0FrH",
                        "channel_type": "USER"
                      },
                      "customer": {
                        "id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                        "name": "Bob Jones",
                        "email": "bob.jones@email.com",
                        "source_id": "36_bob",
                        "metadata": {
                          "age": 26,
                          "favorite_brands": [
                            "Nike",
                            "Adidas",
                            "Reebok"
                          ],
                          "accepts_marketing": false,
                          "acquisition_channel": "Facebook"
                        },
                        "object": "customer"
                      },
                      "related_object_type": "voucher",
                      "related_object_id": "v_u3dRiZ0XHqX5Euhy5ezB5UQ5Sf85VXFP",
                      "voucher": {
                        "id": "v_u3dRiZ0XHqX5Euhy5ezB5UQ5Sf85VXFP",
                        "code": "AnsvocvP",
                        "campaign": "Loyalty Campaign - Test Points",
                        "campaign_id": "camp_22noMlhTADb7Fq2UL3vWu3d1",
                        "category": null,
                        "categories": [],
                        "discount": null,
                        "gift": null,
                        "loyalty_card": null,
                        "start_date": null,
                        "expiration_date": null,
                        "validity_timeframe": null,
                        "validity_day_of_week": null,
                        "additional_info": null,
                        "assets": {
                          "qr": {},
                          "barcode": {}
                        },
                        "updated_at": null,
                        "object": "voucher"
                      },
                      "reward": {
                        "customer": {
                          "id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                          "name": "Bob Jones",
                          "email": "bob.jones@email.com",
                          "source_id": "36_bob",
                          "metadata": {
                            "age": 26,
                            "favorite_brands": [
                              "Nike",
                              "Adidas",
                              "Reebok"
                            ],
                            "accepts_marketing": false,
                            "acquisition_channel": "Facebook"
                          },
                          "object": "customer"
                        },
                        "assignment_id": "rewa_0ZwLAHgeU9IrI2V1ofYRmW7g",
                        "voucher": {
                          "id": "v_4GaEX7clyqMaveT7vHhoyRpsIgxv95Q6",
                          "code": "HAPPY-ORDER5My",
                          "campaign": "$20 off the entire order",
                          "campaign_id": "camp_5h0wc453_4",
                          "category": null,
                          "category_id": "cat_0b688929a2476386a6",
                          "categories": [],
                          "type": "DISCOUNT_VOUCHER",
                          "discount": {
                            "type": "AMOUNT",
                            "amount_off": 2000,
                            "effect": "APPLY_TO_ORDER"
                          },
                          "gift": null,
                          "loyalty_card": null,
                          "start_date": "2022-09-20T00:00:00.000Z",
                          "expiration_date": "2022-09-30T00:00:00.000Z",
                          "validity_timeframe": null,
                          "validity_day_of_week": null,
                          "active": true,
                          "additional_info": null,
                          "metadata": {},
                          "assets": {
                            "qr": {
                              "id": "21ceb848-4869-4dac-ba41-f854bda3a101",
                              "url": "{{internalVoucherifyURL}}"
                            },
                            "barcode": {
                              "id": "1dba9cb2-fb28-4c8d-8548-5edb2eb01f5a",
                              "url": "{{internalVoucherifyURL}}"
                            }
                          },
                          "is_referral_code": false,
                          "created_at": "2023-01-25T12:18:09.256Z",
                          "updated_at": null,
                          "holder_id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                          "redemption": {
                            "quantity": null,
                            "redeemed_quantity": 0,
                            "object": "list",
                            "url": "/v1/vouchers/HAPPY-ORDER5My/redemptions?page=1&limit=10"
                          },
                          "publish": {
                            "object": "list",
                            "count": 1,
                            "url": "/v1/vouchers/HAPPY-ORDER5My/publications?page=1&limit=10"
                          },
                          "object": "voucher"
                        },
                        "id": "rew_MF4hKh1IKYgJkPjbcFbH94Ho",
                        "object": "reward",
                        "name": "Digital Present",
                        "created_at": "2023-01-25T12:16:44.557Z",
                        "updated_at": null,
                        "parameters": {
                          "campaign": {
                            "id": "camp_5h0wc453_4",
                            "type": "DISCOUNT_COUPONS"
                          }
                        },
                        "type": "CAMPAIGN"
                      },
                      "loyalty_card": {
                        "points": -2
                      }
                    }
                  },
                  "Discount Coupon": {
                    "value": {
                      "id": "rr_0c5eb002b40cce9d62",
                      "object": "redemption_rollback",
                      "date": "2023-01-27T15:20:03.536Z",
                      "customer_id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                      "tracking_id": "track_9B0kB92+bJa8a+PegaWREw==",
                      "metadata": null,
                      "redemption": "r_0c5e8ef10842da0aad",
                      "result": "SUCCESS",
                      "order": {
                        "id": "ord_J5ogV1Gkk2yfxmBEhYIg4O65",
                        "source_id": null,
                        "created_at": "2023-01-27T12:55:34.673Z",
                        "updated_at": "2023-01-27T15:20:03.743Z",
                        "status": "CANCELED",
                        "amount": 6000,
                        "total_amount": 6000,
                        "items": [
                          {
                            "object": "order_item",
                            "product_id": "prod_0a9f9ab4ab019a42d5",
                            "quantity": 1,
                            "amount": 3300,
                            "price": 3000,
                            "subtotal_amount": 3300
                          },
                          {
                            "object": "order_item",
                            "product_id": "prod_0a9f9aeddb019a42db",
                            "quantity": 2,
                            "amount": 3400,
                            "price": 3000,
                            "subtotal_amount": 3400
                          }
                        ],
                        "metadata": {},
                        "customer": {
                          "id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                          "object": "customer"
                        },
                        "customer_id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                        "referrer_id": null,
                        "object": "order",
                        "redemptions": {
                          "r_0c5e8ef10842da0aad": {
                            "date": "2023-01-27T12:55:34.689Z",
                            "rollback_id": "rr_0c5eb002b40cce9d62",
                            "rollback_date": "2023-01-27T15:20:03.536Z",
                            "related_object_type": "voucher",
                            "related_object_id": "v_TzD19aeNiqGc9LWciMWknyEZT8IW7u4u"
                          }
                        }
                      },
                      "customer": {
                        "id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                        "source_id": "36_bob",
                        "metadata": {
                          "age": 26,
                          "favorite_brands": [
                            "Nike",
                            "Adidas",
                            "Reebok"
                          ],
                          "accepts_marketing": false,
                          "acquisition_channel": "Facebook"
                        },
                        "object": "customer"
                      },
                      "related_object_type": "voucher",
                      "related_object_id": "v_TzD19aeNiqGc9LWciMWknyEZT8IW7u4u",
                      "voucher": {
                        "id": "v_TzD19aeNiqGc9LWciMWknyEZT8IW7u4u",
                        "code": "2CpRCE2c",
                        "campaign": null,
                        "campaign_id": null,
                        "category": null,
                        "category_id": null,
                        "categories": [],
                        "type": "DISCOUNT_VOUCHER",
                        "discount": {
                          "type": "AMOUNT",
                          "amount_off": 300,
                          "effect": "APPLY_TO_ITEMS_PROPORTIONALLY"
                        },
                        "gift": null,
                        "loyalty_card": null,
                        "start_date": null,
                        "expiration_date": null,
                        "validity_timeframe": null,
                        "validity_day_of_week": null,
                        "active": true,
                        "additional_info": null,
                        "metadata": {},
                        "assets": {
                          "qr": {
                            "id": "U2FsdGVkX1+ro/6HLsfI9E/rz0QEoYv+rcVIEERdbV3gB4104zYyGfpydtSxS1WfpbuiDUfMizQAl1EMzoYsud5XTKBBwUkGkI5IPl84lPz+WQtg4nKpjUS0wcA7AuIbz2zb870YfJO/r5UBS5gCqQ==",
                            "url": "{{internalVoucherifyURL}}"
                          },
                          "barcode": {
                            "id": "U2FsdGVkX19SWjP3ZUbFh26gCGb4xm3K95jhzfk1XXlKcYlHPtDTYR3/4dYbig4xxRmkgpQLa93Woz9Hq3h4JBQ+aTlftkEzL4D4OSAWi1aWlfxVikrJd6TMFLh9mmbmskodjs4MIdOFlluDWyarlw==",
                            "url": "{{internalVoucherifyURL}}"
                          }
                        },
                        "is_referral_code": false,
                        "created_at": "2022-09-19T10:06:07.932Z",
                        "updated_at": "2023-01-27T15:20:03.707Z",
                        "redemption": {
                          "quantity": null,
                          "redeemed_quantity": 1,
                          "object": "list",
                          "url": "/v1/vouchers/2CpRCE2c/redemptions?page=1&limit=10"
                        },
                        "publish": {
                          "object": "list",
                          "count": 0,
                          "url": "/v1/vouchers/2CpRCE2c/publications?page=1&limit=10"
                        },
                        "object": "voucher"
                      }
                    }
                  },
                  "Gift Card": {
                    "value": {
                      "id": "rr_0c5eb099214ccea115",
                      "object": "redemption_rollback",
                      "date": "2023-01-27T15:22:37.573Z",
                      "customer_id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                      "tracking_id": "track_9B0kB92+bJa8a+PegaWREw==",
                      "metadata": null,
                      "amount": -2000,
                      "redemption": "r_0c5e8a38730ccec0d5",
                      "result": "SUCCESS",
                      "order": {
                        "id": "ord_S4BvUj64TlGqVZDOeud7z3rU",
                        "source_id": null,
                        "created_at": "2023-01-27T12:34:57.086Z",
                        "updated_at": "2023-01-27T15:22:37.628Z",
                        "status": "CANCELED",
                        "amount": 6000,
                        "total_amount": 6000,
                        "items": [
                          {
                            "object": "order_item",
                            "product_id": "prod_0a9f9ab4ab019a42d5",
                            "quantity": 1,
                            "amount": 3300,
                            "price": 3000,
                            "subtotal_amount": 3300
                          },
                          {
                            "object": "order_item",
                            "product_id": "prod_0a9f9aeddb019a42db",
                            "quantity": 2,
                            "amount": 3400,
                            "price": 3000,
                            "subtotal_amount": 3400
                          }
                        ],
                        "metadata": {},
                        "customer": {
                          "id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                          "object": "customer"
                        },
                        "customer_id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                        "referrer_id": null,
                        "object": "order",
                        "redemptions": {
                          "r_0c5e8a38730ccec0d5": {
                            "date": "2023-01-27T12:34:57.100Z",
                            "rollback_id": "rr_0c5eb099214ccea115",
                            "rollback_date": "2023-01-27T15:22:37.573Z",
                            "related_object_type": "voucher",
                            "related_object_id": "v_UFAc7FTVO0HtJV2hWZls4O7eqHMyn62g",
                            "related_object_parent_id": "camp_B2Gx83JsSbmvj05MOwxYbNm6"
                          }
                        }
                      },
                      "customer": {
                        "id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                        "source_id": "36_bob",
                        "metadata": {
                          "age": 26,
                          "favorite_brands": [
                            "Nike",
                            "Adidas",
                            "Reebok"
                          ],
                          "accepts_marketing": false,
                          "acquisition_channel": "Facebook"
                        },
                        "object": "customer"
                      },
                      "related_object_type": "voucher",
                      "related_object_id": "v_UFAc7FTVO0HtJV2hWZls4O7eqHMyn62g",
                      "voucher": {
                        "id": "v_UFAc7FTVO0HtJV2hWZls4O7eqHMyn62g",
                        "code": "CODE14",
                        "campaign": "Gift Card Campaign",
                        "campaign_id": "camp_B2Gx83JsSbmvj05MOwxYbNm6",
                        "category": "Second",
                        "category_id": "cat_0bb343dee3cdb5ec0c",
                        "categories": [],
                        "type": "GIFT_VOUCHER",
                        "discount": null,
                        "gift": {
                          "amount": 2000,
                          "balance": 2000,
                          "effect": null
                        },
                        "loyalty_card": null,
                        "start_date": "2020-08-16T00:00:00.000Z",
                        "expiration_date": null,
                        "validity_timeframe": null,
                        "validity_day_of_week": null,
                        "active": true,
                        "additional_info": "secret-code1",
                        "metadata": {
                          "region": "APAC",
                          "season": "Fall"
                        },
                        "assets": {
                          "qr": {
                            "id": "U2FsdGVkX1+VibJ6VGxrSVw5qmdbPMP3aP8HfcngMxtQc9Bm649CK1dK36e8YR820Ct26IkvDemEDzV8ozhB3F2BpazbgvCmhAo2Gvmo2WtwBwPh2ISAPJiXQCHRjwmKiqogjqQaNKWLxwDIBUc2jQ==",
                            "url": "{{internalVoucherifyURL}}"
                          },
                          "barcode": {
                            "id": "U2FsdGVkX1/GVIi0p5fL5hxAY/ZBmuAU7nYYS03umjd30dwI5v5ZbpNc3Q5MiYbMuIOIT0H2fUTTwd//S4R9AB+60T/x4kSKu3lgfa9KgJmbyrzXm7Ggly06/qph4/asJaZVZIXEba4WJCeHqXCEgg==",
                            "url": "{{internalVoucherifyURL}}"
                          }
                        },
                        "is_referral_code": false,
                        "created_at": "2022-09-23T11:05:42.164Z",
                        "updated_at": "2023-01-27T15:22:37.595Z",
                        "redemption": {
                          "quantity": 18,
                          "redeemed_quantity": 0,
                          "redeemed_amount": 0,
                          "object": "list",
                          "url": "/v1/vouchers/CODE14/redemptions?page=1&limit=10"
                        },
                        "publish": {
                          "object": "list",
                          "count": 0,
                          "url": "/v1/vouchers/CODE14/publications?page=1&limit=10"
                        },
                        "object": "voucher"
                      },
                      "gift": {
                        "amount": -2000
                      }
                    }
                  },
                  "Promotion Tier": {
                    "value": {
                      "id": "rr_0ca286e96cc03f3e76",
                      "object": "redemption_rollback",
                      "date": "2023-03-21T07:57:12.526Z",
                      "customer_id": "cust_SolpIN5N4oZbCnrxZ5NHrbVB",
                      "tracking_id": "track_VAVW6qltuo1/z+G2GI2LPw==",
                      "metadata": {
                        "location_id": [
                          "L2"
                        ]
                      },
                      "redemption": "r_0ca286d222d2f7dc1f",
                      "reason": "To undo a redemption.",
                      "result": "SUCCESS",
                      "order": {
                        "id": "ord_0FR01SqYIxV4ITzgs1yZjkK6",
                        "source_id": "test_rollback_8",
                        "created_at": "2023-03-21T07:56:48.634Z",
                        "updated_at": "2023-03-21T07:57:12.546Z",
                        "status": "CANCELED",
                        "amount": 200000,
                        "total_amount": 200000,
                        "items": [
                          {
                            "object": "order_item",
                            "source_id": "apple534",
                            "related_object": "product",
                            "product_id": "prod_anJ03RZZq74z4v",
                            "quantity": 2,
                            "amount": 100000,
                            "price": 50000,
                            "subtotal_amount": 100000,
                            "product": {
                              "id": "prod_0c5d6689b39320059b",
                              "source_id": "prod_anJ03RZZq74z4v",
                              "name": "Apple iPhone 8",
                              "metadata": {
                                "shop": "citycenter",
                                "category": "electronics"
                              }
                            },
                            "metadata": {
                              "series": "2022-783CV"
                            }
                          },
                          {
                            "object": "order_item",
                            "source_id": "apple534-ihd5",
                            "related_object": "sku",
                            "sku_id": "sku_0KtP4rvwEECQ2U",
                            "quantity": 1,
                            "amount": 100000,
                            "price": 100000,
                            "subtotal_amount": 100000,
                            "sku": {
                              "sku": "Apple iPad 10 Silver 64GB",
                              "metadata": {
                                "category": "electronics"
                              }
                            }
                          }
                        ],
                        "metadata": {},
                        "customer": {
                          "id": "cust_SolpIN5N4oZbCnrxZ5NHrbVB",
                          "object": "customer"
                        },
                        "customer_id": "cust_SolpIN5N4oZbCnrxZ5NHrbVB",
                        "referrer_id": null,
                        "object": "order",
                        "redemptions": {
                          "r_0ca286d222d2f7dc1f": {
                            "date": "2023-03-21T07:56:48.651Z",
                            "rollback_id": "rr_0ca286e96cc03f3e76",
                            "rollback_date": "2023-03-21T07:57:12.526Z",
                            "related_object_type": "promotion_tier",
                            "related_object_id": "promo_DE1N30D731Tg2F6NoMwNas2W",
                            "related_object_parent_id": "camp_w7BUstntAm8jbIDjfM49volj"
                          }
                        }
                      },
                      "channel": {
                        "channel_id": "e55f3aaa-b303-421a-b562-ca8529ed341d",
                        "channel_type": "API"
                      },
                      "customer": {
                        "id": "cust_SolpIN5N4oZbCnrxZ5NHrbVB",
                        "name": "Annie Lemons",
                        "email": "annie@lemon.com",
                        "source_id": "annie@lemon.com",
                        "metadata": {
                          "age": 23
                        },
                        "object": "customer"
                      },
                      "related_object_type": "promotion_tier",
                      "related_object_id": "promo_DE1N30D731Tg2F6NoMwNas2W",
                      "voucher": null,
                      "promotion_tier": {
                        "id": "promo_DE1N30D731Tg2F6NoMwNas2W",
                        "created_at": "2022-09-23T08:31:23.022Z",
                        "updated_at": "2023-02-01T07:47:57.324Z",
                        "name": "Percent Discount",
                        "banner": "Get 40% off",
                        "action": {
                          "discount": {
                            "type": "PERCENT",
                            "percent_off": 40,
                            "effect": "APPLY_TO_ORDER"
                          }
                        },
                        "metadata": {},
                        "hierarchy": 2,
                        "campaign": {
                          "id": "camp_w7BUstntAm8jbIDjfM49volj",
                          "start_date": "2019-08-16T00:00:00.000Z",
                          "expiration_date": null,
                          "active": true,
                          "object": "campaign"
                        },
                        "campaign_id": "camp_w7BUstntAm8jbIDjfM49volj",
                        "active": true,
                        "start_date": "2022-09-21T00:00:00.000Z",
                        "validity_day_of_week": [
                          1,
                          2,
                          3,
                          4,
                          5
                        ],
                        "summary": {
                          "redemptions": {
                            "total_redeemed": 5
                          },
                          "orders": {
                            "total_amount": 616000,
                            "total_discount_amount": 246400
                          }
                        },
                        "object": "promotion_tier",
                        "validation_rule_assignments": null,
                        "category_id": null,
                        "categories": []
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/redemptions/{parentRedemptionId}/rollbacks": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterRedemptionId"
          },
          "name": "parentRedemptionId",
          "in": "path",
          "required": true,
          "description": "Unique identifier of a parent redemption, e.g. r_JQfm73zWSJFQxs3bGxweYjgm."
        }
      ],
      "post": {
        "operationId": "rollback-stacked-redemptions",
        "tags": [
          "Redemptions"
        ],
        "summary": "Rollback Stackable Redemptions",
        "description": "Rollback a stackable redemption. When you roll back a stacked redemption, all child redemptions will be rolled back. Provide the parent redemption ID as the path parameter. However, you can use this endpoint to roll back a single redemption that does not have a parent, similarly to POST Rollback redemption.\n🚧 \n You can roll back a redemption up to 3 months back.",
        "parameters": [
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterString"
            },
            "in": "query",
            "name": "reason",
            "description": "Reason for the rollback."
          },
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterString"
            },
            "in": "query",
            "name": "tracking_id",
            "description": "Customers source_id."
          }
        ],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "requestBody": {
          "description": "Add information about the original customer and order. Customer data and Redemption metadata can be updated in Voucherify when passing the customer data in the request body.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RedemptionsRollbacksCreateRequestBody"
              },
              "examples": {
                "Promotion": {
                  "value": {
                    "customer": {
                      "id": "cust_SolpIN5N4oZbCnrxZ5NHrbVB",
                      "name": "Annie Lemons",
                      "email": "annie@lemon.com",
                      "phone": "+1 933 222 3334",
                      "birthday": "1900-12-02",
                      "birthdate": "1900-12-01",
                      "address": {
                        "city": "New York",
                        "state": "NY",
                        "line_1": "123 Main St.",
                        "line_2": "APT 3 BLG 5",
                        "country": "United States",
                        "postal_code": "100012"
                      },
                      "metadata": {
                        "age": 23
                      }
                    },
                    "order": {
                      "source_id": "test_rollback_8"
                    },
                    "metadata": {
                      "location_id": [
                        "L2"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "2XX": {
            "description": "Returns an array with the individual redemption rollback results along with the parent rollback result and related order.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RedemptionsRollbacksCreateResponseBody"
                }
              }
            }
          }
        }
      }
    },
    "/v1/loyalties": {
      "get": {
        "operationId": "list-loyalty-programs",
        "tags": [
          "Loyalties"
        ],
        "summary": "List Loyalty Campaigns",
        "description": "Returns a list of your loyalty campaigns.",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterOrderListCampaigns"
            },
            "in": "query",
            "name": "order",
            "description": "Sorts the results using one of the filtering options, where the dash - preceding a sorting option means sorting in a descending order."
          }
        ],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns a dictionary with loyalty program objects. The loyalty campaigns are returned sorted by creation date, with the most recent campaigns appearing first.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoyaltiesListCampaignsResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "object": "list",
                      "data_ref": "campaigns",
                      "campaigns": [
                        {
                          "id": "camp_eTIsUtuzkRXQT6rsUQqrS5Gw",
                          "name": "Loyalty Campaign 1",
                          "campaign_type": "LOYALTY_PROGRAM",
                          "type": "AUTO_UPDATE",
                          "voucher": {
                            "type": "LOYALTY_CARD",
                            "loyalty_card": {
                              "points": 0
                            },
                            "redemption": {
                              "quantity": null
                            },
                            "code_config": {
                              "length": 8,
                              "charset": "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ",
                              "pattern": "########"
                            },
                            "is_referral_code": false
                          },
                          "auto_join": false,
                          "join_once": false,
                          "use_voucher_metadata_schema": true,
                          "description": "This is a campaign description.",
                          "vouchers_count": 6,
                          "active": true,
                          "metadata": {
                            "Season": "Fall"
                          },
                          "created_at": "2022-11-21T13:57:03.712Z",
                          "updated_at": "2022-11-23T09:59:49.581Z",
                          "creation_status": "DONE",
                          "vouchers_generation_status": "DONE",
                          "protected": false,
                          "category_id": "cat_0b6152ce12414820dc",
                          "categories": [],
                          "object": "campaign"
                        },
                        {
                          "id": "camp_fkZ28pe7DUAEmmabofkxHI8N",
                          "name": "Loyalty Campaign - Tiers",
                          "campaign_type": "LOYALTY_PROGRAM",
                          "type": "AUTO_UPDATE",
                          "voucher": {
                            "type": "LOYALTY_CARD",
                            "loyalty_card": {
                              "points": 0
                            },
                            "redemption": {
                              "quantity": null
                            },
                            "code_config": {
                              "length": 8,
                              "charset": "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ",
                              "pattern": "########",
                              "prefix": "LT1-",
                              "initial_count": 1
                            },
                            "is_referral_code": false,
                            "start_date": "2022-11-01T00:00:00.000Z"
                          },
                          "auto_join": false,
                          "join_once": false,
                          "use_voucher_metadata_schema": true,
                          "start_date": "2022-11-01T00:00:00.000Z",
                          "validity_day_of_week": [
                            1,
                            2,
                            3,
                            4,
                            5,
                            6
                          ],
                          "vouchers_count": 3,
                          "active": true,
                          "metadata": {},
                          "created_at": "2022-11-09T06:26:52.985Z",
                          "updated_at": "2022-11-10T08:54:46.136Z",
                          "creation_status": "DONE",
                          "vouchers_generation_status": "DONE",
                          "protected": false,
                          "category_id": "cat_0b8b5a427a0283c854",
                          "categories": [],
                          "loyalty_tiers_expiration": {
                            "qualification_type": "BALANCE",
                            "start_date": {
                              "type": "IMMEDIATE"
                            },
                            "expiration_date": {
                              "type": "CUSTOM",
                              "extend": "P3M",
                              "rounding": {
                                "type": "MONTH",
                                "strategy": "END"
                              }
                            }
                          },
                          "object": "campaign"
                        },
                        {
                          "id": "camp_NwO6D0Z0mpZ1CDc380DnPgrW",
                          "name": "Loyalty Campaign Example",
                          "campaign_type": "LOYALTY_PROGRAM",
                          "type": "STATIC",
                          "voucher": {
                            "type": "LOYALTY_CARD",
                            "loyalty_card": {
                              "points": 0
                            },
                            "redemption": {
                              "quantity": null
                            },
                            "code_config": {
                              "length": 8,
                              "charset": "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ",
                              "pattern": "########",
                              "initial_count": 1
                            },
                            "is_referral_code": false,
                            "start_date": "2021-12-15T00:00:00.000Z",
                            "expiration_date": "2021-12-31T00:00:00.000Z",
                            "validity_timeframe": {
                              "interval": "P1D",
                              "duration": "PT1H"
                            }
                          },
                          "auto_join": true,
                          "join_once": true,
                          "use_voucher_metadata_schema": true,
                          "start_date": "2021-12-15T00:00:00.000Z",
                          "expiration_date": "2021-12-31T00:00:00.000Z",
                          "validity_timeframe": {
                            "interval": "P1D",
                            "duration": "PT1H"
                          },
                          "validity_day_of_week": [
                            3,
                            4,
                            5,
                            6
                          ],
                          "activity_duration_after_publishing": "P24D",
                          "vouchers_count": 0,
                          "active": false,
                          "metadata": {},
                          "created_at": "2021-12-15T08:02:52.298Z",
                          "updated_at": "2021-12-15T08:11:43.808Z",
                          "creation_status": "DRAFT",
                          "vouchers_generation_status": "DRAFT",
                          "protected": false,
                          "category_id": null,
                          "categories": [],
                          "object": "campaign"
                        }
                      ],
                      "total": 3
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "create-loyalty-program",
        "tags": [
          "Loyalties"
        ],
        "summary": "Create Loyalty Campaign",
        "description": "Creates a batch of loyalty cards aggregated in a single loyalty campaign. It also allows you to define a custom codes pattern.  \n 📘 Global uniqueness\n All codes are unique across the whole project. Voucherify wont allow to generate the same codes in any of your campaigns.\n 🚧 Asynchronous action!\n This is an asynchronous action, you cant read or modify a newly created campaign until the code generation is completed. See creation_status field in the loyalty campaign object description.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "requestBody": {
          "description": "Specify the loyalty campaign details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoyaltiesCreateCampaignRequestBody"
              },
              "examples": {
                "Example": {
                  "value": {
                    "name": "Loyalty Program 4",
                    "description": "This is a campaign description.",
                    "auto_join": true,
                    "join_once": true,
                    "use_voucher_metadata_schema": true,
                    "start_date": "2016-10-26T00:00:00Z",
                    "expiration_date": "2024-10-26T00:00:00Z",
                    "validity_timeframe": {
                      "duration": "PT1H",
                      "interval": "P1D"
                    },
                    "validity_day_of_week": [
                      0,
                      1,
                      2,
                      3,
                      4,
                      5
                    ],
                    "activity_duration_after_publishing": "P24D",
                    "category_id": "cat_0b6152ce12414820dc",
                    "vouchers_count": 2,
                    "voucher": {
                      "type": "LOYALTY_CARD",
                      "loyalty_card": {
                        "points": 0,
                        "expiration_rules": {
                          "period_type": "MONTH",
                          "period_value": 3,
                          "rounding_type": "END_OF_QUARTER"
                        }
                      },
                      "redemption": {
                        "quantity": 2
                      },
                      "code_config": {
                        "pattern": "L-CARD-#######"
                      }
                    },
                    "metadata": {
                      "test": true
                    },
                    "type": "STATIC",
                    "loyalty_tiers_expiration": {
                      "qualification_type": "BALANCE",
                      "start_date": {
                        "type": "IMMEDIATE"
                      },
                      "expiration_date": {
                        "type": "CUSTOM",
                        "extend": "P3M",
                        "rounding": {
                          "type": "MONTH",
                          "strategy": "END"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "2XX": {
            "description": "Returns a campaign object with its settings but without the loyalty card codes.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoyaltiesCreateCampaignResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "id": "camp_wGlqXtnHddb39DvHuuhvvbxi",
                      "name": "Loyalty Program 4",
                      "campaign_type": "LOYALTY_PROGRAM",
                      "type": "STATIC",
                      "voucher": {
                        "type": "LOYALTY_CARD",
                        "loyalty_card": {
                          "points": 0,
                          "expiration_rules": {
                            "period_type": "MONTH",
                            "period_value": 3,
                            "rounding_type": "END_OF_QUARTER"
                          }
                        },
                        "redemption": {
                          "quantity": 2
                        },
                        "code_config": {
                          "length": 7,
                          "charset": "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ",
                          "pattern": "L-CARD-#######"
                        },
                        "is_referral_code": false,
                        "start_date": "2016-10-26T00:00:00.000Z",
                        "expiration_date": "2024-10-26T00:00:00.000Z",
                        "validity_timeframe": {
                          "interval": "P1D",
                          "duration": "PT1H"
                        }
                      },
                      "auto_join": true,
                      "join_once": true,
                      "use_voucher_metadata_schema": true,
                      "description": "This is a campaign description.",
                      "start_date": "2016-10-26T00:00:00.000Z",
                      "expiration_date": "2024-10-26T00:00:00.000Z",
                      "validity_timeframe": {
                        "interval": "P1D",
                        "duration": "PT1H"
                      },
                      "validity_day_of_week": [
                        0,
                        1,
                        2,
                        3,
                        4,
                        5
                      ],
                      "activity_duration_after_publishing": "P24D",
                      "vouchers_count": 0,
                      "active": true,
                      "metadata": {
                        "test": true
                      },
                      "created_at": "2022-11-29T13:10:30.848Z",
                      "category": "New Customers",
                      "creation_status": "IN_PROGRESS",
                      "vouchers_generation_status": "IN_PROGRESS",
                      "protected": false,
                      "validation_rules_assignments": {
                        "object": "list",
                        "data_ref": "data",
                        "data": [],
                        "total": 0
                      },
                      "category_id": "cat_0b6152ce12414820dc",
                      "categories": [
                        {
                          "id": "cat_0b6152ce12414820dc",
                          "name": "New Customers",
                          "hierarchy": 0,
                          "created_at": "2022-07-14T20:17:07.657Z",
                          "object": "category"
                        }
                      ],
                      "loyalty_tiers_expiration": {
                        "qualification_type": "BALANCE",
                        "start_date": {
                          "type": "IMMEDIATE"
                        },
                        "expiration_date": {
                          "type": "CUSTOM",
                          "extend": "P3M",
                          "rounding": {
                            "type": "MONTH",
                            "strategy": "END"
                          }
                        }
                      },
                      "object": "campaign"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/loyalties/{campaignId}": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterCampaignId"
          },
          "name": "campaignId",
          "in": "path",
          "required": true,
          "description": "The campaign ID or name of the loyalty campaign. You can either pass the campaign ID, which was assigned by Voucherify, or the name of the campaign as the path parameter value, e.g., Loyalty%20Campaign. "
        }
      ],
      "get": {
        "operationId": "get-loyalty-program",
        "tags": [
          "Loyalties"
        ],
        "summary": "Get Loyalty Campaign",
        "description": "Retrieve a specific loyalty campaign.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns a loyalty campaign object for a given loyalty campaign ID. ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoyaltiesGetCampaignResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "id": "camp_fkZ28pe7DUAEmmabofkxHI8N",
                      "name": "Loyalty Campaign - Tiers - 1",
                      "campaign_type": "LOYALTY_PROGRAM",
                      "type": "AUTO_UPDATE",
                      "voucher": {
                        "type": "LOYALTY_CARD",
                        "loyalty_card": {
                          "points": 0
                        },
                        "redemption": {
                          "quantity": null
                        },
                        "code_config": {
                          "length": 8,
                          "charset": "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ",
                          "pattern": "########",
                          "prefix": "LT1-",
                          "initial_count": 1
                        },
                        "is_referral_code": false,
                        "start_date": "2022-11-01T00:00:00.000Z"
                      },
                      "auto_join": false,
                      "join_once": false,
                      "use_voucher_metadata_schema": true,
                      "start_date": "2022-11-01T00:00:00.000Z",
                      "validity_day_of_week": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6
                      ],
                      "vouchers_count": 3,
                      "active": true,
                      "metadata": {},
                      "created_at": "2022-11-09T06:26:52.985Z",
                      "updated_at": "2022-11-10T08:54:46.136Z",
                      "category": "Eighth",
                      "creation_status": "DONE",
                      "vouchers_generation_status": "DONE",
                      "protected": false,
                      "validation_rules_assignments": {
                        "object": "list",
                        "data_ref": "data",
                        "data": [],
                        "total": 0
                      },
                      "category_id": "cat_0b8b5a427a0283c854",
                      "categories": [
                        {
                          "id": "cat_0b8b5a427a0283c854",
                          "name": "Eighth",
                          "hierarchy": 8,
                          "created_at": "2022-08-16T11:45:54.171Z",
                          "object": "category"
                        }
                      ],
                      "loyalty_tiers_expiration": {
                        "qualification_type": "BALANCE",
                        "start_date": {
                          "type": "IMMEDIATE"
                        },
                        "expiration_date": {
                          "type": "CUSTOM",
                          "extend": "P3M",
                          "rounding": {
                            "type": "MONTH",
                            "strategy": "END"
                          }
                        }
                      },
                      "object": "campaign"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "update-loyalty-program",
        "tags": [
          "Loyalties"
        ],
        "summary": "Update Loyalty Campaign",
        "description": "Updates a loyalty program. \nFields other than those specified in the allowed request body payload wont be modified (even if provided they are silently skipped). Any parameters not provided will be left unchanged. \nThis method will update the loyalty cards which have not been published or redeemed yet.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "requestBody": {
          "description": "Specify the new values for the parameters that you would like to update for the given loyalty campaign.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoyaltiesUpdateCampaignRequestBody"
              },
              "examples": {
                "Example": {
                  "value": {
                    "description": "This is a campaign description. Updated",
                    "auto_join": false,
                    "join_once": false,
                    "start_date": "2013-10-26T00:00:00Z",
                    "expiration_date": "2025-10-26T00:00:00Z",
                    "validity_timeframe": {
                      "duration": "PT2H",
                      "interval": "P2D"
                    },
                    "validity_day_of_week": [
                      0,
                      1,
                      2,
                      3,
                      4,
                      5,
                      6
                    ],
                    "activity_duration_after_publishing": "P25D",
                    "category_id": "cat_0b6152ce12414820dd",
                    "loyalty_card": {
                      "points": 1,
                      "expiration_rules": {
                        "period_type": "MONTH",
                        "period_value": 4,
                        "rounding_type": "END_OF_YEAR"
                      }
                    },
                    "metadata": {
                      "test": false
                    },
                    "type": "AUTO_UPDATE",
                    "loyalty_tiers_expiration": {
                      "qualification_type": "BALANCE",
                      "start_date": {
                        "type": "IMMEDIATE"
                      },
                      "expiration_date": {
                        "type": "CUSTOM",
                        "extend": "P4M",
                        "rounding": {
                          "type": "CUSTOM",
                          "unit": "MONTH",
                          "value": 1
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "2XX": {
            "description": "Returns the loyalty campaign object if the update succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoyaltiesUpdateCampaignResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "id": "camp_wGlqXtnHddb39DvHuuhvvbxi",
                      "name": "Loyalty Program 4",
                      "campaign_type": "LOYALTY_PROGRAM",
                      "type": "AUTO_UPDATE",
                      "voucher": {
                        "type": "LOYALTY_CARD",
                        "loyalty_card": {
                          "points": 1,
                          "expiration_rules": {
                            "period_type": "MONTH",
                            "period_value": 4,
                            "rounding_type": "END_OF_YEAR"
                          }
                        },
                        "redemption": {
                          "quantity": 2
                        },
                        "code_config": {
                          "length": 7,
                          "charset": "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ",
                          "pattern": "L-CARD-#######"
                        },
                        "is_referral_code": false,
                        "start_date": "2013-10-26T00:00:00.000Z",
                        "expiration_date": "2025-10-26T00:00:00.000Z",
                        "validity_timeframe": {
                          "interval": "P2D",
                          "duration": "PT2H"
                        }
                      },
                      "auto_join": false,
                      "join_once": false,
                      "use_voucher_metadata_schema": true,
                      "description": "This is a campaign description. Updated",
                      "start_date": "2013-10-26T00:00:00.000Z",
                      "expiration_date": "2025-10-26T00:00:00.000Z",
                      "validity_timeframe": {
                        "interval": "P2D",
                        "duration": "PT2H"
                      },
                      "validity_day_of_week": [
                        0,
                        1,
                        2,
                        3,
                        4,
                        5,
                        6
                      ],
                      "activity_duration_after_publishing": "P25D",
                      "vouchers_count": 2,
                      "active": true,
                      "metadata": {
                        "test": false
                      },
                      "created_at": "2022-11-29T13:10:30.848Z",
                      "updated_at": "2022-11-29T14:08:30.655Z",
                      "category": "Lorem_Ipsum",
                      "creation_status": "MODIFYING",
                      "vouchers_generation_status": "MODIFYING",
                      "protected": false,
                      "validation_rules_assignments": {
                        "object": "list",
                        "data_ref": "data",
                        "data": [],
                        "total": 0
                      },
                      "category_id": "cat_0b6152ce12414820dd",
                      "categories": [
                        {
                          "id": "cat_0b6152ce12414820dd",
                          "name": "Lorem_Ipsum",
                          "hierarchy": 0,
                          "created_at": "2022-07-14T20:17:07.657Z",
                          "object": "category"
                        }
                      ],
                      "loyalty_tiers_expiration": {
                        "qualification_type": "BALANCE",
                        "start_date": {
                          "type": "IMMEDIATE"
                        },
                        "expiration_date": {
                          "type": "CUSTOM",
                          "extend": "P4M",
                          "rounding": {
                            "type": "CUSTOM",
                            "strategy": "END",
                            "unit": "MONTH",
                            "value": 1
                          }
                        }
                      },
                      "object": "campaign"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "delete-loyalty-program",
        "tags": [
          "Loyalties"
        ],
        "summary": "Delete Loyalty Campaign",
        "description": "Deletes a loyalty campaign and all related loyalty cards. This action cannot be undone. Also, it immediately removes any redemptions on loyalty cards.\nIf the force parameter is set to false or not set at all, the loyalty campaign and all related loyalty cards will be moved to the bin.",
        "parameters": [
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterBoolean"
            },
            "in": "query",
            "name": "force",
            "description": "If this flag is set to true, the campaign and related vouchers will be removed permanently. If it is set to false or not set at all, the loyalty campaign and all related loyalty cards will be moved to the bin. Going forward, the user will be able to create the next campaign with the same name."
          }
        ],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns the ID of the scheduled asynchronous action, informing you that your request has been accepted and the loyalty campaign will be deleted from the repository asynchronously. To check the deletion status and result, copy the `async_action_id` from the response and pass it using <!-- [Get Async Action](OpenAPI.json/paths/~1async-actions~1{asyncActionId}/get) -->[Get Async Action](ref:get-async-action) endpoint.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoyaltiesDeleteResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "async_action_id": "aa_0a875d56c805df6601"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/loyalties/{campaignId}/members": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterCampaignId"
          },
          "name": "campaignId",
          "in": "path",
          "required": true,
          "description": "Unique campaign ID of the loyalty program."
        }
      ],
      "get": {
        "operationId": "list-members",
        "tags": [
          "Loyalties"
        ],
        "summary": "List Members",
        "description": "Returns a list of your loyalty cards. The loyalty cards are sorted by creation date, with the most recent loyalty cards appearing first.",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/customer"
          },
          {
            "$ref": "#/components/parameters/created_at"
          },
          {
            "$ref": "#/components/parameters/updated_at"
          },
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterOrderVouchers"
            },
            "in": "query",
            "name": "order",
            "description": "Sorts the results using one of the filtering options, where the dash - preceding a sorting option means sorting in a descending order."
          },
          {
            "name": "code",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/ParameterCode"
            }
          },
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns a list of loyalty cards within a campaign.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoyaltiesListMembersResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "object": "list",
                      "data_ref": "vouchers",
                      "vouchers": [
                        {
                          "id": "v_YLn0WVWXSXbUfDvxgrgUbtfJ3SQIY655",
                          "code": "0PmQ7JQI",
                          "campaign": "Loyalty Campaign",
                          "campaign_id": "camp_7s3uXI44aKfIk5IhmeOPr6ic",
                          "category": null,
                          "category_id": null,
                          "categories": [],
                          "type": "LOYALTY_CARD",
                          "discount": null,
                          "gift": null,
                          "loyalty_card": {
                            "points": 0,
                            "balance": 0
                          },
                          "start_date": null,
                          "expiration_date": null,
                          "validity_timeframe": null,
                          "validity_day_of_week": null,
                          "active": true,
                          "additional_info": null,
                          "metadata": {},
                          "assets": {
                            "qr": {
                              "id": "U2FsdGVkX19RtPewWeUYb2hiCR6xEhVE3SLdMfCXj3BA/s6uqSwFl2oAKAt9K5dolsdcZcj5Jgaa/YCnKkm63TRuX6OgGJoEggbKMg+wLfCMwBSi4J2v8KXuyqM25wP4r9WAL58Z+z3B1jkALIbjtw==",
                              "url": "{{internalVoucherifyURL}}"
                            },
                            "barcode": {
                              "id": "U2FsdGVkX1+hrRfaPMHRRX5aGVz2RpurRBjC2brcHcptPs4Od93qZM51vUXZe4DDzfRbnVrP+BfBtF+pyyQpxCeqbQuB/OuSnP/nzec6n0n/gTb9+XcIYLvvxcbnDbYoVdRFQEbcCxKKo4QzDlqIjQ==",
                              "url": "{{internalVoucherifyURL}}"
                            }
                          },
                          "is_referral_code": false,
                          "created_at": "2022-04-15T05:48:45.509Z",
                          "updated_at": "2022-07-01T00:01:57.860Z",
                          "holder_id": "cust_nk0N1uNQ1YnupAoJGOgvsODC",
                          "redemption": {
                            "quantity": null,
                            "redeemed_quantity": 0,
                            "redeemed_points": 0,
                            "object": "list",
                            "url": "/v1/vouchers/0PmQ7JQI/redemptions?page=1&limit=10"
                          },
                          "publish": {
                            "object": "list",
                            "count": 1,
                            "url": "/v1/vouchers/0PmQ7JQI/publications?page=1&limit=10"
                          },
                          "object": "voucher"
                        },
                        {
                          "id": "v_0aMj6Mdp0i3zuXrd9NnBKboc7746mlgF",
                          "code": "MmFAzfDe",
                          "campaign": "Loyalty Campaign",
                          "campaign_id": "camp_7s3uXI44aKfIk5IhmeOPr6ic",
                          "category": null,
                          "category_id": "cat_0b6152ce12414820de",
                          "categories": [],
                          "type": "LOYALTY_CARD",
                          "discount": null,
                          "gift": null,
                          "loyalty_card": {
                            "points": 13435,
                            "balance": 13135,
                            "next_expiration_date": "2022-11-30",
                            "next_expiration_points": 12
                          },
                          "start_date": null,
                          "expiration_date": null,
                          "validity_timeframe": null,
                          "validity_day_of_week": null,
                          "active": true,
                          "additional_info": null,
                          "metadata": {},
                          "assets": {
                            "qr": {
                              "id": "U2FsdGVkX184kVdWUO/msrLg1G0MRf/Cs6QwSN3f6kyWCOTGdijyq8OfUbUpcGx6fjdeIpTf2UilFGNG8aCWVk/dXm/QEJ/sulXKDlUMWf+MN7TRG5LB+wuzqTy7csDBfRoJn0fURpwU4A6VZZSwBQ==",
                              "url": "{{internalVoucherifyURL}}"
                            },
                            "barcode": {
                              "id": "U2FsdGVkX1/RGZN9VwvkdI6B26PPZQZWjh33USr5NPMXbHuJVkxsH6TUyW/cXen1Lc7gaqik09BGiry0R4QIAP52jnxQuABOsW0HdYfglsLPY7IajGX5rJzZKDKuzioq2vRIPyuE6z03frAod7ptvQ==",
                              "url": "{{internalVoucherifyURL}}"
                            }
                          },
                          "is_referral_code": false,
                          "created_at": "2022-02-18T14:03:59.954Z",
                          "updated_at": "2022-11-21T13:49:54.949Z",
                          "holder_id": "cust_sehkNIi8Uq2qQuRqSr7xn4Zi",
                          "redemption": {
                            "quantity": null,
                            "redeemed_quantity": 1,
                            "redeemed_points": 300,
                            "object": "list",
                            "url": "/v1/vouchers/MmFAzfDe/redemptions?page=1&limit=10"
                          },
                          "publish": {
                            "object": "list",
                            "count": 1,
                            "url": "/v1/vouchers/MmFAzfDe/publications?page=1&limit=10"
                          },
                          "object": "voucher"
                        }
                      ],
                      "total": 2
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "add-member",
        "tags": [
          "Loyalties"
        ],
        "summary": "Add Member",
        "description": "This method assigns a loyalty card to a customer. It selects a loyalty card suitable for publication, adds a publish entry, and returns the published voucher.  \nA voucher is suitable for publication when its active and hasnt been published yet.  \n 📘 Auto-update campaign\n In case you want to ensure the number of publishable codes increases automatically with the number of customers, you should use **auto-update** campaign.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "requestBody": {
          "description": "Provide details to whom the loyalty card should be assigned.    \nYou can choose to either specify the exact loyalty card code that you want to publish from existin (non-assigned) codes, or choose not to specify a voucher code. If you choose not to specify a code in the request paylaod, then the system will choose the next available voucher code available to be assigned to a customer.  \nYou can also include metadata in the request payload. This metadata will be assigned to the publication object, but will not be returned in the response to this endpoint. To see of publications (assignments of particular codes to customers) and publication metadata, use the List Publications endpoint.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoyaltiesMembersCreateRequestBody"
              },
              "examples": {
                "Using source ID": {
                  "value": {
                    "customer": "source_customer_1",
                    "metadata": {
                      "year": 2022
                    },
                    "channel": "postman",
                    "voucher": "KpzbHUY5"
                  }
                },
                "Using unique Voucherify assigned ID": {
                  "value": {
                    "customer": "cust_8KQmHxAERpgebYcFhSpZRr37",
                    "metadata": {
                      "year": 2022
                    },
                    "channel": "postman",
                    "voucher": "KpzbHUY5"
                  }
                },
                "Using source ID in object": {
                  "value": {
                    "customer": {
                      "source_id": "source_customer_1"
                    },
                    "metadata": {
                      "year": 2022
                    },
                    "channel": "postman",
                    "voucher": "KpzbHUY5"
                  }
                },
                "Using unique Voucherify assigned ID in object": {
                  "value": {
                    "customer": {
                      "id": "cust_8KQmHxAERpgebYcFhSpZRr37"
                    },
                    "metadata": {
                      "year": 2022
                    },
                    "channel": "postman",
                    "voucher": "KpzbHUY5"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "2XX": {
            "description": "Returns the voucher object that was published to the customer provided in the request payload.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoyaltiesMembersCreateResponseBody"
                },
                "examples": {
                  "Loyalty Card": {
                    "value": {
                      "id": "v_0TxKw1bm0oZuS5lwA8526vze1OBMV1OH",
                      "code": "KpzbHUY5",
                      "campaign": "Loyalty Campaign",
                      "campaign_id": "camp_eTIsUtuzkRXQT6rsUQqrS5Gw",
                      "category": "New Customers",
                      "category_id": "cat_0b6152ce12414820dc",
                      "categories": [
                        {
                          "id": "cat_0b6152ce12414820dc",
                          "name": "New Customers",
                          "hierarchy": 0,
                          "created_at": "2022-07-14T20:17:07.657Z",
                          "object": "category"
                        }
                      ],
                      "type": "LOYALTY_CARD",
                      "discount": null,
                      "gift": null,
                      "loyalty_card": {
                        "points": 0,
                        "balance": 0
                      },
                      "start_date": null,
                      "expiration_date": null,
                      "validity_timeframe": null,
                      "validity_day_of_week": null,
                      "active": true,
                      "additional_info": null,
                      "metadata": {
                        "Season": "Fall"
                      },
                      "assets": {
                        "qr": {
                          "id": "U2FsdGVkX1+hdZfzUaz448vIsyf7WpvXiDyqFbyw0+P5wMu12w3B5DyYwA7LCSK+Nr7TA7PKGuHOTGxfBieqrhvJo81HiaIJimDOhk+ecEOisMRmHf6XsNckVlyBHmkpBiXWNm8UDwZnXOAG75Usdw==",
                          "url": "{{internalVoucherifyURL}}"
                        },
                        "barcode": {
                          "id": "U2FsdGVkX19VRXApVvZ9/ArwBd0wNg7s2KZBXrFvPXZdDQyzGj0HbbEIx5TAoXNR9zaE5kzIj9BElzgK82aOMMVnc1sqvr93xw+YeYMnqGqHRZfM78pYC8560Zc3U6IELtxzaJJ0x2uDUe6Dc9XYeg==",
                          "url": "{{internalVoucherifyURL}}"
                        }
                      },
                      "is_referral_code": false,
                      "created_at": "2022-11-21T15:48:57.860Z",
                      "updated_at": "2022-11-21T15:49:36.671Z",
                      "holder_id": "cust_8KQmHxAERpgebYcFhSpZRr37",
                      "redemption": {
                        "quantity": null,
                        "redeemed_quantity": 0,
                        "redeemed_points": 0,
                        "object": "list",
                        "url": "/v1/vouchers/KpzbHUY5/redemptions?page=1&limit=10"
                      },
                      "publish": {
                        "object": "list",
                        "count": 1,
                        "url": "/v1/vouchers/KpzbHUY5/publications?page=1&limit=10"
                      },
                      "object": "voucher"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/loyalties/{campaignId}/members/{memberId}": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterCampaignId"
          },
          "name": "campaignId",
          "in": "path",
          "required": true,
          "description": "Unique campaign ID."
        },
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterMemberId"
          },
          "name": "memberId",
          "in": "path",
          "required": true,
          "description": "Unique code that identifies the loyalty card."
        }
      ],
      "get": {
        "operationId": "get-member-1",
        "tags": [
          "Loyalties"
        ],
        "summary": "Get Member",
        "description": "Retrieves the loyalty card with the given member ID (i.e. voucher code).",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns loyalty card details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoyaltiesMembersGetResponseBody"
                },
                "examples": {
                  "Loyalty Card": {
                    "value": {
                      "id": "v_0aMj6Mdp0i3zuXrd9NnBKboc7746mlgF",
                      "code": "MmFAzfDe",
                      "campaign": "Loyalty Program",
                      "campaign_id": "camp_7s3uXI44aKfIk5IhmeOPr6ic",
                      "category": null,
                      "category_id": "cat_0b6152ce12414820de",
                      "categories": [],
                      "type": "LOYALTY_CARD",
                      "discount": null,
                      "gift": null,
                      "loyalty_card": {
                        "points": 13435,
                        "balance": 13135,
                        "next_expiration_date": "2022-11-30",
                        "next_expiration_points": 12
                      },
                      "start_date": null,
                      "expiration_date": null,
                      "validity_timeframe": null,
                      "validity_day_of_week": null,
                      "active": true,
                      "additional_info": null,
                      "metadata": {},
                      "assets": {
                        "qr": {
                          "id": "U2FsdGVkX184kVdWUO/msrLg1G0MRf/Cs6QwSN3f6kyWCOTGdijyq8OfUbUpcGx6fjdeIpTf2UilFGNG8aCWVk/dXm/QEJ/sulXKDlUMWf+MN7TRG5LB+wuzqTy7csDBfRoJn0fURpwU4A6VZZSwBQ==",
                          "url": "{{internalVoucherifyURL}}"
                        },
                        "barcode": {
                          "id": "U2FsdGVkX1/RGZN9VwvkdI6B26PPZQZWjh33USr5NPMXbHuJVkxsH6TUyW/cXen1Lc7gaqik09BGiry0R4QIAP52jnxQuABOsW0HdYfglsLPY7IajGX5rJzZKDKuzioq2vRIPyuE6z03frAod7ptvQ==",
                          "url": "{{internalVoucherifyURL}}"
                        }
                      },
                      "is_referral_code": false,
                      "created_at": "2022-02-18T14:03:59.954Z",
                      "updated_at": "2022-11-21T13:49:54.949Z",
                      "holder_id": "cust_sehkNIi8Uq2qQuRqSr7xn4Zi",
                      "redemption": {
                        "quantity": null,
                        "redeemed_quantity": 1,
                        "redeemed_points": 300,
                        "object": "list",
                        "url": "/v1/vouchers/MmFAzfDe/redemptions?page=1&limit=10"
                      },
                      "publish": {
                        "object": "list",
                        "count": 1,
                        "url": "/v1/vouchers/MmFAzfDe/publications?page=1&limit=10"
                      },
                      "object": "voucher"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/loyalties/members/{memberId}": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterMemberId"
          },
          "name": "memberId",
          "in": "path",
          "required": true,
          "description": "Unique loyalty card code assigned to a particular customer."
        }
      ],
      "get": {
        "operationId": "get-member",
        "tags": [
          "Loyalties"
        ],
        "summary": "Get Member",
        "description": "Retrieve loyalty card with the given member ID (i.e. voucher code).    \n 📘 Alternative endpoint\n This endpoint is an alternative to this endpoint. The URL was re-designed to allow you to retrieve loyalty card details without having to provide the campaignId as a path parameter.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns loyalty card details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoyaltiesMembersGetResponseBody"
                },
                "examples": {
                  "Loyalty Card": {
                    "value": {
                      "id": "v_0aMj6Mdp0i3zuXrd9NnBKboc7746mlgF",
                      "code": "MmFAzfDe",
                      "campaign": "Loyalty Program",
                      "campaign_id": "camp_7s3uXI44aKfIk5IhmeOPr6ic",
                      "category": null,
                      "category_id": "cat_0b6152ce12414820de",
                      "categories": [],
                      "type": "LOYALTY_CARD",
                      "discount": null,
                      "gift": null,
                      "loyalty_card": {
                        "points": 13435,
                        "balance": 13135,
                        "next_expiration_date": "2022-11-30",
                        "next_expiration_points": 12
                      },
                      "start_date": null,
                      "expiration_date": null,
                      "validity_timeframe": null,
                      "validity_day_of_week": null,
                      "active": true,
                      "additional_info": null,
                      "metadata": {},
                      "assets": {
                        "qr": {
                          "id": "U2FsdGVkX184kVdWUO/msrLg1G0MRf/Cs6QwSN3f6kyWCOTGdijyq8OfUbUpcGx6fjdeIpTf2UilFGNG8aCWVk/dXm/QEJ/sulXKDlUMWf+MN7TRG5LB+wuzqTy7csDBfRoJn0fURpwU4A6VZZSwBQ==",
                          "url": "{{internalVoucherifyURL}}"
                        },
                        "barcode": {
                          "id": "U2FsdGVkX1/RGZN9VwvkdI6B26PPZQZWjh33USr5NPMXbHuJVkxsH6TUyW/cXen1Lc7gaqik09BGiry0R4QIAP52jnxQuABOsW0HdYfglsLPY7IajGX5rJzZKDKuzioq2vRIPyuE6z03frAod7ptvQ==",
                          "url": "{{internalVoucherifyURL}}"
                        }
                      },
                      "is_referral_code": false,
                      "created_at": "2022-02-18T14:03:59.954Z",
                      "updated_at": "2022-11-21T13:49:54.949Z",
                      "holder_id": "cust_sehkNIi8Uq2qQuRqSr7xn4Zi",
                      "redemption": {
                        "quantity": null,
                        "redeemed_quantity": 1,
                        "redeemed_points": 300,
                        "object": "list",
                        "url": "/v1/vouchers/MmFAzfDe/redemptions?page=1&limit=10"
                      },
                      "publish": {
                        "object": "list",
                        "count": 1,
                        "url": "/v1/vouchers/MmFAzfDe/publications?page=1&limit=10"
                      },
                      "object": "voucher"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/loyalties/{campaignId}/pending-points": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterCampaignId"
          },
          "name": "campaignId",
          "in": "path",
          "required": true,
          "description": "Unique campaign ID."
        }
      ],
      "get": {
        "operationId": "list-campaign-pending-points",
        "tags": [
          "Loyalties"
        ],
        "summary": "List Campaign Pending Points",
        "description": "Lists all pending points that are currently assigned to all loyalty cards in a campaign. Once the points are added to the card, the entry is no longer returned.\n👍 Configuring pending points\nPending points are configured as part of an earning rule with POST Create earning rule or PUT Update earning rule.",
        "parameters": [
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterLimit"
            },
            "in": "query",
            "name": "limit",
            "description": "Limit the number of the pending point entries that the API returns in the response."
          },
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterOrderListPendingPoints"
            },
            "in": "query",
            "name": "order",
            "description": "Orders the pending point entries according the pending point entry ID. The dash - preceding a sorting option means sorting in a descending order."
          },
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterString"
            },
            "in": "query",
            "name": "starting_after_id",
            "description": "A cursor for pagination. It retrieves the results starting after a result with the given ID."
          }
        ],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns all pending point entries for all loyalty cards in the campaign.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoyaltiesPendingPointsListResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "object": "list",
                      "data_ref": "data",
                      "data": [
                        {
                          "id": "lopp_0ffdbd86f0120789f2",
                          "voucher_id": "v_abCdEfghI1JKLMNPqRS2Tu3vWXyza4bc",
                          "campaign_id": "camp_AQZ1GLRlbGaC2dETd31VbJQ9",
                          "customer_id": "cust_IdgAFZxYwwHctOk9ppZMu319",
                          "order_id": "ord_0ffc73eff092dea295",
                          "points": 1,
                          "activates_at": "2025-01-16",
                          "details": {
                            "holder_loyalty_tier": {
                              "id": "ltr_0e30613ad01f044515",
                              "name": "Silver Tier"
                            },
                            "event": {
                              "id": "evcus_0ffc73eff212dea29f",
                              "type": "customer.order.paid",
                              "group_id": "v-0ffc73efe71d5053fa",
                              "entity_id": "cust_IdgAFZxYwwHctOk9ppZMu319",
                              "created_at": "2025-01-15T16:51:03.745Z",
                              "category": "EFFECT",
                              "event_source": {
                                "channel": "USER_PORTAL",
                                "user": {
                                  "id": "user_xyzaBcDEfgHOIJKLmn1opqr2Stu3VWX4"
                                }
                              }
                            },
                            "earning_rule": {
                              "id": "ern_FQxftbKUq9E93k00Z3qkC0sX",
                              "source": {
                                "banner": "Order-paid"
                              }
                            },
                            "order": {
                              "id": "ord_0ffc73eff092dea295",
                              "source_id": "dashboard-source-20250115-001"
                            }
                          },
                          "created_at": "2025-01-15T16:51:04.708Z"
                        },
                        {
                          "id": "lopp_0ffd968aa8d207eb38",
                          "voucher_id": "v_abCdEfghI1JKLMNPqRS2Tu3vWXyza4bc",
                          "campaign_id": "camp_AQZ1GLRlbGaC2dETd31VbJQ9",
                          "customer_id": "cust_IdgAFZxYwwHctOk9ppZMu319",
                          "order_id": "ord_0ffc4cf3aa55d28bae",
                          "points": 1,
                          "activates_at": "2025-01-16",
                          "details": {
                            "holder_loyalty_tier": {
                              "id": "ltr_0e30613ad01f044515",
                              "name": "Silver Tier"
                            },
                            "event": {
                              "id": "evcus_0ffc4cf3ad15d28bb8",
                              "type": "customer.order.paid",
                              "group_id": "v-0ffc4cf39e2d7d9ade",
                              "entity_id": "cust_IdgAFZxYwwHctOk9ppZMu319",
                              "created_at": "2025-01-15T14:00:43.940Z",
                              "category": "EFFECT",
                              "event_source": {
                                "channel": "API",
                                "api_key": {
                                  "name": "Primary",
                                  "app_id": "3XxxX483-0YYd-XX8z-aXXX-YYY7a3d3698"
                                }
                              }
                            },
                            "earning_rule": {
                              "id": "ern_FQxftbKUq9E93k00Z3qkC0sX",
                              "source": {
                                "banner": "Order-paid"
                              }
                            },
                            "order": {
                              "id": "ord_0ffc4cf3aa55d28bae",
                              "source_id": "your_own_source_id_20250115-006"
                            }
                          },
                          "created_at": "2025-01-15T14:00:44.934Z"
                        },
                        {
                          "id": "lopp_0ffd9661bd5207eb0a",
                          "voucher_id": "v_abCdEfghI1JKLMNPqRS2Tu3vWXyza4bc",
                          "campaign_id": "camp_AQZ1GLRlbGaC2dETd31VbJQ9",
                          "customer_id": "cust_IdgAFZxYwwHctOk9ppZMu319",
                          "order_id": "ord_0ffc4ccac0d5d28b7a",
                          "points": 1,
                          "activates_at": "2025-01-16",
                          "details": {
                            "holder_loyalty_tier": {
                              "id": "ltr_0e30613ad01f044515",
                              "name": "Silver Tier"
                            },
                            "event": {
                              "id": "evcus_0ffc4ccac5d5d28b84",
                              "type": "customer.order.paid",
                              "group_id": "v-0ffc4ccaafdd50214b",
                              "entity_id": "cust_IdgAFZxYwwHctOk9ppZMu319",
                              "created_at": "2025-01-15T14:00:02.038Z",
                              "category": "EFFECT",
                              "event_source": {
                                "channel": "API",
                                "api_key": {
                                  "name": "Primary",
                                  "app_id": "34fdc483-066d-478b-a707-be2c7a3d3698"
                                }
                              }
                            },
                            "earning_rule": {
                              "id": "ern_FQxftbKUq9E93k00Z3qkC0sX",
                              "source": {
                                "banner": "Order-paid"
                              }
                            },
                            "order": {
                              "id": "ord_0ffc4ccac0d5d28b7a",
                              "source_id": "your_own_source_id_20250115-005"
                            }
                          },
                          "created_at": "2025-01-15T14:00:02.586Z"
                        }
                      ],
                      "has_more": true,
                      "more_starting_after": "lopp_0ffd9661bd5207eb0a"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/loyalties/{campaignId}/members/{memberId}/pending-points": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterCampaignId"
          },
          "name": "campaignId",
          "in": "path",
          "required": true,
          "description": "Unique campaign ID."
        },
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterMemberId"
          },
          "name": "memberId",
          "in": "path",
          "required": true,
          "description": "Unique loyalty card code assigned to a particular customer."
        }
      ],
      "get": {
        "operationId": "list-member-pending-points-1",
        "tags": [
          "Loyalties"
        ],
        "summary": "List Member Pending Points",
        "description": "Lists all pending points that are currently assigned to the loyalty card. Once the points are added to the card, the entry is no longer returned.\n👍 Configuring pending points\nPending points are configured as part of an earning rule with POST Create earning rule or PUT Update earning rule.",
        "parameters": [
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterLimit"
            },
            "in": "query",
            "name": "limit",
            "description": "Limit the number of the pending point entries that the API returns in the response."
          },
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterOrderListPendingPoints"
            },
            "in": "query",
            "name": "order",
            "description": "Orders the pending point entries according the pending point entry ID. The dash - preceding a sorting option means sorting in a descending order."
          },
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterString"
            },
            "in": "query",
            "name": "starting_after_id",
            "description": "A cursor for pagination. It retrieves the results starting after a result with the given ID."
          }
        ],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns all pending point entries.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoyaltiesMembersPendingPointsListResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "object": "list",
                      "data_ref": "data",
                      "data": [
                        {
                          "id": "lopp_0ffdbd86f0120789f2",
                          "voucher_id": "v_abCdEfghI1JKLMNPqRS2Tu3vWXyza4bc",
                          "campaign_id": "camp_AQZ1GLRlbGaC2dETd31VbJQ9",
                          "customer_id": "cust_IdgAFZxYwwHctOk9ppZMu319",
                          "order_id": "ord_0ffc73eff092dea295",
                          "points": 1,
                          "activates_at": "2025-01-16",
                          "details": {
                            "holder_loyalty_tier": {
                              "id": "ltr_0e30613ad01f044515",
                              "name": "Silver Tier"
                            },
                            "event": {
                              "id": "evcus_0ffc73eff212dea29f",
                              "type": "customer.order.paid",
                              "group_id": "v-0ffc73efe71d5053fa",
                              "entity_id": "cust_IdgAFZxYwwHctOk9ppZMu319",
                              "created_at": "2025-01-15T16:51:03.745Z",
                              "category": "EFFECT",
                              "event_source": {
                                "channel": "USER_PORTAL",
                                "user": {
                                  "id": "user_xyzaBcDEfgHOIJKLmn1opqr2Stu3VWX4"
                                }
                              }
                            },
                            "earning_rule": {
                              "id": "ern_FQxftbKUq9E93k00Z3qkC0sX",
                              "source": {
                                "banner": "Order-paid"
                              }
                            },
                            "order": {
                              "id": "ord_0ffc73eff092dea295",
                              "source_id": "dashboard-source-20250115-001"
                            }
                          },
                          "created_at": "2025-01-15T16:51:04.708Z"
                        },
                        {
                          "id": "lopp_0ffd968aa8d207eb38",
                          "voucher_id": "v_abCdEfghI1JKLMNPqRS2Tu3vWXyza4bc",
                          "campaign_id": "camp_AQZ1GLRlbGaC2dETd31VbJQ9",
                          "customer_id": "cust_IdgAFZxYwwHctOk9ppZMu319",
                          "order_id": "ord_0ffc4cf3aa55d28bae",
                          "points": 1,
                          "activates_at": "2025-01-16",
                          "details": {
                            "holder_loyalty_tier": {
                              "id": "ltr_0e30613ad01f044515",
                              "name": "Silver Tier"
                            },
                            "event": {
                              "id": "evcus_0ffc4cf3ad15d28bb8",
                              "type": "customer.order.paid",
                              "group_id": "v-0ffc4cf39e2d7d9ade",
                              "entity_id": "cust_IdgAFZxYwwHctOk9ppZMu319",
                              "created_at": "2025-01-15T14:00:43.940Z",
                              "category": "EFFECT",
                              "event_source": {
                                "channel": "API",
                                "api_key": {
                                  "name": "Primary",
                                  "app_id": "3XxxX483-0YYd-XX8z-aXXX-YYY7a3d3698"
                                }
                              }
                            },
                            "earning_rule": {
                              "id": "ern_FQxftbKUq9E93k00Z3qkC0sX",
                              "source": {
                                "banner": "Order-paid"
                              }
                            },
                            "order": {
                              "id": "ord_0ffc4cf3aa55d28bae",
                              "source_id": "your_own_source_id_20250115-006"
                            }
                          },
                          "created_at": "2025-01-15T14:00:44.934Z"
                        },
                        {
                          "id": "lopp_0ffd9661bd5207eb0a",
                          "voucher_id": "v_abCdEfghI1JKLMNPqRS2Tu3vWXyza4bc",
                          "campaign_id": "camp_AQZ1GLRlbGaC2dETd31VbJQ9",
                          "customer_id": "cust_IdgAFZxYwwHctOk9ppZMu319",
                          "order_id": "ord_0ffc4ccac0d5d28b7a",
                          "points": 1,
                          "activates_at": "2025-01-16",
                          "details": {
                            "holder_loyalty_tier": {
                              "id": "ltr_0e30613ad01f044515",
                              "name": "Silver Tier"
                            },
                            "event": {
                              "id": "evcus_0ffc4ccac5d5d28b84",
                              "type": "customer.order.paid",
                              "group_id": "v-0ffc4ccaafdd50214b",
                              "entity_id": "cust_IdgAFZxYwwHctOk9ppZMu319",
                              "created_at": "2025-01-15T14:00:02.038Z",
                              "category": "EFFECT",
                              "event_source": {
                                "channel": "API",
                                "api_key": {
                                  "name": "Primary",
                                  "app_id": "34fdc483-066d-478b-a707-be2c7a3d3698"
                                }
                              }
                            },
                            "earning_rule": {
                              "id": "ern_FQxftbKUq9E93k00Z3qkC0sX",
                              "source": {
                                "banner": "Order-paid"
                              }
                            },
                            "order": {
                              "id": "ord_0ffc4ccac0d5d28b7a",
                              "source_id": "your_own_source_id_20250115-005"
                            }
                          },
                          "created_at": "2025-01-15T14:00:02.586Z"
                        }
                      ],
                      "has_more": true,
                      "more_starting_after": "lopp_0ffd9661bd5207eb0a"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/loyalties/members/{memberId}/pending-points": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterMemberId"
          },
          "name": "memberId",
          "in": "path",
          "required": true,
          "description": "Unique loyalty card code assigned to a particular customer."
        }
      ],
      "get": {
        "operationId": "list-member-pending-points",
        "tags": [
          "Loyalties"
        ],
        "summary": "List Member Pending Points",
        "description": "\n 📘 Alternative endpoint\n This endpoint is an alternative to this endpoint. The URL was re-designed to list member pending points without having to provide the campaignId as a path parameter.\nLists all pending points that are currently assigned to the loyalty card. Once the points are added to the card, the entry is no longer returned.\n👍 Configuring pending points\nPending points are configured as part of an earning rule with POST Create earning rule or PUT Update earning rule.",
        "parameters": [
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterLimit"
            },
            "in": "query",
            "name": "limit",
            "description": "Limit the number of the pending point entries that the API returns in the response."
          },
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterOrderListPendingPoints"
            },
            "in": "query",
            "name": "order",
            "description": "Orders the pending point entries according the pending point entry ID. The dash - preceding a sorting option means sorting in a descending order."
          },
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterString"
            },
            "in": "query",
            "name": "starting_after_id",
            "description": "A cursor for pagination. It retrieves the results starting after a result with the given ID."
          }
        ],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns all pending point entries.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoyaltiesMembersPendingPointsListResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "object": "list",
                      "data_ref": "data",
                      "data": [
                        {
                          "id": "lopp_0ffdbd86f0120789f2",
                          "voucher_id": "v_abCdEfghI1JKLMNPqRS2Tu3vWXyza4bc",
                          "campaign_id": "camp_AQZ1GLRlbGaC2dETd31VbJQ9",
                          "customer_id": "cust_IdgAFZxYwwHctOk9ppZMu319",
                          "order_id": "ord_0ffc73eff092dea295",
                          "points": 1,
                          "activates_at": "2025-01-16",
                          "details": {
                            "holder_loyalty_tier": {
                              "id": "ltr_0e30613ad01f044515",
                              "name": "Silver Tier"
                            },
                            "event": {
                              "id": "evcus_0ffc73eff212dea29f",
                              "type": "customer.order.paid",
                              "group_id": "v-0ffc73efe71d5053fa",
                              "entity_id": "cust_IdgAFZxYwwHctOk9ppZMu319",
                              "created_at": "2025-01-15T16:51:03.745Z",
                              "category": "EFFECT",
                              "event_source": {
                                "channel": "USER_PORTAL",
                                "user": {
                                  "id": "user_xyzaBcDEfgHOIJKLmn1opqr2Stu3VWX4"
                                }
                              }
                            },
                            "earning_rule": {
                              "id": "ern_FQxftbKUq9E93k00Z3qkC0sX",
                              "source": {
                                "banner": "Order-paid"
                              }
                            },
                            "order": {
                              "id": "ord_0ffc73eff092dea295",
                              "source_id": "dashboard-source-20250115-001"
                            }
                          },
                          "created_at": "2025-01-15T16:51:04.708Z"
                        },
                        {
                          "id": "lopp_0ffd968aa8d207eb38",
                          "voucher_id": "v_abCdEfghI1JKLMNPqRS2Tu3vWXyza4bc",
                          "campaign_id": "camp_AQZ1GLRlbGaC2dETd31VbJQ9",
                          "customer_id": "cust_IdgAFZxYwwHctOk9ppZMu319",
                          "order_id": "ord_0ffc4cf3aa55d28bae",
                          "points": 1,
                          "activates_at": "2025-01-16",
                          "details": {
                            "holder_loyalty_tier": {
                              "id": "ltr_0e30613ad01f044515",
                              "name": "Silver Tier"
                            },
                            "event": {
                              "id": "evcus_0ffc4cf3ad15d28bb8",
                              "type": "customer.order.paid",
                              "group_id": "v-0ffc4cf39e2d7d9ade",
                              "entity_id": "cust_IdgAFZxYwwHctOk9ppZMu319",
                              "created_at": "2025-01-15T14:00:43.940Z",
                              "category": "EFFECT",
                              "event_source": {
                                "channel": "API",
                                "api_key": {
                                  "name": "Primary",
                                  "app_id": "3XxxX483-0YYd-XX8z-aXXX-YYY7a3d3698"
                                }
                              }
                            },
                            "earning_rule": {
                              "id": "ern_FQxftbKUq9E93k00Z3qkC0sX",
                              "source": {
                                "banner": "Order-paid"
                              }
                            },
                            "order": {
                              "id": "ord_0ffc4cf3aa55d28bae",
                              "source_id": "your_own_source_id_20250115-006"
                            }
                          },
                          "created_at": "2025-01-15T14:00:44.934Z"
                        },
                        {
                          "id": "lopp_0ffd9661bd5207eb0a",
                          "voucher_id": "v_abCdEfghI1JKLMNPqRS2Tu3vWXyza4bc",
                          "campaign_id": "camp_AQZ1GLRlbGaC2dETd31VbJQ9",
                          "customer_id": "cust_IdgAFZxYwwHctOk9ppZMu319",
                          "order_id": "ord_0ffc4ccac0d5d28b7a",
                          "points": 1,
                          "activates_at": "2025-01-16",
                          "details": {
                            "holder_loyalty_tier": {
                              "id": "ltr_0e30613ad01f044515",
                              "name": "Silver Tier"
                            },
                            "event": {
                              "id": "evcus_0ffc4ccac5d5d28b84",
                              "type": "customer.order.paid",
                              "group_id": "v-0ffc4ccaafdd50214b",
                              "entity_id": "cust_IdgAFZxYwwHctOk9ppZMu319",
                              "created_at": "2025-01-15T14:00:02.038Z",
                              "category": "EFFECT",
                              "event_source": {
                                "channel": "API",
                                "api_key": {
                                  "name": "Primary",
                                  "app_id": "34fdc483-066d-478b-a707-be2c7a3d3698"
                                }
                              }
                            },
                            "earning_rule": {
                              "id": "ern_FQxftbKUq9E93k00Z3qkC0sX",
                              "source": {
                                "banner": "Order-paid"
                              }
                            },
                            "order": {
                              "id": "ord_0ffc4ccac0d5d28b7a",
                              "source_id": "your_own_source_id_20250115-005"
                            }
                          },
                          "created_at": "2025-01-15T14:00:02.586Z"
                        }
                      ],
                      "has_more": true,
                      "more_starting_after": "lopp_0ffd9661bd5207eb0a"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/loyalties/members/{memberId}/pending-points/{pendingPointsId}/activate": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterMemberId"
          },
          "name": "memberId",
          "in": "path",
          "required": true,
          "description": "Unique loyalty card code assigned to a particular customer."
        },
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterString"
          },
          "name": "pendingPointsId",
          "in": "path",
          "required": true,
          "description": "Unique pending point identifier, assigned by Voucherify."
        }
      ],
      "post": {
        "operationId": "activate-member-pending-points",
        "tags": [
          "Loyalties"
        ],
        "summary": "Activate Member Pending Points",
        "description": "Activate manually the pending points and add them to the loyalty card. The pending points are determined by the pending point ID.\nOnce activated, the pending point entry with that ID is not listed by the endpoints: List member (with campaign ID, without campaign ID), List campaign pending points.\nThis **POST** method does not require a request body.\n👍 Configuring pending points\nPending points are configured as part of an earning rule with POST Create earning rule or PUT Update earning rule.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns details about the activated pending points, the current point balance, and loyalty card in general.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoyaltiesMembersPendingPointsActivateResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "points": 1,
                      "total": 11,
                      "balance": 10,
                      "type": "loyalty_card",
                      "object": "balance",
                      "related_object": {
                        "type": "voucher",
                        "id": "v_abCdEfghI1JKLMNPqRS2Tu3vWXyza4bc"
                      },
                      "operation_type": "MANUAL"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/loyalties/members/{memberId}/pending-points/{pendingPointsId}/balance": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterMemberId"
          },
          "name": "memberId",
          "in": "path",
          "required": true,
          "description": "Unique loyalty card code assigned to a particular customer."
        },
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterString"
          },
          "name": "pendingPointsId",
          "in": "path",
          "required": true,
          "description": "Unique pending point identifier, assigned by Voucherify."
        }
      ],
      "post": {
        "operationId": "adjust-member-pending-points",
        "tags": [
          "Loyalties"
        ],
        "summary": "Adjust Member Pending Points",
        "description": "Adjusts the pending points with a given ID. You can add or subtract the number of points.\n👍 Configuring pending points\nPending points are configured as part of an earning rule with POST Create earning rule or PUT Update earning rule.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "requestBody": {
          "description": "Define the number of pending points to be added or subtracted.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoyaltiesMembersPendingPointsBalanceRequestBody"
              },
              "examples": {
                "Add pending points": {
                  "value": {
                    "points": 10
                  }
                },
                "Subtract pending points": {
                  "value": {
                    "points": -10
                  }
                }
              }
            }
          }
        },
        "responses": {
          "2XX": {
            "description": "Returns the details about the balance adjustment of the pending points with a given ID for a loyalty card.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoyaltiesMembersPendingPointsBalanceResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "points": 5,
                      "total": 16,
                      "object": "balance",
                      "related_object": {
                        "type": "voucher",
                        "id": "v_abCdEfghI1JKLMNPqRS2Tu3vWXyza4bc"
                      },
                      "operation_type": "MANUAL"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/loyalties/members/{memberId}/pending-points/{pendingPointsId}/cancel": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterMemberId"
          },
          "name": "memberId",
          "in": "path",
          "required": true,
          "description": "Unique loyalty card code assigned to a particular customer."
        },
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterString"
          },
          "name": "pendingPointsId",
          "in": "path",
          "required": true,
          "description": "Unique pending point identifier, assigned by Voucherify."
        }
      ],
      "post": {
        "operationId": "cancel-member-pending-points",
        "tags": [
          "Loyalties"
        ],
        "summary": "Cancel Member Pending Points",
        "description": "Cancel manually the pending points for the loyalty card. The pending points are determined by the pending point ID.\nOnce canceled, the pending point entry with that ID is not listed by the endpoints: List member (with campaign ID, without campaign ID), List campaign pending points.\nThis **POST** method does not require a request body and it returns an empty, 204, response.\n👍 Configuring pending points\nPending points are configured as part of an earning rule with POST Create earning rule or PUT Update earning rule.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns no content if the pending points are canceled successfully."
          }
        }
      }
    },
    "/v1/loyalties/{campaignId}/members/{memberId}/activity": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterCampaignId"
          },
          "name": "campaignId",
          "in": "path",
          "required": true,
          "description": "Unique campaign ID."
        },
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterMemberId"
          },
          "name": "memberId",
          "in": "path",
          "required": true,
          "description": "A code that identifies the loyalty card."
        }
      ],
      "get": {
        "operationId": "list-member-activity-1",
        "tags": [
          "Loyalties"
        ],
        "summary": "List Member Activity",
        "description": "Retrieves the list of activities for the given member ID related to a voucher and customer who is the holder of the voucher.",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterOrderCreatedAt"
            },
            "in": "query",
            "name": "order",
            "description": "Apply this filter to order the events according the date and time when it was created. The dash - preceding a sorting option means sorting in a descending order."
          },
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterString"
            },
            "in": "query",
            "name": "starting_after_id",
            "description": "A cursor for pagination. It retrieves the events starting after an event with the given ID."
          }
        ],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns a list of event objects related to the loyalty card.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoyaltiesMemberActivityListResponseBody"
                }
              }
            }
          }
        }
      }
    },
    "/v1/loyalties/members/{memberId}/activity": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterMemberId"
          },
          "name": "memberId",
          "in": "path",
          "required": true,
          "description": "Unique loyalty card assigned to a particular customer."
        }
      ],
      "get": {
        "operationId": "list-member-activity",
        "tags": [
          "Loyalties"
        ],
        "summary": "List Member Activity",
        "description": "\n 📘 Alternative endpoint\n This endpoint is an alternative to this endpoint. The URL was re-designed to allow you to get member activities without having to provide the campaignId as a path parameter.\nRetrieves the list of activities for the given member ID related to a voucher and customer who is the holder of the voucher.",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterOrderCreatedAt"
            },
            "in": "query",
            "name": "order",
            "description": "Apply this filter to order the events according the date and time when it was created. The dash - preceding a sorting option means sorting in a descending order."
          },
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterString"
            },
            "in": "query",
            "name": "starting_after_id",
            "description": "A cursor for pagination. It retrieves the events starting after an event with the given ID."
          }
        ],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns a list of event objects related to the loyalty card.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoyaltiesMemberActivityListResponseBody"
                }
              }
            }
          }
        }
      }
    },
    "/v1/loyalties/{campaignId}/members/{memberId}/balance": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterCampaignId"
          },
          "name": "campaignId",
          "in": "path",
          "required": true,
          "description": "Unique campaign ID."
        },
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterMemberId"
          },
          "name": "memberId",
          "in": "path",
          "required": true,
          "description": "A code that identifies the loyalty card."
        }
      ],
      "post": {
        "operationId": "update-loyalty-card-balance-1",
        "tags": [
          "Loyalties"
        ],
        "summary": "Adjust Loyalty Card Balance",
        "description": "This method adds or removes balance to an existing loyalty card that is assigned to a holder. The removal of points will consume the points that expire the soonest. \n >🚧 Async Action\n \n This is an async action. If you want to perform several add or remove loyalty card balance actions in a short time and their order matters, set up sufficient time-out between the calls.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "requestBody": {
          "description": "Specify the point adjustment along with the expiration mechanism.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoyaltiesMembersBalanceUpdateRequestBody"
              },
              "examples": {
                "Add points": {
                  "value": {
                    "points": 100,
                    "expiration_type": "CUSTOM_DATE",
                    "expiration_date": "2023-05-30"
                  }
                },
                "Deduct points": {
                  "value": {
                    "points": -100
                  }
                }
              }
            }
          }
        },
        "responses": {
          "2XX": {
            "description": "Returns a balance object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoyaltiesMembersBalanceUpdateResponseBody"
                },
                "examples": {
                  "Add balance": {
                    "value": {
                      "points": -100,
                      "total": 13436,
                      "balance": 13136,
                      "type": "loyalty_card",
                      "object": "balance",
                      "related_object": {
                        "type": "voucher",
                        "id": "v_0aMj6Mdp0i3zuXrd9NnBKboc7746mlgF"
                      }
                    }
                  },
                  "Deduct balance": {
                    "value": {
                      "points": -100,
                      "total": 13436,
                      "balance": 13136,
                      "type": "loyalty_card",
                      "object": "balance",
                      "related_object": {
                        "type": "voucher",
                        "id": "v_0aMj6Mdp0i3zuXrd9NnBKboc7746mlgF"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/loyalties/members/{memberId}/balance": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterMemberId"
          },
          "name": "memberId",
          "in": "path",
          "required": true,
          "description": "Unique loyalty card assigned to a particular customer."
        }
      ],
      "post": {
        "operationId": "update-loyalty-card-balance",
        "tags": [
          "Loyalties"
        ],
        "summary": "Adjust Loyalty Card Balance",
        "description": "This method gives adds or removes balance to an existing loyalty card that is assigned to a holder. The removal of points will consume the points that expire the soonest. \n >🚧 Async Action\n \n This is an async action. If you want to perform several add or remove loyalty card balance actions in a short time and their order matters, set up sufficient time-out between the calls.\n 📘 Alternative endpoint\n This endpoint is an alternative to this endpoint. The URL was re-designed to allow you to add or remove loyalty card balance without having to provide the campaignId as a path parameter.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "requestBody": {
          "description": "Specify the point adjustment along with the expiration mechanism.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoyaltiesMembersBalanceUpdateRequestBody"
              },
              "examples": {
                "Subtract points": {
                  "value": {
                    "points": -100
                  }
                },
                "Add Points": {
                  "value": {
                    "points": 100,
                    "expiration_type": "CUSTOM_DATE",
                    "expiration_date": "2023-05-30"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "2XX": {
            "description": "Returns a balance object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoyaltiesMembersBalanceUpdateResponseBody"
                },
                "examples": {
                  "Subtract Points": {
                    "value": {
                      "points": 100,
                      "total": 13436,
                      "balance": 13136,
                      "type": "loyalty_card",
                      "object": "balance",
                      "related_object": {
                        "type": "voucher",
                        "id": "v_0aMj6Mdp0i3zuXrd9NnBKboc7746mlgF"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/loyalties/{campaignId}/members/{memberId}/transfers": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterCampaignId"
          },
          "name": "campaignId",
          "in": "path",
          "required": true,
          "description": "A unique identifier of the loyalty campaign containing the voucher to which the loyalty points will be sent (destination)."
        },
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterMemberId"
          },
          "name": "memberId",
          "in": "path",
          "required": true,
          "description": "A unique code identifying the loyalty card to which the user wants to transfer loyalty points (destination)."
        }
      ],
      "post": {
        "operationId": "transfer-points",
        "tags": [
          "Loyalties"
        ],
        "summary": "Transfer Loyalty Points",
        "description": "Transfer points between different loyalty cards which have holders. You need to provide the campaign ID and the loyalty card ID you want the points to be transferred to as path parameters in the URL. In the request body, you provide the loyalty cards you want the points to be transferred from and the number of points to transfer from each card.\nTransfer works only for loyalty cards that have holders, meaning they were published to customers.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "requestBody": {
          "description": "Provide the loyalty cards you want the points to be transferred from and the number of points to transfer from each card.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoyaltiesMembersTransfersCreateRequestBody"
              },
              "examples": {
                "Example": {
                  "value": [
                    {
                      "code": "0PmQ7JQI",
                      "points": 1
                    },
                    {
                      "code": "kCeufB8i",
                      "points": 1
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "2XX": {
            "description": "Returns a loyalty card object for the loaded loyalty card, ie. the one that that points were transferred to from the other cards(s).",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoyaltiesMembersTransfersCreateResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "id": "v_0aMj6Mdp0i3zuXrd9NnBKboc7746mlgF",
                      "code": "MmFAzfDe",
                      "campaign": "Proportional Earning Rules",
                      "campaign_id": "camp_7s3uXI44aKfIk5IhmeOPr6ic",
                      "category": null,
                      "category_id": "cat_0b6152ce12414820de",
                      "categories": [],
                      "type": "LOYALTY_CARD",
                      "discount": null,
                      "gift": null,
                      "loyalty_card": {
                        "points": 13441,
                        "balance": 13141,
                        "next_expiration_date": "2022-11-30",
                        "next_expiration_points": 0
                      },
                      "start_date": null,
                      "expiration_date": null,
                      "validity_timeframe": null,
                      "validity_day_of_week": null,
                      "active": true,
                      "additional_info": null,
                      "metadata": {},
                      "assets": {
                        "qr": {
                          "id": "U2FsdGVkX184kVdWUO/msrLg1G0MRf/Cs6QwSN3f6kyWCOTGdijyq8OfUbUpcGx6fjdeIpTf2UilFGNG8aCWVk/dXm/QEJ/sulXKDlUMWf+MN7TRG5LB+wuzqTy7csDBfRoJn0fURpwU4A6VZZSwBQ==",
                          "url": "{{internalVoucherifyURL}}"
                        },
                        "barcode": {
                          "id": "U2FsdGVkX1/RGZN9VwvkdI6B26PPZQZWjh33USr5NPMXbHuJVkxsH6TUyW/cXen1Lc7gaqik09BGiry0R4QIAP52jnxQuABOsW0HdYfglsLPY7IajGX5rJzZKDKuzioq2vRIPyuE6z03frAod7ptvQ==",
                          "url": "{{internalVoucherifyURL}}"
                        }
                      },
                      "is_referral_code": false,
                      "created_at": "2022-02-18T14:03:59.954Z",
                      "updated_at": "2022-11-28T17:58:25.607Z",
                      "holder_id": "cust_sehkNIi8Uq2qQuRqSr7xn4Zi",
                      "redemption": {
                        "quantity": null,
                        "redeemed_quantity": 1,
                        "redeemed_points": 300,
                        "object": "list",
                        "url": "/v1/vouchers/MmFAzfDe/redemptions?page=1&limit=10"
                      },
                      "publish": {
                        "object": "list",
                        "count": 1,
                        "url": "/v1/vouchers/MmFAzfDe/publications?page=1&limit=10"
                      },
                      "object": "voucher"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/loyalties/{campaignId}/transactions": {
      "parameters": [
        {
          "in": "path",
          "name": "campaignId",
          "description": "You can either pass the campaign ID, which was assigned by Voucherify, or the name of the campaign as the path parameter value.",
          "schema": {
            "$ref": "#/components/schemas/ParameterCampaignId"
          },
          "required": true
        }
      ],
      "get": {
        "operationId": "list-loyalty-campaign-transactions",
        "tags": [
          "Loyalties"
        ],
        "summary": "List Loyalty Campaign Transactions",
        "description": "Retrieves all transactions for the campaign with the given campaign ID or campaign name.",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterOrderListTransactions"
            },
            "in": "query",
            "name": "order",
            "description": "Sorts the results using one of the filtering options, where the dash - preceding a sorting option means sorting in a descending order."
          },
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterString"
            },
            "in": "query",
            "name": "starting_after_id",
            "description": "A cursor for pagination. It retrieves the transactions starting after a transaction with the given ID."
          },
          {
            "name": "filters",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ParametersFiltersListCampaignTransactions"
            },
            "description": "Filters for listing responses. The id filter denotes the unique transaction identifier.",
            "style": "deepObject",
            "explode": true
          }
        ],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns a dictionary with a `data` property that contains an array of transactions. The maximum number of transactions returned is determined by the `limit` query parameter. Each entry in the array is a separate transaction object. If more results are available, the `has_more` flag has value `true` and the value of the `more_starting_after` property can be used to retrieve another page of results.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoyaltiesTransactionsListResponseBody"
                },
                "examples": {
                  "Loyalty campaign transactions": {
                    "value": {
                      "object": "list",
                      "data_ref": "data",
                      "data": [
                        {
                          "id": "vtx_0f9159e2a055e41e16",
                          "source_id": null,
                          "voucher_id": "v_GNSRFoVlW2ny8uTOHhXRGvkwocR9jQ44",
                          "campaign_id": "camp_5Hn0NM3Uf77tC3IV3kX5un36",
                          "source": null,
                          "reason": null,
                          "type": "POINTS_REDEMPTION",
                          "details": {
                            "balance": {
                              "type": "loyalty_card",
                              "total": 283,
                              "object": "balance",
                              "points": -50,
                              "balance": 23,
                              "operation_type": "AUTOMATIC",
                              "related_object": {
                                "id": "v_GNSRFoVlW2ny8uTOHhXRGvkwocR9jQ44",
                                "type": "voucher"
                              }
                            },
                            "redemption": {
                              "id": "r_0f9159e29815e41e08"
                            },
                            "reward": {
                              "id": "rew_GCq9usMjLffVacs0mlyMmDZo",
                              "name": "Material"
                            }
                          },
                          "related_transaction_id": null,
                          "created_at": "2024-10-24T12:19:45.597Z"
                        },
                        {
                          "id": "vtx_0f9159e1a48b219c95",
                          "source_id": null,
                          "voucher_id": "v_GNSRFoVlW2ny8uTOHhXRGvkwocR9jQ44",
                          "campaign_id": "camp_5Hn0NM3Uf77tC3IV3kX5un36",
                          "source": "voucherify-web-ui",
                          "reason": "Apology addition",
                          "type": "POINTS_ADDITION",
                          "details": {
                            "balance": {
                              "type": "loyalty_card",
                              "total": 283,
                              "object": "balance",
                              "points": 50,
                              "balance": 73,
                              "operation_type": "MANUAL",
                              "related_object": {
                                "id": "v_GNSRFoVlW2ny8uTOHhXRGvkwocR9jQ44",
                                "type": "voucher"
                              }
                            }
                          },
                          "related_transaction_id": null,
                          "created_at": "2024-10-24T12:19:44.902Z"
                        }
                      ],
                      "has_more": true,
                      "more_starting_after": "vtx_0f9159e1a48b219c95"
                    }
                  },
                  "Other campaign types - empty data": {
                    "value": {
                      "object": "list",
                      "data_ref": "data",
                      "data": [],
                      "total": 0
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/loyalties/{campaignId}/transactions/export": {
      "parameters": [
        {
          "in": "path",
          "name": "campaignId",
          "description": "You can either pass the campaign ID, which was assigned by Voucherify, or the name of the campaign as the path parameter value.",
          "schema": {
            "$ref": "#/components/schemas/ParameterCampaignId"
          },
          "required": true
        }
      ],
      "post": {
        "operationId": "export-loyalty-campaign-transactions",
        "tags": [
          "Loyalties"
        ],
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "summary": "Export Loyalty Campaign Transactions",
        "description": "Export transactions is an asynchronous process that generates a CSV file with the data about or point movements on all loyalty cards in a given campaign.\nTo export transactions:\n1. In the export request, use parameters to select which fields will be exported, in what order, and which data will be filtered.\n2. Use the returned id to track the export status with the GET Export method.\n3. In the GET Export method, when the returned status field has the DONE value, the export file has been generated.\n4. Use the URL in the result property to download the file. You must be logged to your Voucherify account on a given cluster in the browser to be able to download the file.\nAn export request will almost always result in a single file being generated by the system. However, when the data volume is large, the system may split the results into multiple files.\nAn example export file can look as follows:\n\n\n 👍 Export Campaign Transactions\n This method works in the same way the POST Export Campaign Transactions does, but it is limited to loyalty campaigns only. The POST Export Campaign Transactions method can also export gift card campaign transactions.",
        "requestBody": {
          "description": "Specify the parameters for the transaction export.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoyaltiesTransactionsExportCreateRequestBody"
              },
              "examples": {
                "Example": {
                  "value": {
                    "order": "-created_at",
                    "parameters": {
                      "fields": [
                        "id",
                        "type",
                        "source_id",
                        "created_at"
                      ],
                      "filters": {
                        "created_at": {
                          "conditions": {
                            "$after": [
                              "2024-10-01T00:00:00.000Z"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "2XX": {
            "description": "An object representing an export.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignsTransactionsExportCreateResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "id": "exp_KBunyG5vwkuF3jSWD03kmnLx",
                      "object": "export",
                      "created_at": "2024-10-25T14:35:12.019Z",
                      "status": "SCHEDULED",
                      "channel": "API",
                      "exported_object": "voucher_transactions",
                      "parameters": {
                        "fields": [
                          "id",
                          "type",
                          "source_id",
                          "created_at"
                        ],
                        "filters": {
                          "junction": "AND",
                          "created_at": {
                            "conditions": {
                              "$after": [
                                "2024-10-01T00:00:00.000Z"
                              ]
                            }
                          },
                          "campaign_id": {
                            "conditions": {
                              "$in": [
                                "camp_5pgKwSKsAeQtFkRz6mfKpxxD"
                              ]
                            }
                          }
                        }
                      },
                      "result": null,
                      "user_id": null
                    }
                  },
                  "No request body": {
                    "value": {
                      "id": "exp_FE04bvkl4J5GQCb99Q5o7Gxa",
                      "object": "export",
                      "created_at": "2024-10-25T15:15:11.698Z",
                      "status": "SCHEDULED",
                      "channel": "API",
                      "exported_object": "voucher_transactions",
                      "parameters": {
                        "filters": {
                          "campaign_id": {
                            "conditions": {
                              "$in": [
                                "camp_5pgKwSKsAeQtFkRz6mfKpxxD"
                              ]
                            }
                          }
                        }
                      },
                      "result": null,
                      "user_id": null
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/loyalties/{campaignId}/members/{memberId}/transactions": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterCampaignId"
          },
          "name": "campaignId",
          "in": "path",
          "required": true,
          "description": "A unique identifier of the loyalty campaign containing the voucher whose transactions you would like to return."
        },
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterMemberId"
          },
          "name": "memberId",
          "in": "path",
          "required": true,
          "description": "A unique code identifying the loyalty card that you are looking to retrieve transaction data for."
        }
      ],
      "get": {
        "operationId": "list-loyalty-card-transactions-1",
        "tags": [
          "Loyalties"
        ],
        "summary": "List Loyalty Card Transactions",
        "description": "Retrieve transaction data related to point movements for a specific loyalty card.",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterOrderListTransactions"
            },
            "in": "query",
            "name": "order",
            "description": "Sorts the results using one of the filtering options, where the dash - preceding a sorting option means sorting in a descending order."
          },
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterString"
            },
            "in": "query",
            "name": "starting_after_id",
            "description": "A cursor for pagination. It retrieves the transactions starting after a transaction with the given ID."
          }
        ],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns a dictionary of loyalty card transaction objects.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoyaltiesMembersTransactionsListResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "object": "list",
                      "data_ref": "data",
                      "data": [
                        {
                          "id": "vtx_0c9dd3c2e392f78613",
                          "source_id": "20230317_transfer_1",
                          "voucher_id": "v_lWRrcwNm0vqxBaU5nsSMzRRHusCsS4Vl",
                          "campaign_id": "camp_LyAZf94hbZaUbSdKIeAJpjRp",
                          "source": "API",
                          "reason": "Transferring points to card",
                          "type": "POINTS_TRANSFER_OUT",
                          "details": {
                            "balance": {
                              "type": "loyalty_card",
                              "total": 1396,
                              "object": "balance",
                              "points": -1,
                              "balance": 1396,
                              "related_object": {
                                "id": "v_lWRrcwNm0vqxBaU5nsSMzRRHusCsS4Vl",
                                "type": "voucher"
                              }
                            },
                            "destination_voucher": {
                              "id": "v_Wak6xlf5WdR4rIcvJxC2olOopk0boK6t",
                              "code": "LOYALTY-CARD-A8XVurg",
                              "type": "LOYALTY_CARD",
                              "campaign": "Loyalty Campaign - Test Initial Points",
                              "campaign_id": "camp_LyAZf94hbZaUbSdKIeAJpjRp",
                              "loyalty_card": {
                                "points": 1102,
                                "balance": 1102,
                                "next_expiration_date": "2023-12-31",
                                "next_expiration_points": 102
                              },
                              "is_referral_code": false
                            }
                          },
                          "related_transaction_id": "vtx_0c9dd3c2e392f78614",
                          "created_at": "2023-03-17T16:20:33.807Z"
                        },
                        {
                          "id": "vtx_0c9dd2527696ba081b",
                          "source_id": "20230317_add_1",
                          "voucher_id": "v_lWRrcwNm0vqxBaU5nsSMzRRHusCsS4Vl",
                          "campaign_id": "camp_LyAZf94hbZaUbSdKIeAJpjRp",
                          "source": null,
                          "reason": "Adding points to card",
                          "type": "POINTS_ADDITION",
                          "details": {
                            "balance": {
                              "type": "loyalty_card",
                              "total": 1397,
                              "object": "balance",
                              "points": 100,
                              "balance": 1397,
                              "related_object": {
                                "id": "v_lWRrcwNm0vqxBaU5nsSMzRRHusCsS4Vl",
                                "type": "voucher"
                              }
                            }
                          },
                          "related_transaction_id": null,
                          "created_at": "2023-03-17T16:14:16.524Z"
                        },
                        {
                          "id": "vtx_0c9dd1ce1d403f4204",
                          "source_id": "20230317_subtract_1",
                          "voucher_id": "v_lWRrcwNm0vqxBaU5nsSMzRRHusCsS4Vl",
                          "campaign_id": "camp_LyAZf94hbZaUbSdKIeAJpjRp",
                          "source": null,
                          "reason": "Subtracting points from card",
                          "type": "POINTS_REMOVAL",
                          "details": {
                            "balance": {
                              "type": "loyalty_card",
                              "total": 1297,
                              "object": "balance",
                              "points": -1,
                              "balance": 1297,
                              "related_object": {
                                "id": "v_lWRrcwNm0vqxBaU5nsSMzRRHusCsS4Vl",
                                "type": "voucher"
                              }
                            }
                          },
                          "related_transaction_id": null,
                          "created_at": "2023-03-17T16:12:00.981Z"
                        },
                        {
                          "id": "vtx_0c9c21df658d03ce3f",
                          "source_id": null,
                          "voucher_id": "v_lWRrcwNm0vqxBaU5nsSMzRRHusCsS4Vl",
                          "campaign_id": "camp_LyAZf94hbZaUbSdKIeAJpjRp",
                          "source": "Automation",
                          "reason": null,
                          "type": "POINTS_ACCRUAL",
                          "details": {
                            "balance": {
                              "type": "loyalty_card",
                              "total": 1298,
                              "object": "balance",
                              "points": 200,
                              "balance": 1298,
                              "related_object": {
                                "id": "v_lWRrcwNm0vqxBaU5nsSMzRRHusCsS4Vl",
                                "type": "voucher"
                              }
                            },
                            "order": {
                              "id": "ord_QZEKPzYATFjGoos4DonMg0fd",
                              "source_id": "s"
                            },
                            "event": {
                              "id": "evcus_0c9c21def34e3c05bf",
                              "type": "customer.order.paid"
                            },
                            "earning_rule": {
                              "id": "ern_2WsCIBEx6Lzf5IAV5IOR7a23",
                              "source": {
                                "banner": "Order paid"
                              }
                            }
                          },
                          "related_transaction_id": null,
                          "created_at": "2023-03-16T08:44:52.333Z"
                        },
                        {
                          "id": "vtx_0c9b09673f8a862a51",
                          "source_id": null,
                          "voucher_id": "v_lWRrcwNm0vqxBaU5nsSMzRRHusCsS4Vl",
                          "campaign_id": "camp_LyAZf94hbZaUbSdKIeAJpjRp",
                          "source": null,
                          "reason": null,
                          "type": "POINTS_REFUND",
                          "details": {
                            "balance": {
                              "type": "loyalty_card",
                              "total": 1098,
                              "object": "balance",
                              "points": 1000,
                              "balance": 1098,
                              "related_object": {
                                "id": "v_lWRrcwNm0vqxBaU5nsSMzRRHusCsS4Vl",
                                "type": "voucher"
                              }
                            },
                            "order": {
                              "id": "ord_DH2gGDlDWB1hRImf1VVB4EIH",
                              "source_id": null
                            },
                            "redemption": {
                              "id": "r_0c9b08fe4b80897849"
                            },
                            "rollback": {
                              "id": "rr_0c9b0967244a862a33"
                            },
                            "reward": {
                              "id": "rew_INt3fGH3n7xIr3ZQcq4kkUZ1",
                              "name": "100 = $20"
                            }
                          },
                          "related_transaction_id": null,
                          "created_at": "2023-03-15T12:19:29.149Z"
                        },
                        {
                          "id": "vtx_0c9b08fe530089785c",
                          "source_id": null,
                          "voucher_id": "v_lWRrcwNm0vqxBaU5nsSMzRRHusCsS4Vl",
                          "campaign_id": "camp_LyAZf94hbZaUbSdKIeAJpjRp",
                          "source": null,
                          "reason": null,
                          "type": "POINTS_REDEMPTION",
                          "details": {
                            "balance": {
                              "type": "loyalty_card",
                              "total": 1098,
                              "object": "balance",
                              "points": -1000,
                              "balance": 98,
                              "related_object": {
                                "id": "v_lWRrcwNm0vqxBaU5nsSMzRRHusCsS4Vl",
                                "type": "voucher"
                              }
                            },
                            "order": {
                              "id": "ord_DH2gGDlDWB1hRImf1VVB4EIH",
                              "source_id": null
                            },
                            "redemption": {
                              "id": "r_0c9b08fe4b80897849"
                            },
                            "reward": {
                              "id": "rew_INt3fGH3n7xIr3ZQcq4kkUZ1",
                              "name": "100 = $20"
                            }
                          },
                          "related_transaction_id": null,
                          "created_at": "2023-03-15T12:17:41.708Z"
                        },
                        {
                          "id": "vtx_0c9b074afed3b30e4b",
                          "source_id": "20230309_add_points_1",
                          "voucher_id": "v_lWRrcwNm0vqxBaU5nsSMzRRHusCsS4Vl",
                          "campaign_id": "camp_LyAZf94hbZaUbSdKIeAJpjRp",
                          "source": "voucherify-web-ui",
                          "reason": "Customer purchased points at kiosk.",
                          "type": "POINTS_ADDITION",
                          "details": {
                            "balance": {
                              "type": "loyalty_card",
                              "total": 1098,
                              "object": "balance",
                              "points": 100,
                              "balance": 1098,
                              "related_object": {
                                "id": "v_lWRrcwNm0vqxBaU5nsSMzRRHusCsS4Vl",
                                "type": "voucher"
                              }
                            }
                          },
                          "related_transaction_id": null,
                          "created_at": "2023-03-15T12:10:15.917Z"
                        },
                        {
                          "id": "vtx_0c9b073072408969d1",
                          "source_id": "20230309_subtract_points_1",
                          "voucher_id": "v_lWRrcwNm0vqxBaU5nsSMzRRHusCsS4Vl",
                          "campaign_id": "camp_LyAZf94hbZaUbSdKIeAJpjRp",
                          "source": "voucherify-web-ui",
                          "reason": "Customer used points to obtain tickets.",
                          "type": "POINTS_REMOVAL",
                          "details": {
                            "balance": {
                              "type": "loyalty_card",
                              "total": 998,
                              "object": "balance",
                              "points": -1,
                              "balance": 998,
                              "related_object": {
                                "id": "v_lWRrcwNm0vqxBaU5nsSMzRRHusCsS4Vl",
                                "type": "voucher"
                              }
                            }
                          },
                          "related_transaction_id": null,
                          "created_at": "2023-03-15T12:09:48.735Z"
                        },
                        {
                          "id": "vtx_0c9afe802593b34b80",
                          "source_id": null,
                          "voucher_id": "v_lWRrcwNm0vqxBaU5nsSMzRRHusCsS4Vl",
                          "campaign_id": "camp_LyAZf94hbZaUbSdKIeAJpjRp",
                          "source": "API",
                          "reason": null,
                          "type": "POINTS_TRANSFER_OUT",
                          "details": {
                            "balance": {
                              "type": "loyalty_card",
                              "total": 999,
                              "object": "balance",
                              "points": -1,
                              "balance": 999,
                              "related_object": {
                                "id": "v_lWRrcwNm0vqxBaU5nsSMzRRHusCsS4Vl",
                                "type": "voucher"
                              }
                            },
                            "destination_voucher": {
                              "id": "v_Wak6xlf5WdR4rIcvJxC2olOopk0boK6t",
                              "code": "LOYALTY-CARD-A8XVurg",
                              "type": "LOYALTY_CARD",
                              "campaign": "Loyalty Campaign - Test Initial Points",
                              "campaign_id": "camp_LyAZf94hbZaUbSdKIeAJpjRp",
                              "loyalty_card": {
                                "points": 1001,
                                "balance": 1001,
                                "next_expiration_date": "2023-12-31",
                                "next_expiration_points": 1
                              },
                              "is_referral_code": false
                            }
                          },
                          "related_transaction_id": "vtx_0c9afe802593b34b81",
                          "created_at": "2023-03-15T11:31:51.062Z"
                        }
                      ],
                      "has_more": true,
                      "more_starting_after": "vtx_0c9afe802593b34b80"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/loyalties/members/{memberId}/transactions": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterMemberId"
          },
          "name": "memberId",
          "in": "path",
          "required": true,
          "description": "A unique code identifying the loyalty card that you are looking to retrieve transaction data for."
        }
      ],
      "get": {
        "operationId": "list-loyalty-card-transactions",
        "tags": [
          "Loyalties"
        ],
        "summary": "List Loyalty Card Transactions",
        "description": "Retrieve transaction data related to point movements for a specific loyalty card.",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterOrderListTransactions"
            },
            "in": "query",
            "name": "order",
            "description": "Sorts the results using one of the filtering options, where the dash - preceding a sorting option means sorting in a descending order."
          },
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterString"
            },
            "in": "query",
            "name": "starting_after_id",
            "description": "A cursor for pagination. It retrieves the transactions starting after a transaction with the given ID."
          }
        ],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns a dictionary of loyalty card transaction objects.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoyaltiesMembersTransactionsListResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "object": "list",
                      "data_ref": "data",
                      "data": [
                        {
                          "id": "vtx_0c9dd3c2e392f78613",
                          "source_id": "20230317_transfer_1",
                          "voucher_id": "v_lWRrcwNm0vqxBaU5nsSMzRRHusCsS4Vl",
                          "campaign_id": "camp_LyAZf94hbZaUbSdKIeAJpjRp",
                          "source": "API",
                          "reason": "Transferring points to card",
                          "type": "POINTS_TRANSFER_OUT",
                          "details": {
                            "balance": {
                              "type": "loyalty_card",
                              "total": 1396,
                              "object": "balance",
                              "points": -1,
                              "balance": 1396,
                              "related_object": {
                                "id": "v_lWRrcwNm0vqxBaU5nsSMzRRHusCsS4Vl",
                                "type": "voucher"
                              }
                            },
                            "destination_voucher": {
                              "id": "v_Wak6xlf5WdR4rIcvJxC2olOopk0boK6t",
                              "code": "LOYALTY-CARD-A8XVurg",
                              "type": "LOYALTY_CARD",
                              "campaign": "Loyalty Campaign - Test Initial Points",
                              "campaign_id": "camp_LyAZf94hbZaUbSdKIeAJpjRp",
                              "loyalty_card": {
                                "points": 1102,
                                "balance": 1102,
                                "next_expiration_date": "2023-12-31",
                                "next_expiration_points": 102
                              },
                              "is_referral_code": false
                            }
                          },
                          "related_transaction_id": "vtx_0c9dd3c2e392f78614",
                          "created_at": "2023-03-17T16:20:33.807Z"
                        },
                        {
                          "id": "vtx_0c9dd2527696ba081b",
                          "source_id": "20230317_add_1",
                          "voucher_id": "v_lWRrcwNm0vqxBaU5nsSMzRRHusCsS4Vl",
                          "campaign_id": "camp_LyAZf94hbZaUbSdKIeAJpjRp",
                          "source": null,
                          "reason": "Adding points to card",
                          "type": "POINTS_ADDITION",
                          "details": {
                            "balance": {
                              "type": "loyalty_card",
                              "total": 1397,
                              "object": "balance",
                              "points": 100,
                              "balance": 1397,
                              "related_object": {
                                "id": "v_lWRrcwNm0vqxBaU5nsSMzRRHusCsS4Vl",
                                "type": "voucher"
                              }
                            }
                          },
                          "related_transaction_id": null,
                          "created_at": "2023-03-17T16:14:16.524Z"
                        },
                        {
                          "id": "vtx_0c9dd1ce1d403f4204",
                          "source_id": "20230317_subtract_1",
                          "voucher_id": "v_lWRrcwNm0vqxBaU5nsSMzRRHusCsS4Vl",
                          "campaign_id": "camp_LyAZf94hbZaUbSdKIeAJpjRp",
                          "source": null,
                          "reason": "Subtracting points from card",
                          "type": "POINTS_REMOVAL",
                          "details": {
                            "balance": {
                              "type": "loyalty_card",
                              "total": 1297,
                              "object": "balance",
                              "points": -1,
                              "balance": 1297,
                              "related_object": {
                                "id": "v_lWRrcwNm0vqxBaU5nsSMzRRHusCsS4Vl",
                                "type": "voucher"
                              }
                            }
                          },
                          "related_transaction_id": null,
                          "created_at": "2023-03-17T16:12:00.981Z"
                        },
                        {
                          "id": "vtx_0c9c21df658d03ce3f",
                          "source_id": null,
                          "voucher_id": "v_lWRrcwNm0vqxBaU5nsSMzRRHusCsS4Vl",
                          "campaign_id": "camp_LyAZf94hbZaUbSdKIeAJpjRp",
                          "source": "Automation",
                          "reason": null,
                          "type": "POINTS_ACCRUAL",
                          "details": {
                            "balance": {
                              "type": "loyalty_card",
                              "total": 1298,
                              "object": "balance",
                              "points": 200,
                              "balance": 1298,
                              "related_object": {
                                "id": "v_lWRrcwNm0vqxBaU5nsSMzRRHusCsS4Vl",
                                "type": "voucher"
                              }
                            },
                            "order": {
                              "id": "ord_QZEKPzYATFjGoos4DonMg0fd",
                              "source_id": "s"
                            },
                            "event": {
                              "id": "evcus_0c9c21def34e3c05bf",
                              "type": "customer.order.paid"
                            },
                            "earning_rule": {
                              "id": "ern_2WsCIBEx6Lzf5IAV5IOR7a23",
                              "source": {
                                "banner": "Order paid"
                              }
                            }
                          },
                          "related_transaction_id": null,
                          "created_at": "2023-03-16T08:44:52.333Z"
                        },
                        {
                          "id": "vtx_0c9b09673f8a862a51",
                          "source_id": null,
                          "voucher_id": "v_lWRrcwNm0vqxBaU5nsSMzRRHusCsS4Vl",
                          "campaign_id": "camp_LyAZf94hbZaUbSdKIeAJpjRp",
                          "source": null,
                          "reason": null,
                          "type": "POINTS_REFUND",
                          "details": {
                            "balance": {
                              "type": "loyalty_card",
                              "total": 1098,
                              "object": "balance",
                              "points": 1000,
                              "balance": 1098,
                              "related_object": {
                                "id": "v_lWRrcwNm0vqxBaU5nsSMzRRHusCsS4Vl",
                                "type": "voucher"
                              }
                            },
                            "order": {
                              "id": "ord_DH2gGDlDWB1hRImf1VVB4EIH",
                              "source_id": null
                            },
                            "redemption": {
                              "id": "r_0c9b08fe4b80897849"
                            },
                            "rollback": {
                              "id": "rr_0c9b0967244a862a33"
                            },
                            "reward": {
                              "id": "rew_INt3fGH3n7xIr3ZQcq4kkUZ1",
                              "name": "100 = $20"
                            }
                          },
                          "related_transaction_id": null,
                          "created_at": "2023-03-15T12:19:29.149Z"
                        },
                        {
                          "id": "vtx_0c9b08fe530089785c",
                          "source_id": null,
                          "voucher_id": "v_lWRrcwNm0vqxBaU5nsSMzRRHusCsS4Vl",
                          "campaign_id": "camp_LyAZf94hbZaUbSdKIeAJpjRp",
                          "source": null,
                          "reason": null,
                          "type": "POINTS_REDEMPTION",
                          "details": {
                            "balance": {
                              "type": "loyalty_card",
                              "total": 1098,
                              "object": "balance",
                              "points": -1000,
                              "balance": 98,
                              "related_object": {
                                "id": "v_lWRrcwNm0vqxBaU5nsSMzRRHusCsS4Vl",
                                "type": "voucher"
                              }
                            },
                            "order": {
                              "id": "ord_DH2gGDlDWB1hRImf1VVB4EIH",
                              "source_id": null
                            },
                            "redemption": {
                              "id": "r_0c9b08fe4b80897849"
                            },
                            "reward": {
                              "id": "rew_INt3fGH3n7xIr3ZQcq4kkUZ1",
                              "name": "100 = $20"
                            }
                          },
                          "related_transaction_id": null,
                          "created_at": "2023-03-15T12:17:41.708Z"
                        },
                        {
                          "id": "vtx_0c9b074afed3b30e4b",
                          "source_id": "20230309_add_points_1",
                          "voucher_id": "v_lWRrcwNm0vqxBaU5nsSMzRRHusCsS4Vl",
                          "campaign_id": "camp_LyAZf94hbZaUbSdKIeAJpjRp",
                          "source": "voucherify-web-ui",
                          "reason": "Customer purchased points at kiosk.",
                          "type": "POINTS_ADDITION",
                          "details": {
                            "balance": {
                              "type": "loyalty_card",
                              "total": 1098,
                              "object": "balance",
                              "points": 100,
                              "balance": 1098,
                              "related_object": {
                                "id": "v_lWRrcwNm0vqxBaU5nsSMzRRHusCsS4Vl",
                                "type": "voucher"
                              }
                            }
                          },
                          "related_transaction_id": null,
                          "created_at": "2023-03-15T12:10:15.917Z"
                        },
                        {
                          "id": "vtx_0c9b073072408969d1",
                          "source_id": "20230309_subtract_points_1",
                          "voucher_id": "v_lWRrcwNm0vqxBaU5nsSMzRRHusCsS4Vl",
                          "campaign_id": "camp_LyAZf94hbZaUbSdKIeAJpjRp",
                          "source": "voucherify-web-ui",
                          "reason": "Customer used points to obtain tickets.",
                          "type": "POINTS_REMOVAL",
                          "details": {
                            "balance": {
                              "type": "loyalty_card",
                              "total": 998,
                              "object": "balance",
                              "points": -1,
                              "balance": 998,
                              "related_object": {
                                "id": "v_lWRrcwNm0vqxBaU5nsSMzRRHusCsS4Vl",
                                "type": "voucher"
                              }
                            }
                          },
                          "related_transaction_id": null,
                          "created_at": "2023-03-15T12:09:48.735Z"
                        },
                        {
                          "id": "vtx_0c9afe802593b34b80",
                          "source_id": null,
                          "voucher_id": "v_lWRrcwNm0vqxBaU5nsSMzRRHusCsS4Vl",
                          "campaign_id": "camp_LyAZf94hbZaUbSdKIeAJpjRp",
                          "source": "API",
                          "reason": null,
                          "type": "POINTS_TRANSFER_OUT",
                          "details": {
                            "balance": {
                              "type": "loyalty_card",
                              "total": 999,
                              "object": "balance",
                              "points": -1,
                              "balance": 999,
                              "related_object": {
                                "id": "v_lWRrcwNm0vqxBaU5nsSMzRRHusCsS4Vl",
                                "type": "voucher"
                              }
                            },
                            "destination_voucher": {
                              "id": "v_Wak6xlf5WdR4rIcvJxC2olOopk0boK6t",
                              "code": "LOYALTY-CARD-A8XVurg",
                              "type": "LOYALTY_CARD",
                              "campaign": "Loyalty Campaign - Test Initial Points",
                              "campaign_id": "camp_LyAZf94hbZaUbSdKIeAJpjRp",
                              "loyalty_card": {
                                "points": 1001,
                                "balance": 1001,
                                "next_expiration_date": "2023-12-31",
                                "next_expiration_points": 1
                              },
                              "is_referral_code": false
                            }
                          },
                          "related_transaction_id": "vtx_0c9afe802593b34b81",
                          "created_at": "2023-03-15T11:31:51.062Z"
                        }
                      ],
                      "has_more": true,
                      "more_starting_after": "vtx_0c9afe802593b34b80"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/loyalties/members/{memberId}/transactions/export": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterMemberId"
          },
          "name": "memberId",
          "in": "path",
          "required": true,
          "description": "A unique code identifying the loyalty card that you are looking to export transaction data for."
        }
      ],
      "post": {
        "operationId": "export-loyalty-card-transactions",
        "tags": [
          "Loyalties"
        ],
        "summary": "Export Loyalty Card Transactions",
        "description": "Export transactions that are associated with point movements on a loyalty card.\n\n\n",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "requestBody": {
          "description": "Specify the parameters and filters for the transaction export.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoyaltiesMembersTransactionsExportCreateRequestBody"
              },
              "examples": {
                "Example": {
                  "value": {
                    "parameters": {
                      "order": "-created_at",
                      "fields": [
                        "id",
                        "type",
                        "source_id",
                        "reason",
                        "balance",
                        "amount",
                        "created_at",
                        "voucher_id",
                        "campaign_id",
                        "details",
                        "related_transaction_id"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "2XX": {
            "description": "Returns an export object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoyaltiesMembersTransactionsExportCreateResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "id": "exp_8Fwd6Z8NS67ZH314KRtm5xXE",
                      "object": "export",
                      "created_at": "2023-03-21T13:50:43.286Z",
                      "status": "SCHEDULED",
                      "channel": "API",
                      "exported_object": "voucher_transactions",
                      "parameters": {
                        "order": "-created_at",
                        "fields": [
                          "id",
                          "type",
                          "source_id",
                          "reason",
                          "balance",
                          "amount",
                          "created_at",
                          "voucher_id",
                          "campaign_id",
                          "details",
                          "related_transaction_id"
                        ],
                        "filters": {
                          "voucher_id": {
                            "conditions": {
                              "$in": [
                                "LOYALTY-CARD-2IAoDNF"
                              ]
                            }
                          }
                        }
                      },
                      "result": null,
                      "user_id": null
                    }
                  },
                  "No request body": {
                    "value": {
                      "id": "exp_ExEE5A6OIK4tssuNswr5O6SU",
                      "object": "export",
                      "created_at": "2023-03-21T13:34:57.034Z",
                      "status": "SCHEDULED",
                      "channel": "API",
                      "exported_object": "voucher_transactions",
                      "parameters": {
                        "filters": {
                          "voucher_id": {
                            "conditions": {
                              "$in": [
                                "HRwc0oHz"
                              ]
                            }
                          }
                        }
                      },
                      "result": null,
                      "user_id": null
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/loyalties/{campaignId}/members/{memberId}/transactions/export": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterCampaignId"
          },
          "name": "campaignId",
          "in": "path",
          "required": true,
          "description": "A unique identifier of the loyalty campaign containing the voucher whose transactions you would like to export."
        },
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterMemberId"
          },
          "name": "memberId",
          "in": "path",
          "required": true,
          "description": "A unique code identifying the loyalty card that you are looking to export transaction data for."
        }
      ],
      "post": {
        "operationId": "export-loyalty-card-transactions-1",
        "tags": [
          "Loyalties"
        ],
        "summary": "Export Loyalty Card Transactions",
        "description": "Export transactions that are associated with point movements on a loyalty card.\n\n\n",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "requestBody": {
          "description": "Specify the parameters and filters for the transaction export.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoyaltiesMembersTransactionsExportCreateRequestBody"
              },
              "examples": {
                "Example": {
                  "value": {
                    "parameters": {
                      "order": "-created_at",
                      "fields": [
                        "id",
                        "type",
                        "source_id",
                        "reason",
                        "balance",
                        "amount",
                        "created_at",
                        "voucher_id",
                        "campaign_id",
                        "details",
                        "related_transaction_id"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "2XX": {
            "description": "Returns an export object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoyaltiesMembersTransactionsExportCreateResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "id": "exp_8Fwd6Z8NS67ZH314KRtm5xXE",
                      "object": "export",
                      "created_at": "2023-03-21T13:50:43.286Z",
                      "status": "SCHEDULED",
                      "channel": "API",
                      "exported_object": "voucher_transactions",
                      "parameters": {
                        "order": "-created_at",
                        "fields": [
                          "id",
                          "type",
                          "source_id",
                          "reason",
                          "balance",
                          "amount",
                          "created_at",
                          "voucher_id",
                          "campaign_id",
                          "details",
                          "related_transaction_id"
                        ],
                        "filters": {
                          "voucher_id": {
                            "conditions": {
                              "$in": [
                                "LOYALTY-CARD-2IAoDNF"
                              ]
                            }
                          }
                        }
                      },
                      "result": null,
                      "user_id": null
                    }
                  },
                  "No request body": {
                    "value": {
                      "id": "exp_ExEE5A6OIK4tssuNswr5O6SU",
                      "object": "export",
                      "created_at": "2023-03-21T13:34:57.034Z",
                      "status": "SCHEDULED",
                      "channel": "API",
                      "exported_object": "voucher_transactions",
                      "parameters": {
                        "filters": {
                          "voucher_id": {
                            "conditions": {
                              "$in": [
                                "HRwc0oHz"
                              ]
                            }
                          }
                        }
                      },
                      "result": null,
                      "user_id": null
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/loyalties/{campaignId}/members/{memberId}/points-expiration": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterCampaignId"
          },
          "name": "campaignId",
          "in": "path",
          "required": true,
          "description": "The campaign ID or name of the loyalty campaign. You can either pass the campaign ID, which was assigned by Voucherify, or the name of the campaign as the path parameter value, e.g., Loyalty%20Campaign. "
        },
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterMemberId"
          },
          "name": "memberId",
          "in": "path",
          "required": true,
          "description": "Loyalty card code."
        }
      ],
      "get": {
        "operationId": "list-points-expiration",
        "tags": [
          "Loyalties"
        ],
        "summary": "List Loyalty Card Point Expiration",
        "description": "Retrieve loyalty point expiration buckets for a given loyalty card. Expired point buckets are not returned in this endpoint. You can use the Exports API to retrieve a list of both ACTIVE and EXPIRED point buckets.",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/page"
          }
        ],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns a list of loyalty points expiration buckets along with an expiration date if the points are due to expire. No expiration date parameter is returned if the loyalty points bucket does not expire.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoyaltiesMembersPointsExpirationListResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "object": "list",
                      "data_ref": "data",
                      "data": [
                        {
                          "id": "lopb_ERSwDxeWTlvWwFrn3AtJxt3s",
                          "voucher_id": "v_0aMj6Mdp0i3zuXrd9NnBKboc7746mlgF",
                          "campaign_id": "camp_7s3uXI44aKfIk5IhmeOPr6ic",
                          "bucket": {
                            "total_points": 2
                          },
                          "status": "ACTIVE",
                          "expires_at": "2022-11-25",
                          "created_at": "2022-11-25T09:10:20.994Z",
                          "object": "loyalty_points_bucket"
                        },
                        {
                          "id": "lopb_zdeIBq3EsnPnRSDa7Tyyb6X2",
                          "voucher_id": "v_0aMj6Mdp0i3zuXrd9NnBKboc7746mlgF",
                          "campaign_id": "camp_7s3uXI44aKfIk5IhmeOPr6ic",
                          "bucket": {
                            "total_points": 12
                          },
                          "status": "ACTIVE",
                          "expires_at": "2022-11-30",
                          "created_at": "2022-11-21T13:49:54.949Z",
                          "object": "loyalty_points_bucket"
                        },
                        {
                          "id": "lopb_Mg80vhZtqHFItWlJFYZ2rJAS",
                          "voucher_id": "v_0aMj6Mdp0i3zuXrd9NnBKboc7746mlgF",
                          "campaign_id": "camp_7s3uXI44aKfIk5IhmeOPr6ic",
                          "bucket": {
                            "total_points": 0
                          },
                          "status": "ACTIVE",
                          "expires_at": "2023-05-30",
                          "created_at": "2022-06-09T11:07:07.344Z",
                          "updated_at": "2022-08-30T08:34:45.989Z",
                          "object": "loyalty_points_bucket"
                        },
                        {
                          "id": "lopb_dQE1TwyTkHAJDlVCPlqSC0nu",
                          "voucher_id": "v_0aMj6Mdp0i3zuXrd9NnBKboc7746mlgF",
                          "campaign_id": "camp_7s3uXI44aKfIk5IhmeOPr6ic",
                          "bucket": {
                            "total_points": 13124
                          },
                          "status": "ACTIVE",
                          "created_at": "2022-02-28T12:13:57.749Z",
                          "updated_at": "2022-11-25T09:09:51.136Z",
                          "object": "loyalty_points_bucket"
                        }
                      ],
                      "total": 4
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/loyalties/{campaignId}/points-expiration/export": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterCampaignId"
          },
          "name": "campaignId",
          "in": "path",
          "required": true,
          "description": "Unique campaign ID or name."
        }
      ],
      "post": {
        "operationId": "create-points-expiration-export",
        "tags": [
          "Loyalties"
        ],
        "summary": "Export Loyalty Campaign Point Expiration",
        "description": "Schedule the generation of a point expiration CSV file for a particular campaign. It can list point buckets, which can have an ACTIVE or EXPIRED status.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "requestBody": {
          "description": "Specify the data filters, types of data to return and order in which the results should be returned.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoyaltiesPointsExpirationExportCreateRequestBody"
              },
              "examples": {
                "Specific Vouchers": {
                  "value": {
                    "parameters": {
                      "fields": [
                        "id",
                        "campaign_id",
                        "voucher_id",
                        "status",
                        "expires_at",
                        "points"
                      ],
                      "order": "-expires_at",
                      "filters": {
                        "junction": "and",
                        "voucher_id": {
                          "conditions": {
                            "$in": [
                              "v_0aMj6Mdp0i3zuXrd9NnBKboc7746mlgF",
                              "v_YLn0WVWXSXbUfDvxgrgUbtfJ3SQIY655"
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "Specific campaign": {
                  "value": {
                    "parameters": {
                      "fields": [
                        "id",
                        "campaign_id",
                        "voucher_id",
                        "status",
                        "expires_at",
                        "points"
                      ],
                      "order": "-expires_at",
                      "filters": {
                        "junction": "and",
                        "campaign_id": {
                          "conditions": {
                            "$is": "camp_7s3uXI44aKfIk5IhmeOPr6ic"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "2XX": {
            "description": "Returns an object with the export ID of the scheduled generation of CSV file with exported points expirations. You can use either the <!-- [Get Export](OpenAPI.json/paths/~1exports~1{exportId}/get) -->[Get Export](ref:get-export) endpoint to view the status and obtain the URL of the CSV file or <!-- [Download Export](OpenAPI.json/paths/~1exports~1{export_Id}/get) -->[Download Export](ref:download-export) endpoint to download the CSV file.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoyaltiesPointsExpirationExportCreateResponseBody"
                },
                "examples": {
                  "Specific Vouchers": {
                    "value": {
                      "id": "exp_zC3eXAFss17XTMzMkkov4KGq",
                      "object": "export",
                      "created_at": "2022-11-28T13:00:23.621Z",
                      "status": "SCHEDULED",
                      "channel": "API",
                      "exported_object": "points_expiration",
                      "parameters": {
                        "order": "-expires_at",
                        "fields": [
                          "id",
                          "campaign_id",
                          "voucher_id",
                          "status",
                          "expires_at",
                          "points"
                        ],
                        "filters": {
                          "junction": "and",
                          "voucher_id": {
                            "conditions": {
                              "$in": [
                                "v_0aMj6Mdp0i3zuXrd9NnBKboc7746mlgF",
                                "v_YLn0WVWXSXbUfDvxgrgUbtfJ3SQIY655"
                              ]
                            }
                          }
                        }
                      },
                      "result": null,
                      "user_id": null
                    }
                  },
                  "Specific Campaign": {
                    "value": {
                      "id": "exp_kfwVDMsavDHl2vOY6vH9q7P7",
                      "object": "export",
                      "created_at": "2022-11-28T16:46:34.148Z",
                      "status": "SCHEDULED",
                      "channel": "API",
                      "exported_object": "points_expiration",
                      "parameters": {
                        "order": "-expires_at",
                        "fields": [
                          "id",
                          "campaign_id",
                          "voucher_id",
                          "status",
                          "expires_at",
                          "points"
                        ],
                        "filters": {
                          "junction": "and",
                          "campaign_id": {
                            "conditions": {
                              "$is": "camp_7s3uXI44aKfIk5IhmeOPr6ic"
                            }
                          }
                        }
                      },
                      "result": null,
                      "user_id": null
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/loyalties/{campaignId}/earning-rules": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterCampaignId"
          },
          "name": "campaignId",
          "in": "path",
          "required": true,
          "description": "The campaign ID or name of the loyalty campaign. You can either pass the campaign ID, which was assigned by Voucherify, or the name of the campaign as the path parameter value, e.g., Loyalty%20Campaign. "
        }
      ],
      "get": {
        "operationId": "list-earning-rules",
        "tags": [
          "Loyalties"
        ],
        "summary": "List Earning Rules",
        "description": "Returns a list of all earning rules within a given campaign.",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterOrderListEarningRules"
            },
            "in": "query",
            "name": "order",
            "description": "Sorts the results using one of the filtering options, where the dash - preceding a sorting option means sorting in a descending order."
          }
        ],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns a list of earning rules.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoyaltiesEarningRulesListResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "object": "list",
                      "data_ref": "data",
                      "data": [
                        {
                          "id": "ern_HnRXyJHoj3E79r3KUWhgMgtD",
                          "created_at": "2022-11-10T12:25:12.927Z",
                          "updated_at": null,
                          "validation_rule_id": null,
                          "loyalty": {
                            "points": 100,
                            "type": "FIXED"
                          },
                          "segment": {
                            "id": "seg_n3vVcU5t0m3rs4rEPr3C1oU5"
                          },
                          "event": "customer.segment.entered",
                          "source": {
                            "banner": "New Customers",
                            "object_id": "camp_fkZ28pe7DUAEmmabofkxHI8N",
                            "object_type": "campaign"
                          },
                          "active": true,
                          "object": "earning_rule",
                          "automation_id": "auto_0gv3v7jQG5U6TtVC8bMEdIap",
                          "metadata": {}
                        },
                        {
                          "id": "ern_raVUcdXruvXGuzm682ESrAzt",
                          "created_at": "2022-11-24T09:03:14.534Z",
                          "updated_at": "2022-11-25T07:31:42.778Z",
                          "validation_rule_id": "val_7SxpdhPeBngA",
                          "loyalty": {
                            "points": 20,
                            "type": "FIXED"
                          },
                          "event": "order.paid",
                          "source": {
                            "banner": "Order has been paid",
                            "object_id": "camp_fkZ28pe7DUAEmmabofkxHI8N",
                            "object_type": "campaign"
                          },
                          "active": true,
                          "start_date": "2022-11-23T00:00:00.000Z",
                          "expiration_date": "2022-11-30T00:00:00.000Z",
                          "validity_day_of_week": [
                            1,
                            2,
                            3,
                            4,
                            5
                          ],
                          "object": "earning_rule",
                          "automation_id": "auto_MbEIyLbn7pHyba5Qw5eeb35L",
                          "metadata": {
                            "Type": "Order has been paid - Fixed"
                          }
                        },
                        {
                          "id": "ern_BmDiQs7T3UHfJQqtI2RfJHFR",
                          "created_at": "2022-11-24T14:48:36.567Z",
                          "updated_at": null,
                          "validation_rule_id": null,
                          "loyalty": {
                            "type": "PROPORTIONAL",
                            "calculation_type": "ORDER_AMOUNT",
                            "order": {
                              "amount": {
                                "every": 1000,
                                "points": 1
                              }
                            }
                          },
                          "event": "order.paid",
                          "source": {
                            "banner": "Order paid",
                            "object_id": "camp_fkZ28pe7DUAEmmabofkxHI8N",
                            "object_type": "campaign"
                          },
                          "active": true,
                          "object": "earning_rule",
                          "automation_id": "auto_IKanVw37J6oFuRrdnryXw8Lz",
                          "metadata": {
                            "Type": "Order has been paid - Proportional - 1"
                          }
                        },
                        {
                          "id": "ern_jwtacKdEEHoc85QbouRw3CR8",
                          "created_at": "2022-11-24T15:17:11.539Z",
                          "updated_at": null,
                          "validation_rule_id": null,
                          "loyalty": {
                            "type": "PROPORTIONAL",
                            "calculation_type": "ORDER_TOTAL_AMOUNT",
                            "order": {
                              "total_amount": {
                                "every": 1100,
                                "points": 1
                              }
                            }
                          },
                          "event": "order.paid",
                          "source": {
                            "banner": "Order has been paid",
                            "object_id": "camp_fkZ28pe7DUAEmmabofkxHI8N",
                            "object_type": "campaign"
                          },
                          "active": true,
                          "object": "earning_rule",
                          "automation_id": "auto_Y6IWqhz0cHGkKcteU9PS5nmK",
                          "metadata": {
                            "Type": "Order has been paid - Proportional - 2"
                          }
                        },
                        {
                          "id": "ern_fxVdmtJ4u4rlyoH2hIq7m1PQ",
                          "created_at": "2022-11-24T15:20:04.392Z",
                          "updated_at": null,
                          "validation_rule_id": null,
                          "loyalty": {
                            "type": "PROPORTIONAL",
                            "calculation_type": "ORDER_METADATA",
                            "order": {
                              "metadata": {
                                "every": 10,
                                "points": 2,
                                "property": "number_of_store_visits"
                              }
                            }
                          },
                          "event": "order.paid",
                          "source": {
                            "banner": "Order paid",
                            "object_id": "camp_fkZ28pe7DUAEmmabofkxHI8N",
                            "object_type": "campaign"
                          },
                          "active": true,
                          "object": "earning_rule",
                          "automation_id": "auto_HyowcdKQ0lsQ1rSxV5tyYr2z",
                          "metadata": {
                            "Type": "Order has been paid - Proportional - 3 - Metadata"
                          }
                        },
                        {
                          "id": "ern_Aop1wTrmPv4yBntDcvXNTCWR",
                          "created_at": "2022-11-24T15:23:44.514Z",
                          "updated_at": null,
                          "validation_rule_id": null,
                          "loyalty": {
                            "type": "PROPORTIONAL",
                            "calculation_type": "ORDER_ITEMS_AMOUNT",
                            "order_items": {
                              "amount": {
                                "every": 1000,
                                "points": 3,
                                "object": "products_collection",
                                "id": "pc_75U0dHlr7u75BJodrW1AE3t6"
                              }
                            }
                          },
                          "event": "order.paid",
                          "source": {
                            "banner": "Order paid",
                            "object_id": "camp_fkZ28pe7DUAEmmabofkxHI8N",
                            "object_type": "campaign"
                          },
                          "active": true,
                          "object": "earning_rule",
                          "automation_id": "auto_EXRyQ0z0rgtF54PKDGGAF1qg",
                          "metadata": {
                            "Type": "Order has been paid - Proportional - 4"
                          }
                        },
                        {
                          "id": "ern_4qSQVjfGEH7OmXKMzotS0juY",
                          "created_at": "2022-11-24T15:44:45.301Z",
                          "updated_at": null,
                          "validation_rule_id": null,
                          "loyalty": {
                            "type": "PROPORTIONAL",
                            "calculation_type": "ORDER_ITEMS_SUBTOTAL_AMOUNT",
                            "order_items": {
                              "subtotal_amount": {
                                "every": 1000,
                                "points": 4,
                                "object": "sku",
                                "id": "sku_0b7d7dfb090be5c619"
                              }
                            }
                          },
                          "event": "order.paid",
                          "source": {
                            "banner": "Order paid",
                            "object_id": "camp_fkZ28pe7DUAEmmabofkxHI8N",
                            "object_type": "campaign"
                          },
                          "active": true,
                          "object": "earning_rule",
                          "automation_id": "auto_ID3xLPXCdnOaveJYWiulcNFW",
                          "metadata": {
                            "Type": "Order has been paid - Proportional - 5 - Items"
                          }
                        },
                        {
                          "id": "ern_aJyt4wIrXhmfMxvrLoZjBYrP",
                          "created_at": "2022-11-24T15:56:58.710Z",
                          "updated_at": null,
                          "validation_rule_id": null,
                          "loyalty": {
                            "type": "PROPORTIONAL",
                            "calculation_type": "ORDER_ITEMS_AMOUNT",
                            "order_items": {
                              "amount": {
                                "every": 10000,
                                "points": 1,
                                "object": "product",
                                "id": "prod_0bae32322150fd0546"
                              }
                            }
                          },
                          "event": "order.paid",
                          "source": {
                            "banner": "Order paid",
                            "object_id": "camp_fkZ28pe7DUAEmmabofkxHI8N",
                            "object_type": "campaign"
                          },
                          "active": true,
                          "object": "earning_rule",
                          "automation_id": "auto_EbBqD1SNW70vgDp5icGbWl3e",
                          "metadata": {}
                        },
                        {
                          "id": "ern_v4Blmh9hA3gpnjo93cMAgvHr",
                          "created_at": "2022-11-24T16:19:20.571Z",
                          "updated_at": null,
                          "validation_rule_id": null,
                          "loyalty": {
                            "type": "PROPORTIONAL",
                            "calculation_type": "CUSTOMER_METADATA",
                            "customer": {
                              "metadata": {
                                "every": 1,
                                "points": 5,
                                "property": "customer_life_time_value"
                              }
                            }
                          },
                          "segment": {
                            "id": "seg_OlE7DmfzMI5pHyD5VAv512r1"
                          },
                          "event": "customer.segment.entered",
                          "source": {
                            "banner": "Entered Segment",
                            "object_id": "camp_fkZ28pe7DUAEmmabofkxHI8N",
                            "object_type": "campaign"
                          },
                          "active": true,
                          "object": "earning_rule",
                          "automation_id": "auto_wMMDJ86iHKkznz9x0506e30E",
                          "metadata": {}
                        },
                        {
                          "id": "ern_L8dFanPxJzhw0f5voTwPurGP",
                          "created_at": "2022-11-24T16:27:13.917Z",
                          "updated_at": null,
                          "validation_rule_id": null,
                          "loyalty": {
                            "points": 3,
                            "type": "FIXED"
                          },
                          "custom_event": {
                            "schema_id": "ms_gn4Qe4xsFPf7orCArCiNVY13"
                          },
                          "event": "page_view",
                          "source": {
                            "banner": "Custom Event",
                            "object_id": "camp_fkZ28pe7DUAEmmabofkxHI8N",
                            "object_type": "campaign"
                          },
                          "active": true,
                          "object": "earning_rule",
                          "automation_id": "auto_9N69OJzGKGhp2mo7SNsnsF5b",
                          "metadata": {
                            "Type": "Fixed"
                          }
                        },
                        {
                          "id": "ern_ngdugZ2hzg35hGASFF8nDjUO",
                          "created_at": "2022-11-24T16:41:48.830Z",
                          "updated_at": null,
                          "validation_rule_id": null,
                          "loyalty": {
                            "type": "PROPORTIONAL",
                            "calculation_type": "CUSTOM_EVENT_METADATA",
                            "custom_event": {
                              "metadata": {
                                "every": 2,
                                "points": 2,
                                "property": "volume_number"
                              }
                            }
                          },
                          "custom_event": {
                            "schema_id": "ms_qpRZ3EmRQyszNH6Z52Gkq8au"
                          },
                          "event": "user_subscribed",
                          "source": {
                            "banner": "Custom Event",
                            "object_id": "camp_fkZ28pe7DUAEmmabofkxHI8N",
                            "object_type": "campaign"
                          },
                          "active": true,
                          "object": "earning_rule",
                          "automation_id": "auto_v1eTxL7X63B5IkYgRWHK4leh",
                          "metadata": {
                            "Type": "Event"
                          }
                        },
                        {
                          "id": "ern_afo3Ea760hAKv07JYpycnhiE",
                          "created_at": "2022-11-24T16:50:12.945Z",
                          "updated_at": null,
                          "validation_rule_id": null,
                          "loyalty": {
                            "type": "PROPORTIONAL",
                            "calculation_type": "CUSTOMER_METADATA",
                            "customer": {
                              "metadata": {
                                "every": 3,
                                "points": 3,
                                "property": "customer_life_time_value"
                              }
                            }
                          },
                          "custom_event": {
                            "schema_id": "ms_f0r4hcu5T0m3v3nT5ch3ma"
                          },
                          "event": "cart_abandoned",
                          "source": {
                            "banner": "Custom Event",
                            "object_id": "camp_fkZ28pe7DUAEmmabofkxHI8N",
                            "object_type": "campaign"
                          },
                          "active": true,
                          "object": "earning_rule",
                          "automation_id": "auto_7ovoKiXx49fe3nnhEbDlp9FP",
                          "metadata": {}
                        },
                        {
                          "id": "ern_chdlG14W8Sdcq3d6jJQQgRMT",
                          "created_at": "2022-11-24T16:51:31.595Z",
                          "updated_at": null,
                          "validation_rule_id": null,
                          "loyalty": {
                            "points": 1,
                            "type": "FIXED"
                          },
                          "event": "customer.loyalty.tier.joined",
                          "loyalty_tier": {
                            "id": "__ANY__"
                          },
                          "source": {
                            "banner": "Tier joined - Any",
                            "object_id": "camp_fkZ28pe7DUAEmmabofkxHI8N",
                            "object_type": "campaign"
                          },
                          "active": true,
                          "object": "earning_rule",
                          "automation_id": "auto_W9yMQTz5fgQTgmuu6pTVraBW",
                          "metadata": {
                            "Type": "Tier joined  - any - fixed"
                          }
                        },
                        {
                          "id": "ern_gVo6CHBduFPoh1hctASfXHLT",
                          "created_at": "2022-11-24T17:01:42.809Z",
                          "updated_at": null,
                          "validation_rule_id": null,
                          "loyalty": {
                            "type": "PROPORTIONAL",
                            "calculation_type": "CUSTOMER_METADATA",
                            "customer": {
                              "metadata": {
                                "every": 4,
                                "points": 4,
                                "property": "customer_life_time_value"
                              }
                            }
                          },
                          "event": "customer.loyalty.tier.joined",
                          "loyalty_tier": {
                            "id": "ltr_pudTGWasuIqxdiDM0go31OV1"
                          },
                          "source": {
                            "banner": "Tier joined",
                            "object_id": "camp_fkZ28pe7DUAEmmabofkxHI8N",
                            "object_type": "campaign"
                          },
                          "active": true,
                          "object": "earning_rule",
                          "automation_id": "auto_wdlEo17wmoqYHGfilbayEUj7",
                          "metadata": {
                            "Type": "Tier joined - customer metadata - proportional"
                          }
                        },
                        {
                          "id": "ern_66OdCyLADv5IGFoQe18vGUwa",
                          "created_at": "2022-11-24T17:03:59.414Z",
                          "updated_at": null,
                          "validation_rule_id": null,
                          "loyalty": {
                            "type": "PROPORTIONAL",
                            "calculation_type": "CUSTOMER_METADATA",
                            "customer": {
                              "metadata": {
                                "every": 2,
                                "points": 2,
                                "property": "customer_life_time_value"
                              }
                            }
                          },
                          "event": "customer.loyalty.tier.left",
                          "loyalty_tier": {
                            "id": "ltr_7rVIPlPzdSFwpnbCcUXgwzH2"
                          },
                          "source": {
                            "banner": "Tier left",
                            "object_id": "camp_fkZ28pe7DUAEmmabofkxHI8N",
                            "object_type": "campaign"
                          },
                          "active": true,
                          "object": "earning_rule",
                          "automation_id": "auto_czm5el1Uz1jeGaO97AYoDNAq",
                          "metadata": {
                            "Type": "Tier left"
                          }
                        },
                        {
                          "id": "ern_YR3fDfCjAmz9a5D68nk0i4dm",
                          "created_at": "2022-11-25T07:29:38.961Z",
                          "updated_at": null,
                          "validation_rule_id": null,
                          "loyalty": {
                            "type": "PROPORTIONAL",
                            "calculation_type": "CUSTOMER_METADATA",
                            "customer": {
                              "metadata": {
                                "every": 3,
                                "points": 4,
                                "property": "customer_life_time_value"
                              }
                            }
                          },
                          "event": "customer.loyalty.tier.upgraded",
                          "loyalty_tier": {
                            "id": "ltr_30KHciA0UG8B71Fo51GZqwgN"
                          },
                          "source": {
                            "banner": "Tier upgraded",
                            "object_id": "camp_fkZ28pe7DUAEmmabofkxHI8N",
                            "object_type": "campaign"
                          },
                          "active": true,
                          "object": "earning_rule",
                          "automation_id": "auto_M1OdRH8spk6Fs7yTuPLN2LAv",
                          "metadata": {
                            "Type": "Upgraded"
                          }
                        },
                        {
                          "id": "ern_A2RArBE30Tkt56utVLrRv7rZ",
                          "created_at": "2022-11-25T07:31:05.866Z",
                          "updated_at": "2022-11-25T07:31:43.029Z",
                          "validation_rule_id": "val_kfmWpfXMI9P1",
                          "loyalty": {
                            "points": 1,
                            "type": "FIXED"
                          },
                          "event": "customer.loyalty.tier.downgraded",
                          "loyalty_tier": {
                            "id": "__ANY__"
                          },
                          "source": {
                            "banner": "Tier Downgraded",
                            "object_id": "camp_fkZ28pe7DUAEmmabofkxHI8N",
                            "object_type": "campaign"
                          },
                          "active": true,
                          "object": "earning_rule",
                          "automation_id": "auto_TMVZtCNMBgZm0KcPJ7otiHZW",
                          "metadata": {
                            "Type": "Tier"
                          }
                        },
                        {
                          "id": "ern_AdlWO2yt6b6llWsibIdiRXVE",
                          "created_at": "2022-11-25T07:31:42.767Z",
                          "updated_at": null,
                          "validation_rule_id": null,
                          "loyalty": {
                            "points": 5,
                            "type": "FIXED"
                          },
                          "event": "customer.loyalty.tier.prolonged",
                          "loyalty_tier": {
                            "id": "__ANY__"
                          },
                          "source": {
                            "banner": "Prolonged",
                            "object_id": "camp_fkZ28pe7DUAEmmabofkxHI8N",
                            "object_type": "campaign"
                          },
                          "active": true,
                          "object": "earning_rule",
                          "automation_id": "auto_4jH1yq9WJS0oJ8suagCrltyb",
                          "metadata": {}
                        }
                      ],
                      "total": 18
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "create-earning-rule",
        "tags": [
          "Loyalties"
        ],
        "summary": "Create Earning Rule",
        "description": "Create earning rules for a loyalty campaign.\n 🚧 Maximum number of earning rules\n You can create up to 100 earning rules per project. The limit can be customized for clients with a single-tenant setup.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "requestBody": {
          "description": "Customize the request body based on the type of earning rules you would like to create. The request body is an array of objects. The required minimum properties to include in the payload for each object are event and loyalty. Additionally, if you choose to add a validity_timeframe, you must include a start_date. Furthermore, an earning rule event type:  \n- customer.segment.entered requires a segment object\n- a custom event requires a custom_event object\n- a customer.loyalty.tier.joined, customer.loyalty.tier.left, customer.loyalty.tier.upgraded, customer.loyalty.tier.downgraded, customer.loyalty.tier.prolonged requires a loyalty_tier object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoyaltiesEarningRulesCreateRequestBody"
              },
              "examples": {
                "Example": {
                  "value": [
                    {
                      "event": "order.paid",
                      "validation_rule_id": "val_7SxpdhPeBngA",
                      "loyalty": {
                        "type": "FIXED",
                        "points": "5"
                      },
                      "source": {
                        "banner": "Order paid 5 points."
                      },
                      "active": true,
                      "start_date": "2022-11-02T13:00:00.000Z",
                      "expiration_date": "2023-03-03T14:30:00.000Z",
                      "validity_timeframe": {
                        "duration": "PT1H",
                        "interval": "P1D"
                      },
                      "validity_day_of_week": [
                        0,
                        1,
                        2,
                        3,
                        4,
                        5
                      ],
                      "metadata": {
                        "Type": "Order paid - fixed amount of points"
                      }
                    },
                    {
                      "event": "order.paid",
                      "validation_rule_id": null,
                      "loyalty": {
                        "type": "PROPORTIONAL",
                        "calculation_type": "ORDER_AMOUNT",
                        "order": {
                          "amount": {
                            "every": 1,
                            "points": 1
                          }
                        }
                      },
                      "source": {
                        "banner": "Order paid - 1 point for 1 dollar spent excluding discounts."
                      },
                      "active": true,
                      "start_date": "2022-11-02T13:00:00.000Z",
                      "expiration_date": "2023-03-03T14:30:00.000Z",
                      "validity_timeframe": {
                        "duration": "PT1H",
                        "interval": "P1D"
                      },
                      "validity_day_of_week": [
                        0,
                        1,
                        2,
                        3,
                        4,
                        5
                      ],
                      "metadata": {
                        "Type": "Order paid- points proportional to order amount"
                      }
                    },
                    {
                      "event": "order.paid",
                      "validation_rule_id": null,
                      "loyalty": {
                        "type": "PROPORTIONAL",
                        "calculation_type": "ORDER_TOTAL_AMOUNT",
                        "order": {
                          "total_amount": {
                            "every": 1,
                            "points": 1
                          }
                        }
                      },
                      "source": {
                        "banner": "Order paid - 1 point for 1 dollar spent including discounts."
                      },
                      "active": true,
                      "start_date": "2022-11-02T13:00:00.000Z",
                      "expiration_date": "2023-03-03T14:30:00.000Z",
                      "validity_timeframe": {
                        "duration": "PT1H",
                        "interval": "P1D"
                      },
                      "validity_day_of_week": [
                        0,
                        1,
                        2,
                        3,
                        4,
                        5
                      ],
                      "metadata": {
                        "Type": "Order paid- points proportional to order total amount"
                      }
                    },
                    {
                      "event": "order.paid",
                      "validation_rule_id": null,
                      "loyalty": {
                        "type": "PROPORTIONAL",
                        "calculation_type": "ORDER_METADATA",
                        "order": {
                          "metadata": {
                            "every": 2,
                            "points": 1,
                            "property": "number_of_store_visits"
                          }
                        }
                      },
                      "source": {
                        "banner": "Order paid - 2 points for each store visit."
                      },
                      "active": true,
                      "start_date": "2022-11-02T13:00:00.000Z",
                      "expiration_date": "2023-03-03T14:30:00.000Z",
                      "validity_timeframe": {
                        "duration": "PT1H",
                        "interval": "P1D"
                      },
                      "validity_day_of_week": [
                        0,
                        1,
                        2,
                        3,
                        4,
                        5
                      ],
                      "metadata": {
                        "Type": "Order paid- points proportional to numerical order metadata property "
                      }
                    },
                    {
                      "event": "order.paid",
                      "validation_rule_id": null,
                      "loyalty": {
                        "type": "PROPORTIONAL",
                        "calculation_type": "ORDER_ITEMS_AMOUNT",
                        "order_items": {
                          "amount": {
                            "every": 2,
                            "points": 1,
                            "object": "product",
                            "id": "prod_0bae32322150fd0546"
                          }
                        }
                      },
                      "source": {
                        "banner": "Order paid - 2 points for 1 dollar spent on items excluding discounts."
                      },
                      "active": true,
                      "start_date": "2022-11-02T13:00:00.000Z",
                      "expiration_date": "2023-03-03T14:30:00.000Z",
                      "validity_timeframe": {
                        "duration": "PT1H",
                        "interval": "P1D"
                      },
                      "validity_day_of_week": [
                        0,
                        1,
                        2,
                        3,
                        4,
                        5
                      ],
                      "metadata": {
                        "Type": "Order paid- points proportional to order items amount"
                      }
                    },
                    {
                      "event": "order.paid",
                      "validation_rule_id": null,
                      "loyalty": {
                        "type": "PROPORTIONAL",
                        "calculation_type": "ORDER_ITEMS_SUBTOTAL_AMOUNT",
                        "order_items": {
                          "subtotal_amount": {
                            "every": 2,
                            "points": 1,
                            "object": "products_collection",
                            "id": "pc_75U0dHlr7u75BJodrW1AE3t6"
                          }
                        }
                      },
                      "source": {
                        "banner": "Order paid - 2 points for every dollar spent on the product collection."
                      },
                      "active": true,
                      "start_date": "2022-11-02T13:00:00.000Z",
                      "expiration_date": "2023-03-03T14:30:00.000Z",
                      "validity_timeframe": {
                        "duration": "PT1H",
                        "interval": "P1D"
                      },
                      "validity_day_of_week": [
                        0,
                        1,
                        2,
                        3,
                        4,
                        5
                      ],
                      "metadata": {
                        "Type": "Order paid- points proportional to order items subtotal amount"
                      }
                    },
                    {
                      "event": "order.paid",
                      "validation_rule_id": null,
                      "loyalty": {
                        "type": "PROPORTIONAL",
                        "calculation_type": "ORDER_ITEMS_QUANTITY",
                        "order_items": {
                          "quantity": {
                            "every": 1,
                            "points": 1,
                            "object": "sku",
                            "id": "sku_0b7d7dfb090be5c619"
                          }
                        }
                      },
                      "source": {
                        "banner": "Order paid - 1 point for every brand phone in your cart."
                      },
                      "active": true,
                      "start_date": "2022-11-02T13:00:00.000Z",
                      "expiration_date": "2023-03-03T14:30:00.000Z",
                      "validity_timeframe": {
                        "duration": "PT1H",
                        "interval": "P1D"
                      },
                      "validity_day_of_week": [
                        0,
                        1,
                        2,
                        3,
                        4,
                        5
                      ],
                      "metadata": {
                        "Type": "Order paid - points proportional to quantity of items in a cart of a product varient."
                      }
                    },
                    {
                      "event": "order.paid",
                      "validation_rule_id": "val_7SxpdhPeBngA",
                      "loyalty": {
                        "type": "PROPORTIONAL",
                        "calculation_type": "CUSTOMER_METADATA",
                        "customer": {
                          "metadata": {
                            "every": 1,
                            "points": 1,
                            "property": "customer_life_time_value"
                          }
                        }
                      },
                      "source": {
                        "banner": "Order paid 1 point for 1 month of being a customer with us."
                      },
                      "active": true,
                      "start_date": "2022-11-02T13:00:00.000Z",
                      "expiration_date": "2023-03-03T14:30:00.000Z",
                      "validity_timeframe": {
                        "duration": "PT1H",
                        "interval": "P1D"
                      },
                      "validity_day_of_week": [
                        0,
                        1,
                        2,
                        3,
                        4,
                        5
                      ],
                      "metadata": {
                        "Type": "Order paid - points proportional to customer metadata property"
                      }
                    },
                    {
                      "event": "customer.segment.entered",
                      "segment": {
                        "id": "seg_OlE7DmfzMI5pHyD5VAv512r1"
                      },
                      "validation_rule_id": "val_7SxpdhPeBngA",
                      "loyalty": {
                        "type": "PROPORTIONAL",
                        "calculation_type": "CUSTOMER_METADATA",
                        "customer": {
                          "metadata": {
                            "every": 1,
                            "points": 1,
                            "property": "customer_life_time_value"
                          }
                        }
                      },
                      "source": {
                        "banner": "Customer entered birthday segment - 1 point for each month of being a customer with us."
                      },
                      "active": true,
                      "start_date": "2022-11-02T13:00:00.000Z",
                      "expiration_date": "2023-03-03T14:30:00.000Z",
                      "validity_timeframe": {
                        "duration": "PT1H",
                        "interval": "P1D"
                      },
                      "validity_day_of_week": [
                        0,
                        1,
                        2,
                        3,
                        4,
                        5
                      ],
                      "metadata": {
                        "Type": "Entered segment - points proportional to customer metadata property"
                      }
                    },
                    {
                      "event": "customer.segment.entered",
                      "segment": {
                        "id": "seg_OlE7DmfzMI5pHyD5VAv512r1"
                      },
                      "validation_rule_id": "val_7SxpdhPeBngA",
                      "loyalty": {
                        "type": "FIXED",
                        "points": "5"
                      },
                      "source": {
                        "banner": "Customer entered birthday segment - 5 points"
                      },
                      "active": true,
                      "start_date": "2022-11-02T13:00:00.000Z",
                      "expiration_date": "2023-03-03T14:30:00.000Z",
                      "validity_timeframe": {
                        "duration": "PT1H",
                        "interval": "P1D"
                      },
                      "validity_day_of_week": [
                        0,
                        1,
                        2,
                        3,
                        4,
                        5
                      ],
                      "metadata": {
                        "Type": "Entered segment - fixed points"
                      }
                    },
                    {
                      "event": "page_view",
                      "validation_rule_id": "val_7SxpdhPeBngA",
                      "loyalty": {
                        "points": 3,
                        "type": "FIXED"
                      },
                      "custom_event": {
                        "schema_id": "ms_gn4Qe4xsFPf7orCArCiNVY13"
                      },
                      "source": {
                        "banner": "See page - 3 points"
                      },
                      "active": true,
                      "start_date": "2022-11-02T13:00:00.000Z",
                      "expiration_date": "2023-03-03T14:30:00.000Z",
                      "validity_timeframe": {
                        "duration": "PT1H",
                        "interval": "P1D"
                      },
                      "validity_day_of_week": [
                        0,
                        1,
                        2,
                        3,
                        4,
                        5
                      ],
                      "metadata": {
                        "Type": "Custom Event - fixed points for viewing a page"
                      }
                    },
                    {
                      "event": "page_view",
                      "validation_rule_id": "val_7SxpdhPeBngA",
                      "loyalty": {
                        "type": "PROPORTIONAL",
                        "calculation_type": "CUSTOM_EVENT_METADATA",
                        "custom_event": {
                          "metadata": {
                            "every": 1,
                            "points": 2,
                            "property": "volume_number"
                          }
                        }
                      },
                      "custom_event": {
                        "schema_id": "ms_gn4Qe4xsFPf7orCArCiNVY13"
                      },
                      "source": {
                        "banner": "See page X - get 2 points multiplied by the page number"
                      },
                      "active": true,
                      "start_date": "2022-11-02T13:00:00.000Z",
                      "expiration_date": "2023-03-03T14:30:00.000Z",
                      "validity_timeframe": {
                        "duration": "PT1H",
                        "interval": "P1D"
                      },
                      "validity_day_of_week": [
                        0,
                        1,
                        2,
                        3,
                        4,
                        5
                      ],
                      "metadata": {
                        "Type": "Custom Event - proportional points for viewing a page based on custom event metadata"
                      }
                    },
                    {
                      "event": "page_view",
                      "validation_rule_id": "val_7SxpdhPeBngA",
                      "loyalty": {
                        "type": "PROPORTIONAL",
                        "calculation_type": "CUSTOMER_METADATA",
                        "customer": {
                          "metadata": {
                            "every": 1,
                            "points": 2,
                            "property": "customer_life_time_value"
                          }
                        }
                      },
                      "custom_event": {
                        "schema_id": "ms_gn4Qe4xsFPf7orCArCiNVY13"
                      },
                      "source": {
                        "banner": "Get 2 points for every month you're a customer for viewing a page"
                      },
                      "active": true,
                      "start_date": "2022-11-02T13:00:00.000Z",
                      "expiration_date": "2023-03-03T14:30:00.000Z",
                      "validity_timeframe": {
                        "duration": "PT1H",
                        "interval": "P1D"
                      },
                      "validity_day_of_week": [
                        0,
                        1,
                        2,
                        3,
                        4,
                        5
                      ],
                      "metadata": {
                        "Type": "Custom Event - proportional points for viewing a page based on customer metadata"
                      }
                    },
                    {
                      "event": "customer.loyalty.tier.prolonged",
                      "validation_rule_id": "val_7SxpdhPeBngA",
                      "loyalty": {
                        "type": "PROPORTIONAL",
                        "calculation_type": "CUSTOMER_METADATA",
                        "customer": {
                          "metadata": {
                            "every": 1,
                            "points": 2,
                            "property": "customer_life_time_value"
                          }
                        }
                      },
                      "loyalty_tier": {
                        "id": "ltr_pudTGWasuIqxdiDM0go31OV1"
                      },
                      "source": {
                        "banner": "Get 2 points for every month you're a customer when your loyalty tier is prolonged."
                      },
                      "active": true,
                      "start_date": "2022-11-02T13:00:00.000Z",
                      "expiration_date": "2023-03-03T14:30:00.000Z",
                      "validity_timeframe": {
                        "duration": "PT1H",
                        "interval": "P1D"
                      },
                      "validity_day_of_week": [
                        0,
                        1,
                        2,
                        3,
                        4,
                        5
                      ],
                      "metadata": {
                        "Type": "Custom Event - proportional points for extending a loyalty tier based on customer metadata."
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "2XX": {
            "description": "Returns an array of earning rule objects.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LoyaltiesEarningRulesCreateResponseBody"
                  }
                },
                "examples": {
                  "Example": {
                    "value": [
                      {
                        "id": "ern_63g6NQgtepfXn2z0QbT2ksLf",
                        "created_at": "2022-11-29T11:10:46.523Z",
                        "updated_at": null,
                        "validation_rule_id": "val_7SxpdhPeBngA",
                        "loyalty": {
                          "points": 5,
                          "type": "FIXED"
                        },
                        "event": "order.paid",
                        "source": {
                          "banner": "Order paid 5 points.",
                          "object_id": "camp_fkZ28pe7DUAEmmabofkxHI8N",
                          "object_type": "campaign"
                        },
                        "active": true,
                        "start_date": "2022-11-02T13:00:00.000Z",
                        "expiration_date": "2023-03-03T14:30:00.000Z",
                        "validity_timeframe": {
                          "duration": "PT1H",
                          "interval": "P1D"
                        },
                        "validity_day_of_week": [
                          0,
                          1,
                          2,
                          3,
                          4,
                          5
                        ],
                        "object": "earning_rule",
                        "automation_id": "auto_knM56LS3oygL0Ue0oeSNt4WA",
                        "metadata": {
                          "Type": "Order paid - fixed amount of points"
                        }
                      },
                      {
                        "id": "ern_Ov5RWerVFubVSjIHOMco34dv",
                        "created_at": "2022-11-29T11:10:46.523Z",
                        "updated_at": null,
                        "loyalty": {
                          "type": "PROPORTIONAL",
                          "calculation_type": "ORDER_AMOUNT",
                          "order": {
                            "amount": {
                              "every": 1,
                              "points": 1
                            }
                          }
                        },
                        "event": "order.paid",
                        "source": {
                          "banner": "Order paid - 1 point for 1 dollar spent excluding discounts.",
                          "object_id": "camp_fkZ28pe7DUAEmmabofkxHI8N",
                          "object_type": "campaign"
                        },
                        "active": true,
                        "start_date": "2022-11-02T13:00:00.000Z",
                        "expiration_date": "2023-03-03T14:30:00.000Z",
                        "validity_timeframe": {
                          "duration": "PT1H",
                          "interval": "P1D"
                        },
                        "validity_day_of_week": [
                          0,
                          1,
                          2,
                          3,
                          4,
                          5
                        ],
                        "object": "earning_rule",
                        "automation_id": "auto_2R4x6pMFVEIPz1Lhz5ZVo33Y",
                        "metadata": {
                          "Type": "Order paid- points proportional to order amount"
                        }
                      },
                      {
                        "id": "ern_5rWPz4arGlTv4FVc1vETeFfe",
                        "created_at": "2022-11-29T11:10:46.523Z",
                        "updated_at": null,
                        "loyalty": {
                          "type": "PROPORTIONAL",
                          "calculation_type": "ORDER_TOTAL_AMOUNT",
                          "order": {
                            "total_amount": {
                              "every": 1,
                              "points": 1
                            }
                          }
                        },
                        "event": "order.paid",
                        "source": {
                          "banner": "Order paid - 1 point for 1 dollar spent including discounts.",
                          "object_id": "camp_fkZ28pe7DUAEmmabofkxHI8N",
                          "object_type": "campaign"
                        },
                        "active": true,
                        "start_date": "2022-11-02T13:00:00.000Z",
                        "expiration_date": "2023-03-03T14:30:00.000Z",
                        "validity_timeframe": {
                          "duration": "PT1H",
                          "interval": "P1D"
                        },
                        "validity_day_of_week": [
                          0,
                          1,
                          2,
                          3,
                          4,
                          5
                        ],
                        "object": "earning_rule",
                        "automation_id": "auto_fXasfs6Eh7P2haZkI33PEumI",
                        "metadata": {
                          "Type": "Order paid- points proportional to order total amount"
                        }
                      },
                      {
                        "id": "ern_Xs3o43dHr1O3RM5ojoeu1l6b",
                        "created_at": "2022-11-29T11:10:46.523Z",
                        "updated_at": null,
                        "loyalty": {
                          "type": "PROPORTIONAL",
                          "calculation_type": "ORDER_METADATA",
                          "order": {
                            "metadata": {
                              "every": 2,
                              "points": 1,
                              "property": "number_of_store_visits"
                            }
                          }
                        },
                        "event": "order.paid",
                        "source": {
                          "banner": "Order paid - 2 points for each store visit.",
                          "object_id": "camp_fkZ28pe7DUAEmmabofkxHI8N",
                          "object_type": "campaign"
                        },
                        "active": true,
                        "start_date": "2022-11-02T13:00:00.000Z",
                        "expiration_date": "2023-03-03T14:30:00.000Z",
                        "validity_timeframe": {
                          "duration": "PT1H",
                          "interval": "P1D"
                        },
                        "validity_day_of_week": [
                          0,
                          1,
                          2,
                          3,
                          4,
                          5
                        ],
                        "object": "earning_rule",
                        "automation_id": "auto_jucMzF25jisrqiG3k6JyyviT",
                        "metadata": {
                          "Type": "Order paid- points proportional to numerical order metadata property "
                        }
                      },
                      {
                        "id": "ern_9CjMBP2V8zgpsHLga4YOQo0A",
                        "created_at": "2022-11-29T11:10:46.523Z",
                        "updated_at": null,
                        "loyalty": {
                          "type": "PROPORTIONAL",
                          "calculation_type": "ORDER_ITEMS_AMOUNT",
                          "order_items": {
                            "amount": {
                              "every": 2,
                              "points": 1,
                              "object": "product",
                              "id": "prod_0bae32322150fd0546"
                            }
                          }
                        },
                        "event": "order.paid",
                        "source": {
                          "banner": "Order paid - 2 points for 1 dollar spent on items excluding discounts.",
                          "object_id": "camp_fkZ28pe7DUAEmmabofkxHI8N",
                          "object_type": "campaign"
                        },
                        "active": true,
                        "start_date": "2022-11-02T13:00:00.000Z",
                        "expiration_date": "2023-03-03T14:30:00.000Z",
                        "validity_timeframe": {
                          "duration": "PT1H",
                          "interval": "P1D"
                        },
                        "validity_day_of_week": [
                          0,
                          1,
                          2,
                          3,
                          4,
                          5
                        ],
                        "object": "earning_rule",
                        "automation_id": "auto_y60lx7XsW1YdOOOFuDaYjvG4",
                        "metadata": {
                          "Type": "Order paid- points proportional to order items amount"
                        }
                      },
                      {
                        "id": "ern_uI7hRj8PNodK8xWRsn3gpDdG",
                        "created_at": "2022-11-29T11:10:46.523Z",
                        "updated_at": null,
                        "loyalty": {
                          "type": "PROPORTIONAL",
                          "calculation_type": "ORDER_ITEMS_SUBTOTAL_AMOUNT",
                          "order_items": {
                            "subtotal_amount": {
                              "every": 2,
                              "points": 1,
                              "object": "products_collection",
                              "id": "pc_75U0dHlr7u75BJodrW1AE3t6"
                            }
                          }
                        },
                        "event": "order.paid",
                        "source": {
                          "banner": "Order paid - 2 points for every dollar spent on the product collection.",
                          "object_id": "camp_fkZ28pe7DUAEmmabofkxHI8N",
                          "object_type": "campaign"
                        },
                        "active": true,
                        "start_date": "2022-11-02T13:00:00.000Z",
                        "expiration_date": "2023-03-03T14:30:00.000Z",
                        "validity_timeframe": {
                          "duration": "PT1H",
                          "interval": "P1D"
                        },
                        "validity_day_of_week": [
                          0,
                          1,
                          2,
                          3,
                          4,
                          5
                        ],
                        "object": "earning_rule",
                        "automation_id": "auto_Lk1WROGexXA72FabUWhR1p7X",
                        "metadata": {
                          "Type": "Order paid- points proportional to order items subtotal amount"
                        }
                      },
                      {
                        "id": "ern_dL13AmZEO0ToImOY44YUP1ru",
                        "created_at": "2022-11-29T11:10:46.523Z",
                        "updated_at": null,
                        "loyalty": {
                          "type": "PROPORTIONAL",
                          "calculation_type": "ORDER_ITEMS_QUANTITY",
                          "order_items": {
                            "quantity": {
                              "every": 1,
                              "points": 1,
                              "object": "sku",
                              "id": "sku_0b7d7dfb090be5c619"
                            }
                          }
                        },
                        "event": "order.paid",
                        "source": {
                          "banner": "Order paid - 1 point for every brand phone in your cart.",
                          "object_id": "camp_fkZ28pe7DUAEmmabofkxHI8N",
                          "object_type": "campaign"
                        },
                        "active": true,
                        "start_date": "2022-11-02T13:00:00.000Z",
                        "expiration_date": "2023-03-03T14:30:00.000Z",
                        "validity_timeframe": {
                          "duration": "PT1H",
                          "interval": "P1D"
                        },
                        "validity_day_of_week": [
                          0,
                          1,
                          2,
                          3,
                          4,
                          5
                        ],
                        "object": "earning_rule",
                        "automation_id": "auto_4F9iJG0hmKTiqSsmkfbB8vUF",
                        "metadata": {
                          "Type": "Order paid - points proportional to quantity of items in a cart of a product varient."
                        }
                      },
                      {
                        "id": "ern_ublD9yGhxPrd9ayPAMTc4aOZ",
                        "created_at": "2022-11-29T11:10:46.523Z",
                        "updated_at": null,
                        "validation_rule_id": "val_7SxpdhPeBngA",
                        "loyalty": {
                          "type": "PROPORTIONAL",
                          "calculation_type": "CUSTOMER_METADATA",
                          "customer": {
                            "metadata": {
                              "every": 1,
                              "points": 1,
                              "property": "customer_life_time_value"
                            }
                          }
                        },
                        "event": "order.paid",
                        "source": {
                          "banner": "Order paid 1 point for 1 month of being a customer with us.",
                          "object_id": "camp_fkZ28pe7DUAEmmabofkxHI8N",
                          "object_type": "campaign"
                        },
                        "active": true,
                        "start_date": "2022-11-02T13:00:00.000Z",
                        "expiration_date": "2023-03-03T14:30:00.000Z",
                        "validity_timeframe": {
                          "duration": "PT1H",
                          "interval": "P1D"
                        },
                        "validity_day_of_week": [
                          0,
                          1,
                          2,
                          3,
                          4,
                          5
                        ],
                        "object": "earning_rule",
                        "automation_id": "auto_raft7C1hVw427OnEobmzhXjD",
                        "metadata": {
                          "Type": "Order paid - points proportional to customer metadata property"
                        }
                      },
                      {
                        "id": "ern_6tBwufmR7UNJInhZq8zNRrj5",
                        "created_at": "2022-11-29T11:10:46.523Z",
                        "updated_at": null,
                        "validation_rule_id": "val_7SxpdhPeBngA",
                        "loyalty": {
                          "type": "PROPORTIONAL",
                          "calculation_type": "CUSTOMER_METADATA",
                          "customer": {
                            "metadata": {
                              "every": 1,
                              "points": 1,
                              "property": "customer_life_time_value"
                            }
                          }
                        },
                        "segment": {
                          "id": "seg_OlE7DmfzMI5pHyD5VAv512r1"
                        },
                        "event": "customer.segment.entered",
                        "source": {
                          "banner": "Customer entered birthday segment - 1 point for each month of being a customer with us.",
                          "object_id": "camp_fkZ28pe7DUAEmmabofkxHI8N",
                          "object_type": "campaign"
                        },
                        "active": true,
                        "start_date": "2022-11-02T13:00:00.000Z",
                        "expiration_date": "2023-03-03T14:30:00.000Z",
                        "validity_timeframe": {
                          "duration": "PT1H",
                          "interval": "P1D"
                        },
                        "validity_day_of_week": [
                          0,
                          1,
                          2,
                          3,
                          4,
                          5
                        ],
                        "object": "earning_rule",
                        "automation_id": "auto_mQ8SCABGLnrGMBbh8QS6DUpX",
                        "metadata": {
                          "Type": "Entered segment - points proportional to customer metadata property"
                        }
                      },
                      {
                        "id": "ern_yBR0JtdcDyJXgZf30C8KQLPw",
                        "created_at": "2022-11-29T11:10:46.523Z",
                        "updated_at": null,
                        "validation_rule_id": "val_7SxpdhPeBngA",
                        "loyalty": {
                          "points": 5,
                          "type": "FIXED"
                        },
                        "segment": {
                          "id": "seg_OlE7DmfzMI5pHyD5VAv512r1"
                        },
                        "event": "customer.segment.entered",
                        "source": {
                          "banner": "Customer entered birthday segment - 5 points",
                          "object_id": "camp_fkZ28pe7DUAEmmabofkxHI8N",
                          "object_type": "campaign"
                        },
                        "active": true,
                        "start_date": "2022-11-02T13:00:00.000Z",
                        "expiration_date": "2023-03-03T14:30:00.000Z",
                        "validity_timeframe": {
                          "duration": "PT1H",
                          "interval": "P1D"
                        },
                        "validity_day_of_week": [
                          0,
                          1,
                          2,
                          3,
                          4,
                          5
                        ],
                        "object": "earning_rule",
                        "automation_id": "auto_Co7zjgYPIKZ45vcK0jn7qrY8",
                        "metadata": {
                          "Type": "Entered segment - fixed points"
                        }
                      },
                      {
                        "id": "ern_Ic2AUznt4cJInIl1wt6n0Fbv",
                        "created_at": "2022-11-29T11:10:46.523Z",
                        "updated_at": null,
                        "validation_rule_id": "val_7SxpdhPeBngA",
                        "loyalty": {
                          "points": 3,
                          "type": "FIXED"
                        },
                        "custom_event": {
                          "schema_id": "ms_gn4Qe4xsFPf7orCArCiNVY13"
                        },
                        "event": "page_view",
                        "source": {
                          "banner": "See page - 3 points",
                          "object_id": "camp_fkZ28pe7DUAEmmabofkxHI8N",
                          "object_type": "campaign"
                        },
                        "active": true,
                        "start_date": "2022-11-02T13:00:00.000Z",
                        "expiration_date": "2023-03-03T14:30:00.000Z",
                        "validity_timeframe": {
                          "duration": "PT1H",
                          "interval": "P1D"
                        },
                        "validity_day_of_week": [
                          0,
                          1,
                          2,
                          3,
                          4,
                          5
                        ],
                        "object": "earning_rule",
                        "automation_id": "auto_KWvcBS3bdmJnWD4BTw29eRNT",
                        "metadata": {
                          "Type": "Custom Event - fixed points for viewing a page"
                        }
                      },
                      {
                        "id": "ern_4SRj1TY1j8Q617R2Y4qiN1sy",
                        "created_at": "2022-11-29T11:10:46.523Z",
                        "updated_at": null,
                        "validation_rule_id": "val_7SxpdhPeBngA",
                        "loyalty": {
                          "type": "PROPORTIONAL",
                          "calculation_type": "CUSTOM_EVENT_METADATA",
                          "custom_event": {
                            "metadata": {
                              "every": 1,
                              "points": 2,
                              "property": "volume_number"
                            }
                          }
                        },
                        "custom_event": {
                          "schema_id": "ms_gn4Qe4xsFPf7orCArCiNVY13"
                        },
                        "event": "page_view",
                        "source": {
                          "banner": "See page X - get 2 points multiplied by the page number",
                          "object_id": "camp_fkZ28pe7DUAEmmabofkxHI8N",
                          "object_type": "campaign"
                        },
                        "active": true,
                        "start_date": "2022-11-02T13:00:00.000Z",
                        "expiration_date": "2023-03-03T14:30:00.000Z",
                        "validity_timeframe": {
                          "duration": "PT1H",
                          "interval": "P1D"
                        },
                        "validity_day_of_week": [
                          0,
                          1,
                          2,
                          3,
                          4,
                          5
                        ],
                        "object": "earning_rule",
                        "automation_id": "auto_WWESERcKoTRSbCDal7Hr7H0A",
                        "metadata": {
                          "Type": "Custom Event - proportional points for viewing a page based on custom event metadata"
                        }
                      },
                      {
                        "id": "ern_WXBa4b5a6N5XZt9A9Nf9dagA",
                        "created_at": "2022-11-29T11:10:46.523Z",
                        "updated_at": null,
                        "validation_rule_id": "val_7SxpdhPeBngA",
                        "loyalty": {
                          "type": "PROPORTIONAL",
                          "calculation_type": "CUSTOMER_METADATA",
                          "customer": {
                            "metadata": {
                              "every": 1,
                              "points": 2,
                              "property": "customer_life_time_value"
                            }
                          }
                        },
                        "custom_event": {
                          "schema_id": "ms_gn4Qe4xsFPf7orCArCiNVY13"
                        },
                        "event": "page_view",
                        "source": {
                          "banner": "Get 2 points for every month you're a customer for viewing a page",
                          "object_id": "camp_fkZ28pe7DUAEmmabofkxHI8N",
                          "object_type": "campaign"
                        },
                        "active": true,
                        "start_date": "2022-11-02T13:00:00.000Z",
                        "expiration_date": "2023-03-03T14:30:00.000Z",
                        "validity_timeframe": {
                          "duration": "PT1H",
                          "interval": "P1D"
                        },
                        "validity_day_of_week": [
                          0,
                          1,
                          2,
                          3,
                          4,
                          5
                        ],
                        "object": "earning_rule",
                        "automation_id": "auto_zv3mCOeZOaHCsFMG0yIKu0ax",
                        "metadata": {
                          "Type": "Custom Event - proportional points for viewing a page based on customer metadata"
                        }
                      },
                      {
                        "id": "ern_DvdegDzcaMUXzf2fayzCqMEV",
                        "created_at": "2022-11-29T11:10:46.523Z",
                        "updated_at": null,
                        "validation_rule_id": "val_7SxpdhPeBngA",
                        "loyalty": {
                          "type": "PROPORTIONAL",
                          "calculation_type": "CUSTOMER_METADATA",
                          "customer": {
                            "metadata": {
                              "every": 1,
                              "points": 2,
                              "property": "customer_life_time_value"
                            }
                          }
                        },
                        "event": "customer.loyalty.tier.prolonged",
                        "loyalty_tier": {
                          "id": "ltr_pudTGWasuIqxdiDM0go31OV1"
                        },
                        "source": {
                          "banner": "Get 2 points for every month you're a customer when your loyalty tier is prolonged.",
                          "object_id": "camp_fkZ28pe7DUAEmmabofkxHI8N",
                          "object_type": "campaign"
                        },
                        "active": true,
                        "start_date": "2022-11-02T13:00:00.000Z",
                        "expiration_date": "2023-03-03T14:30:00.000Z",
                        "validity_timeframe": {
                          "duration": "PT1H",
                          "interval": "P1D"
                        },
                        "validity_day_of_week": [
                          0,
                          1,
                          2,
                          3,
                          4,
                          5
                        ],
                        "object": "earning_rule",
                        "automation_id": "auto_fpfYyNcpVskgwcrs21kQ91Wx",
                        "metadata": {
                          "Type": "Custom Event - proportional points for extending a loyalty tier based on customer metadata."
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/loyalties/{campaignId}/earning-rules/{earningRuleId}": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterCampaignId"
          },
          "name": "campaignId",
          "in": "path",
          "required": true,
          "description": "The campaign ID or name of the loyalty campaign. You can either pass the campaign ID, which was assigned by Voucherify, or the name of the campaign as the path parameter value, e.g., Loyalty%20Campaign. "
        },
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterEarningRuleId"
          },
          "name": "earningRuleId",
          "in": "path",
          "required": true,
          "description": "A unique earning rule ID."
        }
      ],
      "get": {
        "operationId": "get-earning-rule",
        "tags": [
          "Loyalties"
        ],
        "summary": "Get Earning Rule",
        "description": "Retrieves an earning rule assigned to a campaign.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns an earning rule object with the earning rule details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoyaltiesEarningRulesGetResponseBody"
                },
                "examples": {
                  "Custom Event": {
                    "value": {
                      "id": "ern_abvbD0d7Wv4hgr3fTElLb38G",
                      "created_at": "2022-02-07T08:19:41.810Z",
                      "updated_at": null,
                      "validation_rule_id": null,
                      "loyalty": {
                        "points": 2,
                        "type": "FIXED"
                      },
                      "custom_event": {
                        "schema_id": "ms_7JRYC8jXbezBV8AvGYGA0b5R"
                      },
                      "event": "saw_on_facebook",
                      "source": {
                        "banner": "Saw on Facebook Timeframe",
                        "object_id": "camp_Pfja7X91b1GoyH5wnpzCwlP3",
                        "object_type": "campaign"
                      },
                      "active": true,
                      "start_date": "2022-02-07T08:30:00.000Z",
                      "validity_timeframe": {
                        "duration": "PT1H",
                        "interval": "P1D"
                      },
                      "object": "earning_rule",
                      "automation_id": "auto_WTxNMXGJMS5ZdU9oZip3AzuA"
                    }
                  },
                  "Order Paid": {
                    "value": {
                      "id": "ern_taClaOIiaGNdmdby8xS0lCcy",
                      "created_at": "2022-02-04T13:27:50.665Z",
                      "updated_at": "2022-02-07T08:19:44.198Z",
                      "validation_rule_id": null,
                      "loyalty": {
                        "points": 1000,
                        "type": "FIXED"
                      },
                      "event": "order.paid",
                      "source": {
                        "banner": "Order paid 1000 points",
                        "object_id": "camp_Pfja7X91b1GoyH5wnpzCwlP3",
                        "object_type": "campaign"
                      },
                      "active": true,
                      "start_date": "2022-02-02T13:00:00.000Z",
                      "expiration_date": "2022-03-03T14:30:00.000Z",
                      "validity_timeframe": {
                        "duration": "PT1H",
                        "interval": "P1D"
                      },
                      "validity_day_of_week": [
                        4
                      ],
                      "object": "earning_rule",
                      "automation_id": "auto_RjBuwpeFQZ7TyQ5LP2LFVZYG"
                    }
                  },
                  "Segment Entered": {
                    "value": {
                      "id": "ern_3HlFKLMNIfBme9lcHwnMwXON",
                      "created_at": "2022-02-04T13:02:52.937Z",
                      "updated_at": "2022-02-07T08:19:43.291Z",
                      "validation_rule_id": null,
                      "loyalty": {
                        "points": 1000,
                        "type": "FIXED"
                      },
                      "segment": {
                        "id": "seg_WJv55MbzQwnr56ttJ2xUrSgt"
                      },
                      "event": "customer.segment.entered",
                      "source": {
                        "banner": "Entered segment 100 points.",
                        "object_id": "camp_Pfja7X91b1GoyH5wnpzCwlP3",
                        "object_type": "campaign"
                      },
                      "active": true,
                      "start_date": "2022-02-02T13:00:00.000Z",
                      "expiration_date": "2022-03-03T14:30:00.000Z",
                      "validity_timeframe": {
                        "duration": "PT1H",
                        "interval": "P1D"
                      },
                      "validity_day_of_week": [
                        1,
                        2,
                        3,
                        4,
                        5
                      ],
                      "object": "earning_rule",
                      "automation_id": "auto_39wqQSScJJbvpzAF611jnrh9"
                    }
                  },
                  "Loyalty Tier Joined": {
                    "value": {
                      "id": "ern_gVo6CHBduFPoh1hctASfXHLT",
                      "created_at": "2022-11-24T17:01:42.809Z",
                      "updated_at": null,
                      "validation_rule_id": null,
                      "loyalty": {
                        "type": "PROPORTIONAL",
                        "calculation_type": "CUSTOMER_METADATA",
                        "customer": {
                          "metadata": {
                            "every": 4,
                            "points": 4,
                            "property": "customer_life_time_value"
                          }
                        }
                      },
                      "event": "customer.loyalty.tier.joined",
                      "loyalty_tier": {
                        "id": "ltr_pudTGWasuIqxdiDM0go31OV1"
                      },
                      "source": {
                        "banner": "Tier joined",
                        "object_id": "camp_fkZ28pe7DUAEmmabofkxHI8N",
                        "object_type": "campaign"
                      },
                      "active": true,
                      "object": "earning_rule",
                      "automation_id": "auto_wdlEo17wmoqYHGfilbayEUj7",
                      "metadata": {
                        "Type": "Tier joined - customer metadata - proportional"
                      }
                    }
                  },
                  "Loyalty Tier Left": {
                    "value": {
                      "id": "ern_66OdCyLADv5IGFoQe18vGUwa",
                      "created_at": "2022-11-24T17:03:59.414Z",
                      "updated_at": null,
                      "validation_rule_id": null,
                      "loyalty": {
                        "type": "PROPORTIONAL",
                        "calculation_type": "CUSTOMER_METADATA",
                        "customer": {
                          "metadata": {
                            "every": 2,
                            "points": 2,
                            "property": "customer_life_time_value"
                          }
                        }
                      },
                      "event": "customer.loyalty.tier.left",
                      "loyalty_tier": {
                        "id": "ltr_7rVIPlPzdSFwpnbCcUXgwzH2"
                      },
                      "source": {
                        "banner": "Tier left",
                        "object_id": "camp_fkZ28pe7DUAEmmabofkxHI8N",
                        "object_type": "campaign"
                      },
                      "active": true,
                      "object": "earning_rule",
                      "automation_id": "auto_czm5el1Uz1jeGaO97AYoDNAq",
                      "metadata": {
                        "Type": "Tier left"
                      }
                    }
                  },
                  "Loyalty Tier Upgraded": {
                    "value": {
                      "id": "ern_YR3fDfCjAmz9a5D68nk0i4dm",
                      "created_at": "2022-11-25T07:29:38.961Z",
                      "updated_at": null,
                      "validation_rule_id": null,
                      "loyalty": {
                        "type": "PROPORTIONAL",
                        "calculation_type": "CUSTOMER_METADATA",
                        "customer": {
                          "metadata": {
                            "every": 3,
                            "points": 4,
                            "property": "customer_life_time_value"
                          }
                        }
                      },
                      "event": "customer.loyalty.tier.upgraded",
                      "loyalty_tier": {
                        "id": "ltr_30KHciA0UG8B71Fo51GZqwgN"
                      },
                      "source": {
                        "banner": "Tier upgraded",
                        "object_id": "camp_fkZ28pe7DUAEmmabofkxHI8N",
                        "object_type": "campaign"
                      },
                      "active": true,
                      "object": "earning_rule",
                      "automation_id": "auto_M1OdRH8spk6Fs7yTuPLN2LAv",
                      "metadata": {
                        "Type": "Upgraded"
                      }
                    }
                  },
                  "Loyalty Tier Downgraded": {
                    "value": {
                      "id": "ern_A2RArBE30Tkt56utVLrRv7rZ",
                      "created_at": "2022-11-25T07:31:05.866Z",
                      "updated_at": "2022-11-25T07:31:43.029Z",
                      "validation_rule_id": "val_kfmWpfXMI9P1",
                      "loyalty": {
                        "points": 1,
                        "type": "FIXED"
                      },
                      "event": "customer.loyalty.tier.downgraded",
                      "loyalty_tier": {
                        "id": "__ANY__"
                      },
                      "source": {
                        "banner": "Tier Downgraded",
                        "object_id": "camp_fkZ28pe7DUAEmmabofkxHI8N",
                        "object_type": "campaign"
                      },
                      "active": true,
                      "object": "earning_rule",
                      "automation_id": "auto_TMVZtCNMBgZm0KcPJ7otiHZW",
                      "metadata": {
                        "Type": "Tier"
                      }
                    }
                  },
                  "Loyalty Tier Prolonged": {
                    "value": {
                      "id": "ern_AdlWO2yt6b6llWsibIdiRXVE",
                      "created_at": "2022-11-25T07:31:42.767Z",
                      "updated_at": null,
                      "validation_rule_id": null,
                      "loyalty": {
                        "points": 5,
                        "type": "FIXED"
                      },
                      "event": "customer.loyalty.tier.prolonged",
                      "loyalty_tier": {
                        "id": "__ANY__"
                      },
                      "source": {
                        "banner": "Prolonged",
                        "object_id": "camp_fkZ28pe7DUAEmmabofkxHI8N",
                        "object_type": "campaign"
                      },
                      "active": true,
                      "object": "earning_rule",
                      "automation_id": "auto_4jH1yq9WJS0oJ8suagCrltyb",
                      "metadata": {}
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "update-earning-rule",
        "tags": [
          "Loyalties"
        ],
        "summary": "Update Earning Rule",
        "description": "Update an earning rule definition.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "requestBody": {
          "description": "Specify the parameters that you would like to update for the given earning rule.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoyaltiesEarningRulesUpdateRequestBody"
              },
              "examples": {
                "Example": {
                  "value": {
                    "validation_rule_id": "val_7SxpdhPeBngA",
                    "loyalty": {
                      "type": "FIXED",
                      "points": "5"
                    },
                    "source": {
                      "banner": "Order paid 5 points."
                    },
                    "active": true,
                    "start_date": "2022-11-02T13:00:00.000Z",
                    "expiration_date": "2023-03-03T14:30:00.000Z",
                    "validity_timeframe": {
                      "duration": "PT1H",
                      "interval": "P1D"
                    },
                    "validity_day_of_week": [
                      0,
                      1,
                      2,
                      3,
                      4,
                      5
                    ],
                    "metadata": {
                      "Type": "Order paid - fixed amount of points"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "2XX": {
            "description": "Returns the updated earning rule object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoyaltiesEarningRulesUpdateResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "id": "ern_63g6NQgtepfXn2z0QbT2ksLf",
                      "created_at": "2022-11-29T11:10:46.523Z",
                      "updated_at": "2022-11-29T11:30:57.652Z",
                      "validation_rule_id": "val_7SxpdhPeBngA",
                      "loyalty": {
                        "points": 5,
                        "type": "FIXED"
                      },
                      "event": "order.paid",
                      "source": {
                        "banner": "Order paid 5 points.",
                        "object_id": "camp_fkZ28pe7DUAEmmabofkxHI8N",
                        "object_type": "campaign"
                      },
                      "active": true,
                      "start_date": "2022-11-02T13:00:00.000Z",
                      "expiration_date": "2023-03-03T14:30:00.000Z",
                      "validity_timeframe": {
                        "duration": "PT1H",
                        "interval": "P1D"
                      },
                      "validity_day_of_week": [
                        0,
                        1,
                        2,
                        3,
                        4,
                        5
                      ],
                      "object": "earning_rule",
                      "automation_id": "auto_knM56LS3oygL0Ue0oeSNt4WA",
                      "metadata": {
                        "Type": "Order paid - fixed amount of points"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "delete-earning-rule",
        "tags": [
          "Loyalties"
        ],
        "summary": "Delete Earning Rule",
        "description": "This method deletes an earning rule for a specific loyalty campaign.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns no content if deletion is successful."
          }
        }
      }
    },
    "/v1/loyalties/{campaignId}/earning-rules/{earningRuleId}/enable": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterCampaignId"
          },
          "name": "campaignId",
          "in": "path",
          "required": true,
          "description": "Unique campaign ID or name."
        },
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterEarningRuleId"
          },
          "name": "earningRuleId",
          "in": "path",
          "required": true,
          "description": "Unique identifier of an earning rule, assigned by Voucherify."
        }
      ],
      "post": {
        "operationId": "enable-earning-rule",
        "tags": [
          "Loyalties"
        ],
        "summary": "Enable Earning Rule",
        "description": "Enable an earning rule.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns an earning rule object with the `active` parameter set to `true`.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoyaltiesEarningRulesEnableResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "id": "ern_raVUcdXruvXGuzm682ESrAzt",
                      "created_at": "2022-11-24T09:03:14.534Z",
                      "updated_at": "2022-11-25T14:07:39.460Z",
                      "loyalty": {
                        "points": 20,
                        "type": "FIXED"
                      },
                      "event": "order.paid",
                      "source": {
                        "banner": "Order has been paid",
                        "object_id": "camp_fkZ28pe7DUAEmmabofkxHI8N",
                        "object_type": "campaign"
                      },
                      "active": true,
                      "start_date": "2022-11-23T00:00:00.000Z",
                      "expiration_date": "2022-11-30T00:00:00.000Z",
                      "validity_day_of_week": [
                        1,
                        2,
                        3,
                        4,
                        5
                      ],
                      "object": "earning_rule",
                      "automation_id": "auto_MbEIyLbn7pHyba5Qw5eeb35L",
                      "metadata": {
                        "Type": "Order has been paid - Fixed"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/loyalties/{campaignId}/earning-rules/{earningRuleId}/disable": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterCampaignId"
          },
          "name": "campaignId",
          "in": "path",
          "required": true,
          "description": "Unique campaign ID or name."
        },
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterEarningRuleId"
          },
          "name": "earningRuleId",
          "in": "path",
          "required": true,
          "description": "Unique identifier of an earning rule, assigned by Voucherify."
        }
      ],
      "post": {
        "operationId": "disable-earning-rule",
        "tags": [
          "Loyalties"
        ],
        "summary": "Disable Earning Rule",
        "description": "Disable an earning rule.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns an earning rule object with the `active` parameter set to `false`.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoyaltiesEarningRulesDisableResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "id": "ern_A2RArBE30Tkt56utVLrRv7rZ",
                      "created_at": "2022-11-25T07:31:05.866Z",
                      "updated_at": "2022-11-25T14:12:57.167Z",
                      "loyalty": {
                        "points": 1,
                        "type": "FIXED"
                      },
                      "event": "customer.loyalty.tier.downgraded",
                      "loyalty_tier": {
                        "id": "__ANY__"
                      },
                      "source": {
                        "banner": "Tier Downgraded",
                        "object_id": "camp_fkZ28pe7DUAEmmabofkxHI8N",
                        "object_type": "campaign"
                      },
                      "active": false,
                      "object": "earning_rule",
                      "automation_id": "auto_TMVZtCNMBgZm0KcPJ7otiHZW",
                      "metadata": {
                        "Type": "Tier"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/loyalties/members/{memberId}/rewards": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterMemberId"
          },
          "name": "memberId",
          "in": "path",
          "required": true,
          "description": "Unique loyalty card assigned to a particular customer."
        }
      ],
      "get": {
        "operationId": "list-member-rewards",
        "tags": [
          "Loyalties"
        ],
        "summary": "List Member Rewards",
        "description": "Retrieves the list of rewards that the given customer (identified by member_id, which is a loyalty card assigned to a particular customer) **can get in exchange for loyalty points**.  \nYou can use the affordable_only parameter to limit the results to rewards that the customer can actually afford (only rewards whose price in points is not higher than the loyalty points balance on a loyalty card).  \nPlease note that rewards that are disabled (i.e. set to Not Available in the Dashboard) for a given loyalty tier reward mapping will not be returned in this endpoint.",
        "parameters": [
          {
            "in": "query",
            "name": "affordable_only",
            "description": "Limit the results to rewards that the customer can actually afford (only rewards whose price in points is not higher than the loyalty points balance on a loyalty card). Set this flag to true to return rewards which the customer can actually afford.",
            "schema": {
              "$ref": "#/components/schemas/ParameterBoolean"
            }
          }
        ],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns a list of rewards for the given `member_id`. Returns a filtered list if the query parameter `affordable_only` is set to `true`.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoyaltiesMembersRewardsListResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "object": "list",
                      "data_ref": "data",
                      "data": [
                        {
                          "reward": {
                            "id": "rew_C7wS9eHFDN4CIbXI5PpLSkGY",
                            "name": "Material Reward",
                            "type": "MATERIAL",
                            "parameters": {
                              "product": {
                                "id": "prod_0b7d7dfb05cbe5c616",
                                "sku_id": "sku_0b7d7dfb090be5c619"
                              }
                            },
                            "stock": 4,
                            "redeemed": 1,
                            "attributes": {
                              "description": "Get a Comic Book in Archie's series."
                            },
                            "created_at": "2022-08-17T07:46:18.619169+00:00",
                            "updated_at": "2022-08-17T08:13:48.30747+00:00",
                            "metadata": {},
                            "object": "reward"
                          },
                          "assignment": {
                            "id": "rewa_pJYQBXSitK2OVPK3XMXZK76X",
                            "reward_id": "rew_C7wS9eHFDN4CIbXI5PpLSkGY",
                            "related_object_id": "camp_jcErmtGAOmHUAy0oUgkwKnPZ",
                            "related_object_type": "campaign",
                            "parameters": {
                              "loyalty": {
                                "points": 39
                              }
                            },
                            "created_at": "2022-08-24T11:40:22.418972+00:00",
                            "updated_at": "2022-08-24T13:23:50.409121+00:00",
                            "object": "reward_assignment"
                          },
                          "object": "loyalty_reward"
                        },
                        {
                          "reward": {
                            "id": "rew_31M6Za6zkMRfhxYJz4aDo11h",
                            "name": "Pay with Points",
                            "type": "COIN",
                            "parameters": {
                              "coin": {
                                "exchange_ratio": 1,
                                "points_ratio": 1
                              }
                            },
                            "stock": null,
                            "redeemed": null,
                            "attributes": {},
                            "created_at": "2022-06-23T11:06:06.222736+00:00",
                            "updated_at": null,
                            "metadata": null,
                            "object": "reward"
                          },
                          "assignment": {
                            "id": "rewa_wrVYAfXWolq52gnl15dumPCq",
                            "reward_id": "rew_31M6Za6zkMRfhxYJz4aDo11h",
                            "related_object_id": "camp_jcErmtGAOmHUAy0oUgkwKnPZ",
                            "related_object_type": "campaign",
                            "created_at": "2022-08-11T14:13:34.581194+00:00",
                            "updated_at": null,
                            "object": "reward_assignment"
                          },
                          "object": "loyalty_reward"
                        },
                        {
                          "reward": {
                            "id": "rew_Jhq0ecLGSx8eF4pFdlhFr9P6",
                            "name": "20% discount",
                            "type": "CAMPAIGN",
                            "parameters": {
                              "campaign": {
                                "id": "camp_4B1jDE63pCeSij3HU7gx3gPT",
                                "type": "DISCOUNT_COUPONS"
                              }
                            },
                            "stock": null,
                            "redeemed": null,
                            "attributes": {},
                            "created_at": "2022-08-11T09:52:39.032699+00:00",
                            "updated_at": null,
                            "metadata": {},
                            "object": "reward"
                          },
                          "assignment": {
                            "id": "rewa_nFREw86qh1LiqGPRygahNh8Z",
                            "reward_id": "rew_Jhq0ecLGSx8eF4pFdlhFr9P6",
                            "related_object_id": "camp_jcErmtGAOmHUAy0oUgkwKnPZ",
                            "related_object_type": "campaign",
                            "parameters": {
                              "loyalty": {
                                "points": 100
                              }
                            },
                            "created_at": "2022-08-11T14:13:34.581194+00:00",
                            "updated_at": null,
                            "object": "reward_assignment"
                          },
                          "object": "loyalty_reward"
                        },
                        {
                          "reward": {
                            "id": "rew_Dev2yQLodRV33UKPKHTUQWk1",
                            "name": "Get a product",
                            "type": "MATERIAL",
                            "parameters": {
                              "product": {
                                "id": "prod_0b2ac1dab28985cb1e",
                                "sku_id": null
                              }
                            },
                            "stock": 1,
                            "redeemed": 1,
                            "attributes": {
                              "description": "Product"
                            },
                            "created_at": "2022-06-13T10:43:15.929621+00:00",
                            "updated_at": "2022-08-11T15:59:30.820937+00:00",
                            "metadata": null,
                            "object": "reward"
                          },
                          "assignment": {
                            "id": "rewa_SV4gMgPXTXDrsoTyqhY1B2ut",
                            "reward_id": "rew_Dev2yQLodRV33UKPKHTUQWk1",
                            "related_object_id": "camp_jcErmtGAOmHUAy0oUgkwKnPZ",
                            "related_object_type": "campaign",
                            "parameters": {
                              "loyalty": {
                                "points": 4000
                              }
                            },
                            "created_at": "2022-08-11T14:13:34.581194+00:00",
                            "updated_at": null,
                            "object": "reward_assignment"
                          },
                          "object": "loyalty_reward"
                        },
                        {
                          "reward": {
                            "id": "rew_oQEYtUNYcVe2IdBEUBdLfkCD",
                            "name": "Get a comic book",
                            "type": "MATERIAL",
                            "parameters": {
                              "product": {
                                "id": "prod_0b7d7dfb05cbe5c616",
                                "sku_id": null
                              }
                            },
                            "stock": 1,
                            "redeemed": 2,
                            "attributes": {
                              "image_url": "{{internalVoucherifyURL}}",
                              "description": "Archie's Series"
                            },
                            "created_at": "2022-08-11T14:35:44.694611+00:00",
                            "updated_at": "2022-08-17T07:52:56.965366+00:00",
                            "metadata": {
                              "Type": "GR-2"
                            },
                            "object": "reward"
                          },
                          "assignment": {
                            "id": "rewa_7HHH6TjN7Q9WDr5ZePeZUg5p",
                            "reward_id": "rew_oQEYtUNYcVe2IdBEUBdLfkCD",
                            "related_object_id": "camp_jcErmtGAOmHUAy0oUgkwKnPZ",
                            "related_object_type": "campaign",
                            "parameters": {
                              "loyalty": {
                                "points": 10
                              }
                            },
                            "created_at": "2022-08-11T15:44:12.789086+00:00",
                            "updated_at": null,
                            "object": "reward_assignment"
                          },
                          "object": "loyalty_reward"
                        }
                      ],
                      "total": 5
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/loyalties/{campaignId}/reward-assignments/{assignmentId}/reward": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterCampaignId"
          },
          "name": "campaignId",
          "in": "path",
          "required": true,
          "description": "The campaign ID or name of the loyalty campaign. You can either pass the campaign ID, which was assigned by Voucherify, or the name of the campaign as the path parameter value, e.g., Loyalty%20Campaign. "
        },
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterRewardAssignmentId"
          },
          "name": "assignmentId",
          "in": "path",
          "required": true,
          "description": "Unique reward assignment ID."
        }
      ],
      "get": {
        "operationId": "get-reward-details",
        "tags": [
          "Loyalties"
        ],
        "summary": "Get Reward Details",
        "description": "Get reward details in the context of a loyalty campaign and reward assignment ID.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns reward details in the context of a loyalty *campaign* and reward assignment ID.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoyaltiesRewardAssignmentsRewardGetResponseBody"
                },
                "examples": {
                  "Material": {
                    "value": {
                      "id": "rew_Dev2yQLodRV33UKPKHTUQWk1",
                      "name": "Get a product",
                      "type": "MATERIAL",
                      "parameters": {
                        "product": {
                          "id": "prod_0b2ac1dab28985cb1e",
                          "sku_id": null
                        }
                      },
                      "stock": "1",
                      "redeemed": "1",
                      "attributes": {
                        "description": "Product"
                      },
                      "created_at": "2022-06-13T10:43:15.929Z",
                      "updated_at": "2022-08-11T15:59:30.820Z",
                      "metadata": null,
                      "object": "reward"
                    }
                  },
                  "Pay with Points": {
                    "value": {
                      "id": "rew_31M6Za6zkMRfhxYJz4aDo11h",
                      "name": "Pay with Points",
                      "type": "COIN",
                      "parameters": {
                        "coin": {
                          "exchange_ratio": 1,
                          "points_ratio": 1
                        }
                      },
                      "stock": null,
                      "redeemed": null,
                      "attributes": {},
                      "created_at": "2022-06-23T11:06:06.222Z",
                      "updated_at": null,
                      "metadata": null,
                      "object": "reward"
                    }
                  },
                  "Discount Coupon": {
                    "value": {
                      "id": "rew_Jhq0ecLGSx8eF4pFdlhFr9P6",
                      "name": "20% discount",
                      "type": "CAMPAIGN",
                      "parameters": {
                        "campaign": {
                          "id": "camp_4B1jDE63pCeSij3HU7gx3gPT",
                          "type": "DISCOUNT_COUPONS"
                        }
                      },
                      "stock": null,
                      "redeemed": null,
                      "attributes": {},
                      "created_at": "2022-08-11T09:52:39.032Z",
                      "updated_at": null,
                      "metadata": {},
                      "object": "reward"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/loyalties/{campaignId}/reward-assignments": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterCampaignId"
          },
          "name": "campaignId",
          "in": "path",
          "required": true,
          "description": "The campaign ID or name of the loyalty campaign. You can either pass the campaign ID, which was assigned by Voucherify, or the name of the campaign as the path parameter value, e.g., Loyalty%20Campaign. "
        }
      ],
      "get": {
        "operationId": "list-reward-assignments-1",
        "tags": [
          "Loyalties"
        ],
        "summary": "List Reward Assignments",
        "description": "Returns reward assignments from a given loyalty campaign.\n 📘 Alternative endpoint\n This endpoint is an alternative to this endpoint. The URL was re-designed to be more contextual to the type of data returned in the response.",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterRewardAssignmentId"
            },
            "in": "query",
            "name": "assignmentId",
            "description": "A unique reward assignment ID."
          }
        ],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns a dictionary with reward assignment objects.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoyaltiesRewardAssignmentsListResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "object": "list",
                      "data_ref": "data",
                      "data": [
                        {
                          "id": "rewa_2EPffrq151ArmjR7j3CumxGE",
                          "reward_id": "rew_6uCtsIjgcuzi4NW43mKZQWd5",
                          "related_object_id": "camp_Vr97XXNOnFEUIMFymKK99FAA",
                          "related_object_type": "campaign",
                          "parameters": {
                            "loyalty": {
                              "points": 18
                            }
                          },
                          "created_at": "2022-06-22T11:02:19.564Z",
                          "updated_at": null,
                          "object": "reward_assignment"
                        },
                        {
                          "id": "rewa_75e6oBjYfIKUDbM4Dsgg6xAU",
                          "reward_id": "rew_gI4GYbXMeHAJUAIiZCad5LaS",
                          "related_object_id": "camp_Vr97XXNOnFEUIMFymKK99FAA",
                          "related_object_type": "campaign",
                          "parameters": {
                            "loyalty": {
                              "points": 25
                            }
                          },
                          "created_at": "2022-06-22T11:00:49.034Z",
                          "updated_at": null,
                          "object": "reward_assignment"
                        },
                        {
                          "id": "rewa_dJ5nFBpmL8DVhmY1j4zYYOqF",
                          "reward_id": "rew_VSi5rNvb67bn2tqkNwVBBP7u",
                          "related_object_id": "camp_Vr97XXNOnFEUIMFymKK99FAA",
                          "related_object_type": "campaign",
                          "parameters": {
                            "loyalty": {
                              "points": 100
                            }
                          },
                          "created_at": "2022-06-22T10:57:24.051Z",
                          "updated_at": null,
                          "object": "reward_assignment"
                        },
                        {
                          "id": "rewa_874iVl5bHrZFr2FSsG9ilKzF",
                          "reward_id": "rew_QQ73sIywuMoEj6L8K6ft2Mn7",
                          "related_object_id": "camp_Vr97XXNOnFEUIMFymKK99FAA",
                          "related_object_type": "campaign",
                          "created_at": "2022-06-22T10:47:55.934Z",
                          "updated_at": null,
                          "object": "reward_assignment"
                        },
                        {
                          "id": "rewa_GgSlEk4bnR09lMMts6CgR6aV",
                          "reward_id": "rew_URQeO2fgbjxHnulgYVguuidX",
                          "related_object_id": "camp_Vr97XXNOnFEUIMFymKK99FAA",
                          "related_object_type": "campaign",
                          "parameters": {
                            "loyalty": {
                              "points": 9
                            }
                          },
                          "created_at": "2022-06-22T10:21:53.109Z",
                          "updated_at": null,
                          "object": "reward_assignment"
                        },
                        {
                          "id": "rewa_i6VcsXr3ovJ2JCpZk9k1JOj1",
                          "reward_id": "rew_YNr7tRr9TPAiFEJBZBAsuKCq",
                          "related_object_id": "camp_Vr97XXNOnFEUIMFymKK99FAA",
                          "related_object_type": "campaign",
                          "created_at": "2022-06-22T10:18:27.684Z",
                          "updated_at": null,
                          "object": "reward_assignment"
                        },
                        {
                          "id": "rewa_YjTw2InYSVx1nA88brDASS9e",
                          "reward_id": "rew_BUfchmIo7pOR8GrZMw0vVL08",
                          "related_object_id": "camp_Vr97XXNOnFEUIMFymKK99FAA",
                          "related_object_type": "campaign",
                          "parameters": {
                            "loyalty": {
                              "points": 30
                            }
                          },
                          "created_at": "2022-06-22T09:58:12.133Z",
                          "updated_at": null,
                          "object": "reward_assignment"
                        },
                        {
                          "id": "rewa_1gJ6VyYQI0IcnEvhArbr9XFH",
                          "reward_id": "rew_injbwG52POgfpSogTlQl4hA6",
                          "related_object_id": "camp_Vr97XXNOnFEUIMFymKK99FAA",
                          "related_object_type": "campaign",
                          "parameters": {
                            "loyalty": {
                              "points": 10
                            }
                          },
                          "created_at": "2022-06-13T11:56:49.185Z",
                          "updated_at": null,
                          "object": "reward_assignment"
                        },
                        {
                          "id": "rewa_gb6U5byuRh12EvdiL46P4Cxy",
                          "reward_id": "rew_NQB7WbdQLBrFQW1DZmBNcLvH",
                          "related_object_id": "camp_Vr97XXNOnFEUIMFymKK99FAA",
                          "related_object_type": "campaign",
                          "parameters": {
                            "loyalty": {
                              "points": 100
                            }
                          },
                          "created_at": "2022-06-13T11:50:23.429Z",
                          "updated_at": null,
                          "object": "reward_assignment"
                        },
                        {
                          "id": "rewa_hfyF9IGez9i3z5a3Uwlkcg7S",
                          "reward_id": "rew_87ItIc9P5Bky10eS7vEm7Dc7",
                          "related_object_id": "camp_Vr97XXNOnFEUIMFymKK99FAA",
                          "related_object_type": "campaign",
                          "parameters": {
                            "loyalty": {
                              "points": 20
                            }
                          },
                          "created_at": "2022-06-13T11:20:43.961Z",
                          "updated_at": null,
                          "object": "reward_assignment"
                        }
                      ],
                      "total": 12
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/loyalties/{campaignId}/rewards": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterCampaignId"
          },
          "name": "campaignId",
          "in": "path",
          "required": true,
          "description": "Unique campaign ID or name of the loyalty campaign. You can either pass the campaign ID, which was assigned by Voucherify, or the name of the campaign as the path parameter value, e.g., Loyalty%20Campaign. "
        }
      ],
      "get": {
        "operationId": "list-reward-assignments-2",
        "tags": [
          "Loyalties"
        ],
        "summary": "List Reward Assignments",
        "description": "Returns active rewards from a given loyalty campaign.",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterRewardAssignmentId"
            },
            "in": "query",
            "name": "assignment_id",
            "description": "A unique reward assignment ID."
          }
        ],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns a dictionary with reward assignment objects.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoyaltiesRewardsListAssignmentsResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "object": "list",
                      "data_ref": "data",
                      "data": [
                        {
                          "id": "rewa_6VSWcXjfm5PuZlfeuZxl5JZT",
                          "reward_id": "rew_pjJKIZgjIopIPZyibEAt7oPk",
                          "related_object_id": "camp_7s3uXI44aKfIk5IhmeOPr6ic",
                          "related_object_type": "campaign",
                          "created_at": "2022-08-30T08:24:32.171Z",
                          "updated_at": null,
                          "object": "reward_assignment"
                        },
                        {
                          "id": "rewa_7gFZsNg8oiry63FtzML0N52R",
                          "reward_id": "rew_BUfchmIo7pOR8GrZMw0vVL08",
                          "related_object_id": "camp_7s3uXI44aKfIk5IhmeOPr6ic",
                          "related_object_type": "campaign",
                          "parameters": {
                            "loyalty": {
                              "points": 3000000
                            }
                          },
                          "created_at": "2022-05-13T11:14:58.146Z",
                          "updated_at": null,
                          "object": "reward_assignment"
                        },
                        {
                          "id": "rewa_eAGhQSY4FS4T3q4zMkiarHoN",
                          "reward_id": "rew_nIy4gHpQHle2c3pNMwuj7G6j",
                          "related_object_id": "camp_7s3uXI44aKfIk5IhmeOPr6ic",
                          "related_object_type": "campaign",
                          "parameters": {
                            "loyalty": {
                              "points": 100
                            }
                          },
                          "created_at": "2022-02-28T11:56:55.241Z",
                          "updated_at": null,
                          "object": "reward_assignment"
                        }
                      ],
                      "total": 3
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "create-reward-assignment-1",
        "tags": [
          "Loyalties"
        ],
        "summary": "Create Reward Assignment",
        "description": "Add rewards to a loyalty campaign.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "requestBody": {
          "description": "Define the cost of the rewards in loyalty points.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoyaltiesRewardsCreateAssignmentRequestBody"
              },
              "examples": {
                "Example": {
                  "value": [
                    {
                      "reward": "rew_wg2pvCr5LDhCq4uVQZ9LhuZm",
                      "parameters": {
                        "loyalty": {
                          "points": 2
                        }
                      }
                    },
                    {
                      "reward": "rew_z35ffKoH0tCcck8EL56p6SIs",
                      "parameters": {
                        "loyalty": {
                          "points": 2
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "2XX": {
            "description": "Returns a list of reward assignment objects.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoyaltiesRewardsCreateAssignmentResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": [
                      {
                        "id": "rewa_Iw9VopmlLm0topBG17ZH1gp5",
                        "reward_id": "rew_wg2pvCr5LDhCq4uVQZ9LhuZm",
                        "related_object_id": "camp_fkZ28pe7DUAEmmabofkxHI8N",
                        "related_object_type": "campaign",
                        "parameters": {
                          "loyalty": {
                            "points": 2
                          }
                        },
                        "created_at": "2022-11-28T18:54:19.747Z",
                        "updated_at": null,
                        "object": "reward_assignment"
                      },
                      {
                        "id": "rewa_tAFZ7cHiTwZyOg1QaWHt6yYv",
                        "reward_id": "rew_z35ffKoH0tCcck8EL56p6SIs",
                        "related_object_id": "camp_fkZ28pe7DUAEmmabofkxHI8N",
                        "related_object_type": "campaign",
                        "parameters": {
                          "loyalty": {
                            "points": 2
                          }
                        },
                        "created_at": "2022-11-28T18:54:19.747Z",
                        "updated_at": null,
                        "object": "reward_assignment"
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/loyalties/{campaignId}/reward-assignments/{assignmentId}": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterCampaignId"
          },
          "name": "campaignId",
          "in": "path",
          "required": true,
          "description": "The campaign ID or name of the loyalty campaign. You can either pass the campaign ID, which was assigned by Voucherify, or the name of the campaign as the path parameter value, e.g., Loyalty%20Campaign. "
        },
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterRewardAssignmentId"
          },
          "name": "assignmentId",
          "in": "path",
          "required": true,
          "description": "Unique reward assignment ID."
        }
      ],
      "get": {
        "operationId": "get-reward-assignment-1",
        "tags": [
          "Loyalties"
        ],
        "summary": "Get Reward Assignment",
        "description": "Retrieve specific reward assignment.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns specific reward assignment.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoyaltiesRewardAssignmentsGetResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "id": "rewa_1gJ6VyYQI0IcnEvhArbr9XFH",
                      "reward_id": "rew_injbwG52POgfpSogTlQl4hA6",
                      "related_object_id": "camp_Vr97XXNOnFEUIMFymKK99FAA",
                      "related_object_type": "campaign",
                      "parameters": {
                        "loyalty": {
                          "points": 10
                        }
                      },
                      "created_at": "2022-06-13T11:56:49.185Z",
                      "updated_at": null,
                      "object": "reward_assignment"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/loyalties/{campaignId}/rewards/{assignmentId}": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterCampaignId"
          },
          "name": "campaignId",
          "in": "path",
          "required": true,
          "description": "The campaign ID or name of the loyalty campaign. You can either pass the campaign ID, which was assigned by Voucherify, or the name of the campaign as the path parameter value, e.g., Loyalty%20Campaign. "
        },
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterRewardAssignmentId"
          },
          "name": "assignmentId",
          "in": "path",
          "required": true,
          "description": "A unique reward assignment ID."
        }
      ],
      "get": {
        "operationId": "get-reward-assignment-2",
        "tags": [
          "Loyalties"
        ],
        "summary": "Get Reward Assignment",
        "description": "Retrieve specific reward assignment.\n 📘 Alternative endpoint\n This endpoint is an alternative to this endpoint. ",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns specific reward assignment.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoyaltiesRewardsGetResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "id": "rewa_1gJ6VyYQI0IcnEvhArbr9XFH",
                      "reward_id": "rew_injbwG52POgfpSogTlQl4hA6",
                      "related_object_id": "camp_Vr97XXNOnFEUIMFymKK99FAA",
                      "related_object_type": "campaign",
                      "parameters": {
                        "loyalty": {
                          "points": 10
                        }
                      },
                      "created_at": "2022-06-13T11:56:49.185Z",
                      "updated_at": null,
                      "object": "reward_assignment"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "update-reward-assignment-1",
        "tags": [
          "Loyalties"
        ],
        "summary": "Update Reward Assignment",
        "description": "Updates rewards parameters, i.e. the points cost for the specific reward.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns a reward assignment with an updated points value.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoyaltiesRewardsUpdateAssignmentResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "id": "rewa_Iw9VopmlLm0topBG17ZH1gp5",
                      "reward_id": "rew_wg2pvCr5LDhCq4uVQZ9LhuZm",
                      "related_object_id": "camp_fkZ28pe7DUAEmmabofkxHI8N",
                      "related_object_type": "campaign",
                      "parameters": {
                        "loyalty": {
                          "points": 3
                        }
                      },
                      "created_at": "2022-11-28T18:54:19.747Z",
                      "updated_at": "2022-11-28T19:27:40.604Z",
                      "object": "reward_assignment"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Update the points cost for the reward assignment.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoyaltiesRewardsUpdateAssignmentRequestBody"
              },
              "examples": {
                "Example": {
                  "value": {
                    "parameters": {
                      "loyalty": {
                        "points": 3
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "delete-reward-assignment-1",
        "tags": [
          "Loyalties"
        ],
        "summary": "Delete Reward Assignment",
        "description": "This method deletes a reward assignment for a particular loyalty campaign.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns no content if deletion is successful."
          }
        }
      }
    },
    "/v1/loyalties/{campaignId}/members/{memberId}/redemption": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterCampaignId"
          },
          "name": "campaignId",
          "in": "path",
          "required": true,
          "description": "Unique campaign ID."
        },
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterMemberId"
          },
          "name": "memberId",
          "in": "path",
          "required": true,
          "description": "A code that identifies the loyalty card."
        }
      ],
      "post": {
        "operationId": "redeem-reward-1",
        "tags": [
          "Loyalties"
        ],
        "summary": "Redeem Reward",
        "description": "Exchange points from a loyalty card for a specified reward. This API method returns an assigned award in the response. It means that if a requesting customer gets a coupon code with a discount for the next order, that discount code will be visible in response as part of the reward object definition.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns a redemption object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoyaltiesMembersRedemptionRedeemResponseBody"
                },
                "examples": {
                  "Redeem Reward that adds points to a loyalty card": {
                    "value": {
                      "id": "r_0c6b3abbfe8e60a9dd",
                      "object": "redemption",
                      "date": "2023-02-06T09:07:55.514Z",
                      "customer_id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                      "tracking_id": "track_9B0kB92+bJa8a+PegaWREw==",
                      "metadata": null,
                      "amount": 1,
                      "result": "SUCCESS",
                      "order": null,
                      "customer": {
                        "id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                        "name": "Bob Jones",
                        "email": "bob.jones@email.com",
                        "source_id": "36_bob",
                        "metadata": {
                          "age": 26,
                          "favorite_brands": [
                            "Nike",
                            "Adidas",
                            "Reebok"
                          ],
                          "accepts_marketing": false,
                          "acquisition_channel": "Facebook"
                        },
                        "object": "customer"
                      },
                      "related_object_type": "voucher",
                      "related_object_id": "v_u3dRiZ0XHqX5Euhy5ezB5UQ5Sf85VXFP",
                      "voucher": {
                        "id": "v_u3dRiZ0XHqX5Euhy5ezB5UQ5Sf85VXFP",
                        "code": "AnsvocvP",
                        "campaign": "Loyalty Campaign - Test Points",
                        "campaign_id": "camp_22noMlhTADb7Fq2UL3vWu3d1",
                        "category": null,
                        "category_id": "cat_0bb81a481615a37b5e",
                        "categories": [],
                        "type": "LOYALTY_CARD",
                        "discount": null,
                        "gift": null,
                        "loyalty_card": {
                          "points": 8000,
                          "balance": 6887
                        },
                        "start_date": null,
                        "expiration_date": null,
                        "validity_timeframe": null,
                        "validity_day_of_week": null,
                        "active": true,
                        "additional_info": null,
                        "metadata": {},
                        "assets": {
                          "qr": {
                            "id": "U2FsdGVkX1/Au841M0T7UjYYRxYTzCRbNdZW6jW5YRNcV9PgblvN2MD5hdRuZfBRHEAm+d2pvzc2FOVHFkuh9BQoaIq4KVyvy0FvkWtKkMLe4zO+qL4ocNUIbaRMSLeY6Xiz4hjxKNq918oLyGrp9w==",
                            "url": "{{internalVoucherifyURL}}"
                          },
                          "barcode": {
                            "id": "U2FsdGVkX1+xG42zWo9nivfp6tg5jNuFCYOIFtw7iwas8kcA/8H4gu04dxO/hrbD41gFvxDhCuTSnIKwIPg9dEXzOvh8qy9VWN0UwDc6PL7lfNQuY+8Os7dqVsyNhoRned9pBo1uO6V4pjNu1gRTrw==",
                            "url": "{{internalVoucherifyURL}}"
                          }
                        },
                        "is_referral_code": false,
                        "created_at": "2022-11-10T06:28:59.970Z",
                        "updated_at": "2023-02-06T09:07:55.515Z",
                        "holder_id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                        "holder": {
                          "id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                          "source_id": "36_bob",
                          "metadata": {
                            "age": 26,
                            "favorite_brands": [
                              "Nike",
                              "Adidas",
                              "Reebok"
                            ],
                            "accepts_marketing": false,
                            "acquisition_channel": "Facebook"
                          },
                          "object": "customer"
                        },
                        "validation_rules_assignments": {
                          "object": "list",
                          "data_ref": "data",
                          "data": [],
                          "total": 0
                        },
                        "redemption": {
                          "quantity": null,
                          "redeemed_quantity": 9,
                          "redeemed_points": 1113,
                          "object": "list",
                          "url": "/v1/vouchers/AnsvocvP/redemptions?page=1&limit=10"
                        },
                        "publish": {
                          "object": "list",
                          "count": 1,
                          "url": "/v1/vouchers/AnsvocvP/publications?page=1&limit=10"
                        },
                        "object": "voucher",
                        "applicable_to": {
                          "data": [],
                          "total": 0,
                          "data_ref": "data",
                          "object": "list"
                        },
                        "inapplicable_to": {
                          "data": [],
                          "total": 0,
                          "data_ref": "data",
                          "object": "list"
                        }
                      },
                      "reward": {
                        "customer": {
                          "id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                          "name": "Bob Jones",
                          "email": "bob.jones@email.com",
                          "source_id": "36_bob",
                          "metadata": {
                            "age": 26,
                            "favorite_brands": [
                              "Nike",
                              "Adidas",
                              "Reebok"
                            ],
                            "accepts_marketing": false,
                            "acquisition_channel": "Facebook"
                          },
                          "object": "customer"
                        },
                        "assignment_id": "rewa_BpytIepuSekuXXwb9qkLJfCU",
                        "voucher": {
                          "id": "v_pQZDYaH8LzoOvgh3234DqZQjGJgbPov6",
                          "code": "LOYALTY-CARD-zOR2sV9Q",
                          "campaign": "Loyalty Program",
                          "campaign_id": "camp_Hpt5hPTA8kSKRWGxBGw8Y0So",
                          "category": null,
                          "category_id": null,
                          "categories": [],
                          "type": "LOYALTY_CARD",
                          "discount": null,
                          "gift": null,
                          "loyalty_card": {
                            "points": 1020,
                            "balance": 890
                          },
                          "start_date": null,
                          "expiration_date": null,
                          "validity_timeframe": null,
                          "validity_day_of_week": null,
                          "active": true,
                          "additional_info": null,
                          "metadata": {},
                          "assets": {
                            "qr": {
                              "id": "U2FsdGVkX1/THRRj1QegAan0r5U+wRoHuFEA6FR7TrvZm8N+8cK7niF/8uAqFdVYTU1JD0/CdoSXlYqiGgz3PAFOGWFSJt8vkM50fcMtMNLsaudU+YrPDeT2HCB7o0Ts7h1FnbD85+0F7lwrbKmkGW6kub0mjCaRdJYS/axIAq4=",
                              "url": "{{internalVoucherifyURL}}"
                            },
                            "barcode": {
                              "id": "U2FsdGVkX1+yREd0zRAfZY9uwtMZsl4eDd8+LeiKGVI5OzOQRpjhtV91IuEe7/SXEW8m4F2Llg2//yieX2zsP3UtWasWxw8ZkHMRSIdxfxzSdSj8ap0dI5xwKW4OE1Q6Sgsb+kZVfCKUHbwXCcd8y5a6xTpVIg97y74Ng1Vg2PY=",
                              "url": "{{internalVoucherifyURL}}"
                            }
                          },
                          "is_referral_code": false,
                          "created_at": "2022-07-11T08:19:28.780Z",
                          "updated_at": "2023-01-25T15:44:33.500Z",
                          "holder_id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                          "redemption": {
                            "quantity": null,
                            "redeemed_quantity": 26,
                            "redeemed_points": 130,
                            "object": "list",
                            "url": "/v1/vouchers/LOYALTY-CARD-zOR2sV9Q/redemptions?page=1&limit=10"
                          },
                          "publish": {
                            "object": "list",
                            "count": 1,
                            "url": "/v1/vouchers/LOYALTY-CARD-zOR2sV9Q/publications?page=1&limit=10"
                          },
                          "object": "voucher"
                        },
                        "id": "rew_7ZM476Q77dH5KvHk4KzoRNvF",
                        "object": "reward",
                        "name": "Present on Loyalty Card",
                        "created_at": "2023-01-25T15:43:40.716Z",
                        "updated_at": null,
                        "parameters": {
                          "campaign": {
                            "id": "camp_Hpt5hPTA8kSKRWGxBGw8Y0So",
                            "balance": 20,
                            "type": "LOYALTY_PROGRAM"
                          }
                        },
                        "type": "CAMPAIGN"
                      },
                      "loyalty_card": {
                        "points": 1
                      }
                    }
                  },
                  "Redeem Reward that adds credits to a gift card": {
                    "value": {
                      "id": "r_0c6b3bedf3478a0167",
                      "object": "redemption",
                      "date": "2023-02-06T09:13:08.813Z",
                      "customer_id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                      "tracking_id": "track_9B0kB92+bJa8a+PegaWREw==",
                      "metadata": null,
                      "amount": 1,
                      "result": "SUCCESS",
                      "order": null,
                      "customer": {
                        "id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                        "name": "Bob Jones",
                        "email": "bob.jones@email.com",
                        "source_id": "36_bob",
                        "metadata": {
                          "age": 26,
                          "favorite_brands": [
                            "Nike",
                            "Adidas",
                            "Reebok"
                          ],
                          "accepts_marketing": false,
                          "acquisition_channel": "Facebook"
                        },
                        "object": "customer"
                      },
                      "related_object_type": "voucher",
                      "related_object_id": "v_u3dRiZ0XHqX5Euhy5ezB5UQ5Sf85VXFP",
                      "voucher": {
                        "id": "v_u3dRiZ0XHqX5Euhy5ezB5UQ5Sf85VXFP",
                        "code": "AnsvocvP",
                        "campaign": "Loyalty Campaign - Test Points",
                        "campaign_id": "camp_22noMlhTADb7Fq2UL3vWu3d1",
                        "category": null,
                        "category_id": "cat_0bb81a481615a37b5e",
                        "categories": [],
                        "type": "LOYALTY_CARD",
                        "discount": null,
                        "gift": null,
                        "loyalty_card": {
                          "points": 8000,
                          "balance": 6886
                        },
                        "start_date": null,
                        "expiration_date": null,
                        "validity_timeframe": null,
                        "validity_day_of_week": null,
                        "active": true,
                        "additional_info": null,
                        "metadata": {},
                        "assets": {
                          "qr": {
                            "id": "U2FsdGVkX1/Au841M0T7UjYYRxYTzCRbNdZW6jW5YRNcV9PgblvN2MD5hdRuZfBRHEAm+d2pvzc2FOVHFkuh9BQoaIq4KVyvy0FvkWtKkMLe4zO+qL4ocNUIbaRMSLeY6Xiz4hjxKNq918oLyGrp9w==",
                            "url": "{{internalVoucherifyURL}}"
                          },
                          "barcode": {
                            "id": "U2FsdGVkX1+xG42zWo9nivfp6tg5jNuFCYOIFtw7iwas8kcA/8H4gu04dxO/hrbD41gFvxDhCuTSnIKwIPg9dEXzOvh8qy9VWN0UwDc6PL7lfNQuY+8Os7dqVsyNhoRned9pBo1uO6V4pjNu1gRTrw==",
                            "url": "{{internalVoucherifyURL}}"
                          }
                        },
                        "is_referral_code": false,
                        "created_at": "2022-11-10T06:28:59.970Z",
                        "updated_at": "2023-02-06T09:13:08.814Z",
                        "holder_id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                        "holder": {
                          "id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                          "source_id": "36_bob",
                          "metadata": {
                            "age": 26,
                            "favorite_brands": [
                              "Nike",
                              "Adidas",
                              "Reebok"
                            ],
                            "accepts_marketing": false,
                            "acquisition_channel": "Facebook"
                          },
                          "object": "customer"
                        },
                        "validation_rules_assignments": {
                          "object": "list",
                          "data_ref": "data",
                          "data": [],
                          "total": 0
                        },
                        "redemption": {
                          "quantity": null,
                          "redeemed_quantity": 10,
                          "redeemed_points": 1114,
                          "object": "list",
                          "url": "/v1/vouchers/AnsvocvP/redemptions?page=1&limit=10"
                        },
                        "publish": {
                          "object": "list",
                          "count": 1,
                          "url": "/v1/vouchers/AnsvocvP/publications?page=1&limit=10"
                        },
                        "object": "voucher",
                        "applicable_to": {
                          "data": [],
                          "total": 0,
                          "data_ref": "data",
                          "object": "list"
                        },
                        "inapplicable_to": {
                          "data": [],
                          "total": 0,
                          "data_ref": "data",
                          "object": "list"
                        }
                      },
                      "reward": {
                        "customer": {
                          "id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                          "name": "Bob Jones",
                          "email": "bob.jones@email.com",
                          "source_id": "36_bob",
                          "metadata": {
                            "age": 26,
                            "favorite_brands": [
                              "Nike",
                              "Adidas",
                              "Reebok"
                            ],
                            "accepts_marketing": false,
                            "acquisition_channel": "Facebook"
                          },
                          "object": "customer"
                        },
                        "assignment_id": "rewa_U554pL2BhDIDZOvZ8y9YQ9hA",
                        "voucher": {
                          "id": "v_hS8JFl8S6lNcd1L69wLIoXgTio7eWEgk",
                          "code": "GIFT-CARD-xwc6X7Tk",
                          "campaign": "Gift Cards",
                          "campaign_id": "camp_kdxp3vf1clQ9CFs1jpqv3tZe",
                          "category": null,
                          "category_id": "cat_0bb81a481615a37b5e",
                          "categories": [],
                          "type": "GIFT_VOUCHER",
                          "discount": null,
                          "gift": {
                            "amount": 59080,
                            "balance": 48780
                          },
                          "loyalty_card": null,
                          "start_date": null,
                          "expiration_date": null,
                          "validity_timeframe": null,
                          "validity_day_of_week": null,
                          "active": true,
                          "additional_info": null,
                          "metadata": {},
                          "assets": {
                            "qr": {
                              "id": "U2FsdGVkX19SdT2kQZokSFsMRa5NmGvsHunHReeb4gF9b5LtLA4rCTM/aTyHCYfr7kRWb2vv08WIgY/Tv53SJGW+k2keqfsTq/Ohb5shkCN3FTFsaI8gulTp616sEGn/JJoIInIoNkO9Vd1+AfrKiAjmirCmekE6cz2SVCyNAXs=",
                              "url": "{{internalVoucherifyURL}}"
                            },
                            "barcode": {
                              "id": "U2FsdGVkX18vWc/qplwajJz4RIIy2wDUcAXVo1KEmyXx2IJy44xxHg608po3RizU9OYOzKelOAEjXFf7E4BS5Q01s4dds8Du70LGAp3idYMKAaXIjMTcFjMNczNO6ULK7r4eDx2Np8jvO/199U+zicnFNWqg/jF5ZCQW+6jO1q8=",
                              "url": "{{internalVoucherifyURL}}"
                            }
                          },
                          "is_referral_code": false,
                          "created_at": "2022-07-08T09:44:33.179Z",
                          "updated_at": "2023-01-25T14:42:25.214Z",
                          "holder_id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                          "redemption": {
                            "quantity": null,
                            "redeemed_quantity": 7,
                            "redeemed_amount": 10300,
                            "object": "list",
                            "url": "/v1/vouchers/GIFT-CARD-xwc6X7Tk/redemptions?page=1&limit=10"
                          },
                          "publish": {
                            "object": "list",
                            "count": 1,
                            "url": "/v1/vouchers/GIFT-CARD-xwc6X7Tk/publications?page=1&limit=10"
                          },
                          "object": "voucher"
                        },
                        "id": "rew_6bvM4vnaVdbPVQxYpuN37rhH",
                        "object": "reward",
                        "name": "Present Credits on Gift Card",
                        "created_at": "2023-01-25T14:41:31.858Z",
                        "updated_at": null,
                        "parameters": {
                          "campaign": {
                            "id": "camp_kdxp3vf1clQ9CFs1jpqv3tZe",
                            "balance": 4000,
                            "type": "GIFT_VOUCHERS"
                          }
                        },
                        "type": "CAMPAIGN"
                      },
                      "loyalty_card": {
                        "points": 1
                      }
                    }
                  },
                  "Redeem Reward that gives a discount coupon": {
                    "value": {
                      "id": "r_0c6b3ca77e0e60b534",
                      "object": "redemption",
                      "date": "2023-02-06T09:16:18.808Z",
                      "customer_id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                      "tracking_id": "track_9B0kB92+bJa8a+PegaWREw==",
                      "metadata": null,
                      "amount": 2,
                      "result": "SUCCESS",
                      "order": null,
                      "customer": {
                        "id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                        "name": "Bob Jones",
                        "email": "bob.jones@email.com",
                        "source_id": "36_bob",
                        "metadata": {
                          "age": 26,
                          "favorite_brands": [
                            "Nike",
                            "Adidas",
                            "Reebok"
                          ],
                          "accepts_marketing": false,
                          "acquisition_channel": "Facebook"
                        },
                        "object": "customer"
                      },
                      "related_object_type": "voucher",
                      "related_object_id": "v_u3dRiZ0XHqX5Euhy5ezB5UQ5Sf85VXFP",
                      "voucher": {
                        "id": "v_u3dRiZ0XHqX5Euhy5ezB5UQ5Sf85VXFP",
                        "code": "AnsvocvP",
                        "campaign": "Loyalty Campaign - Test Points",
                        "campaign_id": "camp_22noMlhTADb7Fq2UL3vWu3d1",
                        "category": null,
                        "category_id": "cat_0bb81a481615a37b5e",
                        "categories": [],
                        "type": "LOYALTY_CARD",
                        "discount": null,
                        "gift": null,
                        "loyalty_card": {
                          "points": 8000,
                          "balance": 6884
                        },
                        "start_date": null,
                        "expiration_date": null,
                        "validity_timeframe": null,
                        "validity_day_of_week": null,
                        "active": true,
                        "additional_info": null,
                        "metadata": {},
                        "assets": {
                          "qr": {
                            "id": "U2FsdGVkX1/Au841M0T7UjYYRxYTzCRbNdZW6jW5YRNcV9PgblvN2MD5hdRuZfBRHEAm+d2pvzc2FOVHFkuh9BQoaIq4KVyvy0FvkWtKkMLe4zO+qL4ocNUIbaRMSLeY6Xiz4hjxKNq918oLyGrp9w==",
                            "url": "{{internalVoucherifyURL}}"
                          },
                          "barcode": {
                            "id": "U2FsdGVkX1+xG42zWo9nivfp6tg5jNuFCYOIFtw7iwas8kcA/8H4gu04dxO/hrbD41gFvxDhCuTSnIKwIPg9dEXzOvh8qy9VWN0UwDc6PL7lfNQuY+8Os7dqVsyNhoRned9pBo1uO6V4pjNu1gRTrw==",
                            "url": "{{internalVoucherifyURL}}"
                          }
                        },
                        "is_referral_code": false,
                        "created_at": "2022-11-10T06:28:59.970Z",
                        "updated_at": "2023-02-06T09:16:18.809Z",
                        "holder_id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                        "holder": {
                          "id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                          "source_id": "36_bob",
                          "metadata": {
                            "age": 26,
                            "favorite_brands": [
                              "Nike",
                              "Adidas",
                              "Reebok"
                            ],
                            "accepts_marketing": false,
                            "acquisition_channel": "Facebook"
                          },
                          "object": "customer"
                        },
                        "validation_rules_assignments": {
                          "object": "list",
                          "data_ref": "data",
                          "data": [],
                          "total": 0
                        },
                        "redemption": {
                          "quantity": null,
                          "redeemed_quantity": 11,
                          "redeemed_points": 1116,
                          "object": "list",
                          "url": "/v1/vouchers/AnsvocvP/redemptions?page=1&limit=10"
                        },
                        "publish": {
                          "object": "list",
                          "count": 1,
                          "url": "/v1/vouchers/AnsvocvP/publications?page=1&limit=10"
                        },
                        "object": "voucher",
                        "applicable_to": {
                          "data": [],
                          "total": 0,
                          "data_ref": "data",
                          "object": "list"
                        },
                        "inapplicable_to": {
                          "data": [],
                          "total": 0,
                          "data_ref": "data",
                          "object": "list"
                        }
                      },
                      "reward": {
                        "customer": {
                          "id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                          "name": "Bob Jones",
                          "email": "bob.jones@email.com",
                          "source_id": "36_bob",
                          "metadata": {
                            "age": 26,
                            "favorite_brands": [
                              "Nike",
                              "Adidas",
                              "Reebok"
                            ],
                            "accepts_marketing": false,
                            "acquisition_channel": "Facebook"
                          },
                          "object": "customer"
                        },
                        "assignment_id": "rewa_0ZwLAHgeU9IrI2V1ofYRmW7g",
                        "voucher": {
                          "id": "v_a3Ba1neDwPa3rBE0HkDd0C7CbiehBulo",
                          "code": "HAPPY-ORDERctb",
                          "campaign": "$20 off the entire order",
                          "campaign_id": "camp_5h0wc453_4",
                          "category": null,
                          "category_id": "cat_0b688929a2476386a6",
                          "categories": [],
                          "type": "DISCOUNT_VOUCHER",
                          "discount": {
                            "type": "AMOUNT",
                            "amount_off": 2000,
                            "effect": "APPLY_TO_ORDER"
                          },
                          "gift": null,
                          "loyalty_card": null,
                          "start_date": "2022-09-20T00:00:00.000Z",
                          "expiration_date": "2022-09-30T00:00:00.000Z",
                          "validity_timeframe": null,
                          "validity_day_of_week": null,
                          "active": true,
                          "additional_info": null,
                          "metadata": {},
                          "assets": {
                            "qr": {
                              "id": "7d646e7d-9b5a-40b6-a44e-6bae848e108e",
                              "url": "{{internalVoucherifyURL}}"
                            },
                            "barcode": {
                              "id": "dfb3e48d-ce4f-4187-a114-483feb4ca88d",
                              "url": "{{internalVoucherifyURL}}"
                            }
                          },
                          "is_referral_code": false,
                          "created_at": "2023-02-06T09:16:18.845Z",
                          "updated_at": null,
                          "holder_id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                          "redemption": {
                            "quantity": null,
                            "redeemed_quantity": 0,
                            "object": "list",
                            "url": "/v1/vouchers/HAPPY-ORDERctb/redemptions?page=1&limit=10"
                          },
                          "publish": {
                            "object": "list",
                            "count": 1,
                            "url": "/v1/vouchers/HAPPY-ORDERctb/publications?page=1&limit=10"
                          },
                          "object": "voucher"
                        },
                        "id": "rew_MF4hKh1IKYgJkPjbcFbH94Ho",
                        "object": "reward",
                        "name": "Digital Present",
                        "created_at": "2023-01-25T12:16:44.557Z",
                        "updated_at": null,
                        "parameters": {
                          "campaign": {
                            "id": "camp_5h0wc453_4",
                            "type": "DISCOUNT_COUPONS"
                          }
                        },
                        "type": "CAMPAIGN"
                      },
                      "loyalty_card": {
                        "points": 2
                      }
                    }
                  },
                  "Redeem a Material reward of a SKU type": {
                    "value": {
                      "id": "r_0c6b3d1357878a0813",
                      "object": "redemption",
                      "date": "2023-02-06T09:18:09.246Z",
                      "customer_id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                      "tracking_id": "track_9B0kB92+bJa8a+PegaWREw==",
                      "metadata": null,
                      "amount": 6,
                      "result": "SUCCESS",
                      "order": null,
                      "customer": {
                        "id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                        "name": "Bob Jones",
                        "email": "bob.jones@email.com",
                        "source_id": "36_bob",
                        "metadata": {
                          "age": 26,
                          "favorite_brands": [
                            "Nike",
                            "Adidas",
                            "Reebok"
                          ],
                          "accepts_marketing": false,
                          "acquisition_channel": "Facebook"
                        },
                        "object": "customer"
                      },
                      "related_object_type": "voucher",
                      "related_object_id": "v_u3dRiZ0XHqX5Euhy5ezB5UQ5Sf85VXFP",
                      "voucher": {
                        "id": "v_u3dRiZ0XHqX5Euhy5ezB5UQ5Sf85VXFP",
                        "code": "AnsvocvP",
                        "campaign": "Loyalty Campaign - Test Points",
                        "campaign_id": "camp_22noMlhTADb7Fq2UL3vWu3d1",
                        "category": null,
                        "category_id": "cat_0bb81a481615a37b5e",
                        "categories": [],
                        "type": "LOYALTY_CARD",
                        "discount": null,
                        "gift": null,
                        "loyalty_card": {
                          "points": 8000,
                          "balance": 6878
                        },
                        "start_date": null,
                        "expiration_date": null,
                        "validity_timeframe": null,
                        "validity_day_of_week": null,
                        "active": true,
                        "additional_info": null,
                        "metadata": {},
                        "assets": {
                          "qr": {
                            "id": "U2FsdGVkX1/Au841M0T7UjYYRxYTzCRbNdZW6jW5YRNcV9PgblvN2MD5hdRuZfBRHEAm+d2pvzc2FOVHFkuh9BQoaIq4KVyvy0FvkWtKkMLe4zO+qL4ocNUIbaRMSLeY6Xiz4hjxKNq918oLyGrp9w==",
                            "url": "{{internalVoucherifyURL}}"
                          },
                          "barcode": {
                            "id": "U2FsdGVkX1+xG42zWo9nivfp6tg5jNuFCYOIFtw7iwas8kcA/8H4gu04dxO/hrbD41gFvxDhCuTSnIKwIPg9dEXzOvh8qy9VWN0UwDc6PL7lfNQuY+8Os7dqVsyNhoRned9pBo1uO6V4pjNu1gRTrw==",
                            "url": "{{internalVoucherifyURL}}"
                          }
                        },
                        "is_referral_code": false,
                        "created_at": "2022-11-10T06:28:59.970Z",
                        "updated_at": "2023-02-06T09:18:09.247Z",
                        "holder_id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                        "holder": {
                          "id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                          "source_id": "36_bob",
                          "metadata": {
                            "age": 26,
                            "favorite_brands": [
                              "Nike",
                              "Adidas",
                              "Reebok"
                            ],
                            "accepts_marketing": false,
                            "acquisition_channel": "Facebook"
                          },
                          "object": "customer"
                        },
                        "validation_rules_assignments": {
                          "object": "list",
                          "data_ref": "data",
                          "data": [],
                          "total": 0
                        },
                        "redemption": {
                          "quantity": null,
                          "redeemed_quantity": 12,
                          "redeemed_points": 1122,
                          "object": "list",
                          "url": "/v1/vouchers/AnsvocvP/redemptions?page=1&limit=10"
                        },
                        "publish": {
                          "object": "list",
                          "count": 1,
                          "url": "/v1/vouchers/AnsvocvP/publications?page=1&limit=10"
                        },
                        "object": "voucher",
                        "applicable_to": {
                          "data": [],
                          "total": 0,
                          "data_ref": "data",
                          "object": "list"
                        },
                        "inapplicable_to": {
                          "data": [],
                          "total": 0,
                          "data_ref": "data",
                          "object": "list"
                        }
                      },
                      "reward": {
                        "customer": {
                          "id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                          "name": "Bob Jones",
                          "email": "bob.jones@email.com",
                          "source_id": "36_bob",
                          "metadata": {
                            "age": 26,
                            "favorite_brands": [
                              "Nike",
                              "Adidas",
                              "Reebok"
                            ],
                            "accepts_marketing": false,
                            "acquisition_channel": "Facebook"
                          },
                          "object": "customer"
                        },
                        "assignment_id": "rewa_gfpRNkOT0pwzF7P5tXWXOs4H",
                        "product": {
                          "id": "prod_5h0wc453_2",
                          "source_id": "jonah-nystrom-bourbon",
                          "name": "Johan & Nyström - Bourbon",
                          "price": null,
                          "attributes": [
                            "categories",
                            "description",
                            "weight"
                          ],
                          "metadata": {
                            "company": "Johan & Nyström",
                            "showcase": true
                          },
                          "image_url": null,
                          "created_at": "2021-12-01T08:00:49.418Z",
                          "updated_at": null,
                          "object": "product"
                        },
                        "sku": {
                          "id": "sku_0a3efc9044dd121803",
                          "source_id": "jonah-nystrom-bourbon-250g",
                          "product_id": "prod_5h0wc453_2",
                          "sku": "250g",
                          "price": 1750,
                          "currency": null,
                          "attributes": {
                            "categories": "Coffee, Whole Bean",
                            "description": "Background for this blend comes from the longing for a real dark roasting of high-quality coffee beans. Although the beans are dark roasted, they keep their clear and intense aroma. This coffee has a smoky flavour with a slight hint of sweetness and loads of fruit notes. Thanks to the experience in the dark roasting of coffee, the beans still retain most of their aromas. Its aftertaste is clear and remains for a long time. This coffee is perfect for a Dripper, French Press, Moka coffee maker and the traditional espresso brewing method.",
                            "weight": 250
                          },
                          "image_url": null,
                          "metadata": {},
                          "created_at": "2021-12-01T08:00:49.427Z",
                          "updated_at": null,
                          "object": "sku"
                        },
                        "id": "rew_SfQCsap5R8UBTVbdMTRx10x8",
                        "object": "reward",
                        "name": "Present - SKU",
                        "created_at": "2023-01-25T12:10:16.060Z",
                        "updated_at": "2023-01-25T12:10:59.662Z",
                        "parameters": {
                          "product": {
                            "id": "prod_5h0wc453_2",
                            "sku_id": "sku_0a3efc9044dd121803"
                          }
                        },
                        "type": "MATERIAL"
                      },
                      "loyalty_card": {
                        "points": 6
                      }
                    }
                  },
                  "Redeem a Material Reward of a Product Type": {
                    "value": {
                      "id": "r_0c6b3d8c35546f8673",
                      "object": "redemption",
                      "date": "2023-02-06T09:20:13.013Z",
                      "customer_id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                      "tracking_id": "track_9B0kB92+bJa8a+PegaWREw==",
                      "metadata": null,
                      "amount": 4,
                      "result": "SUCCESS",
                      "order": null,
                      "customer": {
                        "id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                        "name": "Bob Jones",
                        "email": "bob.jones@voucherify.io",
                        "source_id": "36_bob",
                        "metadata": {
                          "age": 26,
                          "favorite_brands": [
                            "Nike",
                            "Adidas",
                            "Reebok"
                          ],
                          "accepts_marketing": false,
                          "acquisition_channel": "Facebook"
                        },
                        "object": "customer"
                      },
                      "related_object_type": "voucher",
                      "related_object_id": "v_u3dRiZ0XHqX5Euhy5ezB5UQ5Sf85VXFP",
                      "voucher": {
                        "id": "v_u3dRiZ0XHqX5Euhy5ezB5UQ5Sf85VXFP",
                        "code": "AnsvocvP",
                        "campaign": "Loyalty Campaign - Test Points",
                        "campaign_id": "camp_22noMlhTADb7Fq2UL3vWu3d1",
                        "category": null,
                        "category_id": "cat_0bb81a481615a37b5e",
                        "categories": [],
                        "type": "LOYALTY_CARD",
                        "discount": null,
                        "gift": null,
                        "loyalty_card": {
                          "points": 8000,
                          "balance": 6874
                        },
                        "start_date": null,
                        "expiration_date": null,
                        "validity_timeframe": null,
                        "validity_day_of_week": null,
                        "active": true,
                        "additional_info": null,
                        "metadata": {},
                        "assets": {
                          "qr": {
                            "id": "U2FsdGVkX1/Au841M0T7UjYYRxYTzCRbNdZW6jW5YRNcV9PgblvN2MD5hdRuZfBRHEAm+d2pvzc2FOVHFkuh9BQoaIq4KVyvy0FvkWtKkMLe4zO+qL4ocNUIbaRMSLeY6Xiz4hjxKNq918oLyGrp9w==",
                            "url": "{{internalVoucherifyURL}}"
                          },
                          "barcode": {
                            "id": "U2FsdGVkX1+xG42zWo9nivfp6tg5jNuFCYOIFtw7iwas8kcA/8H4gu04dxO/hrbD41gFvxDhCuTSnIKwIPg9dEXzOvh8qy9VWN0UwDc6PL7lfNQuY+8Os7dqVsyNhoRned9pBo1uO6V4pjNu1gRTrw==",
                            "url": "{{internalVoucherifyURL}}"
                          }
                        },
                        "is_referral_code": false,
                        "created_at": "2022-11-10T06:28:59.970Z",
                        "updated_at": "2023-02-06T09:20:13.014Z",
                        "holder_id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                        "holder": {
                          "id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                          "source_id": "36_bob",
                          "metadata": {
                            "age": 26,
                            "favorite_brands": [
                              "Nike",
                              "Adidas",
                              "Reebok"
                            ],
                            "accepts_marketing": false,
                            "acquisition_channel": "Facebook"
                          },
                          "object": "customer"
                        },
                        "validation_rules_assignments": {
                          "object": "list",
                          "data_ref": "data",
                          "data": [],
                          "total": 0
                        },
                        "redemption": {
                          "quantity": null,
                          "redeemed_quantity": 13,
                          "redeemed_points": 1126,
                          "object": "list",
                          "url": "/v1/vouchers/AnsvocvP/redemptions?page=1&limit=10"
                        },
                        "publish": {
                          "object": "list",
                          "count": 1,
                          "url": "/v1/vouchers/AnsvocvP/publications?page=1&limit=10"
                        },
                        "object": "voucher",
                        "applicable_to": {
                          "data": [],
                          "total": 0,
                          "data_ref": "data",
                          "object": "list"
                        },
                        "inapplicable_to": {
                          "data": [],
                          "total": 0,
                          "data_ref": "data",
                          "object": "list"
                        }
                      },
                      "reward": {
                        "customer": {
                          "id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                          "name": "Bob Jones",
                          "email": "bob.jones@voucherify.io",
                          "source_id": "36_bob",
                          "metadata": {
                            "age": 26,
                            "favorite_brands": [
                              "Nike",
                              "Adidas",
                              "Reebok"
                            ],
                            "accepts_marketing": false,
                            "acquisition_channel": "Facebook"
                          },
                          "object": "customer"
                        },
                        "assignment_id": "rewa_LRx3Y1iHFWTt217NVrknkpi5",
                        "product": {
                          "id": "prod_0b2c2ddf35150b83bb",
                          "source_id": "97",
                          "name": "[Sample] Tiered Wire Basket",
                          "price": 11995,
                          "attributes": [],
                          "metadata": {
                            "source": "bigcommerce",
                            "bigcommerce_product_categories": [
                              21,
                              23
                            ]
                          },
                          "image_url": null,
                          "created_at": "2022-06-03T13:36:16.084Z",
                          "updated_at": "2022-06-07T09:10:44.644Z",
                          "object": "product"
                        },
                        "id": "rew_EPx1hCTpqzF0HW1z9NKckZH4",
                        "object": "reward",
                        "name": "Present",
                        "created_at": "2022-06-13T06:59:01.694Z",
                        "updated_at": "2023-02-03T15:04:14.102Z",
                        "parameters": {
                          "product": {
                            "id": "prod_0b2c2ddf35150b83bb",
                            "sku_id": null
                          }
                        },
                        "type": "MATERIAL"
                      },
                      "loyalty_card": {
                        "points": 4
                      }
                    }
                  },
                  "Redeem Pay with Points Reward": {
                    "value": {
                      "id": "r_0c6b4142ecc78a21d0",
                      "object": "redemption",
                      "date": "2023-02-06T09:36:26.547Z",
                      "customer_id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                      "tracking_id": "track_9B0kB92+bJa8a+PegaWREw==",
                      "metadata": null,
                      "amount": 2300,
                      "result": "SUCCESS",
                      "order": {
                        "id": "ord_QBnrJlVWA2EEiZoKOptFROnp",
                        "source_id": null,
                        "created_at": "2023-02-06T09:36:26.503Z",
                        "updated_at": null,
                        "status": "PAID",
                        "amount": 45000,
                        "discount_amount": 45000,
                        "total_discount_amount": 45000,
                        "total_amount": 0,
                        "applied_discount_amount": 45000,
                        "total_applied_discount_amount": 45000,
                        "items": [
                          {
                            "object": "order_item",
                            "product_id": "prod_0c5d6689b39320059b",
                            "quantity": 1,
                            "product": {
                              "id": "prod_0c5d6689b39320059b",
                              "source_id": "prod_anJ03RZZq74z4v",
                              "name": "Apple iPhone 8"
                            }
                          },
                          {
                            "object": "order_item",
                            "product_id": "prod_0b2c36568000039138",
                            "quantity": 2,
                            "amount": 45000,
                            "price": 22500,
                            "subtotal_amount": 45000,
                            "product": {
                              "id": "prod_0b2c36568000039138",
                              "source_id": "86",
                              "name": "[Sample] Able Brewing System",
                              "price": 22500
                            }
                          }
                        ],
                        "metadata": {},
                        "customer": {
                          "id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                          "object": "customer"
                        },
                        "customer_id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                        "referrer_id": null,
                        "object": "order",
                        "redemptions": {
                          "r_0c6b4142ecc78a21d0": {
                            "date": "2023-02-06T09:36:26.547Z",
                            "related_object_type": "voucher",
                            "related_object_id": "v_u3dRiZ0XHqX5Euhy5ezB5UQ5Sf85VXFP",
                            "related_object_parent_id": "camp_22noMlhTADb7Fq2UL3vWu3d1"
                          }
                        }
                      },
                      "customer": {
                        "id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                        "name": "Bob Jones",
                        "email": "bob.jones@email.com",
                        "source_id": "36_bob",
                        "metadata": {
                          "age": 26,
                          "favorite_brands": [
                            "Nike",
                            "Adidas",
                            "Reebok"
                          ],
                          "accepts_marketing": false,
                          "acquisition_channel": "Facebook"
                        },
                        "object": "customer"
                      },
                      "related_object_type": "voucher",
                      "related_object_id": "v_u3dRiZ0XHqX5Euhy5ezB5UQ5Sf85VXFP",
                      "voucher": {
                        "id": "v_u3dRiZ0XHqX5Euhy5ezB5UQ5Sf85VXFP",
                        "code": "AnsvocvP",
                        "campaign": "Loyalty Campaign - Test Points",
                        "campaign_id": "camp_22noMlhTADb7Fq2UL3vWu3d1",
                        "category": null,
                        "category_id": "cat_0bb81a481615a37b5e",
                        "categories": [],
                        "type": "LOYALTY_CARD",
                        "discount": null,
                        "gift": null,
                        "loyalty_card": {
                          "points": 8000,
                          "balance": 4574
                        },
                        "start_date": null,
                        "expiration_date": null,
                        "validity_timeframe": null,
                        "validity_day_of_week": null,
                        "active": true,
                        "additional_info": null,
                        "metadata": {},
                        "assets": {
                          "qr": {
                            "id": "U2FsdGVkX1/Au841M0T7UjYYRxYTzCRbNdZW6jW5YRNcV9PgblvN2MD5hdRuZfBRHEAm+d2pvzc2FOVHFkuh9BQoaIq4KVyvy0FvkWtKkMLe4zO+qL4ocNUIbaRMSLeY6Xiz4hjxKNq918oLyGrp9w==",
                            "url": "{{internalVoucherifyURL}}"
                          },
                          "barcode": {
                            "id": "U2FsdGVkX1+xG42zWo9nivfp6tg5jNuFCYOIFtw7iwas8kcA/8H4gu04dxO/hrbD41gFvxDhCuTSnIKwIPg9dEXzOvh8qy9VWN0UwDc6PL7lfNQuY+8Os7dqVsyNhoRned9pBo1uO6V4pjNu1gRTrw==",
                            "url": "{{internalVoucherifyURL}}"
                          }
                        },
                        "is_referral_code": false,
                        "created_at": "2022-11-10T06:28:59.970Z",
                        "updated_at": "2023-02-06T09:36:26.548Z",
                        "holder_id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                        "holder": {
                          "id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                          "source_id": "36_bob",
                          "metadata": {
                            "age": 26,
                            "favorite_brands": [
                              "Nike",
                              "Adidas",
                              "Reebok"
                            ],
                            "accepts_marketing": false,
                            "acquisition_channel": "Facebook"
                          },
                          "object": "customer"
                        },
                        "validation_rules_assignments": {
                          "object": "list",
                          "data_ref": "data",
                          "data": [],
                          "total": 0
                        },
                        "redemption": {
                          "quantity": null,
                          "redeemed_quantity": 14,
                          "redeemed_points": 3426,
                          "object": "list",
                          "url": "/v1/vouchers/AnsvocvP/redemptions?page=1&limit=10"
                        },
                        "publish": {
                          "object": "list",
                          "count": 1,
                          "url": "/v1/vouchers/AnsvocvP/publications?page=1&limit=10"
                        },
                        "object": "voucher",
                        "applicable_to": {
                          "data": [],
                          "total": 0,
                          "data_ref": "data",
                          "object": "list"
                        },
                        "inapplicable_to": {
                          "data": [],
                          "total": 0,
                          "data_ref": "data",
                          "object": "list"
                        }
                      },
                      "reward": {
                        "customer": {
                          "id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                          "name": "Bob Jones",
                          "email": "bob.jones@email.com",
                          "source_id": "36_bob",
                          "metadata": {
                            "age": 26,
                            "favorite_brands": [
                              "Nike",
                              "Adidas",
                              "Reebok"
                            ],
                            "accepts_marketing": false,
                            "acquisition_channel": "Facebook"
                          },
                          "object": "customer"
                        },
                        "assignment_id": "rewa_YAIuU7AY6LNJVlUbRxSbNgiD",
                        "id": "rew_INt3fGH3n7xIr3ZQcq4kkUZ1",
                        "object": "reward",
                        "name": "100 = $20",
                        "created_at": "2022-11-10T06:28:39.582Z",
                        "updated_at": null,
                        "parameters": {
                          "coin": {
                            "exchange_ratio": 20,
                            "points_ratio": 100
                          }
                        },
                        "type": "COIN"
                      },
                      "loyalty_card": {
                        "points": 2300
                      }
                    }
                  },
                  "Redeem Pay with Points Reward with a specific amount of points": {
                    "value": {
                      "id": "r_0c6b423368146fa4bb",
                      "object": "redemption",
                      "date": "2023-02-06T09:40:32.800Z",
                      "customer_id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                      "tracking_id": "track_9B0kB92+bJa8a+PegaWREw==",
                      "metadata": null,
                      "amount": 100,
                      "result": "SUCCESS",
                      "order": {
                        "id": "ord_1L67XS8EYDDp5A4B3k62G2tr",
                        "source_id": null,
                        "created_at": "2023-02-06T09:40:32.784Z",
                        "updated_at": null,
                        "status": "PAID",
                        "amount": 45000,
                        "discount_amount": 2000,
                        "total_discount_amount": 2000,
                        "total_amount": 43000,
                        "applied_discount_amount": 2000,
                        "total_applied_discount_amount": 2000,
                        "items": [
                          {
                            "object": "order_item",
                            "product_id": "prod_0c5d6689b39320059b",
                            "quantity": 1,
                            "product": {
                              "id": "prod_0c5d6689b39320059b",
                              "source_id": "prod_anJ03RZZq74z4v",
                              "name": "Apple iPhone 8"
                            }
                          },
                          {
                            "object": "order_item",
                            "product_id": "prod_0b2c36568000039138",
                            "quantity": 2,
                            "amount": 45000,
                            "price": 22500,
                            "subtotal_amount": 45000,
                            "product": {
                              "id": "prod_0b2c36568000039138",
                              "source_id": "86",
                              "name": "[Sample] Able Brewing System",
                              "price": 22500
                            }
                          }
                        ],
                        "metadata": {},
                        "customer": {
                          "id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                          "object": "customer"
                        },
                        "customer_id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                        "referrer_id": null,
                        "object": "order",
                        "redemptions": {
                          "r_0c6b423368146fa4bb": {
                            "date": "2023-02-06T09:40:32.800Z",
                            "related_object_type": "voucher",
                            "related_object_id": "v_u3dRiZ0XHqX5Euhy5ezB5UQ5Sf85VXFP",
                            "related_object_parent_id": "camp_22noMlhTADb7Fq2UL3vWu3d1"
                          }
                        }
                      },
                      "customer": {
                        "id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                        "name": "Bob Jones",
                        "email": "bob.jones@email.com",
                        "source_id": "36_bob",
                        "metadata": {
                          "age": 26,
                          "favorite_brands": [
                            "Nike",
                            "Adidas",
                            "Reebok"
                          ],
                          "accepts_marketing": false,
                          "acquisition_channel": "Facebook"
                        },
                        "object": "customer"
                      },
                      "related_object_type": "voucher",
                      "related_object_id": "v_u3dRiZ0XHqX5Euhy5ezB5UQ5Sf85VXFP",
                      "voucher": {
                        "id": "v_u3dRiZ0XHqX5Euhy5ezB5UQ5Sf85VXFP",
                        "code": "AnsvocvP",
                        "campaign": "Loyalty Campaign - Test Points",
                        "campaign_id": "camp_22noMlhTADb7Fq2UL3vWu3d1",
                        "category": null,
                        "category_id": "cat_0bb81a481615a37b5e",
                        "categories": [],
                        "type": "LOYALTY_CARD",
                        "discount": null,
                        "gift": null,
                        "loyalty_card": {
                          "points": 8500,
                          "balance": 4974
                        },
                        "start_date": null,
                        "expiration_date": null,
                        "validity_timeframe": null,
                        "validity_day_of_week": null,
                        "active": true,
                        "additional_info": null,
                        "metadata": {},
                        "assets": {
                          "qr": {
                            "id": "U2FsdGVkX1/Au841M0T7UjYYRxYTzCRbNdZW6jW5YRNcV9PgblvN2MD5hdRuZfBRHEAm+d2pvzc2FOVHFkuh9BQoaIq4KVyvy0FvkWtKkMLe4zO+qL4ocNUIbaRMSLeY6Xiz4hjxKNq918oLyGrp9w==",
                            "url": "{{internalVoucherifyURL}}"
                          },
                          "barcode": {
                            "id": "U2FsdGVkX1+xG42zWo9nivfp6tg5jNuFCYOIFtw7iwas8kcA/8H4gu04dxO/hrbD41gFvxDhCuTSnIKwIPg9dEXzOvh8qy9VWN0UwDc6PL7lfNQuY+8Os7dqVsyNhoRned9pBo1uO6V4pjNu1gRTrw==",
                            "url": "{{internalVoucherifyURL}}"
                          }
                        },
                        "is_referral_code": false,
                        "created_at": "2022-11-10T06:28:59.970Z",
                        "updated_at": "2023-02-06T09:40:32.801Z",
                        "holder_id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                        "holder": {
                          "id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                          "source_id": "36_bob",
                          "metadata": {
                            "age": 26,
                            "favorite_brands": [
                              "Nike",
                              "Adidas",
                              "Reebok"
                            ],
                            "accepts_marketing": false,
                            "acquisition_channel": "Facebook"
                          },
                          "object": "customer"
                        },
                        "validation_rules_assignments": {
                          "object": "list",
                          "data_ref": "data",
                          "data": [],
                          "total": 0
                        },
                        "redemption": {
                          "quantity": null,
                          "redeemed_quantity": 15,
                          "redeemed_points": 3526,
                          "object": "list",
                          "url": "/v1/vouchers/AnsvocvP/redemptions?page=1&limit=10"
                        },
                        "publish": {
                          "object": "list",
                          "count": 1,
                          "url": "/v1/vouchers/AnsvocvP/publications?page=1&limit=10"
                        },
                        "object": "voucher",
                        "applicable_to": {
                          "data": [],
                          "total": 0,
                          "data_ref": "data",
                          "object": "list"
                        },
                        "inapplicable_to": {
                          "data": [],
                          "total": 0,
                          "data_ref": "data",
                          "object": "list"
                        }
                      },
                      "reward": {
                        "customer": {
                          "id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                          "name": "Bob Jones",
                          "email": "bob.jones@email.com",
                          "source_id": "36_bob",
                          "metadata": {
                            "age": 26,
                            "favorite_brands": [
                              "Nike",
                              "Adidas",
                              "Reebok"
                            ],
                            "accepts_marketing": false,
                            "acquisition_channel": "Facebook"
                          },
                          "object": "customer"
                        },
                        "assignment_id": "rewa_YAIuU7AY6LNJVlUbRxSbNgiD",
                        "id": "rew_INt3fGH3n7xIr3ZQcq4kkUZ1",
                        "object": "reward",
                        "name": "100 = $20",
                        "created_at": "2022-11-10T06:28:39.582Z",
                        "updated_at": null,
                        "parameters": {
                          "coin": {
                            "exchange_ratio": 20,
                            "points_ratio": 100
                          }
                        },
                        "type": "COIN"
                      },
                      "loyalty_card": {
                        "points": 100
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Specify the reward to be redeemed. In case of a pay with points reward, specify the order and the number of points to be applied to the order. Please note that if you do not specify the amount of points, the application will default to applying the number of points to pay for the remainder of the order. If the limit of available points on the card is reached, then only the available points on the card will be applied to the order.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoyaltiesMembersRedemptionRedeemRequestBody"
              },
              "examples": {
                "Pay with Points": {
                  "value": {
                    "reward": {
                      "id": "rew_INt3fGH3n7xIr3ZQcq4kkUZ1",
                      "points": 100
                    },
                    "order": {
                      "items": [
                        {
                          "product_id": "prod_0c5d6689b39320059b",
                          "quantity": "1"
                        },
                        {
                          "product_id": "prod_0b2c36568000039138",
                          "quantity": "2"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/loyalties/members/{memberId}/redemption": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterMemberId"
          },
          "name": "memberId",
          "in": "path",
          "required": true,
          "description": "Unique loyalty card assigned to a particular customer."
        }
      ],
      "post": {
        "operationId": "redeem-reward",
        "tags": [
          "Loyalties"
        ],
        "summary": "Redeem Reward",
        "description": "\n 📘 Alternative endpoint\n This endpoint is an alternative to this endpoint. The URL was re-designed to allow you to redeem a reward without having to provide the campaignId as a path parameter.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns a redemption object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoyaltiesMembersRedemptionRedeemResponseBody"
                },
                "examples": {
                  "Redeem Pay with Points Reward with a specific number of Points": {
                    "value": {
                      "id": "r_0c6b4bf721439bf02b",
                      "object": "redemption",
                      "date": "2023-02-06T10:23:12.517Z",
                      "customer_id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                      "tracking_id": "track_9B0kB92+bJa8a+PegaWREw==",
                      "metadata": null,
                      "amount": 100,
                      "result": "SUCCESS",
                      "order": {
                        "id": "ord_71Ayjxq2gFV80v3OP3qrxh37",
                        "source_id": null,
                        "created_at": "2023-02-06T10:23:12.485Z",
                        "updated_at": null,
                        "status": "PAID",
                        "amount": 45000,
                        "discount_amount": 2000,
                        "total_discount_amount": 2000,
                        "total_amount": 43000,
                        "applied_discount_amount": 2000,
                        "total_applied_discount_amount": 2000,
                        "items": [
                          {
                            "object": "order_item",
                            "product_id": "prod_0c5d6689b39320059b",
                            "quantity": 1,
                            "product": {
                              "id": "prod_0c5d6689b39320059b",
                              "source_id": "prod_anJ03RZZq74z4v",
                              "name": "Apple iPhone 8"
                            }
                          },
                          {
                            "object": "order_item",
                            "product_id": "prod_0b2c36568000039138",
                            "quantity": 2,
                            "amount": 45000,
                            "price": 22500,
                            "subtotal_amount": 45000,
                            "product": {
                              "id": "prod_0b2c36568000039138",
                              "source_id": "86",
                              "name": "[Sample] Able Brewing System",
                              "price": 22500
                            }
                          }
                        ],
                        "metadata": {},
                        "customer": {
                          "id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                          "object": "customer"
                        },
                        "customer_id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                        "referrer_id": null,
                        "object": "order",
                        "redemptions": {
                          "r_0c6b4bf721439bf02b": {
                            "date": "2023-02-06T10:23:12.517Z",
                            "related_object_type": "voucher",
                            "related_object_id": "v_u3dRiZ0XHqX5Euhy5ezB5UQ5Sf85VXFP",
                            "related_object_parent_id": "camp_22noMlhTADb7Fq2UL3vWu3d1"
                          }
                        }
                      },
                      "customer": {
                        "id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                        "name": "Bob Jones",
                        "email": "bob.jones@email.com",
                        "source_id": "36_bob",
                        "metadata": {
                          "age": 26,
                          "favorite_brands": [
                            "Nike",
                            "Adidas",
                            "Reebok"
                          ],
                          "accepts_marketing": false,
                          "acquisition_channel": "Facebook"
                        },
                        "object": "customer"
                      },
                      "related_object_type": "voucher",
                      "related_object_id": "v_u3dRiZ0XHqX5Euhy5ezB5UQ5Sf85VXFP",
                      "voucher": {
                        "id": "v_u3dRiZ0XHqX5Euhy5ezB5UQ5Sf85VXFP",
                        "code": "AnsvocvP",
                        "campaign": "Loyalty Campaign - Test Points",
                        "campaign_id": "camp_22noMlhTADb7Fq2UL3vWu3d1",
                        "category": null,
                        "category_id": "cat_0bb81a481615a37b5e",
                        "categories": [],
                        "type": "LOYALTY_CARD",
                        "discount": null,
                        "gift": null,
                        "loyalty_card": {
                          "points": 9000,
                          "balance": 5374
                        },
                        "start_date": null,
                        "expiration_date": null,
                        "validity_timeframe": null,
                        "validity_day_of_week": null,
                        "active": true,
                        "additional_info": null,
                        "metadata": {},
                        "assets": {
                          "qr": {
                            "id": "U2FsdGVkX1/Au841M0T7UjYYRxYTzCRbNdZW6jW5YRNcV9PgblvN2MD5hdRuZfBRHEAm+d2pvzc2FOVHFkuh9BQoaIq4KVyvy0FvkWtKkMLe4zO+qL4ocNUIbaRMSLeY6Xiz4hjxKNq918oLyGrp9w==",
                            "url": "{{internalVoucherifyURL}}"
                          },
                          "barcode": {
                            "id": "U2FsdGVkX1+xG42zWo9nivfp6tg5jNuFCYOIFtw7iwas8kcA/8H4gu04dxO/hrbD41gFvxDhCuTSnIKwIPg9dEXzOvh8qy9VWN0UwDc6PL7lfNQuY+8Os7dqVsyNhoRned9pBo1uO6V4pjNu1gRTrw==",
                            "url": "{{internalVoucherifyURL}}"
                          }
                        },
                        "is_referral_code": false,
                        "created_at": "2022-11-10T06:28:59.970Z",
                        "updated_at": "2023-02-06T10:23:12.517Z",
                        "holder_id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                        "holder": {
                          "id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                          "source_id": "36_bob",
                          "metadata": {
                            "age": 26,
                            "favorite_brands": [
                              "Nike",
                              "Adidas",
                              "Reebok"
                            ],
                            "accepts_marketing": false,
                            "acquisition_channel": "Facebook"
                          },
                          "object": "customer"
                        },
                        "validation_rules_assignments": {
                          "object": "list",
                          "data_ref": "data",
                          "data": [],
                          "total": 0
                        },
                        "redemption": {
                          "quantity": null,
                          "redeemed_quantity": 16,
                          "redeemed_points": 3626,
                          "object": "list",
                          "url": "/v1/vouchers/AnsvocvP/redemptions?page=1&limit=10"
                        },
                        "publish": {
                          "object": "list",
                          "count": 1,
                          "url": "/v1/vouchers/AnsvocvP/publications?page=1&limit=10"
                        },
                        "object": "voucher",
                        "applicable_to": {
                          "data": [],
                          "total": 0,
                          "data_ref": "data",
                          "object": "list"
                        },
                        "inapplicable_to": {
                          "data": [],
                          "total": 0,
                          "data_ref": "data",
                          "object": "list"
                        }
                      },
                      "reward": {
                        "customer": {
                          "id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                          "name": "Bob Jones",
                          "email": "bob.jones@email.com",
                          "source_id": "36_bob",
                          "metadata": {
                            "age": 26,
                            "favorite_brands": [
                              "Nike",
                              "Adidas",
                              "Reebok"
                            ],
                            "accepts_marketing": false,
                            "acquisition_channel": "Facebook"
                          },
                          "object": "customer"
                        },
                        "assignment_id": "rewa_YAIuU7AY6LNJVlUbRxSbNgiD",
                        "id": "rew_INt3fGH3n7xIr3ZQcq4kkUZ1",
                        "object": "reward",
                        "name": "100 = $20",
                        "created_at": "2022-11-10T06:28:39.582Z",
                        "updated_at": null,
                        "parameters": {
                          "coin": {
                            "exchange_ratio": 20,
                            "points_ratio": 100
                          }
                        },
                        "type": "COIN"
                      },
                      "loyalty_card": {
                        "points": 100
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Specify the reward to be redeemed. In case of a pay with points reward, specify the order and the number of points to be applied to the order. Please note that if you do not specify the amount of points, the application will default to applying the number of points to pay for the remainder of the order. If the limit of available points on the card is reached, then only the available points on the card will be applied to the order.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoyaltiesMembersRedemptionRedeemRequestBody"
              },
              "examples": {
                "Pay with Points": {
                  "value": {
                    "reward": {
                      "id": "rew_INt3fGH3n7xIr3ZQcq4kkUZ1",
                      "points": 100
                    },
                    "order": {
                      "items": [
                        {
                          "product_id": "prod_0c5d6689b39320059b",
                          "quantity": "1"
                        },
                        {
                          "product_id": "prod_0b2c36568000039138",
                          "quantity": "2"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/loyalties/{campaignId}/tiers": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterCampaignId"
          },
          "name": "campaignId",
          "in": "path",
          "required": true,
          "description": "Unique loyalty campaign ID or name."
        }
      ],
      "get": {
        "operationId": "list-loyalty-tiers",
        "tags": [
          "Loyalties"
        ],
        "summary": "List Loyalty Tiers",
        "description": "Retrieve a list of loyalty tiers which were added to the loyalty program.",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterOrderListLoyaltyTiers"
            },
            "in": "query",
            "name": "order",
            "description": "Sorts the results using one of the filtering options, where the dash - preceding a sorting option means sorting in a descending order."
          }
        ],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns a list of loyalty tier objects.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoyaltiesTiersListResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "object": "list",
                      "data_ref": "data",
                      "data": [
                        {
                          "id": "ltr_30KHciA0UG8B71Fo51GZqwgN",
                          "name": "Bottom",
                          "campaign_id": "camp_fkZ28pe7DUAEmmabofkxHI8N",
                          "metadata": {},
                          "created_at": "2022-11-10T12:20:52.755Z",
                          "updated_at": "2022-11-25T11:27:58.616Z",
                          "earning_rules": {
                            "ern_95aq3JaE5A8xzHjoJPYNRqXZ": {
                              "type": "MULTIPLY",
                              "multiplier": 1
                            },
                            "ern_raVUcdXruvXGuzm682ESrAzt": {
                              "type": "CUSTOM",
                              "points": 5
                            }
                          },
                          "rewards": {
                            "rewa_t88DnSdNnE0IzQX6gqH3jHGQ": {
                              "type": "MULTIPLY",
                              "multiplier": 4
                            }
                          },
                          "config": {
                            "points": {
                              "from": 1,
                              "to": 249
                            }
                          },
                          "points": {
                            "from": 1,
                            "to": 249
                          },
                          "object": "loyalty_tier"
                        },
                        {
                          "id": "ltr_pudTGWasuIqxdiDM0go31OV1",
                          "name": "Middle",
                          "campaign_id": "camp_fkZ28pe7DUAEmmabofkxHI8N",
                          "metadata": {},
                          "created_at": "2022-11-10T12:20:52.755Z",
                          "updated_at": "2022-11-25T11:27:58.579Z",
                          "earning_rules": {
                            "ern_95aq3JaE5A8xzHjoJPYNRqXZ": {
                              "type": "MULTIPLY",
                              "multiplier": 2
                            }
                          },
                          "rewards": {},
                          "config": {
                            "points": {
                              "from": 250,
                              "to": 499
                            }
                          },
                          "points": {
                            "from": 250,
                            "to": 499
                          },
                          "object": "loyalty_tier"
                        },
                        {
                          "id": "ltr_7rVIPlPzdSFwpnbCcUXgwzH2",
                          "name": "Tier 1 - Top",
                          "campaign_id": "camp_fkZ28pe7DUAEmmabofkxHI8N",
                          "metadata": {
                            "has_funds": true
                          },
                          "created_at": "2022-11-09T06:26:54.797Z",
                          "updated_at": "2022-11-25T11:27:58.578Z",
                          "earning_rules": {
                            "ern_95aq3JaE5A8xzHjoJPYNRqXZ": {
                              "type": "MULTIPLY",
                              "multiplier": 3
                            },
                            "ern_AdlWO2yt6b6llWsibIdiRXVE": {
                              "type": "MULTIPLY",
                              "multiplier": 5
                            },
                            "ern_HnRXyJHoj3E79r3KUWhgMgtD": {
                              "type": "MULTIPLY",
                              "multiplier": 3
                            },
                            "ern_raVUcdXruvXGuzm682ESrAzt": {
                              "type": "CUSTOM",
                              "points": 200
                            }
                          },
                          "rewards": {
                            "rewa_Or6gWZ5ASuGkBLjOf0IyiD4k": {
                              "type": "CUSTOM",
                              "points": 300
                            }
                          },
                          "config": {
                            "points": {
                              "from": 500,
                              "to": 1000
                            }
                          },
                          "points": {
                            "from": 500,
                            "to": 1000
                          },
                          "object": "loyalty_tier"
                        }
                      ],
                      "total": 3
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "create-in-bulk-loyalty-tiers",
        "tags": [
          "Loyalties"
        ],
        "summary": "Create loyalty tiers",
        "description": "Creates loyalty tiers for desired campaign.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns created loyalty tiers.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoyaltiesTiersCreateInBulkResponseBody"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Provide tier definitions you want to add to existing loyalty campaign.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoyaltiesTiersCreateInBulkRequestBody"
              }
            }
          }
        }
      }
    },
    "/v1/loyalties/{campaignId}/tiers/{loyaltyTierId}": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterCampaignId"
          },
          "name": "campaignId",
          "in": "path",
          "required": true,
          "description": "Unique loyalty campaign ID or name."
        },
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterLoyaltyTierId"
          },
          "name": "loyaltyTierId",
          "in": "path",
          "required": true,
          "description": "Unique loyalty tier ID."
        }
      ],
      "get": {
        "operationId": "get-loyalty-tier",
        "tags": [
          "Loyalties"
        ],
        "summary": "Get Loyalty Tier",
        "description": "Retrieve a loyalty tier from a loyalty campaign by the loyalty tier ID.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns a loyalty tier object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoyaltiesTiersGetResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "id": "ltr_7rVIPlPzdSFwpnbCcUXgwzH2",
                      "name": "Tier 1 - Top",
                      "campaign_id": "camp_fkZ28pe7DUAEmmabofkxHI8N",
                      "metadata": {
                        "has_funds": true
                      },
                      "created_at": "2022-11-09T06:26:54.797Z",
                      "updated_at": "2022-11-25T11:27:58.578Z",
                      "earning_rules": {
                        "ern_95aq3JaE5A8xzHjoJPYNRqXZ": {
                          "type": "MULTIPLY",
                          "multiplier": 3
                        },
                        "ern_AdlWO2yt6b6llWsibIdiRXVE": {
                          "type": "MULTIPLY",
                          "multiplier": 5
                        },
                        "ern_HnRXyJHoj3E79r3KUWhgMgtD": {
                          "type": "MULTIPLY",
                          "multiplier": 3
                        },
                        "ern_raVUcdXruvXGuzm682ESrAzt": {
                          "type": "CUSTOM",
                          "points": 200
                        }
                      },
                      "rewards": {
                        "rewa_Or6gWZ5ASuGkBLjOf0IyiD4k": {
                          "type": "CUSTOM",
                          "points": 300
                        }
                      },
                      "config": {
                        "points": {
                          "from": 500,
                          "to": 1000
                        }
                      },
                      "points": {
                        "from": 500,
                        "to": 1000
                      },
                      "object": "loyalty_tier"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/loyalties/members/{memberId}/tiers": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterMemberId"
          },
          "name": "memberId",
          "in": "path",
          "required": true,
          "description": "Unique loyalty card assigned to a particular customer."
        }
      ],
      "get": {
        "operationId": "list-member-loyalty-tier",
        "tags": [
          "Loyalties"
        ],
        "summary": "List Member's Loyalty Tiers",
        "description": "Retrieve member tiers using the loyalty card ID.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns a data array containing the member's loyalty tiers.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoyaltiesMembersTiersListResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "object": "list",
                      "data_ref": "data",
                      "data": [
                        {
                          "id": "ltr_7rVIPlPzdSFwpnbCcUXgwzH2",
                          "name": "Tier 1 - Top",
                          "campaign_id": "camp_fkZ28pe7DUAEmmabofkxHI8N",
                          "metadata": {
                            "has_funds": true
                          },
                          "created_at": "2022-11-09T06:26:54.797Z",
                          "updated_at": "2022-11-25T11:27:58.578Z",
                          "earning_rules": {
                            "ern_95aq3JaE5A8xzHjoJPYNRqXZ": {
                              "type": "MULTIPLY",
                              "multiplier": 3
                            },
                            "ern_AdlWO2yt6b6llWsibIdiRXVE": {
                              "type": "MULTIPLY",
                              "multiplier": 5
                            },
                            "ern_HnRXyJHoj3E79r3KUWhgMgtD": {
                              "type": "MULTIPLY",
                              "multiplier": 3
                            },
                            "ern_raVUcdXruvXGuzm682ESrAzt": {
                              "type": "CUSTOM",
                              "points": 200
                            }
                          },
                          "rewards": {
                            "rewa_Or6gWZ5ASuGkBLjOf0IyiD4k": {
                              "type": "CUSTOM",
                              "points": 300
                            }
                          },
                          "config": {
                            "points": {
                              "from": 500,
                              "to": 1000
                            }
                          },
                          "points": {
                            "from": 500,
                            "to": 1000
                          },
                          "expiration": {
                            "customer_id": "cust_qBwHpagDOFu71Z3F22UzR80X",
                            "campaign_id": "camp_fkZ28pe7DUAEmmabofkxHI8N",
                            "tier_id": "ltr_7rVIPlPzdSFwpnbCcUXgwzH2",
                            "start_date": "2022-11-10",
                            "expiration_date": "2023-02-28",
                            "created_at": "2022-11-09T11:26:26.719Z",
                            "updated_at": "2022-11-10T08:54:47.200Z"
                          },
                          "object": "loyalty_tier"
                        }
                      ],
                      "total": 1
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/loyalties/{campaignId}/tiers/{loyaltyTierId}/earning-rules": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterCampaignId"
          },
          "name": "campaignId",
          "in": "path",
          "required": true,
          "description": "Unique campaign ID or name."
        },
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterLoyaltyTierId"
          },
          "name": "loyaltyTierId",
          "in": "path",
          "required": true,
          "description": "Unique loyalty tier ID."
        }
      ],
      "get": {
        "operationId": "list-loyalty-tier-earning-rules",
        "tags": [
          "Loyalties"
        ],
        "summary": "List Loyalty Tier Earning Rules",
        "description": "Retrieve available earning rules for a given tier and the calculation method for earning points.",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/page"
          }
        ],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns a list of earning rules for a given tier. The object for each earning rule also contains information about how the points are calculated; this includes mapping. If a specific multiplier was used to calculate points for a given tier, then the `loyalty.points` parameter will account for this calculation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoyaltiesTiersEarningRulesListResponseBody"
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "object": "list",
                      "data_ref": "data",
                      "data": [
                        {
                          "id": "ern_95aq3JaE5A8xzHjoJPYNRqXZ",
                          "created_at": "2022-11-09T06:26:54.332Z",
                          "updated_at": null,
                          "validation_rule_id": null,
                          "loyalty": {
                            "type": "PROPORTIONAL",
                            "calculation_type": "CUSTOMER_METADATA",
                            "customer": {
                              "metadata": {
                                "every": 1,
                                "points": 300,
                                "property": "customer_life_time_value"
                              }
                            }
                          },
                          "event": "customer.loyalty.tier.joined",
                          "loyalty_tier": {
                            "id": "__ANY__"
                          },
                          "source": {
                            "banner": "Tier Joined",
                            "object_id": "camp_fkZ28pe7DUAEmmabofkxHI8N",
                            "object_type": "campaign"
                          },
                          "active": true,
                          "object": "earning_rule",
                          "automation_id": "auto_bfi69WIbztany4iX6prkKbGN",
                          "metadata": {
                            "Type": "Joined Any"
                          }
                        },
                        {
                          "id": "ern_HnRXyJHoj3E79r3KUWhgMgtD",
                          "created_at": "2022-11-10T12:25:12.927Z",
                          "updated_at": null,
                          "validation_rule_id": null,
                          "loyalty": {
                            "points": 300,
                            "type": "FIXED"
                          },
                          "segment": {
                            "id": "seg_n3vVcU5t0m3rs4rEPr3C1oU5"
                          },
                          "event": "customer.segment.entered",
                          "source": {
                            "banner": "New Customers",
                            "object_id": "camp_fkZ28pe7DUAEmmabofkxHI8N",
                            "object_type": "campaign"
                          },
                          "active": true,
                          "object": "earning_rule",
                          "automation_id": "auto_0gv3v7jQG5U6TtVC8bMEdIap",
                          "metadata": {}
                        },
                        {
                          "id": "ern_raVUcdXruvXGuzm682ESrAzt",
                          "created_at": "2022-11-24T09:03:14.534Z",
                          "updated_at": "2022-11-25T09:48:26.284Z",
                          "validation_rule_id": "val_7SxpdhPeBngA",
                          "loyalty": {
                            "points": 20,
                            "type": "FIXED"
                          },
                          "event": "order.paid",
                          "source": {
                            "banner": "Order has been paid",
                            "object_id": "camp_fkZ28pe7DUAEmmabofkxHI8N",
                            "object_type": "campaign"
                          },
                          "active": true,
                          "start_date": "2022-11-23T00:00:00.000Z",
                          "expiration_date": "2022-11-30T00:00:00.000Z",
                          "validity_day_of_week": [
                            1,
                            2,
                            3,
                            4,
                            5
                          ],
                          "object": "earning_rule",
                          "automation_id": "auto_MbEIyLbn7pHyba5Qw5eeb35L",
                          "metadata": {
                            "Type": "Order has been paid - Fixed"
                          }
                        },
                        {
                          "id": "ern_BmDiQs7T3UHfJQqtI2RfJHFR",
                          "created_at": "2022-11-24T14:48:36.567Z",
                          "updated_at": null,
                          "validation_rule_id": null,
                          "loyalty": {
                            "type": "PROPORTIONAL",
                            "calculation_type": "ORDER_AMOUNT",
                            "order": {
                              "amount": {
                                "every": 1000,
                                "points": 1
                              }
                            }
                          },
                          "event": "order.paid",
                          "source": {
                            "banner": "Order paid",
                            "object_id": "camp_fkZ28pe7DUAEmmabofkxHI8N",
                            "object_type": "campaign"
                          },
                          "active": true,
                          "object": "earning_rule",
                          "automation_id": "auto_IKanVw37J6oFuRrdnryXw8Lz",
                          "metadata": {
                            "Type": "Order has been paid - Proportional - 1"
                          }
                        },
                        {
                          "id": "ern_jwtacKdEEHoc85QbouRw3CR8",
                          "created_at": "2022-11-24T15:17:11.539Z",
                          "updated_at": null,
                          "validation_rule_id": null,
                          "loyalty": {
                            "type": "PROPORTIONAL",
                            "calculation_type": "ORDER_TOTAL_AMOUNT",
                            "order": {
                              "total_amount": {
                                "every": 1100,
                                "points": 1
                              }
                            }
                          },
                          "event": "order.paid",
                          "source": {
                            "banner": "Order has been paid",
                            "object_id": "camp_fkZ28pe7DUAEmmabofkxHI8N",
                            "object_type": "campaign"
                          },
                          "active": true,
                          "object": "earning_rule",
                          "automation_id": "auto_Y6IWqhz0cHGkKcteU9PS5nmK",
                          "metadata": {
                            "Type": "Order has been paid - Proportional - 2"
                          }
                        },
                        {
                          "id": "ern_fxVdmtJ4u4rlyoH2hIq7m1PQ",
                          "created_at": "2022-11-24T15:20:04.392Z",
                          "updated_at": null,
                          "validation_rule_id": null,
                          "loyalty": {
                            "type": "PROPORTIONAL",
                            "calculation_type": "ORDER_METADATA",
                            "order": {
                              "metadata": {
                                "every": 10,
                                "points": 2,
                                "property": "number_of_store_visits"
                              }
                            }
                          },
                          "event": "order.paid",
                          "source": {
                            "banner": "Order paid",
                            "object_id": "camp_fkZ28pe7DUAEmmabofkxHI8N",
                            "object_type": "campaign"
                          },
                          "active": true,
                          "object": "earning_rule",
                          "automation_id": "auto_HyowcdKQ0lsQ1rSxV5tyYr2z",
                          "metadata": {
                            "Type": "Order has been paid - Proportional - 3 - Metadata"
                          }
                        },
                        {
                          "id": "ern_Aop1wTrmPv4yBntDcvXNTCWR",
                          "created_at": "2022-11-24T15:23:44.514Z",
                          "updated_at": null,
                          "validation_rule_id": null,
                          "loyalty": {
                            "type": "PROPORTIONAL",
                            "calculation_type": "ORDER_ITEMS_AMOUNT",
                            "order_items": {
                              "amount": {
                                "every": 1000,
                                "points": 3,
                                "object": "products_collection",
                                "id": "pc_75U0dHlr7u75BJodrW1AE3t6"
                              }
                            }
                          },
                          "event": "order.paid",
                          "source": {
                            "banner": "Order paid",
                            "object_id": "camp_fkZ28pe7DUAEmmabofkxHI8N",
                            "object_type": "campaign"
                          },
                          "active": true,
                          "object": "earning_rule",
                          "automation_id": "auto_EXRyQ0z0rgtF54PKDGGAF1qg",
                          "metadata": {
                            "Type": "Order has been paid - Proportional - 4"
                          }
                        },
                        {
                          "id": "ern_4qSQVjfGEH7OmXKMzotS0juY",
                          "created_at": "2022-11-24T15:44:45.301Z",
                          "updated_at": null,
                          "validation_rule_id": null,
                          "loyalty": {
                            "type": "PROPORTIONAL",
                            "calculation_type": "ORDER_ITEMS_SUBTOTAL_AMOUNT",
                            "order_items": {
                              "subtotal_amount": {
                                "every": 1000,
                                "points": 4,
                                "object": "sku",
                                "id": "sku_0b7d7dfb090be5c619"
                              }
                            }
                          },
                          "event": "order.paid",
                          "source": {
                            "banner": "Order paid",
                            "object_id": "camp_fkZ28pe7DUAEmmabofkxHI8N",
                            "object_type": "campaign"
                          },
                          "active": true,
                          "object": "earning_rule",
                          "automation_id": "auto_ID3xLPXCdnOaveJYWiulcNFW",
                          "metadata": {
                            "Type": "Order has been paid - Proportional - 5 - Items"
                          }
                        },
                        {
                          "id": "ern_aJyt4wIrXhmfMxvrLoZjBYrP",
                          "created_at": "2022-11-24T15:56:58.710Z",
                          "updated_at": null,
                          "validation_rule_id": null,
                          "loyalty": {
                            "type": "PROPORTIONAL",
                            "calculation_type": "ORDER_ITEMS_AMOUNT",
                            "order_items": {
                              "amount": {
                                "every": 10000,
                                "points": 1,
                                "object": "product",
                                "id": "prod_0bae32322150fd0546"
                              }
                            }
                          },
                          "event": "order.paid",
                          "source": {
                            "banner": "Order paid",
                            "object_id": "camp_fkZ28pe7DUAEmmabofkxHI8N",
                            "object_type": "campaign"
                          },
                          "active": true,
                          "object": "earning_rule",
                          "automation_id": "auto_EbBqD1SNW70vgDp5icGbWl3e",
                          "metadata": {}
                        },
                        {
                          "id": "ern_v4Blmh9hA3gpnjo93cMAgvHr",
                          "created_at": "2022-11-24T16:19:20.571Z",
                          "updated_at": null,
                          "validation_rule_id": null,
                          "loyalty": {
                            "type": "PROPORTIONAL",
                            "calculation_type": "CUSTOMER_METADATA",
                            "customer": {
                              "metadata": {
                                "every": 1,
                                "points": 5,
                                "property": "customer_life_time_value"
                              }
                            }
                          },
                          "segment": {
                            "id": "seg_OlE7DmfzMI5pHyD5VAv512r1"
                          },
                          "event": "customer.segment.entered",
                          "source": {
                            "banner": "Entered Segment",
                            "object_id": "camp_fkZ28pe7DUAEmmabofkxHI8N",
                            "object_type": "campaign"
                          },
                          "active": true,
                          "object": "earning_rule",
                          "automation_id": "auto_wMMDJ86iHKkznz9x0506e30E",
                          "metadata": {}
                        },
                        {
                          "id": "ern_L8dFanPxJzhw0f5voTwPurGP",
                          "created_at": "2022-11-24T16:27:13.917Z",
                          "updated_at": null,
                          "validation_rule_id": null,
                          "loyalty": {
                            "points": 3,
                            "type": "FIXED"
                          },
                          "custom_event": {
                            "schema_id": "ms_gn4Qe4xsFPf7orCArCiNVY13"
                          },
                          "event": "page_view",
                          "source": {
                            "banner": "Custom Event",
                            "object_id": "camp_fkZ28pe7DUAEmmabofkxHI8N",
                            "object_type": "campaign"
                          },
                          "active": true,
                          "object": "earning_rule",
                          "automation_id": "auto_9N69OJzGKGhp2mo7SNsnsF5b",
                          "metadata": {
                            "Type": "Fixed"
                          }
                        },
                        {
                          "id": "ern_ngdugZ2hzg35hGASFF8nDjUO",
                          "created_at": "2022-11-24T16:41:48.830Z",
                          "updated_at": null,
                          "validation_rule_id": null,
                          "loyalty": {
                            "type": "PROPORTIONAL",
                            "calculation_type": "CUSTOM_EVENT_METADATA",
                            "custom_event": {
                              "metadata": {
                                "every": 2,
                                "points": 2,
                                "property": "volume_number"
                              }
                            }
                          },
                          "custom_event": {
                            "schema_id": "ms_qpRZ3EmRQyszNH6Z52Gkq8au"
                          },
                          "event": "user_subscribed",
                          "source": {
                            "banner": "Custom Event",
                            "object_id": "camp_fkZ28pe7DUAEmmabofkxHI8N",
                            "object_type": "campaign"
                          },
                          "active": true,
                          "object": "earning_rule",
                          "automation_id": "auto_v1eTxL7X63B5IkYgRWHK4leh",
                          "metadata": {
                            "Type": "Event"
                          }
                        },
                        {
                          "id": "ern_afo3Ea760hAKv07JYpycnhiE",
                          "created_at": "2022-11-24T16:50:12.945Z",
                          "updated_at": null,
                          "validation_rule_id": null,
                          "loyalty": {
                            "type": "PROPORTIONAL",
                            "calculation_type": "CUSTOMER_METADATA",
                            "customer": {
                              "metadata": {
                                "every": 3,
                                "points": 3,
                                "property": "customer_life_time_value"
                              }
                            }
                          },
                          "custom_event": {
                            "schema_id": "ms_f0r4hcu5T0m3v3nT5ch3ma"
                          },
                          "event": "cart_abandoned",
                          "source": {
                            "banner": "Custom Event",
                            "object_id": "camp_fkZ28pe7DUAEmmabofkxHI8N",
                            "object_type": "campaign"
                          },
                          "active": true,
                          "object": "earning_rule",
                          "automation_id": "auto_7ovoKiXx49fe3nnhEbDlp9FP",
                          "metadata": {}
                        },
                        {
                          "id": "ern_chdlG14W8Sdcq3d6jJQQgRMT",
                          "created_at": "2022-11-24T16:51:31.595Z",
                          "updated_at": null,
                          "validation_rule_id": null,
                          "loyalty": {
                            "points": 1,
                            "type": "FIXED"
                          },
                          "event": "customer.loyalty.tier.joined",
                          "loyalty_tier": {
                            "id": "__ANY__"
                          },
                          "source": {
                            "banner": "Tier joined - Any",
                            "object_id": "camp_fkZ28pe7DUAEmmabofkxHI8N",
                            "object_type": "campaign"
                          },
                          "active": true,
                          "object": "earning_rule",
                          "automation_id": "auto_W9yMQTz5fgQTgmuu6pTVraBW",
                          "metadata": {
                            "Type": "Tier joined  - any - fixed"
                          }
                        },
                        {
                          "id": "ern_gVo6CHBduFPoh1hctASfXHLT",
                          "created_at": "2022-11-24T17:01:42.809Z",
                          "updated_at": null,
                          "validation_rule_id": null,
                          "loyalty": {
                            "type": "PROPORTIONAL",
                            "calculation_type": "CUSTOMER_METADATA",
                            "customer": {
                              "metadata": {
                                "every": 4,
                                "points": 4,
                                "property": "customer_life_time_value"
                              }
                            }
                          },
                          "event": "customer.loyalty.tier.joined",
                          "loyalty_tier": {
                            "id": "ltr_pudTGWasuIqxdiDM0go31OV1"
                          },
                          "source": {
                            "banner": "Tier joined",
                            "object_id": "camp_fkZ28pe7DUAEmmabofkxHI8N",
                            "object_type": "campaign"
                          },
                          "active": true,
                          "object": "earning_rule",
                          "automation_id": "auto_wdlEo17wmoqYHGfilbayEUj7",
                          "metadata": {
                            "Type": "Tier joined - customer metadata - proportional"
                          }
                        },
                        {
                          "id": "ern_66OdCyLADv5IGFoQe18vGUwa",
                          "created_at": "2022-11-24T17:03:59.414Z",
                          "updated_at": null,
                          "validation_rule_id": null,
                          "loyalty": {
                            "type": "PROPORTIONAL",
                            "calculation_type": "CUSTOMER_METADATA",
                            "customer": {
                              "metadata": {
                                "every": 2,
                                "points": 2,
                                "property": "customer_life_time_value"
                              }
                            }
                          },
                          "event": "customer.loyalty.tier.left",
                          "loyalty_tier": {
                            "id": "ltr_7rVIPlPzdSFwpnbCcUXgwzH2"
                          },
                          "source": {
                            "banner": "Tier left",
                            "object_id": "camp_fkZ28pe7DUAEmmabofkxHI8N",
                            "object_type": "campaign"
                          },
                          "active": true,
                          "object": "earning_rule",
                          "automation_id": "auto_czm5el1Uz1jeGaO97AYoDNAq",
                          "metadata": {
                            "Type": "Tier left"
                          }
                        },
                        {
                          "id": "ern_YR3fDfCjAmz9a5D68nk0i4dm",
                          "created_at": "2022-11-25T07:29:38.961Z",
                          "updated_at": null,
                          "validation_rule_id": null,
                          "loyalty": {
                            "type": "PROPORTIONAL",
                            "calculation_type": "CUSTOMER_METADATA",
                            "customer": {
                              "metadata": {
                                "every": 3,
                                "points": 4,
                                "property": "customer_life_time_value"
                              }
                            }
                          },
                          "event": "customer.loyalty.tier.upgraded",
                          "loyalty_tier": {
                            "id": "ltr_30KHciA0UG8B71Fo51GZqwgN"
                          },
                          "source": {
                            "banner": "Tier upgraded",
                            "object_id": "camp_fkZ28pe7DUAEmmabofkxHI8N",
                            "object_type": "campaign"
                          },
                          "active": true,
                          "object": "earning_rule",
                          "automation_id": "auto_M1OdRH8spk6Fs7yTuPLN2LAv",
                          "metadata": {
                            "Type": "Upgraded"
                          }
                        },
                        {
                          "id": "ern_A2RArBE30Tkt56utVLrRv7rZ",
                          "created_at": "2022-11-25T07:31:05.866Z",
                          "updated_at": "2022-11-25T09:48:26.506Z",
                          "validation_rule_id": "val_kfmWpfXMI9P1",
                          "loyalty": {
                            "points": 1,
                            "type": "FIXED"
                          },
                          "event": "customer.loyalty.tier.downgraded",
                          "loyalty_tier": {
                            "id": "__ANY__"
                          },
                          "source": {
                            "banner": "Tier Downgraded",
                            "object_id": "camp_fkZ28pe7DUAEmmabofkxHI8N",
                            "object_type": "campaign"
                          },
                          "active": true,
                          "object": "earning_rule",
                          "automation_id": "auto_TMVZtCNMBgZm0KcPJ7otiHZW",
                          "metadata": {
                            "Type": "Tier"
                          }
                        },
                        {
                          "id": "ern_AdlWO2yt6b6llWsibIdiRXVE",
                          "created_at": "2022-11-25T07:31:42.767Z",
                          "updated_at": null,
                          "validation_rule_id": null,
                          "loyalty": {
                            "points": 25,
                            "type": "FIXED"
                          },
                          "event": "customer.loyalty.tier.prolonged",
                          "loyalty_tier": {
                            "id": "__ANY__"
                          },
                          "source": {
                            "banner": "Prolonged",
                            "object_id": "camp_fkZ28pe7DUAEmmabofkxHI8N",
                            "object_type": "campaign"
                          },
                          "active": true,
                          "object": "earning_rule",
                          "automation_id": "auto_4jH1yq9WJS0oJ8suagCrltyb",
                          "metadata": {}
                        }
                      ],
                      "total": 19
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/loyalties/{campaignId}/tiers/{loyaltyTierId}/rewards": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterCampaignId"
          },
          "name": "campaignId",
          "in": "path",
          "required": true,
          "description": "Unique campaign ID or name."
        },
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterLoyaltyTierId"
          },
          "name": "loyaltyTierId",
          "in": "path",
          "required": true,
          "description": "Unique loyalty tier ID."
        }
      ],
      "get": {
        "operationId": "list-loyalty-tier-rewards",
        "tags": [
          "Loyalties"
        ],
        "summary": "List Loyalty Tier Rewards",
        "description": "Get available rewards for a given tier.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns a dictionary of loyalty tier reward objects.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoyaltiesTiersRewardsListResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "object": "list",
                      "data_ref": "data",
                      "data": [
                        {
                          "reward": {
                            "id": "rew_QuWYsBNB2G3fikffjnl0G3gH",
                            "name": "API - Testing",
                            "type": "CAMPAIGN",
                            "parameters": {
                              "campaign": {
                                "id": "camp_jcErmtGAOmHUAy0oUgkwKnPZ",
                                "balance": 500,
                                "type": "LOYALTY_PROGRAM"
                              }
                            },
                            "stock": null,
                            "redeemed": null,
                            "created_at": "2022-08-25T09:32:04.579424+00:00",
                            "updated_at": "2022-08-25T09:33:46.680639+00:00",
                            "metadata": {
                              "Type": "Second campaign"
                            },
                            "object": "reward"
                          },
                          "assignment": {
                            "id": "rewa_3Z2sP0bmqcL0ggU28GvFeHU3",
                            "reward_id": "rew_QuWYsBNB2G3fikffjnl0G3gH",
                            "related_object_id": "camp_fkZ28pe7DUAEmmabofkxHI8N",
                            "related_object_type": "campaign",
                            "parameters": {
                              "loyalty": {
                                "points": 40
                              }
                            },
                            "created_at": "2022-11-23T22:11:58.759092+00:00",
                            "updated_at": null,
                            "object": "reward_assignment"
                          },
                          "object": "loyalty_tier_reward"
                        },
                        {
                          "reward": {
                            "id": "rew_XoDgmQ2HZX7qPM6aIEuslObo",
                            "name": "Material",
                            "type": "MATERIAL",
                            "parameters": {
                              "product": {
                                "id": "prod_0b15f6b9f650c16990",
                                "sku_id": "sku_0b1621b319d248b79f"
                              }
                            },
                            "stock": 2,
                            "redeemed": 1,
                            "attributes": {
                              "image_url": "{{internalVoucherifyURL}}",
                              "description": "Archie's Series"
                            },
                            "created_at": "2022-08-29T06:02:36.753873+00:00",
                            "updated_at": "2022-11-08T08:01:26.883166+00:00",
                            "metadata": {
                              "Type": "Material"
                            },
                            "object": "reward"
                          },
                          "assignment": {
                            "id": "rewa_Or6gWZ5ASuGkBLjOf0IyiD4k",
                            "reward_id": "rew_XoDgmQ2HZX7qPM6aIEuslObo",
                            "related_object_id": "camp_fkZ28pe7DUAEmmabofkxHI8N",
                            "related_object_type": "campaign",
                            "parameters": {
                              "loyalty": {
                                "points": 30
                              }
                            },
                            "created_at": "2022-11-23T22:11:58.759092+00:00",
                            "updated_at": null,
                            "object": "reward_assignment"
                          },
                          "object": "loyalty_tier_reward"
                        },
                        {
                          "reward": {
                            "id": "rew_MVXA2kV7lZ1zC057WUaTrvNz",
                            "name": "100 Points = $20",
                            "type": "COIN",
                            "parameters": {
                              "coin": {
                                "exchange_ratio": 20,
                                "points_ratio": 100
                              }
                            },
                            "stock": null,
                            "redeemed": null,
                            "attributes": {},
                            "created_at": "2022-09-09T06:41:54.496035+00:00",
                            "updated_at": null,
                            "metadata": {},
                            "object": "reward"
                          },
                          "assignment": {
                            "id": "rewa_nMXB59qGTNYawMT8eP8M4oUp",
                            "reward_id": "rew_MVXA2kV7lZ1zC057WUaTrvNz",
                            "related_object_id": "camp_fkZ28pe7DUAEmmabofkxHI8N",
                            "related_object_type": "campaign",
                            "created_at": "2022-11-09T11:01:21.065681+00:00",
                            "updated_at": null,
                            "object": "reward_assignment"
                          },
                          "object": "loyalty_tier_reward"
                        }
                      ],
                      "total": 3
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/customers": {
      "get": {
        "operationId": "list-customers",
        "tags": [
          "Customers"
        ],
        "summary": "List Customers",
        "description": "Returns a list of customers.",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterString"
            },
            "in": "query",
            "name": "email",
            "description": "Limit the customers to the ones that have this specific email address."
          },
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterString"
            },
            "in": "query",
            "description": "Limit the customers to the ones that are located in the specified city.",
            "name": "city"
          },
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterString"
            },
            "in": "query",
            "description": "Filter customers by the name property.",
            "name": "name"
          },
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterString"
            },
            "in": "query",
            "description": "Filter customers by the segment id.",
            "name": "segment_id"
          },
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterDate"
            },
            "in": "query",
            "description": "Filter customers by date customer was created.",
            "name": "created_at[before]"
          },
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterDate"
            },
            "in": "query",
            "description": "Filter customers by date customer was created.",
            "name": "created_at[after]"
          },
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterDate"
            },
            "in": "query",
            "description": "Filter customers by date customer was updated last time.",
            "name": "updated_at[before]"
          },
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterDate"
            },
            "in": "query",
            "description": "Filter customers by date customer was updated last time.",
            "name": "updated_at[after]"
          },
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterOrderListCustomers"
            },
            "in": "query",
            "name": "order",
            "description": "This is a property that controls the sorting direction of the results. Sort the results using one of the filtering options, where the dash - preceding a sorting option means sorting in a descending order."
          },
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterDate"
            },
            "in": "query",
            "name": "starting_after",
            "description": "A cursor for pagination. This is a date-time value that defines your place in the list based on created_at property from the customer object. For instance, if you make a list request and receive 100 objects, ending with an object created at 2020-05-24T13:43:09.024Z, your subsequent call can include starting_after 2020-05-24T13:43:09.024Z in order to fetch the next page of the list. \n"
          }
        ],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns a dictionary with customer objects. The customers are returned sorted by creation date, with the most recent customers appearing first.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomersListResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "object": "list",
                      "data_ref": "customers",
                      "customers": [
                        {
                          "id": "cust_CSnYd37MXmrbS19XCrghjBsv",
                          "source_id": "source_123",
                          "name": "Bob Smith",
                          "description": "A frequent customer",
                          "email": "bob.smith@email.com",
                          "phone": "+1 933 222 3333",
                          "birthdate": "2022-01-01",
                          "address": {
                            "city": "New York",
                            "state": "NY",
                            "line_1": "123 Main St.",
                            "line_2": "APT 3 BLG 5",
                            "country": "United States",
                            "postal_code": "10001"
                          },
                          "summary": {
                            "redemptions": {
                              "total_redeemed": 1,
                              "total_failed": 0,
                              "total_succeeded": 1,
                              "total_rolled_back": 0,
                              "total_rollback_failed": 0,
                              "total_rollback_succeeded": 0,
                              "gift": {
                                "redeemed_amount": 0,
                                "amount_to_go": 0
                              },
                              "loyalty_card": {
                                "redeemed_points": 0,
                                "points_to_go": 4200
                              }
                            },
                            "orders": {
                              "total_amount": 1600,
                              "total_count": 1,
                              "average_amount": 1600,
                              "last_order_amount": 1600,
                              "last_order_date": "2022-08-30T10:17:39.220Z"
                            }
                          },
                          "loyalty": {
                            "points": 2200,
                            "referred_customers": 0,
                            "campaigns": {
                              "Christmas Campaign": {
                                "points": 1000,
                                "referred_customers": 0
                              },
                              "Fall Campaign": {
                                "points": 75,
                                "referred_customers": 0
                              },
                              "Winter Campaign": {
                                "points": 75,
                                "referred_customers": 0
                              },
                              "Summer Campaign": {
                                "points": 50,
                                "referred_customers": 0
                              },
                              "Spring Campaign": {
                                "points": 1000,
                                "referred_customers": 0
                              }
                            }
                          },
                          "referrals": {
                            "total": 1,
                            "campaigns": [
                              {
                                "campaign_id": "camp_rRsfatlwN7unSeUIJDCYedal",
                                "referrer_id": "cust_sehkNIi8Uq2qQuRqSr7xn4Zi",
                                "related_object_id": "r_0b9d4c5121d64dd01d",
                                "related_object_type": "redemption",
                                "date": "2022-08-30T10:17:41.089Z"
                              }
                            ]
                          },
                          "metadata": {
                            "lang": "en",
                            "test": true
                          },
                          "system_metadata": {},
                          "created_at": "2022-08-30T06:32:07.380Z",
                          "updated_at": "2022-08-30T10:17:58.049Z",
                          "object": "customer"
                        },
                        {
                          "id": "cust_X0hU04x7FeisPnD5lctZcQkI",
                          "source_id": "jane.smith@email.com",
                          "name": "Jane Smith",
                          "description": "A nice customer",
                          "email": "jane.smith@email.com",
                          "phone": "+1 933 222 3333",
                          "birthdate": "2022-01-02",
                          "address": {
                            "city": "New Yorke",
                            "state": "NY",
                            "line_1": "123 Main Ste.",
                            "line_2": "APT 3 BLG 4e",
                            "country": "United Statese",
                            "postal_code": "10001e"
                          },
                          "summary": {
                            "redemptions": {
                              "total_redeemed": 4,
                              "total_failed": 0,
                              "total_succeeded": 4,
                              "total_rolled_back": 1,
                              "total_rollback_failed": 0,
                              "total_rollback_succeeded": 1,
                              "gift": {
                                "redeemed_amount": 0,
                                "amount_to_go": 0
                              },
                              "loyalty_card": {
                                "redeemed_points": 0,
                                "points_to_go": 15549
                              }
                            },
                            "orders": {
                              "total_amount": 210000,
                              "total_count": 3,
                              "average_amount": 70000,
                              "last_order_amount": 70000,
                              "last_order_date": "2022-08-30T11:51:08.029Z"
                            }
                          },
                          "loyalty": {
                            "points": 15399,
                            "referred_customers": 0,
                            "campaigns": {
                              "Christmas Campaign": {
                                "points": 7000,
                                "referred_customers": 0
                              },
                              "Fall Campaign": {
                                "points": 2299,
                                "referred_customers": 0
                              },
                              "Winter Campaign": {
                                "points": 25,
                                "referred_customers": 0
                              },
                              "Summer Campaign": {
                                "points": 75,
                                "referred_customers": 0
                              },
                              "Spring Campaign": {
                                "points": 6000,
                                "referred_customers": 0
                              }
                            }
                          },
                          "referrals": {
                            "total": 2,
                            "campaigns": [
                              {
                                "campaign_id": "camp_rRsfatlwN7unSeUIJDCYedal",
                                "referrer_id": "cust_sehkNIi8Uq2qQuRqSr7xn4Zi",
                                "related_object_id": "r_0b9d4cc4aa164dd073",
                                "related_object_type": "redemption",
                                "date": "2022-08-30T10:19:39.196Z"
                              },
                              {
                                "campaign_id": "camp_YDsFdX8TgFtT0RUuKEFyhqs3",
                                "referrer_id": "cust_Vzck5i8U3OhcEUFY6MKhN9Rv",
                                "related_object_id": "r_0b9d61b6484ead0324",
                                "related_object_type": "redemption",
                                "date": "2022-08-30T11:51:10.445Z"
                              }
                            ]
                          },
                          "metadata": {
                            "lang": "en",
                            "test": false
                          },
                          "system_metadata": {},
                          "created_at": "2022-08-09T09:50:53.620Z",
                          "updated_at": "2022-08-30T11:51:24.327Z",
                          "object": "customer"
                        }
                      ],
                      "total": 2
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "create-customer",
        "tags": [
          "Customers"
        ],
        "summary": "Create Customer",
        "description": "Creates a customer object.\n 📘 Upsert Mode\n If you pass an id or a source_id that already exists in the customer database, Voucherify will return a related customer object with updated fields.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "requestBody": {
          "description": "Create a customer with specified parameters.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomersCreateRequestBody"
              },
              "examples": {
                "Example": {
                  "value": {
                    "source_id": "source_123",
                    "name": "Bob Smith",
                    "description": "A frequent customer",
                    "email": "bob.smith@email.com",
                    "phone": "+1 933 222 3333",
                    "address": {
                      "city": "New York",
                      "country": "United States",
                      "line_1": "123 Main St.",
                      "line_2": "APT 3 BLG 4",
                      "postal_code": "10001",
                      "state": "NY"
                    },
                    "metadata": {
                      "lang": "en",
                      "test": true
                    },
                    "birthdate": "2022-01-01"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "2XX": {
            "description": "Returns a customer object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomersCreateResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "id": "cust_CSnYd37MXmrbS19XCrghjBsv",
                      "source_id": "source_123",
                      "name": "Bob Smith",
                      "description": "A frequent customer",
                      "email": "bob.smith@email.com",
                      "phone": "+1 933 222 3333",
                      "birthdate": "2022-01-01",
                      "address": {
                        "city": "New York",
                        "state": "NY",
                        "line_1": "123 Main St.",
                        "line_2": "APT 3 BLG 4",
                        "country": "United States",
                        "postal_code": "10001"
                      },
                      "summary": {
                        "redemptions": {
                          "total_redeemed": 0,
                          "total_failed": 0,
                          "total_succeeded": 0,
                          "total_rolled_back": 0,
                          "total_rollback_failed": 0,
                          "total_rollback_succeeded": 0,
                          "gift": {
                            "redeemed_amount": 0,
                            "amount_to_go": 0
                          },
                          "loyalty_card": {
                            "redeemed_points": 0,
                            "points_to_go": 0
                          }
                        },
                        "orders": {
                          "total_amount": 0,
                          "total_count": 0,
                          "average_amount": 0,
                          "last_order_amount": 0
                        }
                      },
                      "loyalty": {
                        "points": 0,
                        "referred_customers": 0,
                        "campaigns": {}
                      },
                      "referrals": {
                        "total": 0,
                        "campaigns": []
                      },
                      "metadata": {
                        "lang": "en",
                        "test": true
                      },
                      "system_metadata": {},
                      "created_at": "2022-08-30T06:32:07.380Z",
                      "object": "customer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/customers/{customerId}": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterCustomerId"
          },
          "name": "customerId",
          "in": "path",
          "required": true,
          "description": "A Voucherify customers id or source_id."
        }
      ],
      "get": {
        "operationId": "get-customer",
        "tags": [
          "Customers"
        ],
        "summary": "Get Customer",
        "description": "Retrieve customer details.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns a customer object if a valid identifier was provided.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomersGetResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "id": "cust_T849EgzNVVmn5icJ2FAkT2rO",
                      "source_id": "alice.morgan@email.com",
                      "name": "Alice Morgan",
                      "email": "alice.morgan@email.com",
                      "address": null,
                      "summary": {
                        "redemptions": {
                          "total_redeemed": 2,
                          "total_failed": 0,
                          "total_succeeded": 2,
                          "total_rolled_back": 0,
                          "total_rollback_failed": 0,
                          "total_rollback_succeeded": 0,
                          "gift": {
                            "redeemed_amount": 0,
                            "amount_to_go": 0
                          },
                          "loyalty_card": {
                            "redeemed_points": 0,
                            "points_to_go": 3303
                          }
                        },
                        "orders": {
                          "total_amount": 203900,
                          "total_count": 2,
                          "average_amount": 101950,
                          "last_order_amount": 3900,
                          "last_order_date": "2022-07-26T14:59:52.814Z"
                        }
                      },
                      "loyalty": {
                        "points": 3303,
                        "referred_customers": 0,
                        "campaigns": {
                          "Summer Campaign": {
                            "points": 3303,
                            "referred_customers": 0
                          }
                        }
                      },
                      "referrals": {
                        "total": 0,
                        "campaigns": []
                      },
                      "system_metadata": {},
                      "created_at": "2022-02-07T08:28:23.644Z",
                      "updated_at": "2022-07-26T14:59:59.806Z",
                      "assets": {
                        "cockpit_url": "{{internalVoucherifyURL}}"
                      },
                      "object": "customer"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "delete-customer",
        "tags": [
          "Customers"
        ],
        "summary": "Delete Customer",
        "description": "This method deletes a customer.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns no content if deletion is successful."
          }
        }
      },
      "put": {
        "operationId": "update-customer",
        "tags": [
          "Customers"
        ],
        "summary": "Update Customer",
        "description": "Updates the specified customer by setting the values of the parameters passed in the request body. Any parameters not provided in the payload will be left unchanged.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "requestBody": {
          "description": "Specify the parameters to be updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomersUpdateRequestBody"
              },
              "examples": {
                "Example": {
                  "value": {
                    "name": "Alice McDonald",
                    "email": "alice.mdconald@email.com",
                    "description": "Updating customer data",
                    "phone": "+1 (132) 222-2222",
                    "address": {
                      "city": "New York",
                      "country": "United States",
                      "line_1": "123 Main St.",
                      "line_2": "APT 3 BLG 4",
                      "postal_code": "10001",
                      "state": "NY"
                    },
                    "metadata": {
                      "lang": "en",
                      "test": true
                    },
                    "birthdate": "2022-01-01",
                    "birthday": "2022-01-02"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "2XX": {
            "description": "Returns a customer object if updates were successful.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomersUpdateResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "id": "cust_T849EgzNVVmn5icJ2FAkT2rO",
                      "source_id": "alice@morgan.com",
                      "name": "Alice McDonald",
                      "description": "Updating customer data",
                      "email": "alice.mdconald@email.com",
                      "phone": "+1 (132) 222-2222",
                      "birthday": "2022-01-02",
                      "birthdate": "2022-01-01",
                      "address": {
                        "city": "New York",
                        "state": "NY",
                        "line_1": "123 Main St.",
                        "line_2": "APT 3 BLG 4",
                        "country": "United States",
                        "postal_code": "10001"
                      },
                      "summary": {
                        "redemptions": {
                          "total_redeemed": 2,
                          "total_failed": 0,
                          "total_succeeded": 2,
                          "total_rolled_back": 0,
                          "total_rollback_failed": 0,
                          "total_rollback_succeeded": 0,
                          "gift": {
                            "redeemed_amount": 0,
                            "amount_to_go": 0
                          },
                          "loyalty_card": {
                            "redeemed_points": 0,
                            "points_to_go": 4428
                          }
                        },
                        "orders": {
                          "total_amount": 203900,
                          "total_count": 2,
                          "average_amount": 101950,
                          "last_order_amount": 3900,
                          "last_order_date": "2022-07-26T14:59:52.814Z"
                        }
                      },
                      "loyalty": {
                        "points": 3403,
                        "referred_customers": 0,
                        "campaigns": {
                          "Summer Campaign": {
                            "points": 0,
                            "referred_customers": 0
                          },
                          "Spring Campaign": {
                            "points": 50,
                            "referred_customers": 0
                          },
                          "Fall Campaign": {
                            "points": 50,
                            "referred_customers": 0
                          },
                          "Winter Campaign": {
                            "points": 3303,
                            "referred_customers": 0
                          }
                        }
                      },
                      "referrals": {
                        "total": 0,
                        "campaigns": []
                      },
                      "metadata": {
                        "lang": "en",
                        "test": true
                      },
                      "system_metadata": {},
                      "created_at": "2022-02-07T08:28:23.644Z",
                      "updated_at": "2022-08-31T09:58:30.475Z",
                      "object": "customer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/customers/{customerId}/permanent-deletion": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterCustomerId"
          },
          "name": "customerId",
          "in": "path",
          "required": true,
          "description": "A Voucherify customers id or source_id."
        }
      ],
      "post": {
        "operationId": "customer-permanently-deletion",
        "tags": [
          "Customers"
        ],
        "summary": "Delete Customer Permanently",
        "description": "The organization user can remove consumer data permanently from the Voucherify system by using this API method. It deletes all customer data and connected resources. It makes the customer profile forgotten by Voucherify.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns a permanent deletion object and status of the deletion.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomersPermanentDeletionCreateResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "id": "del_7k3buMvBsJuXiLRmdh1WZvZs",
                      "created_at": "2022-09-02T17:50:29.302Z",
                      "related_object_id": "cust_XI8sPLvznzVpNI1BMIWGcUJa",
                      "related_object": "customer",
                      "status": "DONE",
                      "data_json": {
                        "events": 16,
                        "customer_events": 28,
                        "daily_events": 0,
                        "segments": 0,
                        "orders": 9,
                        "order_events": 5,
                        "customer": 1
                      },
                      "object": "pernament_deletion"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/customers/importCSV": {
      "post": {
        "operationId": "import-customers-using-csv",
        "tags": [
          "Customers"
        ],
        "summary": "Import and Update Customers using CSV",
        "description": "This API method lets you import or update customer data. To get a proper and valid response, please send a CSV file with data separated by commas.  \n# Request Example\n# CSV File Format\nThe CSV file has to include headers in the first line. All properties which cannot be mapped to standard customer fields will be added to the metadata object.\n 📘 Standard customer fields mapping\n **No spaces allowed in field names**  \n Id, Name, Email, Phone, Birthdate, Source_id, Address_line_1, Address_line_2, Address_Postal_Code, Address_City, Address_State, Address_Country, Description, Metadata_name_1, Metadata_name_2\n# Update Customers using CSV\nIf you would like to update customers data, you can do it using the CSV file with new data. However, remember to include a source_id in your CSV file to manage the update successfully.\nThis API request starts a process that affects Voucherify data in bulk. \nIn case of small jobs (like bulk update) the request is put into a queue and processed once every other bulk request placed in the queue prior to this request is finished. However, when the job takes a longer time (like vouchers generation) then it is processed in small portions in a round-robin fashion. When there is a list of vouchers generation scheduled, then they will all have the IN_PROGRESS status shortly. This way, small jobs added just after scheduling big jobs of the same type will be processed in a short time window. \nThe result will return the async ID. You can verify the status of your request via this API request.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "requestBody": {
          "description": "The file path is stored in the form file header.",
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/CustomersImportCSVRequestBody"
              },
              "examples": {}
            }
          }
        },
        "responses": {
          "2XX": {
            "description": "Returns ID of the scheduled async action. The response informs you that your request has been accepted and customers will be added to the repository asynchronously. To check the import status and result, copy the `async_action_id` from the response and pass it using the <!-- [Get Async Action](OpenAPI.json/paths/~1async-actions~1{asyncActionId}/get) -->[Get Async Action](ref:get-async-action) endpoint.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomersImportCsvCreateResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "async_action_id": "aa_0a875d56c805df6601"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/customers/bulk/async": {
      "post": {
        "operationId": "update-customers-in-bulk",
        "tags": [
          "Customers"
        ],
        "summary": "Update Customers in Bulk",
        "description": "Updates customers in one asynchronous operation.\nThe request can include up to **10 MB** of data.\nThe response returns a unique asynchronous action ID. Use this ID in the query paramater of the GET Async Action endpoint to check, e.g.:\n- The status of your request (in queue, in progress, done, or failed)\n- Resources that failed to be updated\n- The report file with details about the update\nIf a customer object is not found, it is **upserted**. This is shown in the report file in the **GET** Async Action endpoint. The upserted resources have value false in the found column and true in the updated column.\nThis API request starts a process that affects Voucherify data in bulk. In the case of small jobs (like bulk update), the request is put into a queue and processed when every other bulk request placed in the queue prior to this request is finished.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "requestBody": {
          "description": "List the customer fields to be updated in each customer object.",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "title": "Update Customers in bulk Request Body",
                "description": "Request body schema for `/customers/bulk/async`.",
                "items": {
                  "$ref": "#/components/schemas/CustomersUpdateInBulkRequestBody"
                }
              },
              "examples": {
                "Example": {
                  "value": [
                    {
                      "source_id": "John.Smith@email.com",
                      "name": "John Smith",
                      "email": "john.smith@email.com",
                      "description": "Updating customer data",
                      "phone": "+1 (132) 222-2222",
                      "address": {
                        "city": "New York",
                        "country": "United States",
                        "line_1": "123 Main St.",
                        "line_2": "APT 3 BLG 4",
                        "postal_code": "10001",
                        "state": "NY"
                      },
                      "metadata": {
                        "lang": "en",
                        "test": true
                      },
                      "birthday": "2022-04-04"
                    },
                    {
                      "source_id": "Jane.Smith@email.com",
                      "name": "Jane Smith",
                      "email": "Jane.Smith@email.com",
                      "description": "Updating customer data",
                      "phone": "+1 (132) 222-2222",
                      "address": {
                        "city": "New York",
                        "country": "United States",
                        "line_1": "123 Main St.",
                        "line_2": "APT 3 BLG 4",
                        "postal_code": "10001",
                        "state": "NY"
                      },
                      "metadata": {
                        "lang": "en",
                        "test": true
                      },
                      "birthday": "2022-03-03"
                    },
                    {
                      "source_id": "Sally.Smith@email.com",
                      "name": "Sally Smith",
                      "email": "Sally.Smith@email.com",
                      "description": "Updating customer data",
                      "phone": "+1 (132) 222-2222",
                      "address": {
                        "city": "New York",
                        "country": "United States",
                        "line_1": "123 Main St.",
                        "line_2": "APT 3 BLG 4",
                        "postal_code": "10001",
                        "state": "NY"
                      },
                      "metadata": {
                        "lang": "en",
                        "test": true
                      },
                      "birthdate": "2022-02-02"
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "2XX": {
            "description": "Returns the ID of the scheduled asynchronous action. The response informs you that the request has been accepted and the resources will be updated in the repository asynchronously. To check the status and result, copy the `async_action_id` from the response and use it as a query parameter in the [GET Async Action](ref:get-async-action) endpoint.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomersUpdateInBulkResponseBody"
                }
              }
            }
          }
        }
      }
    },
    "/v1/customers/metadata/async": {
      "post": {
        "operationId": "update-customers-metadata-in-bulk",
        "tags": [
          "Customers"
        ],
        "summary": "Update Customers' Metadata in Bulk",
        "description": "Updates metadata parameters for a list of customers. Every resource in the list will receive the metadata defined in the request.\nThe request can include up to **10 MB** of data.\nThe response returns a unique asynchronous action ID. Use this ID in the query paramater of the GET Async Action endpoint to check, e.g.:\n- The status of your request (in queue, in progress, done, or failed)\n- Resources that failed to be updated\n- The report file with details about the update\nIf a product object is not found, it is **upserted**. This is shown in the report file in the **GET** Async Action endpoint. The upserted resources have value false in the found column and true in the updated column.\nThis API request starts a process that affects Voucherify data in bulk. In the case of small jobs (like bulk update), the request is put into a queue and processed when every other bulk request placed in the queue prior to this request is finished.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "requestBody": {
          "description": "List the source_ids of the customers you would like to update with the metadata key/value pairs.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomersMetadataUpdateInBulkRequestBody"
              },
              "examples": {
                "Example": {
                  "value": {
                    "source_ids": [
                      "source_123",
                      "source_456"
                    ],
                    "metadata": {
                      "lang": "en",
                      "test": false
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "2XX": {
            "description": "Returns the ID of the scheduled asynchronous action. The response informs you that the request has been accepted and the resources will be updated in the repository asynchronously. To check the status and result, copy the `async_action_id` from the response and use it as a query parameter in the [GET Async Action](ref:get-async-action) endpoint.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomersMetadataUpdateInBulkResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "async_action_id": "aa_0a875d56c805df6601"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/customers/{customerId}/activity": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterCustomerId"
          },
          "name": "customerId",
          "in": "path",
          "required": true,
          "description": "A Voucherify customers id or source ID of the customer who performed the activities."
        }
      ],
      "get": {
        "operationId": "list-customer-activity",
        "tags": [
          "Customers"
        ],
        "summary": "List Customer Activity",
        "description": "Retrieve customer activities.",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterOrderCreatedAt"
            },
            "in": "query",
            "name": "order",
            "description": "Apply this filter to order the events according the date and time when it was created. "
          },
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterString"
            },
            "in": "query",
            "name": "starting_after_id",
            "description": "A cursor for pagination. It retrieves the events starting after an event with the given ID."
          },
          {
            "name": "start_date",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ParameterDate"
            },
            "description": "Timestamp representing the date and time which results must begin on. Represented in ISO 8601 format."
          },
          {
            "name": "end_date",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ParameterDate"
            },
            "description": "Timestamp representing the date and time which results must end on. Represented in ISO 8601 format."
          },
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterCampaignId"
            },
            "in": "query",
            "name": "campaign_id",
            "description": "Requests only events related to specific campaign identified by its ID."
          },
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterCampaignType"
            },
            "in": "query",
            "name": "campaign_type",
            "description": "Filters related customers activity for the selected campaign types. Allowed values: \nDISCOUNT_COUPONS,\nREFERRAL_PROGRAM,\nGIFT_VOUCHERS,\nPROMOTION,\nLOYALTY_PROGRAM."
          },
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterActivityCategory"
            },
            "in": "query",
            "name": "category",
            "description": "Filters activities for actions or effects. Allowed values: \nACTION,\nEFFECT."
          },
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterCustomerEvent"
            },
            "in": "query",
            "name": "type",
            "description": "Event name of the customer event."
          }
        ],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns a dictionary with customer activities.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomersActivityListResponseBody"
                }
              }
            }
          }
        }
      }
    },
    "/v1/customers/{customerId}/segments": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterCustomerId"
          },
          "name": "customerId",
          "in": "path",
          "required": true,
          "description": "Unique identifier of a customer represented by an internal customer ID or customer source ID."
        }
      ],
      "get": {
        "operationId": "list-customer-segments",
        "tags": [
          "Customers"
        ],
        "summary": "List Customer's Segments",
        "description": "Returns the list of segments IDs to which the customer belongs to.  \nIf you pass a customerId which is not stored and recognized by Voucherify as an existing customer in the system, the response will generate a list of segments that the customer would potentialy qualify for if they were to become a customer tracked in the system.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "The method returns segment(s) to which the given customer belongs to.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomersSegmentsListResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "object": "list",
                      "data_ref": "data",
                      "data": [
                        {
                          "id": "seg_DNAOhUtJffvX0f57ajLMFBYR",
                          "name": "area code not 123",
                          "object": "segment"
                        },
                        {
                          "id": "seg_IPIYx96l92Op0Sy5MOaImhgw",
                          "name": "not bob.smith@email.com",
                          "object": "segment"
                        },
                        {
                          "id": "seg_1wc52c5z6r1kQ81brO8j9Hk2",
                          "name": "Birthday After Dec 31",
                          "object": "segment"
                        },
                        {
                          "id": "seg_ZEbbT4mq1ePpM9PzR02lcww2",
                          "name": "Start with S",
                          "object": "segment"
                        },
                        {
                          "id": "seg_WJv55MbzQwnr56ttJ2xUrSgt",
                          "name": "Loyalty Card",
                          "object": "segment"
                        }
                      ],
                      "total": 5
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/customers/{customerId}/redeemables": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterCustomerId"
          },
          "name": "customerId",
          "in": "path",
          "required": true,
          "description": "Unique identifier of a customer represented by an internal customer ID or customer source ID."
        }
      ],
      "get": {
        "operationId": "list-customer-redeemables",
        "tags": [
          "Customers"
        ],
        "summary": "List Customer's Redeemables",
        "description": "Retrieves all the redeemables that have been assigned to the customer.\nTo use this endpoint, you must have the following permissions:\n- Read Customers (customers.details.read)",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterOrderListRedeemables"
            },
            "in": "query",
            "name": "order",
            "description": "Sorts the results using one of the filtering options, where the dash - preceding a sorting option means sorting in a descending order."
          },
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterString"
            },
            "in": "query",
            "name": "starting_after_id",
            "description": "A cursor for pagination. It retrieves the events starting after an event with the given ID."
          },
          {
            "name": "filters",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ParameterFiltersListCustomerRedeemables"
            },
            "description": "Filters for listing customer redeemables.",
            "style": "deepObject",
            "explode": true
          }
        ],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "The method returns redeemable(s) to which the given customer is assigned.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomersRedeemablesListResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "object": "list",
                      "data_ref": "data",
                      "data": [
                        {
                          "id": "rh_0e7b8db4700106a852",
                          "created_at": "2024-03-22T17:48:25.910Z",
                          "redeemable_id": "v_GXVguPhq2khgFxH7GrRXWA91gDr1LiA1",
                          "redeemable_object": "voucher",
                          "customer_id": "cust_p1ufreYbVbwZ1x70nFkH9rF9",
                          "holder_role": "OWNER",
                          "campaign_id": "camp_weer1c3p5ZgktqfW56RfoNaG",
                          "campaign_type": "DISCOUNT_COUPONS",
                          "voucher_type": "DISCOUNT_VOUCHER",
                          "redeemable": {
                            "type": "voucher",
                            "voucher": {
                              "id": "v_GXVguPhq2khgFxH7GrRXWA91gDr1LiA1",
                              "code": "3xRUnMVG",
                              "campaign": "Gaz6Q29w1d",
                              "campaign_id": "camp_weer1c3p5ZgktqfW56RfoNaG",
                              "category": null,
                              "category_id": null,
                              "categories": [],
                              "type": "DISCOUNT_VOUCHER",
                              "discount": {
                                "type": "AMOUNT",
                                "amount_off": 1000
                              },
                              "gift": null,
                              "loyalty_card": null,
                              "start_date": null,
                              "expiration_date": null,
                              "validity_timeframe": null,
                              "validity_hours": null,
                              "validity_day_of_week": null,
                              "active": true,
                              "additional_info": null,
                              "metadata": {},
                              "assets": {
                                "qr": {
                                  "id": "fa250fcd-8d51-41e7-9dda-9288ce2799a7",
                                  "url": "{{internalVoucherifyURL}}"
                                },
                                "barcode": {
                                  "id": "1b876033-ad88-4e74-8344-27fca1767006",
                                  "url": "{{internalVoucherifyURL}}"
                                }
                              },
                              "is_referral_code": false,
                              "created_at": "2024-03-22T17:48:18.57+00:00",
                              "updated_at": "2024-03-22T17:48:25.910974+00:00",
                              "holder_id": "cust_p1ufreYbVbwZ1x70nFkH9rF9",
                              "redemption": {
                                "quantity": null,
                                "redeemed_quantity": 0,
                                "object": "list",
                                "url": "/v1/vouchers/3xRUnMVG/redemptions?page=1&limit=10"
                              },
                              "publish": {
                                "object": "list",
                                "count": 1,
                                "url": "/v1/vouchers/3xRUnMVG/publications?page=1&limit=10"
                              },
                              "object": "voucher"
                            },
                            "status": "ACTIVE"
                          }
                        },
                        {
                          "id": "rh_0e79fe37e4926cafd6",
                          "created_at": "2024-03-21T12:43:02.915Z",
                          "redeemable_id": "v_nnxc1aFzFZCAhRlG6sm0kSO4jKUohc9b",
                          "redeemable_object": "voucher",
                          "customer_id": "cust_p1ufreYbVbwZ1x70nFkH9rF9",
                          "holder_role": "REFERRER",
                          "campaign_id": "camp_ixXNxP8kRoV15RoyZU4HqqYJ",
                          "campaign_type": "REFERRAL_PROGRAM",
                          "voucher_type": "DISCOUNT_VOUCHER",
                          "redeemable": {
                            "type": "voucher",
                            "voucher": {
                              "id": "v_nnxc1aFzFZCAhRlG6sm0kSO4jKUohc9b",
                              "code": "PBF3ZYfS",
                              "campaign": "REFER_2",
                              "campaign_id": "camp_ixXNxP8kRoV15RoyZU4HqqYJ",
                              "category": null,
                              "category_id": null,
                              "categories": [],
                              "type": "DISCOUNT_VOUCHER",
                              "discount": {
                                "type": "AMOUNT",
                                "amount_off": 88800,
                                "effect": "APPLY_TO_ORDER"
                              },
                              "gift": null,
                              "loyalty_card": null,
                              "start_date": null,
                              "expiration_date": null,
                              "validity_timeframe": null,
                              "validity_hours": null,
                              "validity_day_of_week": null,
                              "active": true,
                              "additional_info": null,
                              "metadata": {},
                              "assets": {
                                "qr": {
                                  "id": "fc0471bf-0c7b-443f-9532-303437041eea",
                                  "url": "{{internalVoucherifyURL}}"
                                },
                                "barcode": {
                                  "id": "5b2f2007-494b-40c3-9d4c-ad27269a0cd0",
                                  "url": "{{internalVoucherifyURL}}"
                                }
                              },
                              "is_referral_code": true,
                              "created_at": "2024-03-21T12:42:49.771+00:00",
                              "updated_at": "2024-03-21T12:43:02.915953+00:00",
                              "holder_id": "cust_p1ufreYbVbwZ1x70nFkH9rF9",
                              "referrer_id": "cust_p1ufreYbVbwZ1x70nFkH9rF9",
                              "redemption": {
                                "quantity": null,
                                "redeemed_quantity": 0,
                                "object": "list",
                                "url": "/v1/vouchers/PBF3ZYfS/redemptions?page=1&limit=10"
                              },
                              "publish": {
                                "object": "list",
                                "count": 1,
                                "url": "/v1/vouchers/PBF3ZYfS/publications?page=1&limit=10"
                              },
                              "object": "voucher"
                            },
                            "status": "ACTIVE"
                          }
                        }
                      ],
                      "total": 2,
                      "has_more": false
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/orders": {
      "get": {
        "operationId": "list-orders",
        "tags": [
          "Orders"
        ],
        "summary": "List Orders",
        "description": "Returns a list of orders.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterOrderListOrders"
            },
            "in": "query",
            "name": "order",
            "description": "This is a property that controls the sorting direction of the results. Sort the results using one of the filtering options, where the dash - preceding a sorting option means sorting in a descending order."
          }
        ],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns a dictionary with order objects. The orders are returned sorted by creation date by default, with the most recent orders appearing last, unless you specify another sequence using the order query parameter.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrdersListResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "object": "list",
                      "data_ref": "orders",
                      "orders": [
                        {
                          "id": "ord_v5vupdacgud1CwUSyKqSlHuk",
                          "source_id": null,
                          "created_at": "2022-09-09T07:44:41.594Z",
                          "updated_at": "2022-09-09T07:44:42.331Z",
                          "status": "PAID",
                          "amount": 2700,
                          "discount_amount": 1243,
                          "items_discount_amount": 270,
                          "total_discount_amount": 1513,
                          "total_amount": 1187,
                          "items": [
                            {
                              "object": "order_item",
                              "source_id": "prod_5h1pp1ng",
                              "related_object": "product",
                              "quantity": 1,
                              "amount": 700,
                              "discount_amount": 70,
                              "price": 700,
                              "subtotal_amount": 630,
                              "product": {
                                "name": "Shipping"
                              }
                            },
                            {
                              "object": "order_item",
                              "source_id": "roses_1",
                              "related_object": "product",
                              "quantity": 1,
                              "amount": 500,
                              "discount_amount": 50,
                              "price": 500,
                              "subtotal_amount": 450,
                              "product": {
                                "name": "Bouquet - Romantic Roses",
                                "price": 500
                              }
                            },
                            {
                              "object": "order_item",
                              "source_id": "vase_1",
                              "related_object": "product",
                              "quantity": 1,
                              "amount": 1500,
                              "discount_amount": 150,
                              "price": 1500,
                              "subtotal_amount": 1350,
                              "product": {
                                "name": "Vase - Boho Vintage",
                                "price": 1500
                              }
                            }
                          ],
                          "metadata": {},
                          "customer": {
                            "id": "cust_tAED42tFhLM9v7GmZUaklJFd",
                            "object": "customer"
                          },
                          "customer_id": "cust_tAED42tFhLM9v7GmZUaklJFd",
                          "referrer_id": null,
                          "object": "order",
                          "redemptions": {
                            "r_0baa093537528ef645": {
                              "date": "2022-09-09T07:44:41.695Z",
                              "related_object_type": "redemption",
                              "related_object_id": "r_0baa093537528ef645",
                              "stacked": [
                                "r_0baa093537528ef646",
                                "r_0baa093537528ef647",
                                "r_0baa093537528ef648"
                              ]
                            }
                          }
                        },
                        {
                          "id": "ord_3JkWC6jG0JgyRf5lO3r4IyU1",
                          "source_id": null,
                          "created_at": "2022-09-09T07:04:22.597Z",
                          "updated_at": "2022-09-09T07:04:23.743Z",
                          "status": "PAID",
                          "amount": 73100,
                          "items_discount_amount": 7310,
                          "total_discount_amount": 7310,
                          "total_amount": 65790,
                          "items": [
                            {
                              "object": "order_item",
                              "product_id": "prod_0b7d7c4e814be5c502",
                              "quantity": 1,
                              "amount": 70000,
                              "discount_amount": 7000,
                              "price": 70000,
                              "subtotal_amount": 63000,
                              "product": {
                                "name": "Apple iPhone 12",
                                "price": 70000
                              }
                            },
                            {
                              "object": "order_item",
                              "product_id": "prod_0b7d7dfb05cbe5c616",
                              "sku_id": "sku_0b7d7dfb090be5c619",
                              "quantity": 1,
                              "amount": 1600,
                              "discount_amount": 160,
                              "price": 1600,
                              "subtotal_amount": 1440,
                              "product": {
                                "name": "Comic Books1",
                                "price": 1600
                              },
                              "sku": {
                                "sku": "Comics1",
                                "price": 1600
                              }
                            },
                            {
                              "object": "order_item",
                              "product_id": "prod_0b72b0bd64d198e3ae",
                              "quantity": 1,
                              "amount": 1500,
                              "discount_amount": 150,
                              "price": 1500,
                              "subtotal_amount": 1350,
                              "product": {
                                "name": "Vase - Boho Vintage",
                                "price": 1500
                              }
                            }
                          ],
                          "metadata": {},
                          "customer": {
                            "id": "cust_tAED42tFhLM9v7GmZUaklJFd",
                            "object": "customer"
                          },
                          "customer_id": "cust_tAED42tFhLM9v7GmZUaklJFd",
                          "referrer_id": null,
                          "object": "order",
                          "redemptions": {
                            "r_0ba9fffae90e1b2495": {
                              "date": "2022-09-09T07:04:22.692Z",
                              "related_object_type": "voucher",
                              "related_object_id": "v_24rljiUfdLNC9poBf0BPNmoh2txzFkLs"
                            }
                          }
                        },
                        {
                          "id": "ord_HwdbziIPvUZJkIC7z74FKmPv",
                          "source_id": null,
                          "created_at": "2022-09-09T06:47:14.195Z",
                          "updated_at": "2022-09-09T06:47:15.369Z",
                          "status": "PAID",
                          "amount": 71600,
                          "discount_amount": 7160,
                          "total_discount_amount": 7160,
                          "total_amount": 64440,
                          "items": [
                            {
                              "object": "order_item",
                              "product_id": "prod_0b7d7dfb05cbe5c616",
                              "sku_id": "sku_0b7d7dfb090be5c619",
                              "quantity": 1,
                              "amount": 1600,
                              "price": 1600,
                              "subtotal_amount": 1600,
                              "product": {
                                "name": "Comic Books1",
                                "price": 1600
                              },
                              "sku": {
                                "sku": "Comics1",
                                "price": 1600
                              }
                            },
                            {
                              "object": "order_item",
                              "product_id": "prod_0b7d7c4e814be5c502",
                              "quantity": 1,
                              "amount": 70000,
                              "price": 70000,
                              "subtotal_amount": 70000,
                              "product": {
                                "name": "Apple iPhone 12",
                                "price": 70000
                              }
                            }
                          ],
                          "metadata": {},
                          "customer": {
                            "id": "cust_tAED42tFhLM9v7GmZUaklJFd",
                            "object": "customer"
                          },
                          "customer_id": "cust_tAED42tFhLM9v7GmZUaklJFd",
                          "referrer_id": null,
                          "object": "order",
                          "redemptions": {
                            "r_0ba9fc0eb00e1b2230": {
                              "date": "2022-09-09T06:47:14.369Z",
                              "related_object_type": "voucher",
                              "related_object_id": "v_3vEprqa6tbzfhFtpjr4mDlkNchXepW7s"
                            }
                          }
                        },
                        {
                          "id": "ord_HRluwFS2seoILUkXxWML0D7Z",
                          "source_id": null,
                          "created_at": "2022-09-09T06:44:27.383Z",
                          "updated_at": "2022-09-09T06:44:28.252Z",
                          "status": "PAID",
                          "amount": 71600,
                          "discount_amount": 100,
                          "total_discount_amount": 100,
                          "total_amount": 71500,
                          "items": [
                            {
                              "object": "order_item",
                              "product_id": "prod_0b7d7dfb05cbe5c616",
                              "sku_id": "sku_0b7d7dfb090be5c619",
                              "quantity": 1,
                              "amount": 1600,
                              "price": 1600,
                              "subtotal_amount": 1600,
                              "product": {
                                "name": "Comic Books1",
                                "price": 1600
                              },
                              "sku": {
                                "sku": "Comics1",
                                "price": 1600
                              }
                            },
                            {
                              "object": "order_item",
                              "product_id": "prod_0b7d7c4e814be5c502",
                              "quantity": 1,
                              "amount": 70000,
                              "price": 70000,
                              "subtotal_amount": 70000,
                              "product": {
                                "name": "Apple iPhone 12",
                                "price": 70000
                              }
                            }
                          ],
                          "metadata": {},
                          "customer": {
                            "id": "cust_tAED42tFhLM9v7GmZUaklJFd",
                            "object": "customer"
                          },
                          "referrer": {
                            "id": "cust_Vzck5i8U3OhcEUFY6MKhN9Rv",
                            "object": "customer"
                          },
                          "customer_id": "cust_tAED42tFhLM9v7GmZUaklJFd",
                          "referrer_id": "cust_Vzck5i8U3OhcEUFY6MKhN9Rv",
                          "object": "order",
                          "redemptions": {
                            "r_0ba9fb6bb7928ed9ec": {
                              "date": "2022-09-09T06:44:27.486Z",
                              "related_object_type": "voucher",
                              "related_object_id": "v_vhHuiEmZSchWHtE0xKm0HM7PFCR9cNkA",
                              "related_object_parent_id": "camp_rRsfatlwN7unSeUIJDCYedal"
                            }
                          }
                        },
                        {
                          "id": "ord_Qg5utCohAZ3tafYvc1O4C80r",
                          "source_id": null,
                          "created_at": "2022-09-09T06:42:34.083Z",
                          "updated_at": "2022-09-09T06:42:35.169Z",
                          "status": "PAID",
                          "amount": 70000,
                          "discount_amount": 4000,
                          "total_discount_amount": 4000,
                          "total_amount": 66000,
                          "items": [
                            {
                              "object": "order_item",
                              "product_id": "prod_0b7d7c4e814be5c502",
                              "quantity": 1,
                              "amount": 70000,
                              "price": 70000,
                              "subtotal_amount": 70000,
                              "product": {
                                "name": "Apple iPhone 12",
                                "price": 70000
                              }
                            }
                          ],
                          "metadata": {},
                          "customer": {
                            "id": "cust_tAED42tFhLM9v7GmZUaklJFd",
                            "object": "customer"
                          },
                          "customer_id": "cust_tAED42tFhLM9v7GmZUaklJFd",
                          "referrer_id": null,
                          "object": "order",
                          "redemptions": {
                            "r_0ba9fafd11d28ed999": {
                              "date": "2022-09-09T06:42:34.183Z",
                              "related_object_type": "voucher",
                              "related_object_id": "v_RaMaTT7F0Q47BetdGcFxsyqwo1aZGzJs",
                              "related_object_parent_id": "camp_hg7ajfHh6DcE1xa18mw3SdF6"
                            }
                          }
                        },
                        {
                          "id": "ord_G9LBb5SOPa36pHdwxUvzkw4P",
                          "source_id": null,
                          "created_at": "2022-09-09T06:38:17.984Z",
                          "updated_at": "2022-09-09T06:38:19.064Z",
                          "status": "PAID",
                          "amount": 4600,
                          "items_discount_amount": 300,
                          "total_discount_amount": 300,
                          "total_amount": 4300,
                          "items": [
                            {
                              "object": "order_item",
                              "product_id": "prod_0b7d7dfb05cbe5c616",
                              "sku_id": "sku_0b7d7dfb090be5c619",
                              "quantity": 1,
                              "amount": 1600,
                              "price": 1600,
                              "subtotal_amount": 1600,
                              "product": {
                                "name": "Comic Books1",
                                "price": 1600
                              },
                              "sku": {
                                "sku": "Comics1",
                                "price": 1600
                              }
                            },
                            {
                              "object": "order_item",
                              "product_id": "prod_0a65b3ff8592d7a5b5",
                              "quantity": 1,
                              "amount": 3000,
                              "discount_amount": 300,
                              "price": 3000,
                              "subtotal_amount": 2700,
                              "product": {
                                "name": "Koffee Cup",
                                "price": 3000
                              }
                            }
                          ],
                          "metadata": {},
                          "customer": {
                            "id": "cust_tAED42tFhLM9v7GmZUaklJFd",
                            "object": "customer"
                          },
                          "customer_id": "cust_tAED42tFhLM9v7GmZUaklJFd",
                          "referrer_id": null,
                          "object": "order",
                          "redemptions": {
                            "r_0ba9fa02fcd28ed8f1": {
                              "date": "2022-09-09T06:38:18.099Z",
                              "related_object_type": "voucher",
                              "related_object_id": "v_KqP2NOSb4dJb1D6UBhcq7ScPZXun0y40",
                              "related_object_parent_id": "camp_hC2GdqYtOmTT45zfhib62cK1"
                            }
                          }
                        },
                        {
                          "id": "ord_N3YBowDTZs0UH2hHoMZLbUDN",
                          "source_id": null,
                          "created_at": "2022-09-09T06:18:31.459Z",
                          "updated_at": "2022-09-09T06:18:31.624Z",
                          "status": "PAID",
                          "amount": 71600,
                          "discount_amount": 7160,
                          "total_discount_amount": 7160,
                          "total_amount": 64440,
                          "items": [
                            {
                              "object": "order_item",
                              "product_id": "prod_0b7d7c4e814be5c502",
                              "quantity": 1,
                              "amount": 70000,
                              "price": 70000,
                              "subtotal_amount": 70000,
                              "product": {
                                "name": "Apple iPhone 12",
                                "price": 70000
                              }
                            },
                            {
                              "object": "order_item",
                              "product_id": "prod_0b7d7dfb05cbe5c616",
                              "sku_id": "sku_0b7d7dfb090be5c619",
                              "quantity": 1,
                              "amount": 1600,
                              "price": 1600,
                              "subtotal_amount": 1600,
                              "product": {
                                "name": "Comic Books1",
                                "price": 1600
                              },
                              "sku": {
                                "sku": "Comics1",
                                "price": 1600
                              }
                            }
                          ],
                          "metadata": {},
                          "customer": {
                            "id": "cust_Vzck5i8U3OhcEUFY6MKhN9Rv",
                            "object": "customer"
                          },
                          "customer_id": "cust_Vzck5i8U3OhcEUFY6MKhN9Rv",
                          "referrer_id": null,
                          "object": "order",
                          "redemptions": {
                            "r_0ba9f57c37128ed639": {
                              "date": "2022-09-09T06:18:31.516Z",
                              "related_object_type": "promotion_tier",
                              "related_object_id": "promo_CQonGnrsFAdEJfJQ3oKB3a8G",
                              "related_object_parent_id": "camp_SGq39XXJ47vm7Xys3D0NLgQ0"
                            }
                          }
                        },
                        {
                          "id": "ord_3R6vsxRZRkND8rpe0rAn9Agc",
                          "source_id": null,
                          "created_at": "2022-09-05T08:13:13.720Z",
                          "updated_at": "2022-09-05T08:13:14.498Z",
                          "status": "PAID",
                          "amount": 74000,
                          "items_discount_amount": 1500,
                          "total_discount_amount": 1500,
                          "total_amount": 72500,
                          "items": [
                            {
                              "object": "order_item",
                              "product_id": "prod_0b7d7c4e814be5c502",
                              "quantity": 1,
                              "amount": 70000,
                              "price": 70000,
                              "subtotal_amount": 70000,
                              "product": {
                                "name": "Apple iPhone 12",
                                "price": 70000
                              }
                            },
                            {
                              "object": "order_item",
                              "product_id": "prod_0b72b0bd64d198e3ae",
                              "quantity": 2,
                              "amount": 3000,
                              "discount_amount": 500,
                              "price": 1500,
                              "subtotal_amount": 2500,
                              "product": {
                                "name": "Vase - Boho Vintage",
                                "price": 1500
                              }
                            },
                            {
                              "object": "order_item",
                              "product_id": "prod_0b72b00ffed198e344",
                              "quantity": 2,
                              "amount": 1000,
                              "discount_amount": 1000,
                              "price": 500,
                              "subtotal_amount": 0,
                              "product": {
                                "name": "Bouquet - Romantic Roses",
                                "price": 500
                              }
                            }
                          ],
                          "metadata": {},
                          "customer": {
                            "id": "cust_CSnYd37MXmrbS19XCrghjBsv",
                            "object": "customer"
                          },
                          "customer_id": "cust_CSnYd37MXmrbS19XCrghjBsv",
                          "referrer_id": null,
                          "object": "order",
                          "redemptions": {
                            "r_0ba4e961444579711a": {
                              "date": "2022-09-05T08:13:13.873Z",
                              "related_object_type": "voucher",
                              "related_object_id": "v_hwySVBBk6YmMD4GzZHJzke1Fxo3QO7kP",
                              "related_object_parent_id": "camp_Uji5a53s5wRSUHqznncTkhHh"
                            }
                          }
                        },
                        {
                          "id": "ord_7bqlkoHyEJCQuxVZpKfZYNeA",
                          "source_id": null,
                          "created_at": "2022-09-02T17:12:13.213Z",
                          "updated_at": "2022-09-02T17:12:13.969Z",
                          "status": "PAID",
                          "amount": 292400,
                          "items_discount_amount": 900,
                          "total_discount_amount": 900,
                          "total_amount": 291500,
                          "items": [
                            {
                              "object": "order_item",
                              "product_id": "prod_0b7d7dfb05cbe5c616",
                              "sku_id": "sku_0b7d7dfb090be5c619",
                              "quantity": 4,
                              "amount": 6400,
                              "price": 1600,
                              "subtotal_amount": 6400,
                              "product": {
                                "name": "Comic Books1",
                                "price": 1600
                              },
                              "sku": {
                                "sku": "Comics1",
                                "price": 1600
                              }
                            },
                            {
                              "object": "order_item",
                              "product_id": "prod_0b72b0bd64d198e3ae",
                              "quantity": 4,
                              "amount": 6000,
                              "price": 1500,
                              "subtotal_amount": 6000,
                              "product": {
                                "name": "Vase - Boho Vintage",
                                "price": 1500
                              }
                            },
                            {
                              "object": "order_item",
                              "product_id": "prod_0b7d7c4e814be5c502",
                              "quantity": 4,
                              "amount": 280000,
                              "discount_amount": 900,
                              "price": 70000,
                              "subtotal_amount": 279100,
                              "product": {
                                "name": "Apple iPhone 12",
                                "price": 70000
                              }
                            }
                          ],
                          "metadata": {},
                          "customer": {
                            "id": "cust_CSnYd37MXmrbS19XCrghjBsv",
                            "object": "customer"
                          },
                          "customer_id": "cust_CSnYd37MXmrbS19XCrghjBsv",
                          "referrer_id": null,
                          "object": "order",
                          "redemptions": {
                            "r_0ba187f9bb45792c13": {
                              "date": "2022-09-02T17:12:13.293Z",
                              "related_object_type": "voucher",
                              "related_object_id": "v_pg6DhwhmeZASoSoJ15PdzMT9MhsPjYuc",
                              "related_object_parent_id": "camp_W8DJVd8J0btqXT6FBwn7BSkC"
                            }
                          }
                        },
                        {
                          "id": "ord_7HwbJiHmS07O7FsVAtjJcuRS",
                          "source_id": null,
                          "created_at": "2022-09-02T17:08:37.794Z",
                          "updated_at": "2022-09-02T17:08:38.879Z",
                          "status": "PAID",
                          "amount": 223900,
                          "items_discount_amount": 900,
                          "total_discount_amount": 900,
                          "total_amount": 223000,
                          "items": [
                            {
                              "object": "order_item",
                              "product_id": "prod_0b7d7dfb05cbe5c616",
                              "sku_id": "sku_0b7d7dfb090be5c619",
                              "quantity": 4,
                              "amount": 6400,
                              "discount_amount": 300,
                              "price": 1600,
                              "subtotal_amount": 6100,
                              "product": {
                                "name": "Comic Books1",
                                "price": 1600
                              },
                              "sku": {
                                "sku": "Comics1",
                                "price": 1600
                              }
                            },
                            {
                              "object": "order_item",
                              "product_id": "prod_0b7d7c4e814be5c502",
                              "quantity": 3,
                              "amount": 210000,
                              "discount_amount": 300,
                              "price": 70000,
                              "subtotal_amount": 209700,
                              "product": {
                                "name": "Apple iPhone 12",
                                "price": 70000
                              }
                            },
                            {
                              "object": "order_item",
                              "product_id": "prod_0b72b0bd64d198e3ae",
                              "quantity": 5,
                              "amount": 7500,
                              "discount_amount": 300,
                              "price": 1500,
                              "subtotal_amount": 7200,
                              "product": {
                                "name": "Vase - Boho Vintage",
                                "price": 1500
                              }
                            }
                          ],
                          "metadata": {},
                          "customer": {
                            "id": "cust_CSnYd37MXmrbS19XCrghjBsv",
                            "object": "customer"
                          },
                          "customer_id": "cust_CSnYd37MXmrbS19XCrghjBsv",
                          "referrer_id": null,
                          "object": "order",
                          "redemptions": {
                            "r_0ba1872762c5792b73": {
                              "date": "2022-09-02T17:08:37.899Z",
                              "related_object_type": "voucher",
                              "related_object_id": "v_yQydppWWJpSUuGNEWJ4I2upFGY2Ma4IY",
                              "related_object_parent_id": "camp_A5L21BD4cJii28882owYBqTV"
                            }
                          }
                        }
                      ],
                      "total": 441
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "create-order",
        "tags": [
          "Orders"
        ],
        "summary": "Create Order",
        "description": "Creates an order object and triggers an order creation event.\n 📘 Upsert Mode\n If you pass an id or a source_id that already exists in the order database, Voucherify will return a related order object with updated fields.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "requestBody": {
          "description": "Specify the order parameters.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrdersCreateRequestBody"
              },
              "examples": {
                "Example": {
                  "value": {
                    "amount": 20000,
                    "customer": {
                      "source_id": "sample_customer"
                    },
                    "status": "PAID",
                    "items": [
                      {
                        "quantity": 1,
                        "price": 20000,
                        "source_id": "sample product1",
                        "related_object": "product",
                        "product": {
                          "metadata": {
                            "key": "value"
                          }
                        }
                      }
                    ]
                  }
                },
                "Example 2": {
                  "value": {
                    "source_id": "new",
                    "status": "FULFILLED",
                    "metadata": {
                      "location_id": [
                        "L1",
                        "L2"
                      ],
                      "payment_mean": [
                        "paypal",
                        "credit-card"
                      ]
                    },
                    "customer": {
                      "source_id": "bob.smith.1@email.com",
                      "name": "Bob Smith",
                      "description": "A nice customer",
                      "email": "bob.smith.1@email.com",
                      "phone": "+1 933 222 3333",
                      "address": {
                        "city": "New York",
                        "country": "United Statese",
                        "line_1": "123 Main St",
                        "line_2": "APT 3 BLG 4",
                        "postal_code": "10001",
                        "state": "NY"
                      },
                      "metadata": {
                        "lang": "en",
                        "test": false
                      },
                      "birthdate": "2022-01-02"
                    },
                    "referrer": {
                      "source_id": "jane.smith@email.com",
                      "name": "Jane Smith",
                      "description": "A really nice customer",
                      "email": "jane.smith@email.com",
                      "phone": "+1 933 222 3334",
                      "address": {
                        "city": "New York",
                        "country": "United States",
                        "line_1": "123 Main St.",
                        "line_2": "APT 3 BLG 4",
                        "postal_code": "10001",
                        "state": "NY"
                      },
                      "metadata": {
                        "lang": "en",
                        "test": false
                      },
                      "birthday": "2022-03-03"
                    },
                    "items": [
                      {
                        "source_id": "prod_1",
                        "related_object": "product",
                        "quantity": 2,
                        "product": {
                          "name": "Apple iPhone 12",
                          "price": 60000,
                          "metadata": {
                            "color": [
                              "purple"
                            ],
                            "vendor": "mall"
                          },
                          "override": true
                        }
                      },
                      {
                        "source_id": "ComicBook_1",
                        "related_object": "sku",
                        "quantity": 1,
                        "product": {
                          "source_id": "Books",
                          "name": "Comic Books1",
                          "price": 2100,
                          "metadata": {
                            "color": [
                              "silver"
                            ],
                            "vendor": "Bookstore1"
                          },
                          "override": true
                        },
                        "sku": {
                          "sku": "Comics1",
                          "source_id": "ComicBook_1",
                          "price": 1700,
                          "metadata": {
                            "color": [
                              "golden"
                            ],
                            "vendor": "islands"
                          },
                          "override": true
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "2XX": {
            "description": "Returns an order object if the operation succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrdersCreateResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "id": "ord_cRKOEXiBOj0EZKF7g9n6l0eH",
                      "source_id": "new",
                      "created_at": "2022-09-09T09:20:01.660Z",
                      "updated_at": "2022-09-09T09:24:43.604Z",
                      "status": "FULFILLED",
                      "amount": 121700,
                      "total_amount": 121700,
                      "items": [
                        {
                          "object": "order_item",
                          "source_id": "prod_1",
                          "related_object": "product",
                          "quantity": 2,
                          "amount": 120000,
                          "price": 60000,
                          "subtotal_amount": 120000,
                          "product": {
                            "id": "prod_0b7d7c4e814be5c502",
                            "source_id": "prod_1",
                            "name": "Apple iPhone 12",
                            "metadata": {
                              "color": [
                                "purple"
                              ],
                              "vendor": "mall"
                            },
                            "price": 60000
                          }
                        },
                        {
                          "object": "order_item",
                          "source_id": "ComicBook_1",
                          "related_object": "sku",
                          "product_id": "prod_0b7d7dfb05cbe5c616",
                          "quantity": 1,
                          "amount": 1700,
                          "price": 1700,
                          "subtotal_amount": 1700,
                          "product": {
                            "id": "prod_0b7d7dfb05cbe5c616",
                            "source_id": "Books",
                            "name": "Comic Books1",
                            "metadata": {
                              "color": [
                                "silver"
                              ],
                              "vendor": "Bookstore1"
                            },
                            "price": 2100
                          },
                          "sku": {
                            "id": "sku_0b7d7dfb090be5c619",
                            "source_id": "ComicBook_1",
                            "sku": "Comics1",
                            "metadata": {
                              "color": [
                                "golden"
                              ],
                              "vendor": "islands"
                            },
                            "price": 1700
                          }
                        }
                      ],
                      "metadata": {
                        "location_id": [
                          "L1",
                          "L2"
                        ],
                        "payment_mean": [
                          "paypal",
                          "credit-card"
                        ]
                      },
                      "customer": {
                        "id": "cust_H0nXrItO1DNV3UiPIl54HA5o",
                        "object": "customer"
                      },
                      "referrer": {
                        "id": "cust_Vzck5i8U3OhcEUFY6MKhN9Rv",
                        "object": "customer"
                      },
                      "customer_id": "cust_H0nXrItO1DNV3UiPIl54HA5o",
                      "referrer_id": "cust_Vzck5i8U3OhcEUFY6MKhN9Rv",
                      "object": "order"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/orders/{orderId}": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterOrderId"
          },
          "name": "orderId",
          "in": "path",
          "required": true,
          "description": "Unique Voucherify order ID or order source ID."
        }
      ],
      "get": {
        "operationId": "get-order",
        "tags": [
          "Orders"
        ],
        "summary": "Get Order",
        "description": "Retrieve an order.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns an order object if a valid identifier was provided. ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrdersGetResponseBody"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "update-order",
        "tags": [
          "Orders"
        ],
        "summary": "Update Order",
        "description": "Updates the specified order by setting the values of the parameters passed in the request body. Any parameters not provided will be left unchanged.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "requestBody": {
          "description": "Specify the parameters of the order that are to be updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrdersUpdateRequestBody"
              },
              "examples": {
                "Example": {
                  "value": {
                    "status": "CANCELED"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "2XX": {
            "description": "Returns the order object if the update succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrdersUpdateResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "id": "ord_cRKOEXiBOj0EZKF7g9n6l0eH",
                      "source_id": "new",
                      "created_at": "2022-09-09T09:20:01.660Z",
                      "updated_at": "2022-09-09T09:41:00.881Z",
                      "status": "CANCELED",
                      "amount": 121700,
                      "total_amount": 121700,
                      "items": [
                        {
                          "object": "order_item",
                          "source_id": "prod_1",
                          "related_object": "product",
                          "quantity": 2,
                          "amount": 120000,
                          "price": 60000,
                          "subtotal_amount": 120000,
                          "product": {
                            "id": "prod_0b7d7c4e814be5c502",
                            "source_id": "prod_1",
                            "name": "Apple iPhone 12",
                            "metadata": {
                              "color": [
                                "purple"
                              ],
                              "vendor": "mall"
                            },
                            "price": 60000
                          }
                        },
                        {
                          "object": "order_item",
                          "source_id": "ComicBook_1",
                          "related_object": "sku",
                          "product_id": "prod_0b7d7dfb05cbe5c616",
                          "quantity": 1,
                          "amount": 1700,
                          "price": 1700,
                          "subtotal_amount": 1700,
                          "product": {
                            "id": "prod_0b7d7dfb05cbe5c616",
                            "source_id": "Books",
                            "name": "Comic Books1",
                            "metadata": {
                              "color": [
                                "silver"
                              ],
                              "vendor": "Bookstore1"
                            },
                            "price": 2100
                          },
                          "sku": {
                            "id": "sku_0b7d7dfb090be5c619",
                            "source_id": "ComicBook_1",
                            "sku": "Comics1",
                            "metadata": {
                              "color": [
                                "golden"
                              ],
                              "vendor": "islands"
                            },
                            "price": 1700
                          }
                        }
                      ],
                      "metadata": {
                        "location_id": [
                          "L1",
                          "L2"
                        ],
                        "payment_mean": [
                          "paypal",
                          "credit-card"
                        ]
                      },
                      "customer": {
                        "id": "cust_H0nXrItO1DNV3UiPIl54HA5o",
                        "object": "customer"
                      },
                      "referrer": {
                        "id": "cust_Vzck5i8U3OhcEUFY6MKhN9Rv",
                        "object": "customer"
                      },
                      "customer_id": "cust_H0nXrItO1DNV3UiPIl54HA5o",
                      "referrer_id": "cust_Vzck5i8U3OhcEUFY6MKhN9Rv",
                      "object": "order"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/orders/import": {
      "post": {
        "operationId": "import-orders",
        "tags": [
          "Orders"
        ],
        "summary": "Import Orders",
        "description": "\n 🚧 Historical orders\n This endpoint should only be used to import historical orders into Voucherify. For on-going synchronization, the create order and update order endpoints should be used. This is critical because this endpoint does not store events or launch distributions.\n# Limitations\n## Import volume\nThere can be only a single on-going order import per tenant per project at a given time. The user can schedule more imports but those extra imports will be scheduled to run in sequence one by one.  \n## Maximum count of orders in single import\nThere is a 2000 limit but we might decide to change it to a lower / higher value at any given time depending if we find this value is too high or too low with time.\n# Notifications\nThere are no notifications on the Dashboard because this import is launched via the API.\n# Triggered actions\n  \nIf you import orders with customers, then a logic will be scheduled responsible for placing these customers into segments and refreshing the segments summary. Consequently, this update will trigger \n- **customers entering into segments** \n- **distributions** based on any rules tied to customer entering segment(s)\n- **earning rules** based on the customer entering segment(s)\n# What is not triggered\n1. No webhooks are triggered during the import of orders - for both orders and upserted products / skus.  \n2. Distributions based on Order Update, Order Paid, Order Created and Order Cancelled. In other words if you have a distribution based on Order Paid and you import an order with a PAID status, the distribution is not going to be triggered.    \n3. No events are created during the import of orders - for both orders and upserted products / skus. In other words you wont see any events in the Activity tab in the Dashboard such as Order created or Order paid. If you are additionally upserting products / skus, then you wont see the Product created events listed, etc.   \n4. Earning rules based on Order Paid wont be triggered.\nThis API request starts a process that affects Voucherify data in bulk. \nIn case of small jobs (like bulk update) the request is put into a queue and processed once every other bulk request placed in the queue prior to this request is finished. However, when the job takes a longer time (like vouchers generation) then it is processed in small portions in a round-robin fashion. When there is a list of vouchers generation scheduled, then they will all have the IN_PROGRESS status shortly. This way, small jobs added just after scheduling big jobs of the same type will be processed in a short time window. \nThe result will return the async ID. You can verify the status of your request via this API request.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "requestBody": {
          "description": "The request body is sent in the form of an array of order objects.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrdersImportCreateRequestBody"
              },
              "examples": {
                "Example": {
                  "value": [
                    {
                      "source_id": "orderImport14",
                      "status": "PAID",
                      "metadata": {
                        "location_id": [
                          "L1",
                          "L2"
                        ],
                        "payment_mean": [
                          "paypal",
                          "credit-card"
                        ]
                      },
                      "customer": {
                        "source_id": "bob2.smith@email.com",
                        "name": "Bob Smith",
                        "description": "A nice customer",
                        "email": "bob.smith@email.com",
                        "phone": "+1 933 222 3333",
                        "address": {
                          "city": "New York",
                          "country": "United States",
                          "line_1": "123 Main St.",
                          "line_2": "APT 3 BLG 4",
                          "postal_code": "10001",
                          "state": "NY"
                        },
                        "metadata": {
                          "lang": "en",
                          "test": true
                        },
                        "birthdate": "2022-01-01"
                      },
                      "referrer": {
                        "source_id": "jane.smith@email.com",
                        "name": "Jane Smith",
                        "description": "A really nice customer",
                        "email": "jane.smith@email.com",
                        "phone": "+1 933 222 3334",
                        "address": {
                          "city": "New York",
                          "country": "United States",
                          "line_1": "123 Main St.",
                          "line_2": "APT 3 BLG 4",
                          "postal_code": "10001",
                          "state": "NY"
                        },
                        "metadata": {
                          "lang": "en",
                          "test": false
                        },
                        "birthday": "2022-03-03"
                      },
                      "items": [
                        {
                          "source_id": "prod_1",
                          "related_object": "product",
                          "quantity": 2,
                          "product": {
                            "name": "Apple iPhone 12",
                            "price": 70000,
                            "metadata": {
                              "color": [
                                "silver"
                              ],
                              "vendor": "mall"
                            },
                            "override": true
                          }
                        },
                        {
                          "source_id": "ComicBook_1",
                          "related_object": "sku",
                          "quantity": 1,
                          "product": {
                            "source_id": "Books",
                            "name": "Comic Books1",
                            "price": 1600,
                            "metadata": {
                              "color": [
                                "silver"
                              ],
                              "vendor": "Bookstore1"
                            },
                            "override": true
                          },
                          "sku": {
                            "sku": "Comics1",
                            "source_id": "ComicBook_1",
                            "price": 1600,
                            "metadata": {
                              "color": [
                                "golden"
                              ],
                              "vendor": "islands"
                            },
                            "override": true
                          }
                        }
                      ]
                    },
                    {
                      "source_id": "orderImport15",
                      "status": "PAID",
                      "metadata": {
                        "location_id": [
                          "L3"
                        ],
                        "payment_mean": [
                          "wire-transfer"
                        ]
                      },
                      "customer": {
                        "source_id": "bob2.smith@email.com"
                      },
                      "referrer": {
                        "source_id": "jane.smith@email.com"
                      },
                      "items": [
                        {
                          "source_id": "ComicBook_1",
                          "quantity": 4,
                          "related_object": "sku",
                          "sku": {
                            "source_id": "ComicBook_1"
                          }
                        },
                        {
                          "source_id": "vase_1",
                          "quantity": 1,
                          "related_object": "product",
                          "product": {
                            "source_id": "vase_1"
                          }
                        }
                      ]
                    },
                    {
                      "source_id": "orderImport16",
                      "status": "FULFILLED",
                      "metadata": {
                        "location_id": [
                          "L3"
                        ],
                        "payment_mean": [
                          "wire-transfer"
                        ]
                      },
                      "customer": {
                        "id": "cust_LMY4ZylSdUYB1J4tzqNcl5VV"
                      },
                      "referrer": {
                        "id": "cust_Vzck5i8U3OhcEUFY6MKhN9Rv"
                      },
                      "items": [
                        {
                          "product_id": "prod_0b72b0bd64d198e3ae",
                          "quantity": 2
                        },
                        {
                          "sku_id": "sku_0b1621b319d248b79f",
                          "quantity": 2
                        }
                      ]
                    },
                    {
                      "source_id": "orderImport17",
                      "status": "CANCELED",
                      "amount": 7000,
                      "metadata": {
                        "location_id": [
                          "L3"
                        ],
                        "payment_mean": [
                          "wire-transfer"
                        ]
                      }
                    },
                    {
                      "source_id": "orderImport18",
                      "status": "CREATED",
                      "metadata": {
                        "location_id": [
                          "L3"
                        ],
                        "payment_mean": [
                          "wire-transfer"
                        ]
                      },
                      "items": [
                        {
                          "source_id": "ComicBook_1",
                          "amount": 900,
                          "related_object": "sku"
                        },
                        {
                          "source_id": "vase_1",
                          "amount": 2000,
                          "related_object": "product"
                        }
                      ]
                    },
                    {
                      "source_id": "orderImport19",
                      "status": "CREATED",
                      "metadata": {
                        "location_id": [
                          "L3"
                        ],
                        "payment_mean": [
                          "wire-transfer"
                        ]
                      },
                      "items": [
                        {
                          "amount": 900
                        },
                        {
                          "amount": 2000
                        }
                      ]
                    },
                    {
                      "source_id": "orderImport20",
                      "status": "CREATED",
                      "metadata": {
                        "location_id": [
                          "L3"
                        ],
                        "payment_mean": [
                          "wire-transfer"
                        ]
                      },
                      "items": [
                        {
                          "price": 900,
                          "quantity": 2
                        },
                        {
                          "price": 2000,
                          "quantity": 3
                        }
                      ]
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "2XX": {
            "description": "Returns the ID of the scheduled asynchronous action, informing you that your request has been accepted and the order(s) will be added to the repository asynchronously. To check the status and result, copy the `async_action_id` from the response and pass it using <!-- [Get Async Action](OpenAPI.json/paths/~1async-actions~1{asyncActionId}/get) -->[Get Async Action](ref:get-async-action) endpoint.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrdersImportCreateResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "async_action_id": "aa_0a875d56c805df6601"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/orders/export": {
      "post": {
        "operationId": "create-order-export",
        "tags": [
          "Orders"
        ],
        "summary": "Create Orders Export",
        "description": "Creates a downloadable CSV file containing a list of orders.\nThe parameters listed in the payload resembles headers in the CSV file. To include a parameter to the file, add it to the parameters.fields object in the request body.\nThe available filters are all order object attributes. Additionally, any metadata defined in the metadata schema can be exported.\nPassing an empty JSON will generate a file containing three default fields: id, source_id, and status.\nThe fields array is an array of strings containing the data in the export. These fields define the headers in the CSV file. The array can be a combination of any of the following available fields:\n\n\n\n",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "requestBody": {
          "description": "Specify which order parameters you would like to export.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrdersExportCreateRequestBody"
              },
              "examples": {
                "Using fields": {
                  "value": {
                    "parameters": {
                      "fields": [
                        "id",
                        "source_id",
                        "status",
                        "created_at",
                        "updated_at",
                        "amount",
                        "discount_amount",
                        "items_discount_amount",
                        "total_discount_amount",
                        "total_amount",
                        "customer_id",
                        "referrer_id",
                        "metadata.payment_mean"
                      ]
                    }
                  }
                },
                "Using fields and filters": {
                  "value": {
                    "parameters": {
                      "fields": [
                        "id",
                        "source_id",
                        "status",
                        "created_at",
                        "updated_at",
                        "amount",
                        "discount_amount",
                        "items_discount_amount",
                        "total_discount_amount",
                        "total_amount",
                        "customer_id",
                        "referrer_id",
                        "metadata.payment_mean"
                      ],
                      "order": "-updated_at",
                      "filters": {
                        "discount_amount": {
                          "conditions": {
                            "$more_than": 100000
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "2XX": {
            "description": "Returns the `id` of the export object and `status` of the file generation process. The `id` is used in the <!-- [Get Export](OpenAPI.json/paths/~1exports~1{exportId}/get) -->[Get Export](ref:get-export) method to generate the url for the downloadable CSV file or in the <!-- [Download Export](OpenAPI.json/paths/~1exports~1{export_Id}/get) -->[Download Export](ref:download-export) method to return the contents of the CSV file. The status indicates whether the file has been scheduled for creation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrdersExportCreateResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "id": "exp_pT2Y1mgYsAgRAqsWTGf7PQX7",
                      "object": "export",
                      "created_at": "2022-09-09T10:45:52.362Z",
                      "status": "SCHEDULED",
                      "channel": "API",
                      "exported_object": "order",
                      "parameters": {
                        "fields": [
                          "id",
                          "source_id",
                          "status",
                          "created_at",
                          "updated_at",
                          "amount",
                          "discount_amount",
                          "items_discount_amount",
                          "total_discount_amount",
                          "total_amount",
                          "customer_id",
                          "referrer_id",
                          "metadata.payment_mean"
                        ]
                      },
                      "result": null,
                      "user_id": null
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/products": {
      "get": {
        "operationId": "list-products",
        "tags": [
          "Products"
        ],
        "summary": "List Products",
        "description": "Retrieve a list of products.",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/start_date"
          },
          {
            "$ref": "#/components/parameters/end_date"
          }
        ],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns a dictionary with product objects. The products are returned sorted by creation date by default, with the most recent products appearing last, unless you specify another sequence using the `order` query parameter.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductsListResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "object": "list",
                      "data_ref": "products",
                      "products": [
                        {
                          "id": "prod_f1r5Tpr0DuC7",
                          "source_id": "test_prod_id_1",
                          "name": "Apple iPhone 8",
                          "price": null,
                          "attributes": [
                            "color",
                            "memory"
                          ],
                          "metadata": {
                            "test": true,
                            "vendor": "Cortland"
                          },
                          "image_url": null,
                          "created_at": "2021-12-03T06:33:46.101Z",
                          "updated_at": null,
                          "object": "product",
                          "skus": {
                            "data": [
                              {
                                "id": "sku_0a417bd1d9952f9d6f",
                                "source_id": "test_iphone_8_silver_256gb",
                                "product_id": "prod_f1r5Tpr0DuC7",
                                "sku": "iPhone 8 Silver 256GB",
                                "price": null,
                                "currency": null,
                                "attributes": {
                                  "color": "silver",
                                  "memory": "256"
                                },
                                "image_url": null,
                                "metadata": {},
                                "created_at": "2021-12-03T06:33:46.599097+00:00",
                                "updated_at": null,
                                "object": "sku"
                              },
                              {
                                "id": "sku_0a417bd1d9952f9d6e",
                                "source_id": "test_iphone_8_silver_64gb",
                                "product_id": "prod_f1r5Tpr0DuC7",
                                "sku": "iPhone 8 Silver 64GB",
                                "price": null,
                                "currency": null,
                                "attributes": {
                                  "color": "silver",
                                  "memory": "64"
                                },
                                "image_url": null,
                                "metadata": {},
                                "created_at": "2021-12-03T06:33:46.598595+00:00",
                                "updated_at": null,
                                "object": "sku"
                              }
                            ],
                            "total": 2
                          }
                        },
                        {
                          "id": "prod_0ac67e1bb8072eec48",
                          "source_id": "test_volleyball",
                          "name": "VolleyBall",
                          "price": 1100,
                          "attributes": [],
                          "metadata": {
                            "color": [
                              "white"
                            ],
                            "label": true,
                            "origin": "PL"
                          },
                          "image_url": null,
                          "created_at": "2022-03-16T14:01:45.459Z",
                          "updated_at": "2022-04-26T12:51:35.500Z",
                          "object": "product",
                          "skus": {
                            "data": [
                              {
                                "id": "sku_0ac768973f5c4ea0d0",
                                "source_id": "test_volleyball_pl",
                                "product_id": "prod_0ac67e1bb8072eec48",
                                "sku": "PL",
                                "price": 500,
                                "currency": "USD",
                                "attributes": {},
                                "image_url": null,
                                "metadata": {
                                  "color": [
                                    "red"
                                  ]
                                },
                                "created_at": "2022-03-17T07:06:13.629918+00:00",
                                "updated_at": null,
                                "object": "sku"
                              },
                              {
                                "id": "sku_0ac7689713072e1df6",
                                "source_id": "test_volleyball_us",
                                "product_id": "prod_0ac67e1bb8072eec48",
                                "sku": "US",
                                "price": 1500,
                                "currency": "USD",
                                "attributes": {},
                                "image_url": null,
                                "metadata": {
                                  "color": [
                                    "yellow"
                                  ]
                                },
                                "created_at": "2022-03-17T07:06:13.452532+00:00",
                                "updated_at": null,
                                "object": "sku"
                              }
                            ],
                            "total": 2
                          }
                        }
                      ],
                      "total": 2
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "create-product",
        "tags": [
          "Products"
        ],
        "summary": "Create Product",
        "description": "Creates a product object.\n 📘 Upsert Mode\n If you pass an id or a source_id that already exists in the product database, Voucherify will return a related product object with updated fields.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "requestBody": {
          "description": "Specify the product parameters.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductsCreateRequestBody"
              },
              "examples": {
                "Example": {
                  "value": {
                    "source_id": "first_product",
                    "name": "Samsung Phone",
                    "price": 200000,
                    "attributes": [
                      "color",
                      "memory",
                      "processor"
                    ],
                    "metadata": {
                      "test": true,
                      "vendor": "Online Store"
                    },
                    "image_url": "{{internalVoucherifyURL}}"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "2XX": {
            "description": "Returns a product object if the operation succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductsCreateResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "id": "prod_0bae2dc5a090fd0184",
                      "source_id": "first_product",
                      "name": "Samsung Phone",
                      "price": 200000,
                      "attributes": [
                        "color",
                        "memory",
                        "processor"
                      ],
                      "metadata": {
                        "test": true,
                        "vendor": "Online Store"
                      },
                      "image_url": "https://www.website.com/image.png",
                      "created_at": "2022-09-12T12:58:22.232Z",
                      "updated_at": "2022-09-12T12:59:55.890Z",
                      "object": "product"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/products/{productId}": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterProductId"
          },
          "name": "productId",
          "in": "path",
          "required": true,
          "description": "A Voucherify product ID or source ID."
        }
      ],
      "get": {
        "operationId": "get-product",
        "tags": [
          "Products"
        ],
        "summary": "Get Product",
        "description": "Retrieve product details.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns a product object if a valid identifier was provided.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductsGetResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "id": "prod_f1r5Tpr0DuC7",
                      "source_id": "test_prod_id_1",
                      "name": "Apple iPhone 8",
                      "price": null,
                      "attributes": [
                        "color",
                        "memory"
                      ],
                      "metadata": {
                        "test": true,
                        "vendor": "Cortland"
                      },
                      "image_url": null,
                      "created_at": "2021-12-03T06:33:46.101Z",
                      "updated_at": null,
                      "object": "product",
                      "skus": {
                        "object": "list",
                        "data_ref": "data",
                        "data": [
                          {
                            "id": "sku_0a417bd1d9952f9d6f",
                            "source_id": "test_iphone_8_silver_256gb",
                            "product_id": "prod_f1r5Tpr0DuC7",
                            "sku": "iPhone 8 Silver 256GB",
                            "price": null,
                            "currency": null,
                            "attributes": {
                              "color": "silver",
                              "memory": "256"
                            },
                            "image_url": null,
                            "metadata": {},
                            "created_at": "2021-12-03T06:33:46.599097+00:00",
                            "updated_at": null,
                            "object": "sku"
                          },
                          {
                            "id": "sku_0a417bd1d9952f9d6e",
                            "source_id": "test_iphone_8_silver_64gb",
                            "product_id": "prod_f1r5Tpr0DuC7",
                            "sku": "iPhone 8 Silver 64GB",
                            "price": null,
                            "currency": null,
                            "attributes": {
                              "color": "silver",
                              "memory": "64"
                            },
                            "image_url": null,
                            "metadata": {},
                            "created_at": "2021-12-03T06:33:46.598595+00:00",
                            "updated_at": null,
                            "object": "sku"
                          }
                        ],
                        "total": 2
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "update-product",
        "tags": [
          "Products"
        ],
        "summary": "Update Product",
        "description": "Updates the specified product by setting the values of the parameters passed in the request body. Any parameters not provided in the payload will be left unchanged.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "requestBody": {
          "description": "Specify the parameters of the product that are to be updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductsUpdateRequestBody"
              },
              "examples": {
                "Example": {
                  "value": {
                    "price": 210000
                  }
                }
              }
            }
          }
        },
        "responses": {
          "2XX": {
            "description": "Returns an updated product object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductsUpdateResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "id": "prod_0bae2dc5a090fd0184",
                      "source_id": "first_product",
                      "name": "Samsung Phone",
                      "price": 210000,
                      "attributes": [
                        "color",
                        "memory",
                        "processor"
                      ],
                      "metadata": {
                        "test": false,
                        "vendor": "Online Stores"
                      },
                      "image_url": "https://www.website.com/image.png",
                      "created_at": "2022-09-12T12:58:22.232Z",
                      "updated_at": "2022-09-12T13:33:48.904Z",
                      "object": "product"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "delete-product",
        "tags": [
          "Products"
        ],
        "summary": "Delete Product",
        "description": "Deletes a product and all related SKUs. This operation cannot be undone. \nIf the force parameter is set to false or not set at all, the product and all related SKUs will be moved to the bin.",
        "parameters": [
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterBoolean"
            },
            "in": "query",
            "name": "force",
            "description": "If this flag is set to true, the product and all related SKUs will be removed permanently. If it is set to false or not set at all, the product and all related SKUs will be moved to the bin. Going forward, the user will be able to create another product with exactly the same source_id."
          }
        ],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns no content if deletion is successful."
          }
        }
      }
    },
    "/v1/products/bulk/async": {
      "post": {
        "operationId": "update-products-in-bulk",
        "tags": [
          "Products"
        ],
        "summary": "Update Products in Bulk",
        "description": "Update products in one asynchronous operation.\nThe request can include up to **10 MB** of data.\nThe response returns a unique asynchronous action ID. Use this ID in the query paramater of the GET Async Action endpoint to check, e.g.:\n- The status of your request (in queue, in progress, done, or failed)\n- Resources that failed to be updated\n- The report file with details about the update\nIf a product object is not found, it is **upserted**. This is shown in the report file in the **GET** Async Action endpoint. The upserted resources have value false in the found column and true in the updated column.\nThis API request starts a process that affects Voucherify data in bulk. In the case of small jobs (like bulk update), the request is put into a queue and processed when every other bulk request placed in the queue prior to this request is finished.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "requestBody": {
          "description": "List the product fields to be updated in each product object.",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProductsUpdateInBulkRequestBody"
                }
              },
              "examples": {
                "Example": {
                  "value": [
                    {
                      "source_id": "first_product",
                      "name": "Samsung Phone 1",
                      "price": 220000,
                      "attributes": [
                        "color",
                        "memory",
                        "processor"
                      ],
                      "metadata": {
                        "test": true,
                        "vendor": "Online Store - 3"
                      },
                      "image_url": "{{internalVoucherifyURL}}"
                    },
                    {
                      "source_id": "second_product",
                      "name": "Samsung Phone 2",
                      "price": 230000,
                      "attributes": [
                        "color",
                        "memory",
                        "processor"
                      ],
                      "metadata": {
                        "test": true,
                        "vendor": "Online Store - 4"
                      },
                      "image_url": "{{internalVoucherifyURL}}"
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "2XX": {
            "description": "Returns the ID of the scheduled asynchronous action. The response informs you that the request has been accepted and the resources will be updated in the repository asynchronously. To check the status and result, copy the `async_action_id` from the response and use it as a query parameter in the [GET Async Action](ref:get-async-action) endpoint.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductsUpdateInBulkResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "async_action_id": "aa_0a875d56c805df6601"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/products/metadata/async": {
      "post": {
        "operationId": "update-products-metadata-in-bulk",
        "tags": [
          "Products"
        ],
        "summary": "Update Products' Metadata in Bulk",
        "description": "Updates metadata parameters for a list of products. Every resource in the list will receive the metadata defined in the request.\nThe request can include up to **10 MB** of data.\nThe response returns a unique asynchronous action ID. Use this ID in the query paramater of the GET Async Action endpoint to check, e.g.:\n- The status of your request (in queue, in progress, done, or failed)\n- Resources that failed to be updated\n- The report file with details about the update\nIf a product object is not found, it is **upserted**. This is shown in the report file in the **GET** Async Action endpoint. The upserted resources have value false in the found column and true in the updated column.\nThis API request starts a process that affects Voucherify data in bulk. In the case of small jobs (like bulk update), the request is put into a queue and processed when every other bulk request placed in the queue prior to this request is finished.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "requestBody": {
          "description": "List the source_ids of the products you would like to update with the metadata key/value pairs.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductsMetadataUpdateInBulkRequestBody"
              },
              "examples": {
                "Example": {
                  "value": {
                    "source_ids": [
                      "123-567-3433",
                      "test_volleyball"
                    ],
                    "metadata": {
                      "label": true,
                      "origin": "PL"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "2XX": {
            "description": "Returns the ID of the scheduled asynchronous action. The response informs you that the request has been accepted and the resources will be updated in the repository asynchronously. To check the status and result, copy the `async_action_id` from the response and use it as a query parameter in the [GET Async Action](ref:get-async-action) endpoint.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductsMetadataUpdateInBulkResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "async_action_id": "aa_0a875d56c805df6601"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/skus/{skuId}": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterSkuId"
          },
          "name": "skuId",
          "in": "path",
          "required": true,
          "description": "A Voucherify SKU identifier or SKU source ID."
        }
      ],
      "get": {
        "operationId": "get-sku",
        "tags": [
          "Products"
        ],
        "summary": "Get SKU",
        "description": "Retrieve details of a SKU.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns requested SKU object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SkusGetResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "id": "sku_0b1621b2f25248b79c",
                      "source_id": "sku_source_id_1",
                      "product_id": "prod_0b15f6b9f650c16990",
                      "sku": "Extra Small Blue Shirt",
                      "price": 1300,
                      "currency": "USD",
                      "attributes": {
                        "size": "XS",
                        "color": "blue",
                        "ranking": 1
                      },
                      "image_url": "",
                      "metadata": {},
                      "created_at": "2022-05-17T10:36:30.057Z",
                      "updated_at": "2022-07-01T05:34:16.822Z",
                      "object": "sku"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/products/{productId}/skus": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterProductId"
          },
          "name": "productId",
          "in": "path",
          "description": "A Voucherify product ID or product source ID.",
          "required": true
        }
      ],
      "get": {
        "operationId": "list-skus-in-product",
        "tags": [
          "Products"
        ],
        "summary": "List SKUs in Product",
        "description": "Retrieve all SKUs for a given product.",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/start_date"
          },
          {
            "$ref": "#/components/parameters/end_date"
          }
        ],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns a dictionary of SKUs.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductsSkusListResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "object": "list",
                      "data_ref": "skus",
                      "skus": [
                        {
                          "id": "sku_0b1621b2f25248b79c",
                          "source_id": "sku_source_id_1",
                          "product_id": "prod_0b15f6b9f650c16990",
                          "sku": "Extra Small Blue Shirt",
                          "price": 1300,
                          "currency": "USD",
                          "attributes": {
                            "size": "XS",
                            "color": "blue",
                            "ranking": 1
                          },
                          "image_url": "",
                          "metadata": {},
                          "created_at": "2022-05-17T10:36:30.057Z",
                          "updated_at": "2022-07-01T05:34:16.822Z",
                          "object": "sku"
                        },
                        {
                          "id": "sku_0b1621b3181248b79d",
                          "source_id": "sku_source_id_3",
                          "product_id": "prod_0b15f6b9f650c16990",
                          "sku": "Medium Yellow Shirt",
                          "price": 1450,
                          "currency": "USD",
                          "attributes": {
                            "size": "M",
                            "color": "yellow",
                            "ranking": 3
                          },
                          "image_url": "",
                          "metadata": {},
                          "created_at": "2022-05-17T10:36:30.180Z",
                          "updated_at": "2022-07-01T05:34:16.842Z",
                          "object": "sku"
                        },
                        {
                          "id": "sku_0b1621b3199248b79e",
                          "source_id": "sku_source_id_2",
                          "product_id": "prod_0b15f6b9f650c16990",
                          "sku": "Small Red Shirt",
                          "price": 1400,
                          "currency": "USD",
                          "attributes": {
                            "size": "S",
                            "color": "red",
                            "ranking": 2
                          },
                          "image_url": "",
                          "metadata": {},
                          "created_at": "2022-05-17T10:36:30.183Z",
                          "updated_at": "2022-07-01T05:34:16.927Z",
                          "object": "sku"
                        },
                        {
                          "id": "sku_0b1621b319d248b79f",
                          "source_id": "sku_source_id_4",
                          "product_id": "prod_0b15f6b9f650c16990",
                          "sku": "Large Pink Shirt -",
                          "price": 1700,
                          "currency": "USD",
                          "attributes": {
                            "size": "L",
                            "color": "pink",
                            "ranking": 4
                          },
                          "image_url": "",
                          "metadata": {},
                          "created_at": "2022-05-17T10:36:30.187Z",
                          "updated_at": "2022-07-05T08:47:50.680Z",
                          "object": "sku"
                        }
                      ],
                      "total": 4
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "create-sku",
        "tags": [
          "Products"
        ],
        "summary": "Create SKU",
        "description": "This method adds product variants to a created product. \n 📘 Upsert Mode\n If you pass an id or a source_id that already exists in the sku database, Voucherify will return a related sku object with updated fields.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "requestBody": {
          "description": "Specify the SKU parameters to be created.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductsSkusCreateRequestBody"
              },
              "examples": {
                "Example": {
                  "value": {
                    "source_id": "first_product_sku_1",
                    "sku": "Samsung phone 256GB",
                    "price": 1300,
                    "currency": "USD",
                    "attributes": {
                      "color": "vintage-black",
                      "memory": "256",
                      "processor": "Intel"
                    },
                    "image_url": "{{internalVoucherifyURL}}",
                    "metadata": {
                      "imported": true
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "2XX": {
            "description": "Returns the created SKU object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductsSkusCreateResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "id": "sku_0bae3b28f610fd0da1",
                      "source_id": "first_product_sku_1",
                      "product_id": "prod_0bae2dc5a090fd0184",
                      "sku": "Samsung phone 256GB",
                      "price": 1300,
                      "currency": "USD",
                      "attributes": {
                        "color": "vintage-black",
                        "memory": "256",
                        "processor": "Intel"
                      },
                      "image_url": "{{internalVoucherifyURL}}",
                      "metadata": {
                        "imported": true
                      },
                      "created_at": "2022-09-12T13:56:51.828Z",
                      "updated_at": null,
                      "object": "sku"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/products/{productId}/skus/{skuId}": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterProductId"
          },
          "name": "productId",
          "in": "path",
          "required": true,
          "description": "A unique Voucherify product ID or product source ID."
        },
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterSkuId"
          },
          "name": "skuId",
          "in": "path",
          "required": true,
          "description": "A Voucherify SKU ID or SKU source ID."
        }
      ],
      "put": {
        "operationId": "update-sku",
        "tags": [
          "Products"
        ],
        "summary": "Update SKU",
        "description": "Updates the specified SKU by setting the values of the parameters passed in the request body. Any parameters not provided in the payload will be left unchanged.\nFields other than the ones listed in the request body schema wont be modified. Even if provided, they will be silently skipped.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "requestBody": {
          "description": "Specify the parameters to be updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductsSkusUpdateRequestBody"
              },
              "examples": {
                "Example": {
                  "value": {
                    "price": 210000,
                    "currency": "PLN"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "2XX": {
            "description": "Returns the SKU object with the updated parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductsSkusUpdateResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "id": "sku_0bae3b28f610fd0da1",
                      "source_id": "first_product_sku_1",
                      "product_id": "prod_0bae2dc5a090fd0184",
                      "sku": "Samsung phone 256GB",
                      "price": 210000,
                      "currency": "PLN",
                      "attributes": {
                        "color": "vintage-black",
                        "memory": "256",
                        "processor": "Intel"
                      },
                      "image_url": "{{internalVoucherifyURL}}",
                      "metadata": {
                        "imported": true
                      },
                      "created_at": "2022-09-12T13:56:51.828Z",
                      "updated_at": "2022-09-12T14:09:40.859Z",
                      "object": "sku"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "delete-sku",
        "tags": [
          "Products"
        ],
        "summary": "Delete SKU",
        "description": "Deletes a product SKU. This operation cannot be undone. \nIf the force parameter is set to false or not set at all, the SKU will be moved to the bin.",
        "parameters": [
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterBoolean"
            },
            "in": "query",
            "name": "force",
            "description": "If this flag is set to true, the SKU will be removed permanently. If it is set to false or not set at all, the SKU will be moved to the bin. Going forward, the user will be able to create another SKU with exactly the same source_id."
          }
        ],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns no content if deletion is successful."
          }
        }
      }
    },
    "/v1/products/importCSV": {
      "post": {
        "operationId": "import-products-using-csv",
        "tags": [
          "Products"
        ],
        "summary": "Import Products using CSV",
        "description": "Import products into the repository using a CSV file.  \nThis API request starts a process that affects Voucherify data in bulk. \nIn case of small jobs (like bulk update) the request is put into a queue and processed once every other bulk request placed in the queue prior to this request is finished. However, when the job takes a longer time (like vouchers generation) then it is processed in small portions in a round-robin fashion. When there is a list of vouchers generation scheduled, then they will all have the IN_PROGRESS status shortly. This way, small jobs added just after scheduling big jobs of the same type will be processed in a short time window. \nThe result will return the async ID. You can verify the status of your request via this API request.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "requestBody": {
          "description": "The file path is stored in the form file header.",
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ProductsImportCSVRequestBody"
              }
            }
          }
        },
        "responses": {
          "2XX": {
            "description": "Returns ID of the scheduled async action. The response informs you that your request has been accepted and products will be added to the repository asynchronously. To check the import status and result, copy the `async_action_id` from the response and pass it using the <!-- [Get Async Action](OpenAPI.json/paths/~1async-actions~1{asyncActionId}/get) -->[Get Async Action](ref:get-async-action) endpoint.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductsImportCsvCreateResponseBody"
                },
                "examples": {
                  "Async Action": {
                    "value": {
                      "async_action_id": "aa_0a875d56c805df6601"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/skus/importCSV": {
      "post": {
        "operationId": "import-skus-using-csv",
        "tags": [
          "Products"
        ],
        "summary": "Import SKUs using CSV",
        "description": "Import SKUs into the repository using a CSV file.\nThe CSV file has to include headers in the first line. All properties which cannot be mapped to standard SKU fields will be added to the metadata object. You can find an example template [here](https://s3.amazonaws.com/helpscout.net/docs/assets/5902f1c12c7d3a057f88a36d/attachments/627b98d08c9b585083488a4c/Import_SKUS_template.csv). \nThis API request starts a process that affects Voucherify data in bulk. \nIn case of small jobs (like bulk update) the request is put into a queue and processed once every other bulk request placed in the queue prior to this request is finished. However, when the job takes a longer time (like vouchers generation) then it is processed in small portions in a round-robin fashion. When there is a list of vouchers generation scheduled, then they will all have the IN_PROGRESS status shortly. This way, small jobs added just after scheduling big jobs of the same type will be processed in a short time window. \nThe result will return the async ID. You can verify the status of your request via this API request.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "requestBody": {
          "description": "The file path is stored in the form file header.",
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/SkusImportCSVRequestBody"
              }
            }
          }
        },
        "responses": {
          "2XX": {
            "description": "Returns ID of the scheduled async action. The response informs you that your request has been accepted and SKUs will be added to the repository asynchronously. To check the import status and result, copy the `async_action_id` from the response and pass it using the <!-- [Get Async Action](OpenAPI.json/paths/~1async-actions~1{asyncActionId}/get) -->[Get Async Action](ref:get-async-action) endpoint.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SkusImportCsvCreateResponseBody"
                },
                "examples": {
                  "Async Action": {
                    "value": {
                      "async_action_id": "aa_0a875d56c805df6601"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/product-collections": {
      "get": {
        "operationId": "list-product-collections",
        "tags": [
          "Product Collections"
        ],
        "summary": "List Product Collections",
        "description": "This method returns a list of product collections.",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/order"
          }
        ],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns a dictionary containing a list of product collections and details about each product collection.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductCollectionsListResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "object": "list",
                      "data_ref": "data",
                      "data": [
                        {
                          "id": "pc_Dj1qSH7bho4SVh7aSDKjU174",
                          "name": "Products in Poland",
                          "type": "AUTO_UPDATE",
                          "filter": {
                            "junction": "and",
                            "metadata.product_location": {
                              "conditions": {
                                "$in_location": [
                                  "loc_RcYz537sV07e1t5aG5tIH9FD"
                                ]
                              }
                            }
                          },
                          "created_at": "2022-07-14T16:12:26.377Z",
                          "object": "products_collection"
                        },
                        {
                          "id": "pc_FJdBpaQyvK6Gcdul4D2HRChI",
                          "name": "Price less than 10",
                          "type": "AUTO_UPDATE",
                          "filter": {
                            "junction": "and",
                            "price": {
                              "conditions": {
                                "$less_than": [
                                  1000
                                ]
                              }
                            }
                          },
                          "created_at": "2022-03-17T07:11:25.406Z",
                          "object": "products_collection"
                        },
                        {
                          "id": "pc_4ndRXAsTOzwSdHcQcxf489uU",
                          "name": "Color is brown",
                          "type": "AUTO_UPDATE",
                          "filter": {
                            "junction": "and",
                            "metadata.color": {
                              "conditions": {
                                "$is": [
                                  "brown"
                                ]
                              }
                            }
                          },
                          "created_at": "2022-03-16T14:27:49.612Z",
                          "object": "products_collection"
                        },
                        {
                          "id": "pc_BxofAP7pyM9FO7M6iaIzIouy",
                          "name": "Color not brown",
                          "type": "AUTO_UPDATE",
                          "filter": {
                            "junction": "and",
                            "metadata.color": {
                              "conditions": {
                                "$is_not": [
                                  "brown"
                                ]
                              }
                            }
                          },
                          "created_at": "2022-03-16T13:49:05.697Z",
                          "object": "products_collection"
                        },
                        {
                          "id": "pc_uHpM9ipEQH2yEpm3D8aohkBM",
                          "name": "Price less than 20",
                          "type": "AUTO_UPDATE",
                          "filter": {
                            "junction": "and",
                            "price": {
                              "conditions": {
                                "$less_than": [
                                  2000
                                ]
                              }
                            }
                          },
                          "created_at": "2022-03-16T13:46:01.102Z",
                          "object": "products_collection"
                        },
                        {
                          "id": "pc_ZgM25PcZAMp6qItKJRtR2mEi",
                          "name": "Name starts with S",
                          "type": "AUTO_UPDATE",
                          "filter": {
                            "junction": "and",
                            "name": {
                              "conditions": {
                                "$starts_with": [
                                  "S"
                                ]
                              }
                            }
                          },
                          "created_at": "2022-03-16T13:42:35.917Z",
                          "object": "products_collection"
                        },
                        {
                          "id": "pc_41V4DiQQO8YGqj0J2oZD57j4",
                          "name": "Ends with baby",
                          "type": "AUTO_UPDATE",
                          "filter": {
                            "junction": "and",
                            "source_id": {
                              "conditions": {
                                "$ends_with": [
                                  "baby"
                                ]
                              }
                            }
                          },
                          "created_at": "2022-03-14T12:50:19.885Z",
                          "object": "products_collection"
                        },
                        {
                          "id": "pc_0cRX5wAFt1R1R5Ir6WdTowui",
                          "name": "C start",
                          "type": "AUTO_UPDATE",
                          "filter": {
                            "junction": "and",
                            "name": {
                              "conditions": {
                                "$starts_with": [
                                  "C"
                                ]
                              }
                            }
                          },
                          "created_at": "2022-03-14T12:18:15.588Z",
                          "object": "products_collection"
                        },
                        {
                          "id": "pc_bQ2p9TycbEhd3YzwFCR3JQYA",
                          "name": "Shirts",
                          "type": "STATIC",
                          "products": [
                            {
                              "id": "prod_0a9f9aeddb019a42db",
                              "object": "product"
                            },
                            {
                              "id": "prod_0a9f9ab4ab019a42d5",
                              "object": "product"
                            }
                          ],
                          "created_at": "2022-02-28T11:42:12.484Z",
                          "object": "products_collection"
                        }
                      ],
                      "total": 9
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "create-product-collection",
        "tags": [
          "Product Collections"
        ],
        "summary": "Create Product Collection",
        "description": "This method creates a new product collection.",
        "responses": {
          "2XX": {
            "description": "Returns information about the newly created collection, as well as an array containing the products.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductCollectionsCreateResponseBody"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductCollectionsCreateRequestBody"
              }
            }
          }
        }
      }
    },
    "/v1/product-collections/{productCollectionId}": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterProductCollectionId"
          },
          "name": "productCollectionId",
          "in": "path",
          "required": true,
          "description": "A unique product collection ID."
        }
      ],
      "get": {
        "operationId": "get-product-collection",
        "tags": [
          "Product Collections"
        ],
        "summary": "Get Product Collection",
        "description": "Retrieves the product collection.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns a product collection object if a valid identifier was provided in the path.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductCollectionsGetResponseBody"
                },
                "examples": {
                  "Dynamic": {
                    "value": {
                      "id": "pc_Dj1qSH7bho4SVh7aSDKjU174",
                      "name": "Products in Poland",
                      "type": "AUTO_UPDATE",
                      "filter": {
                        "junction": "and",
                        "metadata.product_location": {
                          "conditions": {
                            "$in_location": [
                              "loc_RcYz537sV07e1t5aG5tIH9FD"
                            ]
                          }
                        }
                      },
                      "created_at": "2022-07-14T16:12:26.377Z",
                      "object": "products_collection"
                    }
                  },
                  "Static": {
                    "value": {
                      "id": "pc_bQ2p9TycbEhd3YzwFCR3JQYA",
                      "name": "Shirts",
                      "type": "STATIC",
                      "products": [
                        {
                          "id": "prod_0a9f9aeddb019a42db",
                          "object": "product"
                        },
                        {
                          "id": "prod_0a9f9ab4ab019a42d5",
                          "object": "product"
                        }
                      ],
                      "created_at": "2022-02-28T11:42:12.484Z",
                      "object": "products_collection"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "delete-product-collection",
        "tags": [
          "Product Collections"
        ],
        "summary": "Delete Product Collection",
        "description": "This method deletes a product collection.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns no content if deletion is successful."
          }
        }
      }
    },
    "/v1/product-collections/{productCollectionId}/products": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterProductCollectionId"
          },
          "name": "productCollectionId",
          "in": "path",
          "required": true,
          "description": "Unique product collection ID."
        }
      ],
      "get": {
        "operationId": "list-products-in-collection",
        "tags": [
          "Product Collections"
        ],
        "summary": "List Products in Collection",
        "description": "Retrieves list of products from a product collection; works for both dynamic and static product collections.",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/starting_after"
          }
        ],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns a dictionary of products and/or SKUs grouped in the collection with each product's/SKU's details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductCollectionsProductsListResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "object": "list",
                      "data_ref": "data",
                      "data": [
                        {
                          "id": "prod_0bae45ffc7003ffc52",
                          "source_id": "second_product",
                          "name": "Samsung Phone 2",
                          "price": 230000,
                          "attributes": [
                            "color",
                            "memory",
                            "processor"
                          ],
                          "metadata": {
                            "test": true,
                            "vendor": "Online Store - 4"
                          },
                          "image_url": "{{internalVoucherifyURL}}",
                          "created_at": "2022-09-12T14:44:13.212Z",
                          "updated_at": null,
                          "object": "product"
                        },
                        {
                          "id": "sku_0bae3b28f610fd0da1",
                          "source_id": "first_product_sku_1",
                          "product_id": "prod_0bae2dc5a090fd0184",
                          "sku": "Samsung phone 256GB",
                          "price": 210000,
                          "attributes": {
                            "color": "vintage-black",
                            "memory": "256",
                            "processor": "Intel"
                          },
                          "image_url": "{{internalVoucherifyURL}}",
                          "metadata": {
                            "test": false,
                            "vendor": "Online Stores",
                            "imported": true
                          },
                          "created_at": "2022-09-12T13:56:51.828Z",
                          "updated_at": "2022-09-12T14:09:40.859Z",
                          "object": "sku",
                          "product": {
                            "id": "prod_0bae2dc5a090fd0184",
                            "source_id": "first_product",
                            "name": "Samsung Phone",
                            "price": null,
                            "attributes": [],
                            "metadata": {},
                            "object": "product"
                          }
                        },
                        {
                          "id": "prod_0bae2dc5a090fd0184",
                          "source_id": "first_product",
                          "name": "Samsung Phone 1",
                          "price": 220000,
                          "attributes": [
                            "color",
                            "memory",
                            "processor"
                          ],
                          "metadata": {
                            "test": true,
                            "vendor": "Online Store - 3"
                          },
                          "image_url": "{{internalVoucherifyURL}}",
                          "created_at": "2022-09-12T12:58:22.232Z",
                          "updated_at": "2022-09-12T14:44:13.208Z",
                          "object": "product"
                        },
                        {
                          "id": "sku_0b7d7dfb090be5c619",
                          "source_id": "ComicBook_1",
                          "product_id": "prod_0b7d7dfb05cbe5c616",
                          "sku": "Comics1",
                          "price": 1700,
                          "attributes": {},
                          "image_url": null,
                          "metadata": {
                            "color": [
                              "golden"
                            ],
                            "vendor": "islands"
                          },
                          "created_at": "2022-08-05T17:23:14.084Z",
                          "updated_at": "2022-09-09T09:24:43.806Z",
                          "object": "sku",
                          "product": {
                            "id": "prod_0b7d7dfb05cbe5c616",
                            "source_id": "Books",
                            "name": "Comic Books1",
                            "price": null,
                            "attributes": [],
                            "metadata": {},
                            "object": "product"
                          }
                        },
                        {
                          "id": "prod_0b7d7dfb05cbe5c616",
                          "source_id": "Books",
                          "name": "Comic Books1",
                          "price": 2100,
                          "attributes": [],
                          "metadata": {
                            "color": [
                              "silver"
                            ],
                            "vendor": "Bookstore1"
                          },
                          "image_url": "https://www.images.com/image1.png",
                          "created_at": "2022-08-05T17:23:14.071Z",
                          "updated_at": "2022-09-09T09:24:43.728Z",
                          "object": "product"
                        },
                        {
                          "id": "prod_0b7d7c4e814be5c502",
                          "source_id": "prod_1",
                          "name": "Apple iPhone 12",
                          "price": 60000,
                          "attributes": [],
                          "metadata": {
                            "color": [
                              "purple"
                            ],
                            "vendor": "mall"
                          },
                          "image_url": null,
                          "created_at": "2022-08-05T17:15:55.270Z",
                          "updated_at": "2022-09-09T09:24:43.704Z",
                          "object": "product"
                        }
                      ],
                      "total": 6
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/validation-rules": {
      "get": {
        "operationId": "list-validation-rules",
        "tags": [
          "Validation Rules"
        ],
        "summary": "List Validation Rules",
        "description": "Retrieve validation rules.",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterOrderListValidationRules"
            },
            "in": "query",
            "name": "order",
            "description": "This is a property that controls the sorting direction of the results. Sort the results using one of the filtering options, where the dash - preceding a sorting option means sorting in a descending order."
          },
          {
            "name": "start_date",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ParameterDate"
            },
            "description": "Timestamp representing the date and time which results must start on. Represented in ISO 8601 format."
          },
          {
            "name": "end_date",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ParameterDate"
            },
            "description": "Timestamp representing the date and time which results must end on. Represented in ISO 8601 format."
          }
        ],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns a dictionary of validation rules.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationRulesListResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "object": "list",
                      "data_ref": "data",
                      "data": [
                        {
                          "id": "val_auLlxlfTR9Ps",
                          "name": "Customer in Segment",
                          "rules": {
                            "1": {
                              "name": "customer.segment",
                              "rules": {},
                              "property": null,
                              "conditions": {
                                "$is": [
                                  "seg_18tD3HR0h8ymPC07rBMLryk3"
                                ]
                              }
                            },
                            "logic": "1"
                          },
                          "applicable_to": {
                            "excluded": [],
                            "included": [],
                            "included_all": false
                          },
                          "created_at": "2021-12-10T11:08:16.499Z",
                          "updated_at": "2021-12-10T12:01:41.665Z",
                          "type": "advanced",
                          "context_type": "earning_rule.order.paid",
                          "assignments_count": 1,
                          "object": "validation_rules"
                        },
                        {
                          "id": "val_AvIe1WWuBXre",
                          "name": "Order Volume - Price of Any Item - = 1500 USD",
                          "rules": {
                            "1": {
                              "name": "order.items.price_any",
                              "rules": {},
                              "property": null,
                              "conditions": {
                                "$is": [
                                  150000
                                ]
                              }
                            },
                            "logic": "1"
                          },
                          "applicable_to": {
                            "excluded": [],
                            "included": [],
                            "included_all": false
                          },
                          "created_at": "2021-12-13T06:54:06.864Z",
                          "type": "advanced",
                          "context_type": "reward_assignment.pay_with_points",
                          "object": "validation_rules"
                        },
                        {
                          "id": "val_aZhPe4tQYMgr",
                          "name": "Business Validation Rule - excluded",
                          "rules": {
                            "logic": ""
                          },
                          "applicable_to": {
                            "excluded": [
                              {
                                "object": "products_collection",
                                "id": "pc_7fVU2RxybhR66YxC7r7BKKRh",
                                "source_id": null
                              },
                              {
                                "object": "sku",
                                "id": "sku_0bae3b28f610fd0da1",
                                "source_id": "first_product_sku_1"
                              }
                            ],
                            "included": [],
                            "included_all": true
                          },
                          "created_at": "2022-09-13T14:38:33.710Z",
                          "type": "basic",
                          "context_type": "campaign.discount_coupons.discount.apply_to_items_by_quantity",
                          "assignments_count": 1,
                          "object": "validation_rules"
                        },
                        {
                          "id": "val_bbJCAXAWtYX0",
                          "name": "Business Validation Rule - Test - Discount Effect - Amount - Items - each unit of matched product",
                          "rules": {
                            "logic": ""
                          },
                          "applicable_to": {
                            "excluded": [],
                            "included": [
                              {
                                "object": "products_collection",
                                "id": "pc_a11pr0dUc75",
                                "source_id": null,
                                "effect": "APPLY_TO_EVERY",
                                "quantity_limit": 1
                              }
                            ],
                            "included_all": false
                          },
                          "created_at": "2022-09-02T17:04:23.814Z",
                          "type": "basic",
                          "context_type": "campaign.discount_coupons.discount.apply_to_items_by_quantity",
                          "assignments_count": 1,
                          "object": "validation_rules"
                        },
                        {
                          "id": "val_BkV21MUJGaiT",
                          "name": "Order Volume -  Total Amount More than 100",
                          "rules": {
                            "1": {
                              "name": "order.amount",
                              "rules": {},
                              "property": null,
                              "conditions": {
                                "$more_than": [
                                  10000
                                ]
                              }
                            },
                            "logic": "1"
                          },
                          "applicable_to": {
                            "excluded": [],
                            "included": [],
                            "included_all": false
                          },
                          "created_at": "2021-12-10T14:01:10.750Z",
                          "type": "advanced",
                          "context_type": "reward_assignment.pay_with_points",
                          "object": "validation_rules"
                        },
                        {
                          "id": "val_BTQg027UGl0v",
                          "name": "Business Validation Rule - Get some $ off",
                          "rules": {
                            "logic": ""
                          },
                          "applicable_to": {
                            "excluded": [],
                            "included": [
                              {
                                "object": "product",
                                "id": "prod_0a41dd45dc85fcab40",
                                "source_id": "10474"
                              }
                            ],
                            "included_all": false
                          },
                          "created_at": "2021-12-07T06:58:23.759Z",
                          "updated_at": "2021-12-22T08:11:18.773Z",
                          "type": "advanced",
                          "context_type": "campaign.discount_coupons.discount.apply_to_items",
                          "assignments_count": 1,
                          "object": "validation_rules"
                        }
                      ],
                      "total": 6
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "create-validation-rules",
        "tags": [
          "Validation Rules"
        ],
        "summary": "Create Validation Rules",
        "description": "Create a validation rule.\n 🚧 Managing validation rules\n It is recommended to [create validation rules](https://support.voucherify.io/article/148-how-to-build-a-rule) in the Voucherify dashboard. The rule builder in the dashboard helps configuring the desired conditions in a convenient way. The API should not be used as a preferable way to create and manage validation rules.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidationRulesCreateRequestBody"
              },
              "examples": {
                "Example": {
                  "value": {
                    "name": "Set of Validation Rules",
                    "error": {
                      "message": "Your order does not meet at least one of the required criteria."
                    },
                    "applicable_to": {
                      "included_all": false,
                      "excluded": [
                        {
                          "object": "product",
                          "id": "prod_0bae45ffc7003ffc52",
                          "source_id": "second_product",
                          "effect": "APPLY_TO_EVERY"
                        }
                      ],
                      "included": [
                        {
                          "object": "product",
                          "id": "prod_0b72b00ffed198e344",
                          "source_id": null,
                          "effect": "APPLY_TO_MOST_EXPENSIVE",
                          "quantity_limit": 1
                        },
                        {
                          "object": "products_collection",
                          "id": "pc_4ndRXAsTOzwSdHcQcxf489uU",
                          "source_id": null,
                          "effect": "APPLY_TO_EVERY",
                          "quantity_limit": 5
                        }
                      ]
                    },
                    "rules": {
                      "1": {
                        "name": "order.metadata",
                        "property": "location",
                        "rules": {},
                        "conditions": {
                          "$is": [
                            "Santorini"
                          ]
                        },
                        "error": {
                          "message": "Your order must be placed at one of our Santorini shops."
                        }
                      },
                      "2": {
                        "name": "custom_event.metadata",
                        "property": "test",
                        "rules": {},
                        "conditions": {
                          "$greater_than_or_equal": [
                            1
                          ]
                        }
                      },
                      "3": {
                        "name": "order.items.every",
                        "rules": {
                          "1": {
                            "name": "order.items.metadata",
                            "property": "test",
                            "rules": {},
                            "conditions": {
                              "$greater_than_or_equal": [
                                1
                              ]
                            }
                          }
                        },
                        "conditions": {
                          "$is": [
                            {
                              "id": "<PROD_ID>",
                              "effect": "APPLY_TO_EVERY",
                              "object": "product",
                              "source_id": "<SOURCE_ID>"
                            }
                          ]
                        }
                      },
                      "logic": "1 or 2"
                    }
                  }
                }
              }
            }
          },
          "description": "Specify the validation rules parameters."
        },
        "responses": {
          "2XX": {
            "description": "Returns a validation rule object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationRulesCreateResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "id": "val_eR1c41hu0vUU",
                      "name": "Business Validation Rule",
                      "rules": {
                        "1": {
                          "name": "string",
                          "property": "string",
                          "conditions": {
                            "$one_of_voucherify_conditions": [
                              "string"
                            ]
                          },
                          "rules": {
                            "1": {
                              "name": "string",
                              "property": "string",
                              "conditions": {},
                              "rules": {}
                            },
                            "logic": "string"
                          },
                          "error": {
                            "message": "string"
                          }
                        },
                        "logic": "(1 and 2) and (3)"
                      },
                      "error": {
                        "message": "string"
                      },
                      "applicable_to": {
                        "excluded": [
                          {
                            "object": "product",
                            "id": "string",
                            "source_id": "string",
                            "effect": "APPLY_TO_EVERY"
                          }
                        ],
                        "included": [
                          {
                            "object": "product",
                            "id": "string",
                            "source_id": "string",
                            "effect": "APPLY_TO_EVERY",
                            "quantity_limit": 0
                          }
                        ],
                        "included_all": true
                      },
                      "created_at": "2022-03-23T07:44:00.444Z",
                      "updated_at": "2022-04-26T08:35:54.960Z",
                      "type": "basic",
                      "context_type": "earning_rule.order.paid",
                      "object": "validation_rules"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/validation-rules/{validationRuleId}": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterValidationRuleId"
          },
          "name": "validationRuleId",
          "in": "path",
          "required": true,
          "description": "A unique validation rule ID."
        }
      ],
      "get": {
        "operationId": "get-validation-rule",
        "tags": [
          "Validation Rules"
        ],
        "summary": "Get Validation Rule",
        "description": "Retrieve the details of a validation rule.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns the validation rule object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationRulesGetResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "id": "val_TU4de3EP4dlL",
                      "name": "Order is less than $40",
                      "rules": {
                        "1": {
                          "name": "order.amount",
                          "property": null,
                          "conditions": {
                            "$less_than": [
                              4000
                            ]
                          },
                          "rules": {}
                        },
                        "logic": "1"
                      },
                      "applicable_to": {
                        "excluded": [],
                        "included": [],
                        "included_all": false
                      },
                      "created_at": "2022-08-11T16:42:13.630Z",
                      "type": "advanced",
                      "context_type": "reward_assignment.pay_with_points",
                      "object": "validation_rules"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "update-validation-rule",
        "tags": [
          "Validation Rules"
        ],
        "summary": "Update Validation Rule",
        "description": "Update validation rule parameters.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "requestBody": {
          "description": "Specify the parameters to be updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidationRulesUpdateRequestBody"
              },
              "examples": {
                "Example": {
                  "value": {
                    "name": "Set of Validation Rules Updated",
                    "error": {
                      "message": "Your orders do not meet at least one of the required criteria."
                    },
                    "applicable_to": {
                      "included_all": false,
                      "excluded": [
                        {
                          "object": "product",
                          "id": "prod_0bae45ffc7003ffccc",
                          "source_id": "second_product",
                          "effect": "APPLY_TO_EVERY"
                        }
                      ],
                      "included": [
                        {
                          "object": "product",
                          "id": "prod_0b72b00ffed198e333",
                          "source_id": null,
                          "effect": "APPLY_TO_CHEAPEST",
                          "quantity_limit": 1
                        },
                        {
                          "object": "products_collection",
                          "id": "pc_4ndRXAsTOzwSdHcQcxf489uU",
                          "source_id": null,
                          "effect": "APPLY_TO_EVERY",
                          "quantity_limit": 5
                        }
                      ]
                    },
                    "rules": {
                      "1": {
                        "name": "order.metadata",
                        "property": "place",
                        "rules": {},
                        "conditions": {
                          "$is": [
                            "Santorini"
                          ]
                        },
                        "error": {
                          "message": "Your order must be placed at one of our Santorini shops on the beach."
                        }
                      },
                      "2": {
                        "name": "custom_event.metadata",
                        "property": "lining",
                        "rules": {},
                        "conditions": {
                          "$greater_than_or_equal": [
                            1
                          ]
                        }
                      },
                      "3": {
                        "name": "order.items.every",
                        "rules": {
                          "1": {
                            "name": "order.items.metadata",
                            "property": "test",
                            "rules": {},
                            "conditions": {
                              "$greater_than_or_equal": [
                                1
                              ]
                            }
                          }
                        },
                        "conditions": {
                          "$is": [
                            {
                              "id": "<PRODs_ID>",
                              "effect": "APPLY_TO_EVERY",
                              "object": "product",
                              "source_id": "<SOURCEs_ID>"
                            }
                          ]
                        }
                      },
                      "logic": "1 and 2"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "2XX": {
            "description": "Returns the validation rule object with the updated parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationRulesUpdateResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "id": "val_VZ91fqqtoVmw",
                      "name": "Set of Validation Rules Updated",
                      "rules": {
                        "1": {
                          "name": "order.metadata",
                          "property": "place",
                          "conditions": {
                            "$is": [
                              "Santorini"
                            ]
                          },
                          "rules": {},
                          "error": {
                            "message": "Your order must be placed at one of our Santorini shops on the beach."
                          }
                        },
                        "2": {
                          "name": "custom_event.metadata",
                          "property": "lining",
                          "conditions": {
                            "$greater_than_or_equal": [
                              1
                            ]
                          },
                          "rules": {}
                        },
                        "3": {
                          "name": "order.items.every",
                          "conditions": {
                            "$is": [
                              {
                                "id": "<PRODs_ID>",
                                "effect": "APPLY_TO_EVERY",
                                "object": "product",
                                "source_id": "<SOURCEs_ID>"
                              }
                            ]
                          },
                          "rules": {
                            "1": {
                              "name": "order.items.metadata",
                              "property": "test",
                              "conditions": {
                                "$greater_than_or_equal": [
                                  1
                                ]
                              },
                              "rules": {}
                            }
                          }
                        },
                        "logic": "1 and 2"
                      },
                      "error": {
                        "message": "Your orders do not meet at least one of the required criteria."
                      },
                      "applicable_to": {
                        "excluded": [
                          {
                            "object": "product",
                            "id": "prod_0bae45ffc7003ffccc",
                            "source_id": "second_product",
                            "effect": "APPLY_TO_EVERY"
                          }
                        ],
                        "included": [
                          {
                            "object": "product",
                            "id": "prod_0b72b00ffed198e333",
                            "source_id": null,
                            "effect": "APPLY_TO_CHEAPEST",
                            "quantity_limit": 1
                          },
                          {
                            "object": "products_collection",
                            "id": "pc_4ndRXAsTOzwSdHcQcxf489uU",
                            "source_id": null,
                            "effect": "APPLY_TO_EVERY",
                            "quantity_limit": 5
                          }
                        ],
                        "included_all": false
                      },
                      "created_at": "2022-09-14T05:54:51.099Z",
                      "updated_at": "2022-09-14T06:06:32.855Z",
                      "type": "complex",
                      "context_type": "global",
                      "object": "validation_rules"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "delete-validation-rules",
        "tags": [
          "Validation Rules"
        ],
        "summary": "Delete Validation Rule",
        "description": "This method deletes a validation rule.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns no content if deletion is successful."
          }
        }
      }
    },
    "/v1/validation-rules-assignments": {
      "get": {
        "operationId": "list-validation-rules-assignments",
        "tags": [
          "Validation Rules"
        ],
        "summary": "List Validation Rules' Assignment(s)",
        "description": "List all validation rules assignments or filter the results using the related object ID or the validation rule ID query parameters. \n# How to retrieve specific validation rule assignments(s)\n## Related object ID\nTo find an assignment for a particular resource, you can use the ID of the object to which the validation rule was assigned. This could be, for example, an ID of a: voucher, campaign, distribution, reward assignment, earning rule, promotion tier.  \n\n## Validation rule ID\nYou can use the validation rule ID to find assignment(s) for a specific validation rule.\n\n",
        "parameters": [
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterString"
            },
            "in": "query",
            "name": "related_object_id",
            "description": "The resource ID to which the validation rule was assigned; this could be, for example, a resource ID of a voucher, campaign, earning rule, reward assignment, promotion tier, or distribution."
          },
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterValidationRuleId"
            },
            "in": "query",
            "name": "rule",
            "description": "Validation rule ID."
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterString"
            },
            "in": "query",
            "description": "Sorts the results using one of the filtering options: -created_at, created_at, where the dash - preceding a sorting option means sorting in a descending order.",
            "name": "order"
          }
        ],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns a dictionary with a data property that contains an array of validation rule assignments. Each entry in the array is a separate object. If no more validation rule assignments are available, the resulting array will be empty. The result can be narrowed down according to default filters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationRulesAssignmentsListResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "object": "list",
                      "data_ref": "data",
                      "data": [
                        {
                          "id": "asgm_2S7Xm4dab4UvYAgm",
                          "rule_id": "val_5ix74ru7e",
                          "related_object_id": "camp_YDsFdX8TgFtT0RUuKEFyhqs3",
                          "related_object_type": "campaign",
                          "created_at": "2022-02-08T10:49:30.534Z",
                          "object": "validation_rules_assignment"
                        },
                        {
                          "id": "asgm_sFV4wEFvldwIvgfb",
                          "rule_id": "val_ZEZmA9oit8aU",
                          "related_object_id": "distr_9QKI02wqgjWyvZXeQkFEPmkkYe",
                          "related_object_type": "distribution",
                          "created_at": "2022-06-29T11:41:07.680Z",
                          "object": "validation_rules_assignment"
                        },
                        {
                          "id": "asgm_8xelF5R4zB8ue168",
                          "rule_id": "val_ggDODO6fakMs",
                          "related_object_id": "ern_xrRuGEV7EW0X8wtMaze3HOfw",
                          "related_object_type": "earning_rule",
                          "created_at": "2022-02-28T12:25:56.783Z",
                          "object": "validation_rules_assignment"
                        },
                        {
                          "id": "asgm_tZaqxeO8gP4q91jG",
                          "rule_id": "val_WB6ETAiFztw5",
                          "related_object_id": "promo_kJliy076IuJYtuYWSHE9fSuT",
                          "related_object_type": "promotion_tier",
                          "created_at": "2022-08-10T10:30:39.986Z",
                          "object": "validation_rules_assignment"
                        },
                        {
                          "id": "asgm_xTMHiyPGSz3rp5m2",
                          "rule_id": "val_2AxnWmW2ra6X",
                          "related_object_id": "rewa_m9hEAu10KsPcLhGXiHG85aY0",
                          "related_object_type": "reward_assignment",
                          "created_at": "2021-12-10T11:38:35.922Z",
                          "object": "validation_rules_assignment"
                        },
                        {
                          "id": "asgm_DhlDn54JwqVFJzR6",
                          "rule_id": "val_eR1c41hu0vUU",
                          "related_object_id": "v_XuF7icVlUcVpHsSY9nG7n7yJa5wx27Va",
                          "related_object_type": "voucher",
                          "created_at": "2022-03-23T07:50:31.068Z",
                          "object": "validation_rules_assignment"
                        }
                      ],
                      "total": 6
                    }
                  },
                  "No Assignments": {
                    "value": {
                      "object": "list",
                      "data_ref": "data",
                      "data": [],
                      "total": 0
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/validation-rules/{validationRuleId}/assignments": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterValidationRuleId"
          },
          "name": "validationRuleId",
          "in": "path",
          "required": true,
          "description": "Unique validation rule ID."
        }
      ],
      "get": {
        "operationId": "list-validation-rule-assignments",
        "tags": [
          "Validation Rules"
        ],
        "summary": "List Validation Rule Assignments",
        "description": "Retrieve validation rule assignments for a specific validation rule.",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterOrderListValidationRuleAssignments"
            },
            "in": "query",
            "name": "order",
            "description": "This is a property that controls the sorting direction of the results. Sort the results using one of the filtering options, where the dash - preceding a sorting option means sorting in a descending order."
          }
        ],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns a dictionary of validation rule assignments.  If the validation rule ID provided in the path parameter cannot be found, the endpoint will return an empty `data` array and a total of `0`.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationRulesAssignmentsListResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "object": "list",
                      "data_ref": "data",
                      "data": [
                        {
                          "id": "asgm_74F7QZoYbUoljwQO",
                          "rule_id": "val_4j7DCRm2IS59",
                          "related_object_id": "v_MBOEmHelKwvykVZ8JcT4TE5Kla5IMJyc",
                          "related_object_type": "voucher",
                          "created_at": "2022-02-17T09:05:34.642Z",
                          "object": "validation_rules_assignment"
                        },
                        {
                          "id": "asgm_zzLBm8mIzGQStXl9",
                          "rule_id": "val_4j7DCRm2IS59",
                          "related_object_id": "v_JtWunK6jUo7X2qOFj0SyRHq4p9tgENlT",
                          "related_object_type": "voucher",
                          "created_at": "2022-02-17T08:18:15.085Z",
                          "object": "validation_rules_assignment"
                        },
                        {
                          "id": "asgm_JztMAws0e0Qx2Xy6",
                          "rule_id": "val_4j7DCRm2IS59",
                          "related_object_id": "camp_kjja4moiVB7hQKPGOT61026Z",
                          "related_object_type": "campaign",
                          "created_at": "2022-02-15T13:26:34.807Z",
                          "object": "validation_rules_assignment"
                        }
                      ],
                      "total": 3
                    }
                  },
                  "No Assignments": {
                    "value": {
                      "object": "list",
                      "data_ref": "data",
                      "data": [],
                      "total": 0
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "create-validation-rule-assignment",
        "tags": [
          "Validation Rules"
        ],
        "summary": "Create Validation Rules Assignments",
        "description": "Assign validation rule to either one of the following objects: voucher, campaign, promotion tier, earning rule, reward, distribution.",
        "parameters": [
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterBoolean"
            },
            "in": "query",
            "description": "If this flag is set to true, the previous assignment with the same data will be deleted and a new one will be added.",
            "name": "force"
          }
        ],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "requestBody": {
          "description": "Specify the resource that you would like to assign the validation rule to.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidationRulesAssignmentsCreateRequestBody"
              },
              "examples": {
                "Voucher": {
                  "value": {
                    "voucher": "v_ssR6vhswwh5odSloN2Vc3O60w7aea018"
                  }
                },
                "Campaign": {
                  "value": {
                    "campaign": "camp_Rv9EuIrkT08YEORb2pUMGSUo"
                  }
                },
                "Distribution": {
                  "value": {
                    "distribution": "distr_2nUIekYnS9L1Vm1I55vmC7kSvd"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "2XX": {
            "description": "Returns a validation rules assignment object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationRulesAssignmentsCreateResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "id": "asgm_kPPiNW3smQLRMWiF",
                      "rule_id": "val_ZEZmA9oit8aU",
                      "related_object_id": "camp_Rv9EuIrkT08YEORb2pUMGSUo",
                      "related_object_type": "campaign",
                      "created_at": "2022-09-14T07:06:49.557Z",
                      "object": "validation_rules_assignment"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/validation-rules/{validationRuleId}/assignments/{assignmentId}": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterValidationRuleId"
          },
          "name": "validationRuleId",
          "in": "path",
          "required": true,
          "description": "A unique validation rule ID."
        },
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterRewardAssignmentId"
          },
          "name": "assignmentId",
          "in": "path",
          "required": true,
          "description": "A unique validation rule assignment ID."
        }
      ],
      "delete": {
        "operationId": "delete-validation-rule-assignment",
        "tags": [
          "Validation Rules"
        ],
        "summary": "Delete Validation Rule Assignment",
        "description": "This method deletes a validation rule assignment.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns no content if deletion is successful."
          }
        }
      }
    },
    "/v1/segments/{segmentId}": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterSegmentId"
          },
          "name": "segmentId",
          "in": "path",
          "required": true,
          "description": "A unique customer segment ID."
        }
      ],
      "get": {
        "operationId": "get-segment",
        "tags": [
          "Segments"
        ],
        "summary": "Get Segment",
        "description": "Retrieves the segment with given segment ID.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns segment object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SegmentsGetResponseBody"
                },
                "examples": {
                  "Tier Segment": {
                    "value": {
                      "id": "seg_Mv5w1b2FIEbiCCO5ioT8TfI2",
                      "name": "Tiers 2 - Senior",
                      "created_at": "2022-06-09T13:21:26.656Z",
                      "type": "auto-update",
                      "filter": {
                        "junction": "and",
                        "loyalty_points.campaigns.Tiers 2.points": {
                          "conditions": {
                            "$more_than_equal": [
                              41
                            ]
                          }
                        }
                      },
                      "initial_sync_status": "DONE",
                      "object": "segment"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "delete-segment",
        "tags": [
          "Segments"
        ],
        "summary": "Delete Segment",
        "description": "This method deletes a customer segment.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns no content if deletion is successful."
          }
        }
      }
    },
    "/v1/segments": {
      "post": {
        "operationId": "create-segment",
        "tags": [
          "Segments"
        ],
        "summary": "Create Segment",
        "description": "Create a customer segment.\n 🚧 Limit on Static Segments\n There is a cap on the number of customers that you can assign to a static segment: **20,000**. If you would like to create a bigger segment, then you can use the unlimited auto-update segment instead and use some customer metadata to build this segment.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "requestBody": {
          "description": "Specify the boundary conditions for the customer segment.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SegmentsCreateRequestBody"
              },
              "examples": {
                "Static Segment": {
                  "value": {
                    "name": "Customers in a new Segment",
                    "type": "static",
                    "customers": [
                      "cust_iajsExT2QB4sGWzABY85WRqV",
                      "cust_sehkNIi8Uq2qQuRqSr7xn4Zi"
                    ]
                  }
                },
                "Dynamic - customers created after a specific date": {
                  "value": {
                    "name": "Customers in a new Dynamic Segment",
                    "type": "auto-update",
                    "filter": {
                      "junction": "and",
                      "created_at": {
                        "conditions": {
                          "$after": [
                            "2021-12-01T00:00:00.000Z"
                          ]
                        }
                      }
                    }
                  }
                },
                "Dynamic - customers with birthday next month": {
                  "value": {
                    "name": "Customers in a new Dynamic Segment",
                    "type": "auto-update",
                    "filter": {
                      "junction": "and",
                      "birthdate": {
                        "conditions": {
                          "$next_month": [
                            true
                          ]
                        }
                      },
                      "address.country": {
                        "conditions": {
                          "$is": "Poland"
                        }
                      },
                      "metadata.club_level": {
                        "conditions": {
                          "$in": [
                            "Gold",
                            "Silver"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "2XX": {
            "description": "Returns a customer segment object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SegmentsCreateResponseBody"
                },
                "examples": {
                  "Static": {
                    "value": {
                      "id": "seg_vC8iOSCqUG02EsPzsHynLv8i",
                      "name": "Customers in a new Segment",
                      "created_at": "2022-09-13T08:57:15.801Z",
                      "type": "static",
                      "filter": null,
                      "initial_sync_status": "DONE",
                      "object": "segment"
                    }
                  },
                  "Dynamic": {
                    "value": {
                      "id": "seg_nZULMFHhVWIFm9vQ0dytg83Q",
                      "name": "Customers in a new Dynamic Segment",
                      "created_at": "2022-09-13T09:03:32.764Z",
                      "type": "auto-update",
                      "filter": {
                        "junction": "and",
                        "created_at": {
                          "conditions": {
                            "$after": [
                              "2021-12-01T00:00:00.000Z"
                            ]
                          }
                        }
                      },
                      "initial_sync_status": "IN_PROGRESS",
                      "object": "segment"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/events": {
      "post": {
        "operationId": "track-custom-event",
        "tags": [
          "Events"
        ],
        "summary": "Track Custom Event",
        "description": "To track a custom event, you create an event object.  \nThe event object must be linked to the customer who performs the action. If a customer doesnt exist in Voucherify, the customer will be created.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "requestBody": {
          "description": "Specify the details of the custom event.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventsCreateRequestBody"
              },
              "examples": {
                "Example": {
                  "value": {
                    "event": "event-name",
                    "customer": {
                      "source_id": "referee-source_id"
                    },
                    "referral": {
                      "code": "voucher-code",
                      "referrer_id": "referrer-source_id"
                    }
                  }
                },
                "Referral triggered by custom event": {
                  "value": {
                    "event": "user_subscribed",
                    "customer": {
                      "source_id": "source_customer_event"
                    },
                    "referral": {
                      "code": "46jL0kYI",
                      "referrer_id": "cust_Vzck5i8U3OhcEUFY6MKhN9Rv"
                    },
                    "metadata": {
                      "login": "bob",
                      "pricing_plan": "PP1",
                      "volume_number": 4
                    }
                  }
                },
                "Earning rule triggered by custom event": {
                  "value": {
                    "event": "cart_abandoned",
                    "customer": {
                      "source_id": "source_customer_event"
                    },
                    "loyalty": {
                      "code": "6CB4KDAu"
                    },
                    "metadata": {
                      "date": "2022-12-01",
                      "flag": true,
                      "text": "Cart abandoned event",
                      "date_time": "2022-12-01T09:24:33.061Z",
                      "number": 1
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "2XX": {
            "description": "Returns the event type if the event was received by the application.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventsCreateResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "object": "event",
                      "type": "cart_abandoned",
                      "customer": {
                        "id": "cust_ypePCF6IU6fnUvec6RMXZuH4",
                        "name": "John Doe",
                        "email": "john@voucherify.io",
                        "source_id": "source_customer_event",
                        "metadata": {
                          "prop": "value"
                        },
                        "object": "customer"
                      },
                      "referral": null,
                      "loyalty": null
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/async-actions": {
      "get": {
        "operationId": "list-async-actions",
        "tags": [
          "Async Actions"
        ],
        "summary": "List Async Actions",
        "description": "Track asynchronous operations scheduled in your project.  \nThe table below lists the possible types of async actions. The types are different for each endpoint generating the async action. If you would like to learn more about importing data into Voucherify, read more [here](https://support.voucherify.io/article/574-data-import).\n\n\n\n\n \n",
        "parameters": [
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterLimit"
            },
            "in": "query",
            "name": "limit",
            "description": "Limit the number of asynchronous actions that the API returns in the response."
          },
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterDate"
            },
            "in": "query",
            "name": "end_date",
            "description": "Limits results to actions scheduled before the end_date. The date format needs to be consistent with ISO 8601 format (2016-11-16T14:14:31Z or 2016-11-16). "
          }
        ],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns a list of all scheduled asynchronous actions and detailed information for each scheduled action. Note that a status `DONE`doesn't include the result of the completed action. If you need more information about the result, use the ID of the respective async action to call the <!-- [Get Async Action](OpenAPI.json/paths/~1async-actions~1{asyncActionId}/get) -->[Get Async Action](ref:get-async-action) endpoint.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncActionsListResponseBody"
                },
                "examples": {
                  "List Async Actions": {
                    "value": {
                      "object": "list",
                      "data_ref": "async_actions",
                      "async_actions": [
                        {
                          "id": "aa_0ba518c55290c6fd62",
                          "type": "CUSTOMERS.BULK_UPDATE",
                          "status": "DONE",
                          "created_at": "2022-09-05T11:40:17.098Z",
                          "updated_at": "2022-09-05T11:40:17.887Z",
                          "request_id": "v-0ba518c52bc99858f0",
                          "progress": 100,
                          "object": "async_action"
                        },
                        {
                          "id": "aa_0ba50a7ff4d3574568",
                          "type": "CUSTOMERS.METADATA_UPDATE",
                          "status": "DONE",
                          "created_at": "2022-09-05T10:37:56.051Z",
                          "updated_at": "2022-09-05T10:37:56.862Z",
                          "request_id": "v-0ba50a7feb49984902",
                          "progress": 100,
                          "object": "async_action"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/async-actions/{asyncActionId}": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterAsyncActionId"
          },
          "name": "asyncActionId",
          "in": "path",
          "required": true,
          "description": "Unique ID of the asynchronous operation."
        }
      ],
      "get": {
        "operationId": "get-async-action",
        "tags": [
          "Async Actions"
        ],
        "summary": "Get Async Action",
        "description": "Check the result of a scheduled asynchronous operation.  \nThe table below lists the possible types of async actions. The types are different for each endpoint generating the async action. If you would like to learn more about importing data into Voucherify, read more [here](https://support.voucherify.io/article/574-data-import).\n\n\n\n\n \n",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns detailed information about the async action result.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncActionGetResponseBody"
                },
                "examples": {
                  "CAMPAIGN.VOUCHERS_IMPORT": {
                    "value": {
                      "id": "aa_0af9b22296cf473a10",
                      "type": "CAMPAIGN.VOUCHERS_IMPORT",
                      "status": "DONE",
                      "result": {
                        "message": "0 voucher(s) imported successfully, 3 failed.",
                        "failed": [
                          {
                            "code": "CODE9",
                            "reason": "unit: must be a number, property is required (actual value is 'EUR')"
                          },
                          {
                            "code": "CODE8",
                            "reason": "unit: must be a number, property is required (actual value is 'EUR')"
                          },
                          {
                            "code": "CODE7",
                            "reason": "unit: must be a number, property is required (actual value is 'EUR')"
                          }
                        ],
                        "done_count": 0,
                        "failed_count": 3
                      },
                      "created_at": "2023-01-20T07:23:43.289Z",
                      "updated_at": "2023-01-20T07:23:44.044Z",
                      "request_id": "v-0c553fdb325688d510",
                      "progress": 100,
                      "processing_time": 755,
                      "object": "async_action"
                    }
                  },
                  "CAMPAIGN.VOUCHERS_IMPORT_CSV": {
                    "value": {
                      "id": "aa_0c5543f00797b6113f",
                      "type": "CUSTOMERS.IMPORT_CSV",
                      "status": "DONE",
                      "result": {
                        "message": "0 customer(s) imported successfully, 2 failed.",
                        "failed": [
                          {
                            "source_id": "test-user@voucherify.io",
                            "row": 1,
                            "reason": "acquisition_channel: must be a string, property is required, must be equal to one of Facebook,Twitter,Website (actual value is 'snap')"
                          },
                          {
                            "source_id": "",
                            "row": 2,
                            "reason": "acquisition_channel: must be a string, property is required, must be equal to one of Facebook,Twitter,Website (actual value is 'insta')"
                          }
                        ],
                        "done_count": 0,
                        "failed_count": 2
                      },
                      "created_at": "2023-01-20T07:41:33.086Z",
                      "updated_at": "2023-01-20T07:41:33.216Z",
                      "request_id": "v-0c5543eff2cb0f547f",
                      "progress": 100,
                      "processing_time": 130,
                      "object": "async_action"
                    }
                  },
                  "CAMPAIGN.VOUCHERS_DELETE": {
                    "value": {
                      "id": "aa_0c553853d957b67bd4",
                      "type": "CAMPAIGN.VOUCHERS_DELETE",
                      "status": "DONE",
                      "result": {
                        "message": "Deleted 2 vouchers.",
                        "done_count": 2
                      },
                      "created_at": "2023-01-20T06:50:49.573Z",
                      "updated_at": "2023-01-20T06:50:50.053Z",
                      "request_id": "v-0c553853b5c418c826",
                      "progress": 100,
                      "processing_time": 480,
                      "object": "async_action"
                    }
                  },
                  "CAMPAIGN.VOUCHERS_UPDATE": {
                    "value": {
                      "id": "aa_0c5440c25c0e5728d0",
                      "type": "CAMPAIGN.VOUCHERS_UPDATE",
                      "status": "DONE",
                      "result": {
                        "message": "Updated 1 vouchers.",
                        "done_count": 1
                      },
                      "created_at": "2023-01-19T12:49:11.024Z",
                      "updated_at": "2023-01-19T12:49:11.852Z",
                      "request_id": "v-0c5440c24304189e44",
                      "progress": 100,
                      "processing_time": 828,
                      "object": "async_action"
                    }
                  },
                  "CAMPAIGN.VOUCHERS_GENERATE": {
                    "value": {
                      "id": "aa_0c54441d14d7b60014",
                      "type": "CAMPAIGN.VOUCHERS_GENERATE",
                      "status": "DONE",
                      "result": {
                        "message": "Generated 2 vouchers.",
                        "done_count": 2
                      },
                      "created_at": "2023-01-19T13:03:50.355Z",
                      "updated_at": "2023-01-19T13:03:51.030Z",
                      "request_id": "v-0c54441d0e4418b647",
                      "progress": 100,
                      "processing_time": 675,
                      "object": "async_action"
                    }
                  },
                  "CAMPAIGNS.METADATA_KEY_PURGE": {
                    "value": {
                      "id": "aa_0c554b22664a0eb5fc",
                      "type": "CAMPAIGNS.METADATA_KEY_PURGE",
                      "status": "DONE",
                      "result": {
                        "message": "Updated 0 campaigns.",
                        "done_count": 0
                      },
                      "created_at": "2023-01-20T08:12:59.673Z",
                      "updated_at": "2023-01-20T08:13:00.638Z",
                      "request_id": "w-0c554b225f8a0eb5fb",
                      "progress": 100,
                      "processing_time": 965,
                      "object": "async_action"
                    }
                  },
                  "CUSTOMERS.IMPORT_CSV": {
                    "value": {
                      "id": "aa_0c5543f00797b6113f",
                      "type": "CUSTOMERS.IMPORT_CSV",
                      "status": "DONE",
                      "result": {
                        "message": "0 customer(s) imported successfully, 2 failed.",
                        "failed": [
                          {
                            "source_id": "test-user@voucherify.io",
                            "row": 1,
                            "reason": "acquisition_channel: must be a string, property is required, must be equal to one of Facebook,Twitter,Website (actual value is 'snap')"
                          },
                          {
                            "source_id": "",
                            "row": 2,
                            "reason": "acquisition_channel: must be a string, property is required, must be equal to one of Facebook,Twitter,Website (actual value is 'insta')"
                          }
                        ],
                        "done_count": 0,
                        "failed_count": 2
                      },
                      "created_at": "2023-01-20T07:41:33.086Z",
                      "updated_at": "2023-01-20T07:41:33.216Z",
                      "request_id": "v-0c5543eff2cb0f547f",
                      "progress": 100,
                      "processing_time": 130,
                      "object": "async_action"
                    }
                  },
                  "CUSTOMERS.BULK_UPDATE": {
                    "value": {
                      "id": "aa_0c5547cc5e17b617b6",
                      "type": "CUSTOMERS.BULK_UPDATE",
                      "status": "DONE",
                      "operation_status": "SUCCESS",
                      "result": {
                        "done_count": 3,
                        "failed_count": 0,
                        "reports": [
                          "{{voucherify-link-to-report}}"
                        ],
                        "reports_available_till": "2024-11-06T08:26:13.304Z",
                        "errors": []
                      },
                      "created_at": "2023-01-20T07:58:25.144Z",
                      "updated_at": "2023-01-20T07:58:25.869Z",
                      "request_id": "v-0c5547cc4d8b0f5be4",
                      "progress": 100,
                      "processing_time": 725,
                      "object": "async_action"
                    }
                  },
                  "CUSTOMERS.METADATA_UPDATE": {
                    "value": {
                      "id": "aa_0c554a92030e576181",
                      "type": "CUSTOMERS.METADATA_UPDATE",
                      "status": "DONE",
                      "operation_status": "SUCCESS",
                      "result": {
                        "done_count": 3,
                        "failed_count": 0,
                        "reports": [
                          "{{voucherify-link-to-report}}"
                        ],
                        "reports_available_till": "2024-11-06T08:26:13.304Z",
                        "errors": []
                      },
                      "created_at": "2023-01-20T08:10:31.821Z",
                      "updated_at": "2023-01-20T08:10:32.564Z",
                      "request_id": "v-0c554a91fb4b0f61a2",
                      "progress": 100,
                      "processing_time": 743,
                      "object": "async_action"
                    }
                  },
                  "CUSTOMERS.METADATA_KEY_PURGE": {
                    "value": {
                      "id": "aa_0c5551f2ab0a0ebf0e",
                      "type": "CUSTOMERS.METADATA_KEY_PURGE",
                      "status": "DONE",
                      "result": {
                        "message": "Updated 0 customers.",
                        "done_count": 0
                      },
                      "created_at": "2023-01-20T08:42:45.804Z",
                      "updated_at": "2023-01-20T08:42:46.079Z",
                      "request_id": "w-0c5551f2a38a0ebf0d",
                      "progress": 100,
                      "processing_time": 275,
                      "object": "async_action"
                    }
                  },
                  "PRODUCTS.BULK_UPDATE": {
                    "value": {
                      "id": "aa_0c5553f0f457b6328e",
                      "type": "PRODUCTS.BULK_UPDATE",
                      "status": "DONE",
                      "operation_status": "SUCCESS",
                      "result": {
                        "done_count": 3,
                        "failed_count": 0,
                        "reports": [
                          "{{voucherify-link-to-report}}"
                        ],
                        "reports_available_till": "2024-11-06T08:26:13.304Z",
                        "errors": []
                      },
                      "created_at": "2023-01-20T08:51:28.337Z",
                      "updated_at": "2023-01-20T08:51:28.439Z",
                      "request_id": "v-0c5553f0e94b0f7502",
                      "progress": 100,
                      "processing_time": 102,
                      "object": "async_action"
                    }
                  },
                  "PRODUCTS.METADATA_UPDATE": {
                    "value": {
                      "id": "aa_0c5554869b97b633b4",
                      "type": "PRODUCTS.METADATA_UPDATE",
                      "status": "DONE",
                      "operation_status": "SUCCESS",
                      "result": {
                        "done_count": 3,
                        "failed_count": 0,
                        "reports": [
                          "{{voucherify-link-to-report}}"
                        ],
                        "reports_available_till": "2024-11-06T08:26:13.304Z",
                        "errors": []
                      },
                      "created_at": "2023-01-20T08:54:01.582Z",
                      "updated_at": "2023-01-20T08:54:02.436Z",
                      "request_id": "v-0c55548694c418f9dd",
                      "progress": 100,
                      "processing_time": 854,
                      "object": "async_action"
                    }
                  },
                  "PRODUCTS.METADATA_KEY_PURGE": {
                    "value": {
                      "id": "aa_0c5552d997ca0ec03a",
                      "type": "PRODUCTS.METADATA_KEY_PURGE",
                      "status": "DONE",
                      "result": {
                        "message": "Updated 2 products.",
                        "done_count": 2
                      },
                      "created_at": "2023-01-20T08:46:42.271Z",
                      "updated_at": "2023-01-20T08:46:43.240Z",
                      "request_id": "w-0c5552d98e8a0ec039",
                      "progress": 100,
                      "processing_time": 969,
                      "object": "async_action"
                    }
                  },
                  "VOUCHERS.IMPORT": {
                    "value": {
                      "id": "aa_0c5559be44d7b63c06",
                      "type": "VOUCHERS.IMPORT",
                      "status": "DONE",
                      "result": {
                        "message": "0 voucher(s) imported successfully, 3 failed.",
                        "failed": [
                          {
                            "code": "PROMO-CODE31",
                            "reason": "unit: must be a number, must be equal to one of 1,2 (actual value is 'EUR')"
                          },
                          {
                            "code": "PROMO-CODE21",
                            "reason": "unit: must be a number, must be equal to one of 1,2 (actual value is 'EUR')"
                          },
                          {
                            "code": "GIFT-CARD-100-1",
                            "reason": "unit: must be a number, must be equal to one of 1,2 (actual value is 'EUR')"
                          }
                        ],
                        "done_count": 0,
                        "failed_count": 3
                      },
                      "created_at": "2023-01-20T09:16:49.299Z",
                      "updated_at": "2023-01-20T09:16:50.238Z",
                      "request_id": "v-0c5559be25c418824a",
                      "progress": 100,
                      "processing_time": 939,
                      "object": "async_action"
                    }
                  },
                  "VOUCHERS.IMPORT_CSV": {
                    "value": {
                      "id": "aa_0c555db3d697b643e1",
                      "type": "VOUCHERS.IMPORT_CSV",
                      "status": "DONE",
                      "result": {
                        "message": "0 voucher(s) imported successfully, 2 failed.",
                        "failed": [
                          {
                            "code": "FALL2023",
                            "row": 1,
                            "reason": "Voucher Type is required"
                          },
                          {
                            "code": "FALL2024",
                            "row": 2,
                            "reason": "Voucher Type is required"
                          }
                        ],
                        "done_count": 0,
                        "failed_count": 2
                      },
                      "created_at": "2023-01-20T09:34:07.194Z",
                      "updated_at": "2023-01-20T09:34:07.367Z",
                      "request_id": "v-0c555db3ba8b0f0767",
                      "progress": 100,
                      "processing_time": 173,
                      "object": "async_action"
                    }
                  },
                  "VOUCHERS.BULK_UPDATE": {
                    "value": {
                      "id": "aa_0c555e8115d7b64504",
                      "type": "VOUCHERS.BULK_UPDATE",
                      "status": "DONE",
                      "operation_status": "SUCCESS",
                      "result": {
                        "done_count": 3,
                        "failed_count": 0,
                        "reports": [
                          "{{voucherify-link-to-report}}"
                        ],
                        "reports_available_till": "2024-11-06T08:26:13.304Z",
                        "errors": []
                      },
                      "created_at": "2023-01-20T09:37:37.367Z",
                      "updated_at": "2023-01-20T09:37:37.520Z",
                      "request_id": "v-0c555e810904188aa4",
                      "progress": 100,
                      "processing_time": 153,
                      "object": "async_action"
                    }
                  },
                  "VOUCHERS.METADATA_UPDATE": {
                    "value": {
                      "id": "aa_0c555ed40857b6463a",
                      "type": "VOUCHERS.METADATA_UPDATE",
                      "status": "DONE",
                      "operation_status": "SUCCESS",
                      "result": {
                        "done_count": 3,
                        "failed_count": 0,
                        "reports": [
                          "{{voucherify-link-to-report}}"
                        ],
                        "reports_available_till": "2024-11-06T08:26:13.304Z",
                        "errors": []
                      },
                      "created_at": "2023-01-20T09:39:02.305Z",
                      "updated_at": "2023-01-20T09:39:02.640Z",
                      "request_id": "v-0c555ed40084188b55",
                      "progress": 100,
                      "processing_time": 335,
                      "object": "async_action"
                    }
                  },
                  "VOUCHERS.METADATA_KEY_PURGE": {
                    "value": {
                      "id": "aa_0c55534bd64a0ec0e0",
                      "type": "VOUCHERS.METADATA_KEY_PURGE",
                      "status": "DONE",
                      "result": {
                        "message": "Updated 9 vouchers.",
                        "done_count": 9
                      },
                      "created_at": "2023-01-20T08:48:39.257Z",
                      "updated_at": "2023-01-20T08:48:40.503Z",
                      "request_id": "w-0c55534bcfca0ec0df",
                      "progress": 100,
                      "processing_time": 1246,
                      "object": "async_action"
                    }
                  },
                  "SKUS.IMPORT_CSV": {
                    "value": {
                      "id": "aa_0c5558728d0e577e67",
                      "type": "SKUS.IMPORT_CSV",
                      "status": "DONE",
                      "result": {
                        "message": "4 sku(s) imported successfully, 0 failed.",
                        "failed": [],
                        "done_count": 4,
                        "failed_count": 0
                      },
                      "created_at": "2023-01-20T09:11:09.620Z",
                      "updated_at": "2023-01-20T09:11:10.270Z",
                      "request_id": "v-0c5558726f0b0f7d82",
                      "progress": 100,
                      "processing_time": 650,
                      "object": "async_action"
                    }
                  },
                  "PRODUCTS.IMPORT_CSV": {
                    "value": {
                      "id": "aa_0c55578e914e577cf1",
                      "type": "PRODUCTS.IMPORT_CSV",
                      "status": "DONE",
                      "result": {
                        "message": "1 product(s) imported successfully, 1 failed.",
                        "failed": [
                          {
                            "row": 1,
                            "reason": "vendor: must be a string, property is required, must be equal to one of Vendor 1,Vendor 2 (actual value is 'Vendor 3')"
                          }
                        ],
                        "done_count": 1,
                        "failed_count": 1
                      },
                      "created_at": "2023-01-20T09:07:16.165Z",
                      "updated_at": "2023-01-20T09:07:17.025Z",
                      "request_id": "v-0c55578e7a0418fef5",
                      "progress": 100,
                      "processing_time": 860,
                      "object": "async_action"
                    }
                  },
                  "ORDERS.METADATA_KEY_PURGE": {
                    "value": {
                      "id": "aa_0c555fda50472c83a8",
                      "type": "ORDERS.METADATA_KEY_PURGE",
                      "status": "DONE",
                      "result": {
                        "message": "Updated 1 orders.",
                        "done_count": 1
                      },
                      "created_at": "2023-01-20T09:43:30.881Z",
                      "updated_at": "2023-01-20T09:43:31.217Z",
                      "request_id": "w-0c555fda45c72c83a7",
                      "progress": 100,
                      "processing_time": 336,
                      "object": "async_action"
                    }
                  },
                  "ORDERS.IMPORT": {
                    "value": {
                      "id": "aa_0c5564b67d0e571534",
                      "type": "ORDERS.IMPORT",
                      "status": "DONE",
                      "result": {
                        "message": "1 order(s) imported successfully, 1 failed.",
                        "failed": [
                          {
                            "source_id": null,
                            "reason": "Internal error"
                          }
                        ],
                        "done_count": 1,
                        "failed_count": 1
                      },
                      "created_at": "2023-01-20T10:04:44.916Z",
                      "updated_at": "2023-01-20T10:04:46.102Z",
                      "request_id": "v-0c5564b6688b0f155d",
                      "progress": 100,
                      "processing_time": 1186,
                      "object": "async_action"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/exports": {
      "post": {
        "operationId": "create-export",
        "tags": [
          "Exports"
        ],
        "summary": "Create Export",
        "description": "Create export object. The export can be any of the following types: voucher, redemption, publication, customer, order, points_expiration, voucher_transactions, product, or sku.  \n# Defaults\nIf you only specify the object type in the request body without specifying the fields, the API will return the following fields per export object:\n\n\n# Fetching particular data sets\nUsing the parameters body parameter, you can narrow down which fields to export and how to filter the results. The fields are an array of strings containing the data that you would like to export. These fields define the headers in the CSV file. The array can be a combination of any of the following available fields:\n# Orders  \n\n\n# Vouchers  \n\n\n\n\n\n# Publications\n\n\n# Redemptions\n\n\n\n# Customers\n\n\n\n\n\n\n# Points Expirations\n\n\n # Gift Card Transactions\n\n\n # Loyalty Card Transactions\n\n\n",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "requestBody": {
          "description": "Specify the details of the export that you would like to create.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExportsCreateRequestBody"
              }
            }
          }
        },
        "responses": {
          "2XX": {
            "description": "Returns export object and URL of CSV file.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExportsCreateResponseBody"
                }
              }
            }
          }
        }
      },
      "get": {
        "operationId": "list-exports",
        "tags": [
          "Exports"
        ],
        "summary": "List Exports",
        "description": "List all exports. ",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterOrderListExports"
            },
            "in": "query",
            "name": "order",
            "description": "Sorts the results using one of the filtering options, where the dash - preceding a sorting option means sorting in a descending order."
          }
        ],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "A dictionary with an exports property that contains an array of exports. Each entry in the array is a separate export object. The list will return the following types of exported objects: `voucher`, `redemption`, `publication`, `customer`, `order`, `points_expiration`, or `voucher_transactions`. \n\nThe `channel` parameter in the response body returns the channel that was used to generate the particular export. The `user_id` identifies the specific user who initiated the export through the Voucherify Dashboard; this `user_id` is returned when the channel value is `WEBSITE`.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExportsListResponseBody"
                },
                "examples": {
                  "List Exports": {
                    "value": {
                      "object": "list",
                      "data_ref": "exports",
                      "exports": [
                        {
                          "id": "exp_323UOPsH42twhJVaDZXf4UNo",
                          "object": "export",
                          "created_at": "2022-08-04T09:11:25.208Z",
                          "status": "DONE",
                          "channel": "API",
                          "exported_object": "order",
                          "parameters": {
                            "order": "-created_at",
                            "fields": [
                              "id",
                              "source_id",
                              "status"
                            ],
                            "filters": {
                              "junction": "and"
                            }
                          },
                          "result": {
                            "url": "{{internalVoucherifyURL}}"
                          },
                          "user_id": null
                        },
                        {
                          "id": "exp_sPQR0na2gU0pIVUKIz4wdQI9",
                          "object": "export",
                          "created_at": "2022-05-02T06:44:03.186Z",
                          "status": "DONE",
                          "channel": "API",
                          "exported_object": "voucher",
                          "parameters": {
                            "order": "-created_at",
                            "fields": [
                              "id",
                              "code",
                              "voucher_type",
                              "value"
                            ],
                            "filters": {
                              "junction": "and"
                            }
                          },
                          "result": {
                            "url": "{{internalVoucherifyURL}}"
                          },
                          "user_id": null
                        },
                        {
                          "id": "exp_CGnCVltmWjI9V1pGlnunw2Nf",
                          "object": "export",
                          "created_at": "2022-01-13T09:03:18.293Z",
                          "status": "DONE",
                          "channel": "API",
                          "exported_object": "customer",
                          "parameters": {
                            "order": "",
                            "fields": [
                              "name",
                              "id",
                              "email",
                              "source_id",
                              "created_at"
                            ],
                            "filters": {
                              "junction": "and"
                            },
                            "response_format": "CSV"
                          },
                          "result": {
                            "url": "{{internalVoucherifyURL}}"
                          },
                          "user_id": null
                        }
                      ],
                      "total": 3
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/exports/{exportId}": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterExportId"
          },
          "name": "exportId",
          "in": "path",
          "required": true,
          "description": "Unique export object ID of previously created export. This object can be a: voucher, redemption, publication, customer, order, points_expiration, or voucher_transactions."
        }
      ],
      "get": {
        "operationId": "get-export",
        "tags": [
          "Exports"
        ],
        "summary": "Get Export",
        "description": "Retrieves the URL of the downloadable file, which was generated via the Create Export method.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns the export object if a valid identifier was provided in the path.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExportsGetResponseBody"
                },
                "examples": {
                  "Get Export": {
                    "value": {
                      "id": "exp_CGnCVltmWjI9V1pGlnunw2Nf",
                      "object": "export",
                      "created_at": "2022-01-13T09:03:18.293Z",
                      "status": "DONE",
                      "channel": "API",
                      "exported_object": "customer",
                      "parameters": {
                        "order": "",
                        "fields": [
                          "name",
                          "id",
                          "email",
                          "source_id",
                          "created_at"
                        ],
                        "filters": {
                          "junction": "and"
                        },
                        "response_format": "CSV"
                      },
                      "result": {
                        "url": "{{internalVoucherifyURL}}"
                      },
                      "user_id": null
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "delete-export",
        "tags": [
          "Exports"
        ],
        "summary": "Delete Export",
        "description": "This method deletes a previously created export object.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns no content if deletion is successful."
          }
        }
      }
    },
    "/v1/exports/{export_Id}": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "example": "exp_ex6zq0x0EEa9S0N68QcqhxcQ"
          },
          "name": "export_Id",
          "in": "path",
          "required": true,
          "description": "Unique export object ID."
        },
        {
          "name": "token",
          "in": "query",
          "required": false,
          "schema": {
            "type": "string"
          },
          "description": "Token that was issued to the export, to get this token, get the export first"
        }
      ],
      "get": {
        "operationId": "download-export",
        "tags": [
          "Exports"
        ],
        "summary": "Download Export",
        "description": "Download the contents of the exported CSV file. \n 📘 Important notes\n **Base URL:** \n - https://download.voucherify.io (Europe) \n - https://us1.download.voucherify.io (US) \n - https://as1.download.voucherify.io (Asia) \n **Token:** Can be found within the result parameter of the Get Export method response.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns contents of CSV file.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "examples": {
                  "CSV file contents": {
                    "value": "ID,Code,Voucher Type,Value v_mKNYXWf5168jyW3EvwnAf73d7vnTiXaa,iuCvt3BT,GIFT_VOUCHER,2000.00 v_xb5KuIw90ViUY7NrNbDZzf1JwFmyTUi0,M3X8IwW8,GIFT_VOUCHER,2000.00 v_flCSHFGOfjxuM582jhriJTWQuetb2xHX,6vpzmKaC,GIFT_VOUCHER,2050.00 v_YtzZG4UJaWm9DNCY3AvIqVbc7Dt5WToU,lRvBOUPl,LOYALTY_CARD,0"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/categories": {
      "get": {
        "operationId": "list-categories",
        "tags": [
          "Categories"
        ],
        "summary": "List Categories",
        "description": "List all categories.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns a dictionary of category objects.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoriesListResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "object": "list",
                      "data_ref": "data",
                      "data": [
                        {
                          "id": "cat_0b5f49fb31c3bf6ab0",
                          "name": "Sixth",
                          "hierarchy": 6,
                          "created_at": "2022-07-13T06:21:36.852Z",
                          "object": "category"
                        },
                        {
                          "id": "cat_0b5f49e6e1ce5bd2ba",
                          "name": "Fifth",
                          "hierarchy": 5,
                          "created_at": "2022-07-13T06:21:16.039Z",
                          "object": "category"
                        },
                        {
                          "id": "cat_0b5f49deafce5bd2b5",
                          "name": "Fourth",
                          "hierarchy": 4,
                          "created_at": "2022-07-13T06:21:07.662Z",
                          "object": "category"
                        },
                        {
                          "id": "cat_0b5f49d45c43bf6a99",
                          "name": "Third",
                          "hierarchy": 3,
                          "created_at": "2022-07-13T06:20:57.094Z",
                          "object": "category"
                        },
                        {
                          "id": "cat_0b5f3f9881ce5bccb6",
                          "name": "Second",
                          "hierarchy": 2,
                          "created_at": "2022-07-13T05:36:14.355Z",
                          "object": "category"
                        },
                        {
                          "id": "cat_0b53bc388dc2f108ba",
                          "name": "First",
                          "hierarchy": 1,
                          "created_at": "2022-07-04T06:58:57.734Z",
                          "object": "category"
                        }
                      ],
                      "total": 6
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "create-category",
        "tags": [
          "Categories"
        ],
        "summary": "Create Category",
        "description": "Create category with a specific name and hierarchy.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "requestBody": {
          "description": "Specify the details of the category that you would like to create.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoriesCreateRequestBody"
              },
              "examples": {
                "Example": {
                  "value": {
                    "name": "Eighth",
                    "hierarchy": 8
                  }
                }
              }
            }
          }
        },
        "responses": {
          "2XX": {
            "description": "Returns a newly created category object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoriesCreateResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "id": "cat_0b8b5a427a0283c854",
                      "name": "Eighth",
                      "hierarchy": 8,
                      "created_at": "2022-08-16T11:45:54.171Z",
                      "object": "category"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/categories/{categoryId}": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterCategoryId"
          },
          "name": "categoryId",
          "in": "path",
          "required": true,
          "description": "Unique category ID assigned by Voucherify."
        }
      ],
      "get": {
        "operationId": "get-category",
        "tags": [
          "Categories"
        ],
        "summary": "Get Category",
        "description": "Retrieve a category by the category ID.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns a category object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoriesGetResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "id": "cat_0b5f49fb31c3bf6ab0",
                      "name": "Sixth",
                      "hierarchy": 6,
                      "created_at": "2022-07-13T06:21:36.852Z",
                      "object": "category"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "delete-category",
        "tags": [
          "Categories"
        ],
        "summary": "Delete Category",
        "description": "Delete a category by the category ID.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "No content is returned."
          }
        }
      },
      "put": {
        "operationId": "update-category",
        "tags": [
          "Categories"
        ],
        "summary": "Update Category",
        "description": "Update category using the category ID.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "requestBody": {
          "description": "Specify the details of the category that you would like to update.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoriesUpdateRequestBody"
              },
              "examples": {
                "Example": {
                  "value": {
                    "name": "Summer",
                    "hierarchy": 1
                  }
                }
              }
            }
          }
        },
        "responses": {
          "2XX": {
            "description": "Returns a category object with a refreshed `updated_at` property.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoriesUpdateResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "id": "cat_0b60cfe7d0d7ddbb55",
                      "name": "Update",
                      "hierarchy": 1,
                      "created_at": "2022-07-14T10:45:13.156Z",
                      "updated_at": "2022-08-16T11:03:54.727Z",
                      "object": "category"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/metadata-schemas": {
      "get": {
        "operationId": "list-metadata-schemas",
        "tags": [
          "Metadata Schemas"
        ],
        "summary": "List Metadata Schemas",
        "description": "Retrieve metadata schema definitions.\n📘 Management API\nIf you have Management API enabled, you can also use the List Metadata Schemas endpoint to list all metadata schemas.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns an array of metadata schema definitions. The response does not include unknown metadata properties in the response, i.e. those that have been defined outside of the **Project Settings** > **Metadata Schema** definitions. For example, an unknown metadata property can be defined in the campaign manager while creating a campaign.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetadataSchemasListResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "object": "list",
                      "data_ref": "schemas",
                      "schemas": [
                        {
                          "id": "ms_yqMHRHH6S1KYIHPmQHealNf4",
                          "related_object": "Payment",
                          "properties": {
                            "payment_tax": {
                              "type": "number",
                              "array": false,
                              "optional": true,
                              "objectType": null
                            },
                            "payment_method": {
                              "type": "string",
                              "array": false,
                              "optional": true,
                              "objectType": null
                            }
                          },
                          "allow_defined_only": true,
                          "created_at": "2022-03-07T11:01:01.747Z",
                          "updated_at": "2022-03-07T11:01:44.785Z",
                          "object": "metadata_schema"
                        },
                        {
                          "id": "ms_DwUjpX32sY3fJEoQELpS7bN3",
                          "related_object": "campaign",
                          "properties": {
                            "Store": {
                              "type": "string",
                              "array": false,
                              "deleted": true,
                              "optional": true,
                              "objectType": null
                            },
                            "locale": {
                              "type": "string",
                              "array": false,
                              "optional": true,
                              "objectType": null
                            },
                            "date_tag": {
                              "type": "date",
                              "array": false,
                              "optional": true,
                              "objectType": null
                            },
                            "store_names": {
                              "eq": [
                                "Store 1 - New York - Broadway",
                                "Store 2 - Florida - Miami",
                                "Store 3 - London - Heathrow",
                                "Store 4 - Berlin - Alexanderplatz"
                              ],
                              "type": "string",
                              "array": false,
                              "optional": true,
                              "objectType": null
                            },
                            "date_time_tag": {
                              "type": "datetime",
                              "array": false,
                              "optional": true,
                              "objectType": null
                            },
                            "favorite_brands": {
                              "type": "string",
                              "array": true,
                              "deleted": true,
                              "optional": true,
                              "objectType": null
                            },
                            "height_customer_number": {
                              "type": "number",
                              "array": false,
                              "optional": true,
                              "objectType": null
                            },
                            "location_country_string": {
                              "type": "string",
                              "array": false,
                              "optional": true,
                              "objectType": null
                            }
                          },
                          "allow_defined_only": false,
                          "created_at": "2021-12-03T13:33:44.556Z",
                          "updated_at": "2022-07-26T13:57:42.288Z",
                          "object": "metadata_schema"
                        },
                        {
                          "id": "ms_f0r4hm3ta6a4a5ch3ma",
                          "related_object": "customer",
                          "properties": {
                            "birth_date": {
                              "type": "datetime",
                              "array": false,
                              "optional": true,
                              "objectType": null
                            },
                            "CRM_created_date": {
                              "type": "datetime",
                              "array": false,
                              "optional": true,
                              "objectType": null
                            },
                            "customer_location": {
                              "type": "geopoint",
                              "array": false,
                              "optional": true,
                              "objectType": null
                            },
                            "acquisition_channel": {
                              "eq": [
                                "Facebook",
                                "Twitter",
                                "Website"
                              ],
                              "type": "string",
                              "array": false,
                              "optional": true,
                              "objectType": null
                            },
                            "customer_life_time_value": {
                              "type": "number",
                              "array": false,
                              "optional": true,
                              "objectType": null
                            }
                          },
                          "allow_defined_only": false,
                          "created_at": "2021-12-03T06:33:45.894Z",
                          "updated_at": "2022-07-14T15:15:34.928Z",
                          "object": "metadata_schema"
                        },
                        {
                          "id": "ms_7X7krsG84H6MeNuIaKkb4LXN",
                          "related_object": "earning_rule",
                          "properties": {
                            "Type": {
                              "type": "string",
                              "array": false,
                              "optional": true,
                              "minLength": 6,
                              "objectType": null
                            }
                          },
                          "allow_defined_only": false,
                          "created_at": "2022-07-27T08:54:07.980Z",
                          "updated_at": null,
                          "object": "metadata_schema"
                        },
                        {
                          "id": "ms_OF36L2rk4EqhdxvZs56IW9iE",
                          "related_object": "loyalty_tier",
                          "properties": {
                            "has_funds": {
                              "type": "boolean",
                              "array": false,
                              "optional": true,
                              "objectType": null
                            }
                          },
                          "allow_defined_only": false,
                          "created_at": "2022-03-30T06:22:16.685Z",
                          "updated_at": "2022-07-27T08:55:01.628Z",
                          "object": "metadata_schema"
                        },
                        {
                          "id": "ms_f1r5Tm3ta6a4a5ch3ma",
                          "related_object": "order",
                          "properties": {
                            "Payment": {
                              "type": "object",
                              "array": false,
                              "deleted": true,
                              "optional": true,
                              "objectType": "Payment"
                            },
                            "day_of_week": {
                              "type": "number",
                              "array": false,
                              "optional": true,
                              "objectType": null
                            },
                            "location_id": {
                              "eq": [
                                "L1",
                                "L2",
                                "L3"
                              ],
                              "type": "string",
                              "array": true,
                              "optional": true,
                              "objectType": null
                            },
                            "payment_mean": {
                              "eq": [
                                "credit-card",
                                "wire-transfer",
                                "paypal"
                              ],
                              "type": "string",
                              "array": true,
                              "optional": true,
                              "objectType": null
                            },
                            "booking_end_date": {
                              "type": "datetime",
                              "array": false,
                              "optional": true,
                              "objectType": null
                            },
                            "booking_start_date": {
                              "type": "datetime",
                              "array": false,
                              "optional": true,
                              "objectType": null
                            },
                            "number_of_store_visits": {
                              "type": "number",
                              "array": false,
                              "optional": true,
                              "objectType": null
                            }
                          },
                          "allow_defined_only": false,
                          "created_at": "2021-12-03T06:33:45.798Z",
                          "updated_at": "2022-04-20T06:47:10.350Z",
                          "object": "metadata_schema"
                        },
                        {
                          "id": "ms_0qgIlxP7bYb8H59DqpnWBCUN",
                          "related_object": "order_item",
                          "properties": {
                            "Size": {
                              "type": "number",
                              "array": false,
                              "optional": true,
                              "objectType": null
                            },
                            "Color": {
                              "type": "string",
                              "array": false,
                              "optional": true,
                              "objectType": null
                            },
                            "Thickness": {
                              "eq": [
                                "Thin",
                                "Medium",
                                "Thick"
                              ],
                              "type": "string",
                              "array": false,
                              "optional": true,
                              "objectType": null
                            }
                          },
                          "allow_defined_only": false,
                          "created_at": "2022-03-11T13:32:55.029Z",
                          "updated_at": "2022-05-23T13:46:01.463Z",
                          "object": "metadata_schema"
                        },
                        {
                          "id": "ms_s3c0N6m3ta6a4a5ch3ma",
                          "related_object": "product",
                          "properties": {
                            "color": {
                              "type": "string",
                              "array": true,
                              "optional": true,
                              "objectType": null
                            },
                            "origin": {
                              "type": "string",
                              "array": false,
                              "optional": true,
                              "minLength": 1,
                              "objectType": null
                            },
                            "product_location": {
                              "type": "geopoint",
                              "array": false,
                              "optional": true,
                              "objectType": null
                            },
                            "metadata_attribute_name_with_date_property": {
                              "type": "date",
                              "array": false,
                              "optional": true,
                              "objectType": null
                            },
                            "metadata_attribute_name_with_number_property": {
                              "type": "number",
                              "array": false,
                              "optional": true,
                              "objectType": null
                            },
                            "metadata_attribute_name_with_boolean_property": {
                              "type": "boolean",
                              "array": false,
                              "optional": true,
                              "objectType": null
                            },
                            "metadata_attribute_name_with_datetime_property": {
                              "type": "datetime",
                              "array": false,
                              "optional": true,
                              "objectType": null
                            }
                          },
                          "allow_defined_only": false,
                          "created_at": "2021-12-03T06:33:45.880Z",
                          "updated_at": "2022-07-14T15:46:47.994Z",
                          "object": "metadata_schema"
                        },
                        {
                          "id": "ms_th8YHt9yFYY1yAA99XOasT5W",
                          "related_object": "promotion_tier",
                          "properties": {
                            "has_budget": {
                              "type": "boolean",
                              "array": false,
                              "optional": true,
                              "objectType": null
                            }
                          },
                          "allow_defined_only": false,
                          "created_at": "2022-01-24T07:22:21.523Z",
                          "updated_at": "2022-07-27T08:54:42.909Z",
                          "object": "metadata_schema"
                        },
                        {
                          "id": "ms_Z7niydc0OpGjDRL4yB40niXn",
                          "related_object": "publication",
                          "properties": {
                            "year": {
                              "type": "number",
                              "array": false,
                              "optional": true,
                              "objectType": null
                            }
                          },
                          "allow_defined_only": false,
                          "created_at": "2022-03-30T06:23:49.715Z",
                          "updated_at": "2022-04-19T10:28:24.568Z",
                          "object": "metadata_schema"
                        },
                        {
                          "id": "ms_t4ir0Dm3ta6a4a5ch3ma",
                          "related_object": "redemption",
                          "properties": {
                            "location_id": {
                              "eq": [
                                "L1",
                                "L2",
                                "L3"
                              ],
                              "type": "string",
                              "array": true,
                              "optional": true,
                              "objectType": null
                            },
                            "store_names": {
                              "eq": [
                                "Store 1 - New York - Broadway",
                                "Store 2 - Florida - Miami",
                                "Store 3 - London - Heathrow",
                                "Store 4 - Berlin - Alexanderplatz"
                              ],
                              "type": "string",
                              "array": false,
                              "optional": true,
                              "objectType": null
                            }
                          },
                          "allow_defined_only": false,
                          "created_at": "2021-12-03T06:33:45.890Z",
                          "updated_at": "2022-07-26T14:58:24.546Z",
                          "object": "metadata_schema"
                        },
                        {
                          "id": "ms_EnSASZVEIDsZAYa8Z0nG8Rlg",
                          "related_object": "reward",
                          "properties": {
                            "Type": {
                              "type": "string",
                              "array": false,
                              "optional": true,
                              "objectType": null,
                              "exactLength": 4
                            }
                          },
                          "allow_defined_only": false,
                          "created_at": "2022-07-27T08:53:32.257Z",
                          "updated_at": "2022-07-27T08:53:48.542Z",
                          "object": "metadata_schema"
                        },
                        {
                          "id": "ms_xUHvkRBPvVJAlWcTkVzufKx4",
                          "related_object": "voucher",
                          "properties": {
                            "unit": {
                              "type": "number",
                              "array": false,
                              "optional": true,
                              "objectType": null
                            },
                            "Region": {
                              "type": "string",
                              "array": false,
                              "optional": true,
                              "objectType": null
                            },
                            "Season": {
                              "eq": [
                                "Spring",
                                "Summer",
                                "Fall",
                                "Winter"
                              ],
                              "type": "string",
                              "array": false,
                              "optional": true,
                              "objectType": null
                            },
                            "CATEGORY": {
                              "type": "string",
                              "array": false,
                              "optional": true,
                              "objectType": null
                            },
                            "active_on_calendar_month": {
                              "eq": [
                                1,
                                2,
                                3,
                                5,
                                7,
                                9,
                                10,
                                11,
                                12
                              ],
                              "type": "number",
                              "array": false,
                              "optional": true,
                              "objectType": null
                            }
                          },
                          "allow_defined_only": false,
                          "created_at": "2022-01-24T07:22:01.281Z",
                          "updated_at": "2022-06-22T07:22:09.577Z",
                          "object": "metadata_schema"
                        }
                      ],
                      "total": 13
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/metadata-schemas/{resource}": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterString"
          },
          "name": "resource",
          "in": "path",
          "required": true,
          "description": "There is an infinite number of possibilities for retrieving metadata schemas by the resource type because you can define custom metadata schemas."
        }
      ],
      "get": {
        "operationId": "get-metadata-schema",
        "tags": [
          "Metadata Schemas"
        ],
        "summary": "Get Metadata Schema",
        "description": "Retrieves a metadata schema per resource type.\n# Resource types\n## Standard\nYou can retrieve metadata schemas for the standard metadata schema definitions listed below. Add one of these types as the resource path parameter.\n- campaign\n- customer\n- earning_rule\n- loyalty_tier\n- order\n- order_item\n- product\n- promotion_tier\n- publication\n- redemption\n- reward\n- voucher\n## Custom\nIf you have defined a [custom metadata schema](https://support.voucherify.io/article/99-schema-validation-metadata#add-metadata), provide its name in the resource field to retrieve its details.\n📘 Management API\nIf you have Management API enabled, you can also use the Get Metadata Schemas endpoint to retrieve a metadata schema using its ID.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "The response does not include unknown metadata properties in the response, i.e. those that have been defined outside of the **Project Settings** > **Metadata Schema** definitions. For example, an unknown metadata property can be defined in the campaign manager.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetadataSchemasGetResponseBody"
                },
                "examples": {
                  "earning_rule": {
                    "value": {
                      "id": "ms_27vMXZqBAkkqBoOuw8EYTRLn",
                      "related_object": "earning_rule",
                      "properties": {
                        "channel_id": {
                          "type": "string",
                          "array": true,
                          "optional": true,
                          "objectType": null,
                          "exactLength": 5
                        },
                        "channel_name": {
                          "eq": [
                            "instagram",
                            "facebook",
                            "google",
                            "twitter",
                            "linkedin",
                            "website"
                          ],
                          "type": "string",
                          "array": false,
                          "optional": true,
                          "objectType": null
                        }
                      },
                      "allow_defined_only": false,
                      "created_at": "2022-08-25T13:09:59.970Z",
                      "updated_at": "2022-08-25T13:11:15.704Z",
                      "object": "metadata_schema"
                    }
                  },
                  "campaign": {
                    "value": {
                      "id": "ms_psGSDpVl6JcPilPA7toZ83Kj",
                      "related_object": "campaign",
                      "properties": {
                        "region": {
                          "eq": [
                            "EMEA",
                            "AMER",
                            "APAC"
                          ],
                          "type": "string",
                          "array": false,
                          "optional": true,
                          "objectType": null
                        }
                      },
                      "allow_defined_only": false,
                      "created_at": "2022-08-25T13:12:58.447Z",
                      "updated_at": "2022-08-25T13:16:03.167Z",
                      "object": "metadata_schema"
                    }
                  },
                  "customer": {
                    "value": {
                      "id": "ms_f0r4hm3ta6a4a5ch3ma",
                      "related_object": "customer",
                      "properties": {
                        "age": {
                          "type": "number",
                          "array": false,
                          "optional": true,
                          "objectType": null
                        },
                        "city_id": {
                          "type": "number",
                          "array": false,
                          "optional": true,
                          "objectType": null
                        },
                        "location": {
                          "type": "string",
                          "array": false,
                          "optional": true,
                          "objectType": null
                        },
                        "favorite_brands": {
                          "type": "string",
                          "array": true,
                          "optional": true,
                          "objectType": null
                        },
                        "acquisition_channel": {
                          "eq": [
                            "Facebook",
                            "Twitter",
                            "Website"
                          ],
                          "type": "string",
                          "array": false,
                          "optional": true,
                          "objectType": null
                        },
                        "customer_life_time_value": {
                          "type": "number",
                          "array": false,
                          "optional": true,
                          "objectType": null
                        }
                      },
                      "allow_defined_only": false,
                      "created_at": "2021-12-01T08:00:48.889Z",
                      "updated_at": "2022-09-12T07:34:49.163Z",
                      "object": "metadata_schema"
                    }
                  },
                  "loyalty_tier": {
                    "value": {
                      "id": "ms_jHUoFlgepKVEftxK1pKPGZlO",
                      "related_object": "loyalty_tier",
                      "properties": {
                        "level_name": {
                          "type": "string",
                          "array": false,
                          "optional": true,
                          "objectType": null
                        },
                        "audience_restricted": {
                          "type": "boolean",
                          "array": false,
                          "optional": true,
                          "objectType": null
                        }
                      },
                      "allow_defined_only": false,
                      "created_at": "2022-08-25T13:14:54.954Z",
                      "updated_at": "2022-08-25T13:15:24.436Z",
                      "object": "metadata_schema"
                    }
                  },
                  "order": {
                    "value": {
                      "id": "ms_f1r5Tm3ta6a4a5ch3ma",
                      "related_object": "order",
                      "properties": {
                        "card": {
                          "eq": [
                            "Visa",
                            "MasterCard",
                            "Other"
                          ],
                          "type": "string",
                          "array": true,
                          "optional": true,
                          "objectType": null
                        },
                        "currency": {
                          "type": "string",
                          "array": false,
                          "optional": true,
                          "objectType": null
                        },
                        "location": {
                          "ne": [
                            1,
                            2,
                            18,
                            22
                          ],
                          "type": "number",
                          "array": false,
                          "optional": true,
                          "objectType": null
                        },
                        "store_city": {
                          "eq": [
                            "Hampden",
                            "San Francisco",
                            "Warsaw"
                          ],
                          "type": "string",
                          "array": false,
                          "optional": true,
                          "objectType": null
                        },
                        "location_id": {
                          "eq": [
                            "L1",
                            "L2",
                            "L3"
                          ],
                          "type": "string",
                          "array": true,
                          "optional": true,
                          "objectType": null
                        },
                        "payment_mean": {
                          "eq": [
                            "credit-card",
                            "wire-transfer",
                            "paypal"
                          ],
                          "type": "string",
                          "array": true,
                          "optional": true,
                          "objectType": null
                        },
                        "booking_end_date": {
                          "type": "datetime",
                          "array": false,
                          "optional": true,
                          "objectType": null
                        },
                        "booking_start_date": {
                          "type": "datetime",
                          "array": false,
                          "optional": true,
                          "objectType": null
                        }
                      },
                      "allow_defined_only": false,
                      "created_at": "2021-12-01T08:00:47.575Z",
                      "updated_at": "2022-10-25T10:05:18.978Z",
                      "object": "metadata_schema"
                    }
                  },
                  "order_item": {
                    "value": {
                      "id": "ms_7ux44AEnt82bqo8ww5V1SXzV",
                      "related_object": "order_item",
                      "properties": {
                        "manufacturer_id": {
                          "gte": 15,
                          "type": "number",
                          "array": false,
                          "optional": true,
                          "objectType": null
                        }
                      },
                      "allow_defined_only": false,
                      "created_at": "2022-08-25T13:16:03.167Z",
                      "updated_at": "2022-08-25T13:16:03.167Z",
                      "object": "metadata_schema"
                    }
                  },
                  "product": {
                    "value": {
                      "id": "ms_s3c0N6m3ta6a4a5ch3ma",
                      "related_object": "product",
                      "properties": {
                        "vendor": {
                          "type": "string",
                          "array": false,
                          "optional": true,
                          "objectType": null
                        },
                        "category": {
                          "type": "string",
                          "array": false,
                          "optional": true,
                          "objectType": null
                        },
                        "location": {
                          "type": "geopoint",
                          "array": false,
                          "optional": true,
                          "objectType": null
                        }
                      },
                      "allow_defined_only": false,
                      "created_at": "2021-12-01T08:00:48.298Z",
                      "updated_at": "2022-07-14T15:53:29.226Z",
                      "object": "metadata_schema"
                    }
                  },
                  "promotion_tier": {
                    "value": {
                      "id": "ms_dNb5aLMzU0VBCiRuxLOeMNwn",
                      "related_object": "promotion_tier",
                      "properties": {
                        "level": {
                          "type": "string",
                          "array": false,
                          "optional": true,
                          "objectType": null
                        }
                      },
                      "allow_defined_only": false,
                      "created_at": "2022-01-24T10:42:04.937Z",
                      "updated_at": "2022-09-23T08:51:46.266Z",
                      "object": "metadata_schema"
                    }
                  },
                  "publication": {
                    "value": {
                      "id": "ms_fzvWNh7sU4LeykEQ2Abpg6jG",
                      "related_object": "publication",
                      "properties": {
                        "file_uploaded": {
                          "type": "image_url",
                          "array": false,
                          "optional": true,
                          "objectType": null
                        },
                        "publication_method": {
                          "type": "string",
                          "array": false,
                          "optional": true,
                          "objectType": null
                        }
                      },
                      "allow_defined_only": false,
                      "created_at": "2022-08-25T13:16:35.534Z",
                      "updated_at": "2022-09-12T10:26:31.135Z",
                      "object": "metadata_schema"
                    }
                  },
                  "redemption": {
                    "value": {
                      "id": "ms_t4ir0Dm3ta6a4a5ch3ma",
                      "related_object": "redemption",
                      "properties": {
                        "location_id": {
                          "eq": [
                            "L1",
                            "L2",
                            "L3"
                          ],
                          "type": "string",
                          "array": true,
                          "optional": true,
                          "objectType": null
                        },
                        "redemption_location": {
                          "type": "object",
                          "array": false,
                          "optional": true,
                          "objectType": "Location"
                        }
                      },
                      "allow_defined_only": false,
                      "created_at": "2021-12-01T08:00:48.794Z",
                      "updated_at": "2022-08-25T13:19:50.497Z",
                      "object": "metadata_schema"
                    }
                  },
                  "reward": {
                    "value": {
                      "id": "ms_PwrAtwqCFXeH4Qix22gEkqhl",
                      "related_object": "reward",
                      "properties": {
                        "reward_type": {
                          "eq": [
                            "MATERIAL",
                            "PAY-WITH-POINTS",
                            "DISCOUNT-COUPON",
                            "GIFT-CARD-CREDITS",
                            "LOYALTY POINTS"
                          ],
                          "type": "string",
                          "array": false,
                          "optional": false,
                          "objectType": null
                        }
                      },
                      "allow_defined_only": true,
                      "created_at": "2022-08-25T13:07:13.689Z",
                      "updated_at": "2022-08-25T13:08:26.696Z",
                      "object": "metadata_schema"
                    }
                  },
                  "voucher": {
                    "value": {
                      "id": "ms_9uE6eP17Jvoxl46mCqL6Q3Ut",
                      "related_object": "voucher",
                      "properties": {
                        "lang": {
                          "type": "string",
                          "array": false,
                          "optional": true,
                          "objectType": null
                        },
                        "Season": {
                          "eq": [
                            "Spring",
                            "Summer",
                            "Fall",
                            "Winter"
                          ],
                          "type": "string",
                          "array": false,
                          "optional": true,
                          "objectType": null
                        },
                        "marketing_text": {
                          "type": "string",
                          "array": false,
                          "optional": true,
                          "objectType": null
                        },
                        "ProductionVoucherCodeMetaData": {
                          "type": "string",
                          "array": false,
                          "deleted": true,
                          "optional": true,
                          "objectType": null
                        }
                      },
                      "allow_defined_only": false,
                      "created_at": "2022-01-24T10:42:23.994Z",
                      "updated_at": "2022-09-19T14:13:30.590Z",
                      "object": "metadata_schema"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/locations": {
      "get": {
        "operationId": "list-locations",
        "tags": [
          "Locations"
        ],
        "summary": "List Locations",
        "description": "Returns a list of your locations.",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/ParameterOrderListLocations"
            },
            "description": "Sorts the results using one of the filtering options, where the dash - preceding a sorting option means sorting in a descending order."
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/ParameterFiltersListLocations"
            },
            "description": "Filter the locations using one of the available filters.",
            "style": "deepObject",
            "explode": true
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/ParameterDate"
            },
            "description": "A filter on the list based on the end date. This will filter out all locations whose end date falls before the specified date and time. A date value must be presented in the ISO 8601 format (2016-11-16T14:14:31Z or 2016-11-16)."
          }
        ],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns a dictionary that contains an array of locations. Each entry in the array is a separate location object.  If no more locations are available, the resulting array will be empty. The result can be narrowed down according to specified (or default) filters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationsListResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "object": "list",
                      "data_ref": "data",
                      "data": [
                        {
                          "id": "loc_NoMGXmHO9OUs7iz9mGWpamma",
                          "object": "location",
                          "name": "Belleville",
                          "shape": {
                            "type": "circle",
                            "format": "distance",
                            "distance": {
                              "center": "geo:40.79372699823857,-74.15092132694554",
                              "radius": "1.54 km"
                            }
                          },
                          "created_at": "2022-07-15T06:04:36.924Z",
                          "updated_at": null
                        },
                        {
                          "id": "loc_ae2gKWpAFMsuRhyMqGx2FZFF",
                          "object": "location",
                          "name": "New York",
                          "shape": {
                            "type": "polygon",
                            "format": "geojson",
                            "geojson": {
                              "type": "Polygon",
                              "coordinates": [
                                [
                                  [
                                    -74.016167,
                                    40.703186
                                  ],
                                  [
                                    -74.008687,
                                    40.750656
                                  ],
                                  [
                                    -73.943597,
                                    40.851838
                                  ],
                                  [
                                    -73.928559,
                                    40.845285
                                  ],
                                  [
                                    -73.936152,
                                    40.8356
                                  ],
                                  [
                                    -73.934298,
                                    40.810015
                                  ],
                                  [
                                    -73.92711,
                                    40.795145
                                  ],
                                  [
                                    -73.978623,
                                    40.710432
                                  ],
                                  [
                                    -74.013201,
                                    40.701619
                                  ],
                                  [
                                    -74.016167,
                                    40.703186
                                  ]
                                ]
                              ]
                            }
                          },
                          "created_at": "2022-07-15T05:37:45.299Z",
                          "updated_at": null
                        },
                        {
                          "id": "loc_f5HqjVaiq7g9ISlmivpytxSf",
                          "object": "location",
                          "name": "Germany",
                          "shape": {
                            "type": "circle",
                            "format": "distance",
                            "distance": {
                              "center": "geo:51.303908897065064,10.222253628401518",
                              "radius": "192.37 km"
                            }
                          },
                          "created_at": "2022-07-14T15:51:39.265Z",
                          "updated_at": null
                        },
                        {
                          "id": "loc_RcYz537sV07e1t5aG5tIH9FD",
                          "object": "location",
                          "name": "Poland",
                          "shape": {
                            "type": "polygon",
                            "format": "geojson",
                            "geojson": {
                              "type": "Polygon",
                              "coordinates": [
                                [
                                  [
                                    18.553923,
                                    50.559107
                                  ],
                                  [
                                    18.528805,
                                    51.087437
                                  ],
                                  [
                                    19.591667,
                                    50.832424
                                  ],
                                  [
                                    19.425109,
                                    50.497984
                                  ],
                                  [
                                    19.375814,
                                    50.330652
                                  ],
                                  [
                                    19.398107,
                                    50.111652
                                  ],
                                  [
                                    18.73906,
                                    49.981498
                                  ],
                                  [
                                    18.272477,
                                    50.088707
                                  ],
                                  [
                                    18.553923,
                                    50.559107
                                  ]
                                ]
                              ]
                            }
                          },
                          "created_at": "2022-07-14T15:21:55.085Z",
                          "updated_at": null
                        }
                      ],
                      "total": 4,
                      "has_more": false
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/locations/{locationId}": {
      "get": {
        "operationId": "get-location",
        "tags": [
          "Locations"
        ],
        "summary": "Get Location",
        "description": "Returns a location object.",
        "parameters": [
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterLocationId"
            },
            "name": "locationId",
            "in": "path",
            "required": true,
            "description": "The unique location ID."
          }
        ],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns a location object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationsGetResponseBody"
                },
                "examples": {
                  "Circle Example": {
                    "value": {
                      "id": "loc_NoMGXmHO9OUs7iz9mGWpamma",
                      "object": "location",
                      "name": "Belleville",
                      "shape": {
                        "type": "circle",
                        "format": "distance",
                        "distance": {
                          "center": "geo:40.79372699823857,-74.15092132694554",
                          "radius": "1.54 km"
                        }
                      },
                      "created_at": "2022-07-15T06:04:36.924Z",
                      "updated_at": null
                    }
                  },
                  "Polygon Example": {
                    "value": {
                      "id": "loc_RcYz537sV07e1t5aG5tIH9FD",
                      "object": "location",
                      "name": "Poland",
                      "shape": {
                        "type": "polygon",
                        "format": "geojson",
                        "geojson": {
                          "type": "Polygon",
                          "coordinates": [
                            [
                              [
                                18.553923,
                                50.559107
                              ],
                              [
                                18.528805,
                                51.087437
                              ],
                              [
                                19.591667,
                                50.832424
                              ],
                              [
                                19.425109,
                                50.497984
                              ],
                              [
                                19.375814,
                                50.330652
                              ],
                              [
                                19.398107,
                                50.111652
                              ],
                              [
                                18.73906,
                                49.981498
                              ],
                              [
                                18.272477,
                                50.088707
                              ],
                              [
                                18.553923,
                                50.559107
                              ]
                            ]
                          ]
                        }
                      },
                      "created_at": "2022-07-14T15:21:55.085Z",
                      "updated_at": null
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/referrals/{campaignId}/members/{memberId}/holders": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterCampaignId"
          },
          "name": "campaignId",
          "in": "path",
          "required": true,
          "description": "Unique identifier of a referral program campaign."
        },
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterMemberId"
          },
          "name": "memberId",
          "in": "path",
          "required": true,
          "description": "Unique referral code or its identifier."
        }
      ],
      "post": {
        "operationId": "referrals-add-holders-1",
        "tags": [
          "Referrals"
        ],
        "summary": "Add Referral Code Holders",
        "description": "Adds new holders to a referral code as **referees**. The data sent in the request is upserted into the customer data.\nIf the request returns an error even for one customer, you have to resend the whole request. Customer data is upserted if the data for all customers is correct.\nTo use this endpoint, you must have the following permissions:\n- Create and modify Customers and Segments (customers.modify)\n- Publish Voucher (vouchers.publish)\n 👍\nTo add a holder as a referer, use the Create Publication endpoint.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "requestBody": {
          "description": "Specify the customer data to be upserted as redeemable holders.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReferralsMembersHoldersCreateInBulkRequestBody"
              },
              "examples": {
                "Example": {
                  "value": {
                    "holders": [
                      {
                        "source_id": "cst-prsn01",
                        "name": "Alex Doe",
                        "email": "alex-doe@your.domain.com",
                        "country": "England"
                      },
                      {
                        "source_id": "cst-prsn02",
                        "name": "Alex Joe",
                        "email": "alex-joe@your.domain.com",
                        "country": "Wales"
                      }
                    ],
                    "metadata": {
                      "influencer_code": true
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "2XX": {
            "description": "Returns a list of redeemable holder objects.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReferralsMembersHoldersCreateInBulkResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "holders": [
                        {
                          "id": "rh_0f198761748966ffab",
                          "created_at": "2024-07-23T10:40:48.579Z",
                          "redeemable_id": "v_uOrG9tQresN9X51gbAoo0a2vY4MLV9lS",
                          "redeemable_object": "voucher",
                          "campaign_id": "camp_vVk4unz3k4gA023fk9XoSiTh",
                          "campaign_type": "REFERRAL_PROGRAM",
                          "voucher_type": "DISCOUNT_VOUCHER",
                          "customer_id": "cust_r8yoJtgAAF2pqU1yuICtk9bv",
                          "holder_role": "REFEREE",
                          "object": "redeemable_holder",
                          "metadata": {
                            "influencer_code": true
                          }
                        },
                        {
                          "id": "rh_0f198761748966ffac",
                          "created_at": "2024-07-23T10:40:48.579Z",
                          "redeemable_id": "v_uOrG9tQresN9X51gbAoo0a2vY4MLV9lS",
                          "redeemable_object": "voucher",
                          "campaign_id": "camp_vVk4unz3k4gA023fk9XoSiTh",
                          "campaign_type": "REFERRAL_PROGRAM",
                          "voucher_type": "DISCOUNT_VOUCHER",
                          "customer_id": "cust_uCLPtbQkQayw6t40O9IMPQzV",
                          "holder_role": "REFEREE",
                          "object": "redeemable_holder",
                          "metadata": {
                            "influencer_code": true
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "operationId": "referrals-code-holders",
        "tags": [
          "Referrals"
        ],
        "summary": "List Referral Code Holders",
        "description": "Retrieves all the redeemables that have been assigned to the customer.\nTo use this endpoint, you must have the following permissions:\n- Read Customers (customers.details.read)",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterOrderListRedeemables"
            },
            "in": "query",
            "name": "order",
            "description": "Sorts the results using one of the filtering options, where the dash - preceding a sorting option means sorting in a descending order."
          },
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterString"
            },
            "in": "query",
            "name": "starting_after_id",
            "description": "A cursor for pagination. It retrieves the events starting after an event with the given ID."
          },
          {
            "name": "filters",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ParameterFiltersListReferralsRedeemableHolders"
            },
            "description": "Filters for listing customer redeemables.",
            "style": "deepObject",
            "explode": true
          }
        ],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns the holders of the redeemable that is assigned to the referral campaign.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReferralsMembersHoldersListResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "object": "list",
                      "data_ref": "data",
                      "data": [
                        {
                          "id": "rh_0e7213a6bc407b8639",
                          "created_at": "2024-03-15T09:08:50.529Z",
                          "redeemable_id": "v_jFVcN1f5ofg707z2G3GYWtMyKJ4usss4",
                          "redeemable_object": "voucher",
                          "campaign_id": "camp_td1gcD4feTAjUKQYfg40kWhN",
                          "campaign_type": "REFERRAL_PROGRAM",
                          "voucher_type": "DISCOUNT_VOUCHER",
                          "customer_id": "cust_XDwHXVBSZZAJgjpHvrgUHx3J",
                          "holder_role": "REFERRER",
                          "object": "redeemable_holder"
                        },
                        {
                          "id": "rh_0e6d0b84960f447f52",
                          "created_at": "2024-03-11T11:20:54.093Z",
                          "redeemable_id": "v_jFVcN1f5ofg707z2G3GYWtMyKJ4usss4",
                          "redeemable_object": "voucher",
                          "campaign_id": "camp_td1gcD4feTAjUKQYfg40kWhN",
                          "campaign_type": "REFERRAL_PROGRAM",
                          "voucher_type": "DISCOUNT_VOUCHER",
                          "customer_id": "cust_1B9wkAcSz5O1Y4Zn8JPfKQm6",
                          "holder_role": "REFEREE",
                          "object": "redeemable_holder"
                        }
                      ],
                      "total": 2,
                      "has_more": false
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/referrals/{campaignId}/members/{memberId}/holders/{holderId}": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterCampaignId"
          },
          "name": "campaignId",
          "in": "path",
          "required": true,
          "description": "Unique identifier of a referral program campaign."
        },
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterMemberId"
          },
          "name": "memberId",
          "in": "path",
          "required": true,
          "description": "Unique referral code or its identifier."
        },
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterRedeemableHolderId"
          },
          "name": "holderId",
          "in": "path",
          "required": true,
          "description": "Unique identifier of a redeemable holder."
        }
      ],
      "delete": {
        "operationId": "referrals-remove-holder-1",
        "tags": [
          "Referrals"
        ],
        "summary": "Remove Referral Card Holder",
        "description": "Removes the holder from a referral card. You can remove a referee only.\nTo use this endpoint, you must have the following permissions:\n- Create and modify Customers and Segments (customers.modify)\n- Publish Voucher (vouchers.publish)",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns no content if removal is successful."
          }
        }
      }
    },
    "/v1/referrals/members/{memberId}/holders": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterMemberId"
          },
          "name": "memberId",
          "in": "path",
          "required": true,
          "description": "Unique referral code or its identifier."
        }
      ],
      "post": {
        "operationId": "referrals-add-holders",
        "tags": [
          "Referrals"
        ],
        "summary": "Add Referral Code Holders",
        "description": "Adds new holders to a referral code as **referees**. The data sent in the request is upserted into the customer data.\nIf the request returns an error even for one customer, you have to resend the whole request. Customer data is upserted if the data for all customers is correct.\nTo use this endpoint, you must have the following permissions:\n- Create and modify Customers and Segments (customers.modify)\n- Publish Voucher (vouchers.publish)\n 👍\nTo add a holder as a referer, use the Create Publication endpoint.\n 📘 Alternative endpoint\nThis endpoint is an alternative to the Add Referral Code Holders endpoint. The URL was re-designed to retrieve the referral member holders without providing the campaignId as a path paremeter.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "requestBody": {
          "description": "Specify the customer data to be upserted as redeemable holders.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReferralsMembersHoldersCreateInBulkRequestBody"
              },
              "examples": {
                "Example": {
                  "value": {
                    "holders": [
                      {
                        "source_id": "cst-prsn01",
                        "name": "Alex Doe",
                        "email": "alex-doe@your.domain.com",
                        "country": "England"
                      },
                      {
                        "source_id": "cst-prsn02",
                        "name": "Alex Joe",
                        "email": "alex-joe@your.domain.com",
                        "country": "Wales"
                      }
                    ],
                    "metadata": {
                      "influencer_code": true
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "2XX": {
            "description": "Returns a list of redeemable holder objects.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReferralsMembersHoldersCreateInBulkResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "holders": [
                        {
                          "id": "rh_0f198761748966ffab",
                          "created_at": "2024-07-23T10:40:48.579Z",
                          "redeemable_id": "v_uOrG9tQresN9X51gbAoo0a2vY4MLV9lS",
                          "redeemable_object": "voucher",
                          "campaign_id": "camp_vVk4unz3k4gA023fk9XoSiTh",
                          "campaign_type": "REFERRAL_PROGRAM",
                          "voucher_type": "DISCOUNT_VOUCHER",
                          "customer_id": "cust_r8yoJtgAAF2pqU1yuICtk9bv",
                          "holder_role": "REFEREE",
                          "object": "redeemable_holder",
                          "metadata": {
                            "influencer_code": true
                          }
                        },
                        {
                          "id": "rh_0f198761748966ffac",
                          "created_at": "2024-07-23T10:40:48.579Z",
                          "redeemable_id": "v_uOrG9tQresN9X51gbAoo0a2vY4MLV9lS",
                          "redeemable_object": "voucher",
                          "campaign_id": "camp_vVk4unz3k4gA023fk9XoSiTh",
                          "campaign_type": "REFERRAL_PROGRAM",
                          "voucher_type": "DISCOUNT_VOUCHER",
                          "customer_id": "cust_uCLPtbQkQayw6t40O9IMPQzV",
                          "holder_role": "REFEREE",
                          "object": "redeemable_holder",
                          "metadata": {
                            "influencer_code": true
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "operationId": "referrals-code-holders-1",
        "tags": [
          "Referrals"
        ],
        "summary": "List Referral Code Holders",
        "description": "Retrieves the holders of the referral code from a referral campaign.\nTo use this endpoint, you must have the following permissions:\n- Read Customers (customers.details.read)\n 📘 Alternative endpoint\nThis endpoint is an alternative to the List Member Holders endpoint. The URL was re-designed to retrieve the referral member holders without providing the campaignId as a path paremeter.",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterOrderListRedeemables"
            },
            "in": "query",
            "name": "order",
            "description": "Sorts the results using one of the filtering options, where the dash - preceding a sorting option means sorting in a descending order."
          },
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterString"
            },
            "in": "query",
            "name": "starting_after_id",
            "description": "A cursor for pagination. It retrieves the events starting after an event with the given ID."
          },
          {
            "name": "filters",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ParameterFiltersListReferralsRedeemableHolders"
            },
            "description": "Filters for listing customer redeemables.",
            "style": "deepObject",
            "explode": true
          }
        ],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns the holders of the redeemable that is assigned to the referral campaign.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReferralsMembersHoldersListResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "object": "list",
                      "data_ref": "data",
                      "data": [
                        {
                          "id": "rh_0e7213a6bc407b8639",
                          "created_at": "2024-03-15T09:08:50.529Z",
                          "redeemable_id": "v_jFVcN1f5ofg707z2G3GYWtMyKJ4usss4",
                          "redeemable_object": "voucher",
                          "campaign_id": "camp_td1gcD4feTAjUKQYfg40kWhN",
                          "campaign_type": "REFERRAL_PROGRAM",
                          "voucher_type": "DISCOUNT_VOUCHER",
                          "customer_id": "cust_XDwHXVBSZZAJgjpHvrgUHx3J",
                          "holder_role": "REFERRER",
                          "object": "redeemable_holder"
                        },
                        {
                          "id": "rh_0e6d0b84960f447f52",
                          "created_at": "2024-03-11T11:20:54.093Z",
                          "redeemable_id": "v_jFVcN1f5ofg707z2G3GYWtMyKJ4usss4",
                          "redeemable_object": "voucher",
                          "campaign_id": "camp_td1gcD4feTAjUKQYfg40kWhN",
                          "campaign_type": null,
                          "voucher_type": "DISCOUNT_VOUCHER",
                          "customer_id": "cust_1B9wkAcSz5O1Y4Zn8JPfKQm6",
                          "holder_role": "OWNER",
                          "object": "redeemable_holder"
                        }
                      ],
                      "total": 2,
                      "has_more": false
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/referrals/members/{memberId}/holders/{holderId}": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterMemberId"
          },
          "name": "memberId",
          "in": "path",
          "required": true,
          "description": "Unique referral code or its identifier."
        },
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterRedeemableHolderId"
          },
          "name": "holderId",
          "in": "path",
          "required": true,
          "description": "Unique identifier of a redeemable holder."
        }
      ],
      "delete": {
        "operationId": "referrals-remove-holder",
        "tags": [
          "Referrals"
        ],
        "summary": "Remove Referral Card Holder",
        "description": "Removes the holder from a referral card. You can remove a referee only.\nTo use this endpoint, you must have the following permissions:\n- Create and modify Customers and Segments (customers.modify)\n- Publish Voucher (vouchers.publish)\n 📘 Alternative endpoint\nThis endpoint is an alternative to the Remove Referral Card Holder endpoint. The URL was re-designed to retrieve the referral member holders without providing the campaignId as a path paremeter.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns no content if removal is successful."
          }
        }
      }
    },
    "/v1/trash-bin": {
      "get": {
        "operationId": "list-bin-entries",
        "tags": [
          "Bin"
        ],
        "summary": "List Bin Entries",
        "description": "Retrieves a list of resources moved to the bin. The following resources can be moved to the bin:\n- campaigns\n- vouchers\n- products\n- SKUs\nTo use this endpoint, you must have the following permissions:\n- vouchers.read\n- campaigns.read\n- products.read",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterOrderListBin"
            },
            "in": "query",
            "name": "order",
            "description": "Orders the bin entries according to the bin entry ID. The dash - preceding a sorting option means sorting in a descending order."
          },
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterString"
            },
            "in": "query",
            "name": "starting_after_id",
            "description": "A cursor for pagination. It retrieves the results starting after a result with the given ID."
          },
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterFiltersListBin"
            },
            "in": "query",
            "name": "filters",
            "description": "Filters for listing bin entries.",
            "style": "deepObject",
            "explode": true
          }
        ],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns the list of all the bin entries matching the query parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrashBinListResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "object": "list",
                      "data_ref": "data",
                      "data": [
                        {
                          "id": "tbe_0eb6515f758ae37126",
                          "created_at": "2024-05-07T09:15:13.218Z",
                          "deleted_by_user_id": "user_JjB45t4Rpl4t1n0oMRlj6trzXKsh7FGX7",
                          "resource_id": "v_JPfnb5ChY1HdNnaMkA0ikra4gIg0dja6",
                          "resource_type": "voucher",
                          "resource_name": "Trash-Discount-123",
                          "resource_parent_id": "camp_ITQtKkrPOxL1a55uSU7tqbCL",
                          "object": "voucher"
                        },
                        {
                          "id": "tbe_0eb651ca7b8ae37184",
                          "created_at": "2024-05-07T09:17:02.827Z",
                          "deleted_by_user_id": "user_JjB45t4Rpl4t1n0oMRlj6trzXKsh7FGX7",
                          "resource_id": "sku_0eb651c09e0ae37178",
                          "resource_type": "sku",
                          "resource_name": "Trash container icy blue",
                          "resource_parent_id": "prod_0eb651c04395147085",
                          "object": "sku"
                        }
                      ],
                      "total": 2,
                      "has_more": true,
                      "more_starting_after": "tbe_0eb651ca7b8ae37184"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/trash-bin/{binEntryId}": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterBinEntryId"
          },
          "in": "path",
          "name": "binEntryId",
          "description": "Provide the unique identifier of the bin entry.",
          "required": true
        }
      ],
      "delete": {
        "operationId": "delete-bin-entry",
        "tags": [
          "Bin"
        ],
        "summary": "Delete Bin Entry",
        "description": "Deletes permanently a bin entry with a given ID.The following resources can be moved to the bin and permanently deleted:\n- campaigns\n- vouchers\n- products\n- SKUs\nTo use this endpoint and delete a given resource type, you must have the following permissions:\n- vouchers.delete to delete a voucher,\n- campaigns.delete to delete a campaign,\n- products.delete to delete a product or SKU.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns no content if deletion is successful."
          }
        }
      }
    },
    "/v1/templates/campaigns": {
      "get": {
        "operationId": "list-campaign-templates",
        "tags": [
          "Templates"
        ],
        "summary": "List Campaign Templates",
        "description": "Lists all campaign templates available in the project.\n 📘 Campaign Templates – Documentation\nRead the [Campaign Templates documentation](https://support.voucherify.io/article/620-campaign-templates) to learn more about this feature.",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterString"
            },
            "in": "query",
            "name": "starting_after_id",
            "description": "A cursor for pagination. It retrieves the campaign templates created after a template with the given ID."
          },
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterTemplatesList"
            },
            "in": "query",
            "name": "order",
            "description": "Sorts the results using one of the filtering options, where the dash - preceding a sorting option means sorting in a descending order."
          },
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterBoolean"
            },
            "in": "query",
            "name": "include_total",
            "description": "If set to true, the response returns the number of all campaign templates, regardless of the applied filters or limits. Set to false by default."
          },
          {
            "name": "filters",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ParameterFiltersListTemplates"
            },
            "description": "Filters for listing templates.",
            "style": "deepObject",
            "explode": true
          }
        ],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns a dictionary of campaign template objects. The templates are returned by creation date by default. The most recent objects appear last unless specified otherwise with the `order` parameter.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplatesCampaignsListResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "object": "list",
                      "data_ref": "campaign_templates",
                      "campaign_templates": [
                        {
                          "id": "camp_tpl_hFK6hpVc9WKsWaBv4mz7uZn8",
                          "name": "DISCOUNT-CAMPAIGN-TEMPLATE",
                          "description": "New discount for Q4",
                          "campaign_type": "DISCOUNT_COUPONS",
                          "created_at": "2024-06-21T13:03:09.431Z",
                          "object": "campaign_template"
                        },
                        {
                          "id": "camp_tpl_cR8va5Ga2nAi4Nxoi1I1qR8S",
                          "name": "GIFT-CAMPAIGN-TEMPLATE",
                          "campaign_type": "GIFT_VOUCHERS",
                          "created_at": "2024-07-05T14:26:31.600Z",
                          "updated_at": "2024-07-05T14:27:02.905Z",
                          "object": "campaign_template"
                        }
                      ],
                      "total": 14,
                      "has_more": true
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "create-campaign-template",
        "tags": [
          "Templates"
        ],
        "summary": "Create Campaign Template",
        "description": "Creates a template for a discount or gift campaign, or a promotion tier.\nA template stores campaign configuration **without** the following details:\n- Campaign name\n- Category\n- Code count\nThe following elements are not supported by campaign templates:\n- Redeeming API keys\n- Redeeming users\n- Customer loyalty tier\n- Static segments\n 👍 Promotion Tiers and Campaign Templates\nYou can create a campaign template out of a promotion tier. Promotion tiers are converted to a discount campaign with the DISCOUNT_COUPON type. You can use this template to create:\n- Discount campaign,\n- Promotion tier.\n 📘 Campaign Templates – Documentation\nRead the [Campaign Templates documentation](https://support.voucherify.io/article/620-campaign-templates) to learn more about this feature.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "requestBody": {
          "description": "Provide details for a campaign template",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TemplatesCampaignsCreateRequestBody"
              }
            }
          }
        },
        "responses": {
          "2XX": {
            "description": "Returns the details of a created campaign template.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplatesCampaignsCreateTemplateResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "id": "camp_tpl_0f887664cfe19f2162",
                      "name": "Template Halloween Campaigns",
                      "description": "Reuse every October",
                      "campaign_type": "DISCOUNT_COUPONS",
                      "created_at": "2024-10-17T14:37:59.488Z",
                      "object": "campaign_template"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/templates/campaigns/{campaignTemplateId}": {
      "parameters": [
        {
          "in": "path",
          "name": "campaignTemplateId",
          "description": "Pass the campaign template ID that was assigned by Voucherify.",
          "schema": {
            "$ref": "#/components/schemas/ParameterCampaignTemplateId"
          },
          "required": true
        }
      ],
      "get": {
        "operationId": "get-campaign-template",
        "tags": [
          "Templates"
        ],
        "summary": "Get Campaign Template",
        "description": "Retrieves a campaign template available in the project.\n 📘 Campaign Templates – Documentation\nRead the [Campaign Templates documentation](https://support.voucherify.io/article/620-campaign-templates) to learn more about this feature.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns the details about a campaign template.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplatesCampaignsGetResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "id": "camp_tpl_zLtn2H9fgcG3NwO7t4PAfHcq",
                      "name": "Happy Hours Template",
                      "description": "Template for a Happy Hours campaign with discount coupons.",
                      "campaign_type": "DISCOUNT_COUPONS",
                      "created_at": "2019-09-09T09:09:09.009Z",
                      "object": "campaign_template"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "update-campaign-template",
        "tags": [
          "Templates"
        ],
        "summary": "Update Campaign Template",
        "description": "Updates the name or description of the campaign template.\n 📘 Campaign Templates – Documentation\nRead the [Campaign Templates documentation](https://support.voucherify.io/article/620-campaign-templates) to learn more about this feature.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "requestBody": {
          "description": "Provide the new name or description for the campaign template",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TemplatesCampaignsUpdateRequestBody"
              }
            }
          }
        },
        "responses": {
          "2XX": {
            "description": "Returns the details of an updated campaign template.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplatesCampaignsUpdateResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "id": "camp_tpl_zLtn2H9fgcG3NwO7t4PAfHcq",
                      "name": "Happy Hours Winter Template",
                      "description": "Template for a Happy Hours campaign with discount coupons for the winter season.",
                      "campaign_type": "DISCOUNT_COUPONS",
                      "created_at": "2019-09-09T09:09:09.009Z",
                      "updated_at": "2019-09-09T19:09:09.009Z",
                      "object": "campaign_template"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "delete-campaign-template",
        "tags": [
          "Templates"
        ],
        "summary": "Delete Campaign Template",
        "description": "Deletes the campaign template permanently.\n 📘 Campaign Templates – Documentation\nRead the [Campaign Templates documentation](https://support.voucherify.io/article/620-campaign-templates) to learn more about this feature.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns no content if deletion is successful."
          }
        }
      }
    },
    "/v1/templates/campaigns/{campaignTemplateId}/campaign-setup": {
      "parameters": [
        {
          "in": "path",
          "name": "campaignTemplateId",
          "description": "Pass the campaign template ID that was assigned by Voucherify.",
          "schema": {
            "$ref": "#/components/schemas/ParameterCampaignTemplateId"
          },
          "required": true
        }
      ],
      "post": {
        "operationId": "create-campaign-from-template",
        "tags": [
          "Templates"
        ],
        "summary": "Create Campaign From Template",
        "description": "Creates a campaign out of a campaign template.\nTo create a campaign, you need to provide the name in the request, while other fields are optional. If no other fields are sent, the configuration from the template will be used.\nYou can send new values of the fields listed below to replace the settings saved in the template. However, you cannot assign an existing validation rule or create a new one in the request. If the template has a validation rule, a new validation rule is always created for the campaign. When the campaign has been created, then you can:\n- Update the validation rule,\n- Unassign the validation rule,\n- Assign an existing validation rule.\n 👍 Promotion Tiers and Campaign Templates\nYou can create a campaign template out of a promotion tier. Promotion tiers are converted to a discount campaign with the DISCOUNT_COUPON type. You can use this template to create:\n- Discount campaign\n- Promotion tier\n 📘 Campaign Templates – Documentation\nRead the [Campaign Templates documentation](https://support.voucherify.io/article/620-campaign-templates) to learn more about this feature.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "requestBody": {
          "description": "Only name is required. The rest of the fields will overwrite the template configuration.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TemplatesCampaignsCampaignSetupCreateRequestBody"
              },
              "examples": {
                "Example": {
                  "value": {
                    "name": "Campaign-out-of-template",
                    "description": "Created out of a template",
                    "auto_join": true,
                    "join_once": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "2XX": {
            "description": "Returns the details about the created campaign and about the resources that have been created out of the template and added to the project.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplatesCampaignsCampaignSetupCreateResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "created_resources": [
                        {
                          "id": "val_3LBFw25WTmAK",
                          "object": "validation_rules"
                        }
                      ],
                      "campaign": {
                        "id": "camp_txDwyDPeLvBEq490bfV2nLwo",
                        "name": "Campaign-out-of-template",
                        "campaign_type": "DISCOUNT_COUPONS",
                        "type": "AUTO_UPDATE",
                        "is_referral_code": false,
                        "voucher": {
                          "type": "DISCOUNT_VOUCHER",
                          "discount": {
                            "type": "AMOUNT",
                            "amount_off": 2500,
                            "aggregated_amount_limit": 25000,
                            "units": null,
                            "effect": "APPLY_TO_ITEMS"
                          },
                          "gift": null,
                          "loyalty_card": null,
                          "redemption": {
                            "quantity": 4,
                            "redeemed_quantity": 0
                          },
                          "code_config": {
                            "pattern": "##",
                            "length": 2,
                            "charset": "xD",
                            "prefix": "U-",
                            "postfix": "-WOT"
                          }
                        },
                        "auto_join": true,
                        "join_once": true,
                        "use_voucher_metadata_schema": true,
                        "description": "Winter 2024-25",
                        "start_date": null,
                        "expiration_date": null,
                        "validity_timeframe": null,
                        "validity_hours": null,
                        "validity_day_of_week": null,
                        "activity_duration_after_publishing": null,
                        "vouchers_count_invalid": null,
                        "vouchers_count": 0,
                        "active": true,
                        "metadata": null,
                        "created_at": "2024-09-26T17:14:56.226Z",
                        "updated_at": null,
                        "category": null,
                        "creation_status": "DONE",
                        "protected": false,
                        "validation_rules_assignments": {
                          "data": [
                            {
                              "id": "asgm_BLgJYmo64rnAK5eB",
                              "rule_id": "val_3LBFw25WTmAK",
                              "related_object_id": "camp_txDwyDPeLvBEq490bfV2nLwo",
                              "related_object_type": "campaign",
                              "created_at": "2024-09-26T17:14:56.226Z",
                              "object": "validation_rules_assignment"
                            }
                          ],
                          "total": 1
                        },
                        "object": "campaign",
                        "deleted": false,
                        "deleted_at": null,
                        "category_id": null,
                        "voucher_type": "DISCOUNT_VOUCHER",
                        "discount": {
                          "type": "AMOUNT",
                          "amount_off": 2500,
                          "aggregated_amount_limit": 25000,
                          "units": null,
                          "effect": "APPLY_TO_ITEMS"
                        },
                        "gift": null,
                        "loyalty_card": null,
                        "voucher_code_config": {
                          "pattern": "##",
                          "length": 2,
                          "charset": "xD",
                          "prefix": "Your-",
                          "postfix": "-Voucher"
                        },
                        "default_voucher_redemption": {
                          "quantity": 4
                        }
                      },
                      "object": "campaign_setup"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/templates/campaigns/{campaignTemplateId}/tier-setup": {
      "parameters": [
        {
          "in": "path",
          "name": "campaignTemplateId",
          "description": "Pass the campaign template ID that was assigned by Voucherify.",
          "schema": {
            "$ref": "#/components/schemas/ParameterCampaignTemplateId"
          },
          "required": true
        }
      ],
      "post": {
        "operationId": "add-tier-from-template",
        "tags": [
          "Templates"
        ],
        "summary": "Add Promotion Tier From Template",
        "description": "Creates a promotion tier out of a discount campaign template and adds it to an existing promotion campaign.\nTo add a promotion tier to a campaign, you need to provide the name in the request and the campaign ID. Other fields are optional. If no other fields are sent, the configuration from the template will be used.\nYou can send new values of the fields listed below to replace the settings saved in the template. However, you cannot assign an action or an existing validation rule or create a new one in the request. If the template has a validation rule, a new validation rule is always created for the promotion tier. When the promotion tier has been created, then you can:\n- Update the validation rule,\n- Unassign the validation rule,\n- Assign an existing validation rule.\n 👍 Promotion Tiers and Campaign Templates\nYou can create a campaign template out of a promotion tier. Promotion tiers are converted to a discount campaign with the DISCOUNT_COUPON type. You can use this template to create:\n- Discount campaign\n- Promotion tier\n 📘 Campaign Templates – Documentation\nRead the [Campaign Templates documentation](https://support.voucherify.io/article/620-campaign-templates) to learn more about this feature.",
        "parameters": [],
        "security": [
          {
            "X-App-Id": [],
            "X-App-Token": []
          }
        ],
        "requestBody": {
          "description": "Only name and campaign_id are required. The rest of the fields will overwrite the template configuration.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TemplatesCampaignsTierSetupCreateRequestBody"
              }
            }
          }
        },
        "responses": {
          "2XX": {
            "description": "Returns the details about the added promotion tier and about the resources that have been created out of the template and added to the project.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplatesCampaignsTierSetupCreateResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "created_resources": [
                        {
                          "id": "val_Z2QPKZhfIlW1",
                          "object": "validation_rules"
                        }
                      ],
                      "promotion_tier": {
                        "id": "promo_FHRjE8g5Cu2C1C5voqjijl5I",
                        "created_at": "2024-10-07T14:40:20.125Z",
                        "name": "metadata-test-template-02",
                        "banner": null,
                        "action": {
                          "discount": {
                            "type": "AMOUNT",
                            "amount_off": 300,
                            "aggregated_amount_limit": 900,
                            "units": null,
                            "effect": "APPLY_TO_ITEMS"
                          }
                        },
                        "metadata": {},
                        "hierarchy": 9,
                        "campaign": {
                          "id": "camp_1oOwcEGaNELf8G5sVN77z0ou",
                          "start_date": null,
                          "expiration_date": null,
                          "active": true,
                          "object": "campaign",
                          "name": "Promotion request test",
                          "created_at": "2024-07-26T11:00:51.278Z",
                          "campaign_type": "PROMOTION",
                          "category_id": "cat_0d75bdfe4c9030a732",
                          "categories": []
                        },
                        "campaign_id": "camp_1oOwcEGaNELf8G5sVN77z0ou",
                        "summary": {
                          "redemptions": {
                            "total_redeemed": 0
                          },
                          "orders": {
                            "total_amount": 0,
                            "total_discount_amount": 0
                          }
                        },
                        "active": true,
                        "validity_day_of_week": null,
                        "category_id": null,
                        "categories": [],
                        "object": "promotion_tier",
                        "validation_rules_assignments": [
                          {
                            "id": "asgm_n1ILxyVhKjyACbVL",
                            "rule_id": "val_Z2QPKZhfIlW1",
                            "related_object_id": "promo_FHRjE8g5Cu2C1C5voqjijl5I",
                            "related_object_type": "promotion_tier",
                            "created_at": "2024-10-07T14:40:20.125Z",
                            "object": "validation_rules_assignment"
                          }
                        ]
                      },
                      "object": "promotion_tier_setup"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/management/v1/projects": {
      "post": {
        "operationId": "create-project",
        "tags": [
          "Management"
        ],
        "summary": "Create Project",
        "description": "Creates a new project. You can add users, specify the cluster, timezone, currency, and other details.\nAll owners are added to the project by default.",
        "parameters": [],
        "security": [
          {
            "X-Management-Id": [],
            "X-Management-Token": []
          }
        ],
        "requestBody": {
          "description": "Define project details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ManagementProjectsCreateRequestBody"
              }
            }
          }
        },
        "responses": {
          "2XX": {
            "description": "Returns the details of a created project.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManagementProjectsCreateResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "id": "proj_V0uCh3RiFy",
                      "name": "Voucherify Team Project",
                      "currency": "EUR",
                      "timezone": "UTC",
                      "cluster_id": "eu1",
                      "api_version": "v2018-08-01",
                      "case_sensitive_codes": true,
                      "client_trusted_domains": [],
                      "client_redeem_enabled": false,
                      "client_publish_enabled": false,
                      "client_list_vouchers_enabled": false,
                      "client_create_customer_enabled": false,
                      "client_loyalty_events_enabled": false,
                      "client_set_voucher_expiration_date_enabled": false,
                      "api_usage_notifications": {
                        "messages": {
                          "value": 80,
                          "emails": [
                            "your.email@your.domain"
                          ],
                          "in_app": true,
                          "enabled": true
                        },
                        "api_calls": {
                          "value": 80,
                          "emails": [
                            "your.email@your.domain"
                          ],
                          "in_app": true,
                          "enabled": true
                        },
                        "cycle_calls": {
                          "value": 80,
                          "emails": [
                            "your.email@your.domain"
                          ],
                          "in_app": true,
                          "enabled": true
                        },
                        "redemptions": {
                          "value": 80,
                          "emails": [],
                          "in_app": false,
                          "enabled": false
                        },
                        "webhook_calls": {
                          "value": 80,
                          "emails": [
                            "your.email@your.domain"
                          ],
                          "in_app": true,
                          "enabled": true
                        },
                        "bulk_api_calls": {
                          "value": 80,
                          "emails": [
                            "your.email@your.domain"
                          ],
                          "in_app": true,
                          "enabled": true
                        }
                      },
                      "webhooks_callout_notifications": {
                        "webhooks": {
                          "email": true,
                          "emails": [
                            "your.email@your.domain"
                          ],
                          "in_app": true
                        },
                        "distributions": {
                          "email": true,
                          "emails": [
                            "your.email@your.domain"
                          ],
                          "in_app": true
                        }
                      },
                      "is_sandbox": false,
                      "webhook_version": "v2024-01-01"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "operationId": "list-projects",
        "tags": [
          "Management"
        ],
        "summary": "List Projects",
        "description": "Lists all projects for the organization.\nThe endpoint does not require any query parameters.",
        "parameters": [],
        "security": [
          {
            "X-Management-Id": [],
            "X-Management-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns the list of all projects with their details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManagementProjectsListResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "object": "list",
                      "data_ref": "data",
                      "data": [
                        {
                          "id": "proj_TrlkLiH4",
                          "name": "Test-project-01",
                          "currency": "EUR",
                          "timezone": "UTC",
                          "cluster_id": "dev",
                          "api_version": "v2018-08-01",
                          "case_sensitive_codes": true,
                          "client_trusted_domains": [],
                          "client_redeem_enabled": false,
                          "client_publish_enabled": false,
                          "client_list_vouchers_enabled": false,
                          "client_create_customer_enabled": false,
                          "client_loyalty_events_enabled": false,
                          "client_set_voucher_expiration_date_enabled": false,
                          "api_usage_notifications": {
                            "messages": {
                              "value": 80,
                              "emails": [
                                "your-email@domain.com"
                              ],
                              "in_app": true,
                              "enabled": true
                            },
                            "api_calls": {
                              "value": 80,
                              "emails": [
                                "your-email@domain.com"
                              ],
                              "in_app": true,
                              "enabled": true
                            },
                            "cycle_calls": {
                              "value": 80,
                              "emails": [
                                "your-email@domain.com"
                              ],
                              "in_app": true,
                              "enabled": true
                            },
                            "redemptions": {
                              "value": 80,
                              "emails": [],
                              "in_app": false,
                              "enabled": false
                            },
                            "webhook_calls": {
                              "value": 80,
                              "emails": [
                                "your-email@domain.com"
                              ],
                              "in_app": true,
                              "enabled": true
                            },
                            "bulk_api_calls": {
                              "value": 80,
                              "emails": [
                                "your-email@domain.com"
                              ],
                              "in_app": true,
                              "enabled": true
                            }
                          },
                          "webhooks_callout_notifications": {
                            "webhooks": {
                              "email": true,
                              "emails": [
                                "your-email@domain.com"
                              ],
                              "in_app": true
                            },
                            "distributions": {
                              "email": true,
                              "emails": [
                                "your-email@domain.com"
                              ],
                              "in_app": true
                            }
                          },
                          "is_sandbox": false,
                          "webhook_version": "v2024-01-01"
                        },
                        {
                          "id": "proj_yTNl0NT6",
                          "name": "Test-project-01",
                          "currency": "EUR",
                          "timezone": "UTC",
                          "cluster_id": "dev",
                          "api_version": "v2018-08-01",
                          "case_sensitive_codes": true,
                          "client_trusted_domains": [],
                          "client_redeem_enabled": false,
                          "client_publish_enabled": false,
                          "client_list_vouchers_enabled": false,
                          "client_create_customer_enabled": false,
                          "client_loyalty_events_enabled": false,
                          "client_set_voucher_expiration_date_enabled": false,
                          "api_usage_notifications": {
                            "messages": {
                              "value": 80,
                              "emails": [
                                "your-email@domain.com"
                              ],
                              "in_app": true,
                              "enabled": true
                            },
                            "api_calls": {
                              "value": 80,
                              "emails": [
                                "your-email@domain.com"
                              ],
                              "in_app": true,
                              "enabled": true
                            },
                            "cycle_calls": {
                              "value": 80,
                              "emails": [
                                "your-email@domain.com"
                              ],
                              "in_app": true,
                              "enabled": true
                            },
                            "redemptions": {
                              "value": 80,
                              "emails": [],
                              "in_app": false,
                              "enabled": false
                            },
                            "webhook_calls": {
                              "value": 80,
                              "emails": [
                                "your-email@domain.com"
                              ],
                              "in_app": true,
                              "enabled": true
                            },
                            "bulk_api_calls": {
                              "value": 80,
                              "emails": [
                                "your-email@domain.com"
                              ],
                              "in_app": true,
                              "enabled": true
                            }
                          },
                          "webhooks_callout_notifications": {
                            "webhooks": {
                              "email": true,
                              "emails": [
                                "your-email@domain.com"
                              ],
                              "in_app": true
                            },
                            "distributions": {
                              "email": true,
                              "emails": [
                                "your-email@domain.com"
                              ],
                              "in_app": true
                            }
                          },
                          "is_sandbox": false,
                          "webhook_version": "v2024-01-01"
                        },
                        {
                          "id": "sand_CvFGa2LX",
                          "name": "Sandbox Project",
                          "currency": "EUR",
                          "timezone": "Europe/Vienna",
                          "cluster_id": "eu1",
                          "api_version": "v2018-08-01",
                          "description": "",
                          "case_sensitive_codes": true,
                          "client_trusted_domains": [],
                          "client_redeem_enabled": false,
                          "client_publish_enabled": false,
                          "client_list_vouchers_enabled": false,
                          "client_create_customer_enabled": false,
                          "client_loyalty_events_enabled": false,
                          "client_set_voucher_expiration_date_enabled": false,
                          "api_usage_notifications": {
                            "messages": {
                              "value": 80,
                              "emails": [],
                              "in_app": false,
                              "enabled": false
                            },
                            "api_calls": {
                              "value": 80,
                              "emails": [
                                "your-email@domain.com"
                              ],
                              "in_app": true,
                              "enabled": true
                            },
                            "cycle_calls": {
                              "value": 80,
                              "emails": [
                                "your-email@domain.com"
                              ],
                              "in_app": true,
                              "enabled": true
                            },
                            "redemptions": {
                              "value": 80,
                              "emails": [],
                              "in_app": false,
                              "enabled": false
                            },
                            "webhook_calls": {
                              "value": 80,
                              "emails": [
                                "your-email@domain.com"
                              ],
                              "in_app": true,
                              "enabled": true
                            },
                            "bulk_api_calls": {
                              "value": 80,
                              "emails": [
                                "your-email@domain.com"
                              ],
                              "in_app": true,
                              "enabled": true
                            }
                          },
                          "webhooks_callout_notifications": {
                            "webhooks": {
                              "email": true,
                              "emails": [
                                "your-email@domain.com"
                              ],
                              "in_app": true
                            },
                            "distributions": {
                              "email": true,
                              "emails": [
                                "your-email@domain.com"
                              ],
                              "in_app": true
                            }
                          },
                          "is_sandbox": true,
                          "limits": {
                            "api_calls": [
                              {
                                "value": 100,
                                "duration": "PT1H"
                              }
                            ],
                            "bulk_api_calls": [
                              {
                                "value": 1,
                                "duration": "PT1H"
                              }
                            ]
                          },
                          "default_code_config": {
                            "charset": "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"
                          },
                          "webhook_version": "v2024-01-01"
                        }
                      ],
                      "total": 2
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/management/v1/projects/{projectId}": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterProjectId"
          },
          "in": "path",
          "name": "projectId",
          "description": "Provide the unique identifier of the project.",
          "required": true
        }
      ],
      "get": {
        "operationId": "get-project",
        "tags": [
          "Management"
        ],
        "summary": "Get Project",
        "description": "Retrieves an existing project.",
        "parameters": [],
        "security": [
          {
            "X-Management-Id": [],
            "X-Management-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns the details of a project.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManagementProjectsGetResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "id": "proj_V0uCh3RiFy",
                      "name": "Voucherify Team Project",
                      "currency": "EUR",
                      "timezone": "Etc/GMT+1",
                      "cluster_id": "eu1",
                      "api_version": "v2018-08-01",
                      "description": "Project for testing.",
                      "case_sensitive_codes": true,
                      "client_trusted_domains": [],
                      "client_redeem_enabled": false,
                      "client_publish_enabled": false,
                      "client_list_vouchers_enabled": false,
                      "client_create_customer_enabled": false,
                      "client_loyalty_events_enabled": false,
                      "client_set_voucher_expiration_date_enabled": false,
                      "api_usage_notifications": {
                        "messages": {
                          "value": 80,
                          "emails": [],
                          "in_app": false,
                          "enabled": false
                        },
                        "api_calls": {
                          "value": 80,
                          "emails": [
                            "your.email@your.domain"
                          ],
                          "in_app": true,
                          "enabled": true
                        },
                        "cycle_calls": {
                          "value": 80,
                          "emails": [
                            "your.email@your.domain"
                          ],
                          "in_app": true,
                          "enabled": true
                        },
                        "redemptions": {
                          "value": 80,
                          "emails": [],
                          "in_app": false,
                          "enabled": false
                        },
                        "webhook_calls": {
                          "value": 80,
                          "emails": [
                            "your.email@your.domain"
                          ],
                          "in_app": true,
                          "enabled": true
                        },
                        "bulk_api_calls": {
                          "value": 80,
                          "emails": [
                            "your.email@your.domain"
                          ],
                          "in_app": true,
                          "enabled": true
                        }
                      },
                      "webhooks_callout_notifications": {
                        "webhooks": {
                          "email": true,
                          "emails": [
                            "your.email@your.domain"
                          ],
                          "in_app": true
                        },
                        "distributions": {
                          "email": true,
                          "emails": [
                            "your.email@your.domain"
                          ],
                          "in_app": true
                        }
                      },
                      "is_sandbox": false,
                      "default_code_config": {
                        "charset": "0123456789"
                      },
                      "webhook_version": "v2024-01-01"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "update-project",
        "tags": [
          "Management"
        ],
        "summary": "Update Project",
        "description": "Updates an existing project.\nYou can add or modify settings for timezone, currency, notifications, and other details.\nOnly the fields sent in the request will be updated.",
        "parameters": [],
        "security": [
          {
            "X-Management-Id": [],
            "X-Management-Token": []
          }
        ],
        "requestBody": {
          "description": "Define the project details to be updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ManagementProjectsUpdateRequestBody"
              }
            }
          }
        },
        "responses": {
          "2XX": {
            "description": "Returns the details of an updated project.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManagementProjectsUpdateResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "id": "proj_V0uCh3RiFy",
                      "name": "Voucherify Team Project",
                      "currency": "EUR",
                      "timezone": "Etc/GMT+1",
                      "cluster_id": "eu1",
                      "api_version": "v2018-08-01",
                      "description": "Project for testing.",
                      "case_sensitive_codes": true,
                      "client_trusted_domains": [],
                      "client_redeem_enabled": false,
                      "client_publish_enabled": false,
                      "client_list_vouchers_enabled": false,
                      "client_create_customer_enabled": false,
                      "client_loyalty_events_enabled": false,
                      "client_set_voucher_expiration_date_enabled": false,
                      "api_usage_notifications": {
                        "messages": {
                          "value": 80,
                          "emails": [],
                          "in_app": false,
                          "enabled": false
                        },
                        "api_calls": {
                          "value": 80,
                          "emails": [
                            "your.email@your.domain"
                          ],
                          "in_app": true,
                          "enabled": true
                        },
                        "cycle_calls": {
                          "value": 80,
                          "emails": [
                            "your.email@your.domain"
                          ],
                          "in_app": true,
                          "enabled": true
                        },
                        "redemptions": {
                          "value": 80,
                          "emails": [],
                          "in_app": false,
                          "enabled": false
                        },
                        "webhook_calls": {
                          "value": 80,
                          "emails": [
                            "your.email@your.domain"
                          ],
                          "in_app": true,
                          "enabled": true
                        },
                        "bulk_api_calls": {
                          "value": 80,
                          "emails": [
                            "your.email@your.domain"
                          ],
                          "in_app": true,
                          "enabled": true
                        }
                      },
                      "webhooks_callout_notifications": {
                        "webhooks": {
                          "email": true,
                          "emails": [
                            "your.email@your.domain"
                          ],
                          "in_app": true
                        },
                        "distributions": {
                          "email": true,
                          "emails": [
                            "your.email@your.domain"
                          ],
                          "in_app": true
                        }
                      },
                      "is_sandbox": false,
                      "default_code_config": {
                        "charset": "0123456789"
                      },
                      "webhook_version": "v2024-01-01"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "delete-project",
        "tags": [
          "Management"
        ],
        "summary": "Delete Project",
        "description": "Deletes an existing project.\nThe users currently using the deleted project will be automatically logged out.\n 🚧 Sandbox Project\nThe sandbox project cannot be deleted.",
        "parameters": [],
        "security": [
          {
            "X-Management-Id": [],
            "X-Management-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns no content if deletion is successful."
          }
        }
      }
    },
    "/management/v1/projects/{projectId}/users": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterProjectId"
          },
          "in": "path",
          "name": "projectId",
          "description": "Provide the unique identifier of the project.",
          "required": true
        }
      ],
      "post": {
        "operationId": "assign-user",
        "tags": [
          "Management"
        ],
        "summary": "Assign User",
        "description": "Assigns a user to a given project. The user must be an existing user in Voucherify.\n 🚧 Correct Use of Data\nTo avoid errors, use the role key with either id or login keys.",
        "parameters": [],
        "security": [
          {
            "X-Management-Id": [],
            "X-Management-Token": []
          }
        ],
        "requestBody": {
          "description": "Defines the user details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ManagementProjectsUsersAssignRequestBody"
              }
            }
          }
        },
        "responses": {
          "2XX": {
            "description": "Returns the details about the user assigned to the project.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManagementProjectsUsersAssignResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "id": "user_FgEAjOV6RiObJdy36sYynXdqZNiA5gjM",
                      "login": "name@youremaildomain.com",
                      "email": "name@youremaildomain.com",
                      "first_name": "Sammy",
                      "last_name": "Jones",
                      "projects": {
                        "proj_9KeAhZB1": "USER",
                        "proj_npnFzPr9": "USER",
                        "proj_pEP3NO9s": "USER",
                        "proj_zsPdrUIw": "ADMIN"
                      },
                      "is_owner": false
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "operationId": "list-users",
        "tags": [
          "Management"
        ],
        "summary": "List Users",
        "description": "Lists all users assigned to the project.",
        "parameters": [],
        "security": [
          {
            "X-Management-Id": [],
            "X-Management-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns the list of all the users assigned to the project.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManagementProjectsUsersListResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "object": "list",
                      "data_ref": "data",
                      "data": [
                        {
                          "id": "user_FgEAjOw6riObJdy81s2yZXdqZNiAV1pM",
                          "login": "name@youremaildomain.com",
                          "email": "name@youremaildomain.com",
                          "first_name": "Sammy",
                          "last_name": "Jones",
                          "projects": {
                            "proj_9KeAhZB1": "USER",
                            "proj_npnFzPr9": "USER",
                            "proj_pEP3NO9s": "USER",
                            "proj_zsPdrUIw": "ADMIN"
                          },
                          "is_owner": false
                        },
                        {
                          "id": "user_11sYvPrOj3XE573FO1cAzzk1p4k92wLL",
                          "login": "name@youremaildomain.com",
                          "email": "name@youremaildomain.com",
                          "first_name": "Alex",
                          "last_name": "Smith",
                          "projects": {
                            "proj_3CNHbOe0": "ADMIN"
                          },
                          "is_owner": true
                        }
                      ],
                      "total": 2
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/management/v1/projects/{projectId}/users/{userId}": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterProjectId"
          },
          "in": "path",
          "name": "projectId",
          "description": "Provide the unique identifier of the project.",
          "required": true
        },
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterUserId"
          },
          "in": "path",
          "name": "userId",
          "description": "Provide the unique identifier of the user. Alternatively, provide the users login.",
          "required": true
        }
      ],
      "get": {
        "operationId": "get-user",
        "tags": [
          "Management"
        ],
        "summary": "Get User",
        "description": "Retrieves the project users details.",
        "parameters": [],
        "security": [
          {
            "X-Management-Id": [],
            "X-Management-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns the project user's details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManagementProjectsUsersGetUserResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "id": "user_FgEAjOV6RiObJdy36sYynXdqZNiA5gjM",
                      "login": "name@youremaildomain.com",
                      "email": "name@youremaildomain.com",
                      "first_name": "Sammy",
                      "last_name": "Jones",
                      "projects": {
                        "proj_9KeAhZB1": "USER",
                        "proj_npnFzPr9": "USER",
                        "proj_pEP3NO9s": "USER",
                        "proj_zsPdrUIw": "ADMIN"
                      },
                      "is_owner": false
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "update-user",
        "tags": [
          "Management"
        ],
        "summary": "Update User",
        "description": "Updates the users role.",
        "parameters": [],
        "security": [
          {
            "X-Management-Id": [],
            "X-Management-Token": []
          }
        ],
        "requestBody": {
          "description": "Defines the users new role.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ManagementProjectsUsersUpdateRoleRequestBody"
              }
            }
          }
        },
        "responses": {
          "2XX": {
            "description": "Returns the details about the user assigned to the project.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManagementProjectsUsersUpdateRoleResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "id": "user_FgEAjOV6RiObJdy36sYynXdqZNiA5gjM",
                      "login": "name@youremaildomain.com",
                      "email": "name@youremaildomain.com",
                      "first_name": "Sammy",
                      "last_name": "Jones",
                      "projects": {
                        "proj_9KeAhZB1": "USER",
                        "proj_npnFzPr9": "USER",
                        "proj_pEP3NO9s": "USER",
                        "proj_zsPdrUIw": "ADMIN"
                      },
                      "is_owner": false
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "unassign-user",
        "tags": [
          "Management"
        ],
        "summary": "Unassign User",
        "description": "Unassigns the user from the project. If the user is currently logged in, they are automatically logged out. If the user is assigned to only one project, they cannot be unassigned from that project.",
        "parameters": [],
        "security": [
          {
            "X-Management-Id": [],
            "X-Management-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns no content if the user has been successfully unnassigned."
          }
        }
      }
    },
    "/management/v1/projects/users/invite": {
      "parameters": [],
      "post": {
        "operationId": "invite-user",
        "tags": [
          "Management"
        ],
        "summary": "Invite a New User",
        "description": "Sends an invitation to an email address that has not been used yet as a Voucherify user login.\nYou can specify the projects to which the invited user will be assigned and define their roles.",
        "parameters": [],
        "security": [
          {
            "X-Management-Id": [],
            "X-Management-Token": []
          }
        ],
        "requestBody": {
          "description": "Defines the details of the invitation, the project, and roles to which the user will be assigned.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ManagementProjectsUsersInviteCreateRequestBody"
              }
            }
          }
        },
        "responses": {
          "2XX": {
            "description": "Returns no content if the invitation has been sent successfully."
          }
        }
      }
    },
    "/management/v1/projects/{projectId}/templates/campaigns": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterProjectId"
          },
          "in": "path",
          "name": "projectId",
          "description": "Provide the unique identifier of the project.",
          "required": true
        }
      ],
      "get": {
        "operationId": "management-list-campaign-templates",
        "tags": [
          "Management"
        ],
        "summary": "List Campaign Templates",
        "description": "Lists all campaign templates available in the project.\n 👍 List Campaign Templates\n This endpoint works in the same way as the List Campaign Templates endpoint.\n 📘 Campaign Templates – Documentation\nRead the [Campaign Templates documentation](https://support.voucherify.io/article/620-campaign-templates) to learn more about this feature.",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterString"
            },
            "in": "query",
            "name": "starting_after_id",
            "description": "A cursor for pagination. It retrieves the campaign templates created after a template with the given ID."
          },
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterTemplatesList"
            },
            "in": "query",
            "name": "order",
            "description": "Sorts the results using one of the filtering options, where the dash - preceding a sorting option means sorting in a descending order."
          },
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterBoolean"
            },
            "in": "query",
            "name": "include_total",
            "description": "If set to true, the response returns the number of all campaign templates, regardless of the applied filters or limits. Set to false by default."
          },
          {
            "name": "filters",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ParameterFiltersListTemplates"
            },
            "description": "Filters for listing templates.",
            "style": "deepObject",
            "explode": true
          }
        ],
        "security": [
          {
            "X-Management-Id": [],
            "X-Management-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns a dictionary of campaign template objects. The templates are returned by creation date by default. The most recent objects appear last unless specified otherwise with the `order` parameter.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManagementProjectsTemplatesCampaignsListResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "object": "list",
                      "data_ref": "campaign_templates",
                      "campaign_templates": [
                        {
                          "id": "camp_tpl_hFK6hpVc9WKsWaBv4mz7uZn8",
                          "name": "DISCOUNT-CAMPAIGN-TEMPLATE",
                          "description": "New discount for Q4",
                          "campaign_type": "DISCOUNT_COUPONS",
                          "created_at": "2024-06-21T13:03:09.431Z",
                          "object": "campaign_template"
                        },
                        {
                          "id": "camp_tpl_cR8va5Ga2nAi4Nxoi1I1qR8S",
                          "name": "GIFT-CAMPAIGN-TEMPLATE",
                          "campaign_type": "GIFT_VOUCHERS",
                          "created_at": "2024-07-05T14:26:31.600Z",
                          "updated_at": "2024-07-05T14:27:02.905Z",
                          "object": "campaign_template"
                        }
                      ],
                      "total": 14,
                      "has_more": true
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/management/v1/projects/{projectId}/templates/campaigns/{campaignTemplateId}/copy": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterProjectId"
          },
          "in": "path",
          "name": "projectId",
          "description": "Provide the unique identifier of the project.",
          "required": true
        },
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterCampaignTemplateId"
          },
          "in": "path",
          "name": "campaignTemplateId",
          "description": "Provide the unique identifier of the campaign template.",
          "required": true
        }
      ],
      "post": {
        "operationId": "management-copy-campaign-template",
        "tags": [
          "Management"
        ],
        "summary": "Copy Campaign Template to a Project",
        "description": "Copies a campaign template to another project.\nThe resources, like validation rules or products, will not be copied to the destination project yet. When the template is used to create a new campaign or add a new promotion tier, the resources will be created in the destination project.\n 📘 Campaign Templates – Documentation\nRead the [Campaign Templates documentation](https://support.voucherify.io/article/620-campaign-templates) to learn more about this feature.",
        "parameters": [],
        "security": [
          {
            "X-Management-Id": [],
            "X-Management-Token": []
          }
        ],
        "requestBody": {
          "description": "Determines the details about the template in the destination project as well as the destination project itself.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ManagementProjectsTemplatesCampaignsCopyCreateRequestBody"
              }
            }
          }
        },
        "responses": {
          "2XX": {
            "description": "Returns the details about the copied campaign template.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManagementProjectsTemplatesCampaignsCopyCreateResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "id": "camp_tpl_0f7e3ac98f04d00ab9",
                      "name": "Item_Discount_Campaign_Template",
                      "description": "To be reused in the future",
                      "campaign_type": "DISCOUNT_COUPONS",
                      "created_at": "2024-10-09T15:52:45.414Z",
                      "object": "campaign_template"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/management/v1/projects/{projectId}/stacking-rules": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterProjectId"
          },
          "in": "path",
          "name": "projectId",
          "description": "Provide the unique identifier of the project.",
          "required": true
        }
      ],
      "post": {
        "operationId": "create-stacking-rules",
        "tags": [
          "Management"
        ],
        "summary": "Create Stacking Rules",
        "description": "Overwrites the default stacking rules.\nIf new stacking rules have been created for the project earlier (e.g. in the user interface), it returns an error. Use Update stacking rules endpoint to change the rules.\n 📘 Stacking rules documentation\n Read [the Stacking rules article](https://support.voucherify.io/article/604-stacking-rules) to learn how they work.",
        "parameters": [],
        "security": [
          {
            "X-Management-Id": [],
            "X-Management-Token": []
          }
        ],
        "requestBody": {
          "description": "Defines the stacking rule parameters.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ManagementProjectsStackingRulesCreateRequestBody"
              }
            }
          }
        },
        "responses": {
          "2XX": {
            "description": "Returns the details about the stacking rules assigned to the project.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManagementProjectsStackingRulesCreateResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "id": "stk_0e9b71a0be48e967f3",
                      "exclusive_categories": [],
                      "joint_categories": [],
                      "redeemables_limit": 30,
                      "applicable_redeemables_limit": 15,
                      "applicable_exclusive_redeemables_limit": 1,
                      "discount_calculation_mode": "DISCOUNTED_AMOUNT",
                      "initial_amount_mode_categories": [],
                      "discounted_amount_mode_categories": [],
                      "redeemables_application_mode": "ALL",
                      "redeemables_sorting_rule": "REQUESTED_ORDER",
                      "created_at": "2024-04-16T12:17:09.368Z"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "operationId": "list-stacking-rules",
        "tags": [
          "Management"
        ],
        "summary": "List Stacking Rules",
        "description": "Lists all stacking rules.\nReturns always a list with one item.\nThis endpoint can be used to retrieve the default stacking rules. The default stacking rules do not have an ID that could be used with the Get Stacking Rules or Update Stacking Rules endpoints.\n 📘 Stacking Rules Documentation\n Read [the Stacking Rules article](https://support.voucherify.io/article/604-stacking-rules) to learn how they work.",
        "parameters": [],
        "security": [
          {
            "X-Management-Id": [],
            "X-Management-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns the details about the stacking rules assigned to the project. These can be either the default stacking rules or the created ones.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManagementProjectsStackingRulesListResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "object": "list",
                      "data_ref": "data",
                      "data": [
                        {
                          "id": "stk_0d6264108617006147",
                          "exclusive_categories": [
                            "cat_0d75bdfe4c9030a732",
                            "cat_0d74559c3e9030da13",
                            "cat_0d7455f93c1030da4a"
                          ],
                          "joint_categories": [
                            "cat_0d507a4d6e8a1b7b97"
                          ],
                          "redeemables_limit": 29,
                          "applicable_redeemables_limit": 28,
                          "applicable_redeemables_per_category_limit": 27,
                          "applicable_exclusive_redeemables_limit": 4,
                          "applicable_exclusive_redeemables_per_category_limit": 3,
                          "discount_calculation_mode": "DISCOUNTED_AMOUNT",
                          "initial_amount_mode_categories": [
                            "cat_0d75bdfe4c9030a732",
                            "cat_0d74559c3e9030da13"
                          ],
                          "discounted_amount_mode_categories": [
                            "cat_0d7455f93c1030da4a"
                          ],
                          "redeemables_application_mode": "PARTIAL",
                          "redeemables_sorting_rule": "CATEGORY_HIERARCHY",
                          "created_at": "2023-08-17T08:33:19.399Z",
                          "updated_at": "2024-04-16T10:38:27.028Z"
                        }
                      ],
                      "total": 1
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/management/v1/projects/{projectId}/stacking-rules/{stackingRulesId}": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterProjectId"
          },
          "in": "path",
          "name": "projectId",
          "description": "Provide the unique identifier of the project.",
          "required": true
        },
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterStackingRulesId"
          },
          "in": "path",
          "name": "stackingRulesId",
          "description": "Provide the unique identifier of the stacking rules.",
          "required": true
        }
      ],
      "get": {
        "operationId": "get-stacking-rules",
        "tags": [
          "Management"
        ],
        "summary": "Get Stacking Rules",
        "description": "Retrieves the stacking rules for the project.\n 📘 Stacking Rules Documentation\n Read [the Stacking Rules article](https://support.voucherify.io/article/604-stacking-rules) to learn how they work.",
        "parameters": [],
        "security": [
          {
            "X-Management-Id": [],
            "X-Management-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns the stacking rules for the project.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManagementProjectsStackingRulesGetResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "id": "stk_0d6264108617006147",
                      "exclusive_categories": [
                        "cat_0d75bdfe4c9030a732",
                        "cat_0d74559c3e9030da13",
                        "cat_0d7455f93c1030da4a"
                      ],
                      "joint_categories": [
                        "cat_0d507a4d6e8a1b7b97"
                      ],
                      "redeemables_limit": 29,
                      "applicable_redeemables_limit": 28,
                      "applicable_redeemables_per_category_limit": 27,
                      "applicable_exclusive_redeemables_limit": 4,
                      "applicable_exclusive_redeemables_per_category_limit": 3,
                      "discount_calculation_mode": "DISCOUNTED_AMOUNT",
                      "initial_amount_mode_categories": [
                        "cat_0d75bdfe4c9030a732",
                        "cat_0d74559c3e9030da13"
                      ],
                      "discounted_amount_mode_categories": [
                        "cat_0d7455f93c1030da4a"
                      ],
                      "redeemables_application_mode": "PARTIAL",
                      "redeemables_sorting_rule": "CATEGORY_HIERARCHY",
                      "created_at": "2023-08-17T08:33:19.399Z",
                      "updated_at": "2024-04-16T10:38:27.028Z"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "update-stacking-rules",
        "tags": [
          "Management"
        ],
        "summary": "Update Stacking Rules",
        "description": "Updates the stacking rules.\nOnly the provided fields will be updated. However, if you update an array, the content of the array is overwritten. This means that if you want to add new values to an array and retain existing ones, you need to provide both the existing and new values in the request.\n 📘 Stacking Rules Documentation\n Read [the Stacking Rules article](https://support.voucherify.io/article/604-stacking-rules) to learn how they work.",
        "parameters": [],
        "security": [
          {
            "X-Management-Id": [],
            "X-Management-Token": []
          }
        ],
        "requestBody": {
          "description": "Defines the stacking rules to be updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ManagementProjectsStackingRulesUpdateRequestBody"
              }
            }
          }
        },
        "responses": {
          "2XX": {
            "description": "Returns the details about the updated stacking rules.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManagementProjectsStackingRulesUpdateResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "id": "stk_0d6264108617006147",
                      "exclusive_categories": [],
                      "joint_categories": [
                        "cat_0d507a4d6e8a1b7b97"
                      ],
                      "redeemables_limit": 30,
                      "applicable_redeemables_limit": 28,
                      "applicable_redeemables_per_category_limit": 27,
                      "applicable_exclusive_redeemables_limit": 4,
                      "applicable_exclusive_redeemables_per_category_limit": 3,
                      "discount_calculation_mode": "DISCOUNTED_AMOUNT",
                      "initial_amount_mode_categories": [
                        "cat_0d75bdfe4c9030a732",
                        "cat_0d74559c3e9030da13"
                      ],
                      "discounted_amount_mode_categories": [
                        "cat_0d7455f93c1030da4a"
                      ],
                      "redeemables_application_mode": "PARTIAL",
                      "redeemables_sorting_rule": "CATEGORY_HIERARCHY",
                      "created_at": "2023-08-17T08:33:19.399Z",
                      "updated_at": "2024-04-16T19:52:24.792Z"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "delete-stacking-rules",
        "tags": [
          "Management"
        ],
        "summary": "Delete Stacking Rules",
        "description": "Deletes permanently the current settings for the stacking rules.\nThe stacking rules are restored to default values.\n 📘 Stacking Rules Documentation\n Read [the Stacking Rules article](https://support.voucherify.io/article/604-stacking-rules) to learn how they work.",
        "parameters": [],
        "security": [
          {
            "X-Management-Id": [],
            "X-Management-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns no content if the stacking rules have been successfully deleted."
          }
        }
      }
    },
    "/management/v1/projects/{projectId}/metadata-schemas": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterProjectId"
          },
          "in": "path",
          "name": "projectId",
          "description": "Provide the unique identifier of the project.",
          "required": true
        }
      ],
      "post": {
        "operationId": "create-metadata-schema",
        "tags": [
          "Management"
        ],
        "summary": "Create Metadata Schema",
        "description": "Creates a new metadata (custom attribute) schema for a given resource.\nThe schema consists of a set of key-value pairs to customize Voucherify resources. \nYou can nest your object within a standard metadata schema, e.g. within a campaign or customer schema. However, your nested object cant include another nested object. The standard metadata schemas are:\n- Campaign\n- Voucher\n- Publication\n- Redemption\n- Product\n- Customer\n- Order\n- Order line item\n- Loyalty Tier\n- Promotion Tier\n- Earning rule\n- Reward\nUse this endpoint to define a metadata schema of a given resource for the first time. Once you configure a metadata schema for a given related_object, use the PUT Update metadata schema endpoint to either update or add new metadata key-value pairs. For example, use this endpoint to define a metadata schema for related_object: campaign for the first time. If you want define a new metadata property for campaign, use the PUT Update metadata schema endpoint.\n 📘 Metadata Documentation\n Read the Getting Started with Metadata articles to learn how metadata work in Voucherify.",
        "parameters": [],
        "security": [
          {
            "X-Management-Id": [],
            "X-Management-Token": []
          }
        ],
        "requestBody": {
          "description": "Defines the metadata schema.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ManagementProjectsMetadataSchemasCreateRequestBody"
              }
            }
          }
        },
        "responses": {
          "2XX": {
            "description": "Returns the details about the metadata schema.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManagementProjectsMetadataSchemasCreateResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "id": "ms_u3bIQLbdU0fi3rhqpTLiF26T",
                      "related_object": "reward",
                      "properties": {
                        "region": {
                          "type": "string",
                          "array": true,
                          "optional": false,
                          "object_type": null,
                          "eq": [
                            "EMEA",
                            "APAC",
                            "LATAM",
                            "NA"
                          ]
                        }
                      },
                      "allow_defined_only": null,
                      "created_at": "2024-04-29T12:03:55.991Z",
                      "updated_at": null,
                      "object": "metadata_schema"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "operationId": "list-metadata-schemas-1",
        "tags": [
          "Management"
        ],
        "summary": "List Metadata Schemas",
        "description": "Lists all metadata schemas available in the project.\n 📘 Metadata Documentation\n Read the Getting Started with Metadata articles to learn how metadata work in Voucherify.",
        "parameters": [],
        "security": [
          {
            "X-Management-Id": [],
            "X-Management-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns the details about the metadata schemas created in the project.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManagementProjectsMetadataSchemasListResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "object": "list",
                      "data_ref": "data",
                      "data": [
                        {
                          "id": "ms_bwBVnq2YHcbsfCMfdqfCi4zl",
                          "related_object": "Test-MANAPI-custom-schema-01",
                          "properties": {
                            "Test-manAPI-01": {
                              "type": "string",
                              "array": false,
                              "optional": true,
                              "object_type": null,
                              "eq": [
                                "Test-01",
                                "Test-02",
                                "Test-03",
                                "Test-04"
                              ]
                            },
                            "Test-manAPI-02": {
                              "type": "number",
                              "array": false,
                              "optional": true,
                              "object_type": null,
                              "eq": [
                                1,
                                2,
                                3,
                                4
                              ]
                            },
                            "Test-manAPI-03": {
                              "type": "object",
                              "array": false,
                              "optional": true,
                              "object_type": "unknown"
                            },
                            "Test-manAPI-04": {
                              "type": "string",
                              "array": true,
                              "optional": true,
                              "object_type": null,
                              "eq": [
                                "Value-01",
                                "Value-02",
                                "Value-03"
                              ]
                            }
                          },
                          "allow_defined_only": true,
                          "created_at": "2024-04-18T17:24:46.980Z",
                          "updated_at": "2024-04-18T18:17:20.108Z",
                          "object": "metadata_schema"
                        },
                        {
                          "id": "ms_ctw7O05ZLsMb1zFCGMRQ8qnP",
                          "related_object": "campaign",
                          "properties": {
                            "Test-manAPI": {
                              "type": "string",
                              "array": true,
                              "optional": true,
                              "object_type": null,
                              "eq": [
                                "Test1",
                                "Test2",
                                "Test3"
                              ],
                              "max_length": 5,
                              "min_length": 2
                            },
                            "Test-manAPI-08": {
                              "type": "number",
                              "array": false,
                              "optional": true,
                              "object_type": null,
                              "eq": [
                                105.5
                              ],
                              "lt": 9.5,
                              "lte": 10.5
                            },
                            "Test-manAPI-09": {
                              "type": "object",
                              "array": true,
                              "optional": false,
                              "object_type": "Test-MANAPI-custom-schema-01",
                              "deleted": true
                            }
                          },
                          "allow_defined_only": false,
                          "created_at": "2024-04-18T17:21:13.555Z",
                          "updated_at": "2024-04-19T06:43:09.218Z",
                          "object": "metadata_schema"
                        },
                        {
                          "id": "ms_f0r4hm3ta6a4a5ch3ma",
                          "related_object": "customer",
                          "properties": {
                            "age": {
                              "type": "number",
                              "array": false,
                              "optional": true,
                              "object_type": null
                            },
                            "Test-MANAPI-06": {
                              "type": "string",
                              "array": true,
                              "optional": true,
                              "object_type": null,
                              "eq": [
                                "Class-01,",
                                "Class-02",
                                "Class-03"
                              ]
                            },
                            "Test-manAPI-07": {
                              "type": "string",
                              "array": false,
                              "optional": true,
                              "object_type": null,
                              "eq": [
                                "Tick",
                                "Tack",
                                "Toe"
                              ]
                            },
                            "acquisition_channel": {
                              "type": "string",
                              "array": false,
                              "optional": true,
                              "object_type": null,
                              "eq": [
                                "Portal-01",
                                "Portal-02",
                                "Portal-03"
                              ]
                            },
                            "customer_life_time_value": {
                              "type": "number",
                              "array": false,
                              "optional": true,
                              "object_type": null
                            }
                          },
                          "allow_defined_only": false,
                          "created_at": "2023-08-03T10:37:48.696Z",
                          "updated_at": "2024-04-18T18:23:58.380Z",
                          "object": "metadata_schema"
                        },
                        {
                          "id": "ms_f1r5Tm3ta6a4a5ch3ma",
                          "related_object": "order",
                          "properties": {
                            "region": {
                              "type": "string",
                              "array": false,
                              "optional": true,
                              "object_type": null,
                              "eq": [
                                "EU",
                                "US",
                                "EMEA",
                                "APAC"
                              ]
                            },
                            "location_id": {
                              "type": "string",
                              "array": true,
                              "optional": true,
                              "object_type": null,
                              "eq": [
                                "L1",
                                "L2",
                                "L3"
                              ]
                            },
                            "payment_mean": {
                              "type": "string",
                              "array": true,
                              "optional": true,
                              "object_type": null,
                              "eq": [
                                "credit-card",
                                "wire-transfer",
                                "paypal"
                              ]
                            },
                            "booking_end_date": {
                              "type": "datetime",
                              "array": false,
                              "optional": true,
                              "object_type": null
                            },
                            "booking_start_date": {
                              "type": "datetime",
                              "array": false,
                              "optional": true,
                              "object_type": null
                            }
                          },
                          "allow_defined_only": false,
                          "created_at": "2023-08-03T10:37:48.662Z",
                          "updated_at": "2023-08-28T11:24:43.518Z",
                          "object": "metadata_schema"
                        },
                        {
                          "id": "ms_s3c0N6m3ta6a4a5ch3ma",
                          "related_object": "product",
                          "properties": {
                            "brand": {
                              "type": "string",
                              "array": false,
                              "optional": true,
                              "object_type": null
                            },
                            "vendor": {
                              "type": "string",
                              "array": false,
                              "optional": true,
                              "object_type": null
                            },
                            "category": {
                              "type": "string",
                              "array": false,
                              "optional": true,
                              "object_type": null
                            }
                          },
                          "allow_defined_only": false,
                          "created_at": "2023-08-03T10:37:48.670Z",
                          "updated_at": "2023-09-14T09:30:26.314Z",
                          "object": "metadata_schema"
                        },
                        {
                          "id": "ms_t4ir0Dm3ta6a4a5ch3ma",
                          "related_object": "redemption",
                          "properties": {
                            "location_id": {
                              "type": "string",
                              "array": true,
                              "optional": true,
                              "object_type": null,
                              "eq": [
                                "L1",
                                "L2",
                                "L3"
                              ]
                            }
                          },
                          "allow_defined_only": null,
                          "created_at": "2023-08-03T10:37:48.692Z",
                          "updated_at": null,
                          "object": "metadata_schema"
                        }
                      ],
                      "total": 6
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/management/v1/projects/{projectId}/metadata-schemas/{metadataSchemaId}": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterProjectId"
          },
          "in": "path",
          "name": "projectId",
          "description": "Provide the unique identifier of the project.",
          "required": true
        },
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterMetadataSchemaId"
          },
          "in": "path",
          "name": "metadataSchemaId",
          "description": "Provide the unique identifier of the metadata schema.",
          "required": true
        }
      ],
      "get": {
        "operationId": "get-metadata-schema-1",
        "tags": [
          "Management"
        ],
        "summary": "Get Metadata Schema",
        "description": "Retrieves a metadata schema.\n 📘 Metadata Documentation\n Read the Getting Started with Metadata articles to learn how metadata work in Voucherify.",
        "parameters": [],
        "security": [
          {
            "X-Management-Id": [],
            "X-Management-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns the metadata schema.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManagementProjectsMetadataSchemasGetResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "id": "ms_f1r5Tm3ta6a4a5ch3ma",
                      "related_object": "order",
                      "properties": {
                        "region": {
                          "type": "string",
                          "array": false,
                          "optional": true,
                          "object_type": null,
                          "eq": [
                            "EU",
                            "US",
                            "EMEA",
                            "APAC"
                          ]
                        },
                        "location_id": {
                          "type": "string",
                          "array": true,
                          "optional": true,
                          "object_type": null,
                          "eq": [
                            "L1",
                            "L2",
                            "L3"
                          ]
                        },
                        "payment_mean": {
                          "type": "string",
                          "array": true,
                          "optional": true,
                          "object_type": null,
                          "eq": [
                            "credit-card",
                            "wire-transfer",
                            "paypal"
                          ]
                        },
                        "booking_end_date": {
                          "type": "datetime",
                          "array": false,
                          "optional": true,
                          "object_type": null
                        },
                        "booking_start_date": {
                          "type": "datetime",
                          "array": false,
                          "optional": true,
                          "object_type": null
                        }
                      },
                      "allow_defined_only": false,
                      "created_at": "2023-08-03T10:37:48.662Z",
                      "updated_at": "2023-08-28T11:24:43.518Z",
                      "object": "metadata_schema"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "update-metadata-schema",
        "tags": [
          "Management"
        ],
        "summary": "Update Metadata Schema",
        "description": "Updates a metadata schema.\nWith this request, you can:\n- Add a nonexistent attribute definition to the metadata schema.\n- Update an existing attribute definition by overwriting its current values.\nIn the request, you can provide only those definitions you want to add or update. Definitions omitted in the request remain unchanged.\nHowever, if you want to update a definition, you will have to add all its current key-value pairs as well. Only the pairs sent in the request are saved for this definition. This means that the key-value pairs that are not sent in a request are restored to default values. For example, if your definition has an array with values and it is not sent in an update request, the array values will be deleted.\n 👍 Additional Notes\n- You cannot change the type of an existing schema, e.g. from string to number.\n- You can remove a definition with this endpoint by providing deleted: true in the request. It will be moved to the Removed definitions section in the user interface. However, you cannot permanently remove a definition with this endpoint.\n 📘 Metadata Documentation\n Read the Getting Started with Metadata articles to learn how metadata work in Voucherify.",
        "parameters": [],
        "security": [
          {
            "X-Management-Id": [],
            "X-Management-Token": []
          }
        ],
        "requestBody": {
          "description": "Defines the metadata schema to be updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ManagementProjectsMetadataSchemasUpdateRequestBody"
              }
            }
          }
        },
        "responses": {
          "2XX": {
            "description": "Returns the details about the updated metadata schema.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManagementProjectsMetadataSchemasUpdateResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "id": "ms_u3bIQLbdU0fi3rhqpTLiF26T",
                      "related_object": "reward",
                      "properties": {
                        "region": {
                          "type": "string",
                          "array": true,
                          "optional": false,
                          "object_type": null,
                          "eq": [
                            "EMEA",
                            "APAC",
                            "LATAM",
                            "NA"
                          ]
                        }
                      },
                      "allow_defined_only": null,
                      "created_at": "2024-04-29T12:03:55.991Z",
                      "updated_at": null,
                      "object": "metadata_schema"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "delete-metadata-schema",
        "tags": [
          "Management"
        ],
        "summary": "Delete Metadata Schema",
        "description": "Deletes permanently the metadata schema.\nIn standard metadata schemas, this endpoint removes permanently all definitions. The standard metadata schemas are:\n- Campaign\n- Voucher\n- Publication\n- Redemption\n- Product\n- Customer\n- Order\n- Order line item\n- Loyalty Tier\n- Promotion Tier\n- Earning rule\n- Reward\nIf you want to delete only one definition, use the Update Metadata Schema endpoint. In the request, provide the deleted: true pair in the definition object. This definition will be moved to Removed definitions.\nIf you want to create a new standard metadata schema, use the Create Metadata Schema endpoint.\n 🚧 Metadata Purging\nThis endpoint deletes permanently the metadata schemas only. However, it does not purge the metadata from associated entities, so the metadata added to those entities will remain.\nIf you want to purge metadata from the entities:\n1. Remove all the definitions you want to purge. You can do this either in Voucherify Project Settings > Metadata Schema tab or with the Update Metadata Schema endpoint.\n2. In Voucherify Project Settings > Metadata Schema tab, go to the relevant metadata schema.\n3. In Removed definitions, click the bin button next to the definitions whose metadata you want to purge from entities.\nNote:\n- This is an asynchronous action. You will be notified when it has been completed.\n- You cannot purge metadata for the Redemption and Publication schemas.\n4. Use the Delete Metadata Schema request to delete the metadata schema from Voucherify.\n 📘 Metadata Documentation\n Read the Getting Started with Metadata articles to learn how metadata work in Voucherify.",
        "parameters": [],
        "security": [
          {
            "X-Management-Id": [],
            "X-Management-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns no content if the metadata schema has been successfully deleted."
          }
        }
      }
    },
    "/management/v1/projects/{projectId}/custom-event-schemas": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterProjectId"
          },
          "in": "path",
          "name": "projectId",
          "description": "Provide the unique identifier of the project.",
          "required": true
        }
      ],
      "post": {
        "operationId": "create-custom-event-schema",
        "tags": [
          "Management"
        ],
        "summary": "Create Custom Event Schema",
        "description": "Creates a custom event schema.\nThe properties object is required, but it can be empty, however. This object is for optional custom properties (metadata).\n 📘 Custom Event Documentation\n Read [Custom Events](https://support.voucherify.io/article/111-custom-events) article to learn how custom events work in Voucherify.\nRead also the details about the Track Custom Event endpoint and the Custom Event Object.",
        "parameters": [],
        "security": [
          {
            "X-Management-Id": [],
            "X-Management-Token": []
          }
        ],
        "requestBody": {
          "description": "Defines the custom event schema.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ManagementProjectsCustomEventSchemasCreateRequestBody"
              }
            }
          }
        },
        "responses": {
          "2XX": {
            "description": "Returns the details about the custom event schema.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManagementProjectsCustomEventSchemasCreateResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "id": "ms_GgjUlnCmbNV5z1pajU11NtnT",
                      "name": "review",
                      "schema": {
                        "properties": {
                          "published": {
                            "type": "boolean",
                            "optional": true
                          }
                        }
                      },
                      "created_at": "2024-04-29T11:25:44.458Z",
                      "object": "custom-event-schema"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "operationId": "list-custom-event-schemas",
        "tags": [
          "Management"
        ],
        "summary": "List Custom Event Schemas",
        "description": "Lists all custom event schemas available in the project.\n 📘 Custom Event Documentation\n Read [Custom Events](https://support.voucherify.io/article/111-custom-events) article to learn how custom events work in Voucherify.\nRead also the details about the Track Custom Event endpoint and the Custom Event Object.",
        "parameters": [],
        "security": [
          {
            "X-Management-Id": [],
            "X-Management-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns the details about the custom event schemas created in the project.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManagementProjectsCustomEventSchemasListResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "object": "list",
                      "data_ref": "data",
                      "data": [
                        {
                          "id": "ms_t4ir0Dcu5T0m3v3nT5ch3ma",
                          "name": "newsletter_subscribed",
                          "schema": {
                            "properties": {}
                          },
                          "created_at": "2023-08-03T10:37:48.716Z",
                          "object": "custom-event-schema"
                        },
                        {
                          "id": "ms_s3c0N6cu5T0m3v3nT5ch3ma",
                          "name": "review_left",
                          "schema": {
                            "properties": {}
                          },
                          "created_at": "2023-08-03T10:37:48.710Z",
                          "updated_at": "2024-04-26T14:35:03.463Z",
                          "object": "custom-event-schema"
                        },
                        {
                          "id": "ms_f1r5Tcu5T0m3v3nT5ch3ma",
                          "name": "sign_up",
                          "schema": {
                            "properties": {}
                          },
                          "created_at": "2023-08-03T10:37:48.705Z",
                          "object": "custom-event-schema"
                        }
                      ],
                      "total": 3
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/management/v1/projects/{projectId}/custom-event-schemas/{customEventSchemaId}": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterProjectId"
          },
          "in": "path",
          "name": "projectId",
          "description": "Provide the unique identifier of the project.",
          "required": true
        },
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterCustomEventSchemaId"
          },
          "in": "path",
          "name": "customEventSchemaId",
          "description": "Provide the unique identifier of the custom event schema.",
          "required": true
        }
      ],
      "get": {
        "operationId": "get-custom-event-schema",
        "tags": [
          "Management"
        ],
        "summary": "Get Custom Event Schema",
        "description": "Retrieves a custom event schema.\n 📘 Custom Event Documentation\n Read [Custom Events](https://support.voucherify.io/article/111-custom-events) article to learn how custom events work in Voucherify.\nRead also the details about the Track Custom Event endpoint and the Custom Event Object.",
        "parameters": [],
        "security": [
          {
            "X-Management-Id": [],
            "X-Management-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns the custom event schema.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManagementProjectsCustomEventSchemasGetResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "id": "ms_f1r5Tm3ta6a4a5ch3ma",
                      "related_object": "order",
                      "properties": {
                        "published": {
                          "type": "boolean",
                          "optional": true
                        }
                      },
                      "created_at": "2024-04-29T11:25:44.458Z",
                      "object": "custom-event-schema"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "update-custom-event-schema",
        "tags": [
          "Management"
        ],
        "summary": "Update Custom Event Schema",
        "description": "Updates a custom event schema.\nWith this request, you can:\n- Add a nonexistent property to a custom event schema.\n- Update an existing property.\nIn the request, you can provide only those properties you want to add or update. Definitions omitted in the request remain unchanged.\n 👍 Additional Notes\n- You can change the type of an existing property, e.g. from string to number.\n- You can remove a custom property with this endpoint by providing deleted: true in the request. However, you cannot permanently remove an event definition or its property with this endpoint.\n 📘 Custom Event Documentation\n Read [Custom Events](https://support.voucherify.io/article/111-custom-events) article to learn how custom events work in Voucherify.\nRead also the details about the Track Custom Event endpoint and the Custom Event Object.",
        "parameters": [],
        "security": [
          {
            "X-Management-Id": [],
            "X-Management-Token": []
          }
        ],
        "requestBody": {
          "description": "Defines the custom event schema to be updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ManagementProjectsCustomEventSchemasUpdateRequestBody"
              }
            }
          }
        },
        "responses": {
          "2XX": {
            "description": "Returns the details about the updated custom event schema.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManagementProjectsCustomEventSchemasUpdateResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "id": "ms_u3bIQLbdU0fi3rhqpTLiF26T",
                      "related_object": "reward",
                      "properties": {
                        "region": {
                          "type": "string",
                          "array": true,
                          "optional": false,
                          "object_type": null,
                          "eq": [
                            "EMEA",
                            "APAC",
                            "LATAM",
                            "NA",
                            "EU"
                          ]
                        }
                      },
                      "allow_defined_only": false,
                      "created_at": "2024-04-29T12:03:55.991Z",
                      "updated_at": "2024-04-29T12:06:20.866Z",
                      "object": "metadata_schema"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "delete-custom-event-schema",
        "tags": [
          "Management"
        ],
        "summary": "Delete Custom Event Schema",
        "description": "Deletes permanently the custom event schema with its custom properties (metadata).\n 📘 Custom Event Documentation\n Read [Custom Events](https://support.voucherify.io/article/111-custom-events) article to learn how custom events work in Voucherify.\nRead also the details about the Track Custom Event endpoint and the Custom Event Object.",
        "parameters": [],
        "security": [
          {
            "X-Management-Id": [],
            "X-Management-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns no content if the custom event schema has been successfully deleted."
          }
        }
      }
    },
    "/management/v1/projects/{projectId}/webhooks": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterProjectId"
          },
          "in": "path",
          "name": "projectId",
          "description": "Provide the unique identifier of the project.",
          "required": true
        }
      ],
      "post": {
        "operationId": "create-webhook",
        "tags": [
          "Management"
        ],
        "summary": "Create Webhook",
        "description": "Creates a new webhook configuration.\n 📘 Webhook Documentation\n Read Webhooks v2024-01-01 article to learn how webhooks work in Voucherify.",
        "parameters": [],
        "security": [
          {
            "X-Management-Id": [],
            "X-Management-Token": []
          }
        ],
        "requestBody": {
          "description": "Defines a webhook configuration.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ManagementProjectsWebhooksCreateRequestBody"
              }
            }
          }
        },
        "responses": {
          "2XX": {
            "description": "Returns the details about the webhook configuration.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManagementProjectsWebhooksCreateResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "object": "webhook",
                      "created_at": "2024-04-30T08:13:55.789Z",
                      "id": "wh_ekFHVL6lqC4lDuIFxpETSGa3",
                      "events": [
                        "redemption.succeeded"
                      ],
                      "target_url": "your_url",
                      "active": true
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "operationId": "list-webhooks",
        "tags": [
          "Management"
        ],
        "summary": "List Webhooks",
        "description": "Lists all webhook configurations for the project.\n 📘 Webhook Documentation\n Read Webhooks v2024-01-1 article to learn how webhooks work in Voucherify.",
        "parameters": [],
        "security": [
          {
            "X-Management-Id": [],
            "X-Management-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns the details about webhook configurations created in the project.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManagementProjectsWebhooksListResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "object": "list",
                      "data_ref": "data",
                      "data": [
                        {
                          "object": "webhook",
                          "created_at": "2024-01-02T08:31:46.562Z",
                          "id": "wh_i45Uez369zzXgh6PXC0eyGmb",
                          "events": [
                            "redemption.succeeded",
                            "redemption.failed",
                            "redemption.rollback.succeeded",
                            "redemption.rollback.failed",
                            "publication.succeeded",
                            "voucher.published",
                            "voucher.updated",
                            "voucher.deleted",
                            "voucher.created",
                            "voucher.enabled",
                            "voucher.disabled",
                            "voucher.loyalty_card.points_added",
                            "voucher.gift.balance_added",
                            "campaign.enabled",
                            "campaign.deleted",
                            "campaign.created",
                            "campaign.updated",
                            "campaign.disabled",
                            "campaign.vouchers.generation.completed",
                            "business_validation_rule.assignment.created",
                            "business_validation_rule.assignment.deleted",
                            "business_validation_rule.created",
                            "business_validation_rule.deleted",
                            "business_validation_rule.updated",
                            "customer.created",
                            "customer.deleted",
                            "customer.rewarded",
                            "customer.rewarded.loyalty_points"
                          ],
                          "target_url": "your_url",
                          "active": true
                        },
                        {
                          "object": "webhook",
                          "created_at": "2024-04-29T14:13:27.764Z",
                          "id": "wh_x2YxoHtQdBlP7zfk5KZ8m5WX",
                          "events": [
                            "redemption.succeeded",
                            "redemption.failed",
                            "redemption.rollback.succeeded",
                            "redemption.rollback.failed",
                            "publication.succeeded",
                            "voucher.published",
                            "voucher.updated",
                            "voucher.deleted",
                            "voucher.created",
                            "voucher.enabled"
                          ],
                          "target_url": "your_url",
                          "active": false
                        }
                      ],
                      "total": 2
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/management/v1/projects/{projectId}/webhooks/{webhookId}": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterProjectId"
          },
          "in": "path",
          "name": "projectId",
          "description": "Provide the unique identifier of the project.",
          "required": true
        },
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterWebhookId"
          },
          "in": "path",
          "name": "webhookId",
          "description": "Provide the unique identifier of the webhook configuration.",
          "required": true
        }
      ],
      "get": {
        "operationId": "get-webhook",
        "tags": [
          "Management"
        ],
        "summary": "Get Webhook",
        "description": "Retrieves a webhook configuration.\n 📘 Webhook Documentation\n Read Webhooks v2024-01-1 article to learn how webhooks work in Voucherify.",
        "parameters": [],
        "security": [
          {
            "X-Management-Id": [],
            "X-Management-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns the webhook configuration.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManagementProjectsWebhooksGetResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "object": "webhook",
                      "created_at": "2024-04-30T08:13:55.789Z",
                      "id": "wh_Fk1HzL9lqC1lpuIFxp3TShB4",
                      "events": [
                        "redemption.succeeded"
                      ],
                      "target_url": "your_url",
                      "active": false
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "update-webhook",
        "tags": [
          "Management"
        ],
        "summary": "Update Webhook",
        "description": "Updates a webhook configuration.\nThe events listed in the request are overwritten. If you want to add more events, provide also the events that are already in the webhook configuration.\n 📘 Webhook Documentation\n Read Webhooks v2024-01-1 article to learn how webhooks work in Voucherify.",
        "parameters": [],
        "security": [
          {
            "X-Management-Id": [],
            "X-Management-Token": []
          }
        ],
        "requestBody": {
          "description": "Defines the webhook configuration to be updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ManagementProjectsWebhooksUpdateRequestBody"
              }
            }
          }
        },
        "responses": {
          "2XX": {
            "description": "Returns the details about the updated webhook configuration.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManagementProjectsWebhooksUpdateResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "object": "webhook",
                      "created_at": "2024-04-30T08:13:55.789Z",
                      "id": "wh_Fk1HzL9lqC1lpuIFxp3TShB4",
                      "events": [
                        "redemption.failed"
                      ],
                      "target_url": "your_url",
                      "active": false
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "delete-webhook",
        "tags": [
          "Management"
        ],
        "summary": "Delete Webhook",
        "description": "Deletes a webhook configuration.\n 📘 Webhook Documentation\n Read Webhooks v2024-01-1 article to learn how webhooks work in Voucherify.",
        "parameters": [],
        "security": [
          {
            "X-Management-Id": [],
            "X-Management-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns no content if the webhook configuration has been successfully deleted."
          }
        }
      }
    },
    "/management/v1/projects/{projectId}/branding": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterProjectId"
          },
          "in": "path",
          "name": "projectId",
          "description": "Provide the unique identifier of the project.",
          "required": true
        }
      ],
      "post": {
        "operationId": "create-brand",
        "tags": [
          "Management"
        ],
        "summary": "Create Brand",
        "description": "Creates a new brand configuration.\nYou can have only one brand configured for a project.\n 📘 White Labelling\n The white labelling settings which can be found in Project Settings > Brand Details and which are available only for Enterprise clients as a separate service can be configured only in the user interface.",
        "parameters": [],
        "security": [
          {
            "X-Management-Id": [],
            "X-Management-Token": []
          }
        ],
        "requestBody": {
          "description": "Defines a brand configuration.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ManagementProjectsBrandingCreateRequestBody"
              },
              "examples": {
                "Example": {
                  "value": {
                    "brand": {
                      "name": "Voucherify PSA",
                      "privacy_policy_url": null,
                      "terms_of_use_url": null,
                      "permission_reminder": "You are receiving this email because you opted in at our website.",
                      "website_url": "voucherify.io"
                    },
                    "address": {
                      "street": "Porcelanowa 23",
                      "city": "Katowice",
                      "postal": "43-246",
                      "state": null,
                      "country": "Poland"
                    },
                    "contact": {
                      "email": "support@voucherify.io",
                      "phone": null
                    },
                    "cockpits": {
                      "campaigns_overview_enabled": false,
                      "loyalty_enabled": true,
                      "gift_cards_enabled": true,
                      "coupons_enabled": true,
                      "referrals_enabled": true,
                      "theme": "default",
                      "use_custom_double_opt_in_redirect_url": false,
                      "custom_double_opt_in_redirect_url": null
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "2XX": {
            "description": "Returns the details about the brand configuration.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManagementProjectsBrandingCreateResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "id": "brd_0eb55234024e226d9d",
                      "brand": {
                        "name": "Voucherify PSA",
                        "privacy_policy_url": null,
                        "terms_of_use_url": null,
                        "permission_reminder": "You are receiving this email because you opted in at our website.",
                        "website_url": "voucherify.io"
                      },
                      "address": {
                        "street": "Porcelanowa 23",
                        "city": "Katowice",
                        "postal": "43-246",
                        "state": null,
                        "country": "Poland"
                      },
                      "contact": {
                        "email": "support@voucherify.io",
                        "phone": null
                      },
                      "cockpits": {
                        "campaigns_overview_enabled": false,
                        "loyalty_enabled": true,
                        "gift_cards_enabled": true,
                        "coupons_enabled": true,
                        "referrals_enabled": true,
                        "theme": "default",
                        "use_custom_double_opt_in_redirect_url": false,
                        "custom_double_opt_in_redirect_url": null
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "operationId": "list-brands",
        "tags": [
          "Management"
        ],
        "summary": "List Brands",
        "description": "Lists all brand configurations.\nBecause a project can have only one brand, it always returns a list with one item.\nThis endpoint can be used to retrieve the brand configuration created with the Voucherify Dashboard and the ID.",
        "parameters": [],
        "security": [
          {
            "X-Management-Id": [],
            "X-Management-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns the details about the brand created in the project.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManagementProjectsBrandingListResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "object": "list",
                      "data_ref": "data",
                      "data": [
                        {
                          "id": "brd_0E603421F0a2fL1814",
                          "brand": {
                            "name": "Voucherify PSA",
                            "privacy_policy_url": null,
                            "terms_of_use_url": null,
                            "permission_reminder": "You are receiving this email because you opted in at our website.",
                            "website_url": "voucherify.io"
                          },
                          "address": {
                            "street": "Porcelanowa 23",
                            "city": "Katowice",
                            "postal": "40-246",
                            "state": null,
                            "country": "Poland"
                          },
                          "contact": {
                            "email": "support@voucherify.io",
                            "phone": null
                          },
                          "cockpits": {
                            "campaigns_overview_enabled": false,
                            "loyalty_enabled": true,
                            "gift_cards_enabled": true,
                            "coupons_enabled": true,
                            "referrals_enabled": true,
                            "theme": "default",
                            "use_custom_double_opt_in_redirect_url": false,
                            "custom_double_opt_in_redirect_url": null
                          }
                        }
                      ],
                      "total": 1
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/management/v1/projects/{projectId}/branding/{brandingId}": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterProjectId"
          },
          "in": "path",
          "name": "projectId",
          "description": "Provide the unique identifier of the project.",
          "required": true
        },
        {
          "schema": {
            "$ref": "#/components/schemas/ParameterBrandingId"
          },
          "in": "path",
          "name": "brandingId",
          "description": "Provide the unique identifier of the brand configuration.",
          "required": true
        }
      ],
      "get": {
        "operationId": "get-brand",
        "tags": [
          "Management"
        ],
        "summary": "Get Brand",
        "description": "Retrieves a brand configuration.",
        "parameters": [],
        "security": [
          {
            "X-Management-Id": [],
            "X-Management-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns the brand configuration.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManagementProjectsBrandingGetResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "id": "brd_0E603421F0a2fL1814",
                      "brand": {
                        "name": "Voucherify PSA",
                        "privacy_policy_url": null,
                        "terms_of_use_url": null,
                        "permission_reminder": "You are receiving this email because you opted in at our website.",
                        "website_url": null
                      },
                      "address": {
                        "street": "Porcelanowa 23",
                        "city": "Katowice",
                        "postal": "40-246",
                        "state": null,
                        "country": "Poland"
                      },
                      "contact": {
                        "email": "support@voucherify.io",
                        "phone": null
                      },
                      "cockpits": {
                        "campaigns_overview_enabled": false,
                        "loyalty_enabled": true,
                        "gift_cards_enabled": true,
                        "coupons_enabled": true,
                        "referrals_enabled": true,
                        "theme": "default",
                        "use_custom_double_opt_in_redirect_url": false,
                        "custom_double_opt_in_redirect_url": null
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "update-brand",
        "tags": [
          "Management"
        ],
        "summary": "Update Brand",
        "description": "Updates a brand configuration.\nOnly the fields sent in the request will be updated. The fields omitted in the request will remain unchanged.\n 📘 White Labelling\n The white labelling settings which can be found in Project Settings > Brand Details and which are available only for Enterprise clients as a separate service can be configured only in the user interface.",
        "parameters": [],
        "security": [
          {
            "X-Management-Id": [],
            "X-Management-Token": []
          }
        ],
        "requestBody": {
          "description": "Defines the brand configuration to be updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ManagementProjectsBrandingUpdateRequestBody"
              }
            }
          }
        },
        "responses": {
          "2XX": {
            "description": "Returns the details about the updated brand configuration.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManagementProjectsBrandingUpdateResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "id": "brd_0ead90c940a9deef09",
                      "brand": {
                        "name": "Voucherify PSA",
                        "privacy_policy_url": null,
                        "terms_of_use_url": null,
                        "permission_reminder": "You are receiving this email because you opted in at our website.",
                        "website_url": null
                      },
                      "address": {
                        "street": "Porcelanowa 23",
                        "city": "Katowice",
                        "postal": "43-246",
                        "state": null,
                        "country": "Poland"
                      },
                      "contact": {
                        "email": "your_email@your-domain.com",
                        "phone": null
                      },
                      "cockpits": {
                        "campaigns_overview_enabled": false,
                        "loyalty_enabled": true,
                        "gift_cards_enabled": true,
                        "coupons_enabled": true,
                        "referrals_enabled": true,
                        "theme": "default",
                        "use_custom_double_opt_in_redirect_url": false,
                        "custom_double_opt_in_redirect_url": null
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "delete-brand",
        "tags": [
          "Management"
        ],
        "summary": "Delete Brand",
        "description": "Deletes permanently a brand configuration.",
        "parameters": [],
        "security": [
          {
            "X-Management-Id": [],
            "X-Management-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns no content if the brand configuration has been successfully deleted."
          }
        }
      }
    },
    "/client/v1/qualifications": {
      "post": {
        "operationId": "check-eligibility-client-side",
        "tags": [
          "Client-side"
        ],
        "summary": "Check Eligibility (client-side)",
        "description": "Generate a list of redeemables that are applicable in the context of the customer and order.\nThe new qualifications method is an improved version of Campaign Qualifications, Voucher Qualifications, and Promotions Validation API requests. The new qualification method introduces the following improvements:\n- Qualification results are returned faster\n- No limit on the number of returned redeemables\n- Introduces new qualification scenarios, not available in the previous version\n 👍 Scenario Guide\n Read our dedicated guide to learn about some use cases this endpoint can cover here.\n# Paging \nThe Voucherify Qualifications API request will return to you all of the redeemables available for the customer in batches of up to 50 redeemables. To get the next batch of redeemables, you need to use the starting_after cursor.\nTo process of paging the redeemables works in the following manner:\n- You send the first API request for Qualifications without the starting_after parameter.\n- The response will contain a parameter named has_more. If the parameters value is set to true, then more redeemables are available.\n- Get the value of the created_at parameter of the last returned redeemable. The value of this parameter will be used as a cursor to retrieve the next page of redeemables.\n- Send another API request for Qualification with the starting_after parameter set to the value taken from the created_at parameter from the last returned redeemable.\n- Voucherify will return the next page of redeemables.\n- If the has_more parameter is set to true, apply steps 3-5 to get the next page of redeemables.",
        "parameters": [],
        "security": [
          {
            "X-Client-Application-Id": [],
            "X-Client-Token": []
          }
        ],
        "requestBody": {
          "description": "Define order and customer context.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientQualificationsCheckEligibilityRequestBody"
              }
            }
          }
        },
        "responses": {
          "2XX": {
            "description": "Returns a qualifications object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientQualificationsCheckEligibilityResponseBody"
                }
              }
            }
          }
        }
      }
    },
    "/client/v1/promotions/tiers": {
      "get": {
        "operationId": "list-promotion-tiers-client-side",
        "tags": [
          "Client-side"
        ],
        "summary": "List Promotion Tiers (client-side)",
        "description": "This method enables you to list promotion tiers.",
        "parameters": [
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterBoolean"
            },
            "in": "query",
            "name": "is_available",
            "description": "This parameter allows filtering promotions that are only available at the moment. When set to true, it selects only non-expired and active promotions."
          },
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterLimit"
            },
            "in": "query",
            "name": "limit",
            "description": "Limits the number of objects to be returned. The limit can range between 1 and 100 items."
          },
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterInteger"
            },
            "in": "query",
            "description": "Which page of results to return. The lowest value is 1.",
            "name": "page"
          },
          {
            "schema": {
              "$ref": "#/components/schemas/ParameterOrderListPromotionTiersClientSide"
            },
            "in": "query",
            "name": "order",
            "description": "Sorts the results using one of the filtering options, where the dash - preceding a sorting option means sorting in a descending order."
          },
          {
            "$ref": "#/components/parameters/origin"
          }
        ],
        "security": [
          {
            "X-Client-Application-Id": [],
            "X-Client-Token": []
          }
        ],
        "responses": {
          "2XX": {
            "description": "Returns a dictionary with a `tiers` property that contains an array of promotion tiers.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientPromotionsTiersListResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "object": "list",
                      "data_ref": "tiers",
                      "tiers": [
                        {
                          "id": "promo_NzjTc3ZXTe7md5SziK3uYtei",
                          "created_at": "2022-09-21T11:38:34.962Z",
                          "name": "Order more than $100",
                          "banner": "Order more than $100",
                          "action": {
                            "discount": {
                              "type": "AMOUNT",
                              "amount_off": 3000,
                              "effect": "APPLY_TO_ORDER"
                            }
                          },
                          "metadata": {},
                          "hierarchy": 1,
                          "promotion_id": "camp_VEL7UX0jZjrvLx3hfNZBVzpq",
                          "campaign": {
                            "id": "camp_VEL7UX0jZjrvLx3hfNZBVzpq",
                            "start_date": "2022-09-21T00:00:00.000Z",
                            "expiration_date": "2022-09-30T00:00:00.000Z",
                            "validity_timeframe": {
                              "interval": "P3D",
                              "duration": "P2D"
                            },
                            "validity_day_of_week": [
                              1,
                              2,
                              3,
                              4,
                              5
                            ],
                            "active": true,
                            "category_id": "cat_0bb81a481615a37b5e",
                            "object": "campaign"
                          },
                          "campaign_id": "camp_VEL7UX0jZjrvLx3hfNZBVzpq",
                          "active": true,
                          "start_date": "2022-09-21T00:00:00.000Z",
                          "expiration_date": "2022-09-30T00:00:00.000Z",
                          "validity_timeframe": {
                            "interval": "P3D",
                            "duration": "P2D"
                          },
                          "validity_day_of_week": [
                            1,
                            2
                          ],
                          "summary": {
                            "redemptions": {
                              "total_redeemed": 0
                            },
                            "orders": {
                              "total_amount": 0,
                              "total_discount_amount": 0
                            }
                          },
                          "object": "promotion_tier",
                          "validation_rule_assignments": null
                        },
                        {
                          "id": "promo_RaYHtUBre5jU8frUXOvYBtlN",
                          "created_at": "2021-12-15T11:34:01.358Z",
                          "updated_at": "2022-02-09T09:20:08.619Z",
                          "name": "Hot Promotion - Tier 2",
                          "banner": "Get Tier 2 Discount $20 Off",
                          "action": {
                            "discount": {
                              "type": "AMOUNT",
                              "amount_off": 2000,
                              "effect": "APPLY_TO_ORDER"
                            }
                          },
                          "metadata": {},
                          "hierarchy": 2,
                          "promotion_id": "camp_5h0wc453_5",
                          "campaign": {
                            "id": "camp_5h0wc453_5",
                            "start_date": null,
                            "expiration_date": null,
                            "active": true,
                            "category_id": "cat_0b688929a2476386a6",
                            "object": "campaign"
                          },
                          "campaign_id": "camp_5h0wc453_5",
                          "active": true,
                          "summary": {
                            "redemptions": {
                              "total_redeemed": 33
                            },
                            "orders": {
                              "total_amount": 519200,
                              "total_discount_amount": 66000
                            }
                          },
                          "object": "promotion_tier",
                          "validation_rule_assignments": {
                            "object": "list",
                            "data_ref": "data",
                            "data": [
                              {
                                "id": "asgm_pEe1inoYSfmO12p7",
                                "rule_id": "val_5h0wc453_5",
                                "related_object_id": "promo_RaYHtUBre5jU8frUXOvYBtlN",
                                "related_object_type": "promotion_tier",
                                "created_at": "2021-12-15T11:34:01.358Z",
                                "object": "validation_rules_assignment"
                              }
                            ],
                            "total": 1
                          }
                        },
                        {
                          "id": "promo_63fYCt81Aw0h7lzyRkrGZh9p",
                          "created_at": "2021-12-15T11:34:01.333Z",
                          "updated_at": "2022-02-09T09:20:05.603Z",
                          "name": "Hot Promotion - Tier 1",
                          "banner": "Get Tier 1 Discount 10zl",
                          "action": {
                            "discount": {
                              "type": "AMOUNT",
                              "amount_off": 1000,
                              "effect": "APPLY_TO_ORDER"
                            }
                          },
                          "metadata": {
                            "ProductionMetaData": "Hot Promotion - Tier 1"
                          },
                          "hierarchy": 1,
                          "promotion_id": "camp_5h0wc453_5",
                          "campaign": {
                            "id": "camp_5h0wc453_5",
                            "start_date": null,
                            "expiration_date": null,
                            "active": true,
                            "category_id": "cat_0b688929a2476386a6",
                            "object": "campaign"
                          },
                          "campaign_id": "camp_5h0wc453_5",
                          "active": true,
                          "summary": {
                            "redemptions": {
                              "total_redeemed": 11
                            },
                            "orders": {
                              "total_amount": 1414979,
                              "total_discount_amount": 11000
                            }
                          },
                          "object": "promotion_tier",
                          "validation_rule_assignments": {
                            "object": "list",
                            "data_ref": "data",
                            "data": [
                              {
                                "id": "asgm_QqYs7GGVy7cuh3L9",
                                "rule_id": "val_5h0wc453_4",
                                "related_object_id": "promo_63fYCt81Aw0h7lzyRkrGZh9p",
                                "related_object_type": "promotion_tier",
                                "created_at": "2021-12-15T11:34:01.333Z",
                                "object": "validation_rules_assignment"
                              }
                            ],
                            "total": 1
                          }
                        }
                      ],
                      "total": 3
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/client/v1/redemptions": {
      "post": {
        "operationId": "redeem-stacked-discounts-client-side",
        "tags": [
          "Client-side"
        ],
        "summary": "Redeem Stackable Discounts (client-side)",
        "description": "This method is accessible through public keys which you can use in client side requests coming from mobile and web browser applications.\n# How API returns calculated discounts and order amounts in the response\nIn the table below, you can see the logic the API follows to calculate discounts and amounts:\n\n\n 📘 Rollbacks\n You cant roll back a child redemption. When you call rollback on a stacked redemption, all child redemptions will be rolled back. You need to refer to a parent redemption ID in your rollback request.",
        "parameters": [
          {
            "$ref": "#/components/parameters/origin"
          }
        ],
        "security": [
          {
            "X-Client-Application-Id": [],
            "X-Client-Token": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientRedemptionsRedeemRequestBody"
              },
              "examples": {
                "Example": {
                  "value": {
                    "customer": {
                      "source_id": "sample_customer",
                      "metadata": {
                        "key": "value"
                      }
                    },
                    "options": {
                      "expand": [
                        "order",
                        "redeemable",
                        "category"
                      ]
                    },
                    "redeemables": [
                      {
                        "object": "voucher",
                        "id": "voucher-code"
                      }
                    ],
                    "session": {
                      "type": "LOCK",
                      "key": "session_key"
                    },
                    "order": {
                      "amount": 55000,
                      "status": "PAID",
                      "items": [
                        {
                          "quantity": 2,
                          "price": 20000,
                          "source_id": "sample product1",
                          "related_object": "product",
                          "product": {
                            "metadata": {
                              "key": "value"
                            }
                          }
                        },
                        {
                          "quantity": 1,
                          "price": 15000,
                          "source_id": "sample product2",
                          "related_object": "product",
                          "product": {
                            "metadata": {
                              "key": "value"
                            }
                          }
                        }
                      ],
                      "metadata": {
                        "key": "value"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "2XX": {
            "description": "Depending on your project settings: all redeemables must be valid or just one must be valid to result as valid redemption. Read more in the [Stacking Rule Documentation](https://support.voucherify.io/article/604-stacking-rules).",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientRedemptionsRedeemResponseBody"
                }
              }
            }
          }
        }
      }
    },
    "/client/v1/validations": {
      "post": {
        "operationId": "validate-stacked-discounts-client-side",
        "tags": [
          "Client-side"
        ],
        "summary": "Validate Stackable Discounts (client-side)",
        "description": "Verify redeemables provided in the request. This method is accessible through public keys which you can use in client side requests coming from mobile and web browser applications.",
        "parameters": [
          {
            "$ref": "#/components/parameters/origin"
          }
        ],
        "security": [
          {
            "X-Client-Application-Id": [],
            "X-Client-Token": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientValidationsValidateRequestBody"
              },
              "examples": {
                "1 Redeemable": {
                  "value": {
                    "customer": {
                      "source_id": "sample_customer",
                      "metadata": {
                        "key": "value"
                      }
                    },
                    "options": {
                      "expand": [
                        "order",
                        "redeemable",
                        "category"
                      ]
                    },
                    "redeemables": [
                      {
                        "object": "voucher",
                        "id": "voucher-code"
                      }
                    ],
                    "session": {
                      "type": "LOCK"
                    },
                    "order": {
                      "amount": 55000,
                      "status": "PAID",
                      "items": [
                        {
                          "quantity": 2,
                          "price": 20000,
                          "source_id": "sample product1",
                          "related_object": "product",
                          "product": {
                            "metadata": {
                              "key": "value"
                            }
                          }
                        },
                        {
                          "quantity": 1,
                          "price": 15000,
                          "source_id": "sample product2",
                          "related_object": "product",
                          "product": {
                            "metadata": {
                              "key": "value"
                            }
                          }
                        }
                      ],
                      "metadata": {
                        "key": "value"
                      }
                    }
                  }
                },
                "5 Redeemables": {
                  "value": {
                    "customer": {
                      "source_id": "36_bob"
                    },
                    "options": {
                      "expand": [
                        "order",
                        "redeemable",
                        "category"
                      ]
                    },
                    "redeemables": [
                      {
                        "object": "voucher",
                        "id": "GNcuPKGe"
                      },
                      {
                        "object": "voucher",
                        "id": "AnsvocvP",
                        "reward": {
                          "id": "rew_EPx1hCTpqzF0HW1z9NKckZH4"
                        }
                      },
                      {
                        "object": "voucher",
                        "id": "M3X8IwW8",
                        "gift": {
                          "credits": 100
                        }
                      },
                      {
                        "object": "promotion_tier",
                        "id": "promo_DE1N30D731Tg2F6NoMwNas2W"
                      },
                      {
                        "object": "promotion_tier",
                        "id": "promo_NDHgTg4VnOLYNjk9r7WOmQxf"
                      }
                    ],
                    "session": {
                      "type": "LOCK"
                    },
                    "order": {
                      "items": [
                        {
                          "sku_id": "sku_0a3efc90375d1217e2",
                          "quantity": 1
                        },
                        {
                          "product_id": "prod_0bc3bd8a4e072c5275",
                          "quantity": 1
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "2XX": {
            "description": "Depending on your project settings: all redeemables must be valid or just one must be valid to result as valid validation. Read more in the [Stacking Rule Documentation](https://support.voucherify.io/article/604-stacking-rules).",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientValidationsValidateResponseBody"
                }
              }
            }
          }
        }
      }
    },
    "/client/v1/events": {
      "post": {
        "operationId": "track-custom-event-client-side",
        "tags": [
          "Client-side"
        ],
        "summary": "Track Custom Event (client-side)",
        "description": "To track a custom event, you create an event object.  \nThe event object must be linked to the customer who performs the action. If a customer doesnt exist in Voucherify, the customer will be created.",
        "parameters": [
          {
            "$ref": "#/components/parameters/origin"
          }
        ],
        "security": [
          {
            "X-Client-Application-Id": [],
            "X-Client-Token": []
          }
        ],
        "requestBody": {
          "description": "Specify the details of the custom event.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientEventsCreateRequestBody"
              },
              "examples": {
                "Referral triggered by custom event": {
                  "value": {
                    "event": "user_subscribed",
                    "customer": {
                      "source_id": "source_customer_event"
                    },
                    "referral": {
                      "code": "46jL0kYI",
                      "referrer_id": "cust_Vzck5i8U3OhcEUFY6MKhN9Rv"
                    },
                    "metadata": {
                      "login": "bob",
                      "pricing_plan": "PP1",
                      "volume_number": 4
                    }
                  }
                },
                "Earning rule triggered by custom event": {
                  "value": {
                    "event": "cart_abandoned",
                    "customer": {
                      "source_id": "source_customer_event"
                    },
                    "loyalty": {
                      "code": "6CB4KDAu"
                    },
                    "metadata": {
                      "date": "2022-12-01",
                      "flag": true,
                      "text": "Cart abandoned event",
                      "date_time": "2022-12-01T09:24:33.061Z",
                      "number": 1
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "2XX": {
            "description": "Returns the event type if the event was received by the application.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientEventsCreateResponseBody"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "object": "event",
                      "type": "cart_abandoned",
                      "customer": {
                        "id": "cust_ypePCF6IU6fnUvec6RMXZuH4",
                        "name": "John Doe",
                        "email": "john@voucherify.io",
                        "source_id": "source_customer_event",
                        "metadata": {
                          "prop": "value"
                        },
                        "object": "customer"
                      },
                      "referral": null,
                      "loyalty": null
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}