{
  "openapi": "3.1.0",
  "info": {
    "title": "Voucherify API",
    "version": "2018-08-01",
    "description": "Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.",
    "contact": {
      "name": "Voucherify Team",
      "url": "https://www.voucherify.io/contact-support",
      "email": "support@voucherify.io"
    },
    "termsOfService": "https://www.voucherify.io/legal/subscription-agreement",
    "license": {
      "name": "MIT",
      "url": "https://github.com/voucherifyio/voucherify-js-sdk/blob/main/LICENSE"
    },
    "summary": "Voucherify is an API-first promotion engine"
  },
  "servers": [
    {
      "url": "https://api.voucherify.io",
      "description": "EU"
    },
    {
      "url": "https://us1.api.voucherify.io",
      "description": "US"
    },
    {
      "description": "AS",
      "url": "https://as1.api.voucherify.io"
    },
    {
      "url": "https://api.voucherify.io/client",
      "description": "Client EU"
    },
    {
      "url": "https://us1.api.voucherify.io/client",
      "description": "Client US"
    },
    {
      "url": "https://as1.api.voucherify.io/client",
      "description": "Client AS"
    },
    {
      "url": "https://api.voucherify.io/v1",
      "description": "Sandbox"
    },
    {
      "url": "https://download.voucherify.io/v1",
      "description": "Download Files"
    }
  ],
  "components": {
    "securitySchemes": {},
    "parameters": {
      "code": {
        "name": "code",
        "in": "path",
        "schema": {
          "type": "string",
          "example": "7fjWdr"
        },
        "description": "A **code** that identifies the voucher.",
        "required": true
      },
      "X-App-Id": {
        "name": "X-App-Id",
        "in": "header",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "Application ID"
      },
      "X-App-Token": {
        "name": "X-App-Token",
        "in": "header",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "Application Secret Key"
      },
      "X-Client-Token": {
        "name": "X-Client-Token",
        "in": "header",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "Application Secret Key"
      },
      "X-Client-Application-Id": {
        "name": "X-Client-Application-Id",
        "in": "header",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "Application ID"
      },
      "session_key": {
        "name": "session_key",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "example": "ssn_yQGMTeKBSw8OOuFPwlBEjzGy8d8VA9Ts"
        },
        "description": "A unique session identifier."
      },
      "file": {
        "name": "file",
        "in": "header",
        "required": true,
        "schema": {
          "example": "file=@/path/to/vouchers.csv"
        },
        "description": "Path to CSV file."
      },
      "audienceRulesOnly": {
        "name": "audienceRulesOnly",
        "in": "query",
        "required": false,
        "schema": {
          "type": "boolean"
        },
        "description": "This parameter set to true will ask only for verifying vouchers' validation rules only against conditions applied to audiences' attributes (belonging into segment and Customer metadata)"
      },
      "order": {
        "name": "order",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "created_at",
            "-created_at",
            "updated_at",
            "-updated_at",
            "type",
            "-type",
            "code",
            "-code",
            "campaign",
            "-campaign",
            "category",
            "-category"
          ]
        },
        "description": "Sorts the results using one of the filtering options, where the dash `-` preceding a sorting option means sorting in a descending order."
      },
      "limit": {
        "name": "limit",
        "in": "query",
        "required": false,
        "schema": {
          "type": "integer",
          "maximum": 100,
          "minimum": 1
        },
        "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100 items."
      },
      "campaignId": {
        "name": "campaignId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "example": "camp_Pfja7X91b1GoyH5wnpzCwlP3"
        },
        "description": "Assigned by the Voucherify API, identifies the campaign."
      },
      "page": {
        "name": "page",
        "in": "query",
        "required": false,
        "schema": {
          "type": "integer",
          "minimum": 1
        },
        "description": "Which page of results to return."
      },
      "category": {
        "name": "category",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "example": "New Customers"
        },
        "description": "Limit search results to vouchers within the specified category"
      },
      "campaignid_": {
        "name": "campaignid",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "example": "camp_Pfja7X91b1GoyH5wnpzCwlP3"
        },
        "description": "Limit search results to vouchers within the specified campaign"
      },
      "customer": {
        "name": "customer",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "example": "cust_nk0N1uNQ1YnupAoJGOgvsODC"
        },
        "description": "A tracking identifier of a customer who is the holder of the vouchers. It can be an `id` generated by Voucherify or the `source_id`. Remember to use the proper URL escape codes if the `source_id` contains special characters."
      },
      "campaign": {
        "name": "campaign",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "example": "Gift Card Campaign"
        },
        "description": "A unique campaign name, identifies the parent campaign."
      },
      "created_at": {
        "name": "created_at",
        "in": "query",
        "required": false,
        "schema": {
          "type": "object",
          "properties": {
            "before": {
              "type": "string",
              "example": "2021-12-22T10:13:06.487Z",
              "description": "Timestamp representing the date and time before the voucher was created in ISO 8601 format.",
              "format": "date-time"
            },
            "after": {
              "type": "string",
              "example": "2021-12-22T10:13:06.487Z",
              "description": "Timestamp representing the date and time after the voucher was created in ISO 8601 format.",
              "format": "date-time"
            }
          }
        },
        "description": "A filter on the list based on the object `created_at` field. The value is a dictionary with the following options: `before`, `after`. A date value must be presented in ISO 8601 format (`2016-11-16T14:14:31Z` or `2016-11-16`). An example: `[created_at][before]=2017-09-08T13:52:18.227Z`",
        "style": "deepObject",
        "explode": true
      },
      "created_at[before]": {
        "name": "created_at[before]",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        },
        "description": " Return values where the resource's `created_at` field is before this date. A date value must be presented in ISO 8601 format (`2016-11-16T14:14:31Z` or `2016-11-16`)."
      },
      "created_at[after]": {
        "name": "created_at[after]",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        },
        "description": " Return values where the resource's `created_at` field is after this date. A date value must be presented in ISO 8601 format (`2016-11-16T14:14:31Z` or `2016-11-16`)."
      },
      "updated_at": {
        "name": "updated_at",
        "in": "query",
        "required": false,
        "schema": {
          "type": "object",
          "properties": {
            "before": {
              "type": "string",
              "example": "2021-12-22T10:13:06.487Z",
              "description": "Timestamp representing the date and time before the voucher was updated in ISO 8601 format.",
              "format": "date-time"
            },
            "after": {
              "type": "string",
              "example": "2021-12-22T10:13:06.487Z",
              "description": "Timestamp representing the date and time after the voucher was updated in ISO 8601 format.",
              "format": "date-time"
            }
          }
        },
        "description": "A filter on the list based on the object `updated_at` field. The value is a dictionary with the following options: `before`, `after`. A date value must be presented in ISO 8601 format (`2016-11-16T14:14:31Z` or `2016-11-16`). An example: `[updated_at][before]=2017-09-08T13:52:18.227Z`",
        "style": "deepObject",
        "explode": true
      },
      "updated_at[after]": {
        "name": "updated_at[after]",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        },
        "description": " Return values where the resource's `updated_at` field is after this date. A date value must be presented in ISO 8601 format (`2016-11-16T14:14:31Z` or `2016-11-16`)."
      },
      "updated_at[before]": {
        "name": "updated_at[before]",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        },
        "description": " Return values where the resource's `updated_at` field is before this date. A date value must be presented in ISO 8601 format (`2016-11-16T14:14:31Z` or `2016-11-16`)."
      },
      "campaign_id": {
        "name": "campaign_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "example": "camp_Pfja7X91b1GoyH5wnpzCwlP3"
        },
        "description": "Assigned by the Voucherify API, identifies the campaign."
      },
      "campaign_type": {
        "name": "campaign_type",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "PROMOTION",
            "GIFT_VOUCHERS",
            "REFERRAL_PROGRAM",
            "DISCOUNT_COUPONS",
            "LOYALTY_PROGRAM",
            "LUCKY_DRAW"
          ]
        },
        "description": "This attribute allows filtering by campaign type."
      },
      "Origin": {
        "name": "Origin",
        "in": "header",
        "required": true,
        "schema": {
          "type": "string",
          "format": "hostname"
        },
        "description": "Indicates the origin (scheme, hostname, and port)."
      }
    },
    "schemas": {
      "1_obj_voucher_object": {
        "title": "Voucher Object",
        "type": "object",
        "description": "This is an object representing a voucher.",
        "examples": [],
        "x-tags": [
          "VOUCHERS API"
        ],
        "properties": {
          "id": {
            "type": "string",
            "example": "v_mkZN9v7vjYUadXnHrMza8W5c34fE5KiV",
            "description": "Assigned by the Voucherify API, identifies the voucher."
          },
          "code": {
            "type": "string",
            "example": "WVPblOYX",
            "description": "A code that identifies a voucher. Pattern can use all letters of the English alphabet, Arabic numerals, and special characters."
          },
          "campaign": {
            "type": [
              "string",
              "null"
            ],
            "example": "Gift Card Campaign",
            "description": "A unique campaign name, identifies the voucher's parent campaign.",
            "default": null
          },
          "campaign_id": {
            "type": [
              "string",
              "null"
            ],
            "example": "camp_FNYR4jhqZBM9xTptxDGgeNBV",
            "description": "Assigned by the Voucherify API, identifies the voucher's parent campaign.",
            "default": null
          },
          "category": {
            "type": [
              "string",
              "null"
            ],
            "default": null,
            "description": "Tag defining the category that this voucher belongs to. Useful when listing vouchers using the List Vouchers endpoint."
          },
          "type": {
            "type": "string",
            "enum": [
              "GIFT_VOUCHER",
              "DISCOUNT_VOUCHER",
              "LOYALTY_CARD"
            ],
            "description": "Defines the type of voucher. "
          },
          "discount": {
            "default": null,
            "oneOf": [
              {
                "$ref": "#/components/schemas/1_obj_voucher_object_discount_amount"
              },
              {
                "$ref": "#/components/schemas/1_obj_voucher_object_discount_percentage"
              },
              {
                "$ref": "#/components/schemas/1_obj_voucher_object_discount_fixed"
              },
              {
                "$ref": "#/components/schemas/1_obj_voucher_object_discount_unit_one"
              },
              {
                "$ref": "#/components/schemas/1_obj_voucher_object_discount_unit_multiple"
              },
              {
                "$ref": "#/components/schemas/1_obj_voucher_object_discount_shipping"
              }
            ],
            "description": "Object representing discount parameters. Child attributes are present only if `type` is `DISCOUNT_VOUCHER`. Defaults to `null`. Type of discount:\n- `AMOUNT`\n- `PERCENT`\n- `UNIT`\n- `FIXED`\n\n A Free Shipping discount is a special instance of the  `UNIT` type discount."
          },
          "gift": {
            "default": null,
            "type": "object",
            "description": "Object representing gift parameters. Child attributes are present only if `type` is `GIFT_VOUCHER`. Defaults to `null`.",
            "properties": {
              "amount": {
                "type": "integer",
                "example": 10000,
                "description": "Total gift card income. Value is multiplied by 100 to precisely represent 2 decimal places. For example, $100 amount is written as 10000."
              },
              "balance": {
                "type": "integer",
                "example": 500,
                "description": "Available funds. Value is multiplied by 100 to precisely represent 2 decimal places. For example, $100 amount is written as 10000."
              },
              "effect": {
                "type": "string",
                "enum": [
                  "APPLY_TO_ORDER",
                  "APPLY_TO_ITEMS"
                ],
                "description": "Defines how the credits are applied to the customer's order"
              }
            }
          },
          "loyalty_card": {
            "default": null,
            "type": "object",
            "description": "Object representing loyalty card parameters. Child attributes are present only if `type` is `LOYALTY_CARD`. Defaults to `null`.",
            "properties": {
              "points": {
                "type": "integer",
                "example": 7000,
                "description": "Total points incurred over lifespan of loyalty card."
              },
              "balance": {
                "type": "integer",
                "example": 6970,
                "description": "Points available for reward redemption."
              }
            }
          },
          "start_date": {
            "type": "string",
            "example": "2021-12-01T00:00:00.000Z",
            "format": "date-time",
            "description": "Start date defines when the code starts to be active. Activation timestamp in ISO 8601 format. Voucher is *inactive before* this date. "
          },
          "expiration_date": {
            "type": "string",
            "example": "2021-12-31T00:00:00.000Z",
            "format": "date-time",
            "description": "Expiration date defines when the code expires. Expiration timestamp in ISO 8601 format.  Voucher is *inactive after* this date."
          },
          "validity_timeframe": {
            "type": [
              "object",
              "null"
            ],
            "description": "Set recurrent time periods when the voucher is valid. For example, valid for 1 hour every other day.`start_date` **required** when including the `validity_timeframe`.",
            "default": null,
            "properties": {
              "duration": {
                "type": "string",
                "example": "PT1H",
                "description": "Defines the amount of time the voucher will be active in ISO 8601 format. For example, a voucher with a `duration` of `PT1H` will be valid for a duration of one hour."
              },
              "interval": {
                "type": "string",
                "example": "P2D",
                "description": "Defines the intervening time between two time points in ISO 8601 format, expressed as a duration. For example, a voucher with an `interval` of `P2D` will be active every other day."
              }
            }
          },
          "validity_day_of_week": {
            "type": "array",
            "default": null,
            "enum": [
              [
                0
              ],
              [
                1
              ],
              [
                2
              ],
              [
                3
              ],
              [
                4
              ],
              [
                5
              ],
              [
                6
              ]
            ],
            "description": "Integer array corresponding to the particular days of the week in which the voucher is valid.\n\n- `0`  Sunday  \n- `1`  Monday  \n- `2`  Tuesday  \n- `3`  Wednesday  \n- `4`  Thursday  \n- `5`  Friday  \n- `6`  Saturday  ",
            "items": {
              "type": "integer",
              "example": "[ 1, 2 ]"
            }
          },
          "active": {
            "type": "boolean",
            "description": "A flag to toggle the voucher on or off. You can disable a voucher even though it's within the active period defined by the `start_date` and `expiration_date`.  \n\n- `true` indicates an *active* voucher\n- `false` indicates an *inactive* voucher"
          },
          "additional_info": {
            "type": "string",
            "default": null,
            "description": "An optional field to keep any extra textual information about the code such as a code description and details."
          },
          "metadata": {
            "type": "object",
            "description": "The metadata object stores all custom attributes assigned to the code. A set of key/value pairs that you can attach to a voucher object. It can be useful for storing additional information about the voucher in a structured format."
          },
          "assets": {
            "type": "object",
            "description": "Stores links to images of QR and barcode that correspond to an encrypted voucher code.",
            "properties": {
              "qr": {
                "type": "object",
                "description": "Stores Quick Response (QR) representation of encrypted code.",
                "properties": {
                  "id": {
                    "type": "string",
                    "example": "U2FsdGVkX19ucFhvVmBVpVYG5KoswTsjSIaqoKg5L9ie4BK+t4pp7U7oFzjGJzj9q/bmuMOj9mEFiVKDMIkSaruKedMvHbKoPX5Sg+BaZk5QwXMf8k/OzSlOEVybpwSq+AiqPoNtjeuqtIgkDyvT6Q==",
                    "description": "Encrypted voucher code id"
                  },
                  "url": {
                    "type": "string",
                    "example": "https://dev.dl.voucherify.io/api/v1/assets/qr/U2FsdGVkX19ucFhvVmBVpVYG5KoswTsjSIaqoKg5L9ie4BK%2Bt4pp7U7oFzjGJzj9q%2FbmuMOj9mEFiVKDMIkSaruKedMvHbKoPX5Sg%2BBaZk5QwXMf8k%2FOzSlOEVybpwSq%2BAiqPoNtjeuqtIgkDyvT6Q%3D%3D",
                    "description": "URL to QR code  \n\n*Optional:* Attach query parameters to base URL to customize the image of the encrypted voucher code.  \n\n- `size`: integer value from `1` to `100`  \n- `format`: string, either `png` (default) or `svg`"
                  }
                }
              },
              "barcode": {
                "type": "object",
                "description": "Stores barcode representation of encrypted code.",
                "properties": {
                  "id": {
                    "type": "string",
                    "example": "U2FsdGVkX19eJhGfWwUrH9+tulBkON+AnMktic+N6CVWzZ9+fHVxuVx22WakrzxiWXy0skuvvEHSeZIw9HlgyIJ+kJ1iPdUKpyENuNYJKzoZlO0mmTf6WQM6/pFs61apEn9SJx32ttCF6d3oxKISQQ==",
                    "description": "Encrypted voucher code id"
                  },
                  "url": {
                    "type": "string",
                    "example": "https://dev.dl.voucherify.io/api/v1/assets/barcode/U2FsdGVkX19eJhGfWwUrH9%2BtulBkON%2BAnMktic%2BN6CVWzZ9%2BfHVxuVx22WakrzxiWXy0skuvvEHSeZIw9HlgyIJ%2BkJ1iPdUKpyENuNYJKzoZlO0mmTf6WQM6%2FpFs61apEn9SJx32ttCF6d3oxKISQQ%3D%3D",
                    "description": "URL to barcode  \n\n*Optional:* Attach query parameters to base URL to customize the image of the encrypted voucher code.  \n\n- `size`: integer value from `1` to `100`  \n- `format`: string, either `png` (default) or `svg`"
                  }
                }
              }
            }
          },
          "is_referral_code": {
            "type": "boolean",
            "description": "Flag indicating whether this voucher is a referral code."
          },
          "created_at": {
            "type": "string",
            "example": "2021-12-22T10:13:06.487Z",
            "description": "Timestamp representing the date and time when the voucher was created in ISO 8601 format.",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "example": "2021-12-22T10:14:45.316Z",
            "format": "date-time",
            "description": "Timestamp representing the date and time when the voucher was last updated in ISO 8601 format."
          },
          "validation_rules_assignments": {
            "type": "object",
            "description": "Stores information about validation rules assigned to the voucher.",
            "properties": {
              "object": {
                "type": "string",
                "description": "The type of object represented is by default `list`.",
                "default": "list"
              },
              "data_ref": {
                "type": "string",
                "description": "Identifies the name of the attribute that contains the array of validation rule assignments.",
                "default": "data"
              },
              "data": {
                "type": "array",
                "description": "Array of validation rule objects. Each validation rule object contains details about the rule.",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "asgm_N7t39epaQR2SkQcW",
                      "description": "Assigned by the Voucherify API, identifies the validation rule assignment."
                    },
                    "rule_id": {
                      "type": "string",
                      "example": "val_ssbxf1L9aKri",
                      "description": "Assigned by the Voucherify API, identifies the validation rule."
                    },
                    "related_object_id": {
                      "type": "string",
                      "example": "camp_AaP9MC1Y0GpBII84UTIuasvb",
                      "description": "Id of the object from which the rule originates, can be the id of the `voucher` itself or its parent `campaign`."
                    },
                    "related_object_type": {
                      "type": "string",
                      "example": "campaign",
                      "description": "Which object does the rule originate from: the  `voucher` itself or inherited from its parent `campaign`."
                    },
                    "created_at": {
                      "type": "string",
                      "example": "2022-02-14T15:12:06.817Z",
                      "description": "Timestamp representing the date and time when the validation rule was created in ISO 8601 format."
                    },
                    "object": {
                      "type": "string",
                      "default": "validation_rules_assignment",
                      "description": "The type of object represented is by default `validation_rules_assignment`"
                    }
                  }
                }
              },
              "total": {
                "type": "integer",
                "description": "Total number of validation rules assigned to the voucher."
              }
            }
          },
          "redemption": {
            "type": "object",
            "description": "Stores a summary of redemptions that have been applied to the voucher.",
            "properties": {
              "quantity": {
                "type": "integer",
                "default": null,
                "description": "How many times a voucher can be redeemed. A `null` value means unlimited."
              },
              "redeemed_quantity": {
                "type": "integer",
                "example": 1,
                "description": "How many times a voucher has already been redeemed."
              },
              "redeemed_amount": {
                "type": "integer",
                "example": 100000,
                "description": "Total Amount redeemed by the voucher. Value is multiplied by 100 to precisely represent 2 decimal places. For example, $100 balance is written as 10000."
              },
              "object": {
                "type": "string",
                "default": "list",
                "description": "The type of object represented is by default `list`. To get this list, you need to make a call to the endpoint returned in the url attribute."
              },
              "url": {
                "type": "string",
                "example": "/v1/vouchers/WVPblOYX/redemptions?page=1&limit=10",
                "description": "The endpoint where this list of redemptions can be accessed using a GET method. `/v1/vouchers/{voucher_code}/redemptions`"
              }
            }
          },
          "publish": {
            "type": "object",
            "description": "This object stores a summary of publish events: an events counter and an endpoint which can be called to return details of each event.  A publication is required for loyalty cards and referral codes. This object gets updated whenever a voucher has been published. Publication means assigning a code to a particular customer. Typically, a publication is made by distributing your codes to your customers, e.g. through Export to MailChimp or publish voucher API method. \n\n<!-- title: My Table Title -->\n\n| Required | Optional |\n| -------- | :------: |\n| `type`:`LOYALTY_CARD` |  `type`:`DISCOUNT_VOUCHER`   | \n| `is_referral_code`:`true`      |    `type`:`GIFT_VOUCHER`   |\n",
            "properties": {
              "object": {
                "type": "string",
                "default": "list",
                "description": "The type of object represented is by default `list`. To get this list, you need to make a call to the endpoint returned in the `url` attribute."
              },
              "count": {
                "type": "integer",
                "example": 0,
                "description": "Publication events counter."
              },
              "url": {
                "type": "string",
                "example": "/v1/vouchers/WVPblOYX/publications?page=1&limit=10",
                "description": "The endpoint where this list of publications can be accessed using a GET method. `/v1/vouchers/{voucher_code}/publications`"
              }
            }
          },
          "object": {
            "type": "string",
            "description": "The type of object represented by JSON. Default is `voucher`.",
            "default": "voucher"
          }
        }
      },
      "1_req_vouchers__POST": {
        "title": "Create Voucher Request Body",
        "type": "object",
        "description": "Request body schema for creating a voucher.",
        "examples": [
          {
            "category": "New Customers",
            "code": "WELCOME-COUPON",
            "type": "DISCOUNT_VOUCHER",
            "campaign_id": "camp_Y6dLsYIZloGqP8izufXY6SSJ",
            "discount": {
              "percent_off": 10,
              "type": "PERCENT",
              "effect": "APPLY_TO_ORDER"
            },
            "start_date": "2016-01-01T00:00:00Z",
            "expiration_date": "2022-12-31T23:59:59Z",
            "validity_timeframe": {
              "duration": "PT1H",
              "interval": "P2D"
            },
            "validity_day_of_week": [
              1,
              2,
              3,
              4,
              5
            ],
            "active": false,
            "additional_info": "This voucher will remain inactive until enabled.",
            "redemption": {
              "quantity": 10
            },
            "metadata": {
              "test": true,
              "locale": "de-en"
            },
            "validation_rules": [
              "val_4j7DCRm2IS59"
            ]
          }
        ],
        "properties": {
          "code": {
            "type": "string",
            "example": "WVPblOYX",
            "description": "A code that identifies a voucher. Pattern can use all letters of the English alphabet, Arabic numerals, and special characters. Pass this attribute in the request body if you want to deliberately create a distinct code. Otherwise, use the `code_config` object to design rules that the Voucherify API should use to create a random code."
          },
          "campaign": {
            "type": "string",
            "example": "Gift Card Campaign",
            "description": "A unique campaign name, identifies the voucher's parent campaign. **Required** for `LOYALTY_CARD` type.",
            "default": null
          },
          "campaign_id": {
            "type": "string",
            "example": "camp_FNYR4jhqZBM9xTptxDGgeNBV",
            "description": "Assigned by the Voucherify API, identifies the voucher's parent campaign.",
            "default": null
          },
          "category": {
            "type": "string",
            "default": null,
            "description": "Tag defining the category that this voucher belongs to. Useful when listing vouchers using the List Vouchers endpoint."
          },
          "type": {
            "type": "string",
            "enum": [
              "GIFT_VOUCHER",
              "DISCOUNT_VOUCHER",
              "LOYALTY_CARD"
            ],
            "description": "Defines the type of voucher. "
          },
          "discount": {
            "default": null,
            "description": "Defines discount voucher; **required** when`type` is `DISCOUNT_VOUCHER`. Defaults to `null`. Type of discount:\n- `AMOUNT`\n- `PERCENT`\n- `UNIT`\n- `FIXED`\n\nA Free Shipping discount is a special instance of the  `UNIT` type discount.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/1_obj_voucher_object_discount_amount_POST"
              },
              {
                "$ref": "#/components/schemas/1_obj_voucher_object_discount_percentage_POST"
              },
              {
                "$ref": "#/components/schemas/1_obj_voucher_object_discount_fixed_POST"
              },
              {
                "$ref": "#/components/schemas/1_obj_voucher_object_discount_unit_one_POST"
              },
              {
                "$ref": "#/components/schemas/1_obj_voucher_object_discount_unit_multiple_POST"
              },
              {
                "$ref": "#/components/schemas/1_obj_voucher_object_discount_shipping_POST"
              }
            ]
          },
          "gift": {
            "default": null,
            "type": "object",
            "description": "Defines gift card; **required** when type parameter is `GIFT_VOUCHER`.",
            "properties": {
              "amount": {
                "type": "integer",
                "example": 10000,
                "description": "Total gift card income. Value is multiplied by 100 to precisely represent 2 decimal places. For example, $100 amount is written as 10000."
              },
              "effect": {
                "type": "string",
                "enum": [
                  "APPLY_TO_ORDER",
                  "APPLY_TO_ITEMS"
                ],
                "description": "Defines how the credits are applied to the customer's order"
              }
            }
          },
          "loyalty_card": {
            "default": null,
            "type": "object",
            "description": "Defines loyalty card; **required** when type parameter is `LOYALTY_CARD`.",
            "properties": {
              "points": {
                "type": "integer",
                "example": 7000,
                "description": "Total points incurred over lifespan of loyalty card."
              }
            }
          },
          "start_date": {
            "type": "string",
            "example": "2021-12-01T00:00:00.000Z",
            "format": "date-time",
            "description": "Start date defines when the code starts to be active. Activation timestamp in ISO 8601 format. Voucher is *inactive before* this date."
          },
          "expiration_date": {
            "type": "string",
            "example": "2021-12-31T00:00:00.000Z",
            "format": "date-time",
            "description": "Expiration date defines when the code expires. Expiration timestamp in ISO 8601 format.  Voucher is *inactive after* this date."
          },
          "validity_timeframe": {
            "type": "object",
            "description": "Set recurrent time periods when the voucher is active. For example, valid for 1 hour every other day.`start_date` **required** when including the `validity_timeframe`.",
            "default": null,
            "properties": {
              "duration": {
                "type": "string",
                "example": "PT1H",
                "description": "Defines the amount of time the voucher will be active in ISO 8601 format. For example, a voucher with a `duration` of `PT1H` will be valid for a duration of one hour."
              },
              "interval": {
                "type": "string",
                "example": "P2D",
                "description": "Defines the intervening time between two time points in ISO 8601 format, expressed as a duration. For example, a voucher with an `interval` of `P2D` will be active every other day."
              }
            }
          },
          "validity_day_of_week": {
            "type": "array",
            "default": null,
            "enum": [
              [
                0
              ],
              [
                1
              ],
              [
                2
              ],
              [
                3
              ],
              [
                4
              ],
              [
                5
              ],
              [
                6
              ]
            ],
            "description": "Integer array corresponding to the particular days of the week in which the voucher is valid.\n\n- `0`  Sunday  \n- `1`  Monday  \n- `2`  Tuesday  \n- `3`  Wednesday  \n- `4`  Thursday  \n- `5`  Friday  \n- `6`  Saturday  ",
            "items": {
              "type": "integer",
              "example": "[ 1, 2 ]"
            }
          },
          "active": {
            "type": "boolean",
            "description": "A flag to toggle the voucher on or off. You can disable a voucher even though it's within the active period defined by the `start_date` and `expiration_date`.  \n\n- `true` indicates an *active* voucher\n- `false` indicates an *inactive* voucher"
          },
          "additional_info": {
            "type": "string",
            "default": null,
            "description": "An optional field to keep any extra textual information about the code such as a code description and details."
          },
          "metadata": {
            "type": "object",
            "description": "The metadata object stores all custom attributes assigned to the code. A set of key/value pairs that you can attach to a voucher object. It can be useful for storing additional information about the voucher in a structured format."
          },
          "validation_rules": {
            "type": "array",
            "description": "Array containing the id of the validation rule associated with the voucher.",
            "items": {
              "type": "string",
              "example": "[val_4j7DCRm2IS59]"
            }
          },
          "redemption": {
            "type": "object",
            "description": "Stores the quantity of redemptions that can be applied to the voucher.",
            "properties": {
              "quantity": {
                "type": "integer",
                "default": null,
                "description": "How many times a voucher can be redeemed. A `null` value means unlimited."
              }
            }
          },
          "code_config": {
            "type": "object",
            "description": "Defines code's pattern (prefix, suffix, length, charset, etc). Pass this attribute in the request body if you want to design rules that the Voucherify API should use to create a random code. Otherwise, use the `code` object to define a distinct code.",
            "properties": {
              "length": {
                "type": "string",
                "description": "Number of characters in a generated code (excluding prefix and postfix)."
              },
              "charset": {
                "type": "string",
                "description": "Characters that can appear in the code.  \n\nExamples:\n\n- Alphanumeric: `0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ` \n- Alphabetic: `abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ` \n- Alphabetic Lowercase: `abcdefghijklmnopqrstuvwxyz` \n- Alphabetic Uppercase: `ABCDEFGHIJKLMNOPQRSTUVWXYZ` \n- Numbers: `0123456789`  \n- Custom: a custom character set"
              },
              "prefix": {
                "type": "string",
                "description": "A text appended before the code."
              },
              "postfix": {
                "type": "string",
                "description": "A text appended after the code."
              },
              "pattern": {
                "type": "string",
                "description": "A pattern for codes where hashes (#) will be replaced with random characters. Overrides `length`."
              }
            }
          }
        }
      },
      "1_req_vouchers_code_POST": {
        "title": "Create Voucher Request Body",
        "type": "object",
        "description": "Request body schema for creating a voucher.",
        "examples": [],
        "properties": {
          "campaign": {
            "type": [
              "string",
              "null"
            ],
            "example": "Gift Card Campaign",
            "description": "A unique campaign name, identifies the voucher's parent campaign. **Required** for `LOYALTY_CARD` type."
          },
          "campaign_id": {
            "type": [
              "string",
              "null"
            ],
            "example": "camp_FNYR4jhqZBM9xTptxDGgeNBV",
            "description": "Assigned by the Voucherify API, identifies the voucher's parent campaign."
          },
          "category": {
            "type": [
              "string",
              "null"
            ],
            "description": "Tag defining the category that this voucher belongs to. Useful when listing vouchers using the [List Vouchers](OpenAPI.json/paths/~1vouchers/get) endpoint."
          },
          "type": {
            "type": "string",
            "enum": [
              "GIFT_VOUCHER",
              "DISCOUNT_VOUCHER",
              "LOYALTY_CARD"
            ],
            "description": "Defines the type of voucher. "
          },
          "discount": {
            "default": null,
            "oneOf": [
              {
                "$ref": "#/components/schemas/1_obj_voucher_object_discount_amount_POST"
              },
              {
                "$ref": "#/components/schemas/1_obj_voucher_object_discount_percentage_POST"
              },
              {
                "$ref": "#/components/schemas/1_obj_voucher_object_discount_fixed_POST"
              },
              {
                "$ref": "#/components/schemas/1_obj_voucher_object_discount_unit_one_POST"
              },
              {
                "$ref": "#/components/schemas/1_obj_voucher_object_discount_unit_multiple_POST"
              },
              {
                "$ref": "#/components/schemas/1_obj_voucher_object_discount_shipping_POST"
              }
            ],
            "description": "Defines discount voucher; **required** when`type` is `DISCOUNT_VOUCHER`. Defaults to `null`. Type of discount:\n- `AMOUNT`\n- `PERCENT`\n- `UNIT`\n- `FIXED`\n\nA Free Shipping discount is a special instance of the  `UNIT` type discount."
          },
          "gift": {
            "default": null,
            "type": "object",
            "description": "Defines gift card; **required** when type parameter is `GIFT_VOUCHER`.",
            "properties": {
              "amount": {
                "type": "integer",
                "example": 10000,
                "description": "Total voucher income. Value is multiplied by 100 to precisely represent 2 decimal places. For example, $100 amount is written as 10000."
              },
              "effect": {
                "type": "string",
                "enum": [
                  "APPLY_TO_ORDER",
                  "APPLY_TO_ITEMS"
                ],
                "description": "Defines how the credits are applied to the customer's order"
              }
            }
          },
          "loyalty_card": {
            "default": null,
            "type": "object",
            "description": "Defines loyalty card; **required** when type parameter is `LOYALTY_CARD`.",
            "properties": {
              "points": {
                "type": "integer",
                "example": 7000,
                "description": "Total points incurred over lifespan of loyalty card."
              }
            }
          },
          "start_date": {
            "type": "string",
            "example": "2021-12-01T00:00:00.000Z",
            "format": "date-time",
            "description": "Start date defines when the code starts to be active. Activation timestamp in ISO 8601 format. Voucher is *inactive before* this date."
          },
          "expiration_date": {
            "type": "string",
            "example": "2021-12-31T00:00:00.000Z",
            "format": "date-time",
            "description": "Expiration date defines when the code expires. Expiration timestamp in ISO 8601 format.  Voucher is *inactive after* this date."
          },
          "validity_timeframe": {
            "type": [
              "object",
              "null"
            ],
            "description": "Set recurrent time periods when the voucher is active. For example, valid for 1 hour every other day.`start_date` **required** when including the `validity_timeframe`.",
            "properties": {
              "duration": {
                "type": "string",
                "example": "PT1H",
                "description": "Defines the amount of time the voucher will be active in ISO 8601 format. For example, a voucher with a `duration` of `PT1H` will be valid for a duration of one hour."
              },
              "interval": {
                "type": "string",
                "example": "P2D",
                "description": "Defines the intervening time between two time points in ISO 8601 format, expressed as a duration. For example, a voucher with an `interval` of `P2D` will be active every other day."
              }
            }
          },
          "validity_day_of_week": {
            "type": "array",
            "description": "Integer array corresponding to the particular days of the week in which the voucher is valid; can be a combination of any of the following integers:\n\n- `0`  Sunday  \n- `1`  Monday  \n- `2`  Tuesday  \n- `3`  Wednesday  \n- `4`  Thursday  \n- `5`  Friday  \n- `6`  Saturday  ",
            "items": {
              "type": "integer",
              "minimum": 0,
              "maximum": 6
            }
          },
          "active": {
            "type": "boolean",
            "description": "A flag to toggle the voucher on or off. You can disable a voucher even though it's within the active period defined by the `start_date` and `expiration_date`.  \n\n- `true` indicates an *active* voucher\n- `false` indicates an *inactive* voucher"
          },
          "additional_info": {
            "type": [
              "string",
              "null"
            ],
            "description": "An optional field to keep any extra textual information about the code such as a code description and details."
          },
          "metadata": {
            "type": "object",
            "description": "The metadata object stores all custom attributes assigned to the code. A set of key/value pairs that you can attach to a voucher object. It can be useful for storing additional information about the voucher in a structured format."
          },
          "validation_rules": {
            "type": "array",
            "description": "Array containing the ID of the validation rule associated with the voucher.",
            "items": {
              "type": "string",
              "example": "[val_4j7DCRm2IS59]"
            }
          },
          "redemption": {
            "type": "object",
            "description": "Stores the quantity of redemptions that can be applied to the voucher.",
            "properties": {
              "quantity": {
                "type": [
                  "integer",
                  "null"
                ],
                "default": null,
                "description": "How many times a voucher can be redeemed. A `null` value means unlimited."
              }
            }
          }
        }
      },
      "1_res_vouchers_GET": {
        "title": "List vouchers",
        "type": "object",
        "description": "Array list of vouchers",
        "examples": [],
        "properties": {
          "object": {
            "type": "string",
            "default": "list",
            "description": "The type of object represented by JSON. Default is `list`."
          },
          "data_ref": {
            "type": "string",
            "default": "vouchers"
          },
          "vouchers": {
            "type": "array",
            "description": "A dictionary that contains an array of  vouchers. Each entry in the array is a separate voucher object.",
            "items": {
              "$ref": "#/components/schemas/1_obj_voucher_object"
            }
          },
          "total": {
            "type": "integer",
            "example": 20,
            "description": "Returns how many vouchers in the project meet the limits defined by the query parameter definitions."
          }
        }
      },
      "1_req_vouchers_code_PUT": {
        "title": "Update Voucher Request Body",
        "type": "object",
        "description": "Request body schema for updating a voucher.",
        "examples": [],
        "properties": {
          "category": {
            "type": "string",
            "default": null,
            "description": "Tag defining the category that this voucher belongs to. Useful when listing vouchers using the List Vouchers endpoint."
          },
          "discount": {
            "default": null,
            "oneOf": [
              {
                "$ref": "#/components/schemas/1_obj_voucher_object_discount_amount_PUT"
              },
              {
                "$ref": "#/components/schemas/1_obj_voucher_object_discount_percentage_PUT"
              },
              {
                "$ref": "#/components/schemas/1_obj_voucher_object_discount_fixed_PUT"
              },
              {
                "$ref": "#/components/schemas/1_obj_voucher_object_discount_unit_one_PUT"
              },
              {
                "$ref": "#/components/schemas/1_obj_voucher_object_discount_unit_multiple_PUT"
              },
              {
                "$ref": "#/components/schemas/1_obj_voucher_object_discount_shipping_PUT"
              }
            ],
            "description": "Defines discount voucher; **required** when`type` is `DISCOUNT_VOUCHER`. Defaults to `null`. Type of discount:\n- `AMOUNT`\n- `PERCENT`\n- `UNIT`\n- `FIXED`\n\nA Free Shipping discount is a special instance of the  `UNIT` type discount."
          },
          "gift": {
            "default": null,
            "type": "object",
            "description": "Defines gift card; **required** when type parameter is `GIFT_VOUCHER`.",
            "properties": {
              "amount": {
                "type": "integer",
                "example": 10000,
                "description": "Total voucher income. Value is multiplied by 100 to precisely represent 2 decimal places. For example, $100 amount is written as 10000."
              },
              "effect": {
                "type": "string",
                "enum": [
                  "APPLY_TO_ORDER",
                  "APPLY_TO_ITEMS"
                ],
                "description": "Defines how the credits are applied to the customer's order"
              }
            }
          },
          "loyalty_card": {
            "default": null,
            "type": "object",
            "description": "Defines loyalty card; **required** when type parameter is `LOYALTY_CARD`.",
            "properties": {
              "points": {
                "type": "integer",
                "example": 7000,
                "description": "Total points incurred over lifespan of loyalty card."
              }
            }
          },
          "start_date": {
            "type": "string",
            "example": "2021-12-01T00:00:00.000Z",
            "format": "date-time",
            "description": "Start date defines when the code starts to be active. Activation timestamp in ISO 8601 format. Voucher is *inactive before* this date."
          },
          "expiration_date": {
            "type": "string",
            "example": "2021-12-31T00:00:00.000Z",
            "format": "date-time",
            "description": "Expiration date defines when the code expires. Expiration timestamp in ISO 8601 format.  Voucher is *inactive after* this date."
          },
          "validity_timeframe": {
            "type": "object",
            "description": "Set recurrent time periods when the voucher is active. For example, valid for 1 hour every other day.`start_date` **required** when including the `validity_timeframe`.",
            "default": null,
            "properties": {
              "duration": {
                "type": "string",
                "example": "PT1H",
                "description": "Defines the amount of time the voucher will be active in ISO 8601 format. For example, a voucher with a `duration` of `PT1H` will be valid for a duration of one hour."
              },
              "interval": {
                "type": "string",
                "example": "P2D",
                "description": "Defines the intervening time between two time points in ISO 8601 format, expressed as a duration. For example, a voucher with an `interval` of `P2D` will be active every other day."
              }
            }
          },
          "validity_day_of_week": {
            "type": "array",
            "default": null,
            "enum": [
              [
                0
              ],
              [
                1
              ],
              [
                2
              ],
              [
                3
              ],
              [
                4
              ],
              [
                5
              ],
              [
                6
              ]
            ],
            "description": "Integer array corresponding to the particular days of the week in which the voucher is valid.\n\n- `0`  Sunday  \n- `1`  Monday  \n- `2`  Tuesday  \n- `3`  Wednesday  \n- `4`  Thursday  \n- `5`  Friday  \n- `6`  Saturday  ",
            "items": {
              "type": "integer",
              "example": "[ 1, 2 ]"
            }
          },
          "active": {
            "type": "boolean",
            "description": "A flag to toggle the voucher on or off. You can disable a voucher even though it's within the active period defined by the `start_date` and `expiration_date`.  \n\n- `true` indicates an *active* voucher\n- `false` indicates an *inactive* voucher"
          },
          "additional_info": {
            "type": "string",
            "default": null,
            "description": "An optional field to keep any extra textual information about the code such as a code description and details."
          },
          "metadata": {
            "type": "object",
            "description": "The metadata object stores all custom attributes assigned to the code. A set of key/value pairs that you can attach to a voucher object. It can be useful for storing additional information about the voucher in a structured format."
          }
        }
      },
      "1_req_vouchers_metadata_async": {
        "title": "Update Vouchers' Metadata in Bulk Request Body",
        "type": "object",
        "description": "Request body schema for `vouchers/metadata/async`.",
        "x-examples": {
          "example-1": {
            "$ref": "#/components/examples/req_vouchers_metadata_1"
          },
          "example-2": {
            "$ref": "#/components/examples/req_vouchers_metadata_2"
          }
        },
        "properties": {
          "codes": {
            "type": "array",
            "description": "A string array of voucher codes.",
            "example": [
              "PROMO-CODE810",
              "PROMO-CODE726"
            ],
            "items": {
              "type": "string"
            }
          },
          "metadata": {
            "type": "object",
            "description": "The metadata object stores all custom attributes assigned to the code. A set of key/value pairs that you can attach to a voucher object. It can be useful for storing additional information about the voucher in a structured format.",
            "example": {
              "lang": "en",
              "authorized_internally": true
            }
          }
        },
        "required": [
          "codes",
          "metadata"
        ]
      },
      "1_obj_voucher_object_discount_amount": {
        "title": "Amount",
        "type": "object",
        "description": "Amount discount type.",
        "properties": {
          "type": {
            "type": "string",
            "default": "AMOUNT",
            "description": "Applies an amount discount"
          },
          "amount_off": {
            "type": "integer",
            "example": 100,
            "description": "Amount taken off the subtotal of a price. Value is multiplied by 100 to precisely represent 2 decimal places. For example, a $10 discount is written as 1000."
          },
          "effect": {
            "type": "string",
            "enum": [
              "APPLY_TO_ORDER",
              "APPLY_TO_ITEMS",
              "APPLY_TO_ITEMS_PROPORTIONALLY",
              "APPLY_TO_ITEMS_PROPORTIONALLY_BY_QUANTITY"
            ],
            "description": "Defines how the discount is applied to the customer's order"
          }
        }
      },
      "1_obj_voucher_object_discount_percentage": {
        "title": "Percentage",
        "type": "object",
        "description": "Percentage discount type.",
        "properties": {
          "type": {
            "type": "string",
            "default": "PERCENT",
            "description": "Applies a percentage discount"
          },
          "percent_off": {
            "type": "integer",
            "example": 10,
            "description": "Percent taken off the subtotal amount",
            "minimum": 0,
            "maximum": 100
          },
          "effect": {
            "type": "string",
            "enum": [
              "APPLY_TO_ORDER",
              "APPLY_TO_ITEMS"
            ],
            "description": "Defines how the discount is applied to the customer's order"
          }
        }
      },
      "1_obj_voucher_object_discount_fixed": {
        "title": "Fixed",
        "description": "Fixed discount type.",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "default": "FIXED",
            "description": "Sets a fixed total on cart or item(s) and then calculates the discount to apply"
          },
          "fixed_amount": {
            "type": "integer",
            "description": "Amount taken off the subtotal of a price. Value is multiplied by 100 to precisely represent 2 decimal places. For example, a $10 discount is written as 1000.",
            "example": 1000
          },
          "effect": {
            "type": "string",
            "enum": [
              "APPLY_TO_ORDER",
              "APPLY_TO_ITEMS"
            ],
            "description": "- **APPLY\\_TO\\_ORDER**: Set fixed total on the whole cart. Discount will be calculated dynamically, based on fixed amount value. For example, if the fixed amount is set to equal $10 and order amount equals $25, then the calculated discount will be $15.  \n- **APPLY\\_TO\\_ITEMS**: This type of deal applies a new price for line items. \n  Default rules:\n   - During redemption, prices will change only if the new one is lower than the old one.\n    - If a product price in the collection and the new product price you have set up differs, then the new product price will be passed during the redemption.\n    - When a product is in two collections, we always change the price to the lowest price.\n    - The new price for products with several SKUs will force the price change for SKUs if their price is higher than the new price."
          }
        }
      },
      "1_obj_voucher_object_discount_unit_one": {
        "title": "Unit, single item",
        "type": "object",
        "description": "Single item type.",
        "properties": {
          "type": {
            "type": "string",
            "default": "UNIT",
            "description": "Applies a full value discount to item(s)"
          },
          "unit_off": {
            "type": "number",
            "description": "Number of units to subtract from the subtotal",
            "example": 1,
            "format": "float"
          },
          "unit_type": {
            "type": "string",
            "description": "The product deemed as free, chosen from product  inventory (e.g. time, items)",
            "example": "prod_0a9f9aeddb019a42db"
          },
          "effect": {
            "type": "string",
            "enum": [
              "ADD_NEW_ITEMS",
              "ADD_MISSING_ITEMS"
            ],
            "default": "ADD_MISSING_ITEMS",
            "description": "Defines how the unit is added to the customer's order"
          }
        }
      },
      "1_obj_voucher_object_discount_unit_multiple": {
        "title": "Unit, multiple items",
        "type": "object",
        "description": "Multiple item types.",
        "properties": {
          "type": {
            "type": "string",
            "description": "Applies a full value discount to item(s)",
            "default": "UNIT"
          },
          "effect": {
            "type": "string",
            "default": "ADD_MANY_ITEMS",
            "description": "Defines the effect for adding multiple item types."
          },
          "units": {
            "type": "array",
            "description": "Array of objects defining items to be offered for free. Each item type can have a different discount effect assigned.",
            "items": {
              "type": "object",
              "description": "Object defining a unit discount.",
              "properties": {
                "unit_off": {
                  "type": "integer",
                  "description": "Number of units to subtract from the subtotal",
                  "example": 1
                },
                "unit_type": {
                  "type": "string",
                  "description": "The product deemed as free, chosen from product  inventory (e.g. time, items)",
                  "example": "prod_0a9f9aeddb019a42db"
                },
                "effect": {
                  "type": "string",
                  "enum": [
                    "ADD_NEW_ITEMS",
                    "ADD_MISSING_ITEMS"
                  ],
                  "description": "Defines how the unit is added to the customer's order"
                }
              }
            }
          }
        }
      },
      "1_obj_voucher_object_discount_shipping": {
        "title": "Shipping",
        "description": "Shipping discount type.",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "default": "UNIT",
            "description": "Applies a full value discount to item(s)"
          },
          "unit_off": {
            "type": "number",
            "format": "float",
            "description": "Subtracts 1 shipping item from the subtotal",
            "default": 1
          },
          "unit_type": {
            "type": "string",
            "description": "The shipping product deemed as free",
            "default": "prod_5h1pp1ng"
          },
          "effect": {
            "type": "string",
            "enum": [
              "ADD_MISSING_ITEMS"
            ],
            "description": "Defines how the unit is added to the customer's order",
            "default": "ADD_MISSING_ITEMS"
          }
        }
      },
      "1_obj_voucher_object_discount_amount_POST": {
        "title": "Amount",
        "type": "object",
        "description": "Create amount discount type.",
        "properties": {
          "type": {
            "type": "string",
            "default": "AMOUNT",
            "description": "Applies an amount discount"
          },
          "amount_off": {
            "type": "integer",
            "example": 100,
            "description": "Amount taken off the subtotal of a price. Value is multiplied by 100 to precisely represent 2 decimal places. For example, a $10 discount is written as 1000."
          },
          "effect": {
            "type": "string",
            "enum": [
              "APPLY_TO_ORDER",
              "APPLY_TO_ITEMS",
              "APPLY_TO_ITEMS_PROPORTIONALLY",
              "APPLY_TO_ITEMS_PROPORTIONALLY_BY_QUANTITY"
            ],
            "description": "Defines how the discount is applied to the customer's order"
          }
        }
      },
      "1_obj_voucher_object_discount_percentage_POST": {
        "title": "Percentage",
        "type": "object",
        "description": "Create percentage discount type.",
        "properties": {
          "type": {
            "type": "string",
            "default": "PERCENT",
            "description": "Applies a percentage discount"
          },
          "percent_off": {
            "type": "integer",
            "example": 10,
            "description": "Percent taken off the subtotal amount",
            "minimum": 0,
            "maximum": 100
          },
          "effect": {
            "type": "string",
            "enum": [
              "APPLY_TO_ORDER",
              "APPLY_TO_ITEMS"
            ],
            "description": "Defines how the discount is applied to the customer's order"
          }
        }
      },
      "1_obj_voucher_object_discount_fixed_POST": {
        "title": "Fixed",
        "description": "Create fixed discount type.",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "default": "FIXED",
            "description": "Sets a fixed total on cart or item(s) and then calculates the discount to apply"
          },
          "fixed_amount": {
            "type": "integer",
            "description": "Amount taken off the subtotal of a price. Value is multiplied by 100 to precisely represent 2 decimal places. For example, a $10 discount is written as 1000.",
            "example": 1000
          },
          "effect": {
            "type": "string",
            "enum": [
              "APPLY_TO_ORDER",
              "APPLY_TO_ITEMS"
            ],
            "description": "- **APPLY\\_TO\\_ORDER**: Set fixed total on the whole cart. Discount will be calculated dynamically, based on fixed amount value. For example, if the fixed amount is set to equal $10 and order amount equals $25, then the calculated discount will be $15.  \n- **APPLY\\_TO\\_ITEMS**: This type of deal applies a new price for line items. \n  Default rules:\n   - During redemption, prices will change only if the new one is lower than the old one.\n    - If a product price in the collection and the new product price you have set up differs, then the new product price will be passed during the redemption.\n    - When a product is in two collections, we always change the price to the lowest price.\n    - The new price for products with several SKUs will force the price change for SKUs if their price is higher than the new price."
          }
        }
      },
      "1_obj_voucher_object_discount_unit_one_POST": {
        "title": "Unit, single item",
        "type": "object",
        "description": "Define single item type.",
        "properties": {
          "type": {
            "type": "string",
            "default": "UNIT",
            "description": "Applies a full value discount to item(s)"
          },
          "unit_off": {
            "type": "number",
            "description": "Number of units to subtract from the subtotal",
            "example": 1,
            "format": "float"
          },
          "unit_type": {
            "type": "string",
            "description": "The product deemed as free, chosen from product  inventory (e.g. time, items)",
            "example": "prod_0a9f9aeddb019a42db"
          },
          "effect": {
            "type": "string",
            "enum": [
              "ADD_NEW_ITEMS",
              "ADD_MISSING_ITEMS"
            ],
            "default": "ADD_MISSING_ITEMS",
            "description": "Defines how the unit is added to the customer's order"
          }
        }
      },
      "1_obj_voucher_object_discount_unit_multiple_POST": {
        "title": "Unit, multiple items",
        "type": "object",
        "description": "Define multiple item types.",
        "properties": {
          "type": {
            "type": "string",
            "description": "Applies a full value discount to item(s)",
            "default": "UNIT"
          },
          "effect": {
            "type": "string",
            "default": "ADD_MANY_ITEMS",
            "description": "Defines the effect for adding multiple item types."
          },
          "units": {
            "type": "array",
            "description": "Array of objects defining items to be offered for free. Each item type can have a different discount effect assigned.",
            "items": {
              "type": "object",
              "description": "Object defining a unit discount.",
              "properties": {
                "unit_off": {
                  "type": "integer",
                  "description": "Number of units to subtract from the subtotal",
                  "example": 1
                },
                "unit_type": {
                  "type": "string",
                  "description": "The product deemed as free, chosen from product  inventory (e.g. time, items)",
                  "example": "prod_0a9f9aeddb019a42db"
                },
                "effect": {
                  "type": "string",
                  "enum": [
                    "ADD_NEW_ITEMS",
                    "ADD_MISSING_ITEMS"
                  ],
                  "description": "Defines how the unit is added to the customer's order"
                }
              }
            }
          }
        }
      },
      "1_obj_voucher_object_discount_shipping_POST": {
        "title": "Shipping",
        "description": "Create shipping discount type.",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "default": "UNIT",
            "description": "Applies a full value discount to item(s)"
          },
          "unit_off": {
            "type": "number",
            "format": "float",
            "description": "Subtracts 1 shipping item from the subtotal",
            "default": 1
          },
          "unit_type": {
            "type": "string",
            "description": "The shipping product deemed as free",
            "default": "prod_5h1pp1ng"
          },
          "effect": {
            "type": "string",
            "enum": [
              "ADD_MISSING_ITEMS"
            ],
            "description": "Defines how the unit is added to the customer's order",
            "default": "ADD_MISSING_ITEMS"
          }
        }
      },
      "1_obj_voucher_object_discount_amount_PUT": {
        "title": "Amount",
        "type": "object",
        "description": "Update amount discount type.",
        "properties": {
          "type": {
            "type": "string",
            "default": "AMOUNT",
            "description": "Applies an amount type discount. **Requires** child attribute\n `type`=`AMOUNT` when modifying this discount."
          },
          "amount_off": {
            "type": "integer",
            "example": 100,
            "description": "Amount taken off the subtotal of a price. Value is multiplied by 100 to precisely represent 2 decimal places. For example, a $10 discount is written as 1000."
          },
          "effect": {
            "type": "string",
            "enum": [
              "APPLY_TO_ORDER",
              "APPLY_TO_ITEMS",
              "APPLY_TO_ITEMS_PROPORTIONALLY",
              "APPLY_TO_ITEMS_PROPORTIONALLY_BY_QUANTITY"
            ],
            "description": "Defines how the discount is applied to the customer's order"
          }
        }
      },
      "1_obj_voucher_object_discount_percentage_PUT": {
        "title": "Percentage",
        "type": "object",
        "description": "Update percentage discount type.",
        "properties": {
          "percent_off": {
            "type": "integer",
            "example": 10,
            "description": "Percent taken off the subtotal amount",
            "minimum": 0,
            "maximum": 100
          },
          "effect": {
            "type": "string",
            "enum": [
              "APPLY_TO_ORDER",
              "APPLY_TO_ITEMS"
            ],
            "description": "Defines how the discount is applied to the customer's order"
          }
        }
      },
      "1_obj_voucher_object_discount_fixed_PUT": {
        "title": "Fixed",
        "type": "object",
        "description": "Update fixed discount type.",
        "properties": {
          "type": {
            "type": "string",
            "default": "FIXED",
            "description": "Applies a fixed type discount. **Requires** child attribute\n `type`=`FIXED` when modifying this discount."
          },
          "fixed_amount": {
            "description": "Amount taken off the subtotal of a price. Value is multiplied by 100 to precisely represent 2 decimal places. For example, a $10 discount is written as 1000.",
            "example": "1000",
            "type": "integer"
          },
          "effect": {
            "type": "string",
            "enum": [
              "APPLY_TO_ORDER",
              "APPLY_TO_ITEMS"
            ],
            "description": "- **APPLY\\_TO\\_ORDER**: Set fixed total on the whole cart. Discount will be calculated dynamically, based on fixed amount value. For example, if the fixed amount is set to equal $10 and order amount equals $25, then the calculated discount will be $15.  \n- **APPLY\\_TO\\_ITEMS**: This type of deal applies a new price for line items. \n  Default rules:\n   - During redemption, prices will change only if the new one is lower than the old one.\n    - If a product price in the collection and the new product price you have set up differs, then the new product price will be passed during the redemption.\n    - When a product is in two collections, we always change the price to the lowest price.\n    - The new price for products with several SKUs will force the price change for SKUs if their price is higher than the new price."
          }
        }
      },
      "1_obj_voucher_object_discount_unit_one_PUT": {
        "title": "Unit, single item",
        "type": "object",
        "description": "Define single item type.",
        "properties": {
          "type": {
            "type": "string",
            "description": "Applies a full value discount to item(s). **Requires** child attribute `type`=`UNIT` when modifying this discount.",
            "default": "UNIT"
          },
          "unit_off": {
            "type": "number",
            "format": "float",
            "description": "Number of units to subtract from the subtotal",
            "example": 1
          },
          "unit_type": {
            "type": "string",
            "description": "The product deemed as free, chosen from product  inventory (e.g. time, items)",
            "example": "prod_0a9f9aeddb019a42db"
          },
          "effect": {
            "type": "string",
            "enum": [
              "ADD_MISSING_ITEMS",
              "ADD_NEW_ITEMS"
            ],
            "description": "Defines how the unit is added to the customer's order",
            "default": "ADD_MISSING_ITEMS"
          }
        }
      },
      "1_obj_voucher_object_discount_unit_multiple_PUT": {
        "title": "Unit, multiple items",
        "type": "object",
        "description": "Define multiple item types.",
        "properties": {
          "type": {
            "type": "string",
            "description": "Applies a full value discount to item(s)",
            "default": "UNIT"
          },
          "effect": {
            "type": "string",
            "default": "ADD_MANY_ITEMS",
            "description": "Defines the effect for adding multiple item types."
          },
          "units": {
            "type": "array",
            "description": "Array of objects defining items to be offered for free. Each item type can have a different discount effect assigned.",
            "items": {
              "type": "object",
              "description": "Object defining a unit discount.",
              "properties": {
                "unit_off": {
                  "type": "integer",
                  "description": "Number of units to subtract from the subtotal",
                  "example": 1
                },
                "unit_type": {
                  "type": "string",
                  "description": "The product deemed as free, chosen from product  inventory (e.g. time, items)",
                  "example": "prod_0a9f9aeddb019a42db"
                },
                "effect": {
                  "type": "string",
                  "enum": [
                    "ADD_NEW_ITEMS",
                    "ADD_MISSING_ITEMS"
                  ],
                  "description": "Defines how the unit is added to the customer's order"
                }
              }
            }
          }
        }
      },
      "1_obj_voucher_object_discount_shipping_PUT": {
        "title": "Shipping",
        "description": "Update shipping discount type.",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "default": "UNIT",
            "description": "Applies a full value discount to item(s)"
          },
          "unit_off": {
            "type": "number",
            "format": "float",
            "description": "Subtracts 1 shipping item from the subtotal",
            "default": 1
          },
          "unit_type": {
            "type": "string",
            "description": "The shipping product deemed as free",
            "default": "prod_5h1pp1ng"
          },
          "effect": {
            "type": "string",
            "enum": [
              "ADD_MISSING_ITEMS"
            ],
            "description": "Defines how the unit is added to the customer's order",
            "default": "ADD_MISSING_ITEMS"
          }
        }
      },
      "1_obj_vouchers_import_discount_amount": {
        "title": "Import amount discount type",
        "type": "object",
        "description": "Import amount discount type.",
        "properties": {
          "type": {
            "type": "string",
            "default": "AMOUNT",
            "description": "Applies an amount type discount. **Requires** child attribute\n `type`=`AMOUNT` when importing this discount."
          },
          "amount_off": {
            "type": "integer",
            "example": 100,
            "description": "Amount taken off the subtotal of a price. Value is multiplied by 100 to precisely represent 2 decimal places. For example, a $10 discount is written as 1000."
          },
          "effect": {
            "type": "string",
            "enum": [
              "APPLY_TO_ORDER",
              "APPLY_TO_ITEMS",
              "APPLY_TO_ITEMS_PROPORTIONALLY",
              "APPLY_TO_ITEMS_PROPORTIONALLY_BY_QUANTITY"
            ],
            "description": "Defines how the discount is applied to the customer's order"
          }
        },
        "required": [
          "type",
          "amount_off"
        ]
      },
      "1_obj_vouchers_import_discount_percentage": {
        "title": "Import percentage discount type",
        "type": "object",
        "description": "Import percentage discount type.",
        "properties": {
          "type": {
            "type": "string",
            "description": "Applies a percentage discount",
            "default": "PERCENT"
          },
          "percent_off": {
            "type": "integer",
            "example": 10,
            "description": "Percent taken off the subtotal amount",
            "minimum": 0,
            "maximum": 100
          },
          "effect": {
            "type": "string",
            "enum": [
              "APPLY_TO_ORDER",
              "APPLY_TO_ITEMS"
            ],
            "description": "Defines how the discount is applied to the customer's order"
          }
        },
        "required": [
          "type",
          "percent_off"
        ]
      },
      "1_obj_vouchers_import_discount_fixed": {
        "title": "Import fixed discount type",
        "type": "object",
        "description": "Import fixed discount type.",
        "properties": {
          "type": {
            "type": "string",
            "default": "FIXED",
            "description": "Applies a fixed type discount. **Requires** child attribute\n `type`=`FIXED` when updating this discount."
          },
          "fixed_amount": {
            "description": "Amount taken off the subtotal of a price. Value is multiplied by 100 to precisely represent 2 decimal places. For example, a $10 discount is written as 1000.",
            "example": "1000",
            "type": "integer"
          },
          "effect": {
            "type": "string",
            "enum": [
              "APPLY_TO_ORDER",
              "APPLY_TO_ITEMS"
            ],
            "description": "- **APPLY\\_TO\\_ORDER**: Set fixed total on the whole cart. Discount will be calculated dynamically, based on fixed amount value. For example, if fixed amount is set to equal $10 and order amount equals $25, then the calculated discount will be $15.  \n- **APPLY\\_TO\\_ITEMS**: This type of deal applies a new price for line items. \n  Default rules:\n   - During redemption, prices will change only if the new one is lower than the old one.\n    - If a product price in the collection and the new product price you have set up differs, then the new product price will be passed during the redemption.\n    - When a product is in two collections, we always change the price to the lowest.\n    - The new price for products with several SKUs will force the price change for SKUs if their price is higher than the new price."
          }
        },
        "required": [
          "type",
          "fixed_amount"
        ]
      },
      "1_obj_vouchers_import_discount_unit_one": {
        "title": "Import unit discount type, single item",
        "type": "object",
        "description": "Define single item type.",
        "properties": {
          "type": {
            "type": "string",
            "description": "Applies a full value discount to item(s). **Requires** child attribute `type`=`UNIT` when importing this discount.",
            "default": "UNIT"
          },
          "unit_off": {
            "type": "number",
            "format": "float",
            "description": "Number of units to subtract from the subtotal",
            "example": 1
          },
          "unit_type": {
            "type": "string",
            "description": "The product deemed as free, chosen from product  inventory (e.g. time, items)",
            "example": "prod_0a9f9aeddb019a42db"
          },
          "effect": {
            "type": "string",
            "enum": [
              "ADD_MISSING_ITEMS",
              "ADD_NEW_ITEMS"
            ],
            "description": "Defines how the unit is added to the customer's order",
            "default": "ADD_MISSING_ITEMS"
          }
        },
        "required": [
          "type",
          "unit_off"
        ]
      },
      "1_obj_vouchers_import_discount_unit_multiple": {
        "title": "Import unit discount type, multiple items",
        "type": "object",
        "description": "Define multiple item types.",
        "properties": {
          "type": {
            "type": "string",
            "description": "Applies a full value discount to item(s)",
            "default": "UNIT"
          },
          "effect": {
            "type": "string",
            "default": "ADD_MANY_ITEMS",
            "description": "Defines the effect for adding multiple item types."
          },
          "units": {
            "type": "array",
            "description": "Array of objects defining items to be offered for free. Each item type can have a different discount effect assigned.",
            "items": {
              "type": "object",
              "description": "Object defining a unit discount.",
              "properties": {
                "unit_off": {
                  "type": "integer",
                  "description": "Number of units to subtract from the subtotal",
                  "example": 1
                },
                "unit_type": {
                  "type": "string",
                  "description": "The product deemed as free, chosen from product  inventory (e.g. time, items)",
                  "example": "prod_0a9f9aeddb019a42db"
                },
                "effect": {
                  "type": "string",
                  "enum": [
                    "ADD_NEW_ITEMS",
                    "ADD_MISSING_ITEMS"
                  ],
                  "description": "Defines how the unit is added to the customer's order"
                }
              }
            }
          }
        },
        "required": [
          "type",
          "effect",
          "units"
        ]
      },
      "1_obj_vouchera_import_discount_shipping": {
        "title": "Import shipping discount type",
        "description": "Import shipping discount type.",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Applies a full value discount to item(s)",
            "default": "UNIT"
          },
          "unit_off": {
            "type": "number",
            "format": "float",
            "description": "Subtracts 1 shipping item from the subtotal",
            "default": 1
          },
          "unit_type": {
            "type": "string",
            "description": "The shipping product deemed as free",
            "default": "prod_5h1pp1ng"
          },
          "effect": {
            "type": "string",
            "enum": [
              "ADD_MISSING_ITEMS"
            ],
            "description": "Defines how the unit is added to the customer's order",
            "default": "ADD_MISSING_ITEMS"
          }
        },
        "required": [
          "type",
          "unit_off",
          "unit_type"
        ]
      },
      "1_req_vouchers_code_balance": {
        "title": "Add Gift Voucher Balance Request Body",
        "type": "object",
        "description": "Request body schema for `vouchers/{code}/balance`.",
        "properties": {
          "amount": {
            "type": "integer",
            "description": "The incremental amout to be added to the current balance on the gift card. Value is multiplied by 100 to precisely represent 2 decimal places. For example, $100 amount is written as 10000."
          }
        },
        "required": [
          "amount"
        ]
      },
      "1_res_vouchers_code_balance": {
        "description": "Response body schema for `vouchers/{code}/balance.`",
        "type": "object",
        "x-examples": {
          "example-1": {
            "amount": 100,
            "total": 10100,
            "balance": 10100,
            "type": "gift_voucher",
            "object": "balance",
            "related_object": {
              "type": "voucher",
              "id": "v_4Bd3aX7eXjHbe7Ef7on8YsLWBynsT4jq"
            }
          }
        },
        "examples": [],
        "title": "Add Gift Voucher Balance Response Body",
        "properties": {
          "amount": {
            "type": "integer",
            "description": "The incremental amout added to the current balance on the gift card. Value is multiplied by 100 to precisely represent 2 decimal places. For example, $100 amount is written as 10000."
          },
          "total": {
            "type": "integer"
          },
          "balance": {
            "type": "integer",
            "description": "The balance after adding an additional amount. Value is multiplied by 100 to precisely represent 2 decimal places. For example, $100 amount is written as 10000."
          },
          "type": {
            "type": "string",
            "description": "The type of voucher being modified.",
            "default": "gift_voucher"
          },
          "object": {
            "type": "string",
            "description": "The type of object represented by JSON. Default is `balance`.",
            "default": "balance"
          },
          "related_object": {
            "type": "object",
            "description": "Defines the object that is being modified with the values that are returned in the balance object.",
            "properties": {
              "type": {
                "type": "string",
                "description": "The object being modified.",
                "default": "voucher"
              },
              "id": {
                "type": "string",
                "description": "Identifies the voucher that is being modified, this is the id that was assigned by the Voucherify API.",
                "example": "v_4Bd3aX7eXjHbe7Ef7on8YsLWBynsT4jq"
              }
            }
          }
        }
      },
      "1_req_vouchers_import": {
        "title": "Import Vouchers Request Body",
        "type": "array",
        "description": "Request body schema for vouchers/import.",
        "items": {
          "anyOf": [
            {
              "$ref": "#/components/schemas/1_obj_vouchers_import_gift_voucher"
            },
            {
              "$ref": "#/components/schemas/1_obj_vouchers_import_discount_voucher"
            }
          ]
        }
      },
      "1_obj_vouchers_import_gift_voucher": {
        "title": "Import Gift Voucher",
        "type": "object",
        "description": "Object model for gift voucher object being imported.",
        "properties": {
          "code": {
            "type": "string",
            "description": "Value representing the imported code."
          },
          "category": {
            "type": "string",
            "description": "Tag defining the category that this voucher belongs to. Useful when listing vouchers using the List Vouchers endpoint."
          },
          "active": {
            "type": "boolean",
            "description": "A flag to toggle the voucher on or off. You can disable a voucher even though it's within the active period defined by the `start_date` and `expiration_date`.  \n\n- `true` indicates an *active* voucher\n- `false` indicates an *inactive* voucher"
          },
          "type": {
            "type": "string",
            "description": "Represents the voucher type.  ",
            "default": "gift_voucher"
          },
          "gift": {
            "type": "object",
            "properties": {
              "amount": {
                "type": "string",
                "description": "Total gift card income. Value is multiplied by 100 to precisely represent 2 decimal places. For example, $100 amount is written as 10000."
              }
            },
            "required": [
              "amount"
            ]
          },
          "start_date": {
            "type": "string",
            "description": "Activation timestamp in ISO 8601 format. Voucher is *inactive before* this date. Start date defines when the code starts to be active.",
            "enum": [
              "YYYY-MM-DD",
              "YYYY-MM-DDTHH",
              "YYYY-MM-DDTHH:mm",
              "YYYY-MM-DDTHH:mm:ss",
              "YYYY-MM-DDTHH:mm:ssZ",
              "YYYY-MM-DDTHH:mm:ssZ",
              "YYYY-MM-DDTHH:mm:ss.SSSZ"
            ]
          },
          "expiration_date": {
            "type": "string",
            "enum": [
              "YYYY-MM-DD",
              "YYYY-MM-DDTHH",
              "YYYY-MM-DDTHH:mm",
              "YYYY-MM-DDTHH:mm:ss",
              "YYYY-MM-DDTHH:mm:ssZ",
              "YYYY-MM-DDTHH:mm:ssZ",
              "YYYY-MM-DDTHH:mm:ss.SSSZ"
            ],
            "description": "Expiration date defines when the code expires. Expiration timestamp in ISO 8601 format.  Voucher is *inactive after* this date."
          },
          "redemption": {
            "type": "object",
            "description": "Stores the quantity of redemptions that can be applied to the voucher.",
            "properties": {
              "quantity": {
                "type": "integer",
                "description": "How many times a voucher can be redeemed. A `null` value means unlimited.",
                "example": 10
              }
            }
          },
          "additional_info": {
            "type": "string",
            "description": "An optional field to keep any extra textual information about the code such as a code description and details."
          },
          "metadata": {
            "type": "object",
            "description": "The metadata object stores all custom attributes assigned to the code. A set of key/value pairs that you can attach to a voucher object. It can be useful for storing additional information about the voucher in a structured format."
          }
        },
        "required": [
          "code"
        ]
      },
      "1_obj_vouchers_import_discount_voucher": {
        "title": "Import Discount Voucher",
        "type": "object",
        "description": "Object model for discount voucher object being imported.",
        "properties": {
          "code": {
            "type": "string",
            "description": "Value representing the imported code."
          },
          "category": {
            "type": "string",
            "description": "Tag defining the category that this voucher belongs to. Useful when listing vouchers using the List Vouchers endpoint."
          },
          "active": {
            "type": "boolean",
            "description": "A flag to toggle the voucher on or off. You can disable a voucher even though it's within the active period defined by the `start_date` and `expiration_date`.  \n\n- `true` indicates an *active* voucher\n- `false` indicates an *inactive* voucher"
          },
          "type": {
            "type": "string",
            "description": "Represents the voucher type.",
            "default": "discount_voucher"
          },
          "discount": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/1_obj_vouchers_import_discount_amount"
              },
              {
                "$ref": "#/components/schemas/1_obj_vouchers_import_discount_percentage"
              },
              {
                "$ref": "#/components/schemas/1_obj_vouchers_import_discount_fixed"
              },
              {
                "$ref": "#/components/schemas/1_obj_vouchers_import_discount_unit_one"
              },
              {
                "$ref": "#/components/schemas/1_obj_vouchers_import_discount_unit_multiple"
              },
              {
                "$ref": "#/components/schemas/1_obj_vouchera_import_discount_shipping"
              }
            ]
          },
          "start_date": {
            "type": "string",
            "description": "Activation timestamp in ISO 8601 format. Voucher is *inactive before* this date. Start date defines when the code starts to be active.",
            "enum": [
              "YYYY-MM-DD",
              "YYYY-MM-DDTHH",
              "YYYY-MM-DDTHH:mm",
              "YYYY-MM-DDTHH:mm:ss",
              "YYYY-MM-DDTHH:mm:ssZ",
              "YYYY-MM-DDTHH:mm:ssZ",
              "YYYY-MM-DDTHH:mm:ss.SSSZ"
            ]
          },
          "expiration_date": {
            "type": "string",
            "enum": [
              "YYYY-MM-DD",
              "YYYY-MM-DDTHH",
              "YYYY-MM-DDTHH:mm",
              "YYYY-MM-DDTHH:mm:ss",
              "YYYY-MM-DDTHH:mm:ssZ",
              "YYYY-MM-DDTHH:mm:ssZ",
              "YYYY-MM-DDTHH:mm:ss.SSSZ"
            ],
            "description": "Expiration date defines when the code expires. Expiration timestamp in ISO 8601 format.  Voucher is *inactive after* this date."
          },
          "redemption": {
            "type": "object",
            "description": "Stores the quantity of redemptions that can be applied to the voucher.",
            "properties": {
              "quantity": {
                "type": "integer",
                "description": "How many times a voucher can be redeemed. A `null` value means unlimited.",
                "example": 10
              }
            }
          },
          "additional_info": {
            "type": "string",
            "description": "An optional field to keep any extra textual information about the code such as a code description and details."
          },
          "metadata": {
            "type": "object",
            "description": "The metadata object stores all custom attributes assigned to the code. A set of key/value pairs that you can attach to a voucher object. It can be useful for storing additional information about the voucher in a structured format."
          }
        },
        "required": [
          "code"
        ]
      },
      "1_req_vouchers_importCSV": {
        "type": "object",
        "title": "Import Vouchers by CSV Request Body",
        "description": "Request body schema for `vouchers/importCSV`.",
        "format": "binary",
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "description": "The property name 'file' will be used for the file path."
          }
        }
      },
      "1_res_vouchers_qualification": {
        "title": "Vouchers Qualification Response Body",
        "type": "object",
        "description": "Response body schema for vouchers/qualification",
        "properties": {
          "object": {
            "type": "string",
            "default": "list",
            "description": "The type of object represented by JSON. Default is `list`."
          },
          "data_ref": {
            "type": "string",
            "default": "data",
            "description": "Identifies the name of the attribute that contains the array of qualified vouchers."
          },
          "data": {
            "type": "array",
            "description": "Array of qualified vouchers.",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/1_obj_voucher_object"
                },
                {
                  "$ref": "#/components/schemas/1_res_obj_vouchers_qualification_applicable_to"
                },
                {
                  "$ref": "#/components/schemas/1_res_obj_vouchers_qualification_inapplicable_to"
                }
              ]
            }
          },
          "total": {
            "type": "integer",
            "example": 37,
            "description": "Total valid and active vouchers matching the qualification criteria in given context. "
          },
          "id": {
            "type": "string",
            "example": "qfl_nAMVLoxIqSLh9O6YmfoAXRPG"
          },
          "created_at": {
            "type": "string",
            "example": "2022-02-25T13:32:08.734Z",
            "description": "Timestamp representing the date and time when the qualification was created in ISO 8601 format.",
            "format": "date-time"
          },
          "tracking_id": {
            "type": "string"
          }
        }
      },
      "1_res_obj_vouchers_qualification_applicable_to": {
        "title": "ApplicableToObject",
        "type": "object",
        "properties": {
          "applicable_to": {
            "type": "object",
            "properties": {
              "data": {
                "type": "array",
                "items": {}
              },
              "total": {
                "type": "integer"
              },
              "data_ref": {
                "type": "string",
                "default": "data"
              },
              "object": {
                "type": "string",
                "default": "list"
              }
            }
          }
        },
        "description": ""
      },
      "1_res_obj_vouchers_qualification_inapplicable_to": {
        "title": "InapplicableToObject",
        "type": "object",
        "properties": {
          "inapplicable_to": {
            "type": "object",
            "properties": {
              "data": {
                "type": "array",
                "items": {}
              },
              "total": {
                "type": "integer"
              },
              "data_ref": {
                "type": "string",
                "default": "data"
              },
              "object": {
                "type": "string",
                "default": "list"
              }
            }
          }
        }
      },
      "1_req_vouchers_bulk_async": {
        "title": "Vouchers Bulk Async Request Body",
        "type": "array",
        "description": "Array of objects each containing the code to be updated and the metadata object containing the key/value pairs to be updated.",
        "items": {
          "type": "object",
          "properties": {
            "code": {
              "type": "string",
              "description": "Unique voucher code."
            },
            "metadata": {
              "type": "object",
              "description": "The metadata object stores all custom attributes assigned to the code. A set of key/value pairs that you can attach to a voucher object. It can be useful for storing additional information about the voucher in a structured format."
            }
          }
        }
      },
      "1_req_vouchers_qualification": {
        "title": "Vouchers Qualification Request Body",
        "type": "object",
        "description": "Request body schema for /vouchers/qualification.",
        "properties": {
          "customer": {
            "$ref": "#/components/schemas/1_req_obj_vouchers_qualification_customer"
          },
          "order": {
            "type": [
              "object",
              "null"
            ],
            "description": "Tracks purchase transactions. You can send the order in the request body to check against vouchers requiring specific order validation rules to be satisfied. The qualification runs against rules that are defined through the [Create Validation Rules](https://docs.voucherify.io/reference/create-validation-rules) endpoint or via the Dashboard; in the _Advanced Rule Builder_ &rarr; _Order structure/Order volume_ or _Basic Builder_ &rarr; _Order_. [Read more](https://support.voucherify.io/article/148-how-to-build-a-rule).",
            "properties": {
              "id": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "The ID of an existing order in Voucherify's system that will be linked to the redemption of this request. This ID was assigned by the Voucherify API. You can send the order id in the request body to check against vouchers requiring specific order validation rules to be satisfied.",
                "example": "ord_gqj1QYW2j2A1E3Ula2YjdPf4"
              },
              "source_id": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "The merchant’s order ID if it is different from the Voucherify order ID. It is really useful in case of an integration between multiple systems. It can be an order ID from a CRM system, database or 3rd-party service."
              },
              "amount": {
                "type": [
                  "integer",
                  "null"
                ],
                "minimum": 0,
                "description": "Pre-discount order amount represents the total amount of order items' amounts (sum of each item's `amount` property). You can send the total order amount or the amount of each item individually in the request body to check against vouchers requiring specific total order amount validation rules to be satisfied. The qualification runs against rules that are defined through the [Create Validation Rules](https://docs.voucherify.io/reference/create-validation-rules) endpoint or via the Dashboard; in the _Advanced Rule Builder_ &rarr; _Order volume_ &rarr; _Total amount_ \n\nValue is multiplied by 100 to precisely represent 2 decimal places. For example, $100 is written as 10000.",
                "example": 10000
              },
              "items": {
                "type": "array",
                "description": "List of Order Items constituting the order. Order items can be defined either by `product_id` or `sku_id`. For every item, you must define the quantity. Read more about the [order item object] (hyperlink the Order Item Object).\n",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/1_req_obj_vouchers_qualification_product"
                    },
                    {
                      "$ref": "#/components/schemas/1_req_obj_vouchers_qualification_sku"
                    },
                    {
                      "$ref": "#/components/schemas/1_req_obj_vouchers_qualification_product_using_product_id"
                    },
                    {
                      "$ref": "#/components/schemas/1_req_obj_vouchers_qualification_product_using_source_id"
                    }
                  ]
                }
              },
              "customer": {
                "$ref": "#/components/schemas/1_req_obj_vouchers_qualification_customer"
              },
              "referrer": {
                "description": "The person who referred the customer to make the order.",
                "type": [
                  "object",
                  "null"
                ]
              },
              "metadata": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "A set of key/value pairs that you can send in the request body to check against vouchers requiring **order** metadata validation rules to be satisfied. The qualification runs against rules that are defined through the [Create Validation Rules](https://docs.voucherify.io/reference/create-validation-rules) endpoint or via the Dashboard; in the _Advanced Rule Builder_ &rarr; _Order structure_ &rarr; _Order metadata satisfy_ or _Basic Builder_ &rarr; _Attributes match_ &rarr; _ORDER METADATA_. [Read more](https://support.voucherify.io/article/148-how-to-build-a-rule)."
              }
            }
          },
          "reward": {
            "type": [
              "object",
              "null"
            ],
            "properties": {
              "points": {
                "type": [
                  "number",
                  "null"
                ]
              },
              "assignment_id": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "id": {
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          },
          "metadata": {
            "type": [
              "object",
              "null"
            ],
            "description": "A set of key/value pairs that you can send in the request body to check against vouchers requiring **redemption** metadata validation rules to be satisfied. The qualification runs against rules that are defined through the [Create Validation Rules](https://docs.voucherify.io/reference/create-validation-rules) endpoint or via the Dashboard; in the _Advanced Rule Builder_ &rarr; _Advanced_ &rarr; _Redemption metadata satisfy_ or _Basic Builder_ &rarr; _Attributes match_ &rarr; _REDEMPTION METADATA_. [Read more](https://support.voucherify.io/article/148-how-to-build-a-rule)."
          }
        }
      },
      "1_req_obj_vouchers_qualification_customer": {
        "title": "Customer Object",
        "type": "object",
        "description": "This object stores customer details. You can send this object in the request body to check against vouchers requiring specific customer validation rules to be satisfied. The qualification runs against rules that are defined through the [Create Validation Rules](https://docs.voucherify.io/reference/create-validation-rules) endpoint or via the Dashboard; in the _Advanced Rule Builder_ &rarr; _Audience_ &rarr; _Customer segment_ or _Basic Builder_ &rarr; _Customer Activity_. [Read more](https://support.voucherify.io/article/148-how-to-build-a-rule). ",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of an existing customer that will be linked to the redemption in this request. This ID was assigned by the Voucherify API.",
            "example": "cust_J1CDUdbqn5Exva8ASWk1Fq0j"
          },
          "source_id": {
            "type": [
              "string",
              "null"
            ],
            "description": "A unique customer identifier. This is a tracking identifier of a user that is validating a voucher. The `source_id` is built based on your internal id (e.g., email, database ID). If you also pass a customer ID, the source ID will be ignored. Otherwise, if you do not pass a customer ID, the source ID you provide must either be a token, like the one returned in the original voucher validation method done by a specific customer, or a string identifying the customer (e.g., email, database ID, CRM ID).",
            "example": "firstname.lastname@mycompany.com"
          },
          "name": {
            "type": [
              "string",
              "null"
            ],
            "description": "First and Last Name. You can send the name in the request body to check against vouchers requiring specific name validation rules to be satisfied.",
            "example": "FirstName LastName"
          },
          "email": {
            "type": [
              "string",
              "null"
            ],
            "description": "You can send the email in the request body to check against vouchers requiring specific email validation rules to be satisfied.",
            "example": "firstname.lastname@mycompany.com"
          },
          "phone": {
            "type": [
              "string",
              "null"
            ],
            "minLength": 1,
            "maxLength": 30,
            "pattern": "^[-+.() 0-9]",
            "description": "You can send the phone in the request body to check against vouchers requiring specific phone validation rules to be satisfied."
          },
          "address": {
            "type": [
              "object",
              "null"
            ],
            "additionalProperties": false,
            "description": "A set of key/value pairs which describes the address. You can send the address in the request body to check against vouchers requiring specific address validation rules to be satisfied.",
            "properties": {
              "city": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "You can send the city in the request body to check against vouchers requiring specific city validation rules to be satisfied.",
                "example": "New York"
              },
              "country": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "You can send the country in the request body to check against vouchers requiring specific country validation rules to be satisfied.",
                "example": "United States of America"
              },
              "postal_code": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "You can send the postal code in the request body to check against vouchers requiring specific postal code validation rules to be satisfied.",
                "example": "10001"
              },
              "state": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "You can send the state in the request body to check against vouchers requiring specific state validation rules to be satisfied.",
                "example": "NY"
              }
            }
          },
          "metadata": {
            "type": [
              "object",
              "null"
            ],
            "description": "A set of key/value pairs that you can send in the request body to check against vouchers requiring **customer** metadata validation rules to be satisfied. The qualification runs against rules that are defined through the [Create Validation Rules](https://docs.voucherify.io/reference/create-validation-rules) endpoint or via the Dashboard; in the _Advanced Rule Builder_ &rarr; _Audience_ &rarr; _Customer metadata satisfy_. [Read more](https://support.voucherify.io/article/148-how-to-build-a-rule)."
          },
          "birthdate": {
            "type": [
              "string",
              "null"
            ],
            "example": "YYYY-MM-DD",
            "format": "date",
            "description": "You can send the birthdate in the request body to check against vouchers requiring specific birthdate validation rules to be satisfied."
          }
        }
      },
      "1_req_obj_vouchers_qualification_product": {
        "title": "Product Item",
        "type": "object",
        "description": "Schema model for a product item. You can send this object in the request body to check against vouchers requiring specific product validation rules to be satisfied. The qualification runs against rules that are defined through the [Create Validation Rules](https://docs.voucherify.io/reference/create-validation-rules) endpoint or via the Dashboard; in the _Advanced Rule Builder_ &rarr; _Order structure/Order volume_ or _Basic Builder_ &rarr; _Order_. [Read more](https://support.voucherify.io/article/148-how-to-build-a-rule).",
        "properties": {
          "source_id": {
            "type": [
              "string",
              "null"
            ],
            "description": "A unique product identifier from your inventory system. __Requires__ the `related_object` property to be defined. \n\n The qualification runs against rules that are defined through the Create Validation Rules endpoint or via the Dashboard; in the _Advanced Rule Builder_ &rarr; _Order Structure_ &rarr; _Every order item/Any order item/None of the order items_ &rarr; _Select a product collection or create a new product collection based on Source Id filters_ . [Read more](https://support.voucherify.io/article/529-validation-rules-campaign-limits).",
            "example": "product_1234"
          },
          "product_id": {
            "type": [
              "string",
              "null"
            ],
            "description": "A unique identifier that represents the product and is assigned by Voucherify.",
            "example": "prod_0a9f9aeddb019a42db"
          },
          "amount": {
            "type": [
              "integer",
              "null"
            ],
            "description": "Represents a total pre-discount amount of order item (`price` * `quantity`). You can send the total item amount to check against vouchers requiring specific order amount validation rules to be satisfied.\n\n The qualification runs against rules that are defined through the [Create Validation Rules](https://docs.voucherify.io/reference/create-validation-rules) endpoint or via the Dashboard; in the _Advanced Rule Builder_ &rarr; _Order volume_ &rarr; _Total amount_. The qualification adds the individual amounts of the items and checks whether the sum meets the limits set by the _Total amount_. Additionally, another rule checked is one that is defined in _Advanced Rule Builder_ &rarr; _Order structure_ &rarr; _Every order item/Any order item_ &rarr; _Subtotal of matched items_.  \n\nValue is multiplied by 100 to precisely represent 2 decimal places. For example, $100 is written as 10000.\n",
            "example": 10000
          },
          "quantity": {
            "type": [
              "integer",
              "null"
            ],
            "description": "Quantity of the item in the cart. \n\nThe qualification runs against rules that are defined through the [Create Validation Rules](https://docs.voucherify.io/reference/create-validation-rules) endpoint or via the Dashboard; in the _Advanced Rule Builder_ &rarr; _Order Volume_ &rarr; _Items quantity_. The qualification adds the individual quantities of the items and checks whether the sum meets the limits set by _Items quantity_ validation rule. Another validation rule against which the qualification does the checks is defined in the _Advanced Rule Builder_ &rarr; _Order Structure_ &rarr; _Every order item/Any order item_ &rarr; _Quantity of matched items_. [Read more](https://support.voucherify.io/article/529-validation-rules-campaign-limits).",
            "example": 1
          },
          "price": {
            "type": [
              "integer",
              "null"
            ],
            "description": "Unit price of an item. [This is not true in the case of using sourceid what was the case that this happened.]This `price` property takes precedence. If you provide a value at this level, then a price property defined once again in the `related_object` will be ignored. If this property will not be defined here, then the `price` property in the `related_object` will be used in the qualification.\n\n The qualification runs against rules that are defined through the Create Validation Rules endpoint or via the Dashboard; in the _Advanced Rule Builder_ &rarr; _Order Structure_ &rarr; _Every order item/Any order item_ &rarr; _Unit Price of any matching order line_ and also _Order Volume_ &rarr; _Price of each item/Price of any item_. [Read more](https://support.voucherify.io/article/529-validation-rules-campaign-limits).\n\n Value is multiplied by 100 to precisely represent 2 decimal places. For example, $100 is written as 10000.",
            "example": 10000
          },
          "metadata": {
            "type": "object",
            "description": "A set of key/value pairs that you can send in the request body to check against vouchers requiring **order line item** metadata validation rules to be satisfied.\n\n The qualification runs against rules that are defined through the [Create Validation Rules](https://docs.voucherify.io/reference/create-validation-rules) endpoint or via the Dashboard; in the _Advanced Rule Builder_ &rarr; _Order structure_ &rarr; _Every order item/Any order item_ &rarr; _Metadata of matched items_. [Read more](https://support.voucherify.io/article/148-how-to-build-a-rule)."
          },
          "related_object": {
            "type": [
              "string",
              "null"
            ],
            "enum": [
              "product"
            ],
            "description": "A reference to the object containing details of the related product. __Required__ when sending `source_id` in payload."
          },
          "product": {
            "type": [
              "object",
              "null"
            ],
            "description": "An object containing details of the related product. __Required__ when sending `source_id` in payload. These details will be used for qualification on top of details already stored in the system.",
            "properties": {
              "source_id": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "A unique product identifier from your inventory system.",
                "example": "product_1234"
              },
              "name": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "Product name.\n\n The qualification runs against rules that are defined through the [Create Validation Rules](https://docs.voucherify.io/reference/create-validation-rules) endpoint or via the Dashboard; in the _Advanced Rule Builder_ &rarr; _Order structure_ &rarr; _Every order item/Any order item/None of the order items_ &rarr; _Select a product collection or create a new product collection based on name filters_.",
                "example": "Phone"
              },
              "price": {
                "type": [
                  "integer",
                  "null"
                ],
                "description": "Unit price of an item. Value is multiplied by 100 to precisely represent 2 decimal places. For example, $100 is written as 10000.",
                "example": 10000
              },
              "metadata": {
                "type": [
                  "object",
                  "null"
                ],
                "description": "A set of key/value pairs that you can send in the request body to check against vouchers requiring **product** metadata validation rules to be satisfied.\n\n The qualification runs against rules that are defined through the [Create Validation Rules](https://docs.voucherify.io/reference/create-validation-rules) endpoint or via the Dashboard; in the _Advanced Rule Builder_ &rarr; _Order structure_ &rarr; _Every order item/Any order item/None of the order items_ &rarr; _Select a product collection or create a new product collection based on metadata filters_. [Read more](https://support.voucherify.io/article/148-how-to-build-a-rule)."
              }
            }
          }
        }
      },
      "1_req_obj_vouchers_qualification_product_using_product_id": {
        "title": "Product Item using product_id",
        "type": "object",
        "description": "Schema model for a product item sent using the `product_id`. \n\nYou can send this object in the request body to check against vouchers requiring specific product validation rules to be satisfied. \nThe qualification runs against rules that are defined through the [Create Validation Rules](https://docs.voucherify.io/reference/create-validation-rules) endpoint or via the Dashboard; in the _Advanced Rule Builder_ &rarr; _Order structure/Order volume_ or _Basic Builder_ &rarr; _Order_. [Read more](https://support.voucherify.io/article/148-how-to-build-a-rule).",
        "examples": [],
        "properties": {
          "product_id": {
            "type": [
              "string",
              "null"
            ],
            "description": "A unique identifier that represents the product and is assigned by Voucherify.",
            "example": "prod_0a9f9aeddb019a42db"
          },
          "amount": {
            "type": [
              "integer",
              "null"
            ],
            "description": "Represents a total pre-discount amount of order item (`price` * `quantity`). You can send the total item amount to check against vouchers requiring specific order amount validation rules to be satisfied.\n\n The qualification runs against rules that are defined through the [Create Validation Rules](https://docs.voucherify.io/reference/create-validation-rules) endpoint or via the Dashboard; in the _Advanced Rule Builder_ &rarr; _Order volume_ &rarr; _Total amount_. The qualification adds the individual amounts of the items and checks whether the sum meets the limits set by the _Total amount_. Additionally, another rule checked is one that is defined in _Advanced Rule Builder_ &rarr; _Order structure_ &rarr; _Every order item/Any order item_ &rarr; _Subtotal of matched items_.  \n\nValue is multiplied by 100 to precisely represent 2 decimal places. For example, $100 is written as 10000.\n",
            "example": 10000
          },
          "quantity": {
            "type": [
              "integer",
              "null"
            ],
            "description": "Quantity of the item in the cart. \n\nThe qualification runs against rules that are defined through the [Create Validation Rules](https://docs.voucherify.io/reference/create-validation-rules) endpoint or via the Dashboard; in the _Advanced Rule Builder_ &rarr; _Order Volume_ &rarr; _Items quantity_. The qualification adds the individual quantities of the items and checks whether the sum meets the limits set by _Items quantity_ validation rule. Another validation rule against which the qualification does the checks is defined in the _Advanced Rule Builder_ &rarr; _Order Structure_ &rarr; _Every order item/Any order item_ &rarr; _Quantity of matched items_. [Read more](https://support.voucherify.io/article/529-validation-rules-campaign-limits).",
            "example": 1
          },
          "price": {
            "type": [
              "integer",
              "null"
            ],
            "description": "Unit price of an item. [This is not true in the case of using sourceid what was the case that this happened.]This `price` property takes precedence. If you provide a value at this level, then a price property defined once again in the `related_object` will be ignored. If this property will not be defined here, then the `price` property in the `related_object` will be used in the qualification.\n\n The qualification runs against rules that are defined through the Create Validation Rules endpoint or via the Dashboard; in the _Advanced Rule Builder_ &rarr; _Order Structure_ &rarr; _Every order item/Any order item_ &rarr; _Unit Price of any matching order line_ and also _Order Volume_ &rarr; _Price of each item/Price of any item_. Even if this price is explicitly provided, it will not override the `price` when running qualifications against _Advanced Rule Builder_ &rarr; _Order structure_ &rarr; _Every order item/Any order item/None of the order items_ &rarr; _Select/create a product collection filtered by a Price_.   [Read more](https://support.voucherify.io/article/529-validation-rules-campaign-limits).\n\n Value is multiplied by 100 to precisely represent 2 decimal places. For example, $100 is written as 10000.",
            "example": 10000
          },
          "metadata": {
            "type": "object",
            "description": "A set of key/value pairs that you can send in the request body to check against vouchers requiring **order line item** metadata validation rules to be satisfied.\n\n The qualification runs against rules that are defined through the [Create Validation Rules](https://docs.voucherify.io/reference/create-validation-rules) endpoint or via the Dashboard; in the _Advanced Rule Builder_ &rarr; _Order structure_ &rarr; _Every order item/Any order item_ &rarr; _Metadata of matched items_. [Read more](https://support.voucherify.io/article/148-how-to-build-a-rule)."
          },
          "product": {
            "type": [
              "object",
              "null"
            ],
            "description": "An object containing details of the related product. These details will be used for qualification on top of details already stored in the system.",
            "properties": {
              "name": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "Product name.\n\n The qualification runs against rules that are defined through the [Create Validation Rules](https://docs.voucherify.io/reference/create-validation-rules) endpoint or via the Dashboard; in the _Advanced Rule Builder_ &rarr; _Order structure_ &rarr; _Every order item/Any order item/None of the order items_ &rarr; _Select a product collection or create a new product collection based on name filters_.",
                "example": "Phone"
              },
              "price": {
                "type": [
                  "integer",
                  "null"
                ],
                "description": "Unit price of an item. Value is multiplied by 100 to precisely represent 2 decimal places. For example, $100 is written as 10000.",
                "example": 10000
              },
              "metadata": {
                "type": [
                  "object",
                  "null"
                ],
                "description": "A set of key/value pairs that you can send in the request body to check against vouchers requiring **product** metadata validation rules to be satisfied.\n\n The qualification runs against rules that are defined through the [Create Validation Rules](https://docs.voucherify.io/reference/create-validation-rules) endpoint or via the Dashboard; in the _Advanced Rule Builder_ &rarr; _Order structure_ &rarr; _Every order item/Any order item/None of the order items_ &rarr; _Select a product collection or create a new product collection based on metadata filters_. [Read more](https://support.voucherify.io/article/148-how-to-build-a-rule)."
              }
            }
          }
        }
      },
      "1_req_obj_vouchers_qualification_product_using_source_id": {
        "title": "Product Item using source_id",
        "type": "object",
        "description": "Schema model for a product item. You can send this object in the request body to check against vouchers requiring specific product validation rules to be satisfied. The qualification runs against rules that are defined through the [Create Validation Rules](https://docs.voucherify.io/reference/create-validation-rules) endpoint or via the Dashboard; in the _Advanced Rule Builder_ &rarr; _Order structure/Order volume_ or _Basic Builder_ &rarr; _Order_. [Read more](https://support.voucherify.io/article/148-how-to-build-a-rule).",
        "properties": {
          "source_id": {
            "type": [
              "string",
              "null"
            ],
            "description": "A unique product identifier from your inventory system. __Requires__ the `related_object` property to be defined. \n\n The qualification runs against rules that are defined through the Create Validation Rules endpoint or via the Dashboard; in the _Advanced Rule Builder_ &rarr; _Order Structure_ &rarr; _Every order item/Any order item/None of the order items_ &rarr; _Select a product collection or create a new product collection based on Source Id filters_ . [Read more](https://support.voucherify.io/article/529-validation-rules-campaign-limits).",
            "example": "product_1234"
          },
          "amount": {
            "type": [
              "integer",
              "null"
            ],
            "description": "Represents a total pre-discount amount of order item (`price` * `quantity`). You can send the total item amount to check against vouchers requiring specific order amount validation rules to be satisfied.\n\n The qualification runs against rules that are defined through the [Create Validation Rules](https://docs.voucherify.io/reference/create-validation-rules) endpoint or via the Dashboard; in the _Advanced Rule Builder_ &rarr; _Order volume_ &rarr; _Total amount_. The qualification adds the individual amounts of the items and checks whether the sum meets the limits set by the _Total amount_. Additionally, another rule checked is one that is defined in _Advanced Rule Builder_ &rarr; _Order structure_ &rarr; _Every order item/Any order item_ &rarr; _Subtotal of matched items_.  \n\nValue is multiplied by 100 to precisely represent 2 decimal places. For example, $100 is written as 10000.\n",
            "example": 10000
          },
          "quantity": {
            "type": [
              "integer",
              "null"
            ],
            "description": "Quantity of the item in the cart. \n\nThe qualification runs against rules that are defined through the [Create Validation Rules](https://docs.voucherify.io/reference/create-validation-rules) endpoint or via the Dashboard; in the _Advanced Rule Builder_ &rarr; _Order Volume_ &rarr; _Items quantity_. The qualification adds the individual quantities of the items and checks whether the sum meets the limits set by _Items quantity_ validation rule. Another validation rule against which the qualification does the checks is defined in the _Advanced Rule Builder_ &rarr; _Order Structure_ &rarr; _Every order item/Any order item_ &rarr; _Quantity of matched items_. [Read more](https://support.voucherify.io/article/529-validation-rules-campaign-limits).",
            "example": 1
          },
          "price": {
            "type": [
              "integer",
              "null"
            ],
            "description": "Unit price of an item. [This is not true in the case of using sourceid what was the case that this happened.]This `price` property takes precedence. If you provide a value at this level, then a price property defined once again in the `related_object` will be ignored. If this property will not be defined here, then the `price` property in the `related_object` will be used in the qualification.\n\n The qualification runs against rules that are defined through the Create Validation Rules endpoint or via the Dashboard; in the _Advanced Rule Builder_ &rarr; _Order Structure_ &rarr; _Every order item/Any order item_ &rarr; _Unit Price of any matching order line_ and also _Order Volume_ &rarr; _Price of each item/Price of any item_. [Read more](https://support.voucherify.io/article/529-validation-rules-campaign-limits).\n\n Value is multiplied by 100 to precisely represent 2 decimal places. For example, $100 is written as 10000.",
            "example": 10000
          },
          "metadata": {
            "type": "object",
            "description": "A set of key/value pairs that you can send in the request body to check against vouchers requiring **order line item** metadata validation rules to be satisfied.\n\n The qualification runs against rules that are defined through the [Create Validation Rules](https://docs.voucherify.io/reference/create-validation-rules) endpoint or via the Dashboard; in the _Advanced Rule Builder_ &rarr; _Order structure_ &rarr; _Every order item/Any order item_ &rarr; _Metadata of matched items_. [Read more](https://support.voucherify.io/article/148-how-to-build-a-rule)."
          },
          "related_object": {
            "type": [
              "string",
              "null"
            ],
            "enum": [
              "product"
            ],
            "description": "A reference to the object containing details of the related product. __Required__ when sending `source_id` in payload."
          },
          "product": {
            "type": [
              "object",
              "null"
            ],
            "description": "An object containing details of the related product. __Required__ when sending `source_id` in payload. These details will be used for qualification on top of details already stored in the system.",
            "properties": {
              "source_id": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "A unique product identifier from your inventory system.",
                "example": "product_1234"
              },
              "name": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "Product name.\n\n The qualification runs against rules that are defined through the [Create Validation Rules](https://docs.voucherify.io/reference/create-validation-rules) endpoint or via the Dashboard; in the _Advanced Rule Builder_ &rarr; _Order structure_ &rarr; _Every order item/Any order item/None of the order items_ &rarr; _Select a product collection or create a new product collection based on name filters_.",
                "example": "Phone"
              },
              "price": {
                "type": [
                  "integer",
                  "null"
                ],
                "description": "Unit price of an item. Value is multiplied by 100 to precisely represent 2 decimal places. For example, $100 is written as 10000.",
                "example": 10000
              },
              "metadata": {
                "type": [
                  "object",
                  "null"
                ],
                "description": "A set of key/value pairs that you can send in the request body to check against vouchers requiring **product** metadata validation rules to be satisfied.\n\n The qualification runs against rules that are defined through the [Create Validation Rules](https://docs.voucherify.io/reference/create-validation-rules) endpoint or via the Dashboard; in the _Advanced Rule Builder_ &rarr; _Order structure_ &rarr; _Every order item/Any order item/None of the order items_ &rarr; _Select a product collection or create a new product collection based on metadata filters_. [Read more](https://support.voucherify.io/article/148-how-to-build-a-rule)."
              }
            }
          }
        },
        "required": [
          "source_id",
          "related_object"
        ]
      },
      "1_req_obj_vouchers_qualification_product-copy-2-use-for-other-objects-as-reference": {
        "title": "Product Item",
        "type": "object",
        "description": "Schema model for a product item. You can send this object in the request body to check against vouchers requiring specific product validation rules to be satisfied. The qualification runs against rules that are defined through the [Create Validation Rules](https://docs.voucherify.io/reference/create-validation-rules) endpoint or via the Dashboard; in the _Advanced Rule Builder_ &rarr; _Order structure/Order volume_ or _Basic Builder_ &rarr; _Order_. [Read more](https://support.voucherify.io/article/148-how-to-build-a-rule).",
        "properties": {
          "source_id": {
            "type": [
              "string",
              "null"
            ],
            "description": "A unique product identifier from your inventory system. __Requires__ the `related_object` property to be defined. \n\n The qualification runs against rules that are defined through the Create Validation Rules endpoint or via the Dashboard; in the _Advanced Rule Builder_ &rarr; _Order Structure_ &rarr; _Every order item/Any order item/None of the order items_ &rarr; _Select a product collection or create a new product collection based on Source Id filters_ . [Read more](https://support.voucherify.io/article/529-validation-rules-campaign-limits).",
            "example": "product_1234"
          },
          "product_id": {
            "type": [
              "string",
              "null"
            ],
            "description": "A unique identifier that represents the product and is assigned by Voucherify.",
            "example": "prod_0a9f9aeddb019a42db"
          },
          "amount": {
            "type": [
              "integer",
              "null"
            ],
            "description": "Represents a total pre-discount amount of order item (`price` * `quantity`). You can send the total item amount to check against vouchers requiring specific order amount validation rules to be satisfied.\n\n The qualification runs against rules that are defined through the [Create Validation Rules](https://docs.voucherify.io/reference/create-validation-rules) endpoint or via the Dashboard; in the _Advanced Rule Builder_ &rarr; _Order volume_ &rarr; _Total amount_. The qualification adds the individual amounts of the items and checks whether the sum meets the limits set by the _Total amount_. Additionally, another rule checked is one that is defined in _Advanced Rule Builder_ &rarr; _Order structure_ &rarr; _Every order item/Any order item_ &rarr; _Subtotal of matched items_.  \n\nValue is multiplied by 100 to precisely represent 2 decimal places. For example, $100 is written as 10000.\n",
            "example": 10000
          },
          "quantity": {
            "type": [
              "integer",
              "null"
            ],
            "description": "Quantity of the item in the cart. \n\nThe qualification runs against rules that are defined through the [Create Validation Rules](https://docs.voucherify.io/reference/create-validation-rules) endpoint or via the Dashboard; in the _Advanced Rule Builder_ &rarr; _Order Volume_ &rarr; _Items quantity_. The qualification adds the individual quantities of the items and checks whether the sum meets the limits set by _Items quantity_ validation rule. Another validation rule against which the qualification does the checks is defined in the _Advanced Rule Builder_ &rarr; _Order Structure_ &rarr; _Every order item/Any order item_ &rarr; _Quantity of matched items_. [Read more](https://support.voucherify.io/article/529-validation-rules-campaign-limits).",
            "example": 1
          },
          "price": {
            "type": [
              "integer",
              "null"
            ],
            "description": "Unit price of an item. [This is not true in the case of using sourceid what was the case that this happened.]This `price` property takes precedence. If you provide a value at this level, then a price property defined once again in the `related_object` will be ignored. If this property will not be defined here, then the `price` property in the `related_object` will be used in the qualification.\n\n The qualification runs against rules that are defined through the Create Validation Rules endpoint or via the Dashboard; in the _Advanced Rule Builder_ &rarr; _Order Structure_ &rarr; _Every order item/Any order item_ &rarr; _Unit Price of any matching order line_ and also _Order Volume_ &rarr; _Price of each item/Price of any item_. [Read more](https://support.voucherify.io/article/529-validation-rules-campaign-limits).\n\n Value is multiplied by 100 to precisely represent 2 decimal places. For example, $100 is written as 10000.",
            "example": 10000
          },
          "metadata": {
            "type": "object",
            "description": "A set of key/value pairs that you can send in the request body to check against vouchers requiring **order line item** metadata validation rules to be satisfied.\n\n The qualification runs against rules that are defined through the [Create Validation Rules](https://docs.voucherify.io/reference/create-validation-rules) endpoint or via the Dashboard; in the _Advanced Rule Builder_ &rarr; _Order structure_ &rarr; _Every order item/Any order item_ &rarr; _Metadata of matched items_. [Read more](https://support.voucherify.io/article/148-how-to-build-a-rule)."
          },
          "related_object": {
            "type": [
              "string",
              "null"
            ],
            "enum": [
              "product"
            ],
            "description": "A reference to the object containing details of the related product. __Required__ when sending `source_id` in payload."
          },
          "product": {
            "type": [
              "object",
              "null"
            ],
            "description": "An object containing details of the related product. __Required__ when sending `source_id` in payload. These details will be used for qualification on top of details already stored in the system.",
            "properties": {
              "source_id": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "A unique product identifier from your inventory system.",
                "example": "product_1234"
              },
              "name": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "Product name.\n\n The qualification runs against rules that are defined through the [Create Validation Rules](https://docs.voucherify.io/reference/create-validation-rules) endpoint or via the Dashboard; in the _Advanced Rule Builder_ &rarr; _Order structure_ &rarr; _Every order item/Any order item/None of the order items_ &rarr; _Select a product collection or create a new product collection based on name filters_.",
                "example": "Phone"
              },
              "price": {
                "type": [
                  "integer",
                  "null"
                ],
                "description": "Unit price of an item. Value is multiplied by 100 to precisely represent 2 decimal places. For example, $100 is written as 10000.",
                "example": 10000
              },
              "metadata": {
                "type": [
                  "object",
                  "null"
                ],
                "description": "A set of key/value pairs that you can send in the request body to check against vouchers requiring **product** metadata validation rules to be satisfied.\n\n The qualification runs against rules that are defined through the [Create Validation Rules](https://docs.voucherify.io/reference/create-validation-rules) endpoint or via the Dashboard; in the _Advanced Rule Builder_ &rarr; _Order structure_ &rarr; _Every order item/Any order item/None of the order items_ &rarr; _Select a product collection or create a new product collection based on metadata filters_. [Read more](https://support.voucherify.io/article/148-how-to-build-a-rule)."
              },
              "override": {
                "type": [
                  "boolean",
                  "null"
                ],
                "description": "The override is used to store the product in the system. If product does not exist, it will be created with the use of `source_id`."
              }
            }
          }
        }
      },
      "1_req_obj_vouchers_qualification_sku": {
        "title": "SKU Item",
        "type": "object",
        "description": "Schema model for a SKU item.",
        "properties": {
          "source_id": {
            "type": [
              "string",
              "null"
            ],
            "description": "A unique sku identifier from your inventory system. __Requires__ the `related_object` property to be defined. \n\n The qualification runs against rules that are defined through the Create Validation Rules endpoint or via the Dashboard; in the _Advanced Rule Builder_ &rarr; _Order Structure_ &rarr; _Every order item/Any order item/None of the order items_ &rarr; _Select a product collection or create a new product collection based on Source Id filters_ . [Read more](https://support.voucherify.io/article/529-validation-rules-campaign-limits).",
            "example": "product_1234"
          },
          "sku_id": {
            "type": [
              "string",
              "null"
            ],
            "example": "sku_0a41e31c7b41c28358",
            "description": "A unique identifier that represents the SKU and is assigned by Voucherify."
          },
          "amount": {
            "type": [
              "integer",
              "null"
            ],
            "description": "Represents a total amount of order item (price * quantity).\n\nYou should provide it to retrieve `discount_amount` if the discount is applied only to this item.[I'm not sure what this means here, it's from the original docs]",
            "example": 10000
          },
          "quantity": {
            "type": [
              "integer",
              "null"
            ],
            "description": "Quantity of the item in the cart. The qualification runs against rules that are defined through the Create Validation Rules endpoint or via the Dashboard; in the _Advanced Rule Builder_ &rarr; _Order Volume_ &rarr; _Items quantity_. The qualification adds the individual quantities of the items and checks whether the sum meets the limits set by _Items quantity_ validation rule. [Read more](https://support.voucherify.io/article/529-validation-rules-campaign-limits).",
            "example": 1
          },
          "related_object": {
            "type": [
              "string",
              "null"
            ],
            "enum": [
              "product",
              "sku"
            ],
            "description": "A reference to the object containing details of the related product/sku. __Required__ when sending `source_id` in payload."
          },
          "product": {
            "type": [
              "object",
              "null"
            ],
            "description": "An object containing details of the related product. __Required__ when sending `source_id` in payload. These details will be used for qualification on top of details already stored in the system.",
            "properties": {
              "source_id": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "A unique product identifier from your inventory system.",
                "example": "product_1234"
              },
              "name": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "Product name.",
                "example": "Phone"
              },
              "price": {
                "type": [
                  "integer",
                  "null"
                ],
                "description": "Unit price of an item. Value is multiplied by 100 to precisely represent 2 decimal places. For example, $100 is written as 10000.",
                "example": 10000
              },
              "metadata": {
                "type": [
                  "object",
                  "null"
                ],
                "description": "A set of key/value pairs that you can send in the request body to check against vouchers requiring **product** metadata validation rules to be satisfied.\n\n The qualification runs against rules that are defined through the [Create Validation Rules](https://docs.voucherify.io/reference/create-validation-rules) endpoint or via the Dashboard; in the _Advanced Rule Builder_ &rarr; _Order structure_ &rarr; _Every order item/Any order item/None of the order items_ &rarr; _Select a product collection or create a new product collection based on metadata filters_. [Read more](https://support.voucherify.io/article/148-how-to-build-a-rule)."
              }
            }
          },
          "sku": {
            "type": [
              "object",
              "null"
            ],
            "description": "An object containing details of the related SKU. __Required__ when sending `source_id` in payload. These details will be used for qualification on top of details already stored in the system.",
            "properties": {
              "source_id": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "A unique SKU identifier from your inventory system.",
                "example": "sku_1234"
              },
              "sku": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "SKU name.",
                "example": "iPhone 12"
              },
              "price": {
                "type": [
                  "integer",
                  "null"
                ],
                "description": "Unit price of a SKU. Value is multiplied by 100 to precisely represent 2 decimal places. For example, $100 is written as 10000.",
                "example": 10000
              },
              "metadata": {
                "type": [
                  "object",
                  "null"
                ],
                "description": "A set of custom key/value pairs that you can attach to a SKU."
              }
            }
          }
        }
      },
      "1_req_obj_vouchers_qualification_sku-copy-2_forfuturereference": {
        "title": "SKU Item",
        "type": "object",
        "description": "Schema model for a SKU item.",
        "properties": {
          "source_id": {
            "type": [
              "string",
              "null"
            ],
            "description": "A unique sku identifier from your inventory system. __Requires__ the `related_object` property to be defined. \n\n The qualification runs against rules that are defined through the Create Validation Rules endpoint or via the Dashboard; in the _Advanced Rule Builder_ &rarr; _Order Structure_ &rarr; _Every order item/Any order item/None of the order items_ &rarr; _Select a product collection or create a new product collection based on Source Id filters_ . [Read more](https://support.voucherify.io/article/529-validation-rules-campaign-limits).",
            "example": "product_1234"
          },
          "sku_id": {
            "type": [
              "string",
              "null"
            ],
            "example": "sku_0a41e31c7b41c28358",
            "description": "A unique identifier that represents the SKU and is assigned by Voucherify."
          },
          "amount": {
            "type": [
              "integer",
              "null"
            ],
            "description": "Represents a total amount of order item (price * quantity).\n\nYou should provide it to retrieve `discount_amount` if the discount is applied only to this item.[I'm not sure what this means here, it's from the original docs]",
            "example": 10000
          },
          "quantity": {
            "type": [
              "integer",
              "null"
            ],
            "description": "Quantity of the item in the cart. The qualification runs against rules that are defined through the Create Validation Rules endpoint or via the Dashboard; in the _Advanced Rule Builder_ &rarr; _Order Volume_ &rarr; _Items quantity_. The qualification adds the individual quantities of the items and checks whether the sum meets the limits set by _Items quantity_ validation rule. [Read more](https://support.voucherify.io/article/529-validation-rules-campaign-limits).",
            "example": 1
          },
          "related_object": {
            "type": [
              "string",
              "null"
            ],
            "enum": [
              "product",
              "sku"
            ],
            "description": "A reference to the object containing details of the related product/sku. __Required__ when sending `source_id` in payload."
          },
          "product": {
            "type": [
              "object",
              "null"
            ],
            "description": "An object containing details of the related product. __Required__ when sending `source_id` in payload. These details will be used for qualification on top of details already stored in the system.",
            "properties": {
              "source_id": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "A unique product identifier from your inventory system.",
                "example": "product_1234"
              },
              "name": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "Product name.",
                "example": "Phone"
              },
              "price": {
                "type": [
                  "integer",
                  "null"
                ],
                "description": "Unit price of an item. Value is multiplied by 100 to precisely represent 2 decimal places. For example, $100 is written as 10000.",
                "example": 10000
              },
              "metadata": {
                "type": [
                  "object",
                  "null"
                ],
                "description": "A set of key/value pairs that you can send in the request body to check against vouchers requiring **product** metadata validation rules to be satisfied.\n\n The qualification runs against rules that are defined through the [Create Validation Rules](https://docs.voucherify.io/reference/create-validation-rules) endpoint or via the Dashboard; in the _Advanced Rule Builder_ &rarr; _Order structure_ &rarr; _Every order item/Any order item/None of the order items_ &rarr; _Select a product collection or create a new product collection based on metadata filters_. [Read more](https://support.voucherify.io/article/148-how-to-build-a-rule)."
              },
              "override": {
                "type": [
                  "boolean",
                  "null"
                ],
                "description": "The override is used to store the product in the system. If the product does not exist, it will be created with the use of `source_id`."
              }
            }
          },
          "sku": {
            "type": [
              "object",
              "null"
            ],
            "description": "An object containing details of the related SKU. __Required__ when sending `source_id` in payload. These details will be used for qualification on top of details already stored in the system.",
            "properties": {
              "source_id": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "A unique SKU identifier from your inventory system.",
                "example": "sku_1234"
              },
              "sku": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "SKU name.",
                "example": "iPhone 12"
              },
              "price": {
                "type": [
                  "integer",
                  "null"
                ],
                "description": "Unit price of a SKU. Value is multiplied by 100 to precisely represent 2 decimal places. For example, $100 is written as 10000.",
                "example": 10000
              },
              "metadata": {
                "type": [
                  "object",
                  "null"
                ],
                "description": "A set of custom key/value pairs that you can attach to a SKU."
              },
              "override": {
                "type": [
                  "boolean",
                  "null"
                ],
                "description": "The override is used once the product should be stored in system. If sku does not exist, it will be created with the use of `source_id`. If a SKU does not exist, it's required to set `product_id` that it belongs to."
              }
            }
          }
        }
      },
      "1_req_obj_vouchers_qualification_sku - copy": {
        "title": "SKU Item",
        "type": "object",
        "description": "Schema model for a SKU item.",
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ]
          },
          "source_id": {
            "type": [
              "string",
              "null"
            ],
            "description": "The merchant’s product/SKU ID (if it is different from the Voucherify product/SKU ID). It is really useful in case of integration between multiple systems. It can be an ID from an eCommerce, a database or a 3rd-party service."
          },
          "product_id": {
            "type": [
              "string",
              "null"
            ]
          },
          "related_object": {
            "type": [
              "string",
              "null"
            ],
            "enum": [
              "product",
              "sku"
            ]
          },
          "amount": {
            "type": [
              "integer",
              "null"
            ],
            "description": "Represents a total amount of order item (price * quantity).\n\nYou should provide it to retrieve `discount_amount` if the discount is applied only to this item.[I'm not sure what this means here, it's from the original docs]"
          },
          "quantity": {
            "type": [
              "integer",
              "null"
            ],
            "description": "Quantity of the item in the cart."
          },
          "price": {
            "type": [
              "integer",
              "null"
            ],
            "description": "Unit price of an item"
          },
          "sku": {
            "type": [
              "object",
              "null"
            ],
            "description": "An object containing details of the related SKU. These details will be used for validation and redemption processes on top of details already stored in the system.",
            "properties": {
              "id": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "source_id": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "sku": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "price": {
                "type": [
                  "integer",
                  "null"
                ]
              },
              "metadata": {
                "type": [
                  "object",
                  "null"
                ]
              },
              "override": {
                "type": [
                  "boolean",
                  "null"
                ],
                "description": "The override is used once the product should be stored in system. If sku does not exist it will be created with the use of `source_id`. If sku does not exists it's required to set `product_id` that it belongs to."
              }
            }
          }
        }
      },
      "1_req_vouchers_qualification_copy_for_reverting_changes": {
        "title": "Vouchers Qualification Request Body",
        "type": "object",
        "description": "Request body schema for /vouchers/qualification.",
        "properties": {
          "customer": {
            "type": [
              "object",
              "null"
            ],
            "description": "This object stores customer details. You can send this object in the request body to check against vouchers requiring specific customer validation rules to be satisfied. The qualification runs against rules that are defined through the [Create Validation Rules](https://docs.voucherify.io/reference/create-validation-rules) endpoint or via the Dashboard; in the _Advanced Rule Builder_ &rarr; _Audience_ &rarr; _Customer segment_ or _Basic Builder_ &rarr; _Customer Activity_. [Read more](https://support.voucherify.io/article/148-how-to-build-a-rule). ",
            "properties": {
              "id": {
                "type": "string",
                "description": "The ID of an existing customer that will be linked to the redemption in this request. This ID was assigned by the Voucherify API.",
                "example": "cust_J1CDUdbqn5Exva8ASWk1Fq0j"
              },
              "source_id": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "A unique customer identifier. This is a tracking identifier of a user that is validating a voucher. The `source_id` is built based on your internal id (e.g., email, database ID). If you also pass a customer ID, the source ID will be ignored. Otherwise, if you do not pass a customer ID, the source ID you provide must either be a token, like the one returned in the original voucher validation method done by a specific customer, or a string identifying the customer (e.g., email, database ID, CRM ID).",
                "example": "firstname.lastname@mycompany.com"
              },
              "name": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "First and Last Name. You can send the name in the request body to check against vouchers requiring specific name validation rules to be satisfied.",
                "example": "FirstName LastName"
              },
              "email": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "You can send the email in the request body to check against vouchers requiring specific email validation rules to be satisfied.",
                "example": "firstname.lastname@mycompany.com"
              },
              "phone": {
                "type": [
                  "string",
                  "null"
                ],
                "minLength": 1,
                "maxLength": 30,
                "pattern": "^[-+.() 0-9]",
                "description": "You can send the phone in the request body to check against vouchers requiring specific phone validation rules to be satisfied."
              },
              "address": {
                "type": [
                  "object",
                  "null"
                ],
                "additionalProperties": false,
                "description": "A set of key/value pairs which describes the address. You can send the address in the request body to check against vouchers requiring specific address validation rules to be satisfied.",
                "properties": {
                  "city": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "You can send the city in the request body to check against vouchers requiring specific city validation rules to be satisfied.",
                    "example": "New York"
                  },
                  "country": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "You can send the country in the request body to check against vouchers requiring specific country validation rules to be satisfied.",
                    "example": "United States of America"
                  },
                  "postal_code": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "You can send the postal code in the request body to check against vouchers requiring specific postal code validation rules to be satisfied.",
                    "example": "10001"
                  },
                  "state": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "You can send the state in the request body to check against vouchers requiring specific state validation rules to be satisfied.",
                    "example": "NY"
                  }
                }
              },
              "metadata": {
                "type": [
                  "object",
                  "null"
                ],
                "description": "A set of key/value pairs that you can send in the request body to check against vouchers requiring **customer** metadata validation rules to be satisfied. The qualification runs against rules that are defined through the [Create Validation Rules](https://docs.voucherify.io/reference/create-validation-rules) endpoint or via the Dashboard; in the _Advanced Rule Builder_ &rarr; _Audience_ &rarr; _Customer metadata satisfy_. [Read more](https://support.voucherify.io/article/148-how-to-build-a-rule)."
              },
              "birthdate": {
                "type": [
                  "string",
                  "null"
                ],
                "example": "YYYY-MM-DD",
                "format": "date",
                "description": "You can send the birthdate in the request body to check against vouchers requiring specific birthdate validation rules to be satisfied."
              }
            }
          },
          "order": {
            "type": [
              "object",
              "null"
            ],
            "description": "Tracks purchase transactions. You can send the order in the request body to check against vouchers requiring specific order validation rules to be satisfied. The qualification runs against rules that are defined through the [Create Validation Rules](https://docs.voucherify.io/reference/create-validation-rules) endpoint or via the Dashboard; in the _Advanced Rule Builder_ &rarr; _Order structure/Order volume_ or _Basic Builder_ &rarr; _Order_. [Read more](https://support.voucherify.io/article/148-how-to-build-a-rule).",
            "properties": {
              "id": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "The ID of an existing order in Voucherify's system that will be linked to the redemption of this request. This ID was assigned by the Voucherify API. You can send the order id in the request body to check against vouchers requiring specific order validation rules to be satisfied.",
                "example": "ord_gqj1QYW2j2A1E3Ula2YjdPf4"
              },
              "source_id": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "The merchant’s order ID if it is different from the Voucherify order ID. It is really useful in case of an integration between multiple systems. It can be an order ID from a CRM system, database or 3rd-party service."
              },
              "amount": {
                "type": [
                  "integer",
                  "null"
                ],
                "minimum": 0,
                "description": "Pre-discount order amount represents the total amount of order items' amounts (sum of each item's `amount` property). You can send the amount in the request body to check against vouchers requiring specific order amount validation rules to be satisfied. \n\nValue is multiplied by 100 to precisely represent 2 decimal places. For example, $100 is written as 10000.",
                "example": 10000
              },
              "items": {
                "type": "array",
                "description": "List of Order Items constituting the order. Order items can be defined either by `product_id` or `sku_id`. For every item, you must define the quantity. Read more about the [order item object] (hyperlink the Order Item Object).\n",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/1_req_obj_vouchers_qualification_product"
                    },
                    {
                      "$ref": "#/components/schemas/1_req_obj_vouchers_qualification_sku"
                    }
                  ]
                }
              },
              "customer": {
                "$ref": "#/components/schemas/1_req_obj_vouchers_qualification_customer"
              },
              "referrer": {
                "description": "The person who referred the customer to make the order.",
                "type": [
                  "object",
                  "null"
                ]
              },
              "metadata": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "A set of key/value pairs that you can send in the request body to check against vouchers requiring **order** metadata validation rules to be satisfied. The qualification runs against rules that are defined through the [Create Validation Rules](https://docs.voucherify.io/reference/create-validation-rules) endpoint or via the Dashboard; in the _Advanced Rule Builder_ &rarr; _Order structure_ &rarr; _Order metadata satisfy_ or _Basic Builder_ &rarr; _Attributes match_ &rarr; _ORDER METADATA_. [Read more](https://support.voucherify.io/article/148-how-to-build-a-rule)."
              }
            }
          },
          "reward": {
            "type": [
              "object",
              "null"
            ],
            "properties": {
              "points": {
                "type": [
                  "number",
                  "null"
                ]
              },
              "assignment_id": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "id": {
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          },
          "metadata": {
            "type": [
              "object",
              "null"
            ],
            "description": "A set of key/value pairs that you can send in the request body to check against vouchers requiring **redemption** metadata validation rules to be satisfied. The qualification runs against rules that are defined through the [Create Validation Rules](https://docs.voucherify.io/reference/create-validation-rules) endpoint or via the Dashboard; in the _Advanced Rule Builder_ &rarr; _Advanced_ &rarr; _Redemption metadata satisfy_ or _Basic Builder_ &rarr; _Attributes match_ &rarr; _REDEMPTION METADATA_. [Read more](https://support.voucherify.io/article/148-how-to-build-a-rule)."
          }
        }
      },
      "1_req_obj_vouchers_qualification_product - copy": {
        "title": "Product Item",
        "type": "object",
        "description": "Schema model for a product item.",
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ]
          },
          "source_id": {
            "type": [
              "string",
              "null"
            ],
            "description": "Product/SKU reference ID"
          },
          "product_id": {
            "type": [
              "string",
              "null"
            ]
          },
          "sku_id": {
            "type": [
              "string",
              "null"
            ]
          },
          "related_object": {
            "type": [
              "string",
              "null"
            ],
            "enum": [
              "product",
              "sku"
            ]
          },
          "amount": {
            "type": [
              "integer",
              "null"
            ],
            "description": "Represents a total amount of order item (price * quantity).\n\nYou should provide it to retrieve `discount_amount` if the discount is applied only to this item."
          },
          "quantity": {
            "type": [
              "integer",
              "null"
            ],
            "description": "Quantity of the item in the cart."
          },
          "price": {
            "type": [
              "integer",
              "null"
            ],
            "description": "Unit price of an item"
          },
          "product": {
            "type": [
              "object",
              "null"
            ],
            "description": "An object containing details of the related product. These details will be used for validation and redemption processes on top of details already stored in the system.",
            "properties": {
              "id": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "source_id": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "name": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "price": {
                "type": [
                  "integer",
                  "null"
                ]
              },
              "metadata": {
                "type": [
                  "object",
                  "null"
                ]
              },
              "override": {
                "type": [
                  "boolean",
                  "null"
                ]
              }
            }
          },
          "sku": {
            "type": [
              "object",
              "null"
            ],
            "description": "An object containing details of the related SKU. These details will be used for validation and redemption processes on top of details already stored in the system.",
            "properties": {
              "id": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "source_id": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "sku": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "price": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "metadata": {
                "type": [
                  "object",
                  "null"
                ]
              },
              "override": {
                "type": [
                  "boolean",
                  "null"
                ],
                "description": "The override is used once the product should be stored in system. If sku does not exists it will be created with the use of `source_id`. If sku does not exists it's required to set `product_id` that it belongs to."
              }
            }
          }
        }
      },
      "1_req_vouchers_qualification-prepforcampaignqualification": {
        "title": "RequestBodyVouchersQualification",
        "type": "object",
        "description": "Request body schema for /vouchers/qualification.",
        "properties": {
          "customer": {
            "type": [
              "object",
              "null"
            ],
            "description": "This object stores customer details.",
            "properties": {
              "id": {
                "type": "string",
                "description": "The ID of an existing customer that will be linked to the redemption in this request. Assigned by the Voucherify API, identifies the customer.",
                "example": "cust_J1CDUdbqn5Exva8ASWk1Fq0j"
              },
              "source_id": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "A unique customer identifier. You can provide your own (e.g. CRM id) or use the one returned by Voucherify, see tracking_id from Validate Voucher (client-side). A tracking identifier of a user that validate a voucher. It is build based on your internal id (e.g., email, database ID). If you also pass a customer ID, the source ID will be ignored. Otherwise, if you do not pass a customer ID, the source ID you provide must either be a token, like the ones returned in origin voucher validation method done by specific customer, or a string identifying customer (e.g., email, database ID, CRM ID)."
              },
              "name": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "First and Last Name"
              },
              "email": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "phone": {
                "type": [
                  "string",
                  "null"
                ],
                "minLength": 1,
                "maxLength": 30,
                "pattern": "^[-+.() 0-9]"
              },
              "address": {
                "type": [
                  "object",
                  "null"
                ],
                "additionalProperties": false,
                "description": "A set of key/value pairs which describes the address.",
                "properties": {
                  "city": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "country": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "postal_code": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "state": {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                }
              },
              "metadata": {
                "type": [
                  "object",
                  "null"
                ],
                "description": "A set of key/value pairs that you can attach to a customer object for segment building. It can be useful for storing additional information about the customer in a structured format."
              },
              "birthdate": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "Customer's birthdate",
                "example": "YYYY-MM-DD",
                "format": "date"
              }
            }
          },
          "order": {
            "type": [
              "object",
              "null"
            ],
            "description": "Tracks purchase transactions.",
            "properties": {
              "id": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "The ID of an existing order that will be linked to redemption in this request."
              },
              "status": {
                "type": [
                  "string",
                  "null"
                ],
                "enum": [
                  "CREATED",
                  "PAID",
                  "CANCELED",
                  "FULFILLED"
                ]
              },
              "source_id": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "The merchant’s order ID if it is different from the Voucherify order ID. It is really useful in case of integration between multiple systems. It can be an order ID from CRM, database or 3rd party service."
              },
              "amount": {
                "type": [
                  "integer",
                  "null"
                ],
                "minimum": 0,
                "description": "Represents a total amount of order items (sum of item.amount)\n\nValue is multiplied by 100 to precisely represent 2 decimal places. For example, $100 is written as 10000."
              },
              "discount_amount": {
                "type": [
                  "integer",
                  "null"
                ],
                "minimum": 0,
                "description": "Summarize all discounts applied to the order inlcuding discounts applied to particular order line items and discounts applied to the whole cart.\n\nValue is multiplied by 100 to precisely represent 2 decimal places. For example, $100 is written as 10000."
              },
              "items": {
                "type": "array",
                "description": "List of Order Items constituting the order. Order items can be defined either by product_id or sku_id. Along with every item you must define quantity.A list of Order Items that have been applied to the order. hyperlink the Order Items to another object.\n",
                "items": {
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "id": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "source_id": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "description": "Product/SKU reference ID"
                    },
                    "product_id": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "sku_id": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "related_object": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "enum": [
                        "product",
                        "sku"
                      ],
                      "description": "Allowed values: `product`, `sku`"
                    },
                    "amount": {
                      "type": [
                        "integer",
                        "null"
                      ],
                      "description": "Represents a total amount of order item (price * quantity).\n\nYou should provide it to retrieve `discount_amount` if the discount is applied only to this item."
                    },
                    "discount_amount": {
                      "type": [
                        "integer",
                        "null"
                      ],
                      "description": "Represents total amount of the discount applied to order line items\n\nValue is multiplied by 100 to precisely represent 2 decimal places. For example, $100 is written as 10000."
                    },
                    "quantity": {
                      "type": [
                        "integer",
                        "null"
                      ]
                    },
                    "discount_quantity": {
                      "type": [
                        "integer",
                        "null"
                      ],
                      "description": "number of items being discounted\t"
                    },
                    "price": {
                      "type": [
                        "integer",
                        "null"
                      ],
                      "description": "Unit price of an item"
                    },
                    "product": {
                      "type": [
                        "object",
                        "null"
                      ],
                      "default": null,
                      "description": "An object containing details of related product. Those details will be used for validation and redemption processes on top of details already stored in system.",
                      "properties": {
                        "id": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "source_id": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "name": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "price": {
                          "type": [
                            "null",
                            "integer"
                          ]
                        },
                        "metadata": {
                          "type": [
                            "object",
                            "null"
                          ]
                        },
                        "override": {
                          "type": [
                            "boolean",
                            "null"
                          ],
                          "description": "The `override` is used once the product should be stored in system. If product does not exists it will be created with the use of `source_id`."
                        }
                      }
                    },
                    "sku": {
                      "type": [
                        "object",
                        "null"
                      ],
                      "default": null,
                      "description": "An object containing details of related SKU. Those details will be used for validation and redemption processes on top of details already stored in system.",
                      "properties": {
                        "id": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "source_id": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "sku": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "price": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "metadata": {
                          "type": [
                            "object",
                            "null"
                          ]
                        },
                        "override": {
                          "type": [
                            "boolean",
                            "null"
                          ],
                          "description": "The override is used once the product should be stored in system. If sku does not exists it will be created with the use of `source_id`. If sku does not exists it's required to set `product_id` that it belongs to."
                        }
                      }
                    }
                  }
                }
              },
              "customer": {
                "type": [
                  "object",
                  "null"
                ],
                "description": "The customer used for the order."
              },
              "referrer": {
                "description": "The person who referred the customer to make the order.",
                "type": [
                  "object",
                  "null"
                ]
              },
              "metadata": {
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          },
          "reward": {
            "type": [
              "object",
              "null"
            ],
            "properties": {
              "points": {
                "type": [
                  "number",
                  "null"
                ]
              },
              "assignment_id": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "id": {
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          },
          "metadata": {
            "type": [
              "object",
              "null"
            ],
            "description": "Metadata can be a string, number, boolean, date, datetime, image_url, object, geopoint, unknown. | related objects: campaign, voucher, publication, redemption, product, customer, order, order_item, loyalty_tier, promotion_tier."
          }
        }
      },
      "1_req_vouchers_qualification - copy": {
        "title": "RequestBodyVouchersQualification",
        "type": "object",
        "description": "Request body schema for /vouchers/qualification.",
        "properties": {
          "customer": {
            "type": [
              "object",
              "null"
            ],
            "description": "This object stores customer details.",
            "properties": {
              "id": {
                "type": "string",
                "description": "The ID of an existing customer that will be linked to the redemption in this request. Assigned by the Voucherify API, identifies the customer.",
                "example": "cust_J1CDUdbqn5Exva8ASWk1Fq0j"
              },
              "source_id": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "A unique customer identifier. You can provide your own (e.g. CRM id) or use the one returned by Voucherify, see tracking_id from Validate Voucher (client-side). A tracking identifier of a user that validate a voucher. It is build based on your internal id (e.g., email, database ID). If you also pass a customer ID, the source ID will be ignored. Otherwise, if you do not pass a customer ID, the source ID you provide must either be a token, like the ones returned in origin voucher validation method done by specific customer, or a string identifying customer (e.g., email, database ID, CRM ID)."
              },
              "name": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "First and Last Name"
              },
              "description": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "An arbitrary string that you can attach to a customer object. It is displayed alongside a customer in the dashboard.\t"
              },
              "email": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "phone": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "address": {
                "type": [
                  "object",
                  "null"
                ],
                "additionalProperties": false,
                "description": "A set of key/value pairs which describes the address.",
                "properties": {
                  "city": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "country": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "line_1": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "line_2": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "postal_code": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "state": {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                }
              },
              "metadata": {
                "type": [
                  "object",
                  "null"
                ],
                "description": "A set of key/value pairs that you can attach to a customer object for segment building. It can be useful for storing additional information about the customer in a structured format."
              },
              "email_unsubscribed": {
                "type": [
                  "boolean",
                  "null"
                ]
              },
              "birthday": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "Customer's birthdate.",
                "format": "date",
                "example": "2022-03-07"
              },
              "birthdate": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "Customer's birthdate",
                "example": "2022-03-07",
                "format": "date"
              },
              "customer_landing_page": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "custom_event": {
                    "type": [
                      "object",
                      "null"
                    ]
                  },
                  "consents": {
                    "type": [
                      "object",
                      "null"
                    ]
                  },
                  "publication_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "voucher_code": {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                }
              },
              "created_at": {
                "type": "string"
              }
            }
          },
          "order": {
            "type": [
              "object",
              "null"
            ],
            "description": "Tracks purchase transactions.",
            "properties": {
              "id": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "The ID of an existing order that will be linked to redemption in this request."
              },
              "status": {
                "type": [
                  "string",
                  "null"
                ],
                "enum": [
                  "CREATED",
                  "PAID",
                  "CANCELED",
                  "FULFILLED"
                ]
              },
              "source_id": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "The merchant’s order ID if it is different from the Voucherify order ID. It is really useful in case of integration between multiple systems. It can be an order ID from CRM, database or 3rd party service."
              },
              "amount": {
                "type": [
                  "integer",
                  "null"
                ],
                "minimum": 0,
                "description": "Represents a total amount of order items (sum of item.amount)\n\nValue is multiplied by 100 to precisely represent 2 decimal places. For example, $100 is written as 10000."
              },
              "discount_amount": {
                "type": [
                  "integer",
                  "null"
                ],
                "minimum": 0,
                "description": "Summarize all discounts applied to the order inlcuding discounts applied to particular order line items and discounts applied to the whole cart.\n\nValue is multiplied by 100 to precisely represent 2 decimal places. For example, $100 is written as 10000."
              },
              "items": {
                "type": "array",
                "description": "List of Order Items constituting the order. Order items can be defined either by product_id or sku_id. Along with every item you must define quantity.A list of Order Items that have been applied to the order. hyperlink the Order Items to another object.\n",
                "items": {
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "id": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "source_id": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "description": "Product/SKU reference ID"
                    },
                    "product_id": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "sku_id": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "related_object": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "enum": [
                        "product",
                        "sku"
                      ],
                      "description": "Allowed values: `product`, `sku`"
                    },
                    "amount": {
                      "type": [
                        "integer",
                        "null"
                      ],
                      "description": "Represents a total amount of order item (price * quantity).\n\nYou should provide it to retrieve `discount_amount` if the discount is applied only to this item."
                    },
                    "discount_amount": {
                      "type": [
                        "integer",
                        "null"
                      ],
                      "description": "Represents total amount of the discount applied to order line items\n\nValue is multiplied by 100 to precisely represent 2 decimal places. For example, $100 is written as 10000."
                    },
                    "quantity": {
                      "type": [
                        "integer",
                        "null"
                      ]
                    },
                    "discount_quantity": {
                      "type": [
                        "integer",
                        "null"
                      ],
                      "description": "number of items being discounted\t"
                    },
                    "price": {
                      "type": [
                        "integer",
                        "null"
                      ],
                      "description": "Unit price of an item"
                    },
                    "product": {
                      "type": [
                        "object",
                        "null"
                      ],
                      "default": null,
                      "description": "An object containing details of related product. Those details will be used for validation and redemption processes on top of details already stored in system.",
                      "properties": {
                        "id": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "source_id": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "name": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "price": {
                          "type": [
                            "null",
                            "integer"
                          ]
                        },
                        "metadata": {
                          "type": [
                            "object",
                            "null"
                          ]
                        },
                        "override": {
                          "type": [
                            "boolean",
                            "null"
                          ],
                          "description": "The `override` is used once the product should be stored in system. If product does not exists it will be created with the use of `source_id`."
                        }
                      }
                    },
                    "sku": {
                      "type": [
                        "object",
                        "null"
                      ],
                      "default": null,
                      "description": "An object containing details of related SKU. Those details will be used for validation and redemption processes on top of details already stored in system.",
                      "properties": {
                        "id": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "source_id": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "sku": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "price": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "metadata": {
                          "type": [
                            "object",
                            "null"
                          ]
                        },
                        "override": {
                          "type": [
                            "boolean",
                            "null"
                          ],
                          "description": "The override is used once the product should be stored in system. If sku does not exists it will be created with the use of `source_id`. If sku does not exists it's required to set `product_id` that it belongs to."
                        }
                      }
                    }
                  }
                }
              },
              "customer": {
                "type": [
                  "object",
                  "null"
                ],
                "description": "The customer used for the order."
              },
              "referrer": {
                "description": "The person who referred the customer to make the order.",
                "type": [
                  "object",
                  "null"
                ]
              },
              "metadata": {
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          },
          "reward": {
            "type": [
              "object",
              "null"
            ],
            "properties": {
              "points": {
                "type": [
                  "number",
                  "null"
                ]
              },
              "assignment_id": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "id": {
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          },
          "metadata": {
            "type": [
              "object",
              "null"
            ],
            "description": "Metadata can be a string, number, boolean, date, datetime, image_url, object, geopoint, unknown. | related objects: campaign, voucher, publication, redemption, product, customer, order, order_item, loyalty_tier, promotion_tier."
          },
          "gift": {
            "type": [
              "object",
              "null"
            ],
            "properties": {
              "credits": {
                "type": [
                  "number",
                  "null"
                ]
              }
            }
          },
          "session": {
            "type": [
              "object",
              "null"
            ],
            "properties": {
              "key": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "Unique session identifier assigned by the Voucherify API."
              },
              "type": {
                "type": [
                  "string",
                  "null"
                ],
                "enum": [
                  "COUNT_PER_CUSTOMER",
                  "ORDER",
                  "LOCK"
                ],
                "description": "The type of session. Required to establish a new session. \n\n`LOCK`: Locks the following parameters within the session:\n\n- redemption quantity by 1\n- redemption gift credits specified with the requests\n- redemption loyalty points specified with the request"
              },
              "ttl": {
                "type": [
                  "number",
                  "null"
                ],
                "description": "Value for the period of time that the session is active. Units for this parameter are defined by `session.ttl_unit`."
              },
              "ttl_unit": {
                "type": [
                  "string",
                  "null"
                ],
                "enum": [
                  "DAYS",
                  "HOURS",
                  "MICROSECONDS",
                  "MILLISECONDS",
                  "MINUTES",
                  "NANOSECONDS",
                  "SECONDS"
                ],
                "description": "Defines the type of unit in which the session time is counted."
              }
            }
          },
          "tracking_id": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 2500,
            "example": "track_fxEMFisanb7t4l96X8WKcemyGNPnHpGM3KTfUsqZGCOx/p57/J2+Yw==",
            "description": "A tracking identifier of a user that validated a voucher. Identifier generated during voucher validation."
          }
        }
      },
      "1_req_obj_vouchers_qualification_order": {
        "title": "OrderObject",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        }
      },
      "1_req_obj_vouchers_qualification_reward": {
        "title": "RewardObject",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        }
      },
      "0_obj_metadata": {
        "title": "MetadataObject",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        }
      },
      "res_empty_json": {
        "type": "object",
        "description": "Schema model for an empty json.",
        "title": "Empty JSON",
        "examples": [
          {}
        ]
      },
      "2_obj_campaign_object": {
        "title": "Campaign Object",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "description": "This is an object representing a campaign.",
        "x-tags": [
          "CAMPAIGNS API"
        ]
      },
      "3_obj_promotion_tier_object": {
        "title": "Promotion Tier Object",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "description": "This is an object representing a promotion tier. Promotion tiers are always assigned to a campaign and cannot be used standalone.",
        "x-tags": [
          "PROMOTIONS API"
        ]
      },
      "4_obj_reward_object": {
        "title": "Reward Object",
        "type": "object",
        "description": "This is an object representing a reward.",
        "x-tags": [
          "REWARDS API"
        ],
        "properties": {
          "id": {
            "type": "string",
            "example": "rew_nIy4gHpQHle2c3pNMwuj7G6j",
            "description": "Unique reward ID, assigned by Voucherify."
          },
          "name": {
            "type": "string",
            "description": "Reward name."
          },
          "type": {
            "type": "string",
            "enum": [
              "CAMPAIGN",
              "COIN",
              "MATERIAL"
            ],
            "description": "Reward type."
          },
          "parameters": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/4_obj_reward_object_parameters_CAMPAIGN"
              },
              {
                "$ref": "#/components/schemas/4_obj_reward_object_parameters_COIN"
              },
              {
                "$ref": "#/components/schemas/4_obj_reward_object_parameters_MATERIAL"
              }
            ],
            "description": "Defines how the reward is generated."
          },
          "stock": {
            "type": "string",
            "description": "Configurable for **material rewards**. The number of units of the product that you want to share as reward."
          },
          "redeemed": {
            "type": "string",
            "description": "Defines the number of already invoked (successful) reward redemptions.\t"
          },
          "attributes": {
            "type": "object",
            "description": "These properties are configurable for **material rewards**.",
            "properties": {
              "image_url": {
                "type": "string",
                "description": "The HTTPS URL pointing to the .png or .jpg file."
              },
              "description": {
                "type": "string",
                "description": "An arbitrary string that you can attach to a material reward."
              }
            }
          },
          "created_at": {
            "type": "string",
            "description": "Timestamp representing the date and time when the reward was created in ISO 8601 format.",
            "example": "2022-08-11T14:49:22.586Z"
          },
          "updated_at": {
            "type": [
              "string",
              "null"
            ],
            "description": "Timestamp representing the date and time when the reward was updated in ISO 8601 format.",
            "example": "2022-08-11T16:01:34.885Z"
          },
          "metadata": {
            "type": "object",
            "description": "The metadata object stores all custom attributes assigned to the reward. A set of key/value pairs that you can attach to a reward object. It can be useful for storing additional information about the reward in a structured format."
          },
          "object": {
            "type": "string",
            "default": "reward",
            "description": "The type of object represented by the JSON. This object stores information about the reward."
          }
        }
      },
      "4_obj_reward_object_parameters_CAMPAIGN": {
        "title": "Digital",
        "type": "object",
        "description": "These are parameters representing a digital (CAMPAIGN) reward. These can be in the form of discount coupons, gift card credits, or loyalty point credits.",
        "x-tags": [
          "REWARDS API"
        ],
        "properties": {
          "campaign": {
            "description": "Objects stores information about the campaign related to the reward.",
            "anyOf": [
              {
                "$ref": "#/components/schemas/4_obj_reward_object_parameters_CAMPAIGN_DISCOUNT_COUPONS"
              },
              {
                "$ref": "#/components/schemas/4_obj_reward_object_parameters_CAMPAIGN_GIFT_VOUCHERS"
              },
              {
                "$ref": "#/components/schemas/4_obj_reward_object_parameters_CAMPAIGN_LOYALTY_PROGRAM"
              }
            ]
          }
        }
      },
      "4_obj_reward_object_parameters_CAMPAIGN_DISCOUNT_COUPONS": {
        "title": "Discount Coupons",
        "type": "object",
        "description": "These are parameters representing a discount coupon, which is a subset of a Digital (CAMPAIGN) reward.",
        "x-tags": [
          "REWARDS API"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique campaign ID, assigned by Voucherify.",
            "example": "camp_13BbZ0kQsNinhqsX3wUts2UP"
          },
          "type": {
            "type": "string",
            "description": "Campaign type.",
            "default": "DISCOUNT_COUPONS"
          }
        }
      },
      "4_obj_reward_object_parameters_CAMPAIGN_GIFT_VOUCHERS": {
        "title": "Gift Vouchers",
        "type": "object",
        "description": "These are parameters representing a gift voucher, which is a subset of a Digital (CAMPAIGN) reward.",
        "x-tags": [
          "REWARDS API"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique campaign ID, assigned by Voucherify.",
            "example": "camp_13BbZ0kQsNinhqsX3wUts2UP"
          },
          "balance": {
            "type": "integer",
            "description": "The incremental amout to be added to the current balance on the gift card. Value is multiplied by 100 to precisely represent 2 decimal places. For example, $100 amount is written as 10000."
          },
          "type": {
            "type": "string",
            "description": "Campaign type.",
            "default": "GIFT_VOUCHERS"
          }
        }
      },
      "4_obj_reward_object_parameters_CAMPAIGN_LOYALTY_PROGRAM": {
        "title": "Points on loyalty card",
        "type": "object",
        "description": "These are parameters representing points on a loyalty card, which is a subset of a Digital (CAMPAIGN) reward.",
        "x-tags": [
          "REWARDS API"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique campaign ID, assigned by Voucherify.",
            "example": "camp_13BbZ0kQsNinhqsX3wUts2UP"
          },
          "balance": {
            "type": "integer",
            "description": "The incremental points to be added to the current balance on the loyalty card."
          },
          "type": {
            "type": "string",
            "description": "Campaign type.",
            "default": "LOYALTY_PROGRAM"
          }
        }
      },
      "4_obj_reward_object_parameters_COIN": {
        "title": "Pay with Points",
        "type": "object",
        "description": "These are parameters representing a Pay with Points (COIN) reward. ",
        "x-tags": [
          "REWARDS API"
        ],
        "properties": {
          "coin": {
            "type": "object",
            "description": "Defines the ratio by mapping the number of loyalty points in `points_ratio` to a predefined cash amount in `exchange_ratio`.",
            "properties": {
              "exchange_ratio": {
                "type": "string",
                "description": "The cash equivalent of the points defined in the `points_ratio` property."
              },
              "points_ratio": {
                "type": "string",
                "description": "The number of loyalty points that will map to the predefined cash amount defined by the `exchange_ratio` property."
              }
            }
          }
        }
      },
      "4_obj_reward_object_parameters_MATERIAL": {
        "title": "Material",
        "type": "object",
        "description": "These are parameters representing products as a (MATERIAL) reward.",
        "x-tags": [
          "REWARDS API"
        ],
        "properties": {
          "product": {
            "type": "object",
            "description": "Contains information about the product given as a reward.",
            "properties": {
              "id": {
                "type": "string",
                "example": "prod_0b7d7dfb05cbe5c616",
                "description": "Unique product ID, assigned by Voucherify. "
              },
              "sku_id": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "Unique SKU ID, assigned by Voucherify, of the SKU given as a reward.",
                "example": "sku_0b7d7dfb090be5c619"
              }
            }
          }
        }
      },
      "4_req_create_reward": {
        "title": "Create Reward Request Body",
        "description": "Request body schema for **POST** `/rewards`.",
        "x-tags": [
          "REWARDS API"
        ],
        "anyOf": [
          {
            "$ref": "#/components/schemas/4_req_create_reward_CAMPAIGN"
          },
          {
            "$ref": "#/components/schemas/4_req_create_reward_MATERIAL"
          },
          {
            "$ref": "#/components/schemas/4_req_create_reward_COIN"
          }
        ]
      },
      "4_req_create_reward - copy": {
        "title": "Create Reward Request Body",
        "type": "object",
        "description": "Request body schema for **POST** `/rewards`.",
        "x-tags": [
          "REWARDS API"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Reward name."
          },
          "type": {
            "type": "string",
            "enum": [
              "CAMPAIGN",
              "COIN",
              "MATERIAL"
            ],
            "description": "Reward type."
          },
          "parameters": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/4_req_reward_parameters_COIN"
              },
              {
                "$ref": "#/components/schemas/4_req_reward_parameters_MATERIAL"
              },
              {
                "$ref": "#/components/schemas/4_req_reward_parameters_CAMPAIGN"
              }
            ],
            "description": "Defines how the reward is generated."
          },
          "stock": {
            "type": "integer",
            "description": "Configurable for material rewards. The number of units of the product that you want to share as a reward."
          },
          "attributes": {
            "type": "object",
            "description": "These properties are configurable for material rewards.",
            "properties": {
              "image_url": {
                "type": "string",
                "description": "The HTTPS URL pointing to the .png or .jpg file."
              },
              "description": {
                "type": "string",
                "description": "An arbitrary string that you can attach to a material reward."
              }
            }
          },
          "metadata": {
            "type": "string",
            "description": "The metadata object stores all custom attributes assigned to the reward. A set of key/value pairs that you can attach to a reward object. It can be useful for storing additional information about the reward in a structured format."
          }
        }
      },
      "4_req_create_reward_CAMPAIGN": {
        "title": "Digital Reward",
        "type": "object",
        "description": "Request body schema for creating a digital reward using **POST** `/rewards`.",
        "x-tags": [
          "REWARDS API"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Reward name."
          },
          "type": {
            "type": "string",
            "enum": [
              "CAMPAIGN"
            ],
            "description": "Reward type."
          },
          "parameters": {
            "$ref": "#/components/schemas/4_req_reward_parameters_CAMPAIGN"
          },
          "metadata": {
            "type": "string",
            "description": "The metadata object stores all custom attributes assigned to the reward. A set of key/value pairs that you can attach to a reward object. It can be useful for storing additional information about the reward in a structured format."
          }
        }
      },
      "4_req_create_reward_COIN": {
        "title": "Pay with Points Reward",
        "type": "object",
        "description": "Request body schema for creating a pay with points reward using **POST** `/rewards`.",
        "x-tags": [
          "REWARDS API"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Reward name."
          },
          "type": {
            "type": "string",
            "enum": [
              "COIN"
            ],
            "description": "Reward type."
          },
          "parameters": {
            "$ref": "#/components/schemas/4_req_reward_parameters_COIN"
          },
          "metadata": {
            "type": "string",
            "description": "The metadata object stores all custom attributes assigned to the reward. A set of key/value pairs that you can attach to a reward object. It can be useful for storing additional information about the reward in a structured format."
          }
        }
      },
      "4_req_create_reward_MATERIAL": {
        "title": "Material Reward",
        "type": "object",
        "description": "Request body schema to create a material reward using\n **POST** `/rewards`.",
        "x-tags": [
          "REWARDS API"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Reward name."
          },
          "type": {
            "type": "string",
            "enum": [
              "MATERIAL"
            ],
            "description": "Reward type."
          },
          "parameters": {
            "$ref": "#/components/schemas/4_req_reward_parameters_MATERIAL"
          },
          "stock": {
            "type": "integer",
            "description": "The number of units of the product that you want to share as a reward."
          },
          "attributes": {
            "type": "object",
            "description": "These properties are configurable for material rewards.",
            "properties": {
              "image_url": {
                "type": "string",
                "description": "The HTTPS URL pointing to the .png or .jpg file."
              },
              "description": {
                "type": "string",
                "description": "An arbitrary string that you can attach to a material reward."
              }
            }
          },
          "metadata": {
            "type": "string",
            "description": "The metadata object stores all custom attributes assigned to the reward. A set of key/value pairs that you can attach to a reward object. It can be useful for storing additional information about the reward in a structured format."
          }
        }
      },
      "4_req_update_reward": {
        "title": "Update Reward Request Body",
        "description": "Request body schema for **PUT** `/rewards/{rewardId}`.",
        "x-tags": [
          "REWARDS API"
        ],
        "anyOf": [
          {
            "$ref": "#/components/schemas/4_req_update_reward_CAMPAIGN"
          },
          {
            "$ref": "#/components/schemas/4_req_update_reward_COIN"
          },
          {
            "$ref": "#/components/schemas/4_req_update_reward_MATERIAL"
          }
        ]
      },
      "4_req_update_reward - copy": {
        "title": "Update Reward Request Body",
        "type": "object",
        "description": "Request body schema for **PUT** `/rewards/{rewardId}`.",
        "x-tags": [
          "REWARDS API"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Reward name."
          },
          "parameters": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/4_req_reward_parameters_COIN"
              },
              {
                "$ref": "#/components/schemas/4_req_reward_parameters_MATERIAL"
              },
              {
                "$ref": "#/components/schemas/4_req_reward_parameters_CAMPAIGN"
              }
            ],
            "description": "Defines how the reward is generated."
          },
          "stock": {
            "type": "integer",
            "description": "Configurable for material rewards. The number of units of the product that you want to share as a reward."
          },
          "attributes": {
            "type": "object",
            "description": "These properties are configurable for material rewards.",
            "properties": {
              "image_url": {
                "type": "string",
                "description": "The HTTPS URL pointing to the .png or .jpg file."
              },
              "description": {
                "type": "string",
                "description": "An arbitrary string that you can attach to a material reward."
              }
            }
          },
          "metadata": {
            "type": "string",
            "description": "The metadata object stores all custom attributes assigned to the reward. A set of key/value pairs that you can attach to a reward object. It can be useful for storing additional information about the reward in a structured format."
          }
        }
      },
      "4_req_update_reward_CAMPAIGN": {
        "title": "Digital Reward",
        "type": "object",
        "description": "Request body schema for updating a digital reward using **PUT** `/rewards/{rewardId}`.",
        "x-tags": [
          "REWARDS API"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Reward name."
          },
          "parameters": {
            "$ref": "#/components/schemas/4_req_reward_parameters_CAMPAIGN"
          },
          "metadata": {
            "type": "string",
            "description": "The metadata object stores all custom attributes assigned to the reward. A set of key/value pairs that you can attach to a reward object. It can be useful for storing additional information about the reward in a structured format."
          }
        }
      },
      "4_req_update_reward_COIN": {
        "title": "Pay with Points Reward",
        "type": "object",
        "description": "Request body schema for updating a pay with points reward using **PUT** `/rewards/{rewardId}`.",
        "x-tags": [
          "REWARDS API"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Reward name."
          },
          "parameters": {
            "$ref": "#/components/schemas/4_req_reward_parameters_COIN"
          },
          "metadata": {
            "type": "string",
            "description": "The metadata object stores all custom attributes assigned to the reward. A set of key/value pairs that you can attach to a reward object. It can be useful for storing additional information about the reward in a structured format."
          }
        }
      },
      "4_req_update_reward_MATERIAL": {
        "title": "Material Reward",
        "type": "object",
        "description": "Request body schema for updating a material reward using **PUT** `/rewards/{rewardId}`.",
        "x-tags": [
          "REWARDS API"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Reward name."
          },
          "parameters": {
            "$ref": "#/components/schemas/4_req_reward_parameters_MATERIAL"
          },
          "stock": {
            "type": "integer",
            "description": "The number of units of the product that you want to share as a reward."
          },
          "attributes": {
            "type": "object",
            "description": "These properties are configurable for material rewards.",
            "properties": {
              "image_url": {
                "type": "string",
                "description": "The HTTPS URL pointing to the .png or .jpg file."
              },
              "description": {
                "type": "string",
                "description": "An arbitrary string that you can attach to a material reward."
              }
            }
          },
          "metadata": {
            "type": "string",
            "description": "The metadata object stores all custom attributes assigned to the reward. A set of key/value pairs that you can attach to a reward object. It can be useful for storing additional information about the reward in a structured format."
          }
        }
      },
      "4_req_reward_parameters_CAMPAIGN_LOYALTY_PROGRAM": {
        "title": "Points on loyalty card",
        "type": "object",
        "description": "Configure a reward that adds points to a loyalty card. This type of reward is a subset of a Digital (CAMPAIGN) reward.",
        "x-tags": [
          "REWARDS API"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Assign the reward to the campaign that contains the loyalty cards that will be replenished by the reward. Provide the unique campaign ID, assigned by Voucherify.",
            "example": "camp_13BbZ0kQsNinhqsX3wUts2UP"
          },
          "balance": {
            "type": "integer",
            "description": "The incremental points to be added to the current balance on the loyalty card."
          }
        }
      },
      "4_req_reward_parameters_CAMPAIGN_GIFT_VOUCHERS": {
        "title": "Gift Vouchers",
        "type": "object",
        "description": "Configure a reward that adds cash to a gift card. This type of reward is a subset of a Digital (CAMPAIGN) reward.",
        "x-tags": [
          "REWARDS API"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Assign the reward to the campaign that contains the gift cards that will be replenished by the reward. Provide the unique campaign ID, assigned by Voucherify.",
            "example": "camp_13BbZ0kQsNinhqsX3wUts2UP"
          },
          "balance": {
            "type": "integer",
            "description": "The incremental amout to be added to the current balance on the gift card. Value is multiplied by 100 to precisely represent 2 decimal places. For example, $100 amount is written as 10000."
          }
        }
      },
      "4_req_reward_parameters_CAMPAIGN_DISCOUNT_COUPONS": {
        "title": "Discount Coupons",
        "type": "object",
        "description": "Configure a reward that provides a discount coupon. This type of reward is a subset of a Digital (CAMPAIGN) reward.",
        "x-tags": [
          "REWARDS API"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Assign the reward to the campaign that contains the vouchers that will be the source of the reward. Provide the unique campaign ID, assigned by Voucherify.",
            "example": "camp_13BbZ0kQsNinhqsX3wUts2UP"
          }
        }
      },
      "4_req_reward_parameters_CAMPAIGN": {
        "title": "Digital Reward",
        "type": "object",
        "description": "Configure a digital (CAMPAIGN) reward. These can be in the form of discount coupons, gift card credits, or loyalty point credits.",
        "x-tags": [
          "REWARDS API"
        ],
        "properties": {
          "campaign": {
            "description": "Objects stores information about the campaign related to the reward.",
            "anyOf": [
              {
                "$ref": "#/components/schemas/4_req_reward_parameters_CAMPAIGN_LOYALTY_PROGRAM"
              },
              {
                "$ref": "#/components/schemas/4_req_reward_parameters_CAMPAIGN_GIFT_VOUCHERS"
              },
              {
                "$ref": "#/components/schemas/4_req_reward_parameters_CAMPAIGN_DISCOUNT_COUPONS"
              }
            ]
          }
        }
      },
      "4_req_reward_parameters_MATERIAL": {
        "title": "Material Reward",
        "type": "object",
        "description": "Configure parameters representing products as a (MATERIAL) reward.",
        "x-tags": [
          "REWARDS API"
        ],
        "properties": {
          "product": {
            "type": "object",
            "description": "Define the product given as a reward.",
            "properties": {
              "id": {
                "type": "string",
                "example": "prod_0b7d7dfb05cbe5c616",
                "description": "Unique product ID, assigned by Voucherify, given as a reward."
              },
              "sku_id": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "Unique SKU ID, assigned by Voucherify, of the SKU given as a reward.",
                "example": "sku_0b7d7dfb090be5c619"
              }
            }
          }
        }
      },
      "4_req_reward_parameters_COIN": {
        "title": "Pay with Points Reward",
        "type": "object",
        "description": "Configure parameters representing a Pay with Points (COIN) reward. ",
        "x-tags": [
          "REWARDS API"
        ],
        "properties": {
          "coin": {
            "type": "object",
            "description": "Define the ratio by mapping the number of loyalty points in `points_ratio` to a predefined cash amount in `exchange_ratio`.",
            "properties": {
              "exchange_ratio": {
                "type": [
                  "string",
                  "integer"
                ],
                "description": "The cash equivalent of the points defined in the `points_ratio` property."
              },
              "points_ratio": {
                "type": [
                  "string",
                  "integer"
                ],
                "description": "The number of loyalty points that will map to the predefined cash amount defined by the `exchange_ratio` property."
              }
            }
          }
        }
      },
      "4_res_list_rewards": {
        "type": "object",
        "x-examples": {
          "example-1": {
            "object": "list",
            "data_ref": "data",
            "data": [
              {
                "id": "rew_0IeSimD3JS0TZr3jbZLC1hh9",
                "name": "jj",
                "type": "CAMPAIGN",
                "parameters": {
                  "campaign": {
                    "id": "camp_13BbZ0kQsNinhqsX3wUts2UP",
                    "type": "DISCOUNT_COUPONS"
                  }
                },
                "stock": null,
                "redeemed": null,
                "attributes": {},
                "created_at": "2022-08-12T14:31:24.416Z",
                "updated_at": null,
                "metadata": {},
                "object": "reward"
              },
              {
                "id": "rew_nlV8bgWU1jNO9YWQ7CdZmzq7",
                "name": "1 point = $0.01",
                "type": "COIN",
                "parameters": {
                  "coin": {
                    "exchange_ratio": 0.01,
                    "points_ratio": 1
                  }
                },
                "stock": null,
                "redeemed": null,
                "attributes": {},
                "created_at": "2022-08-11T16:45:21.582Z",
                "updated_at": null,
                "metadata": {
                  "Type": "0.01"
                },
                "object": "reward"
              },
              {
                "id": "rew_hWAZaxwC3CA395ih8F778o19",
                "name": "100 points = $20",
                "type": "COIN",
                "parameters": {
                  "coin": {
                    "exchange_ratio": 20,
                    "points_ratio": 100
                  }
                },
                "stock": null,
                "redeemed": null,
                "attributes": {},
                "created_at": "2022-08-11T16:36:00.225Z",
                "updated_at": null,
                "metadata": {
                  "Type": "$20."
                },
                "object": "reward"
              },
              {
                "id": "rew_pjJKIZgjIopIPZyibEAt7oPk",
                "name": "300 points = $30",
                "type": "COIN",
                "parameters": {
                  "coin": {
                    "exchange_ratio": 30,
                    "points_ratio": 300
                  }
                },
                "stock": null,
                "redeemed": null,
                "attributes": {},
                "created_at": "2022-08-11T16:33:56.111Z",
                "updated_at": null,
                "metadata": {
                  "Type": "$30."
                },
                "object": "reward"
              },
              {
                "id": "rew_Ts3YsCKdf0F8mgIBwVlEH78I",
                "name": "800 points = $50",
                "type": "COIN",
                "parameters": {
                  "coin": {
                    "exchange_ratio": 50,
                    "points_ratio": 800
                  }
                },
                "stock": null,
                "redeemed": null,
                "attributes": {},
                "created_at": "2022-08-11T16:33:01.756Z",
                "updated_at": null,
                "metadata": {
                  "Type": "$50."
                },
                "object": "reward"
              },
              {
                "id": "rew_YYKayFIiITd5JJwFrY8IVt36",
                "name": "800 points = $50",
                "type": "COIN",
                "parameters": {
                  "coin": {
                    "exchange_ratio": 50,
                    "points_ratio": 800
                  }
                },
                "stock": null,
                "redeemed": null,
                "attributes": {},
                "created_at": "2022-08-11T16:14:01.105Z",
                "updated_at": null,
                "metadata": {
                  "Type": "GR-1"
                },
                "object": "reward"
              },
              {
                "id": "rew_dgmk8yPKFXZ92e3px2G9MZlj",
                "name": "100 Points = $20",
                "type": "COIN",
                "parameters": {
                  "coin": {
                    "exchange_ratio": 20,
                    "points_ratio": 100
                  }
                },
                "stock": null,
                "redeemed": null,
                "attributes": {},
                "created_at": "2022-08-11T15:43:13.980Z",
                "updated_at": null,
                "metadata": {
                  "Type": "GR-1"
                },
                "object": "reward"
              },
              {
                "id": "rew_WP4Ys6rkMZ1wWH3V62Ol1O0j",
                "name": "$10 Gift Card",
                "type": "CAMPAIGN",
                "parameters": {
                  "campaign": {
                    "id": "camp_systemCampf1r5Tpr0J3Ct",
                    "balance": 1000,
                    "type": "GIFT_VOUCHERS"
                  }
                },
                "stock": null,
                "redeemed": null,
                "attributes": {},
                "created_at": "2022-08-11T14:49:22.586Z",
                "updated_at": null,
                "metadata": {},
                "object": "reward"
              },
              {
                "id": "rew_oQEYtUNYcVe2IdBEUBdLfkCD",
                "name": "Get a comic book",
                "type": "MATERIAL",
                "parameters": {
                  "product": {
                    "id": "prod_0b7d7dfb05cbe5c616",
                    "sku_id": null
                  }
                },
                "stock": "1",
                "redeemed": "1",
                "attributes": {
                  "image_url": "https://voucherify-uploads.s3.amazonaws.com/org_2qt8DYlM/img_fPH9ohe0pZf4EiIt295sk9Ob.png",
                  "description": "Archie's Series"
                },
                "created_at": "2022-08-11T14:35:44.694Z",
                "updated_at": "2022-08-11T16:01:34.885Z",
                "metadata": {
                  "Type": "GR-2"
                },
                "object": "reward"
              },
              {
                "id": "rew_Jhq0ecLGSx8eF4pFdlhFr9P6",
                "name": "20% discount",
                "type": "CAMPAIGN",
                "parameters": {
                  "campaign": {
                    "id": "camp_4B1jDE63pCeSij3HU7gx3gPT",
                    "type": "DISCOUNT_COUPONS"
                  }
                },
                "stock": null,
                "redeemed": null,
                "attributes": {},
                "created_at": "2022-08-11T09:52:39.032Z",
                "updated_at": null,
                "metadata": {},
                "object": "reward"
              }
            ],
            "total": 55
          }
        },
        "description": "Response body schema for **GET** `/rewards`.",
        "title": "List Rewards Response Body",
        "properties": {
          "object": {
            "type": "string",
            "description": "The type of object represented by JSON. This object stores information about rewards in a dictionary.",
            "default": "list"
          },
          "data_ref": {
            "type": "string",
            "description": "Identifies the name of the attribute that contains the array of rewards.",
            "default": "data"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/4_obj_reward_object"
            }
          },
          "total": {
            "type": "integer",
            "description": "Total number of rewards."
          }
        }
      },
      "4_obj_reward_assignment_object": {
        "title": "Reward Assignment Object",
        "type": "object",
        "description": "This is an object representing a reward assignment.",
        "x-tags": [
          "REWARDS API"
        ],
        "properties": {
          "id": {
            "type": "string",
            "example": "rewa_PbIRoMXpwe5QhobW4JKu0VjH",
            "description": "Unique reward assignment ID, assigned by Voucherify."
          },
          "reward_id": {
            "type": "string",
            "description": "Associated reward ID.",
            "example": "rew_C7wS9eHFDN4CIbXI5PpLSkGY"
          },
          "related_object_id": {
            "type": "string",
            "description": "Related object ID to which the reward was assigned.",
            "example": "camp_wciTvaOfYmAa3EmIIW3QpXXZ"
          },
          "related_object_type": {
            "type": "string",
            "description": "Related object type to which the reward was assigned.",
            "example": "campaign"
          },
          "parameters": {
            "description": "Defines the cost of the reward.",
            "type": "object",
            "properties": {
              "loyalty": {
                "type": "object",
                "description": "Defines the equivalent points value of the reward.",
                "properties": {
                  "points": {
                    "type": "integer",
                    "description": "The number of points required to redeem the reward."
                  }
                }
              }
            }
          },
          "created_at": {
            "type": "string",
            "description": "Timestamp representing the date and time when the reward assignment was created in ISO 8601 format.",
            "example": "2022-08-11T14:49:22.586Z"
          },
          "updated_at": {
            "type": [
              "string",
              "null"
            ],
            "description": "Timestamp representing the date and time when the reward assignment was updated in ISO 8601 format.",
            "example": "2022-08-11T16:01:34.885Z"
          },
          "object": {
            "type": "string",
            "default": "reward_assignment",
            "description": "The type of object represented by the JSON. This object stores information about the reward assignment."
          }
        }
      },
      "4_res_list_reward_assignments": {
        "type": "object",
        "x-examples": {
          "example-1": {
            "object": "list",
            "data_ref": "data",
            "data": [
              {
                "id": "rew_0IeSimD3JS0TZr3jbZLC1hh9",
                "name": "jj",
                "type": "CAMPAIGN",
                "parameters": {
                  "campaign": {
                    "id": "camp_13BbZ0kQsNinhqsX3wUts2UP",
                    "type": "DISCOUNT_COUPONS"
                  }
                },
                "stock": null,
                "redeemed": null,
                "attributes": {},
                "created_at": "2022-08-12T14:31:24.416Z",
                "updated_at": null,
                "metadata": {},
                "object": "reward"
              },
              {
                "id": "rew_nlV8bgWU1jNO9YWQ7CdZmzq7",
                "name": "1 point = $0.01",
                "type": "COIN",
                "parameters": {
                  "coin": {
                    "exchange_ratio": 0.01,
                    "points_ratio": 1
                  }
                },
                "stock": null,
                "redeemed": null,
                "attributes": {},
                "created_at": "2022-08-11T16:45:21.582Z",
                "updated_at": null,
                "metadata": {
                  "Type": "0.01"
                },
                "object": "reward"
              },
              {
                "id": "rew_hWAZaxwC3CA395ih8F778o19",
                "name": "100 points = $20",
                "type": "COIN",
                "parameters": {
                  "coin": {
                    "exchange_ratio": 20,
                    "points_ratio": 100
                  }
                },
                "stock": null,
                "redeemed": null,
                "attributes": {},
                "created_at": "2022-08-11T16:36:00.225Z",
                "updated_at": null,
                "metadata": {
                  "Type": "$20."
                },
                "object": "reward"
              },
              {
                "id": "rew_pjJKIZgjIopIPZyibEAt7oPk",
                "name": "300 points = $30",
                "type": "COIN",
                "parameters": {
                  "coin": {
                    "exchange_ratio": 30,
                    "points_ratio": 300
                  }
                },
                "stock": null,
                "redeemed": null,
                "attributes": {},
                "created_at": "2022-08-11T16:33:56.111Z",
                "updated_at": null,
                "metadata": {
                  "Type": "$30."
                },
                "object": "reward"
              },
              {
                "id": "rew_Ts3YsCKdf0F8mgIBwVlEH78I",
                "name": "800 points = $50",
                "type": "COIN",
                "parameters": {
                  "coin": {
                    "exchange_ratio": 50,
                    "points_ratio": 800
                  }
                },
                "stock": null,
                "redeemed": null,
                "attributes": {},
                "created_at": "2022-08-11T16:33:01.756Z",
                "updated_at": null,
                "metadata": {
                  "Type": "$50."
                },
                "object": "reward"
              },
              {
                "id": "rew_YYKayFIiITd5JJwFrY8IVt36",
                "name": "800 points = $50",
                "type": "COIN",
                "parameters": {
                  "coin": {
                    "exchange_ratio": 50,
                    "points_ratio": 800
                  }
                },
                "stock": null,
                "redeemed": null,
                "attributes": {},
                "created_at": "2022-08-11T16:14:01.105Z",
                "updated_at": null,
                "metadata": {
                  "Type": "GR-1"
                },
                "object": "reward"
              },
              {
                "id": "rew_dgmk8yPKFXZ92e3px2G9MZlj",
                "name": "100 Points = $20",
                "type": "COIN",
                "parameters": {
                  "coin": {
                    "exchange_ratio": 20,
                    "points_ratio": 100
                  }
                },
                "stock": null,
                "redeemed": null,
                "attributes": {},
                "created_at": "2022-08-11T15:43:13.980Z",
                "updated_at": null,
                "metadata": {
                  "Type": "GR-1"
                },
                "object": "reward"
              },
              {
                "id": "rew_WP4Ys6rkMZ1wWH3V62Ol1O0j",
                "name": "$10 Gift Card",
                "type": "CAMPAIGN",
                "parameters": {
                  "campaign": {
                    "id": "camp_systemCampf1r5Tpr0J3Ct",
                    "balance": 1000,
                    "type": "GIFT_VOUCHERS"
                  }
                },
                "stock": null,
                "redeemed": null,
                "attributes": {},
                "created_at": "2022-08-11T14:49:22.586Z",
                "updated_at": null,
                "metadata": {},
                "object": "reward"
              },
              {
                "id": "rew_oQEYtUNYcVe2IdBEUBdLfkCD",
                "name": "Get a comic book",
                "type": "MATERIAL",
                "parameters": {
                  "product": {
                    "id": "prod_0b7d7dfb05cbe5c616",
                    "sku_id": null
                  }
                },
                "stock": "1",
                "redeemed": "1",
                "attributes": {
                  "image_url": "https://voucherify-uploads.s3.amazonaws.com/org_2qt8DYlM/img_fPH9ohe0pZf4EiIt295sk9Ob.png",
                  "description": "Archie's Series"
                },
                "created_at": "2022-08-11T14:35:44.694Z",
                "updated_at": "2022-08-11T16:01:34.885Z",
                "metadata": {
                  "Type": "GR-2"
                },
                "object": "reward"
              },
              {
                "id": "rew_Jhq0ecLGSx8eF4pFdlhFr9P6",
                "name": "20% discount",
                "type": "CAMPAIGN",
                "parameters": {
                  "campaign": {
                    "id": "camp_4B1jDE63pCeSij3HU7gx3gPT",
                    "type": "DISCOUNT_COUPONS"
                  }
                },
                "stock": null,
                "redeemed": null,
                "attributes": {},
                "created_at": "2022-08-11T09:52:39.032Z",
                "updated_at": null,
                "metadata": {},
                "object": "reward"
              }
            ],
            "total": 55
          }
        },
        "description": "Response body schema for **GET** `/rewards/{rewardID}/assignments`.",
        "title": "List Reward Assignments Response Body",
        "properties": {
          "object": {
            "type": "string",
            "description": "The type of object represented by JSON. This object stores information about reward assignments in a dictionary.",
            "default": "list"
          },
          "data_ref": {
            "type": "string",
            "description": "Identifies the name of the attribute that contains the array of reward assignments.",
            "default": "data"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/4_obj_reward_assignment_object"
            }
          },
          "total": {
            "type": "integer",
            "description": "Total number of reward assignments."
          }
        }
      },
      "4_req_update_reward_assignment": {
        "type": "object",
        "x-examples": {
          "example-1": {
            "object": "list",
            "data_ref": "data",
            "data": [
              {
                "id": "rew_0IeSimD3JS0TZr3jbZLC1hh9",
                "name": "jj",
                "type": "CAMPAIGN",
                "parameters": {
                  "campaign": {
                    "id": "camp_13BbZ0kQsNinhqsX3wUts2UP",
                    "type": "DISCOUNT_COUPONS"
                  }
                },
                "stock": null,
                "redeemed": null,
                "attributes": {},
                "created_at": "2022-08-12T14:31:24.416Z",
                "updated_at": null,
                "metadata": {},
                "object": "reward"
              },
              {
                "id": "rew_nlV8bgWU1jNO9YWQ7CdZmzq7",
                "name": "1 point = $0.01",
                "type": "COIN",
                "parameters": {
                  "coin": {
                    "exchange_ratio": 0.01,
                    "points_ratio": 1
                  }
                },
                "stock": null,
                "redeemed": null,
                "attributes": {},
                "created_at": "2022-08-11T16:45:21.582Z",
                "updated_at": null,
                "metadata": {
                  "Type": "0.01"
                },
                "object": "reward"
              },
              {
                "id": "rew_hWAZaxwC3CA395ih8F778o19",
                "name": "100 points = $20",
                "type": "COIN",
                "parameters": {
                  "coin": {
                    "exchange_ratio": 20,
                    "points_ratio": 100
                  }
                },
                "stock": null,
                "redeemed": null,
                "attributes": {},
                "created_at": "2022-08-11T16:36:00.225Z",
                "updated_at": null,
                "metadata": {
                  "Type": "$20."
                },
                "object": "reward"
              },
              {
                "id": "rew_pjJKIZgjIopIPZyibEAt7oPk",
                "name": "300 points = $30",
                "type": "COIN",
                "parameters": {
                  "coin": {
                    "exchange_ratio": 30,
                    "points_ratio": 300
                  }
                },
                "stock": null,
                "redeemed": null,
                "attributes": {},
                "created_at": "2022-08-11T16:33:56.111Z",
                "updated_at": null,
                "metadata": {
                  "Type": "$30."
                },
                "object": "reward"
              },
              {
                "id": "rew_Ts3YsCKdf0F8mgIBwVlEH78I",
                "name": "800 points = $50",
                "type": "COIN",
                "parameters": {
                  "coin": {
                    "exchange_ratio": 50,
                    "points_ratio": 800
                  }
                },
                "stock": null,
                "redeemed": null,
                "attributes": {},
                "created_at": "2022-08-11T16:33:01.756Z",
                "updated_at": null,
                "metadata": {
                  "Type": "$50."
                },
                "object": "reward"
              },
              {
                "id": "rew_YYKayFIiITd5JJwFrY8IVt36",
                "name": "800 points = $50",
                "type": "COIN",
                "parameters": {
                  "coin": {
                    "exchange_ratio": 50,
                    "points_ratio": 800
                  }
                },
                "stock": null,
                "redeemed": null,
                "attributes": {},
                "created_at": "2022-08-11T16:14:01.105Z",
                "updated_at": null,
                "metadata": {
                  "Type": "GR-1"
                },
                "object": "reward"
              },
              {
                "id": "rew_dgmk8yPKFXZ92e3px2G9MZlj",
                "name": "100 Points = $20",
                "type": "COIN",
                "parameters": {
                  "coin": {
                    "exchange_ratio": 20,
                    "points_ratio": 100
                  }
                },
                "stock": null,
                "redeemed": null,
                "attributes": {},
                "created_at": "2022-08-11T15:43:13.980Z",
                "updated_at": null,
                "metadata": {
                  "Type": "GR-1"
                },
                "object": "reward"
              },
              {
                "id": "rew_WP4Ys6rkMZ1wWH3V62Ol1O0j",
                "name": "$10 Gift Card",
                "type": "CAMPAIGN",
                "parameters": {
                  "campaign": {
                    "id": "camp_systemCampf1r5Tpr0J3Ct",
                    "balance": 1000,
                    "type": "GIFT_VOUCHERS"
                  }
                },
                "stock": null,
                "redeemed": null,
                "attributes": {},
                "created_at": "2022-08-11T14:49:22.586Z",
                "updated_at": null,
                "metadata": {},
                "object": "reward"
              },
              {
                "id": "rew_oQEYtUNYcVe2IdBEUBdLfkCD",
                "name": "Get a comic book",
                "type": "MATERIAL",
                "parameters": {
                  "product": {
                    "id": "prod_0b7d7dfb05cbe5c616",
                    "sku_id": null
                  }
                },
                "stock": "1",
                "redeemed": "1",
                "attributes": {
                  "image_url": "https://voucherify-uploads.s3.amazonaws.com/org_2qt8DYlM/img_fPH9ohe0pZf4EiIt295sk9Ob.png",
                  "description": "Archie's Series"
                },
                "created_at": "2022-08-11T14:35:44.694Z",
                "updated_at": "2022-08-11T16:01:34.885Z",
                "metadata": {
                  "Type": "GR-2"
                },
                "object": "reward"
              },
              {
                "id": "rew_Jhq0ecLGSx8eF4pFdlhFr9P6",
                "name": "20% discount",
                "type": "CAMPAIGN",
                "parameters": {
                  "campaign": {
                    "id": "camp_4B1jDE63pCeSij3HU7gx3gPT",
                    "type": "DISCOUNT_COUPONS"
                  }
                },
                "stock": null,
                "redeemed": null,
                "attributes": {},
                "created_at": "2022-08-11T09:52:39.032Z",
                "updated_at": null,
                "metadata": {},
                "object": "reward"
              }
            ],
            "total": 55
          }
        },
        "description": "Request body schema for **PUT** `/rewards/{rewardID}/assignments/{assignmentID}`.",
        "title": "Update Reward Assignment Request Body",
        "properties": {
          "parameters": {
            "type": "object",
            "description": "Defines the cost of the reward.",
            "properties": {
              "loyalty": {
                "type": "object",
                "description": "Defines the equivalent points value of the reward.",
                "properties": {
                  "points": {
                    "type": "integer",
                    "description": "Number of points that will be subtracted from the loyalty card points balance if the reward is redeemed."
                  }
                }
              }
            }
          }
        }
      },
      "4_req_create_reward_assignment": {
        "type": "object",
        "x-examples": {
          "example-1": {
            "object": "list",
            "data_ref": "data",
            "data": [
              {
                "id": "rew_0IeSimD3JS0TZr3jbZLC1hh9",
                "name": "jj",
                "type": "CAMPAIGN",
                "parameters": {
                  "campaign": {
                    "id": "camp_13BbZ0kQsNinhqsX3wUts2UP",
                    "type": "DISCOUNT_COUPONS"
                  }
                },
                "stock": null,
                "redeemed": null,
                "attributes": {},
                "created_at": "2022-08-12T14:31:24.416Z",
                "updated_at": null,
                "metadata": {},
                "object": "reward"
              },
              {
                "id": "rew_nlV8bgWU1jNO9YWQ7CdZmzq7",
                "name": "1 point = $0.01",
                "type": "COIN",
                "parameters": {
                  "coin": {
                    "exchange_ratio": 0.01,
                    "points_ratio": 1
                  }
                },
                "stock": null,
                "redeemed": null,
                "attributes": {},
                "created_at": "2022-08-11T16:45:21.582Z",
                "updated_at": null,
                "metadata": {
                  "Type": "0.01"
                },
                "object": "reward"
              },
              {
                "id": "rew_hWAZaxwC3CA395ih8F778o19",
                "name": "100 points = $20",
                "type": "COIN",
                "parameters": {
                  "coin": {
                    "exchange_ratio": 20,
                    "points_ratio": 100
                  }
                },
                "stock": null,
                "redeemed": null,
                "attributes": {},
                "created_at": "2022-08-11T16:36:00.225Z",
                "updated_at": null,
                "metadata": {
                  "Type": "$20."
                },
                "object": "reward"
              },
              {
                "id": "rew_pjJKIZgjIopIPZyibEAt7oPk",
                "name": "300 points = $30",
                "type": "COIN",
                "parameters": {
                  "coin": {
                    "exchange_ratio": 30,
                    "points_ratio": 300
                  }
                },
                "stock": null,
                "redeemed": null,
                "attributes": {},
                "created_at": "2022-08-11T16:33:56.111Z",
                "updated_at": null,
                "metadata": {
                  "Type": "$30."
                },
                "object": "reward"
              },
              {
                "id": "rew_Ts3YsCKdf0F8mgIBwVlEH78I",
                "name": "800 points = $50",
                "type": "COIN",
                "parameters": {
                  "coin": {
                    "exchange_ratio": 50,
                    "points_ratio": 800
                  }
                },
                "stock": null,
                "redeemed": null,
                "attributes": {},
                "created_at": "2022-08-11T16:33:01.756Z",
                "updated_at": null,
                "metadata": {
                  "Type": "$50."
                },
                "object": "reward"
              },
              {
                "id": "rew_YYKayFIiITd5JJwFrY8IVt36",
                "name": "800 points = $50",
                "type": "COIN",
                "parameters": {
                  "coin": {
                    "exchange_ratio": 50,
                    "points_ratio": 800
                  }
                },
                "stock": null,
                "redeemed": null,
                "attributes": {},
                "created_at": "2022-08-11T16:14:01.105Z",
                "updated_at": null,
                "metadata": {
                  "Type": "GR-1"
                },
                "object": "reward"
              },
              {
                "id": "rew_dgmk8yPKFXZ92e3px2G9MZlj",
                "name": "100 Points = $20",
                "type": "COIN",
                "parameters": {
                  "coin": {
                    "exchange_ratio": 20,
                    "points_ratio": 100
                  }
                },
                "stock": null,
                "redeemed": null,
                "attributes": {},
                "created_at": "2022-08-11T15:43:13.980Z",
                "updated_at": null,
                "metadata": {
                  "Type": "GR-1"
                },
                "object": "reward"
              },
              {
                "id": "rew_WP4Ys6rkMZ1wWH3V62Ol1O0j",
                "name": "$10 Gift Card",
                "type": "CAMPAIGN",
                "parameters": {
                  "campaign": {
                    "id": "camp_systemCampf1r5Tpr0J3Ct",
                    "balance": 1000,
                    "type": "GIFT_VOUCHERS"
                  }
                },
                "stock": null,
                "redeemed": null,
                "attributes": {},
                "created_at": "2022-08-11T14:49:22.586Z",
                "updated_at": null,
                "metadata": {},
                "object": "reward"
              },
              {
                "id": "rew_oQEYtUNYcVe2IdBEUBdLfkCD",
                "name": "Get a comic book",
                "type": "MATERIAL",
                "parameters": {
                  "product": {
                    "id": "prod_0b7d7dfb05cbe5c616",
                    "sku_id": null
                  }
                },
                "stock": "1",
                "redeemed": "1",
                "attributes": {
                  "image_url": "https://voucherify-uploads.s3.amazonaws.com/org_2qt8DYlM/img_fPH9ohe0pZf4EiIt295sk9Ob.png",
                  "description": "Archie's Series"
                },
                "created_at": "2022-08-11T14:35:44.694Z",
                "updated_at": "2022-08-11T16:01:34.885Z",
                "metadata": {
                  "Type": "GR-2"
                },
                "object": "reward"
              },
              {
                "id": "rew_Jhq0ecLGSx8eF4pFdlhFr9P6",
                "name": "20% discount",
                "type": "CAMPAIGN",
                "parameters": {
                  "campaign": {
                    "id": "camp_4B1jDE63pCeSij3HU7gx3gPT",
                    "type": "DISCOUNT_COUPONS"
                  }
                },
                "stock": null,
                "redeemed": null,
                "attributes": {},
                "created_at": "2022-08-11T09:52:39.032Z",
                "updated_at": null,
                "metadata": {},
                "object": "reward"
              }
            ],
            "total": 55
          }
        },
        "description": "Request body schema for **POST** `/rewards/{rewardID}/assignments`.",
        "title": "Create Reward Assignment Request Body",
        "properties": {
          "campaign": {
            "type": "string",
            "description": "The campaign ID of the campaign to which the reward is to be assigned."
          },
          "parameters": {
            "type": "object",
            "description": "Defines the cost of the reward.",
            "required": [
              "loyalty"
            ],
            "properties": {
              "loyalty": {
                "type": "object",
                "description": "Defines the equivalent points value of the reward.",
                "properties": {
                  "points": {
                    "type": "integer",
                    "description": "Number of points that will be subtracted from the loyalty card points balance if the reward is redeemed."
                  }
                }
              }
            }
          }
        },
        "required": [
          "campaign",
          "parameters"
        ]
      },
      "5_obj_publication_object": {
        "title": "Publication Object",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "description": "This is an object representing a publication. ",
        "x-tags": [
          "DISTRIBUTIONS API"
        ]
      },
      "6_obj_validation_object": {
        "title": "Validation Object",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "description": "This is an object representing a validation.",
        "x-tags": [
          "VALIDATIONS API"
        ]
      },
      "19_req_validations": {
        "title": "Validate Stackable Discounts (Beta) Request Body",
        "type": "object",
        "description": "This data model represents the request body for the `/validations` endpoint.",
        "x-tags": [
          "VALIDATIONS API"
        ],
        "properties": {
          "options": {
            "type": [
              "object",
              "null"
            ],
            "description": "Configure parameters returned in the response.",
            "properties": {
              "expand": {
                "type": "array",
                "description": "Expand array lets you configure params included in the response. Depending on the strings included in the array, the response will contain different details.  \n| **Expand Option** | **Response Body** |\n|:---|:---|\n| [\"order\"] | - Same response as fallback response (without an options object).<br>- Order data with calculated discounts are listed in each child redeemable object.<br>- Metadata not included for each discount type. |\n| [\"redeemable\"] | Expands redeemable objects by including `metadata` for each discount type. |\n| [\"order\", \"redeemable\"] | - Order data with calculated discounts are listed in each child redeemable object.<br>- Includes `metadata` for each discount type. |\n",
                "items": {
                  "type": "string",
                  "example": "order"
                }
              }
            }
          },
          "redeemables": {
            "type": "array",
            "minItems": 1,
            "maxItems": 5,
            "description": "An array of redeemables. You can combine `voucher`(s) and `promotion_tier`(s). Alternatively, send one unique`promotion_stack` in the array.",
            "items": {
              "type": "object",
              "properties": {
                "object": {
                  "type": "string",
                  "description": "Redeemable object type.",
                  "enum": [
                    "voucher",
                    "promotion_tier",
                    "promotion_stack"
                  ]
                },
                "id": {
                  "type": "string",
                  "description": "Redeemable code or unique ID such as:  \n- discount code, loyalty card, gift card, referral code: `DiscountCode100`, `v_6ZPI2BLMtpc6zz8pQVjQgxJH3D4ac3ZT`  \n- promotion tier: `promo_Mwy9XpA0TLctSGriM5kum0qp` \n- promotion stack: `stack_KxSD0GahLUg9ULB6TseGfUHJ` "
                }
              },
              "required": [
                "object",
                "id"
              ]
            }
          },
          "session": {
            "type": [
              "object",
              "null"
            ],
            "description": "The session object required to establish a session between multiple parallel validation and redemption requests. Read more on [establishing a validation session](../docs/stackableDiscounts/Establish-Validation-Session.md)."
          },
          "order": {
            "description": "Order object enables you to pass purchase transaction data. Read what properties you can use in the [Order object reference](OpenAPI.json/components/schemas/10_obj_order_object).",
            "type": [
              "object",
              "null"
            ]
          },
          "customer": {
            "type": [
              "object",
              "null"
            ],
            "description": "Stores data of the customer related to the redemption. Read more about the [Customer object](OpenAPI.json/components/schemas/9_obj_customer_object)."
          },
          "metadata": {
            "type": [
              "object",
              "null"
            ],
            "description": "A set of key/value pairs that you can attach to a redemption object. It can be useful for storing additional information about the redemption in a structured format."
          }
        },
        "required": [
          "redeemables"
        ]
      },
      "19_res_validations": {
        "x-examples": {
          "example-1": {
            "valid": false,
            "redeemables": [
              {
                "status": "APPLICABLE",
                "id": "eee33463",
                "object": "voucher",
                "result": {},
                "metadata": {
                  "MetadataTest": "eee33463"
                }
              },
              {
                "status": "INAPPLICABLE",
                "id": "promo_Mwy9XpA0TLctSGriM5kum0qp",
                "object": "promotion_tier",
                "result": {
                  "error": {
                    "code": 400,
                    "key": "promotion_inactive",
                    "message": "Inactive Promotion",
                    "details": "Promotion Tier with id: promo_Mwy9XpA0TLctSGriM5kum0qp has already expired.",
                    "request_id": "v-0b4feeeb149646dda3",
                    "error": {
                      "message": "Promotion expired."
                    }
                  }
                },
                "metadata": {
                  "MetadataTestPromotionTier": "promo_Mwy9XpA0TLctSGriM5kum0qp"
                }
              }
            ],
            "tracking_id": "track_VAVW6qltuo1/z+G2GI2LPw=="
          }
        },
        "title": "Validate Stackable Discounts Response Body",
        "description": "Response body schema for POST `/validations`.",
        "oneOf": [
          {
            "$ref": "#/components/schemas/19_res_validations-true"
          },
          {
            "$ref": "#/components/schemas/19_res_validations-false"
          }
        ]
      },
      "19_res_validations-false": {
        "type": "object",
        "x-examples": {
          "example-1": {
            "valid": false,
            "redeemables": [
              {
                "status": "APPLICABLE",
                "id": "eee33463",
                "object": "voucher",
                "result": {},
                "metadata": {
                  "MetadataTest": "eee33463"
                }
              },
              {
                "status": "INAPPLICABLE",
                "id": "promo_Mwy9XpA0TLctSGriM5kum0qp",
                "object": "promotion_tier",
                "result": {
                  "error": {
                    "code": 400,
                    "key": "promotion_inactive",
                    "message": "Inactive Promotion",
                    "details": "Promotion Tier with id: promo_Mwy9XpA0TLctSGriM5kum0qp has already expired.",
                    "request_id": "v-0b4feeeb149646dda3",
                    "error": {
                      "message": "Promotion expired."
                    }
                  }
                },
                "metadata": {
                  "MetadataTestPromotionTier": "promo_Mwy9XpA0TLctSGriM5kum0qp"
                }
              }
            ],
            "tracking_id": "track_VAVW6qltuo1/z+G2GI2LPw=="
          }
        },
        "title": "False",
        "description": "Response body schema for POST `/validations`.",
        "properties": {
          "valid": {
            "type": "boolean",
            "description": "The result of the validation. It takes all of the redeemables into account and returns a `false` if at least one redeemable is inapplicable. Returns `true` if all redeemables are applicable.",
            "default": false
          },
          "redeemables": {
            "type": "array",
            "description": "Lists validation results of each redeemable. If a redeemable can be applied, the API returns `\"status\": \"APPLICABLE\"`.",
            "items": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "APPLICABLE",
                    "INAPPLICABLE",
                    "SKIPPED"
                  ],
                  "description": "Indicates whether the redeemable can be applied or not applied based on the validation rules. `SKIPPED` indicates that the validation stopped once it identified at least one unapplicable redeemable and did not continue to validate the given redeemable."
                },
                "id": {
                  "type": "string",
                  "description": "Redeemable ID."
                },
                "object": {
                  "type": "string",
                  "description": "Redeemable's object type.",
                  "enum": [
                    "voucher",
                    "promotion_tier",
                    "promotion_stack"
                  ]
                },
                "result": {
                  "type": "object",
                  "description": "Provides details for an inapplicable redeemable.",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/e_error"
                    }
                  }
                },
                "metadata": {
                  "type": "object",
                  "description": "The metadata object stores all custom attributes in the form of key/value pairs assigned to the redeemable."
                }
              }
            }
          },
          "tracking_id": {
            "type": "string",
            "example": "track_VAVo1/z+G2GI2LPw=="
          }
        }
      },
      "19_res_validations-true": {
        "type": "object",
        "x-examples": {
          "example-1": {
            "valid": false,
            "redeemables": [
              {
                "status": "APPLICABLE",
                "id": "eee33463",
                "object": "voucher",
                "result": {},
                "metadata": {
                  "MetadataTest": "eee33463"
                }
              },
              {
                "status": "INAPPLICABLE",
                "id": "promo_Mwy9XpA0TLctSGriM5kum0qp",
                "object": "promotion_tier",
                "result": {
                  "error": {
                    "code": 400,
                    "key": "promotion_inactive",
                    "message": "Inactive Promotion",
                    "details": "Promotion Tier with id: promo_Mwy9XpA0TLctSGriM5kum0qp has already expired.",
                    "request_id": "v-0b4feeeb149646dda3",
                    "error": {
                      "message": "Promotion expired."
                    }
                  }
                },
                "metadata": {
                  "MetadataTestPromotionTier": "promo_Mwy9XpA0TLctSGriM5kum0qp"
                }
              }
            ],
            "tracking_id": "track_VAVW6qltuo1/z+G2GI2LPw=="
          }
        },
        "title": "True",
        "description": "Response body schema for POST `/validations`.",
        "properties": {
          "valid": {
            "type": "boolean",
            "description": "The result of the validation. It takes all of the redeemables into account and returns a `false` if at least one redeemable is inapplicable. Returns `true` if all redeemables are applicable.",
            "default": true
          },
          "redeemables": {
            "type": "array",
            "description": "Lists validation results of each redeemable. If a redeemable can be applied, the API returns `\"status\": \"APPLICABLE\"`.",
            "items": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "APPLICABLE"
                  ],
                  "description": "Indicates whether the redeemable can be applied or not applied based on the validation rules."
                },
                "id": {
                  "type": "string",
                  "description": "Redeemable ID."
                },
                "object": {
                  "type": "string",
                  "description": "Redeemable's object type.",
                  "enum": [
                    "voucher",
                    "promotion_tier",
                    "promotion_stack"
                  ]
                },
                "order": {
                  "$ref": "#/components/schemas/19_obj_order_object_validation_res_per_redeemable"
                },
                "applicable_to": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {}
                    },
                    "total": {
                      "type": "integer"
                    },
                    "data_ref": {
                      "type": "string",
                      "default": "data"
                    },
                    "object": {
                      "type": "string",
                      "default": "list"
                    }
                  }
                },
                "inapplicable_to": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {}
                    },
                    "total": {
                      "type": "integer"
                    },
                    "data_ref": {
                      "type": "string",
                      "default": "data"
                    },
                    "object": {
                      "type": "string",
                      "default": "list"
                    }
                  }
                },
                "result": {
                  "description": "Specifies the redeemable's end effect on the order. This object is unique to each type of redeemable.",
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/19_obj_validations-true_result_voucher_code"
                    },
                    {
                      "$ref": "#/components/schemas/19_obj_validations-true_result_gift_gard"
                    },
                    {
                      "$ref": "#/components/schemas/19_obj_validations-true_result_loyalty_card"
                    }
                  ]
                },
                "metadata": {
                  "type": "object",
                  "description": "The metadata object stores all custom attributes in the form of key/value pairs assigned to the redeemable."
                }
              }
            }
          },
          "order": {
            "$ref": "#/components/schemas/19_obj_order_object_validation_res"
          },
          "tracking_id": {
            "type": "string",
            "example": "track_VAVo1/z+G2GI2LPw=="
          }
        }
      },
      "19_obj_validations-true_result_voucher_code": {
        "type": "object",
        "title": "Coupon Code",
        "description": "This is a `result` object representing the results for a coupon code in POST `/validations` response body.",
        "properties": {
          "discount": {
            "description": "The result of the validation. It takes all of the redeemables into account and returns a `false` if at least one redeemable is inapplicable. Returns `true` if all redeemables are applicable.",
            "default": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/1_obj_voucher_object_discount_amount"
              },
              {
                "$ref": "#/components/schemas/1_obj_voucher_object_discount_percentage"
              },
              {
                "$ref": "#/components/schemas/1_obj_voucher_object_discount_fixed"
              },
              {
                "$ref": "#/components/schemas/1_obj_voucher_object_discount_unit_one"
              },
              {
                "$ref": "#/components/schemas/1_obj_voucher_object_discount_unit_multiple"
              },
              {
                "$ref": "#/components/schemas/1_obj_voucher_object_discount_shipping"
              }
            ]
          }
        }
      },
      "19_obj_validations-true_result_gift_gard": {
        "type": "object",
        "title": "Gift Card",
        "description": "This is a `result` object representing the results for a gift card in POST `/validations` response body.",
        "properties": {
          "gift": {
            "description": "Stores the amount of gift card credits to be applied in the redemption.",
            "default": true,
            "type": "object",
            "properties": {
              "credits": {
                "type": "integer",
                "description": "Total number of gift card credits to be applied in the redemption."
              }
            }
          }
        }
      },
      "19_obj_validations-true_result_loyalty_card": {
        "type": "object",
        "title": "Loyalty Card",
        "description": "This is a `result` object representing the results for a loyalty card in POST `/validations` response body.",
        "properties": {
          "loyalty_card": {
            "description": "Stores the amount of loyalty card points to be applied in the redemption.",
            "type": "object",
            "properties": {
              "points": {
                "type": "integer",
                "description": "Total number of loyalty points to be applied in the redemption."
              }
            }
          }
        }
      },
      "19_obj_order_object_validation_res": {
        "type": "object",
        "x-examples": {
          "example-1": {
            "id": "ord_mtAx6xnppgrXAegfKjGnZg59",
            "source_id": null,
            "created_at": "2022-03-10T09:13:40.590Z",
            "updated_at": "2022-03-10T09:13:41.341Z",
            "status": "PAID",
            "amount": 77789,
            "discount_amount": 0,
            "total_discount_amount": 0,
            "total_amount": 77789,
            "items": [
              {
                "object": "order_item",
                "product_id": "prod_0a7e62db1fca8322a2",
                "quantity": 1,
                "amount": 70000,
                "price": 70000,
                "subtotal_amount": 70000,
                "product": {
                  "id": "prod_0a7e62db1fca8322a2",
                  "source_id": "prod_anJ03RZZq74z4v",
                  "name": "Apple iPhone 8",
                  "price": 20000
                }
              },
              {
                "object": "order_item",
                "product_id": "prod_0a41e31b3081c2834d",
                "sku_id": "sku_0a41e31c7b41c28358",
                "quantity": 1,
                "amount": 7789,
                "price": 7789,
                "subtotal_amount": 7789,
                "product": {
                  "id": "prod_0a41e31b3081c2834d",
                  "source_id": "r4",
                  "name": "Books",
                  "price": 1599
                },
                "sku": {
                  "id": "sku_0a41e31c7b41c28358",
                  "source_id": "emailme@myemail.please",
                  "sku": "Comics",
                  "price": 7789
                }
              }
            ],
            "metadata": {},
            "customer": {
              "id": "cust_nk0N1uNQ1YnupAoJGOgvsODC",
              "object": "customer"
            },
            "referrer": {
              "id": "cust_7iUa6ICKyU6gH40dBU25kQU1",
              "object": "customer"
            },
            "customer_id": "cust_nk0N1uNQ1YnupAoJGOgvsODC",
            "referrer_id": "cust_7iUa6ICKyU6gH40dBU25kQU1",
            "object": "order",
            "redemptions": {
              "r_0abe82a2154879ee5c": {
                "date": "2022-03-10T09:13:40.693Z",
                "related_object_type": "voucher",
                "related_object_id": "v_7HxHkf4VAkMuc8u4lZs78lyRwhRze5UE",
                "related_object_parent_id": "camp_BcHeMm4QaKjqCWMQFecMp1U0"
              }
            }
          }
        },
        "title": "Order object",
        "description": "Contains the combined effect of all redeemables taken into account on the order object properties.",
        "properties": {
          "amount": {
            "type": "integer",
            "description": "Order amount before applying any discount."
          },
          "discount_amount": {
            "type": "integer",
            "description": "Sum of all order-level discounts applied to the order.  \n`sum(redeemables.order.applied_discount_amount)`"
          },
          "items_discount_amount": {
            "type": "integer",
            "description": "Sum of all product-specific discounts applied to the order.  \n`sum(items, i => i.discount_amount)`"
          },
          "total_discount_amount": {
            "type": "integer",
            "description": "Sum of all order-level AND all product-specific discounts applied to the order.  \n`total_discount_amount` = `discount_amount` + `items_discount_amount`\t"
          },
          "total_amount": {
            "type": "integer",
            "description": "Order amount after applying all the discounts.  \n`total_amount` = `amount` - `total_discount_amount`"
          },
          "applied_discount_amount": {
            "type": "integer",
            "description": "Sum of all order-level discounts applied in a particular request.  \n`sum(redeemables.order.applied_discount_amount)`"
          },
          "items_applied_discount_amount": {
            "type": "integer",
            "description": "Sum of all product-specific discounts applied in a particular request.  \n`sum(items, i => i.applied_discount_amount)`"
          },
          "total_applied_discount_amount": {
            "type": "integer",
            "description": "Sum of all order-level AND all product-specific discounts applied in a particular request.  \n`total_applied_discount_amount` = `applied_discount_amount` + `items_applied_discount_amount`"
          },
          "items": {
            "type": "array",
            "description": "Array of order items showing the effects of particular discounts on the item-level.",
            "items": {
              "type": "object",
              "properties": {
                "object": {
                  "type": "string",
                  "default": "order_item",
                  "description": "The type of object represented by JSON. This object stores information about the order item."
                },
                "product_id": {
                  "type": "string",
                  "example": "prod_5h0wc453_1",
                  "description": "A unique identifier that represents the product and is assigned by Voucherify."
                },
                "sku_id": {
                  "type": "string",
                  "example": "sku_prod_5h0wc453_1_1",
                  "description": "A unique identifier that represents the SKU and is assigned by Voucherify."
                },
                "quantity": {
                  "type": "integer",
                  "description": "Quantity of the item in the cart."
                },
                "amount": {
                  "type": "integer",
                  "description": "Represents a total pre-discount amount of order item (`price` * `quantity`)."
                },
                "price": {
                  "type": "integer",
                  "description": "Unit price of an item. Value is multiplied by 100 to precisely represent 2 decimal places. For example, $100 is written as 10000."
                },
                "subtotal_amount": {
                  "type": "integer",
                  "description": "Final order item amount after the applied item-level discount.  If there are no item-level discounts applied, this item is equal to the `amount`.   \n`subtotal_amount`=`amount`-`applied_discount_amount`"
                },
                "product": {
                  "type": "object",
                  "description": "This object stores more information about the related product.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "prod_5h0wc453_1",
                      "description": "A unique identifier that represents the product and is assigned by Voucherify."
                    },
                    "source_id": {
                      "type": "string",
                      "description": "A unique product identifier from your inventory system.",
                      "example": "illy-arabica"
                    },
                    "name": {
                      "type": "string",
                      "example": "Brewing System",
                      "description": "Product name."
                    },
                    "price": {
                      "type": "integer",
                      "description": "Unit price of a product. Value is multiplied by 100 to precisely represent 2 decimal places. For example, $100 is written as 10000."
                    }
                  }
                },
                "sku": {
                  "type": "object",
                  "description": "This object stores more information about the related SKU.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "sku_prod_5h0wc453_1_1",
                      "description": "A unique identifier that represents the SKU and is assigned by Voucherify."
                    },
                    "source_id": {
                      "type": "string",
                      "example": "illy-arabica-250g",
                      "description": "A unique SKU identifier from your inventory system."
                    },
                    "sku": {
                      "type": "string",
                      "description": "SKU name."
                    },
                    "price": {
                      "type": "integer",
                      "description": "Unit price of a SKU. Value is multiplied by 100 to precisely represent 2 decimal places. For example, $100 is written as 10000."
                    }
                  }
                }
              }
            }
          },
          "metadata": {
            "type": "object",
            "description": "The metadata object stores all custom attributes assigned to the order. A set of key/value pairs that are att to an order object. Stores additional information about the order in a structured format."
          },
          "customer_id": {
            "type": "null"
          },
          "referrer_id": {
            "type": "null"
          },
          "object": {
            "type": "string",
            "default": "order",
            "description": "The type of object represented by JSON. This object stores information about the order."
          }
        }
      },
      "19_obj_order_object_validation_res_per_redeemable": {
        "type": "object",
        "x-examples": {
          "example-1": {
            "id": "ord_mtAx6xnppgrXAegfKjGnZg59",
            "source_id": null,
            "created_at": "2022-03-10T09:13:40.590Z",
            "updated_at": "2022-03-10T09:13:41.341Z",
            "status": "PAID",
            "amount": 77789,
            "discount_amount": 0,
            "total_discount_amount": 0,
            "total_amount": 77789,
            "items": [
              {
                "object": "order_item",
                "product_id": "prod_0a7e62db1fca8322a2",
                "quantity": 1,
                "amount": 70000,
                "price": 70000,
                "subtotal_amount": 70000,
                "product": {
                  "id": "prod_0a7e62db1fca8322a2",
                  "source_id": "prod_anJ03RZZq74z4v",
                  "name": "Apple iPhone 8",
                  "price": 20000
                }
              },
              {
                "object": "order_item",
                "product_id": "prod_0a41e31b3081c2834d",
                "sku_id": "sku_0a41e31c7b41c28358",
                "quantity": 1,
                "amount": 7789,
                "price": 7789,
                "subtotal_amount": 7789,
                "product": {
                  "id": "prod_0a41e31b3081c2834d",
                  "source_id": "r4",
                  "name": "Books",
                  "price": 1599
                },
                "sku": {
                  "id": "sku_0a41e31c7b41c28358",
                  "source_id": "emailme@myemail.please",
                  "sku": "Comics",
                  "price": 7789
                }
              }
            ],
            "metadata": {},
            "customer": {
              "id": "cust_nk0N1uNQ1YnupAoJGOgvsODC",
              "object": "customer"
            },
            "referrer": {
              "id": "cust_7iUa6ICKyU6gH40dBU25kQU1",
              "object": "customer"
            },
            "customer_id": "cust_nk0N1uNQ1YnupAoJGOgvsODC",
            "referrer_id": "cust_7iUa6ICKyU6gH40dBU25kQU1",
            "object": "order",
            "redemptions": {
              "r_0abe82a2154879ee5c": {
                "date": "2022-03-10T09:13:40.693Z",
                "related_object_type": "voucher",
                "related_object_id": "v_7HxHkf4VAkMuc8u4lZs78lyRwhRze5UE",
                "related_object_parent_id": "camp_BcHeMm4QaKjqCWMQFecMp1U0"
              }
            }
          }
        },
        "title": "Order object",
        "description": "Contains the effect of each redeemable on the order and specific cart items. The amounts are consecutively built on the previous redeemable's effects, such that for each redeemable, the amounts are further reduced by the redeemable. The sequence in the request body is important because that will be the sequence the redeemables are applied one on top of the other.",
        "properties": {
          "amount": {
            "type": "integer",
            "description": "Order amount before applying any discount."
          },
          "discount_amount": {
            "type": "integer",
            "description": "Sum of all order-level discounts applied to the order.  \n`sum(redeemables.order.applied_discount_amount)`"
          },
          "items_discount_amount": {
            "type": "integer",
            "description": "Sum of all product-specific discounts applied to the order.  \n`sum(items, i => i.discount_amount)`"
          },
          "total_discount_amount": {
            "type": "integer",
            "description": "Sum of all order-level AND all product-specific discounts applied to the order.  \n`total_discount_amount` = `discount_amount` + `items_discount_amount`\t"
          },
          "total_amount": {
            "type": "integer",
            "description": "Order amount after applying all the discounts.  \n`total_amount` = `amount` - `total_discount_amount`"
          },
          "applied_discount_amount": {
            "type": "integer",
            "description": "Sum of all order-level discounts applied in a particular request.  \n`sum(redeemables.order.applied_discount_amount)`"
          },
          "items_applied_discount_amount": {
            "type": "integer",
            "description": "Sum of all product-specific discounts applied in a particular request.  \n`sum(items, i => i.applied_discount_amount)`"
          },
          "total_applied_discount_amount": {
            "type": "integer",
            "description": "Sum of all order-level AND all product-specific discounts applied in a particular request.  \n`total_applied_discount_amount` = `applied_discount_amount` + `items_applied_discount_amount`"
          },
          "items": {
            "type": "array",
            "description": "Array of order items showing the effects of particular discounts on the item-level.",
            "items": {
              "type": "object",
              "properties": {
                "object": {
                  "type": "string",
                  "default": "order_item",
                  "description": "The type of object represented by JSON. This object stores information about the order item."
                },
                "product_id": {
                  "type": "string",
                  "example": "prod_5h0wc453_1",
                  "description": "A unique identifier that represents the product and is assigned by Voucherify."
                },
                "sku_id": {
                  "type": "string",
                  "example": "sku_prod_5h0wc453_1_1",
                  "description": "A unique identifier that represents the SKU and is assigned by Voucherify."
                },
                "quantity": {
                  "type": "integer",
                  "description": "Quantity of the item in the cart."
                },
                "amount": {
                  "type": "integer",
                  "description": "Represents a total pre-discount amount of order item (`price` * `quantity`)."
                },
                "price": {
                  "type": "integer",
                  "description": "Unit price of an item. Value is multiplied by 100 to precisely represent 2 decimal places. For example, $100 is written as 10000."
                },
                "subtotal_amount": {
                  "type": "integer",
                  "description": "Final order item amount after the applied item-level discount.  If there are no item-level discounts applied, this item is equal to the `amount`.   \n`subtotal_amount`=`amount`-`applied_discount_amount`"
                },
                "product": {
                  "type": "object",
                  "description": "This object stores more information about the related product.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "prod_5h0wc453_1",
                      "description": "A unique identifier that represents the product and is assigned by Voucherify."
                    },
                    "source_id": {
                      "type": "string",
                      "description": "A unique product identifier from your inventory system.",
                      "example": "illy-arabica"
                    },
                    "name": {
                      "type": "string",
                      "example": "Brewing System",
                      "description": "Product name."
                    },
                    "price": {
                      "type": "integer",
                      "description": "Unit price of a product. Value is multiplied by 100 to precisely represent 2 decimal places. For example, $100 is written as 10000."
                    }
                  }
                },
                "sku": {
                  "type": "object",
                  "description": "This object stores more information about the related SKU.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "sku_prod_5h0wc453_1_1",
                      "description": "A unique identifier that represents the SKU and is assigned by Voucherify."
                    },
                    "source_id": {
                      "type": "string",
                      "example": "illy-arabica-250g",
                      "description": "A unique SKU identifier from your inventory system."
                    },
                    "sku": {
                      "type": "string",
                      "description": "SKU name."
                    },
                    "price": {
                      "type": "integer",
                      "description": "Unit price of a SKU. Value is multiplied by 100 to precisely represent 2 decimal places. For example, $100 is written as 10000."
                    }
                  }
                }
              }
            }
          },
          "metadata": {
            "type": "object",
            "description": "The metadata object stores all custom attributes assigned to the order. A set of key/value pairs that are att to an order object. Stores additional information about the order in a structured format."
          },
          "customer_id": {
            "type": "null"
          },
          "referrer_id": {
            "type": "null"
          },
          "object": {
            "type": "string",
            "default": "order",
            "description": "The type of object represented by JSON. This object stores information about the order."
          }
        }
      },
      "19_res_redemptions_parentRedemptionId_rollbacks": {
        "type": "object",
        "properties": {
          "rollbacks": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "customer_id": {
                  "type": "string"
                },
                "tracking_id": {
                  "type": "string"
                },
                "date": {
                  "type": "string"
                },
                "order": {
                  "type": "object",
                  "properties": {
                    "amount": {
                      "type": "integer"
                    },
                    "total_amount": {
                      "type": "integer"
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {}
                    },
                    "object": {
                      "type": "string"
                    },
                    "discount_amount": {
                      "type": "integer"
                    },
                    "total_discount_amount": {
                      "type": "integer"
                    }
                  }
                },
                "customer": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "source_id": {
                      "type": "string"
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "accepts_marketing": {
                          "type": "boolean"
                        }
                      }
                    },
                    "object": {
                      "type": "string"
                    }
                  }
                },
                "result": {
                  "type": "string"
                },
                "voucher": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "discount": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string"
                        },
                        "amount_off": {
                          "type": "integer"
                        },
                        "effect": {
                          "type": "string"
                        }
                      }
                    },
                    "type": {
                      "type": "string"
                    },
                    "campaign": {
                      "type": "string"
                    },
                    "campaign_id": {
                      "type": "string"
                    },
                    "is_referral_code": {
                      "type": "boolean"
                    },
                    "holder_id": {
                      "type": "string"
                    },
                    "gift": {
                      "type": "object",
                      "properties": {
                        "amount": {
                          "type": "integer"
                        },
                        "balance": {
                          "type": "integer"
                        },
                        "effect": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "redemption": {
                  "type": "string"
                },
                "amount": {
                  "type": "integer"
                }
              }
            }
          },
          "parent_rollback": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "customer_id": {
                "type": "string"
              },
              "tracking_id": {
                "type": "string"
              },
              "date": {
                "type": "string"
              },
              "order": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "source_id": {
                    "type": "null"
                  },
                  "status": {
                    "type": "string"
                  },
                  "customer_id": {
                    "type": "string"
                  },
                  "referrer_id": {
                    "type": "null"
                  },
                  "amount": {
                    "type": "integer"
                  },
                  "total_amount": {
                    "type": "integer"
                  },
                  "metadata": {
                    "type": "object",
                    "properties": {}
                  },
                  "object": {
                    "type": "string"
                  }
                }
              },
              "customer": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "source_id": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": "object",
                    "properties": {
                      "accepts_marketing": {
                        "type": "boolean"
                      }
                    }
                  },
                  "object": {
                    "type": "string"
                  }
                }
              },
              "result": {
                "type": "string"
              },
              "redemption": {
                "type": "string"
              }
            }
          },
          "order": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "source_id": {
                "type": "null"
              },
              "created_at": {
                "type": "string"
              },
              "updated_at": {
                "type": "string"
              },
              "status": {
                "type": "string"
              },
              "amount": {
                "type": "integer"
              },
              "total_amount": {
                "type": "integer"
              },
              "metadata": {
                "type": "object",
                "properties": {}
              },
              "customer": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "object": {
                    "type": "string"
                  }
                }
              },
              "customer_id": {
                "type": "string"
              },
              "referrer_id": {
                "type": "null"
              },
              "object": {
                "type": "string"
              },
              "redemptions": {
                "type": "object",
                "properties": {
                  "r_0b56726b09cfb73e84": {
                    "type": "object",
                    "properties": {
                      "date": {
                        "type": "string"
                      },
                      "rollback_id": {
                        "type": "string"
                      },
                      "rollback_date": {
                        "type": "string"
                      },
                      "related_object_type": {
                        "type": "string"
                      },
                      "related_object_id": {
                        "type": "string"
                      },
                      "stacked": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "rollback_stacked": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-examples": {
          "example-1": {
            "rollbacks": [
              {
                "id": "rr_0b578de3665325d578",
                "customer_id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                "tracking_id": "track_muJC7Ibsjqw=",
                "date": "2022-07-07T06:10:27.353Z",
                "order": {
                  "amount": 20000,
                  "total_amount": 20000,
                  "metadata": {},
                  "object": "order"
                },
                "customer": {
                  "id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                  "source_id": "36",
                  "metadata": {
                    "accepts_marketing": false
                  },
                  "object": "customer"
                },
                "result": "SUCCESS",
                "voucher": {
                  "id": "v_xF5IdgIo33W5hkNdd7C0dRHtZvkyhwpE",
                  "code": "HAPPY-ORDER6wd",
                  "discount": {
                    "type": "AMOUNT",
                    "amount_off": 2000,
                    "effect": "APPLY_TO_ORDER"
                  },
                  "type": "DISCOUNT_VOUCHER",
                  "campaign": "$20 off the entire order",
                  "campaign_id": "camp_5h0wc453_4",
                  "is_referral_code": false,
                  "holder_id": "cust_eWgXlBBiY6THFRJwX45Iakv4"
                },
                "redemption": "r_0b56726b09cfb73e85"
              },
              {
                "id": "rr_0b578de3665325d579",
                "customer_id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                "tracking_id": "track_muJC7Ibsjqw=",
                "date": "2022-07-07T06:10:27.353Z",
                "amount": -1000,
                "order": {
                  "amount": 20000,
                  "discount_amount": 2000,
                  "total_discount_amount": 2000,
                  "total_amount": 18000,
                  "metadata": {},
                  "object": "order"
                },
                "customer": {
                  "id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                  "source_id": "36",
                  "metadata": {
                    "accepts_marketing": false
                  },
                  "object": "customer"
                },
                "result": "SUCCESS",
                "voucher": {
                  "id": "v_xb5KuIw90ViUY7NrNbDZzf1JwFmyTUi0",
                  "code": "M3X8IwW8",
                  "gift": {
                    "amount": 200000,
                    "balance": 195050,
                    "effect": "APPLY_TO_ORDER"
                  },
                  "type": "GIFT_VOUCHER",
                  "campaign": "WooCommerce",
                  "campaign_id": "camp_A5JyvcHflFPngDrJt3fFUBT1",
                  "is_referral_code": false,
                  "holder_id": "cust_eWgXlBBiY6THFRJwX45Iakv4"
                },
                "redemption": "r_0b56726b0a0fb73e86"
              }
            ],
            "parent_rollback": {
              "id": "rr_0b578de3609325d577",
              "customer_id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
              "tracking_id": "track_muJC7Ibsjqw=",
              "date": "2022-07-07T06:10:27.330Z",
              "order": {
                "id": "ord_maJEhbcZUBI9WSpVP4I6kspw",
                "source_id": null,
                "status": "CANCELED",
                "customer_id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                "referrer_id": null,
                "amount": 20000,
                "total_amount": 20000,
                "metadata": {},
                "object": "order"
              },
              "customer": {
                "id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                "source_id": "36",
                "metadata": {
                  "accepts_marketing": false
                },
                "object": "customer"
              },
              "result": "SUCCESS",
              "redemption": "r_0b56726b09cfb73e84"
            },
            "order": {
              "id": "ord_maJEhbcZUBI9WSpVP4I6kspw",
              "source_id": null,
              "created_at": "2022-07-06T09:31:57.333Z",
              "updated_at": "2022-07-07T06:10:27.404Z",
              "status": "CANCELED",
              "amount": 20000,
              "total_amount": 20000,
              "metadata": {},
              "customer": {
                "id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                "object": "customer"
              },
              "customer_id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
              "referrer_id": null,
              "object": "order",
              "redemptions": {
                "r_0b56726b09cfb73e84": {
                  "date": "2022-07-06T09:31:57.352Z",
                  "rollback_id": "rr_0b578de3609325d577",
                  "rollback_date": "2022-07-07T06:10:27.330Z",
                  "related_object_type": "redemption",
                  "related_object_id": "r_0b56726b09cfb73e84",
                  "stacked": [
                    "r_0b56726b09cfb73e85",
                    "r_0b56726b0a0fb73e86"
                  ],
                  "rollback_stacked": [
                    "rr_0b578de3665325d578",
                    "rr_0b578de3665325d579"
                  ]
                }
              }
            }
          }
        },
        "description": "Response body schema for POST `/redemptions/{parentRedemptionID}/rollbacks`.",
        "title": "Rollback Stackable Redemptions Response Body"
      },
      "19_res_redemptions_POST": {
        "type": "object",
        "x-examples": {
          "example-1": {
            "redemptions": [
              {
                "id": "r_0b56726b09cfb73e85",
                "object": "redemption",
                "date": "2022-07-06T09:31:57.351Z",
                "customer_id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                "tracking_id": "track_muJC7Ibsjqw=",
                "metadata": null,
                "redemption": "r_0b56726b09cfb73e84",
                "result": "SUCCESS",
                "order": {
                  "id": "ord_maJEhbcZUBI9WSpVP4I6kspw",
                  "source_id": null,
                  "amount": 20000,
                  "discount_amount": 2000,
                  "total_discount_amount": 2000,
                  "total_amount": 18000,
                  "applied_discount_amount": 2000,
                  "total_applied_discount_amount": 2000,
                  "metadata": {},
                  "customer_id": null,
                  "referrer_id": null,
                  "object": "order"
                },
                "customer": {
                  "id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                  "name": "Samuel Janik",
                  "email": "samuel.janik@voucherify.io",
                  "source_id": "36",
                  "metadata": {
                    "accepts_marketing": false
                  },
                  "object": "customer"
                },
                "related_object_type": "voucher",
                "related_object_id": "v_xF5IdgIo33W5hkNdd7C0dRHtZvkyhwpE",
                "voucher": {
                  "id": "v_xF5IdgIo33W5hkNdd7C0dRHtZvkyhwpE",
                  "code": "HAPPY-ORDER6wd",
                  "discount": {
                    "type": "AMOUNT",
                    "amount_off": 2000,
                    "effect": "APPLY_TO_ORDER"
                  },
                  "type": "DISCOUNT_VOUCHER",
                  "campaign": "$20 off the entire order",
                  "campaign_id": "camp_5h0wc453_4",
                  "is_referral_code": false,
                  "holder_id": "cust_eWgXlBBiY6THFRJwX45Iakv4"
                }
              },
              {
                "id": "r_0b56726b0a0fb73e86",
                "object": "redemption",
                "date": "2022-07-06T09:31:57.352Z",
                "customer_id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                "tracking_id": "track_muJC7Ibsjqw=",
                "metadata": null,
                "amount": 1000,
                "redemption": "r_0b56726b09cfb73e84",
                "result": "SUCCESS",
                "order": {
                  "id": "ord_maJEhbcZUBI9WSpVP4I6kspw",
                  "source_id": null,
                  "amount": 20000,
                  "discount_amount": 3000,
                  "total_discount_amount": 3000,
                  "total_amount": 17000,
                  "applied_discount_amount": 1000,
                  "total_applied_discount_amount": 1000,
                  "metadata": {},
                  "customer_id": null,
                  "referrer_id": null,
                  "object": "order"
                },
                "customer": {
                  "id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                  "name": "Samuel Janik",
                  "email": "samuel.janik@voucherify.io",
                  "source_id": "36",
                  "metadata": {
                    "accepts_marketing": false
                  },
                  "object": "customer"
                },
                "related_object_type": "voucher",
                "related_object_id": "v_xb5KuIw90ViUY7NrNbDZzf1JwFmyTUi0",
                "voucher": {
                  "id": "v_xb5KuIw90ViUY7NrNbDZzf1JwFmyTUi0",
                  "code": "M3X8IwW8",
                  "gift": {
                    "amount": 200000,
                    "balance": 194050,
                    "effect": "APPLY_TO_ORDER"
                  },
                  "type": "GIFT_VOUCHER",
                  "campaign": "WooCommerce",
                  "campaign_id": "camp_A5JyvcHflFPngDrJt3fFUBT1",
                  "is_referral_code": false,
                  "holder_id": "cust_eWgXlBBiY6THFRJwX45Iakv4"
                },
                "gift": {
                  "amount": 1000
                }
              }
            ],
            "parent_redemption": {
              "id": "r_0b56726b09cfb73e84",
              "object": "redemption",
              "date": "2022-07-06T09:31:57.352Z",
              "customer_id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
              "tracking_id": "track_muJC7Ibsjqw=",
              "metadata": null,
              "result": "SUCCESS",
              "order": {
                "id": "ord_maJEhbcZUBI9WSpVP4I6kspw",
                "source_id": null,
                "created_at": "2022-07-06T09:31:57.333Z",
                "updated_at": null,
                "status": "PAID",
                "amount": 20000,
                "discount_amount": 3000,
                "total_discount_amount": 3000,
                "total_amount": 17000,
                "applied_discount_amount": 3000,
                "total_applied_discount_amount": 3000,
                "metadata": {},
                "customer": {
                  "id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                  "object": "customer"
                },
                "customer_id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                "referrer_id": null,
                "object": "order",
                "redemptions": {
                  "r_0b56726b09cfb73e84": {
                    "date": "2022-07-06T09:31:57.352Z",
                    "related_object_type": "redemption",
                    "related_object_id": "r_0b56726b09cfb73e84",
                    "stacked": [
                      "r_0b56726b09cfb73e85",
                      "r_0b56726b0a0fb73e86"
                    ]
                  }
                }
              },
              "customer": {
                "id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                "name": "Samuel Janik",
                "email": "samuel.janik@voucherify.io",
                "source_id": "36",
                "metadata": {
                  "accepts_marketing": false
                },
                "object": "customer"
              },
              "related_object_type": "redemption",
              "related_object_id": "r_0b56726b09cfb73e84",
              "voucher": null
            },
            "order": {
              "id": "ord_maJEhbcZUBI9WSpVP4I6kspw",
              "source_id": null,
              "created_at": "2022-07-06T09:31:57.333Z",
              "updated_at": null,
              "status": "PAID",
              "amount": 20000,
              "discount_amount": 3000,
              "total_discount_amount": 3000,
              "total_amount": 17000,
              "applied_discount_amount": 3000,
              "total_applied_discount_amount": 3000,
              "metadata": {},
              "customer": {
                "id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
                "object": "customer"
              },
              "customer_id": "cust_eWgXlBBiY6THFRJwX45Iakv4",
              "referrer_id": null,
              "object": "order",
              "redemptions": {
                "r_0b56726b09cfb73e84": {
                  "date": "2022-07-06T09:31:57.352Z",
                  "related_object_type": "redemption",
                  "related_object_id": "r_0b56726b09cfb73e84",
                  "stacked": [
                    "r_0b56726b09cfb73e85",
                    "r_0b56726b0a0fb73e86"
                  ]
                }
              }
            }
          }
        },
        "title": "Stackable Redemptions Response Body",
        "description": "Response body schema for POST `/redemptions`.",
        "properties": {
          "redemptions": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "example": "r_0b56726b09cfb73e85"
                },
                "object": {
                  "type": "string",
                  "default": "redemption"
                },
                "date": {
                  "type": "string",
                  "example": "2022-07-06T09:31:57.351Z"
                },
                "customer_id": {
                  "type": "string",
                  "example": "cust_eWgXlBBiY6THFRJwX45Iakv4"
                },
                "tracking_id": {
                  "type": "string",
                  "example": "track_muJC7Ibsjqw"
                },
                "metadata": {
                  "type": "null"
                },
                "redemption": {
                  "type": "string",
                  "example": "r_0b56726b09cfb73e84"
                },
                "result": {
                  "type": "string",
                  "enum": [
                    "SUCCESS"
                  ]
                },
                "order": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "source_id": {
                      "type": "null"
                    },
                    "amount": {
                      "type": "integer"
                    },
                    "discount_amount": {
                      "type": "integer"
                    },
                    "total_discount_amount": {
                      "type": "integer"
                    },
                    "total_amount": {
                      "type": "integer"
                    },
                    "applied_discount_amount": {
                      "type": "integer"
                    },
                    "total_applied_discount_amount": {
                      "type": "integer"
                    },
                    "metadata": {
                      "type": "object"
                    },
                    "customer_id": {
                      "type": "null"
                    },
                    "referrer_id": {
                      "type": "null"
                    },
                    "object": {
                      "type": "string",
                      "default": "order"
                    }
                  }
                },
                "customer": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "cust_eWgXlBBiY6THFRJwX45Iakv4"
                    },
                    "name": {
                      "type": "string",
                      "example": "Jane Smith"
                    },
                    "email": {
                      "type": "string"
                    },
                    "source_id": {
                      "type": "string",
                      "example": "36_jane_"
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "accepts_marketing": {
                          "type": "boolean"
                        }
                      }
                    },
                    "object": {
                      "type": "string",
                      "default": "customer"
                    }
                  }
                },
                "related_object_type": {
                  "type": "string"
                },
                "related_object_id": {
                  "type": "string"
                },
                "voucher": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "discount": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string"
                        },
                        "amount_off": {
                          "type": "integer"
                        },
                        "effect": {
                          "type": "string"
                        }
                      }
                    },
                    "type": {
                      "type": "string"
                    },
                    "campaign": {
                      "type": "string"
                    },
                    "campaign_id": {
                      "type": "string"
                    },
                    "is_referral_code": {
                      "type": "boolean"
                    },
                    "holder_id": {
                      "type": "string"
                    },
                    "gift": {
                      "type": "object",
                      "properties": {
                        "amount": {
                          "type": "integer"
                        },
                        "balance": {
                          "type": "integer"
                        },
                        "effect": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "amount": {
                  "type": "integer"
                },
                "gift": {
                  "type": "object",
                  "properties": {
                    "amount": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "parent_redemption": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "example": "r_0b56726b09cfb73e84"
              },
              "object": {
                "type": "string",
                "default": "redemption"
              },
              "date": {
                "type": "string",
                "example": "2022-07-06T09:31:57.352Z"
              },
              "customer_id": {
                "type": "string",
                "example": "cust_eWgXlBBiY6THFRJwX45Iakv4"
              },
              "tracking_id": {
                "type": "string",
                "example": "track_muJC7Ibsjqw="
              },
              "metadata": {
                "type": "null"
              },
              "result": {
                "type": "string",
                "enum": [
                  "SUCCESS"
                ]
              },
              "order": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "example": "ord_maJEhbcZUBI9WSpVP4I6kspw"
                  },
                  "source_id": {
                    "type": "string"
                  },
                  "created_at": {
                    "type": "string",
                    "example": "2022-07-06T09:31:57.333Z"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "PAID"
                    ]
                  },
                  "amount": {
                    "type": "integer"
                  },
                  "discount_amount": {
                    "type": "integer"
                  },
                  "total_discount_amount": {
                    "type": "integer"
                  },
                  "total_amount": {
                    "type": "integer"
                  },
                  "applied_discount_amount": {
                    "type": "integer"
                  },
                  "total_applied_discount_amount": {
                    "type": "integer"
                  },
                  "metadata": {
                    "type": "object"
                  },
                  "customer": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "cust_eWgXlBBiY6THFRJwX45Iakv4"
                      },
                      "object": {
                        "type": "string",
                        "example": "customer"
                      }
                    }
                  },
                  "customer_id": {
                    "type": "string",
                    "example": "cust_eWgXlBBiY6THFRJwX45Iakv4"
                  },
                  "referrer_id": {
                    "type": "null"
                  },
                  "object": {
                    "type": "string",
                    "default": "order"
                  },
                  "redemptions": {
                    "type": "object",
                    "properties": {
                      "r_0b56726b09cfb73e84": {
                        "type": "object",
                        "properties": {
                          "date": {
                            "type": "string"
                          },
                          "related_object_type": {
                            "type": "string"
                          },
                          "related_object_id": {
                            "type": "string"
                          },
                          "stacked": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "customer": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "source_id": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": "object",
                    "properties": {
                      "accepts_marketing": {
                        "type": "boolean"
                      }
                    }
                  },
                  "object": {
                    "type": "string"
                  }
                }
              },
              "related_object_type": {
                "type": "string"
              },
              "related_object_id": {
                "type": "string"
              },
              "voucher": {
                "type": "null"
              }
            }
          },
          "order": {
            "type": "object",
            "description": "Contains the order details associated with the redemption.",
            "properties": {
              "id": {
                "type": "string",
                "example": "ord_maJEhbcZUBI9WSpVP4I6kspw",
                "description": "Unique order ID."
              },
              "source_id": {
                "type": "string",
                "description": "Unique order source ID."
              },
              "created_at": {
                "type": "string",
                "example": "2022-07-06T09:31:57.333Z",
                "format": "date-time"
              },
              "updated_at": {
                "type": "string",
                "format": "date-time"
              },
              "status": {
                "type": "string",
                "enum": [
                  "PAID"
                ]
              },
              "amount": {
                "type": "integer"
              },
              "discount_amount": {
                "type": "integer"
              },
              "total_discount_amount": {
                "type": "integer"
              },
              "total_amount": {
                "type": "integer"
              },
              "applied_discount_amount": {
                "type": "integer"
              },
              "total_applied_discount_amount": {
                "type": "integer"
              },
              "metadata": {
                "type": "object"
              },
              "customer": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "object": {
                    "type": "string"
                  }
                }
              },
              "customer_id": {
                "type": "string",
                "example": "cust_eWgXlBBiY6THFRJwX45Iakv4"
              },
              "referrer_id": {
                "type": "null"
              },
              "object": {
                "type": "string",
                "example": "order"
              },
              "redemptions": {
                "type": "object",
                "properties": {
                  "r_0b56726b09cfb73e84": {
                    "type": "object",
                    "properties": {
                      "date": {
                        "type": "string",
                        "example": "2022-07-06T09:31:57.352Z"
                      },
                      "related_object_type": {
                        "type": "string",
                        "example": "redemption"
                      },
                      "related_object_id": {
                        "type": "string",
                        "example": "r_0b56726b09cfb73e84"
                      },
                      "stacked": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "7_obj_redemption_object": {
        "title": "Redemption Object",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "description": "This is an object representing a redemption.  \n\nRedemption is the key operation in the voucher and promotion tier lifecycle. A customer can redeem a voucher or promotion tier once or multiple times depending on selected limit (`quantity`). Each redemption is recorded in voucher/promotion's history (`redemption_entries`). There is also an option to cancel a redemption. We call such operation a [redemption rollback](OpenAPI.json/paths/~1redemptions~1{redemption_id}~1rollback/post).",
        "x-tags": [
          "REDEMPTIONS API"
        ]
      },
      "7_obj_redemption_rollback_object": {
        "title": "Redemption Rollback Object",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "description": "This is an object representing a redemption rollback.  \n\nThere is a possibility to withdraw a voucher redemption. We call such operation a redemption rollback.",
        "x-tags": [
          "REDEMPTIONS API"
        ]
      },
      "8_obj_loyalty_campaign_object": {
        "title": "Loyalty Campaign Object",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "description": "This is an object representing a loyalty campaign.  \n\nThe loyalty campaign object contains details about the loyalty campaign. You can list loyalty campaigns, list loyalty card holders, member activities, active rewards, earning rules, loyalty tiers for given loyalty campaign.",
        "x-tags": [
          "LOYALTIES API"
        ]
      },
      "8_obj_loyalty_card_object": {
        "title": "Loyalty Card Object",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "description": "This is an object representing a loyalty card.  \n\nThe loyalty card object contains details about the loyalty-type voucher.",
        "x-tags": [
          "LOYALTIES API"
        ]
      },
      "8_obj_earning_rule_object": {
        "description": "This is an object representing an earning rule.",
        "type": "object",
        "x-examples": {
          "example-1": {
            "id": "ern_P6MWOFGsv63sbTaTZBp0IHGK",
            "created_at": "2022-02-02T13:18:32.557Z",
            "updated_at": "2022-02-03T13:09:27.206Z",
            "validation_rule_id": "val_6o0qdvlbh1mt",
            "loyalty": {
              "points": 1000,
              "type": "FIXED"
            },
            "event": "order.paid",
            "source": {
              "banner": "Order paid 1000 points",
              "object_id": "camp_Pfja7X91b1GoyH5wnpzCwlP3",
              "object_type": "campaign"
            },
            "active": true,
            "start_date": "2022-02-02T13:00:00.000Z",
            "expiration_date": "2022-03-03T14:30:00.000Z",
            "validity_timeframe": {
              "duration": "PT1H",
              "interval": "P1D"
            },
            "object": "earning_rule",
            "automation_id": "auto_RVgObANuPToNla8LuD5aT3Zb"
          }
        },
        "title": "Earning Rule Object",
        "examples": [
          {
            "id": "ern_abvbD0d7Wv4hgr3fTElLb38G",
            "created_at": "2022-02-07T08:19:41.810Z",
            "updated_at": null,
            "validation_rule_id": null,
            "loyalty": {
              "points": 2,
              "type": "FIXED"
            },
            "custom_event": {
              "schema_id": "ms_7JRYC8jXbezBV8AvGYGA0b5R"
            },
            "event": "saw_on_facebook",
            "source": {
              "banner": "Saw on Facebook Timeframe",
              "object_id": "camp_Pfja7X91b1GoyH5wnpzCwlP3",
              "object_type": "campaign"
            },
            "active": true,
            "start_date": "2022-02-07T08:30:00.000Z",
            "validity_timeframe": {
              "duration": "PT1H",
              "interval": "P1D"
            },
            "object": "earning_rule",
            "automation_id": "auto_WTxNMXGJMS5ZdU9oZip3AzuA"
          },
          {
            "id": "ern_taClaOIiaGNdmdby8xS0lCcy",
            "created_at": "2022-02-04T13:27:50.665Z",
            "updated_at": "2022-02-07T08:19:44.198Z",
            "validation_rule_id": null,
            "loyalty": {
              "points": 1000,
              "type": "FIXED"
            },
            "event": "order.paid",
            "source": {
              "banner": "Order paid 1000 points",
              "object_id": "camp_Pfja7X91b1GoyH5wnpzCwlP3",
              "object_type": "campaign"
            },
            "active": true,
            "start_date": "2022-02-02T13:00:00.000Z",
            "expiration_date": "2022-03-03T14:30:00.000Z",
            "validity_timeframe": {
              "duration": "PT1H",
              "interval": "P1D"
            },
            "validity_day_of_week": [
              4
            ],
            "object": "earning_rule",
            "automation_id": "auto_RjBuwpeFQZ7TyQ5LP2LFVZYG"
          },
          {
            "id": "ern_3HlFKLMNIfBme9lcHwnMwXON",
            "created_at": "2022-02-04T13:02:52.937Z",
            "updated_at": "2022-02-07T08:19:43.291Z",
            "validation_rule_id": null,
            "loyalty": {
              "points": 1000,
              "type": "FIXED"
            },
            "segment": {
              "id": "seg_WJv55MbzQwnr56ttJ2xUrSgt"
            },
            "event": "customer.segment.entered",
            "source": {
              "banner": "Entered segment 100 points.",
              "object_id": "camp_Pfja7X91b1GoyH5wnpzCwlP3",
              "object_type": "campaign"
            },
            "active": true,
            "start_date": "2022-02-02T13:00:00.000Z",
            "expiration_date": "2022-03-03T14:30:00.000Z",
            "validity_timeframe": {
              "duration": "PT1H",
              "interval": "P1D"
            },
            "validity_day_of_week": [
              1,
              2,
              3,
              4,
              5
            ],
            "object": "earning_rule",
            "automation_id": "auto_39wqQSScJJbvpzAF611jnrh9"
          }
        ],
        "properties": {
          "id": {
            "type": "string",
            "example": "ern_P6MWOFGsv63sbTaTZBp0IHGK",
            "description": "Assigned by the Voucherify API, identifies the earning rule object."
          },
          "created_at": {
            "type": "string",
            "description": "Timestamp representing the date and time when the earning rule was created in ISO 8601 format.",
            "example": "2022-02-02T13:18:32.557Z",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "description": "Timestamp representing the date and time when the earning rule was last updated in ISO 8601 format.",
            "example": "2022-02-03T13:09:27.206Z",
            "format": "date-time",
            "default": null
          },
          "validation_rule_id": {
            "type": "string",
            "example": "val_248vs7tUjlIE",
            "description": "A unique validation rule identifier assigned by the Voucherify API. The validation rule is verified before points are added to the balance.",
            "default": null
          },
          "loyalty": {
            "description": "An object that defines the number of points that will be added to a loyalty card and how the points will be added.\n\n- `FIXED` adds a fixed number of `points`\n- `PROPORTIONAL` adds points proportionally based on a pre-defined ratio",
            "oneOf": [
              {
                "description": "Fixed. Applicable to events `order.paid`,  `customer.segment.entered`, and `custom_event`.",
                "properties": {
                  "points": {
                    "type": "integer",
                    "description": "The number of points to be added to the loyalty card.",
                    "example": 1000
                  },
                  "type": {
                    "type": "string",
                    "description": "Defines how the points will be added to the loyalty card. `FIXED` adds a fixed number of `points`.",
                    "default": "FIXED"
                  }
                }
              },
              {
                "description": "Proportional. Applicable to only `order.paid`.",
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "Defines how the points will be added to the loyalty card.`PROPORTIONAL` adds points based on a pre-defined ratio",
                    "default": "PROPORTIONAL"
                  },
                  "order": {
                    "type": "object",
                    "description": "Defines proportion for calculating how many points to add to a loyalty card. The ratio is based on the order amount. For `every` dollar spent, the customer will get this many `points`.  \n",
                    "properties": {
                      "amount": {
                        "type": "object",
                        "description": "Defines the ratio based on the order amount.",
                        "properties": {
                          "every": {
                            "type": "integer",
                            "description": "Order amount. Value is multiplied by 100 to precisely represent 2 decimal places. For example, a $10 order amount is written as 1000."
                          },
                          "points": {
                            "type": "integer",
                            "description": "Number of points awarded."
                          }
                        }
                      }
                    }
                  }
                }
              }
            ],
            "type": "object"
          },
          "custom_event": {
            "type": "object",
            "description": "Contains the schema id of a custom event. **Required** for the custom event option in `event`.",
            "properties": {
              "schema_id": {
                "type": "string",
                "description": "Contains a unique identifier of a custom event schema. Assigned by the Voucherify API."
              }
            }
          },
          "segment": {
            "type": "object",
            "description": "Contains the id of a customer segment. **Required** for the `customer.segment.entered` option in `event`.",
            "properties": {
              "id": {
                "type": "string",
                "description": "Contains a unique identifier of a customer segment. Assigned by the Voucherify API."
              }
            }
          },
          "event": {
            "type": "string",
            "enum": [
              "order.paid",
              "customer.segment.entered",
              "custom_event_defined_in_EVENT_SCHEMA"
            ],
            "description": "Defines the event which triggers the earning rule to add points to a loyalty card.  \n\n- `order.paid` an event defined by the Voucherify API corresponding to an order status `PAID`. Read more here.  \n- `customer.segment.entered` an event defined by the Voucherify API corresponding to a customer entering a pre-defined customer segment. Read more here.  \n- `custom_event_name` the name of a custom event defined in the Dashboard &rarr; **Project Settings** &rarr; **EVENT SCHEMA** &rarr; **Add event definition**. Read more on defining custom events. "
          },
          "source": {
            "type": "object",
            "description": "Contains the custom earning rule name and parent campaign.",
            "properties": {
              "banner": {
                "type": "string",
                "example": "Order Paid - You will get 100 points",
                "description": "Name of the earning rule. This is displayed as a header for the earning rule in the Dashboard."
              },
              "object_id": {
                "type": "string",
                "example": "camp_Pfja7X91b1GoyH5wnpzCwlP3",
                "description": "A unique campaign identifier assigned by the Voucherify API."
              },
              "object_type": {
                "type": "string",
                "default": "campaign",
                "description": "Defines the object associated with the earning rule. Defaults to `campaign`."
              }
            }
          },
          "active": {
            "type": "boolean",
            "description": "A flag to toggle the earning rule on or off. You can disable an earning rule even though it's within the active period defined by the `start_date` and `expiration_date` of the campaign or the earning rule's own `start_date` and `expiration_date`.  \n\n- `true` indicates an *active* earning rule\n- `false` indicates an *inactive* earning rule"
          },
          "start_date": {
            "type": "string",
            "example": "2022-02-02T13:00:00.000Z",
            "format": "date-time",
            "description": "Start date defines when the earning rule starts to be active. Activation timestamp in ISO 8601 format. Earning rule is *inactive before* this date. If you don't define the start date for an earning rule, it'll inherit the campaign start date by default. "
          },
          "expiration_date": {
            "type": "string",
            "format": "date-time",
            "example": "2022-03-03T14:30:00.000Z",
            "description": "Expiration date defines when the earning rule expires. Expiration timestamp in ISO 8601 format.  Earning rule is *inactive after* this date.If you don't define the expiration date for an earning rule, it'll inherit the campaign expiration date by default."
          },
          "validity_timeframe": {
            "type": "object",
            "description": "Set recurrent time periods when the earning rule is valid. For example, valid for 1 hour every other day.`start_date` **required** when including the `validity_timeframe`.",
            "properties": {
              "duration": {
                "type": "string",
                "description": "Defines the amount of time an earning rule will be active in ISO 8601 format. For example, an earning rule with a `duration` of `PT1H` will be valid for a duration of one hour.",
                "example": "PT1H"
              },
              "interval": {
                "type": "string",
                "description": "Defines the intervening time between two time points in ISO 8601 format, expressed as a duration. For example, an earning rule with an `interval` of `P2D` will be valid every other day.",
                "example": "P2D"
              }
            }
          },
          "validity_day_of_week": {
            "type": "array",
            "description": "Integer array corresponding to the particular days of the week in which the earning rule is valid.\n\n- `0`  Sunday  \n- `1`  Monday  \n- `2`  Tuesday  \n- `3`  Wednesday  \n- `4`  Thursday  \n- `5`  Friday  \n- `6`  Saturday  ",
            "items": {
              "type": "integer",
              "example": "[ 1, 2 ]"
            }
          },
          "object": {
            "type": "string",
            "default": "earning_rule",
            "description": "The type of object represented by JSON. Default is `earning_rule`."
          },
          "automation_id": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": [
          "event",
          "active",
          "object"
        ]
      },
      "8_obj_loyalty_tiers_object": {
        "title": "Loyalty Tiers Object",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "description": "This is an object representing a loyalty tier.  \n\nLoyalty tiers are used to create a loyalty program with different levels of membership and varied earning rules and rewards based on customer’s tiers.",
        "x-tags": [
          "LOYALTIES API"
        ]
      },
      "8_req_loyalties_campaignId_earning-rules": {
        "description": "This data model represents the request body for the `/loyalties/{campaignId}/earning-rules` endpoint.",
        "type": "object",
        "x-examples": {
          "example-1": {
            "id": "ern_P6MWOFGsv63sbTaTZBp0IHGK",
            "created_at": "2022-02-02T13:18:32.557Z",
            "updated_at": "2022-02-03T13:09:27.206Z",
            "validation_rule_id": "val_6o0qdvlbh1mt",
            "loyalty": {
              "points": 1000,
              "type": "FIXED"
            },
            "event": "order.paid",
            "source": {
              "banner": "Order paid 1000 points",
              "object_id": "camp_Pfja7X91b1GoyH5wnpzCwlP3",
              "object_type": "campaign"
            },
            "active": true,
            "start_date": "2022-02-02T13:00:00.000Z",
            "expiration_date": "2022-03-03T14:30:00.000Z",
            "validity_timeframe": {
              "duration": "PT1H",
              "interval": "P1D"
            },
            "object": "earning_rule",
            "automation_id": "auto_RVgObANuPToNla8LuD5aT3Zb"
          }
        },
        "title": "Create Earning Rule Request Body",
        "properties": {
          "event": {
            "type": "string",
            "enum": [
              "order.paid",
              "customer.segment.entered",
              "custom_event_defined_in_EVENT_SCHEMA"
            ],
            "description": "Defines the event which triggers the earning rule to add points to a loyalty card.  \n\n- `order.paid` an event defined by the Voucherify API corresponding to an order status `PAID`. Read more here.  \n- `customer.segment.entered` an event defined by the Voucherify API corresponding to a customer entering a pre-defined customer segment. Read more here.  \n- `custom_event_name` the name of a custom event defined in the Dashboard &rarr; **Project Settings** &rarr; **EVENT SCHEMA** &rarr; **Add event definition**. Read more on defining custom events. "
          },
          "validation_rule_id": {
            "type": "string",
            "example": "val_248vs7tUjlIE",
            "description": "A unique validation rule identifier assigned by the Voucherify API. The validation rule is verified before points are added to the balance.",
            "default": null
          },
          "loyalty": {
            "description": "An object that defines the number of points that will be added to a loyalty card and how the points will be added.\n\n- `FIXED` adds a fixed number of `points`\n- `PROPORTIONAL` adds points proportionally based on a pre-defined ratio",
            "oneOf": [
              {
                "description": "Fixed. Applicable to events `order.paid`,  `customer.segment.entered`, and `custom_event`.",
                "properties": {
                  "points": {
                    "type": "integer",
                    "description": "The number of points to be added to the loyalty card.",
                    "example": 1000
                  },
                  "type": {
                    "type": "string",
                    "description": "Defines how the points will be added to the loyalty card. `FIXED` adds a fixed number of `points`.",
                    "default": "FIXED"
                  }
                },
                "required": [
                  "points",
                  "type"
                ]
              },
              {
                "description": "Proportional. Applicable to only `order.paid`.",
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "Defines how the points will be added to the loyalty card.`PROPORTIONAL` adds points based on a pre-defined ratio",
                    "default": "PROPORTIONAL"
                  },
                  "order": {
                    "type": "object",
                    "description": "Defines proportion for calculating how many points to add to a loyalty card. The ratio is based on the order amount. For `every` dollar spent, the customer will get this many `points`.  \n",
                    "required": [
                      "amount"
                    ],
                    "properties": {
                      "amount": {
                        "type": "object",
                        "description": "Defines the ratio based on the order amount.",
                        "required": [
                          "every",
                          "points"
                        ],
                        "properties": {
                          "every": {
                            "type": "integer",
                            "description": "Order amount. Value is multiplied by 100 to precisely represent 2 decimal places. For example, a $10 order amount is written as 1000."
                          },
                          "points": {
                            "type": "integer",
                            "description": "Number of points awarded."
                          }
                        }
                      }
                    }
                  }
                },
                "required": [
                  "type",
                  "order"
                ]
              }
            ],
            "type": "object"
          },
          "source": {
            "type": "object",
            "description": "Contains the custom earning rule name and parent campaign.",
            "properties": {
              "banner": {
                "type": "string",
                "example": "Order Paid - You will get 100 points",
                "description": "Name of the earning rule. This is displayed as a header for the earning rule in the Dashboard."
              }
            }
          },
          "active": {
            "type": "boolean",
            "description": "A flag to toggle the earning rule on or off. You can disable an earning rule even though it's within the active period defined by the `start_date` and `expiration_date` of the campaign or the earning rule's own `start_date` and `expiration_date`.  \n\n- `true` indicates an *active* earning rule\n- `false` indicates an *inactive* earning rule"
          },
          "start_date": {
            "type": "string",
            "example": "2022-02-02T13:00:00.000Z",
            "format": "date-time",
            "description": "Start date defines when the earning rule starts to be active. Activation timestamp in ISO 8601 format. Earning rule is *inactive before* this date. If you don't define the start date for an earning rule, it'll inherit the campaign start date by default.",
            "default": null
          },
          "expiration_date": {
            "type": "string",
            "format": "date-time",
            "example": "2022-03-03T14:30:00.000Z",
            "description": "Expiration date defines when the earning rule expires. Expiration timestamp in ISO 8601 format.  Earning rule is *inactive after* this date.If you don't define the expiration date for an earning rule, it'll inherit the campaign expiration date by default.",
            "default": null
          },
          "validity_timeframe": {
            "type": "object",
            "description": "Set recurrent time periods when the earning rule is valid. For example, valid for 1 hour every other day. `start_date` **required** when including the `validity_timeframe`.",
            "properties": {
              "duration": {
                "type": "string",
                "description": "Defines the amount of time an earning rule will be active in ISO 8601 format. For example, an earning rule with a `duration` of `PT1H` will be valid for a duration of one hour.",
                "example": "PT1H"
              },
              "interval": {
                "type": "string",
                "description": "Defines the intervening time between two time points in ISO 8601 format, expressed as a duration. For example, an earning rule with an `interval` of `P2D` will be valid every other day.",
                "example": "P2D"
              }
            },
            "required": [
              "duration",
              "interval"
            ]
          },
          "validity_day_of_week": {
            "type": "array",
            "description": "Integer array corresponding to the particular days of the week in which the earning rule is valid.\n\n- `0`  Sunday  \n- `1`  Monday  \n- `2`  Tuesday  \n- `3`  Wednesday  \n- `4`  Thursday  \n- `5`  Friday  \n- `6`  Saturday  ",
            "items": {
              "type": "integer",
              "example": "[ 1, 2 ]"
            }
          },
          "custom_event": {
            "type": "object",
            "description": "Contains the schema id of a custom event. **Required** for the custom event option in `event`.",
            "default": null,
            "properties": {
              "schema_id": {
                "type": "string",
                "description": "Contains a unique identifier of a custom event schema. Assigned by the Voucherify API."
              }
            },
            "required": [
              "schema_id"
            ]
          },
          "segment": {
            "type": "object",
            "description": "Contains the id of a customer segment. **Required** for the `customer.segment.entered` option in `event`.",
            "default": null,
            "properties": {
              "id": {
                "type": "string",
                "description": "Contains a unique identifier of a customer segment. Assigned by the Voucherify API."
              }
            },
            "required": [
              "id"
            ]
          }
        },
        "required": [
          "event",
          "loyalty"
        ]
      },
      "8_req_loyalties_campaign_id_members_member_id_balance": {
        "title": "Add or Remove Points Balance Request Body",
        "type": "object",
        "description": "Request schema for adding or removing points from a loyalty card.",
        "properties": {
          "points": {
            "type": "integer",
            "description": "Incremental balance to be added to/subtracted from the loyalty card.  \n\nTo add points: `100`  \nTo subtract points, add a minus: `-100`"
          },
          "expiration_date": {
            "type": "string",
            "description": "Set expiration date for added points, i.e. `YYYY-MM-DD`. This parameter is **required** only when `expiration_type` is set to `CUSTOM_DATE`.",
            "example": "2020-05-30"
          },
          "expiration_type": {
            "type": "string",
            "default": "PROGRAM_RULES",
            "enum": [
              "PROGRAM_RULES",
              "NON_EXPIRING",
              "CUSTOM_DATE"
            ],
            "description": "Set the type of expiration for added points.  \n- `PROGRAM_RULES`: Inherit rules from campaign.\n- `NON_EXPIRING`: Points never expire.\n- `CUSTOM_DATE`: Points expire on a particular date. **Requires** `expiration_date` parameter."
          }
        }
      },
      "8_res_loyalties_campaign_id_members_member_id_balance": {
        "description": "Response body schema for `/loyalties/{campaign_Id}/members/{member_Id}/balance`",
        "type": "object",
        "x-examples": {
          "example-1": {
            "amount": 100,
            "total": 10100,
            "balance": 10100,
            "type": "gift_voucher",
            "object": "balance",
            "related_object": {
              "type": "voucher",
              "id": "v_4Bd3aX7eXjHbe7Ef7on8YsLWBynsT4jq"
            }
          }
        },
        "examples": [],
        "title": "Add or Remove Loyalty Card Balance Response Body",
        "properties": {
          "points": {
            "type": "integer",
            "description": "The incremental points removed or added to the current balance on the loyalty card."
          },
          "total": {
            "type": "integer",
            "description": "The total of points accrued over the lifetime of the loyalty card."
          },
          "balance": {
            "type": "integer",
            "description": "The balance after adding/removing points."
          },
          "type": {
            "type": "string",
            "description": "The type of voucher being modified.",
            "default": "loyalty_card"
          },
          "object": {
            "type": "string",
            "description": "The type of object represented by JSON. Default is `balance`.",
            "default": "balance"
          },
          "related_object": {
            "type": "object",
            "description": "Defines the object that is being modified with the values that are returned in the balance object.",
            "properties": {
              "type": {
                "type": "string",
                "description": "The object being modified.",
                "default": "voucher"
              },
              "id": {
                "type": "string",
                "description": "Identifies the loyalty card that is being modified, this is the ID that was assigned by the Voucherify API.",
                "example": "v_4Bd3aX7eXjHbe7Ef7on8YsLWBynsT4jq"
              }
            }
          }
        }
      },
      "8_res_loyalties_campaign_id_tiers_tier_id_earning_rules": {
        "type": "object",
        "properties": {
          "object": {
            "type": "string"
          },
          "data_ref": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "created_at": {
                  "type": "string"
                },
                "updated_at": {
                  "type": "null"
                },
                "validation_rule_id": {
                  "type": "null"
                },
                "loyalty": {
                  "type": "object",
                  "properties": {
                    "points": {
                      "type": "integer"
                    },
                    "type": {
                      "type": "string"
                    }
                  }
                },
                "event": {
                  "type": "string"
                },
                "source": {
                  "type": "object",
                  "properties": {
                    "banner": {
                      "type": "string"
                    },
                    "object_id": {
                      "type": "string"
                    },
                    "object_type": {
                      "type": "string"
                    }
                  }
                },
                "active": {
                  "type": "boolean"
                },
                "object": {
                  "type": "string"
                },
                "automation_id": {
                  "type": "string"
                },
                "custom_event": {
                  "type": "object",
                  "properties": {
                    "schema_id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "total": {
            "type": "integer"
          }
        },
        "x-examples": {
          "example-1": {
            "object": "list",
            "data_ref": "data",
            "data": [
              {
                "id": "ern_vxj7VoVyeJWSqY4ilzzTqUKR",
                "created_at": "2022-06-09T13:21:26.246Z",
                "updated_at": null,
                "validation_rule_id": null,
                "loyalty": {
                  "points": 20,
                  "type": "FIXED"
                },
                "event": "order.paid",
                "source": {
                  "banner": "Order paid (min. $50)",
                  "object_id": "camp_b9wSne9A3djDDEtug4HsVt5W",
                  "object_type": "campaign"
                },
                "active": true,
                "object": "earning_rule",
                "automation_id": "auto_yI5H02psUkKRileWnsNvLovM"
              },
              {
                "id": "ern_pYOUgKMf7y9JdyYpmmwAe5v5",
                "created_at": "2022-06-09T13:21:26.453Z",
                "updated_at": null,
                "validation_rule_id": null,
                "loyalty": {
                  "points": 20,
                  "type": "FIXED"
                },
                "custom_event": {
                  "schema_id": "ms_gn4Qe4xsFPf7orCArCiNVY13"
                },
                "event": "page_view",
                "source": {
                  "banner": "Custom Event",
                  "object_id": "camp_b9wSne9A3djDDEtug4HsVt5W",
                  "object_type": "campaign"
                },
                "active": true,
                "object": "earning_rule",
                "automation_id": "auto_FCAa0NUvFrTi44XZ0F4pQv84"
              }
            ],
            "total": 2
          }
        },
        "description": "Response body schema for `/loyalties/{campaignId}/tiers/{tierId}/earning-rules`.",
        "title": "List Loyalty Tier Earning Rules"
      },
      "8_res_loyalties_campaign_id_tiers_tier_id_rewards": {
        "title": "List Loyalty Tier Rewards",
        "x-stoplight": {
          "id": "zlf2wkvlqll2v"
        },
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "description": "Response body schema for `/loyalties/{campaignId}/tiers/{tierId}/rewards`."
      },
      "8_res_loyalties_campaign_id_reward-assignments_assignment_id": {
        "type": "object",
        "x-examples": {
          "example-1": {
            "id": "rewa_hzc19a5NLyIr2bVL3UB1w0B3",
            "reward_id": "rew_JhjeISE1npQyxRmGV1JYohDP",
            "related_object_id": "camp_pqZjuhG6Mgtp4GD0zD7b8hA3",
            "related_object_type": "campaign",
            "created_at": "2021-12-13T11:58:32.261Z",
            "updated_at": null,
            "object": "reward_assignment"
          }
        },
        "description": "Response body schema for `/loyalties/{campaignId}/reward-assignments/{assignmentId}`",
        "title": "Get Reward Assignment",
        "properties": {
          "id": {
            "type": "string",
            "example": "rewa_hzc19a5NLyIr2bVL3UB1w0B3"
          },
          "reward_id": {
            "type": "string",
            "example": "rew_JhjeISE1npQyxRmGV1JYohDP"
          },
          "related_object_id": {
            "type": "string",
            "example": "camp_pqZjuhG6Mgtp4GD0zD7b8hA3"
          },
          "related_object_type": {
            "type": "string",
            "example": "campaign"
          },
          "created_at": {
            "type": "string",
            "example": "2021-12-13T11:58:32.261Z"
          },
          "updated_at": {
            "type": "string",
            "example": "2022-01-13T11:58:32.261Z"
          },
          "object": {
            "type": "string",
            "default": "reward_assignment"
          }
        }
      },
      "8_res_loyalties_campaign_id_reward-assignments_assignment_id_reward": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "coin": {
                "type": "object",
                "properties": {
                  "exchange_ratio": {
                    "type": "number"
                  },
                  "points_ratio": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          "stock": {
            "type": "null"
          },
          "redeemed": {
            "type": "null"
          },
          "attributes": {
            "type": "object",
            "properties": {}
          },
          "created_at": {
            "type": "string"
          },
          "updated_at": {
            "type": "null"
          },
          "object": {
            "type": "string"
          }
        },
        "x-examples": {
          "example-1": {
            "id": "rew_JhjeISE1npQyxRmGV1JYohDP",
            "name": "Pay with Points - Order Volume Total Amount",
            "type": "COIN",
            "parameters": {
              "coin": {
                "exchange_ratio": 0.01,
                "points_ratio": 1
              }
            },
            "stock": null,
            "redeemed": null,
            "attributes": {},
            "created_at": "2021-12-13T06:27:54.142Z",
            "updated_at": null,
            "object": "reward"
          }
        },
        "description": "Response body schema for `/loyalties/{campaignId}/reward-assignments/{assignmentId}/`",
        "title": "Get Reward Details"
      },
      "8_obj_export_object_points_expiration": {
        "title": "Points Expirations Export Object",
        "type": "object",
        "description": "This is an object representing an export of points expirations. ",
        "x-tags": [
          "EXPORTS API"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique export ID.",
            "example": "exp_FFfp9o7daWuJqJCKp5xqqli4"
          },
          "object": {
            "type": "string",
            "default": "export",
            "description": "The type of object being represented. This object stores information about the export."
          },
          "created_at": {
            "type": "string",
            "example": "2022-04-28T11:23:20.922Z",
            "description": "Timestamp representing the date and time when the export was scheduled in ISO 8601 format."
          },
          "status": {
            "type": "string",
            "description": "Status of the export. Informs you whether the export has already been completed.",
            "enum": [
              "SCHEDULED",
              "IN_PROGRESS",
              "DONE",
              "ERROR"
            ]
          },
          "channel": {
            "type": "string",
            "description": "The channel through which the export was triggered.",
            "enum": [
              "API"
            ]
          },
          "exported_object": {
            "type": "string",
            "description": "The type of exported object.",
            "enum": [
              "points_expiration"
            ]
          },
          "parameters": {
            "type": "object",
            "description": "List of fields and filters that were passed in the request body to create the export.",
            "properties": {
              "order": {
                "type": "string",
                "description": "How the export was filtered, where the dash `-` preceding a sorting option means sorting in a descending order."
              },
              "fields": {
                "type": "array",
                "description": "Array of strings containing the data that was exported. These fields define the headers in the CSV file.",
                "items": {
                  "type": "object"
                }
              },
              "filters": {
                "type": "object"
              }
            }
          },
          "result": {
            "type": "object",
            "description": "Contains the URL of the CSV file.",
            "properties": {
              "url": {
                "type": "string",
                "description": "URL of the CSV file location."
              }
            }
          }
        }
      },
      "8_res_loyalties_campaignId_rewards": {
        "title": "List Reward Assignments",
        "x-stoplight": {
          "id": "u131oicowebzy"
        },
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "description": "Response body schema for `/loyalties/campaign_id/reward`."
      },
      "8_res_loyalties_campaignId_reward-assignments": {
        "title": "List Reward Assignments",
        "x-stoplight": {
          "id": "0bsu64g02hoeh"
        },
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "description": "Response body schema for `/loyalties/{campaign_id}/reward-assignments`."
      },
      "8_res_loyalties_campaignId_rewards_assignmentId": {
        "title": "Get Reward Assignment",
        "x-stoplight": {
          "id": "aklws470dmmqo"
        },
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "description": "Response body schema for `/loyalties/{campaign_id}/rewards/{assignment_id}`."
      },
      "8_res_loyalties_campaignId_tiers_tierId_earning-rules": {
        "title": "List Loyalty Tier Earning Rules",
        "x-stoplight": {
          "id": "1stkjxajwy778"
        },
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "description": "Response body schema for `/loyalties/{campaign_id}/tiers/{tier_id}/earning-rules`."
      },
      "8_res_loyalties_campaignId_tiers_tierId_rewards": {
        "title": "List Loyalty Tier Rewards",
        "x-stoplight": {
          "id": "t426bdpxc1xps"
        },
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "description": "Response schema for `/loyalties/{campaign_id}/tiers/{tier_id}/rewards`."
      },
      "8_res_loyalties_members_memberId": {
        "title": "Get Member",
        "x-stoplight": {
          "id": "7cqdiunrn5ljs"
        },
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "description": "Response body schema for `/loyalties/members/{member_id}`."
      },
      "8_res_loyalties_members_memberId_activities": {
        "title": "Get Member Activities",
        "x-stoplight": {
          "id": "19aycz8w99cl0"
        },
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "description": "Response body schema for `/loyalties/members/{memberId}/activities`."
      },
      "8_res_loyalties_members_memberId_redemption": {
        "title": "Redeem Reward",
        "x-stoplight": {
          "id": "hrswc9fu2jxdd"
        },
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "description": "Response body schema for `/loyalties/members/{memberId}/redemption`."
      },
      "8_res_loyalties_members_memberId_balance": {
        "$ref": "#/components/schemas/8_res_loyalties_campaign_id_members_member_id_balance",
        "description": "Response body schema for `/loyalties/members/{memberId}/balance`.",
        "title": "Add or Remove Loyalty Card Balance"
      },
      "8_res_loyalties_members_memberId_rewards": {
        "title": "List Member Rewards",
        "x-stoplight": {
          "id": "hrswc9fu2jxdd"
        },
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "description": "Response body schema for `/loyalties/members/{memberId}/rewards`."
      },
      "9_req_create_customer": {
        "type": "object",
        "x-examples": {
          "example-1": {
            "id": "cust_sehkNIi8Uq2qQuRqSr7xn4Zi",
            "source_id": "bob.smith@rspective.pl",
            "email": "bob.smith@rspective.pl",
            "phone": "+1 (294) 752-1846",
            "birthdate": "2022-04-29",
            "address": {
              "city": "New York",
              "state": "New York",
              "line_1": "100 Main St",
              "line_2": "Blg 2 Apt 3",
              "country": "United States",
              "postal_code": "12345"
            },
            "summary": {
              "redemptions": {
                "total_redeemed": 11,
                "total_failed": 7,
                "total_succeeded": 4,
                "total_rolled_back": 1,
                "total_rollback_failed": 0,
                "total_rollback_succeeded": 1,
                "gift": {
                  "redeemed_amount": 0,
                  "amount_to_go": 0
                },
                "loyalty_card": {
                  "redeemed_points": 0,
                  "points_to_go": 387475
                }
              },
              "orders": {
                "total_amount": 694200,
                "total_count": 22,
                "average_amount": 31555,
                "last_order_amount": 24900,
                "last_order_date": "2022-06-09T12:54:42.314Z"
              }
            },
            "loyalty": {
              "points": 387475,
              "referred_customers": 0,
              "campaigns": {
                "Tiers": {
                  "points": 154,
                  "referred_customers": 0
                },
                "Reward": {
                  "points": 15,
                  "referred_customers": 0
                },
                "Tiers 2": {
                  "points": 10,
                  "referred_customers": 0
                },
                "Loyalty Program 1": {
                  "points": 0,
                  "referred_customers": 0
                },
                "Proportional Earning Rules": {
                  "points": 86446,
                  "referred_customers": 0
                },
                "v20220131-NewEarningRules-ValidonDaysANDTimeFrame": {
                  "points": 300850,
                  "referred_customers": 0
                }
              }
            },
            "referrals": {
              "total": 0,
              "campaigns": []
            },
            "metadata": {
              "acquisition_channel": "Facebook"
            },
            "system_metadata": {
              "consents": {
                "unsubscribed": {
                  "date": "2022-05-10T08:50:10.338Z",
                  "value": false
                },
                "cnst_6jQ5XcUOLnj5L7ImQAdBsJ1I": {
                  "date": "2022-05-10T08:50:10.338Z",
                  "value": false
                },
                "cnst_VCmucIvAsmDYw2PPAok6bcYy": {
                  "date": "2022-05-10T08:50:10.338Z",
                  "value": false
                }
              }
            },
            "created_at": "2021-12-29T06:35:32.476Z",
            "updated_at": "2022-06-14T09:56:22.212Z",
            "assets": {
              "cockpit_url": "https://dev.cockpits.voucherify.io/customers?token=U2FsdGVkX1%2BnpQd60txn1YAtQ%2BitfR2JOHbrwciLULwvBwLFSHpNoH7RhgGt6"
            },
            "object": "customer"
          }
        },
        "title": "Customer object",
        "description": "This is an object containing information about the customer.",
        "properties": {
          "source_id": {
            "type": "string",
            "description": "The merchant’s customer ID if it is different from the Voucherify customer ID. It is really useful in case of an integration between multiple systems. It can be a customer ID from a CRM system, database or 3rd-party service. \n\nPlease note that if you would like your data to sync based on the `source_id` of the customer, you need to define the `source_id` upfront. You will not be able to change or update the `source_id` later on."
          },
          "name": {
            "type": "string",
            "description": "Customer's first and last name."
          },
          "description": {
            "type": "string",
            "description": "An arbitrary string that you can attach to a customer object."
          },
          "email": {
            "type": "string",
            "description": "Customer's email address."
          },
          "phone": {
            "type": "string",
            "description": "Customer's phone number."
          },
          "address": {
            "type": "object",
            "description": "Customer's address.",
            "properties": {
              "city": {
                "type": "string",
                "description": "City"
              },
              "state": {
                "type": "string",
                "description": "State"
              },
              "line_1": {
                "type": "string",
                "description": "First line of address."
              },
              "line_2": {
                "type": "string",
                "description": "Second line of address."
              },
              "country": {
                "type": "string",
                "description": "Country."
              },
              "postal_code": {
                "type": "string",
                "description": "Postal code."
              }
            }
          },
          "birthdate": {
            "type": "string",
            "description": "Customer's birthdate; format `YYYY-MM-DD`.",
            "format": "date"
          },
          "birthday": {
            "type": "string",
            "description": "Customer's birthdate; format `YYYY-MM-DD`.",
            "format": "date"
          },
          "metadata": {
            "type": "object",
            "description": "A set of custom key/value pairs that you can attach to a customer. The metadata object stores all custom attributes assigned to the customer. It can be useful for storing additional information about the customer in a structured format. This metadata can be used for validating whether the customer qualifies for a discount or it can be used in building customer segments. "
          }
        }
      },
      "9_req_update_customer": {
        "type": "object",
        "x-examples": {
          "example-1": {
            "id": "cust_sehkNIi8Uq2qQuRqSr7xn4Zi",
            "source_id": "bob.smith@rspective.pl",
            "email": "bob.smith@rspective.pl",
            "phone": "+1 (294) 752-1846",
            "birthdate": "2022-04-29",
            "address": {
              "city": "New York",
              "state": "New York",
              "line_1": "100 Main St",
              "line_2": "Blg 2 Apt 3",
              "country": "United States",
              "postal_code": "12345"
            },
            "summary": {
              "redemptions": {
                "total_redeemed": 11,
                "total_failed": 7,
                "total_succeeded": 4,
                "total_rolled_back": 1,
                "total_rollback_failed": 0,
                "total_rollback_succeeded": 1,
                "gift": {
                  "redeemed_amount": 0,
                  "amount_to_go": 0
                },
                "loyalty_card": {
                  "redeemed_points": 0,
                  "points_to_go": 387475
                }
              },
              "orders": {
                "total_amount": 694200,
                "total_count": 22,
                "average_amount": 31555,
                "last_order_amount": 24900,
                "last_order_date": "2022-06-09T12:54:42.314Z"
              }
            },
            "loyalty": {
              "points": 387475,
              "referred_customers": 0,
              "campaigns": {
                "Tiers": {
                  "points": 154,
                  "referred_customers": 0
                },
                "Reward": {
                  "points": 15,
                  "referred_customers": 0
                },
                "Tiers 2": {
                  "points": 10,
                  "referred_customers": 0
                },
                "Loyalty Program 1": {
                  "points": 0,
                  "referred_customers": 0
                },
                "Proportional Earning Rules": {
                  "points": 86446,
                  "referred_customers": 0
                },
                "v20220131-NewEarningRules-ValidonDaysANDTimeFrame": {
                  "points": 300850,
                  "referred_customers": 0
                }
              }
            },
            "referrals": {
              "total": 0,
              "campaigns": []
            },
            "metadata": {
              "acquisition_channel": "Facebook"
            },
            "system_metadata": {
              "consents": {
                "unsubscribed": {
                  "date": "2022-05-10T08:50:10.338Z",
                  "value": false
                },
                "cnst_6jQ5XcUOLnj5L7ImQAdBsJ1I": {
                  "date": "2022-05-10T08:50:10.338Z",
                  "value": false
                },
                "cnst_VCmucIvAsmDYw2PPAok6bcYy": {
                  "date": "2022-05-10T08:50:10.338Z",
                  "value": false
                }
              }
            },
            "created_at": "2021-12-29T06:35:32.476Z",
            "updated_at": "2022-06-14T09:56:22.212Z",
            "assets": {
              "cockpit_url": "https://dev.cockpits.voucherify.io/customers?token=U2FsdGVkX1%2BnpQd60txn1YAtQ%2BitfR2JOHbrwciLULwvBwLFSHpNoH7RhgGt6"
            },
            "object": "customer"
          }
        },
        "title": "Customer object",
        "description": "This is an object containing information about the customer.",
        "properties": {
          "name": {
            "type": "string",
            "description": "Customer's first and last name."
          },
          "description": {
            "type": "string",
            "description": "An arbitrary string that you can attach to a customer object."
          },
          "email": {
            "type": "string",
            "description": "Customer's email address."
          },
          "phone": {
            "type": "string",
            "description": "Customer's phone number."
          },
          "address": {
            "type": "object",
            "description": "Customer's address.",
            "properties": {
              "city": {
                "type": "string",
                "description": "City"
              },
              "state": {
                "type": "string",
                "description": "State"
              },
              "line_1": {
                "type": "string",
                "description": "First line of address."
              },
              "line_2": {
                "type": "string",
                "description": "Second line of address."
              },
              "country": {
                "type": "string",
                "description": "Country."
              },
              "postal_code": {
                "type": "string",
                "description": "Postal code."
              }
            }
          },
          "birthdate": {
            "type": "string",
            "description": "Customer's birthdate; format `YYYY-MM-DD`.",
            "format": "date"
          },
          "birthday": {
            "type": "string",
            "description": "Customer's birthdate; format `YYYY-MM-DD`.",
            "format": "date"
          },
          "metadata": {
            "type": "object",
            "description": "A set of custom key/value pairs that you can attach to a customer. The metadata object stores all custom attributes assigned to the customer. It can be useful for storing additional information about the customer in a structured format. This metadata can be used for validating whether the customer qualifies for a discount or it can be used in building customer segments. "
          }
        }
      },
      "9_obj_customer_object": {
        "type": "object",
        "x-examples": {
          "example-1": {
            "id": "cust_CSnYd37MXmrbS19XCrghjBsv",
            "source_id": "source_123",
            "name": "Bob Smith",
            "description": "A frequent customer",
            "email": "bob.smith@email.com",
            "phone": "+1 933 222 3333",
            "birthdate": "2022-01-01",
            "address": {
              "city": "New York",
              "state": "NY",
              "line_1": "123 Main St.",
              "line_2": "APT 3 BLG 4",
              "country": "United States",
              "postal_code": "10001"
            },
            "summary": {
              "redemptions": {
                "total_redeemed": 0,
                "total_failed": 0,
                "total_succeeded": 0,
                "total_rolled_back": 0,
                "total_rollback_failed": 0,
                "total_rollback_succeeded": 0,
                "gift": {
                  "redeemed_amount": 0,
                  "amount_to_go": 0
                },
                "loyalty_card": {
                  "redeemed_points": 0,
                  "points_to_go": 0
                }
              },
              "orders": {
                "total_amount": 0,
                "total_count": 0,
                "average_amount": 0,
                "last_order_amount": 0
              }
            },
            "loyalty": {
              "points": 0,
              "referred_customers": 0,
              "campaigns": {}
            },
            "referrals": {
              "total": 0,
              "campaigns": []
            },
            "metadata": {
              "lang": "en",
              "test": true
            },
            "system_metadata": {},
            "created_at": "2022-08-30T06:32:07.380Z",
            "object": "customer"
          }
        },
        "description": "This is an object representing a customer.  \n\nThis entity allows you to:\n* store customer details in Voucherify\n* link [redemptions](OpenAPI.json/components/schemas/7_obj_redemption_object) and [validations](OpenAPI.json/components/schemas/6_obj_validation_object) to a particular customer\n* build customer segments and use them in validation rules. ",
        "title": "Customer Object",
        "examples": [
          {
            "id": "cust_CSnYd37MXmrbS19XCrghjBsv",
            "source_id": "source_123",
            "name": "Bob Smith",
            "description": "A frequent customer",
            "email": "bob.smith@email.com",
            "phone": "+1 933 222 3333",
            "birthdate": "2022-01-01",
            "address": {
              "city": "New York",
              "state": "NY",
              "line_1": "123 Main St.",
              "line_2": "APT 3 BLG 4",
              "country": "United States",
              "postal_code": "10001"
            },
            "summary": {
              "redemptions": {
                "total_redeemed": 0,
                "total_failed": 0,
                "total_succeeded": 0,
                "total_rolled_back": 0,
                "total_rollback_failed": 0,
                "total_rollback_succeeded": 0,
                "gift": {
                  "redeemed_amount": 0,
                  "amount_to_go": 0
                },
                "loyalty_card": {
                  "redeemed_points": 0,
                  "points_to_go": 0
                }
              },
              "orders": {
                "total_amount": 0,
                "total_count": 0,
                "average_amount": 0,
                "last_order_amount": 0
              }
            },
            "loyalty": {
              "points": 0,
              "referred_customers": 0,
              "campaigns": {}
            },
            "referrals": {
              "total": 0,
              "campaigns": []
            },
            "metadata": {
              "lang": "en",
              "test": true
            },
            "system_metadata": {},
            "created_at": "2022-08-30T06:32:07.380Z",
            "object": "customer"
          }
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique ID of a customer that is assigned by Voucherify.",
            "example": "cust_CSnYd37MXmrbS19XCrghjBsv"
          },
          "source_id": {
            "type": "string",
            "description": "The merchant’s customer ID if it is different from the Voucherify customer ID. It is really useful in case of an integration between multiple systems. It can be a customer ID from a CRM system, database or 3rd-party service."
          },
          "name": {
            "type": "string",
            "description": "Customer's first and last name."
          },
          "description": {
            "type": "string",
            "description": "An arbitrary string that you can attach to a customer object."
          },
          "email": {
            "type": "string",
            "description": "Customer's email address."
          },
          "phone": {
            "type": "string",
            "description": "Customer's phone number."
          },
          "birthdate": {
            "type": "string",
            "description": "Customer's birthdate."
          },
          "birthday": {
            "type": "string",
            "description": "Customer's birthday."
          },
          "address": {
            "type": "object",
            "description": "Customer's address.",
            "properties": {
              "city": {
                "type": "string",
                "description": "City"
              },
              "state": {
                "type": "string",
                "description": "State"
              },
              "line_1": {
                "type": "string",
                "description": "First line of address."
              },
              "line_2": {
                "type": "string",
                "description": "Second line of address."
              },
              "country": {
                "type": "string",
                "description": "Country."
              },
              "postal_code": {
                "type": "string",
                "description": "Postal code."
              }
            }
          },
          "summary": {
            "type": "object",
            "description": "Contains a summary of customer's redemption and order statistics.",
            "properties": {
              "redemptions": {
                "type": "object",
                "description": "Customer's redemptions statistics.",
                "properties": {
                  "total_redeemed": {
                    "type": "integer",
                    "description": "Total number of redemptions made by the customer."
                  },
                  "total_failed": {
                    "type": "integer",
                    "description": "Total number of redemptions that failed."
                  },
                  "total_succeeded": {
                    "type": "integer",
                    "description": "Total number of redemptions that succeeded."
                  },
                  "total_rolled_back": {
                    "type": "integer",
                    "description": "Total number of redemptions that were rolled back for the customer."
                  },
                  "total_rollback_failed": {
                    "type": "integer",
                    "description": "Total number of redemption rollbacks that failed."
                  },
                  "total_rollback_succeeded": {
                    "type": "integer",
                    "description": "Total number of redemption rollbacks that succeeded."
                  },
                  "gift": {
                    "type": "object",
                    "description": "Summary of gift card credits.",
                    "properties": {
                      "redeemed_amount": {
                        "type": "integer",
                        "description": "Total amount of gift card credits redeemed by customer. Value is multiplied by 100 to precisely represent 2 decimal places. For example, $100 is written as 10000."
                      },
                      "amount_to_go": {
                        "type": "integer",
                        "description": "Remaining gift card balance across all gift cards. Value is multiplied by 100 to precisely represent 2 decimal places. For example, $100 is written as 10000."
                      }
                    }
                  },
                  "loyalty_card": {
                    "type": "object",
                    "description": "Summary of loyalty points.",
                    "properties": {
                      "redeemed_points": {
                        "type": "integer",
                        "description": "Total number of loyalty points redeemed by the customer."
                      },
                      "points_to_go": {
                        "type": "integer",
                        "description": "Sum of remaining available point balance accross all loyalty cards."
                      }
                    }
                  }
                }
              },
              "orders": {
                "type": "object",
                "description": "Customer's order statistics.",
                "properties": {
                  "total_amount": {
                    "type": "integer",
                    "description": "The total amount spent by the customer. Value is multiplied by 100 to precisely represent 2 decimal places. For example, $100 is written as 10000."
                  },
                  "total_count": {
                    "type": "integer",
                    "description": "Total number of orders made by the customer."
                  },
                  "average_amount": {
                    "type": "integer",
                    "description": "Average amount spent on orders. `total_amount` &divide; `total_count`. Value is multiplied by 100 to precisely represent 2 decimal places. For example, $100 is written as 10000."
                  },
                  "last_order_amount": {
                    "type": "integer",
                    "description": "Amount spent on last order. Value is multiplied by 100 to precisely represent 2 decimal places. For example, $100 is written as 10000."
                  },
                  "last_order_date": {
                    "type": "string",
                    "example": "2022-08-30T11:51:08.029Z",
                    "description": "Timestamp representing the date and time of the customer's last order in ISO 8601 format."
                  }
                }
              }
            }
          },
          "loyalty": {
            "type": "object",
            "description": "Summary of customer's loyalty information.",
            "properties": {
              "points": {
                "type": "integer"
              },
              "referred_customers": {
                "type": "integer",
                "description": "Total number of customers referred by the customer."
              },
              "campaigns": {
                "type": "object",
                "description": "Contains campaigns with details about point balances and how many customers were referred by the customer.",
                "properties": {
                  "campaign_name": {
                    "type": "object",
                    "description": "Contains details about the point balances left on loyalty cards and the number of referred customers in each campaign.",
                    "properties": {
                      "points": {
                        "type": "integer",
                        "description": "Remaining point balance in campaign."
                      },
                      "referred_customers": {
                        "type": "integer",
                        "description": "Number of customers referred by the customer in campaign."
                      }
                    }
                  }
                }
              }
            }
          },
          "referrals": {
            "type": "object",
            "description": "Summary of customer's referrals, in this case, the customer being the referee, i.e. information about the source of referrals and number of times the customer was referred by other customers.",
            "properties": {
              "total": {
                "type": "integer",
                "description": "Total number of times this customer received a referral, i.e. was referred by another customer."
              },
              "campaigns": {
                "type": "array",
                "description": "Contains an array of campaigns that served as the source of a referral for the customer.",
                "items": {
                  "type": "object",
                  "description": "Contains information about the source of the referral.",
                  "properties": {
                    "campaign_id": {
                      "type": "string",
                      "description": "Unique campaign ID, assigned by Voucherify.",
                      "example": "camp_rRsfatlwN7unSeUIJDCYedal"
                    },
                    "referrer_id": {
                      "type": "string",
                      "example": "cust_sehkNIi8Uq2qQuRqSr7xn4Zi",
                      "description": "Unique referrer ID, assigned by Voucherify. This is the customer ID of a customer that is referring this customer."
                    },
                    "related_object_id": {
                      "type": "string",
                      "description": "Related object ID, i.e. `r_0b9d4cc4aa164dd073`."
                    },
                    "related_object_type": {
                      "type": "string",
                      "description": "Related object type, i.e. `redemption`."
                    },
                    "date": {
                      "type": "string",
                      "example": "2022-08-30T10:19:39.196Z",
                      "description": "Timestamp representing the date and time when the customer was referred in ISO 8601 format."
                    }
                  }
                }
              }
            }
          },
          "metadata": {
            "type": "object",
            "description": "A set of custom key/value pairs that you can attach to a customer. The metadata object stores all custom attributes assigned to the customer. It can be useful for storing additional information about the customer in a structured format. This metadata can be used for validating whether the customer qualifies for a discount or it can be used in building customer segments."
          },
          "system_metadata": {
            "type": "object",
            "description": "Object used to store system metadata information.",
            "properties": {
              "consents": {
                "type": "object",
                "properties": {
                  "consent_name_or_ID": {
                    "type": "object",
                    "properties": {
                      "date": {
                        "type": "string",
                        "description": "Timestamp representing the date and time when ________ in ISO 8601 format.",
                        "example": "2022-05-10T08:50:10.338Z"
                      },
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "source": {
                "type": "string"
              }
            }
          },
          "created_at": {
            "type": "string",
            "description": "Timestamp representing the date and time when the customer was created in ISO 8601 format.",
            "example": "2022-08-30T06:32:07.380Z"
          },
          "updated_at": {
            "type": "string",
            "description": "Timestamp representing the date and time when the customer was updated in ISO 8601 format.",
            "example": "2022-08-31T06:32:07.380Z"
          },
          "assets": {
            "type": "object",
            "description": "Contains information about the customer's cockpit.",
            "properties": {
              "cockpit_url": {
                "type": "string",
                "description": "Customer's cockpit URL address."
              }
            }
          },
          "object": {
            "type": "string",
            "description": "The type of object represented by the JSON. This object stores information about the customer.",
            "default": "customer"
          }
        }
      },
      "9_res_list_customers": {
        "type": "object",
        "x-examples": {
          "example-1": {
            "id": "del_5PQxA5AgP94MubKQT8KlVg5e",
            "created_at": "2022-06-28T13:51:55.171Z",
            "related_object_id": "cust_W8n9I8pJDXlM69j49iKJeUYp",
            "related_object": "customer",
            "status": "DONE",
            "data_json": {
              "events": 2,
              "customer_events": 7,
              "daily_events": 0,
              "segments": 0,
              "orders": 1,
              "order_events": 4,
              "customer": 1
            },
            "object": "pernament_deletion"
          }
        },
        "title": "List Customers Response Body",
        "description": "Response body schema for **GET** `/customers`.",
        "properties": {
          "object": {
            "type": "string",
            "default": "list",
            "description": "The type of object represented by JSON. This object stores information about customers in a dictionary."
          },
          "data_ref": {
            "type": "string",
            "default": "customers",
            "description": "Identifies the name of the attribute that contains the array of customer objects."
          },
          "customers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/9_obj_customer_object"
            }
          },
          "total": {
            "type": "integer",
            "description": "Total number of customers."
          }
        }
      },
      "9_res_list_customer_activities": {
        "type": "object",
        "x-examples": {
          "example-1": {
            "id": "del_5PQxA5AgP94MubKQT8KlVg5e",
            "created_at": "2022-06-28T13:51:55.171Z",
            "related_object_id": "cust_W8n9I8pJDXlM69j49iKJeUYp",
            "related_object": "customer",
            "status": "DONE",
            "data_json": {
              "events": 2,
              "customer_events": 7,
              "daily_events": 0,
              "segments": 0,
              "orders": 1,
              "order_events": 4,
              "customer": 1
            },
            "object": "pernament_deletion"
          }
        },
        "title": "List Customer Activities Response Body",
        "description": "Request body schema for `/customers/{customerId}/activities`.",
        "properties": {
          "object": {
            "type": "string",
            "default": "list",
            "description": "The type of object represented by JSON. This object stores information about customer activities in a dictionary."
          },
          "data_ref": {
            "type": "string",
            "default": "data",
            "description": "Identifies the name of the attribute that contains the array of customer activity objects."
          },
          "data": {
            "type": "array",
            "description": "Array of customer activity objects.",
            "items": {
              "$ref": "#/components/schemas/9_obj_customer_activity_object"
            }
          },
          "total": {
            "type": "integer",
            "description": "Total number of customer activities."
          }
        }
      },
      "9_obj_customer_activity_object": {
        "type": "object",
        "x-examples": {
          "example-1": {
            "id": "del_5PQxA5AgP94MubKQT8KlVg5e",
            "created_at": "2022-06-28T13:51:55.171Z",
            "related_object_id": "cust_W8n9I8pJDXlM69j49iKJeUYp",
            "related_object": "customer",
            "status": "DONE",
            "data_json": {
              "events": 2,
              "customer_events": 7,
              "daily_events": 0,
              "segments": 0,
              "orders": 1,
              "order_events": 4,
              "customer": 1
            },
            "object": "pernament_deletion"
          }
        },
        "title": "Customer Activity Object",
        "description": "This is an object representing customer activity.  \n\nThis is a general object which presents moments from customers' activity. There are all types of different events that customers perform during their journey once they participate in Promotions. Events describe moments when customers redeem coupons and earn points or rewards. The list of all types of activities is listed below.\n\nThe details describing the activity are collected in a property named `data`. In this object, software integrators will find all further information explaining the event context.  \n\nCustomer Activity Object is a type of [Event](OpenAPI.json/components/schemas/15_obj_event_object)  which is our way of letting you know when something interesting happens in your project. When an interesting event concerning an individual customer occurs, we create a new Customer Activity object. For example, when a code is published to a customer, we create a `customer.publication.succeeded` event.\n\n| **Event types (definition in progress)** |\n|:---|\n| customer.confirmed |\n| customer.created |\n| customer.updated |\n| customer.deleted |\n| customer.referred |\n| customer.custom_event |\n| customer.segment.entered |\n| customer.segment.left |\n| customer.sms.sent |\n| customer.sms.failed |\n| customer.email.sent |\n| customer.email.failed |\n| customer.activecampaign.sent |\n| customer.activecampaign.failed |\n| customer.braze.sent |\n| customer.braze.failed |\n| customer.mailchimp.sent |\n| customer.mailchimp.failed |\n| customer.intercom.sent |\n| customer.intercom.failed |\n| customer.rewarded |\n| customer.rewarded.loyalty_points |\n| customer.voucher.gift.balance_added |\n| customer.voucher.loyalty_card.points_added |\n| customer.voucher.loyalty_card.points_transferred |\n| customer.publication.succeeded |\n| customer.publication.failed |\n| customer.redemption.succeeded |\n| customer.redemption.failed |\n| customer.redemption.rollback.succeeded |\n| customer.redemption.rollback.failed |\n| customer.consents.given |\n| customer.consents.revoked |",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique event ID, assigned by Voucherify."
          },
          "type": {
            "type": "string",
            "description": "Event type."
          },
          "data": {
            "type": "array",
            "description": "Contains details about the event. The objects that are returned in the data attribute differ based on the context of the event type.",
            "items": {
              "$ref": "#/components/schemas/9_obj_customer_activity_object_data"
            }
          },
          "created_at": {
            "type": "string",
            "description": "Timestamp representing the date and time when the customer activity occurred in ISO 8601 format.",
            "example": "2022-08-30T09:14:07.660Z"
          }
        },
        "x-tags": [
          "CUSTOMERS API"
        ]
      },
      "9_obj_customer_activity_object_data": {
        "title": "Customer Activity Data Object",
        "description": "Event data object schema.",
        "anyOf": [
          {
            "$ref": "#/components/schemas/9_obj_customer_activity_object_data_customer_confirmed"
          },
          {
            "$ref": "#/components/schemas/9_obj_customer_activity_object_data_customer_created"
          },
          {
            "$ref": "#/components/schemas/9_obj_customer_activity_object_data_customer_updated"
          },
          {
            "$ref": "#/components/schemas/9_obj_customer_activity_object_data_customer_deleted"
          },
          {
            "$ref": "#/components/schemas/9_obj_customer_activity_object_data_customer_referred"
          },
          {
            "$ref": "#/components/schemas/9_obj_customer_activity_object_data_custom_event"
          },
          {
            "$ref": "#/components/schemas/9_obj_customer_activity_object_data_customer_segment_entered"
          },
          {
            "$ref": "#/components/schemas/9_obj_customer_activity_object_data_customer_segment_left"
          },
          {
            "$ref": "#/components/schemas/9_obj_customer_activity_object_data_customer_sms_sent"
          },
          {
            "$ref": "#/components/schemas/9_obj_customer_activity_object_data_customer_sms_failed"
          },
          {
            "$ref": "#/components/schemas/9_obj_customer_activity_object_data_customer_email_sent"
          },
          {
            "$ref": "#/components/schemas/9_obj_customer_activity_object_data_customer_email_failed"
          },
          {
            "$ref": "#/components/schemas/9_obj_customer_activity_object_data_customer_activecampaign_sent"
          },
          {
            "$ref": "#/components/schemas/9_obj_customer_activity_object_data_customer_activecampaign_failed"
          },
          {
            "$ref": "#/components/schemas/9_obj_customer_activity_object_data_customer_braze_sent"
          },
          {
            "$ref": "#/components/schemas/9_obj_customer_activity_object_data_customer_braze_failed"
          },
          {
            "$ref": "#/components/schemas/9_obj_customer_activity_object_data_customer_mailchimp_sent"
          },
          {
            "$ref": "#/components/schemas/9_obj_customer_activity_object_data_customer_mailchimp_failed"
          },
          {
            "$ref": "#/components/schemas/9_obj_customer_activity_object_data_customer_intercom_sent"
          },
          {
            "$ref": "#/components/schemas/9_obj_customer_activity_object_data_customer_intercom_failed"
          },
          {
            "$ref": "#/components/schemas/9_obj_customer_activity_object_data_customer_rewarded"
          },
          {
            "$ref": "#/components/schemas/9_obj_customer_activity_object_data_customer_rewarded_loyalty_points"
          },
          {
            "$ref": "#/components/schemas/9_obj_customer_activity_object_data_customer_voucher_gift_voucher_balance_added"
          },
          {
            "$ref": "#/components/schemas/9_obj_customer_activity_object_data_customer_voucher_gift_voucher_loyalty_card_points_added"
          },
          {
            "$ref": "#/components/schemas/9_obj_customer_activity_object_data_customer_voucher_gift_voucher_loyalty_card_points_transferred"
          },
          {
            "$ref": "#/components/schemas/9_obj_customer_activity_object_data_customer_publication_succeeded"
          },
          {
            "$ref": "#/components/schemas/9_obj_customer_activity_object_data_customer_publication_failed"
          },
          {
            "$ref": "#/components/schemas/9_obj_customer_activity_object_data_customer_redemption_succeeded"
          },
          {
            "$ref": "#/components/schemas/9_obj_customer_activity_object_data_customer_redemption_failed"
          },
          {
            "$ref": "#/components/schemas/9_obj_customer_activity_object_data_customer_redemption_rollback_succeeded"
          },
          {
            "$ref": "#/components/schemas/9_obj_customer_activity_object_data_customer_redemption_rollback_failed"
          },
          {
            "$ref": "#/components/schemas/9_obj_customer_activity_object_data_customer_consents_given"
          },
          {
            "$ref": "#/components/schemas/9_obj_customer_activity_object_data_customer_consents_revoked"
          }
        ]
      },
      "9_obj_customer_activity_object_data_customer_confirmed": {
        "title": "Customer Confirmed",
        "description": "Event data object schema for `customer.confirmed`.",
        "type": "object"
      },
      "9_obj_customer_activity_object_data_customer_created": {
        "title": "Customer Created",
        "description": "Event data object schema for `customer.created`.",
        "type": "object"
      },
      "9_obj_customer_activity_object_data_customer_updated": {
        "title": "Customer Updated",
        "description": "Event data object schema for `customer.updated`.",
        "type": "object"
      },
      "9_obj_customer_activity_object_data_customer_deleted": {
        "title": "Customer Deleted",
        "description": "Event data object schema for `customer.deleted`.",
        "type": "object"
      },
      "9_obj_customer_activity_object_data_customer_referred": {
        "title": "Customer Referred",
        "description": "Event data object schema for `customer.referred`.",
        "type": "object"
      },
      "9_obj_customer_activity_object_data_customer_custom_event": {
        "title": "Custom Event",
        "description": "Event data object schema for `customer.custom_event`.",
        "type": "object"
      },
      "9_obj_customer_activity_object_data_customer_segment_entered": {
        "title": "Segment Entered",
        "description": "Event data object schema for `customer.segment.entered`.",
        "type": "object"
      },
      "9_obj_customer_activity_object_data_customer_segment_left": {
        "title": "Segment Left",
        "description": "Event data object schema for `customer.segment.left`.",
        "type": "object"
      },
      "9_obj_customer_activity_object_data_customer_sms_sent": {
        "title": "SMS Sent",
        "description": "Event data object schema for `customer.sms.sent`.",
        "type": "object"
      },
      "9_obj_customer_activity_object_data_customer_sms_failed": {
        "title": "SMS Failed",
        "description": "Event data object schema for `customer.sms.failed`.",
        "type": "object"
      },
      "9_obj_customer_activity_object_data_customer_email_sent": {
        "title": "Email Sent",
        "description": "Event data object schema for `customer.email.sent`.",
        "type": "object"
      },
      "9_obj_customer_activity_object_data_customer_email_failed": {
        "title": "Email Failed",
        "description": "Event data object schema for `customer.email.failed`.",
        "type": "object"
      },
      "9_obj_customer_activity_object_data_customer_activecampaign_sent": {
        "title": "ActiveCampaign Sent",
        "description": "Event data object schema for `customer.activecampaign.sent`.",
        "type": "object"
      },
      "9_obj_customer_activity_object_data_customer_activecampaign_failed": {
        "title": "ActiveCampaign Failed",
        "description": "Event data object schema for `customer.activecampaign.failed`.",
        "type": "object"
      },
      "9_obj_customer_activity_object_data_customer_braze_sent": {
        "title": "Braze Sent",
        "description": "Event data object schema for `customer.braze.sent`.",
        "type": "object"
      },
      "9_obj_customer_activity_object_data_customer_braze_failed": {
        "title": "Braze Failed",
        "description": "Event data object schema for `customer.braze.failed`.",
        "type": "object"
      },
      "9_obj_customer_activity_object_data_customer_mailchimp_sent": {
        "title": "Mailchimp Sent",
        "description": "Event data object schema for `customer.mailchimp.sent`.",
        "type": "object"
      },
      "9_obj_customer_activity_object_data_customer_mailchimp_failed": {
        "title": "Mailchimp Failed",
        "description": "Event data object schema for `customer.mailchimp.failed`.",
        "type": "object"
      },
      "9_obj_customer_activity_object_data_customer_intercom_sent": {
        "title": "Intercom Sent",
        "description": "Event data object schema for `customer.intercom.sent`.",
        "type": "object"
      },
      "9_obj_customer_activity_object_data_customer_intercom_failed": {
        "title": "Intercom Failed",
        "description": "Event data object schema for `customer.intercom.failed`.",
        "type": "object"
      },
      "9_obj_customer_activity_object_data_customer_rewarded": {
        "title": "Customer Rewarded",
        "description": "Event data object schema for `customer.rewarded`.",
        "type": "object"
      },
      "9_obj_customer_activity_object_data_customer_rewarded_loyalty_points": {
        "title": "Customer Rewarded Loyalty Points",
        "description": "Event data object schema for `customer.rewarded.loyalty_points`.",
        "type": "object"
      },
      "9_obj_customer_activity_object_data_customer_voucher_gift_voucher_balance_added": {
        "title": "Gift Voucher Balance Added",
        "description": "Event data object schema for `customer.voucher.gift.balance_added`.",
        "type": "object"
      },
      "9_obj_customer_activity_object_data_customer_voucher_voucher_loyalty_card_points_added": {
        "title": "Loyalty Card Points Added",
        "description": "Event data object schema for `customer.voucher.loyalty_card.points_added`.",
        "type": "object"
      },
      "9_obj_customer_activity_object_data_customer_voucher_voucher_loyalty_card_points_transferred": {
        "title": "Loyalty Card Points Transferred",
        "description": "Event data object schema for `customer.voucher.loyalty_card.points_transferred`.",
        "type": "object"
      },
      "9_obj_customer_activity_object_data_customer_publication_succeeded": {
        "title": "Publication Succeeded",
        "description": "Event data object schema for `customer.publication.succeeded`.",
        "type": "object"
      },
      "9_obj_customer_activity_object_data_customer_publication_failed": {
        "title": "Publication Failed",
        "description": "Event data object schema for `customer.publication.failed`.",
        "type": "object"
      },
      "9_obj_customer_activity_object_data_customer_redemption_succeeded": {
        "title": "Redemption Succeeded",
        "description": "Event data object schema for `customer.redemption.succeeded`.",
        "type": "object"
      },
      "9_obj_customer_activity_object_data_customer_redemption_failed": {
        "title": "Redemption Succeeded",
        "description": "Event data object schema for `customer.redemption.failed`.",
        "type": "object"
      },
      "9_obj_customer_activity_object_data_customer_redemption_rollback_succeeded": {
        "title": "Redemption Rollback Succeeded",
        "description": "Event data object schema for `customer.redemption.rollback.succeeded`.",
        "type": "object"
      },
      "9_obj_customer_activity_object_data_customer_redemption_rollback_failed": {
        "title": "Redemption Rollback Failed",
        "description": "Event data object schema for `customer.redemption.rollback.failed`.",
        "type": "object"
      },
      "9_obj_customer_activity_object_data_customer_consents_given": {
        "title": "Consents Given",
        "description": "Event data object schema for `customer.consents.given`.",
        "type": "object"
      },
      "9_obj_customer_activity_object_data_customer_consents_revoked": {
        "title": "Consents Given",
        "description": "Event data object schema for `customer.consents.revoked`.",
        "type": "object"
      },
      "9_res_customers_customerId_permanent-deletion": {
        "type": "object",
        "x-examples": {
          "example-1": {
            "id": "del_5PQxA5AgP94MubKQT8KlVg5e",
            "created_at": "2022-06-28T13:51:55.171Z",
            "related_object_id": "cust_W8n9I8pJDXlM69j49iKJeUYp",
            "related_object": "customer",
            "status": "DONE",
            "data_json": {
              "events": 2,
              "customer_events": 7,
              "daily_events": 0,
              "segments": 0,
              "orders": 1,
              "order_events": 4,
              "customer": 1
            },
            "object": "pernament_deletion"
          }
        },
        "title": "Customer Permanent Deletion Response Body",
        "description": "Response body schema for `/customers/{customerId}/permanent-deletion`.",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique permanent deletion object ID.",
            "example": "del_mgzqZNwUnwnt1Ddw6phEG90Q"
          },
          "created_at": {
            "type": "string",
            "example": "2022-09-02T17:55:47.865Z",
            "description": "Timestamp representing the date and time when the customer was requested to be deleted in ISO 8601 format."
          },
          "related_object_id": {
            "type": "string",
            "example": "cust_m557pDDl4IGXexkU6KOQ2Dwi",
            "description": "Unique customer ID that is being deleted."
          },
          "related_object": {
            "type": "string",
            "description": "Object being deleted.",
            "default": "customer"
          },
          "status": {
            "type": "string",
            "description": "Deletion status."
          },
          "data_json": {
            "type": "object",
            "description": "Statistics summarizing the number of related information that was deleted.",
            "properties": {
              "events": {
                "type": "integer",
                "description": "Number of events deleted."
              },
              "customer_events": {
                "type": "integer",
                "description": "Number of customer events deleted."
              },
              "daily_events": {
                "type": "integer",
                "description": "Number of daily events deleted."
              },
              "segments": {
                "type": "integer",
                "description": "Number of segments deleted."
              },
              "orders": {
                "type": "integer",
                "description": "Number of orders deleted."
              },
              "order_events": {
                "type": "integer",
                "description": "Number of order events deleted."
              },
              "customer": {
                "type": "integer",
                "description": "Number of customers deleted."
              }
            }
          },
          "object": {
            "type": "string",
            "description": "The type of object represented by JSON.",
            "default": "pernament_deletion"
          }
        }
      },
      "9_req_customers_metadata_async": {
        "type": "object",
        "x-examples": {
          "example-1": {
            "id": "del_5PQxA5AgP94MubKQT8KlVg5e",
            "created_at": "2022-06-28T13:51:55.171Z",
            "related_object_id": "cust_W8n9I8pJDXlM69j49iKJeUYp",
            "related_object": "customer",
            "status": "DONE",
            "data_json": {
              "events": 2,
              "customer_events": 7,
              "daily_events": 0,
              "segments": 0,
              "orders": 1,
              "order_events": 4,
              "customer": 1
            },
            "object": "pernament_deletion"
          }
        },
        "title": "Update Customers Metadata in bulk Request Body",
        "description": "Request body schema for `/customers/metadata/async`.",
        "properties": {
          "source_ids": {
            "type": "array",
            "description": "An array of customer `source_id`'s.",
            "items": {
              "type": "string"
            }
          },
          "metadata": {
            "type": "object",
            "description": "Metadata key value pairs to be updated. A set of custom key/value pairs that you can attach to a customer. The metadata object stores all custom attributes assigned to the customer. It can be useful for storing additional information about the customer in a structured format. This metadata can be used for validating whether the customer qualifies for a discount or it can be used in building customer segments."
          }
        },
        "required": [
          "source_ids",
          "metadata"
        ]
      },
      "9_req_update_customers_bulk": {
        "type": "array",
        "x-examples": {
          "example-1": {
            "id": "del_5PQxA5AgP94MubKQT8KlVg5e",
            "created_at": "2022-06-28T13:51:55.171Z",
            "related_object_id": "cust_W8n9I8pJDXlM69j49iKJeUYp",
            "related_object": "customer",
            "status": "DONE",
            "data_json": {
              "events": 2,
              "customer_events": 7,
              "daily_events": 0,
              "segments": 0,
              "orders": 1,
              "order_events": 4,
              "customer": 1
            },
            "object": "pernament_deletion"
          }
        },
        "title": "Update Customers in bulk Request Body",
        "description": "Request body schema for `/customers/bulk/async`.",
        "items": {
          "$ref": "#/components/schemas/9_req_update_customers_bulk_customer_object"
        }
      },
      "9_req_update_customers_bulk_customer_object": {
        "type": "object",
        "x-examples": {
          "example-1": {
            "id": "cust_sehkNIi8Uq2qQuRqSr7xn4Zi",
            "source_id": "bob.smith@rspective.pl",
            "email": "bob.smith@rspective.pl",
            "phone": "+1 (294) 752-1846",
            "birthdate": "2022-04-29",
            "address": {
              "city": "New York",
              "state": "New York",
              "line_1": "100 Main St",
              "line_2": "Blg 2 Apt 3",
              "country": "United States",
              "postal_code": "12345"
            },
            "summary": {
              "redemptions": {
                "total_redeemed": 11,
                "total_failed": 7,
                "total_succeeded": 4,
                "total_rolled_back": 1,
                "total_rollback_failed": 0,
                "total_rollback_succeeded": 1,
                "gift": {
                  "redeemed_amount": 0,
                  "amount_to_go": 0
                },
                "loyalty_card": {
                  "redeemed_points": 0,
                  "points_to_go": 387475
                }
              },
              "orders": {
                "total_amount": 694200,
                "total_count": 22,
                "average_amount": 31555,
                "last_order_amount": 24900,
                "last_order_date": "2022-06-09T12:54:42.314Z"
              }
            },
            "loyalty": {
              "points": 387475,
              "referred_customers": 0,
              "campaigns": {
                "Tiers": {
                  "points": 154,
                  "referred_customers": 0
                },
                "Reward": {
                  "points": 15,
                  "referred_customers": 0
                },
                "Tiers 2": {
                  "points": 10,
                  "referred_customers": 0
                },
                "Loyalty Program 1": {
                  "points": 0,
                  "referred_customers": 0
                },
                "Proportional Earning Rules": {
                  "points": 86446,
                  "referred_customers": 0
                },
                "v20220131-NewEarningRules-ValidonDaysANDTimeFrame": {
                  "points": 300850,
                  "referred_customers": 0
                }
              }
            },
            "referrals": {
              "total": 0,
              "campaigns": []
            },
            "metadata": {
              "acquisition_channel": "Facebook"
            },
            "system_metadata": {
              "consents": {
                "unsubscribed": {
                  "date": "2022-05-10T08:50:10.338Z",
                  "value": false
                },
                "cnst_6jQ5XcUOLnj5L7ImQAdBsJ1I": {
                  "date": "2022-05-10T08:50:10.338Z",
                  "value": false
                },
                "cnst_VCmucIvAsmDYw2PPAok6bcYy": {
                  "date": "2022-05-10T08:50:10.338Z",
                  "value": false
                }
              }
            },
            "created_at": "2021-12-29T06:35:32.476Z",
            "updated_at": "2022-06-14T09:56:22.212Z",
            "assets": {
              "cockpit_url": "https://dev.cockpits.voucherify.io/customers?token=U2FsdGVkX1%2BnpQd60txn1YAtQ%2BitfR2JOHbrwciLULwvBwLFSHpNoH7RhgGt6"
            },
            "object": "customer"
          }
        },
        "title": "Customer object",
        "description": "This is an object containing information about the customer.",
        "properties": {
          "source_id": {
            "type": "string",
            "description": "Unique customer source ID."
          },
          "name": {
            "type": "string",
            "description": "Customer's first and last name."
          },
          "description": {
            "type": "string",
            "description": "An arbitrary string that you can attach to a customer object."
          },
          "email": {
            "type": "string",
            "description": "Customer's email address."
          },
          "phone": {
            "type": "string",
            "description": "Customer's phone number."
          },
          "address": {
            "type": "object",
            "description": "Customer's address.",
            "properties": {
              "city": {
                "type": "string",
                "description": "City"
              },
              "state": {
                "type": "string",
                "description": "State"
              },
              "line_1": {
                "type": "string",
                "description": "First line of address."
              },
              "line_2": {
                "type": "string",
                "description": "Second line of address."
              },
              "country": {
                "type": "string",
                "description": "Country."
              },
              "postal_code": {
                "type": "string",
                "description": "Postal code."
              }
            }
          },
          "birthdate": {
            "type": "string",
            "description": "Customer's birthdate; format `YYYY-MM-DD`.",
            "format": "date"
          },
          "birthday": {
            "type": "string",
            "description": "Customer's birthdate; format `YYYY-MM-DD`.",
            "format": "date"
          },
          "metadata": {
            "type": "object",
            "description": "A set of custom key/value pairs that you can attach to a customer. The metadata object stores all custom attributes assigned to the customer. It can be useful for storing additional information about the customer in a structured format. This metadata can be used for validating whether the customer qualifies for a discount or it can be used in building customer segments. "
          }
        },
        "required": [
          "source_id"
        ]
      },
      "9_req_update_customers_consents": {
        "type": "object",
        "x-examples": {
          "example-1": {
            "id": "del_5PQxA5AgP94MubKQT8KlVg5e",
            "created_at": "2022-06-28T13:51:55.171Z",
            "related_object_id": "cust_W8n9I8pJDXlM69j49iKJeUYp",
            "related_object": "customer",
            "status": "DONE",
            "data_json": {
              "events": 2,
              "customer_events": 7,
              "daily_events": 0,
              "segments": 0,
              "orders": 1,
              "order_events": 4,
              "customer": 1
            },
            "object": "pernament_deletion"
          }
        },
        "title": "Update Customer Consents Request Body",
        "description": "Request body schema for **PUT** `/customers/{customerId}/consents`.",
        "properties": {
          "consent_id": {
            "type": "boolean",
            "description": "Key-value pairs where the key is the consent identifier and value is a boolean that identifies if a customer has given the consent or not."
          },
          "unsubscribed": {
            "type": "boolean",
            "description": "To deny all consents, use `unsubscribed` as a consent identifier and `true` as a value."
          }
        }
      },
      "10_obj_order_object": {
        "type": "object",
        "x-examples": {
          "example-1": {
            "id": "ord_mtAx6xnppgrXAegfKjGnZg59",
            "source_id": null,
            "created_at": "2022-03-10T09:13:40.590Z",
            "updated_at": "2022-03-10T09:13:41.341Z",
            "status": "PAID",
            "amount": 77789,
            "discount_amount": 0,
            "total_discount_amount": 0,
            "total_amount": 77789,
            "items": [
              {
                "object": "order_item",
                "product_id": "prod_0a7e62db1fca8322a2",
                "quantity": 1,
                "amount": 70000,
                "price": 70000,
                "subtotal_amount": 70000,
                "product": {
                  "id": "prod_0a7e62db1fca8322a2",
                  "source_id": "prod_anJ03RZZq74z4v",
                  "name": "Apple iPhone 8",
                  "price": 20000
                }
              },
              {
                "object": "order_item",
                "product_id": "prod_0a41e31b3081c2834d",
                "sku_id": "sku_0a41e31c7b41c28358",
                "quantity": 1,
                "amount": 7789,
                "price": 7789,
                "subtotal_amount": 7789,
                "product": {
                  "id": "prod_0a41e31b3081c2834d",
                  "source_id": "r4",
                  "name": "Books",
                  "price": 1599
                },
                "sku": {
                  "id": "sku_0a41e31c7b41c28358",
                  "source_id": "emailme@myemail.please",
                  "sku": "Comics",
                  "price": 7789
                }
              }
            ],
            "metadata": {},
            "customer": {
              "id": "cust_nk0N1uNQ1YnupAoJGOgvsODC",
              "object": "customer"
            },
            "referrer": {
              "id": "cust_7iUa6ICKyU6gH40dBU25kQU1",
              "object": "customer"
            },
            "customer_id": "cust_nk0N1uNQ1YnupAoJGOgvsODC",
            "referrer_id": "cust_7iUa6ICKyU6gH40dBU25kQU1",
            "object": "order",
            "redemptions": {
              "r_0abe82a2154879ee5c": {
                "date": "2022-03-10T09:13:40.693Z",
                "related_object_type": "voucher",
                "related_object_id": "v_7HxHkf4VAkMuc8u4lZs78lyRwhRze5UE",
                "related_object_parent_id": "camp_BcHeMm4QaKjqCWMQFecMp1U0"
              }
            }
          }
        },
        "title": "Order object",
        "description": "This is an object representing an order.  \n\nThe purchase transactions can be tracked in Voucherify by the creation of an order object. You can create, retrieve, and pay individual orders, as well as list and export all of them in a CSV format. Orders are identified by a unique ID.\n\nOrders are automatically created during the [redeem voucher](OpenAPI.json/paths/~1vouchers~1{code}~1redemption/post) and [redeem promotion](OpenAPI.json/paths/~1promotions~1tiers~1{promotion_tier_id}~1redemption/post) call.\n\n<!-- theme: info -->\n> #### order.id and order session\n>\n> If you use the same order.id in more than one redemption request, all valid discounts provided in the redemption payload will be applied to the given order.\n> \n> Each time you use particular order in your requests, the API will automatically trigger a new session linked to the order.id. The session is active during the request and ends asynchronously after the request is completed. The session mechanism ensures that the particular order.id can be used in one API request at once.",
        "x-tags": [
          "ORDERS API"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique order ID, assigned by Voucherify.",
            "example": "ord_GFDbbv2I0wnO0sFUBOOOXPj2"
          },
          "source_id": {
            "type": "string",
            "description": "The merchant’s order ID if it is different from the Voucherify order ID. It is really useful in case of integration between multiple systems. It can be an order ID from CRM, database or 3rd party service."
          },
          "created_at": {
            "type": "string",
            "description": "Timestamp representing the date and time when the order was created in ISO 8601 format.",
            "example": "2022-03-09T11:19:04.819Z"
          },
          "updated_at": {
            "type": "string",
            "example": "2022-08-12T13:34:10.681Z",
            "description": "Timestamp representing the date and time when the order was updated in ISO 8601 format."
          },
          "status": {
            "type": "string",
            "description": "Order status.",
            "enum": [
              "CREATED",
              "PAID",
              "CANCELED",
              "FULFILLED"
            ]
          },
          "amount": {
            "type": "integer",
            "description": "Order amount before applying any discount."
          },
          "discount_amount": {
            "type": "integer",
            "description": "Sum of all order-level discounts applied to the order."
          },
          "items_discount_amount": {
            "type": "integer",
            "description": "Sum of all product-specific discounts applied to the order.  \n`sum(items, i => i.discount_amount)`"
          },
          "total_discount_amount": {
            "type": "integer",
            "description": "Sum of all order-level AND all product-specific discounts applied to the order.  \n`total_discount_amount` = `discount_amount` + `items_discount_amount`\t"
          },
          "total_amount": {
            "type": "integer",
            "description": "Order amount after applying all the discounts.  \n`total_amount` = `amount` - `total_discount_amount`"
          },
          "items": {
            "type": "array",
            "description": "Array of order items that have been applied to the order. Each order item can show the effects of particular discounts on the item-level.",
            "items": {
              "type": "object",
              "properties": {
                "object": {
                  "type": "string",
                  "default": "order_item",
                  "description": "The type of object represented by JSON. This object stores information about the order item."
                },
                "product_id": {
                  "type": "string",
                  "example": "prod_5h0wc453_1",
                  "description": "A unique identifier that represents the product and is assigned by Voucherify."
                },
                "sku_id": {
                  "type": "string",
                  "example": "sku_prod_5h0wc453_1_1",
                  "description": "A unique identifier that represents the SKU and is assigned by Voucherify."
                },
                "quantity": {
                  "type": "integer",
                  "description": "Quantity of the item in the cart."
                },
                "amount": {
                  "type": "integer",
                  "description": "Represents a total pre-discount amount of order item (`price` * `quantity`)."
                },
                "discount_amount": {
                  "type": "integer",
                  "description": "The item-level discount applied to the item."
                },
                "price": {
                  "type": "integer",
                  "description": "Unit price of an item. Value is multiplied by 100 to precisely represent 2 decimal places. For example, $100 is written as 10000."
                },
                "subtotal_amount": {
                  "type": "integer",
                  "description": "Final order item amount after the applied item-level discount.  If there are no item-level discounts applied, this item is equal to the `amount`.   \n`subtotal_amount`=`amount`-`discount_amount`"
                },
                "product": {
                  "type": "object",
                  "description": "This object stores more information about the related product.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "prod_5h0wc453_1",
                      "description": "A unique identifier that represents the product and is assigned by Voucherify."
                    },
                    "source_id": {
                      "type": "string",
                      "description": "A unique product identifier from your inventory system.",
                      "example": "illy-arabica"
                    },
                    "name": {
                      "type": "string",
                      "example": "Brewing System",
                      "description": "Product name."
                    },
                    "price": {
                      "type": "integer",
                      "description": "Unit price of a product. Value is multiplied by 100 to precisely represent 2 decimal places. For example, $100 is written as 10000."
                    }
                  }
                },
                "sku": {
                  "type": "object",
                  "description": "This object stores more information about the related SKU.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "sku_prod_5h0wc453_1_1",
                      "description": "A unique identifier that represents the SKU and is assigned by Voucherify."
                    },
                    "source_id": {
                      "type": "string",
                      "example": "illy-arabica-250g",
                      "description": "A unique SKU identifier from your inventory system."
                    },
                    "sku": {
                      "type": "string",
                      "description": "SKU name."
                    },
                    "price": {
                      "type": "integer",
                      "description": "Unit price of a SKU. Value is multiplied by 100 to precisely represent 2 decimal places. For example, $100 is written as 10000."
                    }
                  }
                }
              }
            }
          },
          "metadata": {
            "type": "object",
            "description": "The metadata object stores all custom attributes assigned to the order. A set of key/value pairs that are att to an order object. Stores additional information about the order in a structured format."
          },
          "customer": {
            "type": "object",
            "description": "Object containing information about the customer that is making the purchase.",
            "properties": {
              "id": {
                "type": "string",
                "example": "cust_7iUa6ICKyU6gH40dBU25kQU1",
                "description": "Unique customer ID of the customer making the purchase."
              },
              "object": {
                "type": "string",
                "default": "customer",
                "description": "Type of object represented by the `customer` object."
              }
            }
          },
          "referrer": {
            "type": "object",
            "description": "Object containing information about the referrer.",
            "properties": {
              "id": {
                "type": "string",
                "example": "cust_7iUa6ICKyU6gH40dBU25kQU1",
                "description": "Unique referrer ID, who referred the customer making the purchase."
              },
              "object": {
                "type": "string",
                "default": "customer",
                "description": "Type of object represented by the `referrer` object."
              }
            }
          },
          "customer_id": {
            "type": "string",
            "description": "Unique customer ID of the customer making the purchase.",
            "example": "cust_7iUa6ICKyU6gH40dBU25kQU1"
          },
          "referrer_id": {
            "type": "string",
            "example": "cust_nM4jqPiaXUvQdVSA6vTRUnix",
            "description": "Unique referrer ID."
          },
          "object": {
            "type": "string",
            "default": "order",
            "description": "The type of object represented by JSON. This object stores information about the order."
          },
          "redemptions": {
            "description": "Contains information about redemptions that were applied for the order.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/10_obj_order_object_unstacked_redemptions"
              },
              {
                "$ref": "#/components/schemas/10_obj_order_object_stacked_redemptions"
              }
            ]
          }
        }
      },
      "10_obj_order_object_unstacked_redemptions": {
        "type": "object",
        "x-examples": {
          "example-1": {
            "id": "ord_mtAx6xnppgrXAegfKjGnZg59",
            "source_id": null,
            "created_at": "2022-03-10T09:13:40.590Z",
            "updated_at": "2022-03-10T09:13:41.341Z",
            "status": "PAID",
            "amount": 77789,
            "discount_amount": 0,
            "total_discount_amount": 0,
            "total_amount": 77789,
            "items": [
              {
                "object": "order_item",
                "product_id": "prod_0a7e62db1fca8322a2",
                "quantity": 1,
                "amount": 70000,
                "price": 70000,
                "subtotal_amount": 70000,
                "product": {
                  "id": "prod_0a7e62db1fca8322a2",
                  "source_id": "prod_anJ03RZZq74z4v",
                  "name": "Apple iPhone 8",
                  "price": 20000
                }
              },
              {
                "object": "order_item",
                "product_id": "prod_0a41e31b3081c2834d",
                "sku_id": "sku_0a41e31c7b41c28358",
                "quantity": 1,
                "amount": 7789,
                "price": 7789,
                "subtotal_amount": 7789,
                "product": {
                  "id": "prod_0a41e31b3081c2834d",
                  "source_id": "r4",
                  "name": "Books",
                  "price": 1599
                },
                "sku": {
                  "id": "sku_0a41e31c7b41c28358",
                  "source_id": "emailme@myemail.please",
                  "sku": "Comics",
                  "price": 7789
                }
              }
            ],
            "metadata": {},
            "customer": {
              "id": "cust_nk0N1uNQ1YnupAoJGOgvsODC",
              "object": "customer"
            },
            "referrer": {
              "id": "cust_7iUa6ICKyU6gH40dBU25kQU1",
              "object": "customer"
            },
            "customer_id": "cust_nk0N1uNQ1YnupAoJGOgvsODC",
            "referrer_id": "cust_7iUa6ICKyU6gH40dBU25kQU1",
            "object": "order",
            "redemptions": {
              "r_0abe82a2154879ee5c": {
                "date": "2022-03-10T09:13:40.693Z",
                "related_object_type": "voucher",
                "related_object_id": "v_7HxHkf4VAkMuc8u4lZs78lyRwhRze5UE",
                "related_object_parent_id": "camp_BcHeMm4QaKjqCWMQFecMp1U0"
              }
            }
          }
        },
        "title": "Unstacked Redemption",
        "description": "Redemption object representing a single redemption.",
        "x-tags": [
          "ORDERS API"
        ],
        "properties": {
          "redemption_ID": {
            "type": "object",
            "description": "The property name is the unique redemption ID; i.e. `r_0ba186c4824e4881e1`. This object contains information about the redemption of an incentive.",
            "properties": {
              "date": {
                "type": "string",
                "description": "Timestamp representing the date and time when the redemption was created in ISO 8601 format.",
                "example": "2022-09-02T17:06:56.649Z"
              },
              "related_object_type": {
                "type": "string",
                "description": "The source of the incentive.",
                "enum": [
                  "voucher",
                  "promotion_tier"
                ]
              },
              "related_object_id": {
                "type": "string",
                "description": "Unique ID of the related object that defines the incentive."
              },
              "related_object_parent_id": {
                "type": "string",
                "description": "Represent's the campaign ID of the voucher if the redemption was based on a voucher that was part of bulk codes generated within a campaign."
              }
            }
          }
        }
      },
      "10_obj_order_object_stacked_redemptions": {
        "type": "object",
        "x-examples": {
          "example-1": {
            "id": "ord_mtAx6xnppgrXAegfKjGnZg59",
            "source_id": null,
            "created_at": "2022-03-10T09:13:40.590Z",
            "updated_at": "2022-03-10T09:13:41.341Z",
            "status": "PAID",
            "amount": 77789,
            "discount_amount": 0,
            "total_discount_amount": 0,
            "total_amount": 77789,
            "items": [
              {
                "object": "order_item",
                "product_id": "prod_0a7e62db1fca8322a2",
                "quantity": 1,
                "amount": 70000,
                "price": 70000,
                "subtotal_amount": 70000,
                "product": {
                  "id": "prod_0a7e62db1fca8322a2",
                  "source_id": "prod_anJ03RZZq74z4v",
                  "name": "Apple iPhone 8",
                  "price": 20000
                }
              },
              {
                "object": "order_item",
                "product_id": "prod_0a41e31b3081c2834d",
                "sku_id": "sku_0a41e31c7b41c28358",
                "quantity": 1,
                "amount": 7789,
                "price": 7789,
                "subtotal_amount": 7789,
                "product": {
                  "id": "prod_0a41e31b3081c2834d",
                  "source_id": "r4",
                  "name": "Books",
                  "price": 1599
                },
                "sku": {
                  "id": "sku_0a41e31c7b41c28358",
                  "source_id": "emailme@myemail.please",
                  "sku": "Comics",
                  "price": 7789
                }
              }
            ],
            "metadata": {},
            "customer": {
              "id": "cust_nk0N1uNQ1YnupAoJGOgvsODC",
              "object": "customer"
            },
            "referrer": {
              "id": "cust_7iUa6ICKyU6gH40dBU25kQU1",
              "object": "customer"
            },
            "customer_id": "cust_nk0N1uNQ1YnupAoJGOgvsODC",
            "referrer_id": "cust_7iUa6ICKyU6gH40dBU25kQU1",
            "object": "order",
            "redemptions": {
              "r_0abe82a2154879ee5c": {
                "date": "2022-03-10T09:13:40.693Z",
                "related_object_type": "voucher",
                "related_object_id": "v_7HxHkf4VAkMuc8u4lZs78lyRwhRze5UE",
                "related_object_parent_id": "camp_BcHeMm4QaKjqCWMQFecMp1U0"
              }
            }
          }
        },
        "title": "Stacked Redemption",
        "description": "Redemption object representing a stacked redemption.",
        "x-tags": [
          "ORDERS API"
        ],
        "properties": {
          "redemption_ID": {
            "type": "object",
            "description": "The property name is the unique parent redemption ID; i.e. `r_0ba186c4824e4881e1`. This object contains information about the redemption of multiple incentives.",
            "properties": {
              "date": {
                "type": "string",
                "description": "Timestamp representing the date and time when the redemption was created in ISO 8601 format.",
                "example": "2022-09-02T17:06:56.649Z"
              },
              "related_object_type": {
                "type": "string",
                "description": "The source of the incentive.",
                "default": "redemption"
              },
              "related_object_id": {
                "type": "string",
                "description": "Unique ID of the parent redemption.",
                "example": "r_0ba186c4824e4881e1"
              },
              "stacked": {
                "type": "array",
                "description": "Contains a list of unique IDs of child redemptions, which belong to the stacked incentives.",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "10_res_list_orders": {
        "type": "object",
        "x-examples": {
          "example-1": {
            "id": "ord_mtAx6xnppgrXAegfKjGnZg59",
            "source_id": null,
            "created_at": "2022-03-10T09:13:40.590Z",
            "updated_at": "2022-03-10T09:13:41.341Z",
            "status": "PAID",
            "amount": 77789,
            "discount_amount": 0,
            "total_discount_amount": 0,
            "total_amount": 77789,
            "items": [
              {
                "object": "order_item",
                "product_id": "prod_0a7e62db1fca8322a2",
                "quantity": 1,
                "amount": 70000,
                "price": 70000,
                "subtotal_amount": 70000,
                "product": {
                  "id": "prod_0a7e62db1fca8322a2",
                  "source_id": "prod_anJ03RZZq74z4v",
                  "name": "Apple iPhone 8",
                  "price": 20000
                }
              },
              {
                "object": "order_item",
                "product_id": "prod_0a41e31b3081c2834d",
                "sku_id": "sku_0a41e31c7b41c28358",
                "quantity": 1,
                "amount": 7789,
                "price": 7789,
                "subtotal_amount": 7789,
                "product": {
                  "id": "prod_0a41e31b3081c2834d",
                  "source_id": "r4",
                  "name": "Books",
                  "price": 1599
                },
                "sku": {
                  "id": "sku_0a41e31c7b41c28358",
                  "source_id": "emailme@myemail.please",
                  "sku": "Comics",
                  "price": 7789
                }
              }
            ],
            "metadata": {},
            "customer": {
              "id": "cust_nk0N1uNQ1YnupAoJGOgvsODC",
              "object": "customer"
            },
            "referrer": {
              "id": "cust_7iUa6ICKyU6gH40dBU25kQU1",
              "object": "customer"
            },
            "customer_id": "cust_nk0N1uNQ1YnupAoJGOgvsODC",
            "referrer_id": "cust_7iUa6ICKyU6gH40dBU25kQU1",
            "object": "order",
            "redemptions": {
              "r_0abe82a2154879ee5c": {
                "date": "2022-03-10T09:13:40.693Z",
                "related_object_type": "voucher",
                "related_object_id": "v_7HxHkf4VAkMuc8u4lZs78lyRwhRze5UE",
                "related_object_parent_id": "camp_BcHeMm4QaKjqCWMQFecMp1U0"
              }
            }
          }
        },
        "title": "List Orders Response Body",
        "description": "Response body schema representing **GET** `/orders`.",
        "x-tags": [
          "ORDERS API"
        ],
        "properties": {
          "object": {
            "type": "string",
            "default": "list",
            "description": "The type of object represented by JSON. This object stores information about orders in a dictionary."
          },
          "data_ref": {
            "type": "string",
            "default": "orders",
            "description": "Identifies the name of the attribute that contains the array of order objects."
          },
          "orders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/10_obj_order_object"
            }
          },
          "total": {
            "type": "integer",
            "description": "Total number of orders."
          }
        }
      },
      "10_req_orders_post": {
        "type": "object",
        "title": "Create Order Request Body",
        "description": "Request body schema for POST `/orders`.",
        "properties": {
          "source_id": {
            "type": "string",
            "description": "The merchant’s order ID if it is different from the Voucherify order ID. It is really useful in case of an integration between multiple systems. It can be an order ID from a CRM system, database or 3rd-party service."
          },
          "status": {
            "type": "string",
            "description": "The order status.",
            "enum": [
              "CREATED",
              "PAID",
              "CANCELED",
              "FULLFILLED"
            ]
          },
          "amount": {
            "type": "string",
            "description": "A positive integer in the smallest currency unit (that is, 100 cents for $1.00) representing the total amount of the order; this is the sum of the order items' amounts."
          },
          "metadata": {
            "type": "string",
            "description": "A set of custom key/value pairs that you can attach to an order. It can be useful for storing additional information about the order in a structured format."
          },
          "customer": {
            "$ref": "#/components/schemas/10_req_orders_customer_object"
          },
          "referrer": {
            "$ref": "#/components/schemas/10_req_orders_referrer_object"
          },
          "items": {
            "$ref": "#/components/schemas/10_req_orders_items_array"
          }
        }
      },
      "10_req_update_order": {
        "type": "object",
        "title": "Update Order Request Body",
        "description": "Request body schema for **PUT** `/orders/{orderId}`.",
        "properties": {
          "status": {
            "type": "string",
            "description": "The order status.",
            "enum": [
              "CREATED",
              "PAID",
              "CANCELED",
              "FULLFILLED"
            ]
          },
          "amount": {
            "type": "string",
            "description": "A positive integer in the smallest currency unit (that is, 100 cents for $1.00) representing the total amount of the order; this is the sum of the order items' amounts."
          },
          "metadata": {
            "type": "string",
            "description": "A set of custom key/value pairs that you can attach to an order. It can be useful for storing additional information about the order in a structured format."
          },
          "customer": {
            "$ref": "#/components/schemas/10_req_orders_customer_object"
          },
          "referrer": {
            "$ref": "#/components/schemas/10_req_orders_referrer_object"
          },
          "items": {
            "$ref": "#/components/schemas/10_req_orders_items_array"
          }
        }
      },
      "10_req_orders_import": {
        "type": "array",
        "title": "Import Orders Request Body",
        "description": "Request body schema for POST `/orders/import`.",
        "items": {
          "type": "object",
          "properties": {
            "source_id": {
              "type": "string",
              "description": "The merchant’s order ID if it is different from the Voucherify order ID. It is really useful in case of an integration between multiple systems. It can be an order ID from a CRM system, database or 3rd-party service."
            },
            "status": {
              "type": "string",
              "description": "The order status. One of `CREATED`, `PAID`, `CANCELED`, `FULFILLED`."
            },
            "amount": {
              "type": "string",
              "description": "A positive integer in the smallest currency unit (that is, 100 cents for $1.00) representing the total amount of the order; this is the sum of the order items' amounts."
            },
            "metadata": {
              "type": "string",
              "description": "A set of custom key/value pairs that you can attach to an order. It can be useful for storing additional information about the order in a structured format."
            },
            "customer": {
              "$ref": "#/components/schemas/10_req_orders_customer_object"
            },
            "referrer": {
              "$ref": "#/components/schemas/10_req_orders_referrer_object"
            },
            "items": {
              "$ref": "#/components/schemas/10_req_orders_items_array"
            }
          }
        }
      },
      "10_req_orders_customer_object": {
        "type": "object",
        "x-examples": {
          "example-1": {
            "id": "cust_sehkNIi8Uq2qQuRqSr7xn4Zi",
            "source_id": "bob.smith@rspective.pl",
            "email": "bob.smith@rspective.pl",
            "phone": "+1 (294) 752-1846",
            "birthdate": "2022-04-29",
            "address": {
              "city": "New York",
              "state": "New York",
              "line_1": "100 Main St",
              "line_2": "Blg 2 Apt 3",
              "country": "United States",
              "postal_code": "12345"
            },
            "summary": {
              "redemptions": {
                "total_redeemed": 11,
                "total_failed": 7,
                "total_succeeded": 4,
                "total_rolled_back": 1,
                "total_rollback_failed": 0,
                "total_rollback_succeeded": 1,
                "gift": {
                  "redeemed_amount": 0,
                  "amount_to_go": 0
                },
                "loyalty_card": {
                  "redeemed_points": 0,
                  "points_to_go": 387475
                }
              },
              "orders": {
                "total_amount": 694200,
                "total_count": 22,
                "average_amount": 31555,
                "last_order_amount": 24900,
                "last_order_date": "2022-06-09T12:54:42.314Z"
              }
            },
            "loyalty": {
              "points": 387475,
              "referred_customers": 0,
              "campaigns": {
                "Tiers": {
                  "points": 154,
                  "referred_customers": 0
                },
                "Reward": {
                  "points": 15,
                  "referred_customers": 0
                },
                "Tiers 2": {
                  "points": 10,
                  "referred_customers": 0
                },
                "Loyalty Program 1": {
                  "points": 0,
                  "referred_customers": 0
                },
                "Proportional Earning Rules": {
                  "points": 86446,
                  "referred_customers": 0
                },
                "v20220131-NewEarningRules-ValidonDaysANDTimeFrame": {
                  "points": 300850,
                  "referred_customers": 0
                }
              }
            },
            "referrals": {
              "total": 0,
              "campaigns": []
            },
            "metadata": {
              "acquisition_channel": "Facebook"
            },
            "system_metadata": {
              "consents": {
                "unsubscribed": {
                  "date": "2022-05-10T08:50:10.338Z",
                  "value": false
                },
                "cnst_6jQ5XcUOLnj5L7ImQAdBsJ1I": {
                  "date": "2022-05-10T08:50:10.338Z",
                  "value": false
                },
                "cnst_VCmucIvAsmDYw2PPAok6bcYy": {
                  "date": "2022-05-10T08:50:10.338Z",
                  "value": false
                }
              }
            },
            "created_at": "2021-12-29T06:35:32.476Z",
            "updated_at": "2022-06-14T09:56:22.212Z",
            "assets": {
              "cockpit_url": "https://dev.cockpits.voucherify.io/customers?token=U2FsdGVkX1%2BnpQd60txn1YAtQ%2BitfR2JOHbrwciLULwvBwLFSHpNoH7RhgGt6"
            },
            "object": "customer"
          }
        },
        "title": "Customer object",
        "description": "This is an object containing information about the customer.",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique ID of an existing customer that will be linked to the order; this is an ID that has been assigned to the customer by Voucherify, i.e. `cust_LMY4ZylSdUYB1J4tzqNcl5VV`."
          },
          "source_id": {
            "type": "string",
            "description": "The merchant’s customer ID if it is different from the Voucherify customer ID. It is really useful in case of an integration between multiple systems. It can be a customer ID from a CRM system, database or 3rd-party service."
          },
          "name": {
            "type": "string",
            "description": "Customer's first and last name."
          },
          "description": {
            "type": "string",
            "description": "An arbitrary string that you can attach to a customer object."
          },
          "email": {
            "type": "string",
            "description": "Customer's email address."
          },
          "phone": {
            "type": "string",
            "description": "Customer's phone number."
          },
          "address": {
            "type": "object",
            "description": "Customer's address.",
            "properties": {
              "city": {
                "type": "string",
                "description": "City"
              },
              "state": {
                "type": "string",
                "description": "State"
              },
              "line_1": {
                "type": "string",
                "description": "First line of address."
              },
              "line_2": {
                "type": "string",
                "description": "Second line of address."
              },
              "country": {
                "type": "string",
                "description": "Country."
              },
              "postal_code": {
                "type": "string",
                "description": "Postal code."
              }
            }
          },
          "birthdate": {
            "type": "string",
            "description": "Customer's birthdate; format `YYYY-MM-DD`.",
            "format": "date"
          },
          "birthday": {
            "type": "string",
            "description": "Customer's birthdate; format `YYYY-MM-DD`.",
            "format": "date"
          },
          "metadata": {
            "type": "object",
            "description": "A set of custom key/value pairs that you can attach to a customer."
          }
        }
      },
      "10_req_orders_referrer_object": {
        "type": "object",
        "x-examples": {
          "example-1": {
            "id": "cust_sehkNIi8Uq2qQuRqSr7xn4Zi",
            "source_id": "bob.smith@rspective.pl",
            "email": "bob.smith@rspective.pl",
            "phone": "+1 (294) 752-1846",
            "birthdate": "2022-04-29",
            "address": {
              "city": "New York",
              "state": "New York",
              "line_1": "100 Main St",
              "line_2": "Blg 2 Apt 3",
              "country": "United States",
              "postal_code": "12345"
            },
            "summary": {
              "redemptions": {
                "total_redeemed": 11,
                "total_failed": 7,
                "total_succeeded": 4,
                "total_rolled_back": 1,
                "total_rollback_failed": 0,
                "total_rollback_succeeded": 1,
                "gift": {
                  "redeemed_amount": 0,
                  "amount_to_go": 0
                },
                "loyalty_card": {
                  "redeemed_points": 0,
                  "points_to_go": 387475
                }
              },
              "orders": {
                "total_amount": 694200,
                "total_count": 22,
                "average_amount": 31555,
                "last_order_amount": 24900,
                "last_order_date": "2022-06-09T12:54:42.314Z"
              }
            },
            "loyalty": {
              "points": 387475,
              "referred_customers": 0,
              "campaigns": {
                "Tiers": {
                  "points": 154,
                  "referred_customers": 0
                },
                "Reward": {
                  "points": 15,
                  "referred_customers": 0
                },
                "Tiers 2": {
                  "points": 10,
                  "referred_customers": 0
                },
                "Loyalty Program 1": {
                  "points": 0,
                  "referred_customers": 0
                },
                "Proportional Earning Rules": {
                  "points": 86446,
                  "referred_customers": 0
                },
                "v20220131-NewEarningRules-ValidonDaysANDTimeFrame": {
                  "points": 300850,
                  "referred_customers": 0
                }
              }
            },
            "referrals": {
              "total": 0,
              "campaigns": []
            },
            "metadata": {
              "acquisition_channel": "Facebook"
            },
            "system_metadata": {
              "consents": {
                "unsubscribed": {
                  "date": "2022-05-10T08:50:10.338Z",
                  "value": false
                },
                "cnst_6jQ5XcUOLnj5L7ImQAdBsJ1I": {
                  "date": "2022-05-10T08:50:10.338Z",
                  "value": false
                },
                "cnst_VCmucIvAsmDYw2PPAok6bcYy": {
                  "date": "2022-05-10T08:50:10.338Z",
                  "value": false
                }
              }
            },
            "created_at": "2021-12-29T06:35:32.476Z",
            "updated_at": "2022-06-14T09:56:22.212Z",
            "assets": {
              "cockpit_url": "https://dev.cockpits.voucherify.io/customers?token=U2FsdGVkX1%2BnpQd60txn1YAtQ%2BitfR2JOHbrwciLULwvBwLFSHpNoH7RhgGt6"
            },
            "object": "customer"
          }
        },
        "title": "Referrer object",
        "description": "This is an ojbect containing information about the referrer.",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique ID of an existing customer that will be linked to the order as the referrer; this is an ID that has been assigned to the customer by Voucherify, i.e. `cust_LMY4ZylSdUYB1J4tzqNcl5VV`."
          },
          "source_id": {
            "type": "string",
            "description": "The merchant’s customer ID if it is different from the Voucherify customer ID. It is really useful in case of an integration between multiple systems. It can be a customer ID from a CRM system, database or 3rd-party service."
          },
          "name": {
            "type": "string",
            "description": "Referrer's first and last name."
          },
          "description": {
            "type": "string",
            "description": "An arbitrary string that you can attach to a referrer object."
          },
          "email": {
            "type": "string",
            "description": "Referrer's email address."
          },
          "phone": {
            "type": "string",
            "description": "Referrer's phone number."
          },
          "address": {
            "type": "object",
            "description": "Referrer's address.",
            "properties": {
              "city": {
                "type": "string",
                "description": "City"
              },
              "state": {
                "type": "string",
                "description": "State"
              },
              "line_1": {
                "type": "string",
                "description": "First line of address."
              },
              "line_2": {
                "type": "string",
                "description": "Second line of address."
              },
              "country": {
                "type": "string",
                "description": "Country."
              },
              "postal_code": {
                "type": "string",
                "description": "Postal code."
              }
            }
          },
          "birthdate": {
            "type": "string",
            "description": "Referrer's birthdate; format `YYYY-MM-DD`.",
            "format": "date"
          },
          "birthday": {
            "type": "string",
            "description": "Referrer's birthdate; format `YYYY-MM-DD`.",
            "format": "date"
          },
          "metadata": {
            "type": "object",
            "description": "A set of custom key/value pairs that you can attach to a referrer."
          }
        }
      },
      "10_req_orders_items_array": {
        "type": "array",
        "title": "Items Array",
        "description": "Array of items applied to the order.",
        "items": {
          "$ref": "#/components/schemas/10_req_orders_order_item"
        }
      },
      "10_req_orders_order_item": {
        "type": "object",
        "title": "Order Item",
        "description": "This object represents an order line item.",
        "properties": {
          "source_id": {
            "type": "string",
            "description": "The merchant’s product/SKU ID (if it is different from the Voucherify product/SKU ID). It is really useful in case of integration between multiple systems. It can be an ID from an eCommerce site, a database or a 3rd party service."
          },
          "related_object": {
            "type": "string",
            "description": "Used along with the `source_id` property, can be set to either `sku` or `product`."
          },
          "product_id": {
            "type": "string",
            "description": "A unique product ID assigned by Voucherify.",
            "example": "prod_0a7e62db1fca8322a2"
          },
          "sku_id": {
            "type": "string",
            "description": "A unique SKU ID assigned by Voucherify.",
            "example": "sku_0a41e31c7b41c28358"
          },
          "quantity": {
            "type": "string",
            "description": "The quantity of the particular item in the cart."
          },
          "price": {
            "type": "string",
            "description": "The unit price of the item."
          },
          "amount": {
            "type": "string",
            "description": "The total amount of the order item (`price` * `quantity`)."
          },
          "product": {
            "$ref": "#/components/schemas/10_req_orders_order_item_product"
          },
          "sku": {
            "$ref": "#/components/schemas/10_req_orders_order_item_sku"
          }
        }
      },
      "10_req_orders_order_item_product": {
        "type": "object",
        "title": "Product",
        "description": "An object containing details of the related product.",
        "properties": {
          "source_id": {
            "type": "string",
            "description": "The merchant’s product ID (if it is different than Voucherify's product ID). It is really useful in case of integration between multiple systems. It can be an ID from an eCommerce site, a database or a 3rd party service."
          },
          "name": {
            "type": "string",
            "description": "Product name."
          },
          "price": {
            "type": "string",
            "description": "Product price. A positive integer in the smallest currency unit (that is, 100 cents for $1.00)."
          },
          "metadata": {
            "type": "string",
            "description": "A set of custom key/value pairs that you can attach to a product. It can be useful for storing additional information about the product in a structured format."
          },
          "override": {
            "type": "string",
            "description": "The override set to true is used to store the product information in the system. If product does not exist, it will be created with the use of `source_id`; if it does exist, the provided values for the `name`, `price`, and `metadata` will replace those already stored in the system."
          }
        }
      },
      "10_req_orders_order_item_sku": {
        "type": "object",
        "title": "SKU",
        "description": "An object containing details of the related SKU.",
        "properties": {
          "source_id": {
            "type": "string",
            "description": "The merchant’s SKU ID (if it is different than Voucherify's SKU ID). It is really useful in case of integration between multiple systems. It can be an ID from an eCommerce site, a database or a 3rd party service."
          },
          "sku": {
            "type": "string",
            "description": "The SKU name.",
            "example": "sku_0a41e31c7b41c28358"
          },
          "price": {
            "type": "string",
            "description": "SKU price. A positive integer in the smallest currency unit (that is, 100 cents for $1.00)."
          },
          "metadata": {
            "type": "string",
            "description": "A set of custom key/value pairs that you can attach to an SKU. It can be useful for storing additional information about the SKU in a structured format."
          },
          "override": {
            "type": "string",
            "description": "The override is used to store the SKU in the system. If the SKU does not exist, it will be created with the use of `source_id`. Additionally, if the SKU does not exist, you are required to set the parent `product_id` that it belongs to. Set the parent `product_id` one level above, i.e. at the item level. If the parent product does not exist in Voucherify, i.e. does not have a unique `product_id`, then define the product object one level above, i.e. at the item level and make sure to also include the override as `true` for the product."
          }
        }
      },
      "10_obj_order_item_object": {
        "title": "Order Item Object",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "description": "This is an object representing an order item.  \n\nOrder Items are always specified within [the order object](OpenAPI.json/components/schemas/10_obj_order_object). They can be related either to [products](OpenAPI.json/components/schemas/11_obj_product_object) or [SKUs](OpenAPI.json/components/schemas/11_obj_sku_object).\n\nProduct/SKU details sent within an order item will be used on top of Product/SKU already stored in the system during the [Redeem Voucher](OpenAPI.json/paths/~1vouchers~1{code}~1redemption/post), [Validate Voucher](OpenAPI.json/paths/~1vouchers~1{code}~1validate), [Validate Promotions](OpenAPI.json/paths/~1promotions~1validation) and [Redeem Promotion](ref:redeem-promotion) requests.",
        "x-tags": [
          "ORDERS API"
        ]
      },
      "11_obj_product_object": {
        "type": "object",
        "x-examples": {
          "example-1": {
            "object": "list",
            "data_ref": "data",
            "data": [
              {
                "id": "prod_0b1782c28282868cbd",
                "source_id": "productSourceID12",
                "name": "product_12",
                "price": 2100,
                "attributes": [
                  "color",
                  "size",
                  "ranking"
                ],
                "metadata": {
                  "vendor": "China",
                  "source": "bigcommerce",
                  "bigcommerce_product_categories": [
                    23,
                    22
                  ]
                },
                "image_url": "",
                "created_at": "2022-05-18T12:19:02.795Z",
                "updated_at": null,
                "object": "product"
              }
            ],
            "total": 67
          }
        },
        "description": "This is an object representing a product.  \n\nThis entity should be used to map product items from your inventory management system. The aim of products is to build [validation rules] (doc:validation-rules) which reflect product-specific campaigns.",
        "title": "Product Object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique product ID.",
            "example": "prod_0b1da8105693710357"
          },
          "source_id": {
            "type": "string",
            "example": "productSourceID16",
            "description": "Unique product source ID."
          },
          "name": {
            "type": "string",
            "description": "Unique user-defined product name.",
            "example": "T-shirt"
          },
          "price": {
            "type": "integer",
            "description": "Product unit price. Value is multiplied by 100 to precisely represent 2 decimal places. For example, $100 is written as 10000."
          },
          "attributes": {
            "type": "array",
            "description": "A list of product attributes whose values you can customize for given SKUs: `[\"color\",\"size\",\"ranking\"]`. Each child SKU can have a unique value for a given attribute.",
            "items": {
              "type": "string"
            }
          },
          "metadata": {
            "type": "object",
            "description": "The metadata object stores all custom attributes assigned to the product. A set of key/value pairs that you can attach to a product object. It can be useful for storing additional information about the product in a structured format."
          },
          "image_url": {
            "type": "string",
            "description": "The HTTPS URL pointing to the .png or .jpg file that will be used to render the product image.",
            "example": "https://images.com/original.jpg"
          },
          "created_at": {
            "type": "string",
            "description": "Timestamp representing the date and time when the product was created in ISO 8601 format.",
            "example": "2022-05-23T06:52:55.008Z"
          },
          "updated_at": {
            "type": "string",
            "description": "Timestamp representing the date and time when the product was updated in ISO 8601 format.",
            "example": "2022-05-23T09:24:07.405Z"
          },
          "object": {
            "type": "string",
            "description": "The type of object represented by JSON. This object stores information about the product.",
            "default": "product"
          }
        }
      },
      "11_obj_product_object_truncated": {
        "type": "object",
        "x-examples": {
          "example-1": {
            "object": "list",
            "data_ref": "data",
            "data": [
              {
                "id": "prod_0b1782c28282868cbd",
                "source_id": "productSourceID12",
                "name": "product_12",
                "price": 2100,
                "attributes": [
                  "color",
                  "size",
                  "ranking"
                ],
                "metadata": {
                  "vendor": "China",
                  "source": "bigcommerce",
                  "bigcommerce_product_categories": [
                    23,
                    22
                  ]
                },
                "image_url": "",
                "created_at": "2022-05-18T12:19:02.795Z",
                "updated_at": null,
                "object": "product"
              }
            ],
            "total": 67
          }
        },
        "description": "This is an object representing a product.  \n\nThis entity should be used to map product items from your inventory management system. The aim of products is to build [validation rules] (doc:validation-rules) which reflect product-specific campaigns.",
        "title": "Product Object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique product ID.",
            "example": "prod_0b1da8105693710357"
          },
          "source_id": {
            "type": "string",
            "example": "productSourceID16",
            "description": "Unique product source ID."
          },
          "name": {
            "type": "string",
            "description": "Unique user-defined product name.",
            "example": "T-shirt"
          },
          "price": {
            "type": "integer",
            "description": "Product unit price. Value is multiplied by 100 to precisely represent 2 decimal places. For example, $100 is written as 10000."
          },
          "attributes": {
            "type": "array",
            "description": "A list of product attributes whose values you can customize for given SKUs: `[\"color\",\"size\",\"ranking\"]`. Each child SKU can have a unique value for a given attribute.",
            "items": {
              "type": "string"
            }
          },
          "metadata": {
            "type": "object",
            "description": "The metadata object stores all custom attributes assigned to the product. A set of key/value pairs that you can attach to a product object. It can be useful for storing additional information about the product in a structured format."
          },
          "image_url": {
            "type": "string",
            "description": "The HTTPS URL pointing to the .png or .jpg file that will be used to render the product image.",
            "example": "https://images.com/original.jpg"
          },
          "created_at": {
            "type": "string",
            "description": "Timestamp representing the date and time when the product was created in ISO 8601 format.",
            "example": "2022-05-23T06:52:55.008Z"
          },
          "updated_at": {
            "type": "string",
            "description": "Timestamp representing the date and time when the product was updated in ISO 8601 format.",
            "example": "2022-05-23T09:24:07.405Z"
          },
          "object": {
            "type": "string",
            "description": "The type of object represented by JSON. This object stores information about the product.",
            "default": "product"
          }
        }
      },
      "11_obj_sku_object": {
        "title": "SKU Object",
        "type": "object",
        "description": "This is an object representing a product SKU.  \n\nThe SKU (acronym from Stock Keeping Unit) is tightly related to [the product object](OpenAPI.json/components/schemas/11_obj_product_object). It reflects its different variants. One product can have many SKUs which are characterised and differentiated by varying values of the parent product `attributes`.",
        "x-tags": [
          "PRODUCTS API"
        ],
        "properties": {
          "id": {
            "type": "string",
            "example": "sku_0b1621b319d248b79f",
            "description": "A unique identifier that represents the SKU and is assigned by Voucherify."
          },
          "source_id": {
            "type": "string",
            "example": "sku_source_id_4",
            "description": "A unique SKU identifier from your inventory system."
          },
          "product_id": {
            "type": "string",
            "example": "prod_0b15f6b9f650c16990",
            "description": "The parent product's unique ID."
          },
          "sku": {
            "type": "string",
            "example": "Large Pink Shirt",
            "description": "Unique user-defined SKU name."
          },
          "price": {
            "type": "integer",
            "description": "SKU unit price. Value is multiplied by 100 to precisely represent 2 decimal places. For example, $100 is written as 10000."
          },
          "currency": {
            "type": "string",
            "description": "SKU price currency.",
            "example": "USD"
          },
          "attributes": {
            "type": "object",
            "description": "The attributes object stores values for all custom attributes inherited by the SKU from the parent product. A set of key/value pairs that are attached to a SKU object and are unique to each SKU within a product family."
          },
          "image_url": {
            "type": "string",
            "description": "The HTTPS URL pointing to the .png or .jpg file that will be used to render the SKU image."
          },
          "metadata": {
            "type": "object",
            "description": "The metadata object stores all custom attributes assigned to the SKU. A set of key/value pairs that you can attach to a SKU object. It can be useful for storing additional information about the SKU in a structured format."
          },
          "created_at": {
            "type": "string",
            "example": "2022-05-17T10:36:30.187Z",
            "description": "Timestamp representing the date and time when the SKU was created in ISO 8601 format."
          },
          "updated_at": {
            "type": "string",
            "example": "2022-05-17T10:55:09.137Z",
            "description": "Timestamp representing the date and time when the SKU was updated in ISO 8601 format."
          },
          "object": {
            "type": "string",
            "default": "sku",
            "description": "The type of object represented by JSON. This object stores information about the SKU."
          }
        }
      },
      "11_obj_sku_object_extended": {
        "title": "SKU Object",
        "type": "object",
        "description": "This is an object representing a product SKU.  \n\nThe SKU (acronym from Stock Keeping Unit) is tightly related to [the product object](OpenAPI.json/components/schemas/11_obj_product_object). It basically reflects its different variants. One product can have many SKUs which are characterised by the product `attributes`.",
        "x-tags": [
          "PRODUCTS API"
        ],
        "properties": {
          "id": {
            "type": "string",
            "example": "sku_0b1621b319d248b79f",
            "description": "A unique identifier that represents the SKU and is assigned by Voucherify."
          },
          "source_id": {
            "type": "string",
            "example": "sku_source_id_4",
            "description": "A unique SKU identifier from your inventory system."
          },
          "product_id": {
            "type": "string",
            "example": "prod_0b15f6b9f650c16990",
            "description": "The parent product's unique ID."
          },
          "sku": {
            "type": "string",
            "example": "Large Pink Shirt",
            "description": "Unique user-defined SKU name."
          },
          "price": {
            "type": "integer",
            "description": "SKU unit price. Value is multiplied by 100 to precisely represent 2 decimal places. For example, $100 is written as 10000."
          },
          "attributes": {
            "type": "object",
            "description": "The attributes object stores values for all custom attributes inherited by the SKU from the parent product. A set of key/value pairs that are attached to a SKU object and are unique to each SKU within a product family."
          },
          "image_url": {
            "type": "string",
            "description": "The HTTPS URL pointing to the .png or .jpg file that will be used to render the SKU image."
          },
          "metadata": {
            "type": "object",
            "description": "The metadata object stores all custom attributes assigned to the SKU. A set of key/value pairs that you can attach to a SKU object. It can be useful for storing additional information about the SKU in a structured format."
          },
          "created_at": {
            "type": "string",
            "example": "2022-05-17T10:36:30.187Z",
            "description": "Timestamp representing the date and time when the SKU was created in ISO 8601 format."
          },
          "updated_at": {
            "type": "string",
            "example": "2022-05-17T10:55:09.137Z",
            "description": "Timestamp representing the date and time when the SKU was updated in ISO 8601 format."
          },
          "object": {
            "type": "string",
            "default": "sku",
            "description": "The type of object represented by JSON. This object stores information about the SKU."
          },
          "product": {
            "type": "object",
            "description": "Stores information about the parent product.",
            "properties": {
              "id": {
                "type": "string",
                "example": "prod_0b15f6b9f650c16990",
                "description": "Unique product ID."
              },
              "source_id": {
                "type": "string",
                "example": "productSourceID11",
                "description": "A unique product identifier from your inventory system."
              },
              "name": {
                "type": "string",
                "example": "Shirts",
                "description": "Unique user-defined product name."
              },
              "price": {
                "type": "null"
              },
              "attributes": {
                "type": "array",
                "items": {
                  "type": "object"
                }
              },
              "metadata": {
                "type": "object"
              },
              "object": {
                "type": "string",
                "default": "product",
                "description": "The type of object represented by the object. This object stores information about the parent product."
              }
            }
          }
        }
      },
      "11_req_products_productId_skus_skuId_PUT": {
        "title": "Update SKU Request Body",
        "type": "object",
        "description": "Request body schema for PUT `/products/{productId}/skus/{skuId}`.",
        "x-tags": [
          "PRODUCTS API"
        ],
        "properties": {
          "id": {
            "type": "string",
            "example": "sku_0b1621b319d248b79f",
            "description": "A unique identifier that represents the SKU and is assigned by Voucherify."
          },
          "source_id": {
            "type": "string",
            "example": "sku_source_id_4",
            "description": "A unique SKU identifier from your inventory system."
          },
          "product_id": {
            "type": "string",
            "example": "prod_0b15f6b9f650c16990",
            "description": "The parent product's unique ID."
          },
          "sku": {
            "type": "string",
            "example": "Large Pink Shirt",
            "description": "Unique user-defined SKU name."
          },
          "price": {
            "type": "integer",
            "description": "SKU unit price. Value is multiplied by 100 to precisely represent 2 decimal places. For example, $100 is written as 10000."
          },
          "attributes": {
            "type": "object",
            "description": "The attributes object stores values for all custom attributes inherited by the SKU from the parent product. A set of key/value pairs that are attached to a SKU object and are unique to each SKU within a product family."
          },
          "image_url": {
            "type": "string",
            "description": "The HTTPS URL pointing to the .png or .jpg file that will be used to render the SKU image."
          },
          "metadata": {
            "type": "object",
            "description": "The metadata object stores all custom attributes assigned to the SKU. A set of key/value pairs that you can attach to a SKU object. It can be useful for storing additional information about the SKU in a structured format."
          },
          "created_at": {
            "type": "string",
            "example": "2022-05-17T10:36:30.187Z",
            "description": "Timestamp representing the date and time when the SKU was created in ISO 8601 format."
          },
          "updated_at": {
            "type": "string",
            "example": "2022-05-17T10:55:09.137Z",
            "description": "Timestamp representing the date and time when the SKU was updated in ISO 8601 format."
          },
          "object": {
            "type": "string",
            "default": "sku",
            "description": "The type of object represented by JSON. This object stores information about the SKU."
          },
          "product": {
            "type": "object",
            "description": "Stores information about the parent product.",
            "properties": {
              "id": {
                "type": "string",
                "example": "prod_0b15f6b9f650c16990",
                "description": "Unique product ID."
              },
              "source_id": {
                "type": "string",
                "example": "productSourceID11",
                "description": "A unique product identifier from your inventory system."
              },
              "name": {
                "type": "string",
                "example": "Shirts",
                "description": "Unique user-defined product name."
              },
              "price": {
                "type": "null"
              },
              "attributes": {
                "type": "array",
                "items": {
                  "type": "object"
                }
              },
              "metadata": {
                "type": "object"
              },
              "object": {
                "type": "string",
                "default": "product",
                "description": "The type of object represented by the object. This object stores information about the parent product."
              }
            }
          }
        }
      },
      "11_res_product-collections_productCollectionID_products": {
        "type": "object",
        "x-examples": {
          "example-1": {
            "object": "list",
            "data_ref": "data",
            "data": [
              {
                "id": "prod_0b1782c28282868cbd",
                "source_id": "productSourceID12",
                "name": "product_12",
                "price": 2100,
                "attributes": [
                  "color",
                  "size",
                  "ranking"
                ],
                "metadata": {
                  "vendor": "China",
                  "source": "bigcommerce",
                  "bigcommerce_product_categories": [
                    23,
                    22
                  ]
                },
                "image_url": "",
                "created_at": "2022-05-18T12:19:02.795Z",
                "updated_at": null,
                "object": "product"
              }
            ],
            "total": 67
          }
        },
        "description": "Response body schema for GET `/product-collections/{productCollectionID}/products`.",
        "title": "List Products in Collection Response Body",
        "properties": {
          "object": {
            "type": "string",
            "description": "The type of object represented by JSON. This object stores information about products and SKUs.",
            "default": "list"
          },
          "data_ref": {
            "type": "string",
            "description": "Identifies the name of the JSON property that contains the array of products and SKUs.",
            "default": "data"
          },
          "data": {
            "type": "array",
            "description": "A dictionary that contains an array of products and SKUs.",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/11_obj_product_object_truncated"
                },
                {
                  "$ref": "#/components/schemas/11_obj_sku_object_extended"
                }
              ]
            }
          },
          "total": {
            "type": "integer",
            "description": "Total number of products & SKUs in the product collection."
          }
        }
      },
      "11_res_products_productId_skus": {
        "type": "object",
        "x-examples": {
          "example-1": {
            "object": "list",
            "data_ref": "data",
            "data": [
              {
                "id": "prod_0b1782c28282868cbd",
                "source_id": "productSourceID12",
                "name": "product_12",
                "price": 2100,
                "attributes": [
                  "color",
                  "size",
                  "ranking"
                ],
                "metadata": {
                  "vendor": "China",
                  "source": "bigcommerce",
                  "bigcommerce_product_categories": [
                    23,
                    22
                  ]
                },
                "image_url": "",
                "created_at": "2022-05-18T12:19:02.795Z",
                "updated_at": null,
                "object": "product"
              }
            ],
            "total": 67
          }
        },
        "description": "Response body schema for GET `/products/{productID}/skus`.",
        "title": "List SKUs in Product Response Body",
        "properties": {
          "object": {
            "type": "string",
            "description": "The type of object represented by JSON. This object stores information about SKUs.",
            "default": "list"
          },
          "data_ref": {
            "type": "string",
            "description": "Identifies the name of the JSON property that contains the array of SKUs.",
            "default": "skus"
          },
          "skus": {
            "type": "array",
            "description": "A dictionary that contains an array of SKUs.",
            "items": {
              "$ref": "#/components/schemas/11_obj_sku_object"
            }
          },
          "total": {
            "type": "integer",
            "description": "Total number of SKUs in the product."
          }
        }
      },
      "12_obj_product_collection_object": {
        "title": "Product Collection Object",
        "description": "This is an object representing a product collection.  \n\nThe products can be grouped into collections by the creation of a products collection object. You can retrieve a product collection and a list of products in the collection. Product collections are identified by a unique ID.",
        "x-tags": [
          "PRODUCT COLLECTIONS API"
        ],
        "oneOf": [
          {
            "$ref": "#/components/schemas/12_obj_product-collections_static"
          },
          {
            "$ref": "#/components/schemas/12_obj_product-collections_auto_update"
          }
        ]
      },
      "12_obj_product-collections_static": {
        "type": "object",
        "x-examples": {
          "example-1": {
            "object": "list",
            "data_ref": "data",
            "data": [
              {
                "id": "pc_a11pr0dUc75",
                "name": "All Products",
                "type": "AUTO_UPDATE",
                "filter": {
                  "junction": "and",
                  "created_at": {
                    "conditions": {
                      "$has_value": [
                        true
                      ]
                    }
                  }
                },
                "created_at": "2021-12-03T06:33:47.105Z",
                "object": "products_collection"
              },
              {
                "id": "pc_uvW7mBOBOUppiowU9P3B6L0y",
                "name": "Dynamic - DVDs",
                "type": "AUTO_UPDATE",
                "filter": {
                  "junction": "and",
                  "name": {
                    "conditions": {
                      "$starts_with": [
                        "DVD"
                      ]
                    }
                  }
                },
                "created_at": "2021-12-09T07:05:32.205Z",
                "object": "products_collection"
              },
              {
                "id": "pc_IRgWoofgZh29NPwA4s5CWq7v",
                "name": "Dynamic - DVDs and socks",
                "type": "AUTO_UPDATE",
                "filter": {
                  "junction": "and",
                  "metadata.earliest_shipping_date": {
                    "conditions": {
                      "$before": [
                        "2021-12-31T00:00:00.000Z"
                      ]
                    }
                  }
                },
                "created_at": "2021-12-09T08:25:37.624Z",
                "object": "products_collection"
              },
              {
                "id": "pc_mU9wGzBdLlF7yKfrhxs3BIaW",
                "name": "Dynamic - DVDs and socks - API POST",
                "type": "AUTO_UPDATE",
                "filter": {
                  "junction": "and",
                  "metadata.earliest_shipping_date": {
                    "conditions": {
                      "$before": [
                        "2021-12-31T00:00:00.000Z"
                      ]
                    }
                  }
                },
                "created_at": "2021-12-09T08:31:18.114Z",
                "object": "products_collection"
              },
              {
                "id": "pc_M5XgaWPx3Sl4v26atA15zFjf",
                "name": "Static - fill up",
                "type": "STATIC",
                "products": [
                  {
                    "id": "prod_0a41bcf807c5fcaaf6",
                    "object": "product"
                  },
                  {
                    "id": "prod_0a41bd277905fcaafc",
                    "object": "product"
                  }
                ],
                "created_at": "2021-12-09T12:51:29.898Z",
                "updated_at": "2022-04-08T04:56:41.142Z",
                "object": "products_collection"
              },
              {
                "id": "pc_XT8F50wZAD9reSOgK61BvRS5",
                "name": "Static - fill up",
                "type": "STATIC",
                "products": [
                  {
                    "id": "prod_0a41bcf807c5fcaaf6",
                    "object": "product"
                  },
                  {
                    "id": "prod_0a41bd277905fcaafc",
                    "object": "product"
                  }
                ],
                "created_at": "2021-12-13T06:21:20.523Z",
                "updated_at": "2022-04-08T04:56:41.142Z",
                "object": "products_collection"
              },
              {
                "id": "pc_zdxFlJGYH06hlV4tJhPmgPvA",
                "name": "Static - fill up",
                "type": "STATIC",
                "products": [
                  {
                    "id": "prod_0a41bcf807c5fcaaf6",
                    "object": "product"
                  },
                  {
                    "id": "prod_0a41bd277905fcaafc",
                    "object": "product"
                  }
                ],
                "created_at": "2021-12-13T11:02:58.413Z",
                "updated_at": "2022-04-08T04:56:41.142Z",
                "object": "products_collection"
              },
              {
                "id": "pc_7fVU2RxybhR66YxC7r7BKKRh",
                "name": "Static - fill up",
                "type": "STATIC",
                "products": [
                  {
                    "id": "prod_0a41bcf807c5fcaaf6",
                    "object": "product"
                  },
                  {
                    "id": "prod_0a41bd277905fcaafc",
                    "object": "product"
                  }
                ],
                "created_at": "2021-12-13T11:04:09.530Z",
                "updated_at": "2022-04-08T04:56:41.142Z",
                "object": "products_collection"
              },
              {
                "id": "pc_uiKkTnyfpfwH0iZhmdhBsYde",
                "name": "Static - fill up",
                "type": "STATIC",
                "products": [],
                "created_at": "2021-12-13T11:05:46.175Z",
                "object": "products_collection"
              },
              {
                "id": "pc_bQ2p9TycbEhd3YzwFCR3JQYA",
                "name": "Shirts",
                "type": "STATIC",
                "products": [
                  {
                    "id": "prod_0a9f9aeddb019a42db",
                    "object": "product"
                  },
                  {
                    "id": "prod_0a9f9ab4ab019a42d5",
                    "object": "product"
                  }
                ],
                "created_at": "2022-02-28T11:42:12.484Z",
                "object": "products_collection"
              },
              {
                "id": "pc_DyQfToTkXPU5ug88smfvID6o",
                "name": "Not Big-Y",
                "type": "AUTO_UPDATE",
                "filter": {
                  "junction": "and",
                  "metadata.vendor": {
                    "conditions": {
                      "$is": [
                        "Big-Y"
                      ]
                    }
                  }
                },
                "created_at": "2022-03-14T10:44:22.299Z",
                "object": "products_collection"
              },
              {
                "id": "pc_0cRX5wAFt1R1R5Ir6WdTowui",
                "name": "C start",
                "type": "AUTO_UPDATE",
                "filter": {
                  "junction": "and",
                  "name": {
                    "conditions": {
                      "$starts_with": [
                        "C"
                      ]
                    }
                  }
                },
                "created_at": "2022-03-14T12:18:15.588Z",
                "object": "products_collection"
              },
              {
                "id": "pc_41V4DiQQO8YGqj0J2oZD57j4",
                "name": "Ends with baby",
                "type": "AUTO_UPDATE",
                "filter": {
                  "junction": "and",
                  "source_id": {
                    "conditions": {
                      "$ends_with": [
                        "baby"
                      ]
                    }
                  }
                },
                "created_at": "2022-03-14T12:50:19.885Z",
                "object": "products_collection"
              },
              {
                "id": "pc_ZgM25PcZAMp6qItKJRtR2mEi",
                "name": "Name starts with S",
                "type": "AUTO_UPDATE",
                "filter": {
                  "junction": "and",
                  "name": {
                    "conditions": {
                      "$starts_with": [
                        "S"
                      ]
                    }
                  }
                },
                "created_at": "2022-03-16T13:42:35.917Z",
                "object": "products_collection"
              },
              {
                "id": "pc_uHpM9ipEQH2yEpm3D8aohkBM",
                "name": "Price less than 20",
                "type": "AUTO_UPDATE",
                "filter": {
                  "junction": "and",
                  "price": {
                    "conditions": {
                      "$less_than": [
                        2000
                      ]
                    }
                  }
                },
                "created_at": "2022-03-16T13:46:01.102Z",
                "object": "products_collection"
              },
              {
                "id": "pc_BxofAP7pyM9FO7M6iaIzIouy",
                "name": "Color not brown",
                "type": "AUTO_UPDATE",
                "filter": {
                  "junction": "and",
                  "metadata.color": {
                    "conditions": {
                      "$is_not": [
                        "brown"
                      ]
                    }
                  }
                },
                "created_at": "2022-03-16T13:49:05.697Z",
                "object": "products_collection"
              },
              {
                "id": "pc_4ndRXAsTOzwSdHcQcxf489uU",
                "name": "Color is brown",
                "type": "AUTO_UPDATE",
                "filter": {
                  "junction": "and",
                  "metadata.color": {
                    "conditions": {
                      "$is": [
                        "brown"
                      ]
                    }
                  }
                },
                "created_at": "2022-03-16T14:27:49.612Z",
                "object": "products_collection"
              },
              {
                "id": "pc_FJdBpaQyvK6Gcdul4D2HRChI",
                "name": "Price less than 10",
                "type": "AUTO_UPDATE",
                "filter": {
                  "junction": "and",
                  "price": {
                    "conditions": {
                      "$less_than": [
                        1000
                      ]
                    }
                  }
                },
                "created_at": "2022-03-17T07:11:25.406Z",
                "object": "products_collection"
              }
            ],
            "total": 18
          }
        },
        "title": "Static Product Collection",
        "description": "Schema model for a STATIC product collection.",
        "properties": {
          "id": {
            "type": "string",
            "description": "Product collection ID.",
            "example": "pc_a11pr0dUc75"
          },
          "name": {
            "type": "string",
            "example": "All Products",
            "description": "Unique user-defined product collection name."
          },
          "type": {
            "type": "string",
            "enum": [
              "AUTO_UPDATE",
              "STATIC"
            ],
            "description": "Describes whether the product collection is dynamic (products come in and leave based on set criteria) or static (manually selected products)."
          },
          "products": {
            "type": "array",
            "description": "Defines a set of products for a `STATIC` product collection type.",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "example": "prod_0a41bcf807c5fcaaf6",
                  "description": "The product ID."
                },
                "object": {
                  "type": "string",
                  "default": "product",
                  "description": "Denotes the type of object represented by the ID."
                }
              }
            }
          },
          "created_at": {
            "type": "string",
            "example": "2021-12-09T12:51:29.898Z",
            "description": "Timestamp representing the date and time when the product collection was created in ISO 8601 format."
          },
          "updated_at": {
            "type": "string",
            "example": "2022-04-08T04:56:41.142Z",
            "description": "Timestamp representing the date and time when the product collection was updated in ISO 8601 format."
          },
          "object": {
            "type": "string",
            "default": "products_collection",
            "description": "The type of object represented by JSON. This object stores information about the static product collection."
          }
        }
      },
      "12_obj_product-collections_auto_update": {
        "type": "object",
        "x-examples": {
          "example-1": {
            "object": "list",
            "data_ref": "data",
            "data": [
              {
                "id": "pc_a11pr0dUc75",
                "name": "All Products",
                "type": "AUTO_UPDATE",
                "filter": {
                  "junction": "and",
                  "created_at": {
                    "conditions": {
                      "$has_value": [
                        true
                      ]
                    }
                  }
                },
                "created_at": "2021-12-03T06:33:47.105Z",
                "object": "products_collection"
              },
              {
                "id": "pc_uvW7mBOBOUppiowU9P3B6L0y",
                "name": "Dynamic - DVDs",
                "type": "AUTO_UPDATE",
                "filter": {
                  "junction": "and",
                  "name": {
                    "conditions": {
                      "$starts_with": [
                        "DVD"
                      ]
                    }
                  }
                },
                "created_at": "2021-12-09T07:05:32.205Z",
                "object": "products_collection"
              },
              {
                "id": "pc_IRgWoofgZh29NPwA4s5CWq7v",
                "name": "Dynamic - DVDs and socks",
                "type": "AUTO_UPDATE",
                "filter": {
                  "junction": "and",
                  "metadata.earliest_shipping_date": {
                    "conditions": {
                      "$before": [
                        "2021-12-31T00:00:00.000Z"
                      ]
                    }
                  }
                },
                "created_at": "2021-12-09T08:25:37.624Z",
                "object": "products_collection"
              },
              {
                "id": "pc_mU9wGzBdLlF7yKfrhxs3BIaW",
                "name": "Dynamic - DVDs and socks - API POST",
                "type": "AUTO_UPDATE",
                "filter": {
                  "junction": "and",
                  "metadata.earliest_shipping_date": {
                    "conditions": {
                      "$before": [
                        "2021-12-31T00:00:00.000Z"
                      ]
                    }
                  }
                },
                "created_at": "2021-12-09T08:31:18.114Z",
                "object": "products_collection"
              },
              {
                "id": "pc_M5XgaWPx3Sl4v26atA15zFjf",
                "name": "Static - fill up",
                "type": "STATIC",
                "products": [
                  {
                    "id": "prod_0a41bcf807c5fcaaf6",
                    "object": "product"
                  },
                  {
                    "id": "prod_0a41bd277905fcaafc",
                    "object": "product"
                  }
                ],
                "created_at": "2021-12-09T12:51:29.898Z",
                "updated_at": "2022-04-08T04:56:41.142Z",
                "object": "products_collection"
              },
              {
                "id": "pc_XT8F50wZAD9reSOgK61BvRS5",
                "name": "Static - fill up",
                "type": "STATIC",
                "products": [
                  {
                    "id": "prod_0a41bcf807c5fcaaf6",
                    "object": "product"
                  },
                  {
                    "id": "prod_0a41bd277905fcaafc",
                    "object": "product"
                  }
                ],
                "created_at": "2021-12-13T06:21:20.523Z",
                "updated_at": "2022-04-08T04:56:41.142Z",
                "object": "products_collection"
              },
              {
                "id": "pc_zdxFlJGYH06hlV4tJhPmgPvA",
                "name": "Static - fill up",
                "type": "STATIC",
                "products": [
                  {
                    "id": "prod_0a41bcf807c5fcaaf6",
                    "object": "product"
                  },
                  {
                    "id": "prod_0a41bd277905fcaafc",
                    "object": "product"
                  }
                ],
                "created_at": "2021-12-13T11:02:58.413Z",
                "updated_at": "2022-04-08T04:56:41.142Z",
                "object": "products_collection"
              },
              {
                "id": "pc_7fVU2RxybhR66YxC7r7BKKRh",
                "name": "Static - fill up",
                "type": "STATIC",
                "products": [
                  {
                    "id": "prod_0a41bcf807c5fcaaf6",
                    "object": "product"
                  },
                  {
                    "id": "prod_0a41bd277905fcaafc",
                    "object": "product"
                  }
                ],
                "created_at": "2021-12-13T11:04:09.530Z",
                "updated_at": "2022-04-08T04:56:41.142Z",
                "object": "products_collection"
              },
              {
                "id": "pc_uiKkTnyfpfwH0iZhmdhBsYde",
                "name": "Static - fill up",
                "type": "STATIC",
                "products": [],
                "created_at": "2021-12-13T11:05:46.175Z",
                "object": "products_collection"
              },
              {
                "id": "pc_bQ2p9TycbEhd3YzwFCR3JQYA",
                "name": "Shirts",
                "type": "STATIC",
                "products": [
                  {
                    "id": "prod_0a9f9aeddb019a42db",
                    "object": "product"
                  },
                  {
                    "id": "prod_0a9f9ab4ab019a42d5",
                    "object": "product"
                  }
                ],
                "created_at": "2022-02-28T11:42:12.484Z",
                "object": "products_collection"
              },
              {
                "id": "pc_DyQfToTkXPU5ug88smfvID6o",
                "name": "Not Big-Y",
                "type": "AUTO_UPDATE",
                "filter": {
                  "junction": "and",
                  "metadata.vendor": {
                    "conditions": {
                      "$is": [
                        "Big-Y"
                      ]
                    }
                  }
                },
                "created_at": "2022-03-14T10:44:22.299Z",
                "object": "products_collection"
              },
              {
                "id": "pc_0cRX5wAFt1R1R5Ir6WdTowui",
                "name": "C start",
                "type": "AUTO_UPDATE",
                "filter": {
                  "junction": "and",
                  "name": {
                    "conditions": {
                      "$starts_with": [
                        "C"
                      ]
                    }
                  }
                },
                "created_at": "2022-03-14T12:18:15.588Z",
                "object": "products_collection"
              },
              {
                "id": "pc_41V4DiQQO8YGqj0J2oZD57j4",
                "name": "Ends with baby",
                "type": "AUTO_UPDATE",
                "filter": {
                  "junction": "and",
                  "source_id": {
                    "conditions": {
                      "$ends_with": [
                        "baby"
                      ]
                    }
                  }
                },
                "created_at": "2022-03-14T12:50:19.885Z",
                "object": "products_collection"
              },
              {
                "id": "pc_ZgM25PcZAMp6qItKJRtR2mEi",
                "name": "Name starts with S",
                "type": "AUTO_UPDATE",
                "filter": {
                  "junction": "and",
                  "name": {
                    "conditions": {
                      "$starts_with": [
                        "S"
                      ]
                    }
                  }
                },
                "created_at": "2022-03-16T13:42:35.917Z",
                "object": "products_collection"
              },
              {
                "id": "pc_uHpM9ipEQH2yEpm3D8aohkBM",
                "name": "Price less than 20",
                "type": "AUTO_UPDATE",
                "filter": {
                  "junction": "and",
                  "price": {
                    "conditions": {
                      "$less_than": [
                        2000
                      ]
                    }
                  }
                },
                "created_at": "2022-03-16T13:46:01.102Z",
                "object": "products_collection"
              },
              {
                "id": "pc_BxofAP7pyM9FO7M6iaIzIouy",
                "name": "Color not brown",
                "type": "AUTO_UPDATE",
                "filter": {
                  "junction": "and",
                  "metadata.color": {
                    "conditions": {
                      "$is_not": [
                        "brown"
                      ]
                    }
                  }
                },
                "created_at": "2022-03-16T13:49:05.697Z",
                "object": "products_collection"
              },
              {
                "id": "pc_4ndRXAsTOzwSdHcQcxf489uU",
                "name": "Color is brown",
                "type": "AUTO_UPDATE",
                "filter": {
                  "junction": "and",
                  "metadata.color": {
                    "conditions": {
                      "$is": [
                        "brown"
                      ]
                    }
                  }
                },
                "created_at": "2022-03-16T14:27:49.612Z",
                "object": "products_collection"
              },
              {
                "id": "pc_FJdBpaQyvK6Gcdul4D2HRChI",
                "name": "Price less than 10",
                "type": "AUTO_UPDATE",
                "filter": {
                  "junction": "and",
                  "price": {
                    "conditions": {
                      "$less_than": [
                        1000
                      ]
                    }
                  }
                },
                "created_at": "2022-03-17T07:11:25.406Z",
                "object": "products_collection"
              }
            ],
            "total": 18
          }
        },
        "title": "Dynamic Product Collection",
        "description": "Schema model for an AUTO_UPDATE product collection.",
        "properties": {
          "id": {
            "type": "string",
            "description": "Product collection ID.",
            "example": "pc_a11pr0dUc75"
          },
          "name": {
            "type": "string",
            "example": "All Products",
            "description": "Unique user-defined product collection name."
          },
          "type": {
            "type": "string",
            "enum": [
              "AUTO_UPDATE",
              "STATIC"
            ],
            "description": "Describes whether the product collection is dynamic (products come in and leave based on set criteria) or static (manually selected products)."
          },
          "filter": {
            "type": "object",
            "description": "Defines a set of criteria and boundary conditions for an `AUTO_UPDATE` product collection type."
          },
          "created_at": {
            "type": "string",
            "example": "2021-12-09T12:51:29.898Z",
            "description": "Timestamp representing the date and time when the product collection was created in ISO 8601 format."
          },
          "updated_at": {
            "type": "string",
            "example": "2022-04-08T04:56:41.142Z",
            "description": "Timestamp representing the date and time when the product collection was updated in ISO 8601 format."
          },
          "object": {
            "type": "string",
            "default": "products_collection",
            "description": "The type of object represented by JSON. This object stores information about the dynamic product collection."
          }
        }
      },
      "12_res_product-collections": {
        "type": "object",
        "x-examples": {
          "example-1": {
            "object": "list",
            "data_ref": "data",
            "data": [
              {
                "id": "pc_a11pr0dUc75",
                "name": "All Products",
                "type": "AUTO_UPDATE",
                "filter": {
                  "junction": "and",
                  "created_at": {
                    "conditions": {
                      "$has_value": [
                        true
                      ]
                    }
                  }
                },
                "created_at": "2021-12-03T06:33:47.105Z",
                "object": "products_collection"
              },
              {
                "id": "pc_uvW7mBOBOUppiowU9P3B6L0y",
                "name": "Dynamic - DVDs",
                "type": "AUTO_UPDATE",
                "filter": {
                  "junction": "and",
                  "name": {
                    "conditions": {
                      "$starts_with": [
                        "DVD"
                      ]
                    }
                  }
                },
                "created_at": "2021-12-09T07:05:32.205Z",
                "object": "products_collection"
              },
              {
                "id": "pc_IRgWoofgZh29NPwA4s5CWq7v",
                "name": "Dynamic - DVDs and socks",
                "type": "AUTO_UPDATE",
                "filter": {
                  "junction": "and",
                  "metadata.earliest_shipping_date": {
                    "conditions": {
                      "$before": [
                        "2021-12-31T00:00:00.000Z"
                      ]
                    }
                  }
                },
                "created_at": "2021-12-09T08:25:37.624Z",
                "object": "products_collection"
              },
              {
                "id": "pc_mU9wGzBdLlF7yKfrhxs3BIaW",
                "name": "Dynamic - DVDs and socks - API POST",
                "type": "AUTO_UPDATE",
                "filter": {
                  "junction": "and",
                  "metadata.earliest_shipping_date": {
                    "conditions": {
                      "$before": [
                        "2021-12-31T00:00:00.000Z"
                      ]
                    }
                  }
                },
                "created_at": "2021-12-09T08:31:18.114Z",
                "object": "products_collection"
              },
              {
                "id": "pc_M5XgaWPx3Sl4v26atA15zFjf",
                "name": "Static - fill up",
                "type": "STATIC",
                "products": [
                  {
                    "id": "prod_0a41bcf807c5fcaaf6",
                    "object": "product"
                  },
                  {
                    "id": "prod_0a41bd277905fcaafc",
                    "object": "product"
                  }
                ],
                "created_at": "2021-12-09T12:51:29.898Z",
                "updated_at": "2022-04-08T04:56:41.142Z",
                "object": "products_collection"
              },
              {
                "id": "pc_XT8F50wZAD9reSOgK61BvRS5",
                "name": "Static - fill up",
                "type": "STATIC",
                "products": [
                  {
                    "id": "prod_0a41bcf807c5fcaaf6",
                    "object": "product"
                  },
                  {
                    "id": "prod_0a41bd277905fcaafc",
                    "object": "product"
                  }
                ],
                "created_at": "2021-12-13T06:21:20.523Z",
                "updated_at": "2022-04-08T04:56:41.142Z",
                "object": "products_collection"
              },
              {
                "id": "pc_zdxFlJGYH06hlV4tJhPmgPvA",
                "name": "Static - fill up",
                "type": "STATIC",
                "products": [
                  {
                    "id": "prod_0a41bcf807c5fcaaf6",
                    "object": "product"
                  },
                  {
                    "id": "prod_0a41bd277905fcaafc",
                    "object": "product"
                  }
                ],
                "created_at": "2021-12-13T11:02:58.413Z",
                "updated_at": "2022-04-08T04:56:41.142Z",
                "object": "products_collection"
              },
              {
                "id": "pc_7fVU2RxybhR66YxC7r7BKKRh",
                "name": "Static - fill up",
                "type": "STATIC",
                "products": [
                  {
                    "id": "prod_0a41bcf807c5fcaaf6",
                    "object": "product"
                  },
                  {
                    "id": "prod_0a41bd277905fcaafc",
                    "object": "product"
                  }
                ],
                "created_at": "2021-12-13T11:04:09.530Z",
                "updated_at": "2022-04-08T04:56:41.142Z",
                "object": "products_collection"
              },
              {
                "id": "pc_uiKkTnyfpfwH0iZhmdhBsYde",
                "name": "Static - fill up",
                "type": "STATIC",
                "products": [],
                "created_at": "2021-12-13T11:05:46.175Z",
                "object": "products_collection"
              },
              {
                "id": "pc_bQ2p9TycbEhd3YzwFCR3JQYA",
                "name": "Shirts",
                "type": "STATIC",
                "products": [
                  {
                    "id": "prod_0a9f9aeddb019a42db",
                    "object": "product"
                  },
                  {
                    "id": "prod_0a9f9ab4ab019a42d5",
                    "object": "product"
                  }
                ],
                "created_at": "2022-02-28T11:42:12.484Z",
                "object": "products_collection"
              },
              {
                "id": "pc_DyQfToTkXPU5ug88smfvID6o",
                "name": "Not Big-Y",
                "type": "AUTO_UPDATE",
                "filter": {
                  "junction": "and",
                  "metadata.vendor": {
                    "conditions": {
                      "$is": [
                        "Big-Y"
                      ]
                    }
                  }
                },
                "created_at": "2022-03-14T10:44:22.299Z",
                "object": "products_collection"
              },
              {
                "id": "pc_0cRX5wAFt1R1R5Ir6WdTowui",
                "name": "C start",
                "type": "AUTO_UPDATE",
                "filter": {
                  "junction": "and",
                  "name": {
                    "conditions": {
                      "$starts_with": [
                        "C"
                      ]
                    }
                  }
                },
                "created_at": "2022-03-14T12:18:15.588Z",
                "object": "products_collection"
              },
              {
                "id": "pc_41V4DiQQO8YGqj0J2oZD57j4",
                "name": "Ends with baby",
                "type": "AUTO_UPDATE",
                "filter": {
                  "junction": "and",
                  "source_id": {
                    "conditions": {
                      "$ends_with": [
                        "baby"
                      ]
                    }
                  }
                },
                "created_at": "2022-03-14T12:50:19.885Z",
                "object": "products_collection"
              },
              {
                "id": "pc_ZgM25PcZAMp6qItKJRtR2mEi",
                "name": "Name starts with S",
                "type": "AUTO_UPDATE",
                "filter": {
                  "junction": "and",
                  "name": {
                    "conditions": {
                      "$starts_with": [
                        "S"
                      ]
                    }
                  }
                },
                "created_at": "2022-03-16T13:42:35.917Z",
                "object": "products_collection"
              },
              {
                "id": "pc_uHpM9ipEQH2yEpm3D8aohkBM",
                "name": "Price less than 20",
                "type": "AUTO_UPDATE",
                "filter": {
                  "junction": "and",
                  "price": {
                    "conditions": {
                      "$less_than": [
                        2000
                      ]
                    }
                  }
                },
                "created_at": "2022-03-16T13:46:01.102Z",
                "object": "products_collection"
              },
              {
                "id": "pc_BxofAP7pyM9FO7M6iaIzIouy",
                "name": "Color not brown",
                "type": "AUTO_UPDATE",
                "filter": {
                  "junction": "and",
                  "metadata.color": {
                    "conditions": {
                      "$is_not": [
                        "brown"
                      ]
                    }
                  }
                },
                "created_at": "2022-03-16T13:49:05.697Z",
                "object": "products_collection"
              },
              {
                "id": "pc_4ndRXAsTOzwSdHcQcxf489uU",
                "name": "Color is brown",
                "type": "AUTO_UPDATE",
                "filter": {
                  "junction": "and",
                  "metadata.color": {
                    "conditions": {
                      "$is": [
                        "brown"
                      ]
                    }
                  }
                },
                "created_at": "2022-03-16T14:27:49.612Z",
                "object": "products_collection"
              },
              {
                "id": "pc_FJdBpaQyvK6Gcdul4D2HRChI",
                "name": "Price less than 10",
                "type": "AUTO_UPDATE",
                "filter": {
                  "junction": "and",
                  "price": {
                    "conditions": {
                      "$less_than": [
                        1000
                      ]
                    }
                  }
                },
                "created_at": "2022-03-17T07:11:25.406Z",
                "object": "products_collection"
              }
            ],
            "total": 18
          }
        },
        "title": "List Product Collections Response Body",
        "description": "Response body schema for GET `/product-collections`.",
        "properties": {
          "object": {
            "type": "string",
            "description": "The type of object represented by JSON. This object stores information about product collections.",
            "default": "list"
          },
          "data_ref": {
            "type": "string",
            "default": "data",
            "description": "Identifies the name of the JSON property that contains the array of product collections."
          },
          "data": {
            "description": "A dictionary that contains an array of product collection and their details.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/12_obj_product_collection_object"
            }
          },
          "total": {
            "type": "integer",
            "description": "Total number of product collections."
          }
        }
      },
      "13_obj_validation_rule_object": {
        "title": "Validation Rule Object",
        "type": "object",
        "description": "This is an object representing a validation rule.  \n\nThis entity stores the rules used to limit resources in Voucherify. The validation rule can be assigned to resources such as a:  \n- [voucher](OpenAPI.json/components/schemas/1_obj_voucher_object)\n- [campaign](OpenAPI.json/components/schemas/2_obj_campaign_object)\n- [earning_rule](OpenAPI.json/components/schemas/8_obj_earning_rule_object)\n- [reward_assignment]\n- [promotion_tier](OpenAPI.json/components/schemas/3_obj_promotion_tier_object)\n- [distribution]\n\nYou can configure the Validation Rule to include your own custom error messages which are going to be returned from the API upon a validation / redemption failure. You can read more [here](../docs/introduction/Errors.md#custom-error-messages-with-Validation-Rules).",
        "x-tags": [
          "VALIDATION RULES API"
        ],
        "properties": {
          "id": {
            "type": "string",
            "example": "val_eR1c41hu0vUU",
            "description": "Unique validation rule ID."
          },
          "name": {
            "type": "string",
            "description": "Custom, unique validation rule name.",
            "example": "Business Validation Rule"
          },
          "rules": {
            "type": "object",
            "description": "Contains all the rule definitions for the validation rule.",
            "properties": {
              "1": {
                "type": "object",
                "description": "Defines the rule.",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Voucherify specific rule name.  The list of available names is provided below.  \n| **Name** |\n|:---|\n| **Customer** |\n| customer.segment<br>customer.metadata* |\n| **Order** |\n| order.amount<br>order.items.count<br>order.items.price_any<br>order.items.price_each<br>order.items.metadata_any<br>order.items.metadata_each<br>order.metadata* |\n| **Campaign** |\n| campaign.orders.amount_discounted<br>campaign.orders.amount<br>campaign.redemptions.count<br>campaign.redemptions.customers_count<br>campaign.redemptions.customers_count.daily |\n| **Redemption** |\n| redemption.gift.amount<br>redemption.count.per_customer<br>redemption.count.per_customer.daily<br>redemption.api_key<br>redemption.count.per_api_key<br>redemption.user.login<br>redemption.count.per_user<br>redemption.metadata*<br>redemption.reward.pay_with_points.points_used |\n| **Product** |\n| product.id<br>product.price<br>product.quantity<br>product.discount_applicable<br>product.metadata*<br>product.metadata.aggregated_quantity<br>product.metadata.aggregated_amount<br>product.metadata.discount_applicable<br>product.metadata.match_all |\n| **SKU** |\n| sku.id<br>sku.price<br>sku.quantity<br>sku.discount_applicable |\n| **Publication** |\n| publication.redeemable_by_linked_customer |\n| **Custom Event** |\n| custom_event.metadata* |\n| **Order items** |\n| order.items.every<br>order.items.any<br>order.items.none<br>order.items.cheapest<br>order.items.most_expensive |\n| order.items.quantity<br>order.items.aggregated_quantity<br>order.items.price<br>order.items.aggregated_amount<br>order.items.metadata* |  \n\n\n*Requires the `property` field to be defined."
                  },
                  "property": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Custom name for a metadata property associated with the condition to be satisfied. **Required** if the property `name` is any of the following: \n| **Name** |\n|:---|\n| customer_metadata |\n| custom_event_metadata |\n| order_items_metadata |\n| order_metadata |\n| product_metadata |\n| redemption_metadata |"
                  },
                  "conditions": {
                    "type": "object",
                    "description": "A set of key value pairs representing the condition name and value. The list of available conditions is provided below:    \n| **Condition (key)** | **Definition** | **Does not support Types** |\n|:---|:---|:---|\n| $is |  |  |\n| $is_not |  |  |\n| $in |  |  |\n| $less_than |  | boolean |\n| $less_than_or_equal |  | boolean |\n| $more_than |  | boolean |\n| $more_than_or_equal |  | boolean |\n| $starts_with |  | boolean, number |\n| $ends_with |  | boolean, number |\n| $contains |  | boolean, number |\n| $timeframe |  | boolean, number |\n| $dow |  | boolean, string |\n| $count |  | boolean, string |\n| $count_more |  | boolean, string |\n| $count_less |  | boolean, string |",
                    "properties": {
                      "$one_of_voucherify_conditions": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "effect": {
                              "type": "string"
                            },
                            "object": {
                              "type": "string"
                            },
                            "source_id": {
                              "type": "null"
                            }
                          }
                        }
                      }
                    }
                  },
                  "rules": {
                    "type": "object"
                  },
                  "error": {
                    "type": "object",
                    "description": "Contains the error message returned from API when validation / redemption fails to meet requirements of defined rule.",
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "The error message returned from API when validation / redemption fails to meet requirements of defined rule."
                      }
                    }
                  }
                }
              },
              "logic": {
                "type": "string",
                "example": "(1 and 2) and (3)",
                "description": "Defines the logic between the rules."
              }
            }
          },
          "error": {
            "type": "object",
            "description": "Contains the error message returned from API when validation / redemption fails to meet requirements of defined rules.",
            "properties": {
              "message": {
                "type": "string",
                "description": "The error message returned from API when validation / redemption fails to meet requirements of defined rules."
              }
            }
          },
          "applicable_to": {
            "type": "object",
            "properties": {
              "excluded": {
                "type": "array",
                "description": "Defines which items are excluded in a discount.",
                "items": {
                  "type": "object",
                  "description": "Defines the excluded item."
                }
              },
              "included": {
                "type": "array",
                "description": "Defines which items are included in a discount.",
                "items": {
                  "type": "object",
                  "description": "Defines the included item."
                }
              },
              "included_all": {
                "type": "boolean",
                "description": "Indicates whether all items are included in the discount."
              }
            }
          },
          "created_at": {
            "type": "string",
            "example": "2022-03-23T07:44:00.444Z",
            "description": "Timestamp representing the date and time when the validation rule was created in ISO 8601 format."
          },
          "updated_at": {
            "type": "string",
            "example": "2022-04-26T08:35:54.960Z",
            "description": "Timestamp representing the date and time when the validation rule was updated in ISO 8601 format."
          },
          "type": {
            "type": "string",
            "enum": [
              "basic",
              "advanced",
              "complex"
            ],
            "description": "Type of validation rule."
          },
          "context_type": {
            "type": "string",
            "enum": [
              "earning_rule.order.paid",
              "earning_rule.custom_event",
              "earning_rule.customer.segment.entered",
              "campaign.discount_coupons",
              "campaign.discount_coupons.discount.apply_to_order",
              "campaign.discount_coupons.discount.apply_to_items",
              "campaign.discount_coupons.discount.apply_to_items_proportionally",
              "campaign.discount_coupons.discount.apply_to_items_proportionally_by_quantity",
              "campaign.discount_coupons.discount.fixed.apply_to_items",
              "campaign.gift_vouchers",
              "campaign.gift_vouchers.gift.apply_to_order",
              "campaign.gift_vouchers.gift.apply_to_items",
              "campaign.referral_program",
              "campaign.referral_program.discount.apply_to_order",
              "campaign.referral_program.discount.apply_to_items",
              "campaign.referral_program.discount.apply_to_items_proportionally",
              "campaign.referral_program.discount.apply_to_items_proportionally_by_quantity",
              "campaign.referral_program.discount.fixed.apply_to_items",
              "campaign.promotion",
              "campaign.promotion.discount.apply_to_order",
              "campaign.promotion.discount.apply_to_items",
              "campaign.promotion.discount.apply_to_items_proportionally",
              "campaign.promotion.discount.apply_to_items_proportionally_by_quantity",
              "campaign.promotion.discount.fixed.apply_to_items",
              "campaign.loyalty_program",
              "campaign.lucky_draw",
              "voucher.discount_voucher",
              "voucher.discount_voucher.discount.apply_to_order",
              "voucher.discount_voucher.discount.apply_to_items",
              "voucher.discount_voucher.discount.apply_to_items_proportionally",
              "voucher.discount_voucher.discount.apply_to_items_proportionally_by_quantity",
              "voucher.discount_voucher.discount.fixed.apply_to_items",
              "voucher.gift_voucher",
              "voucher.gift_voucher.gift.apply_to_order",
              "voucher.gift_voucher.gift.apply_to_items",
              "voucher.loyalty_card",
              "voucher.lucky_draw_code",
              "distribution.custom_event",
              "reward_assignment.pay_with_points",
              "global"
            ],
            "description": "Validation rule context type.  \n\n| **Context Type** | **Definition** |\n|:---|:---|\n| earning_rule.order.paid |  |\n| earning_rule.custom_event |  |\n| earning_rule.customer.segment.entered |  |\n| campaign.discount_coupons |  |\n| campaign.discount_coupons.discount.apply_to_order |  |\n| campaign.discount_coupons.discount.apply_to_items |  |\n| campaign.discount_coupons.discount.apply_to_items_proportionally |  |\n| campaign.discount_coupons.discount.apply_to_items_proportionally_by_quantity |  |\n| campaign.discount_coupons.discount.fixed.apply_to_items |  |\n| campaign.gift_vouchers |  |\n| campaign.gift_vouchers.gift.apply_to_order |  |\n| campaign.gift_vouchers.gift.apply_to_items |  |\n| campaign.referral_program |  |\n| campaign.referral_program.discount.apply_to_order |  |\n| campaign.referral_program.discount.apply_to_items |  |\n| campaign.referral_program.discount.apply_to_items_proportionally |  |\n| campaign.referral_program.discount.apply_to_items_proportionally_by_quantity |  |\n| campaign.referral_program.discount.fixed.apply_to_items |  |\n| campaign.promotion |  |\n| campaign.promotion.discount.apply_to_order |  |\n| campaign.promotion.discount.apply_to_items |  |\n| campaign.promotion.discount.apply_to_items_proportionally |  |\n| campaign.promotion.discount.apply_to_items_proportionally_by_quantity |  |\n| campaign.promotion.discount.fixed.apply_to_items |  |\n| campaign.loyalty_program |  |\n| campaign.lucky_draw |  |\n| voucher.discount_voucher |  |\n| voucher.discount_voucher.discount.apply_to_order |  |\n| voucher.discount_voucher.discount.apply_to_items |  |\n| voucher.discount_voucher.discount.apply_to_items_proportionally |  |\n| voucher.discount_voucher.discount.apply_to_items_proportionally_by_quantity |  |\n| voucher.discount_voucher.discount.fixed.apply_to_items |  |\n| voucher.gift_voucher |  |\n| voucher.gift_voucher.gift.apply_to_order |  |\n| voucher.gift_voucher.gift.apply_to_items |  |\n| voucher.loyalty_card |  |\n| voucher.lucky_draw_code |  |\n| distribution.custom_event |  |\n| reward_assignment.pay_with_points |  |\n| global |  |"
          },
          "object": {
            "type": "string",
            "default": "validation_rules",
            "description": "The type of object represented by JSON. This object stores information about the validation rule."
          }
        }
      },
      "13_res_list_validation_rules": {
        "description": "Response body schema for listing validation rules.  \n\nThis entity stores the [validation rules](OpenAPI.json/components/schemas/13_obj_validation_rule_object) used to limit your resources.",
        "type": "object",
        "x-examples": {
          "example-1": {
            "object": "list",
            "data_ref": "data",
            "data": [
              {
                "id": "val_30Qo2rclFi4T",
                "name": "R3",
                "rules": {
                  "1": {
                    "name": "redemption.count.per_customer",
                    "rules": {},
                    "property": null,
                    "conditions": {
                      "$less_than_or_equal": [
                        100
                      ]
                    }
                  },
                  "logic": "1"
                },
                "applicable_to": {
                  "excluded": [],
                  "included": [],
                  "included_all": false
                },
                "created_at": "2022-03-23T08:16:06.673Z",
                "updated_at": "2022-03-23T08:47:24.068Z",
                "type": "basic",
                "context_type": "global",
                "assignments_count": 1,
                "object": "validation_rules"
              },
              {
                "id": "val_2HhGVVQ8bFHQ",
                "name": "R2",
                "rules": {
                  "1": {
                    "name": "campaign.redemptions.count",
                    "rules": {},
                    "property": null,
                    "conditions": {
                      "$less_than_or_equal": [
                        1
                      ]
                    }
                  },
                  "logic": "1"
                },
                "applicable_to": {
                  "excluded": [],
                  "included": [],
                  "included_all": false
                },
                "created_at": "2022-03-23T07:57:57.279Z",
                "updated_at": "2022-03-23T07:58:56.653Z",
                "type": "basic",
                "context_type": "global",
                "assignments_count": 1,
                "object": "validation_rules"
              },
              {
                "id": "val_eR1c41hu0vUU",
                "name": "R1",
                "rules": {
                  "1": {
                    "name": "order.amount",
                    "error": {
                      "message": "Opps. You need to have more than $100 in your cart."
                    },
                    "rules": {},
                    "property": null,
                    "conditions": {
                      "$more_than": [
                        10000
                      ]
                    }
                  },
                  "logic": "1"
                },
                "applicable_to": {
                  "excluded": [],
                  "included": [],
                  "included_all": false
                },
                "created_at": "2022-03-23T07:44:00.444Z",
                "type": "advanced",
                "context_type": "global",
                "assignments_count": 1,
                "object": "validation_rules"
              },
              {
                "id": "val_nLuJPoDKksV6",
                "name": "Not below 29",
                "rules": {
                  "1": {
                    "name": "order.items.any",
                    "rules": {
                      "1": {
                        "name": "order.items.price",
                        "rules": {},
                        "property": null,
                        "conditions": {
                          "$more_than_or_equal": [
                            2900
                          ]
                        }
                      },
                      "logic": "1"
                    },
                    "property": null,
                    "conditions": {
                      "$is": [
                        {
                          "id": "pc_a11pr0dUc75",
                          "object": "products_collection",
                          "source_id": null
                        }
                      ]
                    }
                  },
                  "logic": "1"
                },
                "applicable_to": {
                  "excluded": [],
                  "included": [],
                  "included_all": false
                },
                "created_at": "2022-03-18T17:04:57.202Z",
                "type": "advanced",
                "context_type": "voucher.discount_voucher.discount.apply_to_order",
                "assignments_count": 1,
                "object": "validation_rules"
              },
              {
                "id": "val_pUuw9Lt8bvOq",
                "name": "Color is not brown",
                "rules": {
                  "1": {
                    "name": "order.items.none",
                    "rules": {},
                    "property": null,
                    "conditions": {
                      "$is": [
                        {
                          "id": "pc_4ndRXAsTOzwSdHcQcxf489uU",
                          "object": "products_collection",
                          "source_id": null
                        }
                      ]
                    }
                  },
                  "logic": "1"
                },
                "applicable_to": {
                  "excluded": [],
                  "included": [],
                  "included_all": false
                },
                "created_at": "2022-03-16T13:49:19.397Z",
                "updated_at": "2022-03-16T14:27:52.638Z",
                "type": "advanced",
                "context_type": "voucher.discount_voucher.discount.apply_to_order",
                "assignments_count": 1,
                "object": "validation_rules"
              },
              {
                "id": "val_4eXR9At9o0p7",
                "name": "price above 20",
                "rules": {
                  "1": {
                    "name": "order.items.none",
                    "rules": {},
                    "property": null,
                    "conditions": {
                      "$is": [
                        {
                          "id": "pc_FJdBpaQyvK6Gcdul4D2HRChI",
                          "object": "products_collection",
                          "source_id": null
                        }
                      ]
                    }
                  },
                  "logic": "1"
                },
                "applicable_to": {
                  "excluded": [],
                  "included": [],
                  "included_all": false
                },
                "created_at": "2022-03-16T13:44:49.430Z",
                "updated_at": "2022-03-18T16:54:51.548Z",
                "type": "advanced",
                "context_type": "voucher.discount_voucher.discount.apply_to_order",
                "assignments_count": 1,
                "object": "validation_rules"
              },
              {
                "id": "val_nGc2xhj4iqDY",
                "name": "Name starts with S",
                "rules": {
                  "1": {
                    "name": "order.items.none",
                    "rules": {},
                    "property": null,
                    "conditions": {
                      "$is": [
                        {
                          "id": "pc_ZgM25PcZAMp6qItKJRtR2mEi",
                          "object": "products_collection",
                          "source_id": null
                        }
                      ]
                    }
                  },
                  "logic": "1"
                },
                "applicable_to": {
                  "excluded": [],
                  "included": [],
                  "included_all": false
                },
                "created_at": "2022-03-16T13:42:54.854Z",
                "updated_at": "2022-03-16T15:22:36.508Z",
                "type": "advanced",
                "context_type": "voucher.discount_voucher.discount.apply_to_order",
                "assignments_count": 1,
                "object": "validation_rules"
              },
              {
                "id": "val_7qOy3aZsTaOW",
                "name": "AmountValrule",
                "rules": {
                  "1": {
                    "name": "order.items.none",
                    "rules": {},
                    "property": null,
                    "conditions": {
                      "$is": [
                        {
                          "id": "pc_0cRX5wAFt1R1R5Ir6WdTowui",
                          "object": "products_collection",
                          "source_id": null
                        }
                      ]
                    }
                  },
                  "2": {
                    "name": "order.items.price_each",
                    "rules": {},
                    "property": null,
                    "conditions": {
                      "$more_than": [
                        2900
                      ]
                    }
                  },
                  "logic": "(1) and (2)"
                },
                "applicable_to": {
                  "excluded": [],
                  "included": [],
                  "included_all": false
                },
                "created_at": "2022-03-15T10:16:55.056Z",
                "updated_at": "2022-03-15T10:56:46.712Z",
                "type": "advanced",
                "context_type": "voucher.discount_voucher.discount.apply_to_order",
                "assignments_count": 1,
                "object": "validation_rules"
              },
              {
                "id": "val_9TB89AjZeVEJ",
                "name": "ValidationRuleEQ",
                "rules": {
                  "1": {
                    "name": "order.items.any",
                    "rules": {
                      "1": {
                        "name": "order.items.metadata",
                        "rules": {},
                        "property": "Color",
                        "conditions": {
                          "$is": [
                            "Blue"
                          ]
                        }
                      },
                      "logic": "1"
                    },
                    "property": null,
                    "conditions": {
                      "$is": [
                        {
                          "id": "prod_0a7e62db1fca8322a2",
                          "object": "product",
                          "source_id": "prod_anJ03RZZq74z4v"
                        }
                      ]
                    }
                  },
                  "2": {
                    "name": "order.items.none",
                    "rules": {},
                    "property": null,
                    "conditions": {
                      "$is": [
                        {
                          "id": "pc_DyQfToTkXPU5ug88smfvID6o",
                          "object": "products_collection",
                          "source_id": null
                        }
                      ]
                    }
                  },
                  "3": {
                    "name": "order.items.none",
                    "rules": {},
                    "property": null,
                    "conditions": {
                      "$is": [
                        {
                          "id": "pc_0cRX5wAFt1R1R5Ir6WdTowui",
                          "object": "products_collection",
                          "source_id": null
                        }
                      ]
                    }
                  },
                  "4": {
                    "name": "order.items.none",
                    "rules": {},
                    "property": null,
                    "conditions": {
                      "$is": [
                        {
                          "id": "pc_41V4DiQQO8YGqj0J2oZD57j4",
                          "object": "products_collection",
                          "source_id": null
                        }
                      ]
                    }
                  },
                  "5": {
                    "name": "order.items.price_each",
                    "rules": {},
                    "property": null,
                    "conditions": {
                      "$more_than": [
                        300
                      ]
                    }
                  },
                  "logic": "(1 and (2 and 3 and 4)) and (5)"
                },
                "applicable_to": {
                  "excluded": [],
                  "included": [],
                  "included_all": false
                },
                "created_at": "2022-03-11T13:47:31.792Z",
                "updated_at": "2022-03-14T12:50:25.206Z",
                "type": "advanced",
                "context_type": "voucher.discount_voucher",
                "assignments_count": 1,
                "object": "validation_rules"
              },
              {
                "id": "val_Y5HuCD5Ghtdg",
                "name": "ExamineGift",
                "rules": {
                  "logic": ""
                },
                "applicable_to": {
                  "excluded": [],
                  "included": [],
                  "included_all": false
                },
                "created_at": "2022-03-08T11:16:57.634Z",
                "updated_at": "2022-03-08T12:44:37.468Z",
                "type": "advanced",
                "context_type": "voucher.gift_voucher",
                "assignments_count": 1,
                "object": "validation_rules"
              }
            ],
            "total": 48
          }
        },
        "title": "List Validation Rules Response Body",
        "properties": {
          "object": {
            "type": "string",
            "description": "The type of object represented by JSON. This object stores information about validation rules.",
            "default": "list"
          },
          "data_ref": {
            "type": "string",
            "description": "Identifies the name of the attribute that contains the array of validation rules.",
            "default": "data"
          },
          "data": {
            "type": "array",
            "uniqueItems": true,
            "description": "An array of validation rules.",
            "items": {
              "type": "object",
              "description": "Stores information about the validation rule.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Unique validation rule ID.",
                  "example": "val_F4Artfc4HQIq"
                },
                "name": {
                  "type": "string",
                  "description": "Custom, unique validation rule name."
                },
                "rules": {
                  "type": "object",
                  "description": "A set of key value pairs representing the rules  and logic between the rules. The keys are numbered consequtively beginning from `1`. The values are objects containing the rule conditions.",
                  "properties": {
                    "1": {
                      "type": "object",
                      "description": "Defines the rule.",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Voucherify specific rule name.  The list of available names is provided below.  \n| **Name** |\n|:---|\n| **Customer** |\n| customer.segment<br>customer.metadata* |\n| **Order** |\n| order.amount<br>order.items.count<br>order.items.price_any<br>order.items.price_each<br>order.items.metadata_any<br>order.items.metadata_each<br>order.metadata* |\n| **Campaign** |\n| campaign.orders.amount_discounted<br>campaign.orders.amount<br>campaign.redemptions.count<br>campaign.redemptions.customers_count<br>campaign.redemptions.customers_count.daily |\n| **Redemption** |\n| redemption.gift.amount<br>redemption.count.per_customer<br>redemption.count.per_customer.daily<br>redemption.api_key<br>redemption.count.per_api_key<br>redemption.user.login<br>redemption.count.per_user<br>redemption.metadata*<br>redemption.reward.pay_with_points.points_used |\n| **Product** |\n| product.id<br>product.price<br>product.quantity<br>product.discount_applicable<br>product.metadata*<br>product.metadata.aggregated_quantity<br>product.metadata.aggregated_amount<br>product.metadata.discount_applicable<br>product.metadata.match_all |\n| **SKU** |\n| sku.id<br>sku.price<br>sku.quantity<br>sku.discount_applicable |\n| **Publication** |\n| publication.redeemable_by_linked_customer |\n| **Custom Event** |\n| custom_event.metadata* |\n| **Order items** |\n| order.items.every<br>order.items.any<br>order.items.none<br>order.items.cheapest<br>order.items.most_expensive |\n| order.items.quantity<br>order.items.aggregated_quantity<br>order.items.price<br>order.items.aggregated_amount<br>order.items.metadata* |  \n\n\n*Requires the `property` field to be defined."
                        },
                        "rules": {
                          "type": "object"
                        },
                        "property": {
                          "type": "string",
                          "description": "Custom name for a metadata property associated with the condition to be satisfied. **Required** if the property `name` is any of the following: \n| **Name** |\n|:---|\n| customer_metadata |\n| custom_event_metadata |\n| order_items_metadata |\n| order_metadata |\n| product_metadata |\n| redemption_metadata |"
                        },
                        "conditions": {
                          "type": "object",
                          "description": "A set of key value pairs representing the condition name and value. The list of available conditions is provided below:    \n| **Condition (key)** | **Definition** | **Does not support Types** |\n|:---|:---|:---|\n| $is |  |  |\n| $is_not |  |  |\n| $in |  |  |\n| $less_than |  | boolean |\n| $less_than_or_equal |  | boolean |\n| $more_than |  | boolean |\n| $more_than_or_equal |  | boolean |\n| $starts_with |  | boolean, number |\n| $ends_with |  | boolean, number |\n| $contains |  | boolean, number |\n| $timeframe |  | boolean, number |\n| $dow |  | boolean, string |\n| $count |  | boolean, string |\n| $count_more |  | boolean, string |\n| $count_less |  | boolean, string |",
                          "properties": {
                            "$one_of_voucherify_conditions": {
                              "type": "array",
                              "items": {
                                "type": "object"
                              }
                            }
                          }
                        },
                        "error": {
                          "type": "object",
                          "description": "Contains the error message returned from API when validation / redemption fails to meet requirements of defined rule.",
                          "properties": {
                            "message": {
                              "type": "string",
                              "description": "The error message returned from API when validation / redemption fails to meet requirements of defined rule."
                            }
                          }
                        }
                      }
                    },
                    "logic": {
                      "type": "string",
                      "description": "Defines the logic between the rules."
                    }
                  }
                },
                "error": {
                  "type": "object",
                  "description": "Contains the error message returned from API when validation / redemption fails to meet requirements of defined rules.",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "The error message returned from API when validation / redemption fails to meet requirements of defined rules."
                    }
                  }
                },
                "applicable_to": {
                  "type": "object",
                  "properties": {
                    "excluded": {
                      "type": "array",
                      "description": "Defines which items are excluded in a discount.",
                      "items": {
                        "type": "object",
                        "description": "Defines the excluded item.",
                        "properties": {
                          "object": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "source_id": {
                            "type": "string"
                          },
                          "strict": {
                            "type": "boolean"
                          }
                        }
                      }
                    },
                    "included": {
                      "type": "array",
                      "description": "Defines which items are included in a discount.",
                      "items": {
                        "type": "object",
                        "description": "Defines the included item.",
                        "properties": {
                          "object": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "source_id": {
                            "type": "string"
                          },
                          "strict": {
                            "type": "boolean"
                          }
                        }
                      }
                    },
                    "included_all": {
                      "type": "boolean",
                      "description": "Indicates whether all items are included in the discount."
                    }
                  }
                },
                "created_at": {
                  "type": "string",
                  "description": "Timestamp representing the date and time when the validation rule was created in ISO 8601 format.",
                  "example": "2022-04-07T07:42:44.442Z"
                },
                "updated_at": {
                  "type": "string",
                  "example": "2022-05-09T07:42:44.442Z",
                  "description": "Timestamp representing the date and time when the validation rule was updated in ISO 8601 format."
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "basic",
                    "advanced",
                    "complex"
                  ],
                  "description": "Type of validation rule."
                },
                "context_type": {
                  "type": "string",
                  "enum": [
                    "earning_rule.order.paid",
                    "earning_rule.custom_event",
                    "earning_rule.customer.segment.entered",
                    "campaign.discount_coupons",
                    "campaign.discount_coupons.discount.apply_to_order",
                    "campaign.discount_coupons.discount.apply_to_items",
                    "campaign.discount_coupons.discount.apply_to_items_proportionally",
                    "campaign.discount_coupons.discount.apply_to_items_proportionally_by_quantity",
                    "campaign.discount_coupons.discount.fixed.apply_to_items",
                    "campaign.gift_vouchers",
                    "campaign.gift_vouchers.gift.apply_to_order",
                    "campaign.gift_vouchers.gift.apply_to_items",
                    "campaign.referral_program",
                    "campaign.referral_program.discount.apply_to_order",
                    "campaign.referral_program.discount.apply_to_items",
                    "campaign.referral_program.discount.apply_to_items_proportionally",
                    "campaign.referral_program.discount.apply_to_items_proportionally_by_quantity",
                    "campaign.referral_program.discount.fixed.apply_to_items",
                    "campaign.promotion",
                    "campaign.promotion.discount.apply_to_order",
                    "campaign.promotion.discount.apply_to_items",
                    "campaign.promotion.discount.apply_to_items_proportionally",
                    "campaign.promotion.discount.apply_to_items_proportionally_by_quantity",
                    "campaign.promotion.discount.fixed.apply_to_items",
                    "campaign.loyalty_program",
                    "campaign.lucky_draw",
                    "voucher.discount_voucher",
                    "voucher.discount_voucher.discount.apply_to_order",
                    "voucher.discount_voucher.discount.apply_to_items",
                    "voucher.discount_voucher.discount.apply_to_items_proportionally",
                    "voucher.discount_voucher.discount.apply_to_items_proportionally_by_quantity",
                    "voucher.discount_voucher.discount.fixed.apply_to_items",
                    "voucher.gift_voucher",
                    "voucher.gift_voucher.gift.apply_to_order",
                    "voucher.gift_voucher.gift.apply_to_items",
                    "voucher.loyalty_card",
                    "voucher.lucky_draw_code",
                    "distribution.custom_event",
                    "reward_assignment.pay_with_points",
                    "global"
                  ],
                  "description": "Validation rule context type.  \n\n| **Context Type** | **Definition** |\n|:---|:---|\n| earning_rule.order.paid |  |\n| earning_rule.custom_event |  |\n| earning_rule.customer.segment.entered |  |\n| campaign.discount_coupons |  |\n| campaign.discount_coupons.discount.apply_to_order |  |\n| campaign.discount_coupons.discount.apply_to_items |  |\n| campaign.discount_coupons.discount.apply_to_items_proportionally |  |\n| campaign.discount_coupons.discount.apply_to_items_proportionally_by_quantity |  |\n| campaign.discount_coupons.discount.fixed.apply_to_items |  |\n| campaign.gift_vouchers |  |\n| campaign.gift_vouchers.gift.apply_to_order |  |\n| campaign.gift_vouchers.gift.apply_to_items |  |\n| campaign.referral_program |  |\n| campaign.referral_program.discount.apply_to_order |  |\n| campaign.referral_program.discount.apply_to_items |  |\n| campaign.referral_program.discount.apply_to_items_proportionally |  |\n| campaign.referral_program.discount.apply_to_items_proportionally_by_quantity |  |\n| campaign.referral_program.discount.fixed.apply_to_items |  |\n| campaign.promotion |  |\n| campaign.promotion.discount.apply_to_order |  |\n| campaign.promotion.discount.apply_to_items |  |\n| campaign.promotion.discount.apply_to_items_proportionally |  |\n| campaign.promotion.discount.apply_to_items_proportionally_by_quantity |  |\n| campaign.promotion.discount.fixed.apply_to_items |  |\n| campaign.loyalty_program |  |\n| campaign.lucky_draw |  |\n| voucher.discount_voucher |  |\n| voucher.discount_voucher.discount.apply_to_order |  |\n| voucher.discount_voucher.discount.apply_to_items |  |\n| voucher.discount_voucher.discount.apply_to_items_proportionally |  |\n| voucher.discount_voucher.discount.apply_to_items_proportionally_by_quantity |  |\n| voucher.discount_voucher.discount.fixed.apply_to_items |  |\n| voucher.gift_voucher |  |\n| voucher.gift_voucher.gift.apply_to_order |  |\n| voucher.gift_voucher.gift.apply_to_items |  |\n| voucher.loyalty_card |  |\n| voucher.lucky_draw_code |  |\n| distribution.custom_event |  |\n| reward_assignment.pay_with_points |  |\n| global |  |"
                },
                "assignments_count": {
                  "description": "The number of instances the validation rule has been assigned to different types of redeemables.",
                  "type": "integer"
                },
                "object": {
                  "type": "string",
                  "default": "validation_rules",
                  "description": "The type of object represented by each nested object in the JSON `data` array. This object stores information about the validation rule."
                }
              }
            }
          },
          "total": {
            "type": "integer",
            "description": "Total number of validation rules in the project."
          }
        }
      },
      "13_obj_validation_rule_assignment_object": {
        "title": "Validation Rule Assignment Object",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "asgm_74F7QZoYbUoljwQO",
            "description": "Validation rule assignment ID."
          },
          "rule_id": {
            "type": "string",
            "example": "val_4j7DCRm2IS59",
            "description": "Validation rule ID."
          },
          "related_object_id": {
            "type": "string",
            "example": "v_JtWunK6jUo7X2qOFj0SyRHq4p9tgENlT",
            "description": "The resource ID to which the validation rule was assigned."
          },
          "related_object_type": {
            "type": "string",
            "description": "The type of resource to which the validation rule was assigned.",
            "enum": [
              "voucher",
              "campaign",
              "earning_rule",
              "reward_assignment",
              "promotion_tier",
              "distribution"
            ]
          },
          "created_at": {
            "type": "string",
            "example": "2022-02-17T08:18:15.085Z",
            "description": "Timestamp representing the date and time when the validation rule assignment was created in ISO 8601 format."
          },
          "object": {
            "type": "string",
            "default": "validation_rules_assignment",
            "description": "The type of object represented by the ID."
          }
        },
        "description": "This is an object representing a validation rule assignment.  \n\nThis object stores an assignment of a:  \n- voucher\n- campaign\n- earning_rule\n- reward_assignment\n- promotion_tier\n- distribution",
        "x-tags": [
          "VALIDATION RULES API"
        ]
      },
      "13_res_validation-rules_validationRuleId_assignments": {
        "type": "object",
        "x-examples": {
          "example-1": {
            "object": "list",
            "data_ref": "data",
            "data": [
              {
                "id": "asgm_74F7QZoYbUoljwQO",
                "rule_id": "val_4j7DCRm2IS59",
                "related_object_id": "v_MBOEmHelKwvykVZ8JcT4TE5Kla5IMJyc",
                "related_object_type": "voucher",
                "created_at": "2022-02-17T09:05:34.642Z",
                "object": "validation_rules_assignment"
              },
              {
                "id": "asgm_zzLBm8mIzGQStXl9",
                "rule_id": "val_4j7DCRm2IS59",
                "related_object_id": "v_JtWunK6jUo7X2qOFj0SyRHq4p9tgENlT",
                "related_object_type": "voucher",
                "created_at": "2022-02-17T08:18:15.085Z",
                "object": "validation_rules_assignment"
              },
              {
                "id": "asgm_JztMAws0e0Qx2Xy6",
                "rule_id": "val_4j7DCRm2IS59",
                "related_object_id": "camp_kjja4moiVB7hQKPGOT61026Z",
                "related_object_type": "campaign",
                "created_at": "2022-02-15T13:26:34.807Z",
                "object": "validation_rules_assignment"
              }
            ],
            "total": 3
          }
        },
        "description": "Respone body schema for `/validation-rules/{validationRuleId}/assignments`.",
        "title": "List Validation Rule Assignments Response Body",
        "properties": {
          "object": {
            "type": "string",
            "description": "The type of object represented by JSON. This object stores information about validation rule assignments.",
            "default": "list"
          },
          "data_ref": {
            "type": "string",
            "description": "Identifies the name of the JSON property that contains the array of validation rule assignments.",
            "default": "data"
          },
          "data": {
            "type": "array",
            "description": "A dictionary that contains an array of validation rule assignments.",
            "items": {
              "$ref": "#/components/schemas/13_obj_validation_rule_assignment_object"
            }
          },
          "total": {
            "type": "integer",
            "description": "Total number of validation rule assignments."
          }
        }
      },
      "14_obj_segment_object": {
        "title": "Customer Segment Object",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "seg_1wc52c5z6r1kQ81brO8j9Hk2",
            "description": "Unique segment ID."
          },
          "name": {
            "type": "string",
            "description": "Segment name."
          },
          "created_at": {
            "type": "string",
            "example": "2022-05-12T13:01:56.896Z",
            "description": "Timestamp representing the date and time when the segment was created in ISO 8601 format."
          },
          "type": {
            "type": "string",
            "enum": [
              "auto-update",
              "static"
            ],
            "description": "Describes whether the segment is dynamic (customers come in and leave based on set criteria) or static (manually selected customers)."
          },
          "filter": {
            "type": [
              "object",
              "null"
            ],
            "description": "Defines a set of criteria for an `auto-update` segment type.  "
          },
          "initial_sync_status": {
            "type": "string",
            "enum": [
              "IN_PROGRESS",
              "DONE"
            ]
          },
          "object": {
            "type": "string",
            "default": "segment",
            "description": "The type of object represented by JSON. This object stores information about the customer segment."
          }
        },
        "description": "This is an object representing a customer segment.",
        "x-tags": [
          "SEGMENTS API"
        ],
        "x-examples": {
          "example-1": {
            "id": "seg_1wc52c5z6r1kQ81brO8j9Hk2",
            "name": "After Dec1",
            "created_at": "2022-03-08T09:22:33.945Z",
            "type": "auto-update",
            "filter": {
              "junction": "and",
              "created_at": {
                "conditions": {
                  "$after": [
                    "2021-12-01T00:00:00.000Z"
                  ]
                }
              }
            },
            "initial_sync_status": "DONE",
            "object": "segment"
          }
        }
      },
      "14_res_customers_customerId_segments": {
        "type": "object",
        "x-examples": {
          "example-1": {
            "object": "list",
            "data_ref": "data",
            "data": [
              {
                "id": "seg_DNAOhUtJffvX0f57ajLMFBYR",
                "name": "area code not 123",
                "object": "segment"
              },
              {
                "id": "seg_IPIYx96l92Op0Sy5MOaImhgw",
                "name": "not bob.smith@voucherify.io",
                "object": "segment"
              },
              {
                "id": "seg_1wc52c5z6r1kQ81brO8j9Hk2",
                "name": "Birthday After Dec 31",
                "object": "segment"
              },
              {
                "id": "seg_ZEbbT4mq1ePpM9PzR02lcww2",
                "name": "Start with S",
                "object": "segment"
              },
              {
                "id": "seg_WJv55MbzQwnr56ttJ2xUrSgt",
                "name": "Loyalty Card",
                "object": "segment"
              }
            ],
            "total": 5
          }
        },
        "title": "List Segments for Customer Response Body",
        "description": "Response body schema for `/customers/{customerId}/segments`.",
        "properties": {
          "object": {
            "type": "string",
            "description": "The type of object represented by JSON. This object stores information about customer segments.",
            "default": "list"
          },
          "data_ref": {
            "type": "string",
            "description": "Identifies the name of the JSON property that contains the array of segment IDs.",
            "default": "data"
          },
          "data": {
            "type": "array",
            "description": "A dictionary that contains an array of segment IDs and names.",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Unique segment ID.",
                  "example": "seg_DNAOhUtJffvX0f57ajLMFBYR"
                },
                "name": {
                  "type": "string",
                  "description": "Segment name."
                },
                "object": {
                  "type": "string",
                  "description": "The type of object represented by the ID.",
                  "default": "segment"
                }
              }
            }
          },
          "total": {
            "type": "integer",
            "description": "Total number of segments the customer belongs to."
          }
        }
      },
      "15_obj_event_object": {
        "title": "Event Object",
        "type": "object",
        "description": "This is an object representing an event.  \n\nVoucherify distinguishes two types of events - custom and internal. Both are presented in the same Event structure. \n\n## Custom Events\n\nCustom Events are actions taken by your customers. They’re best suited for tracking high-value customer interactions with your application. Logging a custom event can trigger any number of distributions, and enables the segmentation filters around the recency and frequency of that event.\n\nWith Custom Event metadata field, Voucherify allows you to set properties on custom events. These properties can then be used for further qualifying trigger conditions, increasing personalization in messaging, and generating more sophisticated analytics through raw data export.\n\nThe Custom Events are directly linked to the customers' resources from Voucherify. It means that each event gets a connection to a customer.  \n\n<!-- theme: info -->\n> #### An example  \n>\n> If an e-commerce application wanted to send a message to a user when he/she abandons their cart, the custom event could additionally improve its target audience and allow for increased distribution personalization by adding a Custom Event of the `value` of customers’ order.\n\n## Internal Voucherify Events  \n\nMoreover, Events are our way of letting you know when something interesting happens in your project. When an interesting event occurs, we create a new Event object. For example, when a redemption succeeds, we create a `redemption.succeeded` event.\n\nNote that many API requests may cause multiple events to be created. For example, if you create a new redemption for a new customer not existing yet in Voucherify, you will receive both a `customer.created` event and a `redemption.succeeded` event.\n\nThe events occur when the state of another API resource changes and the state of that resource at the time of the change is embedded in the data field of the event.  \n\n| **Types of internal events** |\n|:---|\n| **Campaign** |\n| campaign.validation_rules.created<br>campaign.created<br>campaign.disabled<br>campaign.export_mailchimp_scheduled<br>campaign.export_mailchimp_done<br>campaign.validation_rules.deleted<br>campaign.validation_rules.updated<br>campaign.updated<br>campaign.deleted<br>campaign.export_mailchimp_failed<br>campaign.enabled |\n| **Voucher** |\n| voucher.validation.succeeded<br>voucher.updated<br>voucher.enabled<br>voucher.gift.balance_added<br>voucher.validation_rules.updated<br>voucher.published<br>voucher.validation_rules.deleted<br>voucher.disabled<br>voucher.validation.failed<br>voucher.validation_rules.created<br>voucher.deleted<br>voucher.created |\n| **Redemption** |\n| redemption.succeeded<br>redemption.failed<br>redemption.rollback.failed<br>redemption.rollback.succeeded |\n| **Customer** |\n| customer.rewarded<br>customer.rewarded.loyalty_points<br>customer.sms.sent<br>customer.email.failed<br>customer.deleted<br>customer.created<br>customer.updated<br>customer.segment.left<br>customer.sms.failed<br>customer.segment.entered<br>customer.email.sent |\n| **Order** |\n| order.canceled<br>order.created<br>order.updated<br>order.paid |\n| **Product** |\n| product.updated<br>product.created<br>product.deleted |\n| **SKU** |\n| sku.updated<br>sku.created<br>sku.deleted |\n| **Distribution** |\n| distribution.sms.failed<br>distribution.sms.sent<br>distribution.email.sent<br>distribution.email.failed |\n| **Export** |\n| export.done<br>export.scheduled<br>export.failed<br>export.deleted |  \n\n## Webhooks  \n\nVoucherify also has a separate system for sending the event objects directly to an endpoint at your end (server). We called that mechanism webhooks. They are managed in your project settings.  \n\n| **Attribute** | **Description** | **Example** |\n|:---|:---|:---|\n| `id`<br>string |  | event_xjGas2mI2PduFFPL2NAcFeHkHfLn3H |\n| `object`<br>string | Type of the object represented by JSON. Value is `event`. |  |\n| `created_at`<br>string, ISO 8601 date format | Time at which the object was created. | 2016-11-16T14:14:31Z |\n| `type`<br>string | Description of the event | view_pricing_page<br>redemption.succeeded |\n| `data.object`<br>object | The object containing data associated with the event. It can be a `customer`, `redemption` or any other type of object which is a source of the event. In this object structure, you can also find a property `related_object` which contains values presenting any other resource connected to the event.<br><br>For Custom Event the structure of child attributes is constant:<br><br>- customer (`object`) - The object presenting a profile of the related customer who performed an action.<br><br>- metadata (`object`) - A set of key/value pairs that you can attach to a custom event object. It can be useful for storing additional information about the event in a structured format. | \"data\": { \"object\": { \"customer\": { \"id\": \"cust_OtHDKrv5sJrjd8aYBYZ6AOIF\", \"name\": \"Gustav Purpleson\", \"object\": \"customer\", \"source_id\": \"gustav@purpleson.com\", \"created_at\": 1510834859417, \"updated_at\": 1510835106559 }, \"metadata\": { \"lang\": \"en\", \"test\": true, \"page\": \"http://main.io\" } } } |\n| `metadata`<br>object | A set of key/value pairs that Voucherify attaches to a custom event object. It is a set of additional system information about the event in a structured format. |  |\n\n<!--\ntitle: \"Example Response\"\nlineNumbers: true\n-->\n```json\n{\n    \"id\": \"event_ehkvgZFgSePlb95SH3JJulkApy9Kg9\",\n    \"object\": \"event\",\n    \"created_at\": \"2017-11-16T14:45:34.181Z\",\n    \"type\": \"redemption.succeeded\",\n    \"data\": {\n        \"object\": {\n            \"id\": \"r_mist0IpebikTaRdxiOGI2IhL\",\n            \"date\": \"2017-11-16T14:45:32.733Z\",\n            \"order\": {\n                \"id\": \"ord_AhDlR13vQE5ino95P2NIABBN\",\n                \"items\": [\n                    {\n                        \"object\": \"order_item\",\n                        \"sku_id\": null,\n                        \"quantity\": 1,\n                        \"source_id\": null,\n                        \"product_id\": \"iphone8\"\n                    }\n                ],\n                \"amount\": 50000,\n                \"object\": \"order\",\n                \"status\": \"CREATED\",\n                \"customer\": {\n                    \"id\": \"cust_fJPsoub5ITJnIEVO3v9whrP9\",\n                    \"object\": \"customer\"\n                },\n                \"metadata\": null,\n                \"referrer\": null,\n                \"source_id\": null,\n                \"created_at\": \"2017-11-16T14:45:32.023Z\",\n                \"updated_at\": null,\n                \"discount_amount\": 2000\n            },\n            \"object\": \"redemption\",\n            \"result\": \"SUCCESS\",\n            \"voucher\": {\n                \"code\": \"2017-goX-aH\",\n                \"gift\": null,\n                \"type\": \"DISCOUNT_VOUCHER\",\n                \"object\": \"voucher\",\n                \"campaign\": \"SteffenTest\",\n                \"discount\": {\n                    \"type\": \"AMOUNT\",\n                    \"amount_off\": 2000\n                },\n                \"is_referral_code\": false\n            },\n            \"customer\": {\n                \"id\": \"cust_fJPsoub5ITJnIEVO3v9whrP9\",\n                \"object\": \"customer\"\n            },\n            \"metadata\": {\n                \"city\": \"London1\"\n            },\n            \"customer_id\": \"cust_fJPsoub5ITJnIEVO3v9whrP9\",\n            \"tracking_id\": \"track_3tM7KR57bbeIRtMcvpKYr2aAOrCpYBDZ\",\n            \"related_object_type\": \"voucher\"\n        },\n        \"previous_attributes\": {}\n    },\n    \"metadata\": {\n        \"source\": \"API\"\n    }\n}\n```\n\n## Customisable Campaign Events  \n\nAs part of campaign creation, users can configure webhooks triggered when specific activities appear within a campaign's lifetime. Those webhooks get configurable names and the users implement them in Voucherify Dashboard as part of the campaign creation process.\n\nThis type of webhooks can be configured for the following actions:  \n\n| **Action** |\n|:---|\n| **Referral Program** |\n| Referrer rewarded<br>Referral code assigned<br>Customer referred |\n| **Loyalty Campaign** |\n| Loyalty card assigned<br>Points earned<br>Points redeemed |  \n\nPayloads of customizable webhooks:\n\n### Referral Program\n\n<!--\ntitle: \"Referral code assigned\"\nlineNumbers: true\n-->\n```json\n{\n    \"id\": \"evcus_0a26b1a5acd3437894\",\n    \"object\": \"event\",\n    \"webhook_id\": null,\n    \"project_id\": \"proj_nXIkFGNmrFSf\",\n    \"created_at\": \"2021-01-24T11:09:57.765Z\",\n    \"type\": \"referral_code_assigned\",\n    \"data\": {\n        \"object\": {\n            \"voucher\": {\n                \"id\": \"v_ZlNAlSHNgK57ErFgOxAz7swPBPfMBlMp\",\n                \"code\": \"xYwEheRh\",\n                \"campaign\": \"Referral Webhooks\",\n                \"campaign_id\": \"camp_UaT2wwkN9zQs3RiIk7H0PcBc\",\n                \"category\": null,\n                \"type\": \"DISCOUNT_VOUCHER\",\n                \"discount\": {\n                    \"type\": \"AMOUNT\",\n                    \"amount_off\": 1000,\n                    \"effect\": \"APPLY_TO_ORDER\"\n                },\n                \"gift\": null,\n                \"loyalty_card\": null,\n                \"start_date\": null,\n                \"expiration_date\": null,\n                \"validity_timeframe\": null,\n                \"validity_day_of_week\": null,\n                \"active\": true,\n                \"additional_info\": null,\n                \"metadata\": {},\n                \"assets\": {\n                    \"qr\": {\n                        \"id\": \"U2FsdGVkX19wsHlNj5GT/2Kkf/MnPKlL4WjU55GyTsmpXgw+KQOwp3ux0XzUAgsTcujC49hkjk7ony8mPL429zzWHGy/OHpvDwuY0Z6AECrqzRea81MCjkqI0gKlVEhqYWoCm7Va+MFPSHRy5tesDQ==\",\n                        \"url\": \"https://dl.voucherify.io/api/v1/assets/qr/U2FsdGVkX19wsHlNj5GT%2F2Kkf%2FMnPKlL4WjU55GyTsmpXgw%2BKQOwp3ux0XzUAgsTcujC49hkjk7ony8mPL429zzWHGy%2FOHpvDwuY0Z6AECrqzRea81MCjkqI0gKlVEhqYWoCm7Va%2BMFPSHRy5tesDQ%3D%3D\"\n                    },\n                    \"barcode\": {\n                        \"id\": \"U2FsdGVkX19ZgrgURtgcjD1cvt/L6wMNDySfG6AOT4NHpVJgceyuHAqJWYN3UgCn9jv8TIPtSfkNuHzI4i/UVUbmXTxDvNXsceP+nzHjmWp6fS3e7dR3SVEL3VHdSLZ1O7W9xPjRadOCGNZXPddd3w==\",\n                        \"url\": \"https://dl.voucherify.io/api/v1/assets/barcode/U2FsdGVkX19ZgrgURtgcjD1cvt%2FL6wMNDySfG6AOT4NHpVJgceyuHAqJWYN3UgCn9jv8TIPtSfkNuHzI4i%2FUVUbmXTxDvNXsceP%2BnzHjmWp6fS3e7dR3SVEL3VHdSLZ1O7W9xPjRadOCGNZXPddd3w%3D%3D\"\n                    }\n                },\n                \"is_referral_code\": true,\n                \"created_at\": \"2021-11-12T11:09:57.772Z\",\n                \"updated_at\": null,\n                \"holder_id\": \"cust_laSm5Bbd6fzSgVtyKYfGot4L\",\n                \"referrer_id\": \"cust_laSm5Bbd6fzSgVtyKYfGot4L\",\n                \"redemption\": {\n                    \"quantity\": null,\n                    \"redeemed_quantity\": 0,\n                    \"object\": \"list\",\n                    \"url\": \"/v1/vouchers/xYwEheRh/redemptions?page=1&limit=10\"\n                },\n                \"publish\": {\n                    \"object\": \"list\",\n                    \"count\": 1,\n                    \"url\": \"/v1/vouchers/xYwEheRh/publications?page=1&limit=10\"\n                },\n                \"object\": \"voucher\"\n            },\n            \"campaign\": {\n                \"id\": \"camp_UaT2wwkN9zQs3RiIk7H0PcBc\",\n                \"name\": \"Referral Webhooks\",\n                \"campaign_type\": \"REFERRAL_PROGRAM\",\n                \"type\": \"AUTO_UPDATE\",\n                \"voucher\": {\n                    \"type\": \"DISCOUNT_VOUCHER\",\n                    \"discount\": {\n                        \"type\": \"AMOUNT\",\n                        \"amount_off\": 1000,\n                        \"effect\": \"APPLY_TO_ORDER\"\n                    },\n                    \"gift\": null,\n                    \"loyalty_card\": null,\n                    \"redemption\": {\n                        \"quantity\": null,\n                        \"redeemed_quantity\": 0\n                    },\n                    \"code_config\": {\n                        \"length\": 8,\n                        \"charset\": \"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\",\n                        \"pattern\": \"########\",\n                        \"prefix\": \"\",\n                        \"postfix\": \"\"\n                    },\n                    \"is_referral_code\": true\n                },\n                \"referral_program\": {\n                    \"conversion_event_type\": \"redemption\"\n                },\n                \"join_once\": false,\n                \"use_voucher_metadata_schema\": true,\n                \"vouchers_count\": 1,\n                \"active\": true,\n                \"metadata\": {},\n                \"created_at\": \"2021-11-12T11:00:08.306Z\",\n                \"updated_at\": \"2021-11-12T11:09:40.671Z\",\n                \"creation_status\": \"DONE\",\n                \"vouchers_generation_status\": \"DONE\",\n                \"object\": \"campaign\"\n            },\n            \"customer\": {\n                \"id\": \"cust_laSm5Bbd6fzSgVtyKYfGot4L\",\n                \"source_id\": \"test_referrer__01\",\n                \"name\": \"John Doe\",\n                \"description\": null,\n                \"email\": null,\n                \"phone\": null,\n                \"birthday\": null,\n                \"birthdate\": null,\n                \"address\": null,\n                \"summary\": {\n                    \"redemptions\": {\n                        \"total_redeemed\": 0,\n                        \"total_failed\": 0,\n                        \"total_succeeded\": 0,\n                        \"total_rolled_back\": 0,\n                        \"total_rollback_failed\": 0,\n                        \"total_rollback_succeeded\": 0\n                    },\n                    \"orders\": {\n                        \"total_amount\": 0,\n                        \"total_count\": 0,\n                        \"average_amount\": null,\n                        \"last_order_amount\": null,\n                        \"last_order_date\": null\n                    }\n                },\n                \"loyalty\": {\n                    \"points\": 0,\n                    \"referred_customers\": 0,\n                    \"campaigns\": {}\n                },\n                \"referrals\": {\n                    \"total\": 0,\n                    \"campaigns\": []\n                },\n                \"metadata\": {\n                    \"test\": true,\n                    \"acq_channel\": \"Twitter\"\n                },\n                \"system_metadata\": {},\n                \"created_at\": \"2021-11-12T11:09:57.749Z\",\n                \"updated_at\": \"2021-11-12T11:09:58.620Z\",\n                \"object\": \"customer\"\n            },\n            \"publication\": {\n                \"id\": \"pub_gSpZUNX0hcDfEeRx3qIMMFrtfsZjeJO8\",\n                \"object\": \"publication\",\n                \"result\": \"SUCCESS\",\n                \"channel\": \"API\",\n                \"voucher\": {\n                    \"id\": \"v_ZlNAlSHNgK57ErFgOxAz7swPBPfMBlMp\",\n                    \"code\": \"xYwEheRh\",\n                    \"gift\": null,\n                    \"type\": \"DISCOUNT_VOUCHER\",\n                    \"active\": true,\n                    \"assets\": {\n                        \"qr\": {\n                            \"id\": \"U2FsdGVkX19wsHlNj5GT/2Kkf/MnPKlL4WjU55GyTsmpXgw+KQOwp3ux0XzUAgsTcujC49hkjk7ony8mPL429zzWHGy/OHpvDwuY0Z6AECrqzRea81MCjkqI0gKlVEhqYWoCm7Va+MFPSHRy5tesDQ==\",\n                            \"url\": \"https://dl.voucherify.io/api/v1/assets/qr/U2FsdGVkX19wsHlNj5GT%2F2Kkf%2FMnPKlL4WjU55GyTsmpXgw%2BKQOwp3ux0XzUAgsTcujC49hkjk7ony8mPL429zzWHGy%2FOHpvDwuY0Z6AECrqzRea81MCjkqI0gKlVEhqYWoCm7Va%2BMFPSHRy5tesDQ%3D%3D\"\n                        },\n                        \"barcode\": {\n                            \"id\": \"U2FsdGVkX19ZgrgURtgcjD1cvt/L6wMNDySfG6AOT4NHpVJgceyuHAqJWYN3UgCn9jv8TIPtSfkNuHzI4i/UVUbmXTxDvNXsceP+nzHjmWp6fS3e7dR3SVEL3VHdSLZ1O7W9xPjRadOCGNZXPddd3w==\",\n                            \"url\": \"https://dl.voucherify.io/api/v1/assets/barcode/U2FsdGVkX19ZgrgURtgcjD1cvt%2FL6wMNDySfG6AOT4NHpVJgceyuHAqJWYN3UgCn9jv8TIPtSfkNuHzI4i%2FUVUbmXTxDvNXsceP%2BnzHjmWp6fS3e7dR3SVEL3VHdSLZ1O7W9xPjRadOCGNZXPddd3w%3D%3D\"\n                        }\n                    },\n                    \"object\": \"voucher\",\n                    \"publish\": {\n                        \"url\": \"/v1/vouchers/xYwEheRh/publications?page=1&limit=10\",\n                        \"count\": 1,\n                        \"object\": \"list\"\n                    },\n                    \"campaign\": \"Referral Webhooks\",\n                    \"category\": null,\n                    \"discount\": {\n                        \"type\": \"AMOUNT\",\n                        \"effect\": \"APPLY_TO_ORDER\",\n                        \"amount_off\": 1000\n                    },\n                    \"metadata\": {},\n                    \"holder_id\": \"cust_laSm5Bbd6fzSgVtyKYfGot4L\",\n                    \"created_at\": \"2021-11-12T11:09:57.772Z\",\n                    \"redemption\": {\n                        \"url\": \"/v1/vouchers/xYwEheRh/redemptions?page=1&limit=10\",\n                        \"object\": \"list\",\n                        \"quantity\": null,\n                        \"redeemed_quantity\": 0\n                    },\n                    \"start_date\": null,\n                    \"updated_at\": null,\n                    \"campaign_id\": \"camp_UaT2wwkN9zQs3RiIk7H0PcBc\",\n                    \"referrer_id\": \"cust_laSm5Bbd6fzSgVtyKYfGot4L\",\n                    \"loyalty_card\": null,\n                    \"distributions\": null,\n                    \"additional_info\": null,\n                    \"expiration_date\": null,\n                    \"is_referral_code\": true,\n                    \"validity_timeframe\": null,\n                    \"validity_day_of_week\": null,\n                    \"referred_customers_count\": null,\n                    \"value\": \"$10.00\"\n                },\n                \"customer\": {\n                    \"id\": \"cust_laSm5Bbd6fzSgVtyKYfGot4L\",\n                    \"name\": \"John Doe\",\n                    \"email\": null,\n                    \"object\": \"customer\",\n                    \"metadata\": {\n                        \"test\": true,\n                        \"acq_channel\": \"Twitter\"\n                    },\n                    \"source_id\": \"test_referrer__01\"\n                },\n                \"metadata\": {},\n                \"source_id\": null,\n                \"created_at\": \"2021-11-12T11:09:57.765Z\",\n                \"customer_id\": \"cust_laSm5Bbd6fzSgVtyKYfGot4L\",\n                \"tracking_id\": \"test_referrer__01\",\n                \"vouchers_id\": [\n                    \"v_ZlNAlSHNgK57ErFgOxAz7swPBPfMBlMp\"\n                ]\n            }\n        },\n        \"related_object\": {\n            \"id\": \"evcus_0a26b1a5acd3437894\",\n            \"type\": \"customer.publication.succeeded\",\n            \"data\": {\n                \"customer\": {\n                    \"id\": \"cust_laSm5Bbd6fzSgVtyKYfGot4L\",\n                    \"name\": \"John Doe\",\n                    \"email\": null,\n                    \"source_id\": \"test_referrer__01\",\n                    \"metadata\": {\n                        \"test\": true,\n                        \"acq_channel\": \"Twitter\"\n                    },\n                    \"object\": \"customer\"\n                },\n                \"campaign\": {\n                    \"id\": \"camp_UaT2wwkN9zQs3RiIk7H0PcBc\",\n                    \"name\": \"Referral Webhooks\",\n                    \"campaign_type\": \"REFERRAL_PROGRAM\",\n                    \"type\": \"AUTO_UPDATE\",\n                    \"is_referral_code\": true,\n                    \"voucher\": {\n                        \"type\": \"DISCOUNT_VOUCHER\",\n                        \"discount\": {\n                            \"type\": \"AMOUNT\",\n                            \"effect\": \"APPLY_TO_ORDER\",\n                            \"amount_off\": 1000\n                        },\n                        \"redemption\": {\n                            \"quantity\": null,\n                            \"redeemed_quantity\": 0\n                        },\n                        \"code_config\": {\n                            \"length\": 8,\n                            \"prefix\": \"\",\n                            \"charset\": \"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\",\n                            \"pattern\": \"########\",\n                            \"postfix\": \"\"\n                        }\n                    },\n                    \"referral_program\": {\n                        \"conversion_event_type\": \"redemption\"\n                    },\n                    \"auto_join\": null,\n                    \"join_once\": false,\n                    \"active\": true\n                },\n                \"publication\": {\n                    \"id\": \"pub_gSpZUNX0hcDfEeRx3qIMMFrtfsZjeJO8\",\n                    \"object\": \"publication\",\n                    \"result\": \"SUCCESS\",\n                    \"channel\": \"API\",\n                    \"voucher\": {\n                        \"id\": \"v_ZlNAlSHNgK57ErFgOxAz7swPBPfMBlMp\",\n                        \"code\": \"xYwEheRh\",\n                        \"gift\": null,\n                        \"type\": \"DISCOUNT_VOUCHER\",\n                        \"active\": true,\n                        \"assets\": {\n                            \"qr\": {\n                                \"id\": \"U2FsdGVkX19wsHlNj5GT/2Kkf/MnPKlL4WjU55GyTsmpXgw+KQOwp3ux0XzUAgsTcujC49hkjk7ony8mPL429zzWHGy/OHpvDwuY0Z6AECrqzRea81MCjkqI0gKlVEhqYWoCm7Va+MFPSHRy5tesDQ==\",\n                                \"url\": \"https://dl.voucherify.io/api/v1/assets/qr/U2FsdGVkX19wsHlNj5GT%2F2Kkf%2FMnPKlL4WjU55GyTsmpXgw%2BKQOwp3ux0XzUAgsTcujC49hkjk7ony8mPL429zzWHGy%2FOHpvDwuY0Z6AECrqzRea81MCjkqI0gKlVEhqYWoCm7Va%2BMFPSHRy5tesDQ%3D%3D\"\n                            },\n                            \"barcode\": {\n                                \"id\": \"U2FsdGVkX19ZgrgURtgcjD1cvt/L6wMNDySfG6AOT4NHpVJgceyuHAqJWYN3UgCn9jv8TIPtSfkNuHzI4i/UVUbmXTxDvNXsceP+nzHjmWp6fS3e7dR3SVEL3VHdSLZ1O7W9xPjRadOCGNZXPddd3w==\",\n                                \"url\": \"https://dl.voucherify.io/api/v1/assets/barcode/U2FsdGVkX19ZgrgURtgcjD1cvt%2FL6wMNDySfG6AOT4NHpVJgceyuHAqJWYN3UgCn9jv8TIPtSfkNuHzI4i%2FUVUbmXTxDvNXsceP%2BnzHjmWp6fS3e7dR3SVEL3VHdSLZ1O7W9xPjRadOCGNZXPddd3w%3D%3D\"\n                            }\n                        },\n                        \"object\": \"voucher\",\n                        \"publish\": {\n                            \"url\": \"/v1/vouchers/xYwEheRh/publications?page=1&limit=10\",\n                            \"count\": 1,\n                            \"object\": \"list\"\n                        },\n                        \"campaign\": \"Referral Webhooks\",\n                        \"category\": null,\n                        \"discount\": {\n                            \"type\": \"AMOUNT\",\n                            \"effect\": \"APPLY_TO_ORDER\",\n                            \"amount_off\": 1000\n                        },\n                        \"metadata\": {},\n                        \"holder_id\": \"cust_laSm5Bbd6fzSgVtyKYfGot4L\",\n                        \"created_at\": \"2021-11-12T11:09:57.772Z\",\n                        \"redemption\": {\n                            \"url\": \"/v1/vouchers/xYwEheRh/redemptions?page=1&limit=10\",\n                            \"object\": \"list\",\n                            \"quantity\": null,\n                            \"redeemed_quantity\": 0\n                        },\n                        \"start_date\": null,\n                        \"updated_at\": null,\n                        \"campaign_id\": \"camp_UaT2wwkN9zQs3RiIk7H0PcBc\",\n                        \"referrer_id\": \"cust_laSm5Bbd6fzSgVtyKYfGot4L\",\n                        \"loyalty_card\": null,\n                        \"distributions\": null,\n                        \"additional_info\": null,\n                        \"expiration_date\": null,\n                        \"is_referral_code\": true,\n                        \"validity_timeframe\": null,\n                        \"validity_day_of_week\": null,\n                        \"referred_customers_count\": null\n                    },\n                    \"customer\": {\n                        \"id\": \"cust_laSm5Bbd6fzSgVtyKYfGot4L\",\n                        \"name\": \"John Doe\",\n                        \"email\": null,\n                        \"object\": \"customer\",\n                        \"metadata\": {\n                            \"test\": true,\n                            \"acq_channel\": \"Twitter\"\n                        },\n                        \"source_id\": \"test_referrer__01\"\n                    },\n                    \"metadata\": {},\n                    \"source_id\": null,\n                    \"created_at\": \"2021-11-12T11:09:57.765Z\",\n                    \"customer_id\": \"cust_laSm5Bbd6fzSgVtyKYfGot4L\",\n                    \"tracking_id\": \"test_referrer__01\",\n                    \"vouchers_id\": [\n                        \"v_ZlNAlSHNgK57ErFgOxAz7swPBPfMBlMp\"\n                    ]\n                }\n            },\n            \"created_at\": \"2021-11-12T11:09:57.765Z\"\n        }\n    },\n    \"metadata\": {}\n}\n```\n<!--\ntitle: \"Referrer rewarded\"\nlineNumbers: true\n-->\n```json\n{\n    \"id\": \"evcus_0a26b3e7b718c480ca\",\n    \"object\": \"event\",\n    \"webhook_id\": null,\n    \"project_id\": \"proj_nXIkFGNmrFSf\",\n    \"created_at\": \"2021-01-24T11:19:49.723Z\",\n    \"type\": \"referrer_rewarded_webhook\",\n    \"data\": {\n        \"object\": {\n            \"voucher\": {\n                \"id\": \"v_2teI9HcRvdvK1RsWD6gyNztHr4SMkMDy\",\n                \"code\": \"dOzJ84Ky\",\n                \"campaign\": \"Bonus Cards\",\n                \"campaign_id\": \"camp_yheSCBQGrgeBwGMkQqjsUW24\",\n                \"category\": null,\n                \"type\": \"GIFT_VOUCHER\",\n                \"discount\": null,\n                \"gift\": {\n                    \"amount\": 500,\n                    \"balance\": 500\n                },\n                \"loyalty_card\": null,\n                \"start_date\": null,\n                \"expiration_date\": null,\n                \"validity_timeframe\": null,\n                \"validity_day_of_week\": null,\n                \"active\": true,\n                \"additional_info\": null,\n                \"metadata\": {},\n                \"assets\": {\n                    \"qr\": {\n                        \"id\": \"U2FsdGVkX1+tdyBGQeM+ZONM/k\",\n                        \"url\": \"https://dl.voucherify.io/api/v1/assets/qr/U2FsdGVkX1+tdyBGQeM+ZONM/k\"\n                    },\n                    \"barcode\": {\n                        \"id\": \"U2FsdGVkX1+WOEBHpX4y\",\n                        \"url\": \"https://dl.voucherify.io/api/v1/assets/barcode/U2FsdGVkX1%2BWOEBHpX4y\"\n                    }\n                },\n                \"is_referral_code\": false,\n                \"created_at\": \"2021-01-24T11:19:40.409Z\",\n                \"updated_at\": \"2021-01-24T11:19:41.518Z\",\n                \"holder_id\": \"cust_laSm5Bbd6fzSgVtyKYfGot4L\",\n                \"redemption\": {\n                    \"quantity\": 1,\n                    \"redeemed_quantity\": 0,\n                    \"redeemed_amount\": 0,\n                    \"object\": \"list\",\n                    \"url\": \"/v1/vouchers/dOzJ84Ky/redemptions?page=1&limit=10\"\n                },\n                \"publish\": {\n                    \"object\": \"list\",\n                    \"count\": 1,\n                    \"url\": \"/v1/vouchers/dOzJ84Ky/publications?page=1&limit=10\"\n                },\n                \"object\": \"voucher\"\n            },\n            \"campaign\": {\n                \"id\": \"camp_UaT2wwkN9zQs3RiIk7H0PcBc\",\n                \"name\": \"Referral Webhooks\",\n                \"campaign_type\": \"REFERRAL_PROGRAM\",\n                \"type\": \"AUTO_UPDATE\",\n                \"voucher\": {\n                    \"type\": \"DISCOUNT_VOUCHER\",\n                    \"discount\": {\n                        \"type\": \"AMOUNT\",\n                        \"effect\": \"APPLY_TO_ORDER\",\n                        \"amount_off\": 1000\n                    },\n                    \"redemption\": {\n                        \"quantity\": null,\n                        \"redeemed_quantity\": 0\n                    },\n                    \"code_config\": {\n                        \"length\": 8,\n                        \"prefix\": \"\",\n                        \"charset\": \"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\",\n                        \"pattern\": \"########\",\n                        \"postfix\": \"\"\n                    },\n                    \"is_referral_code\": true\n                },\n                \"referral_program\": {\n                    \"conversion_event_type\": \"redemption\"\n                },\n                \"join_once\": false,\n                \"vouchers_count\": 0,\n                \"active\": true,\n                \"object\": \"campaign\"\n            },\n            \"customer\": {\n                \"id\": \"cust_laSm5Bbd6fzSgVtyKYfGot4L\",\n                \"source_id\": \"test_referrer__01\",\n                \"name\": \"John Doe\",\n                \"description\": null,\n                \"email\": null,\n                \"phone\": null,\n                \"birthday\": null,\n                \"birthdate\": null,\n                \"address\": null,\n                \"summary\": {\n                    \"redemptions\": {\n                        \"total_redeemed\": 0,\n                        \"total_failed\": 0,\n                        \"total_succeeded\": 0,\n                        \"total_rolled_back\": 0,\n                        \"total_rollback_failed\": 0,\n                        \"total_rollback_succeeded\": 0\n                    },\n                    \"orders\": {\n                        \"total_amount\": 0,\n                        \"total_count\": 0,\n                        \"average_amount\": null,\n                        \"last_order_amount\": null\n                    }\n                },\n                \"loyalty\": {\n                    \"points\": 0,\n                    \"referred_customers\": 1,\n                    \"campaigns\": {\n                        \"Referral Webhooks\": {\n                            \"points\": 0,\n                            \"referred_customers\": 1\n                        }\n                    }\n                },\n                \"referrals\": {\n                    \"total\": 0,\n                    \"campaigns\": []\n                },\n                \"metadata\": {\n                    \"test\": true,\n                    \"acq_channel\": \"Twitter\"\n                },\n                \"system_metadata\": {},\n                \"created_at\": \"2021-01-24T11:09:57.749Z\",\n                \"updated_at\": \"2021-01-24T11:19:41.513Z\",\n                \"object\": \"customer\"\n            },\n            \"publication\": {\n                \"id\": \"pub_9Y7nwUx3BaU3cHqBVbd0TEtS2ENiFZhJ\",\n                \"created_at\": \"2021-01-24T11:19:40.317Z\",\n                \"customer_id\": \"cust_laSm5Bbd6fzSgVtyKYfGot4L\",\n                \"customer\": {\n                    \"id\": \"cust_laSm5Bbd6fzSgVtyKYfGot4L\",\n                    \"name\": \"John Doe\",\n                    \"email\": null,\n                    \"source_id\": \"test_referrer__01\",\n                    \"metadata\": {\n                        \"test\": true,\n                        \"acq_channel\": \"Twitter\"\n                    },\n                    \"object\": \"customer\"\n                },\n                \"tracking_id\": \"test_referrer__01\",\n                \"metadata\": {},\n                \"channel\": \"Automation\",\n                \"source_id\": null,\n                \"result\": \"SUCCESS\",\n                \"voucher_code\": \"dOzJ84Ky\",\n                \"vouchers\": [\n                    {\n                        \"id\": \"v_2teI9HcRvdvK1RsWD6gyNztHr4SMkMDy\",\n                        \"code\": \"dOzJ84Ky\",\n                        \"campaign\": \"Bonus Cards\",\n                        \"campaign_id\": \"camp_yheSCBQGrgeBwGMkQqjsUW24\",\n                        \"category\": null,\n                        \"type\": \"GIFT_VOUCHER\",\n                        \"discount\": null,\n                        \"gift\": {\n                            \"amount\": 500,\n                            \"balance\": 500\n                        },\n                        \"loyalty_card\": null,\n                        \"start_date\": null,\n                        \"expiration_date\": null,\n                        \"validity_timeframe\": null,\n                        \"validity_day_of_week\": null,\n                        \"active\": true,\n                        \"additional_info\": null,\n                        \"metadata\": {},\n                        \"assets\": {\n                            \"qr\": {\n                                \"id\": \"U2FsdGVkX1+tdyBGQeM+ZONM/kBdZ\",\n                                \"url\": \"https://dl.voucherify.io/api/v1/assets/qr/U2FsdGVkX1%2BtdyBGQeM%2BZONM%2FkBdZ\"\n                            },\n                            \"barcode\": {\n                                \"id\": \"U2FsdGVkX1+WOEBHpX4y\",\n                                \"url\": \"https://dl.voucherify.io/api/v1/assets/barcode/U2FsdGVkX1%2BWOEBHpX4y\"\n                            }\n                        },\n                        \"is_referral_code\": false,\n                        \"created_at\": \"2021-01-24T11:19:40.409Z\",\n                        \"updated_at\": \"2021-01-24T11:19:41.518Z\",\n                        \"holder_id\": \"cust_laSm5Bbd6fzSgVtyKYfGot4L\",\n                        \"object\": \"voucher\",\n                        \"distributions\": null,\n                        \"publish\": {\n                            \"object\": \"list\",\n                            \"count\": 1,\n                            \"url\": \"/v1/vouchers/dOzJ84Ky/publications?page=1&limit=10\"\n                        },\n                        \"redemption\": {\n                            \"quantity\": 1,\n                            \"redeemed_quantity\": 0,\n                            \"redeemed_amount\": 0,\n                            \"object\": \"list\",\n                            \"url\": \"/v1/vouchers/dOzJ84Ky/redemptions?page=1&limit=10\"\n                        }\n                    }\n                ],\n                \"vouchers_id\": [\n                    \"v_2teI9HcRvdvK1RsWD6gyNztHr4SMkMDy\"\n                ],\n                \"campaign_name\": \"Bonus Cards\",\n                \"gift\": {\n                    \"amount\": 0,\n                    \"balance\": 0\n                },\n                \"loyalty_card\": null,\n                \"discount\": null,\n                \"is_referral_code\": false,\n                \"failure_code\": null,\n                \"failure_message\": null,\n                \"voucher\": null\n            }\n        },\n        \"related_object\": {\n            \"id\": \"evcus_0a26b3e7b718c480ca\",\n            \"type\": \"customer.reward_redemptions.completed\",\n            \"data\": {\n                \"customer\": {\n                    \"id\": \"cust_laSm5Bbd6fzSgVtyKYfGot4L\",\n                    \"name\": \"John Doe\",\n                    \"email\": null,\n                    \"source_id\": \"test_referrer__01\",\n                    \"metadata\": {\n                        \"test\": true,\n                        \"acq_channel\": \"Twitter\"\n                    },\n                    \"object\": \"customer\"\n                },\n                \"holder\": {\n                    \"id\": \"cust_laSm5Bbd6fzSgVtyKYfGot4L\",\n                    \"name\": \"John Doe\",\n                    \"email\": null,\n                    \"source_id\": \"test_referrer__01\",\n                    \"metadata\": {\n                        \"test\": true,\n                        \"acq_channel\": \"Twitter\"\n                    },\n                    \"object\": \"customer\"\n                },\n                \"voucher\": {\n                    \"id\": \"v_ZlNAlSHNgK57ErFgOxAz7swPBPfMBlMp\",\n                    \"code\": \"xYwEheRh\",\n                    \"discount\": {\n                        \"type\": \"AMOUNT\",\n                        \"amount_off\": 1000,\n                        \"effect\": \"APPLY_TO_ORDER\"\n                    },\n                    \"type\": \"DISCOUNT_VOUCHER\",\n                    \"campaign\": \"Referral Webhooks\",\n                    \"campaign_id\": \"camp_UaT2wwkN9zQs3RiIk7H0PcBc\",\n                    \"is_referral_code\": true,\n                    \"holder_id\": \"cust_laSm5Bbd6fzSgVtyKYfGot4L\",\n                    \"referrer_id\": \"cust_laSm5Bbd6fzSgVtyKYfGot4L\"\n                },\n                \"campaign\": {\n                    \"id\": \"camp_UaT2wwkN9zQs3RiIk7H0PcBc\",\n                    \"name\": \"Referral Webhooks\",\n                    \"campaign_type\": \"REFERRAL_PROGRAM\",\n                    \"type\": \"AUTO_UPDATE\",\n                    \"is_referral_code\": true,\n                    \"voucher\": {\n                        \"type\": \"DISCOUNT_VOUCHER\",\n                        \"discount\": {\n                            \"type\": \"AMOUNT\",\n                            \"effect\": \"APPLY_TO_ORDER\",\n                            \"amount_off\": 1000\n                        },\n                        \"redemption\": {\n                            \"quantity\": null,\n                            \"redeemed_quantity\": 0\n                        },\n                        \"code_config\": {\n                            \"length\": 8,\n                            \"prefix\": \"\",\n                            \"charset\": \"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\",\n                            \"pattern\": \"########\",\n                            \"postfix\": \"\"\n                        }\n                    },\n                    \"referral_program\": {\n                        \"conversion_event_type\": \"redemption\"\n                    },\n                    \"auto_join\": null,\n                    \"join_once\": false,\n                    \"active\": true\n                },\n                \"reward_redemption\": {\n                    \"id\": \"rewr_Fuzc1rngCCuKRDfBXBjUwl5j\",\n                    \"state\": \"COMPLETED\",\n                    \"created_at\": \"2021-01-24T11:19:43.883Z\",\n                    \"updated_at\": null,\n                    \"voucher_id\": \"v_ZlNAlSHNgK57ErFgOxAz7swPBPfMBlMp\",\n                    \"campaign_id\": \"camp_UaT2wwkN9zQs3RiIk7H0PcBc\",\n                    \"customer_id\": \"cust_laSm5Bbd6fzSgVtyKYfGot4L\",\n                    \"reward_assignment_id\": \"rewa_9FxFsy0M5UYc8jWjNrlSBWtG\",\n                    \"source_id\": \"event_0a26b3d269013fc79e\",\n                    \"source_type\": \"redemption_event\"\n                },\n                \"reward\": {\n                    \"assignment_id\": \"rewa_9FxFsy0M5UYc8jWjNrlSBWtG\",\n                    \"voucher\": {\n                        \"id\": \"v_2teI9HcRvdvK1RsWD6gyNztHr4SMkMDy\",\n                        \"code\": \"dOzJ84Ky\",\n                        \"gift\": {\n                            \"amount\": 500,\n                            \"balance\": 500\n                        },\n                        \"type\": \"GIFT_VOUCHER\",\n                        \"campaign\": \"Bonus Cards\",\n                        \"campaign_id\": \"camp_yheSCBQGrgeBwGMkQqjsUW24\",\n                        \"is_referral_code\": false,\n                        \"holder_id\": \"cust_laSm5Bbd6fzSgVtyKYfGot4L\"\n                    },\n                    \"id\": \"rew_e5taIjbo05k2vODIJtZ7mGED\",\n                    \"object\": \"reward\",\n                    \"name\": \"Credits - 5$\",\n                    \"type\": \"CAMPAIGN\"\n                },\n                \"reward_assignment\": {\n                    \"id\": \"rewa_9FxFsy0M5UYc8jWjNrlSBWtG\",\n                    \"reward_id\": \"rew_e5taIjbo05k2vODIJtZ7mGED\",\n                    \"related_object_id\": \"rrt_NWk1WYi1sZs3Epjvvd5a9JZx\",\n                    \"related_object_type\": \"referral_tier\",\n                    \"created_at\": \"2021-01-24T11:00:08.471Z\",\n                    \"updated_at\": null,\n                    \"object\": \"reward_assignment\"\n                },\n                \"source\": {\n                    \"id\": \"event_0a26b3d269013fc79e\",\n                    \"type\": \"redemption_event\"\n                },\n                \"balance\": {\n                    \"amount\": 500\n                }\n            },\n            \"created_at\": \"2021-01-24T11:19:49.723Z\"\n        }\n    },\n    \"metadata\": {}\n}\n```\n<!--\ntitle: \"Customer referred\"\nlineNumbers: true\n-->\n```json\n{\n    \"id\": \"event_0a26b3d893cc3ac160\",\n    \"object\": \"event\",\n    \"webhook_id\": null,\n    \"project_id\": \"proj_nXIkFGNmrFSf\",\n    \"created_at\": \"2021-01-24T11:19:41.101Z\",\n    \"type\": \"referee_invited\",\n    \"data\": {\n        \"object\": {\n            \"order\": {},\n            \"campaign\": {\n                \"object\": \"campaign\",\n                \"id\": \"camp_UaT2wwkN9zQs3RiIk7H0PcBc\",\n                \"name\": \"Referral Webhooks\",\n                \"campaign_type\": \"REFERRAL_PROGRAM\",\n                \"type\": \"AUTO_UPDATE\",\n                \"description\": null,\n                \"start_date\": null,\n                \"expiration_date\": null,\n                \"validity_timeframe\": null,\n                \"validity_day_of_week\": null,\n                \"activity_duration_after_publishing\": null,\n                \"vouchers_count\": 0,\n                \"updated_at\": \"2021-01-24T11:09:40.671Z\",\n                \"created_at\": \"2021-01-24T11:00:08.306Z\",\n                \"active\": true,\n                \"metadata\": {},\n                \"vouchers_generation_status\": \"DONE\",\n                \"category\": null,\n                \"voucher\": {\n                    \"type\": \"DISCOUNT_VOUCHER\",\n                    \"discount\": {\n                        \"type\": \"AMOUNT\",\n                        \"effect\": \"APPLY_TO_ORDER\",\n                        \"amount_off\": 1000\n                    },\n                    \"gift\": null,\n                    \"loyalty_card\": null,\n                    \"redemption\": {\n                        \"quantity\": null\n                    },\n                    \"code_config\": {\n                        \"length\": 8,\n                        \"charset\": \"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\",\n                        \"pattern\": \"########\"\n                    }\n                },\n                \"referral_program\": {\n                    \"conversion_event_type\": \"redemption\"\n                },\n                \"lucky_draw\": null\n            },\n            \"customer\": {\n                \"id\": \"cust_BfTxUsoofap6Sb6oxG1BLCi5\",\n                \"source_id\": \"referred_001\",\n                \"name\": null,\n                \"description\": null,\n                \"email\": null,\n                \"phone\": null,\n                \"birthday\": null,\n                \"birthdate\": null,\n                \"address\": null,\n                \"summary\": {\n                    \"redemptions\": {\n                        \"total_redeemed\": 0,\n                        \"total_failed\": 0,\n                        \"total_succeeded\": 0,\n                        \"total_rolled_back\": 0,\n                        \"total_rollback_failed\": 0,\n                        \"total_rollback_succeeded\": 0,\n                        \"gift\": {\n                            \"redeemed_amount\": 0,\n                            \"amount_to_go\": 0\n                        },\n                        \"loyalty_card\": {\n                            \"redeemed_points\": 0,\n                            \"points_to_go\": 0\n                        }\n                    },\n                    \"orders\": {\n                        \"total_amount\": 25000,\n                        \"total_count\": 1,\n                        \"average_amount\": 25000,\n                        \"last_order_amount\": 25000,\n                        \"last_order_date\": \"2021-01-24T11:19:28.598Z\"\n                    }\n                },\n                \"loyalty\": {\n                    \"points\": 0,\n                    \"referred_customers\": 0,\n                    \"campaigns\": {}\n                },\n                \"metadata\": {\n                    \"vip\": true\n                },\n                \"system_metadata\": {},\n                \"created_at\": \"2021-01-24T11:19:27.844Z\",\n                \"updated_at\": \"2021-01-24T11:19:28.926Z\",\n                \"email_unsubscribed\": false,\n                \"referrals\": {\n                    \"total\": 0,\n                    \"campaigns\": []\n                },\n                \"object\": \"customer\"\n            }\n        },\n        \"related_object\": {\n            \"id\": \"event_0a26b3d893cc3ac160\",\n            \"type\": \"customer.referred\",\n            \"created_at\": \"2021-01-24T11:19:34.223Z\",\n            \"data_json\": {\n                \"object\": {\n                    \"id\": \"cust_BfTxUsoofap6Sb6oxG1BLCi5\",\n                    \"source_id\": \"referred_001\",\n                    \"name\": null,\n                    \"description\": null,\n                    \"email\": null,\n                    \"phone\": null,\n                    \"birthday\": null,\n                    \"birthdate\": null,\n                    \"address\": null,\n                    \"summary\": {\n                        \"redemptions\": {\n                            \"total_redeemed\": 0,\n                            \"total_failed\": 0,\n                            \"total_succeeded\": 0,\n                            \"total_rolled_back\": 0,\n                            \"total_rollback_failed\": 0,\n                            \"total_rollback_succeeded\": 0,\n                            \"gift\": {\n                                \"redeemed_amount\": 0,\n                                \"amount_to_go\": 0\n                            },\n                            \"loyalty_card\": {\n                                \"redeemed_points\": 0,\n                                \"points_to_go\": 0\n                            }\n                        },\n                        \"orders\": {\n                            \"total_amount\": 25000,\n                            \"total_count\": 1,\n                            \"average_amount\": 25000,\n                            \"last_order_amount\": 25000,\n                            \"last_order_date\": \"2021-01-24T11:19:28.598Z\"\n                        }\n                    },\n                    \"loyalty\": {\n                        \"points\": 0,\n                        \"referred_customers\": 0,\n                        \"campaigns\": {}\n                    },\n                    \"metadata\": {\n                        \"vip\": true\n                    },\n                    \"system_metadata\": {},\n                    \"created_at\": \"2021-01-24T11:19:27.844Z\",\n                    \"updated_at\": \"2021-01-24T11:19:28.926Z\",\n                    \"email_unsubscribed\": false,\n                    \"referrals\": {\n                        \"total\": 0,\n                        \"campaigns\": []\n                    },\n                    \"object\": \"customer\"\n                },\n                \"previous_attributes\": {},\n                \"related_object\": {}\n            },\n            \"metadata_json\": {\n                \"is_rewarded\": true,\n                \"source\": null\n            },\n            \"automation_id\": null,\n            \"group_id\": \"v-0a26b3d24b032c4871\"\n        }\n    },\n    \"metadata\": {}\n}\n```\n\n### Loyalty Campaign  \n\n<!--\ntitle: \"Loyalty card assigned\"\nlineNumbers: true\n-->\n```json\n{\n    \"id\": \"evcus_0a26b89763051ed721\",\n    \"object\": \"event\",\n    \"webhook_id\": null,\n    \"project_id\": \"proj_nXIkFGNmrFSf\",\n    \"created_at\": \"2021-11-12T11:40:18.125Z\",\n    \"type\": \"loyalty_code_assigned\",\n    \"data\": {\n        \"object\": {\n            \"voucher\": {\n                \"id\": \"v_CGrEQ778F6kLkgktg9xCyzvoMjzTcwbU\",\n                \"code\": \"qjvEslzU\",\n                \"campaign\": \"Loyalty Webhooks\",\n                \"campaign_id\": \"camp_iQgR6PmpF3D5H22OcNcRUU0f\",\n                \"category\": null,\n                \"type\": \"LOYALTY_CARD\",\n                \"discount\": null,\n                \"gift\": null,\n                \"loyalty_card\": {\n                    \"points\": 0,\n                    \"balance\": 0\n                },\n                \"start_date\": null,\n                \"expiration_date\": null,\n                \"validity_timeframe\": null,\n                \"validity_day_of_week\": null,\n                \"active\": true,\n                \"additional_info\": null,\n                \"metadata\": {},\n                \"assets\": {\n                    \"qr\": {\n                        \"id\": \"U2FsdGVkX186jVQjLtmZYQOPrfFKy9deofCfaFP8VhVe0TTOFxTfEp2zjF3mnS3cvUuB3MkpJDNAvMKNJotHJMUla555NQ8ZBFXSW2fAXBiP997Zf/oALLiIGjqo5LTFtedHUTNq5IQ9XgvwgPJBLg==\",\n                        \"url\": \"https://dl.voucherify.io/api/v1/assets/qr/U2FsdGVkX186jVQjLtmZYQOPrfFKy9deofCfaFP8VhVe0TTOFxTfEp2zjF3mnS3cvUuB3MkpJDNAvMKNJotHJMUla555NQ8ZBFXSW2fAXBiP997Zf%2FoALLiIGjqo5LTFtedHUTNq5IQ9XgvwgPJBLg%3D%3D\"\n                    },\n                    \"barcode\": {\n                        \"id\": \"U2FsdGVkX1/ICHe/XvFeZfl2koGimwFH3D4ha4nTSbCzoIdbmxzXYKESU+S0A4SpuuDsMXXotf/AOO1kdii3o99cHExXipCGBlHaduIu64ogx4oyA9w4P3nmkZ2Nv6aLukBaVd969i5Gylp0GW71sA==\",\n                        \"url\": \"https://dl.voucherify.io/api/v1/assets/barcode/U2FsdGVkX1%2FICHe%2FXvFeZfl2koGimwFH3D4ha4nTSbCzoIdbmxzXYKESU%2BS0A4SpuuDsMXXotf%2FAOO1kdii3o99cHExXipCGBlHaduIu64ogx4oyA9w4P3nmkZ2Nv6aLukBaVd969i5Gylp0GW71sA%3D%3D\"\n                    }\n                },\n                \"is_referral_code\": false,\n                \"created_at\": \"2021-11-12T11:40:18.138Z\",\n                \"updated_at\": null,\n                \"holder_id\": \"cust_vfkFOr6pMg3MZAHcd7J8Hch7\",\n                \"redemption\": {\n                    \"quantity\": null,\n                    \"redeemed_quantity\": 0,\n                    \"redeemed_points\": 0,\n                    \"object\": \"list\",\n                    \"url\": \"/v1/vouchers/qjvEslzU/redemptions?page=1&limit=10\"\n                },\n                \"publish\": {\n                    \"object\": \"list\",\n                    \"count\": 1,\n                    \"url\": \"/v1/vouchers/qjvEslzU/publications?page=1&limit=10\"\n                },\n                \"object\": \"voucher\"\n            },\n            \"campaign\": {\n                \"id\": \"camp_iQgR6PmpF3D5H22OcNcRUU0f\",\n                \"name\": \"Loyalty Webhooks\",\n                \"campaign_type\": \"LOYALTY_PROGRAM\",\n                \"type\": \"AUTO_UPDATE\",\n                \"voucher\": {\n                    \"type\": \"LOYALTY_CARD\",\n                    \"discount\": null,\n                    \"gift\": null,\n                    \"loyalty_card\": {\n                        \"points\": 0,\n                        \"balance\": 0\n                    },\n                    \"redemption\": {\n                        \"quantity\": null,\n                        \"redeemed_quantity\": 0\n                    },\n                    \"code_config\": {\n                        \"length\": 8,\n                        \"charset\": \"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\",\n                        \"pattern\": \"########\",\n                        \"prefix\": \"\",\n                        \"postfix\": \"\"\n                    },\n                    \"is_referral_code\": false\n                },\n                \"auto_join\": false,\n                \"join_once\": false,\n                \"use_voucher_metadata_schema\": true,\n                \"vouchers_count\": 0,\n                \"active\": true,\n                \"metadata\": {},\n                \"created_at\": \"2021-11-12T11:39:05.254Z\",\n                \"creation_status\": \"DONE\",\n                \"vouchers_generation_status\": \"DONE\",\n                \"object\": \"campaign\"\n            },\n            \"customer\": {\n                \"id\": \"cust_vfkFOr6pMg3MZAHcd7J8Hch7\",\n                \"source_id\": \"Loyal_customer__01\",\n                \"name\": \"John Doe\",\n                \"description\": null,\n                \"email\": null,\n                \"phone\": null,\n                \"birthday\": null,\n                \"birthdate\": null,\n                \"address\": null,\n                \"summary\": {\n                    \"redemptions\": {\n                        \"total_redeemed\": 0,\n                        \"total_failed\": 0,\n                        \"total_succeeded\": 0,\n                        \"total_rolled_back\": 0,\n                        \"total_rollback_failed\": 0,\n                        \"total_rollback_succeeded\": 0\n                    },\n                    \"orders\": {\n                        \"total_amount\": 0,\n                        \"total_count\": 0,\n                        \"average_amount\": null,\n                        \"last_order_amount\": null\n                    }\n                },\n                \"loyalty\": {\n                    \"points\": 0,\n                    \"referred_customers\": 0,\n                    \"campaigns\": {}\n                },\n                \"referrals\": {\n                    \"total\": 0,\n                    \"campaigns\": []\n                },\n                \"metadata\": {\n                    \"test\": true,\n                    \"acq_channel\": \"Twitter\"\n                },\n                \"system_metadata\": {},\n                \"created_at\": \"2021-11-12T11:40:18.077Z\",\n                \"updated_at\": \"2021-11-12T11:40:19.724Z\",\n                \"object\": \"customer\"\n            },\n            \"publication\": {\n                \"id\": \"pub_ZAS0kZMqzF8LG5y55nx6dHMx2GkVPmxP\",\n                \"object\": \"publication\",\n                \"result\": \"SUCCESS\",\n                \"channel\": \"API\",\n                \"voucher\": {\n                    \"id\": \"v_CGrEQ778F6kLkgktg9xCyzvoMjzTcwbU\",\n                    \"code\": \"qjvEslzU\",\n                    \"gift\": null,\n                    \"type\": \"LOYALTY_CARD\",\n                    \"active\": true,\n                    \"assets\": {\n                        \"qr\": {\n                            \"id\": \"U2FsdGVkX186jVQjLtmZYQOPrfFKy9deofCfaFP8VhVe0TTOFxTfEp2zjF3mnS3cvUuB3MkpJDNAvMKNJotHJMUla555NQ8ZBFXSW2fAXBiP997Zf/oALLiIGjqo5LTFtedHUTNq5IQ9XgvwgPJBLg==\",\n                            \"url\": \"https://dl.voucherify.io/api/v1/assets/qr/U2FsdGVkX186jVQjLtmZYQOPrfFKy9deofCfaFP8VhVe0TTOFxTfEp2zjF3mnS3cvUuB3MkpJDNAvMKNJotHJMUla555NQ8ZBFXSW2fAXBiP997Zf%2FoALLiIGjqo5LTFtedHUTNq5IQ9XgvwgPJBLg%3D%3D\"\n                        },\n                        \"barcode\": {\n                            \"id\": \"U2FsdGVkX1/ICHe/XvFeZfl2koGimwFH3D4ha4nTSbCzoIdbmxzXYKESU+S0A4SpuuDsMXXotf/AOO1kdii3o99cHExXipCGBlHaduIu64ogx4oyA9w4P3nmkZ2Nv6aLukBaVd969i5Gylp0GW71sA==\",\n                            \"url\": \"https://dl.voucherify.io/api/v1/assets/barcode/U2FsdGVkX1%2FICHe%2FXvFeZfl2koGimwFH3D4ha4nTSbCzoIdbmxzXYKESU%2BS0A4SpuuDsMXXotf%2FAOO1kdii3o99cHExXipCGBlHaduIu64ogx4oyA9w4P3nmkZ2Nv6aLukBaVd969i5Gylp0GW71sA%3D%3D\"\n                        }\n                    },\n                    \"object\": \"voucher\",\n                    \"publish\": {\n                        \"url\": \"/v1/vouchers/qjvEslzU/publications?page=1&limit=10\",\n                        \"count\": 1,\n                        \"object\": \"list\"\n                    },\n                    \"campaign\": \"Loyalty Webhooks\",\n                    \"category\": null,\n                    \"discount\": null,\n                    \"metadata\": {},\n                    \"holder_id\": \"cust_vfkFOr6pMg3MZAHcd7J8Hch7\",\n                    \"created_at\": \"2021-11-12T11:40:18.138Z\",\n                    \"redemption\": {\n                        \"url\": \"/v1/vouchers/qjvEslzU/redemptions?page=1&limit=10\",\n                        \"object\": \"list\",\n                        \"quantity\": null,\n                        \"redeemed_points\": 0,\n                        \"redeemed_quantity\": 0\n                    },\n                    \"start_date\": null,\n                    \"updated_at\": null,\n                    \"campaign_id\": \"camp_iQgR6PmpF3D5H22OcNcRUU0f\",\n                    \"loyalty_card\": {\n                        \"points\": 0,\n                        \"balance\": 0\n                    },\n                    \"distributions\": null,\n                    \"additional_info\": null,\n                    \"expiration_date\": null,\n                    \"is_referral_code\": false,\n                    \"validity_timeframe\": null,\n                    \"validity_day_of_week\": null,\n                    \"value\": 0\n                },\n                \"customer\": {\n                    \"id\": \"cust_vfkFOr6pMg3MZAHcd7J8Hch7\",\n                    \"name\": \"John Doe\",\n                    \"email\": null,\n                    \"object\": \"customer\",\n                    \"metadata\": {\n                        \"test\": true,\n                        \"acq_channel\": \"Twitter\"\n                    },\n                    \"source_id\": \"Loyal_customer__01\"\n                },\n                \"metadata\": {},\n                \"source_id\": null,\n                \"created_at\": \"2021-11-12T11:40:18.125Z\",\n                \"customer_id\": \"cust_vfkFOr6pMg3MZAHcd7J8Hch7\",\n                \"tracking_id\": \"Loyal_customer__01\",\n                \"vouchers_id\": [\n                    \"v_CGrEQ778F6kLkgktg9xCyzvoMjzTcwbU\"\n                ]\n            }\n        },\n        \"related_object\": {\n            \"id\": \"evcus_0a26b89763051ed721\",\n            \"type\": \"customer.publication.succeeded\",\n            \"data\": {\n                \"customer\": {\n                    \"id\": \"cust_vfkFOr6pMg3MZAHcd7J8Hch7\",\n                    \"name\": \"John Doe\",\n                    \"email\": null,\n                    \"source_id\": \"Loyal_customer__01\",\n                    \"metadata\": {\n                        \"test\": true,\n                        \"acq_channel\": \"Twitter\"\n                    },\n                    \"object\": \"customer\"\n                },\n                \"campaign\": {\n                    \"id\": \"camp_iQgR6PmpF3D5H22OcNcRUU0f\",\n                    \"name\": \"Loyalty Webhooks\",\n                    \"campaign_type\": \"LOYALTY_PROGRAM\",\n                    \"type\": \"AUTO_UPDATE\",\n                    \"is_referral_code\": false,\n                    \"voucher\": {\n                        \"type\": \"LOYALTY_CARD\",\n                        \"loyalty_card\": {\n                            \"points\": 0,\n                            \"balance\": 0\n                        },\n                        \"redemption\": {\n                            \"quantity\": null,\n                            \"redeemed_quantity\": 0\n                        },\n                        \"code_config\": {\n                            \"length\": 8,\n                            \"prefix\": \"\",\n                            \"charset\": \"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\",\n                            \"pattern\": \"########\",\n                            \"postfix\": \"\"\n                        }\n                    },\n                    \"auto_join\": false,\n                    \"join_once\": false,\n                    \"active\": true\n                },\n                \"publication\": {\n                    \"id\": \"pub_ZAS0kZMqzF8LG5y55nx6dHMx2GkVPmxP\",\n                    \"object\": \"publication\",\n                    \"result\": \"SUCCESS\",\n                    \"channel\": \"API\",\n                    \"voucher\": {\n                        \"id\": \"v_CGrEQ778F6kLkgktg9xCyzvoMjzTcwbU\",\n                        \"code\": \"qjvEslzU\",\n                        \"gift\": null,\n                        \"type\": \"LOYALTY_CARD\",\n                        \"active\": true,\n                        \"assets\": {\n                            \"qr\": {\n                                \"id\": \"U2FsdGVkX186jVQjLtmZYQOPrfFKy9deofCfaFP8VhVe0TTOFxTfEp2zjF3mnS3cvUuB3MkpJDNAvMKNJotHJMUla555NQ8ZBFXSW2fAXBiP997Zf/oALLiIGjqo5LTFtedHUTNq5IQ9XgvwgPJBLg==\",\n                                \"url\": \"https://dl.voucherify.io/api/v1/assets/qr/U2FsdGVkX186jVQjLtmZYQOPrfFKy9deofCfaFP8VhVe0TTOFxTfEp2zjF3mnS3cvUuB3MkpJDNAvMKNJotHJMUla555NQ8ZBFXSW2fAXBiP997Zf%2FoALLiIGjqo5LTFtedHUTNq5IQ9XgvwgPJBLg%3D%3D\"\n                            },\n                            \"barcode\": {\n                                \"id\": \"U2FsdGVkX1/ICHe/XvFeZfl2koGimwFH3D4ha4nTSbCzoIdbmxzXYKESU+S0A4SpuuDsMXXotf/AOO1kdii3o99cHExXipCGBlHaduIu64ogx4oyA9w4P3nmkZ2Nv6aLukBaVd969i5Gylp0GW71sA==\",\n                                \"url\": \"https://dl.voucherify.io/api/v1/assets/barcode/U2FsdGVkX1%2FICHe%2FXvFeZfl2koGimwFH3D4ha4nTSbCzoIdbmxzXYKESU%2BS0A4SpuuDsMXXotf%2FAOO1kdii3o99cHExXipCGBlHaduIu64ogx4oyA9w4P3nmkZ2Nv6aLukBaVd969i5Gylp0GW71sA%3D%3D\"\n                            }\n                        },\n                        \"object\": \"voucher\",\n                        \"publish\": {\n                            \"url\": \"/v1/vouchers/qjvEslzU/publications?page=1&limit=10\",\n                            \"count\": 1,\n                            \"object\": \"list\"\n                        },\n                        \"campaign\": \"Loyalty Webhooks\",\n                        \"category\": null,\n                        \"discount\": null,\n                        \"metadata\": {},\n                        \"holder_id\": \"cust_vfkFOr6pMg3MZAHcd7J8Hch7\",\n                        \"created_at\": \"2021-11-12T11:40:18.138Z\",\n                        \"redemption\": {\n                            \"url\": \"/v1/vouchers/qjvEslzU/redemptions?page=1&limit=10\",\n                            \"object\": \"list\",\n                            \"quantity\": null,\n                            \"redeemed_points\": 0,\n                            \"redeemed_quantity\": 0\n                        },\n                        \"start_date\": null,\n                        \"updated_at\": null,\n                        \"campaign_id\": \"camp_iQgR6PmpF3D5H22OcNcRUU0f\",\n                        \"loyalty_card\": {\n                            \"points\": 0,\n                            \"balance\": 0\n                        },\n                        \"distributions\": null,\n                        \"additional_info\": null,\n                        \"expiration_date\": null,\n                        \"is_referral_code\": false,\n                        \"validity_timeframe\": null,\n                        \"validity_day_of_week\": null\n                    },\n                    \"customer\": {\n                        \"id\": \"cust_vfkFOr6pMg3MZAHcd7J8Hch7\",\n                        \"name\": \"John Doe\",\n                        \"email\": null,\n                        \"object\": \"customer\",\n                        \"metadata\": {\n                            \"test\": true,\n                            \"acq_channel\": \"Twitter\"\n                        },\n                        \"source_id\": \"Loyal_customer__01\"\n                    },\n                    \"metadata\": {},\n                    \"source_id\": null,\n                    \"created_at\": \"2021-11-12T11:40:18.125Z\",\n                    \"customer_id\": \"cust_vfkFOr6pMg3MZAHcd7J8Hch7\",\n                    \"tracking_id\": \"Loyal_customer__01\",\n                    \"vouchers_id\": [\n                        \"v_CGrEQ778F6kLkgktg9xCyzvoMjzTcwbU\"\n                    ]\n                }\n            },\n            \"created_at\": \"2021-11-12T11:40:18.125Z\"\n        }\n    },\n    \"metadata\": {}\n}\n```\n<!--\ntitle: \"Points earned\"\nlineNumbers: true\n-->\n```json\n{\n    \"id\": \"event_0a26b9290fc4891587\",\n    \"object\": \"event\",\n    \"webhook_id\": null,\n    \"project_id\": \"proj_nXIkFGNmrFSf\",\n    \"created_at\": \"2021-11-12T11:42:51.380Z\",\n    \"type\": \"points_earned\",\n    \"data\": {\n        \"object\": {\n            \"order\": {},\n            \"voucher\": {\n                \"id\": \"v_CGrEQ778F6kLkgktg9xCyzvoMjzTcwbU\",\n                \"code\": \"qjvEslzU\",\n                \"campaign\": \"Loyalty Webhooks\",\n                \"campaign_id\": \"camp_iQgR6PmpF3D5H22OcNcRUU0f\",\n                \"category\": null,\n                \"type\": \"LOYALTY_CARD\",\n                \"discount\": null,\n                \"gift\": null,\n                \"loyalty_card\": {\n                    \"points\": 220,\n                    \"balance\": 220\n                },\n                \"start_date\": null,\n                \"expiration_date\": null,\n                \"validity_timeframe\": null,\n                \"validity_day_of_week\": null,\n                \"active\": true,\n                \"additional_info\": null,\n                \"metadata\": {},\n                \"assets\": {\n                    \"qr\": {\n                        \"id\": \"U2FsdGVkX186jVQjLtmZYQOPrfFKy9deofCfaFP8VhVe0TTOFxTfEp2zjF3mnS3cvUuB3MkpJDNAvMKNJotHJMUla555NQ8ZBFXSW2fAXBiP997Zf/oALLiIGjqo5LTFtedHUTNq5IQ9XgvwgPJBLg==\",\n                        \"url\": \"https://dl.voucherify.io/api/v1/assets/qr/U2FsdGVkX186jVQjLtmZYQOPrfFKy9deofCfaFP8VhVe0TTOFxTfEp2zjF3mnS3cvUuB3MkpJDNAvMKNJotHJMUla555NQ8ZBFXSW2fAXBiP997Zf%2FoALLiIGjqo5LTFtedHUTNq5IQ9XgvwgPJBLg%3D%3D\"\n                    },\n                    \"barcode\": {\n                        \"id\": \"U2FsdGVkX1/ICHe/XvFeZfl2koGimwFH3D4ha4nTSbCzoIdbmxzXYKESU+S0A4SpuuDsMXXotf/AOO1kdii3o99cHExXipCGBlHaduIu64ogx4oyA9w4P3nmkZ2Nv6aLukBaVd969i5Gylp0GW71sA==\",\n                        \"url\": \"https://dl.voucherify.io/api/v1/assets/barcode/U2FsdGVkX1%2FICHe%2FXvFeZfl2koGimwFH3D4ha4nTSbCzoIdbmxzXYKESU%2BS0A4SpuuDsMXXotf%2FAOO1kdii3o99cHExXipCGBlHaduIu64ogx4oyA9w4P3nmkZ2Nv6aLukBaVd969i5Gylp0GW71sA%3D%3D\"\n                    }\n                },\n                \"is_referral_code\": false,\n                \"created_at\": \"2021-11-12T11:40:18.138Z\",\n                \"updated_at\": \"2021-11-12T11:42:50.332Z\",\n                \"holder_id\": \"cust_vfkFOr6pMg3MZAHcd7J8Hch7\",\n                \"object\": \"voucher\",\n                \"distributions\": {\n                    \"distr_naR4rx0AgM1baWZkFm1kfHn7A9\": {\n                        \"date\": \"2021-11-12T11:40:21.957Z\"\n                    },\n                    \"distr_pnfPKLDAxUpiPi3ZsuMrygtYNN\": {\n                        \"date\": \"2021-11-12T11:42:50.332Z\"\n                    }\n                },\n                \"publish\": {\n                    \"object\": \"list\",\n                    \"count\": 1,\n                    \"url\": \"/v1/vouchers/qjvEslzU/publications?page=1&limit=10\"\n                },\n                \"redemption\": {\n                    \"quantity\": null,\n                    \"redeemed_quantity\": 0,\n                    \"redeemed_points\": 0,\n                    \"object\": \"list\",\n                    \"url\": \"/v1/vouchers/qjvEslzU/redemptions?page=1&limit=10\"\n                }\n            },\n            \"campaign\": {\n                \"object\": \"campaign\",\n                \"id\": \"camp_iQgR6PmpF3D5H22OcNcRUU0f\",\n                \"name\": \"Loyalty Webhooks\",\n                \"campaign_type\": \"LOYALTY_PROGRAM\",\n                \"type\": \"AUTO_UPDATE\",\n                \"description\": null,\n                \"start_date\": null,\n                \"expiration_date\": null,\n                \"validity_timeframe\": null,\n                \"validity_day_of_week\": null,\n                \"activity_duration_after_publishing\": null,\n                \"vouchers_count\": 0,\n                \"updated_at\": null,\n                \"created_at\": \"2021-11-12T11:39:05.254Z\",\n                \"active\": true,\n                \"metadata\": {},\n                \"vouchers_generation_status\": \"DONE\",\n                \"category\": null,\n                \"voucher\": {\n                    \"type\": \"LOYALTY_CARD\",\n                    \"discount\": null,\n                    \"gift\": null,\n                    \"loyalty_card\": {\n                        \"points\": 0,\n                        \"balance\": 0\n                    },\n                    \"redemption\": {\n                        \"quantity\": null\n                    },\n                    \"code_config\": {\n                        \"length\": 8,\n                        \"charset\": \"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\",\n                        \"pattern\": \"########\"\n                    }\n                },\n                \"referral_program\": null,\n                \"lucky_draw\": null\n            },\n            \"customer\": {\n                \"id\": \"cust_vfkFOr6pMg3MZAHcd7J8Hch7\",\n                \"source_id\": \"Loyal_customer__01\",\n                \"name\": \"John Doe\",\n                \"description\": null,\n                \"email\": null,\n                \"phone\": null,\n                \"birthday\": null,\n                \"birthdate\": null,\n                \"address\": null,\n                \"summary\": {\n                    \"redemptions\": {\n                        \"total_redeemed\": 0,\n                        \"total_failed\": 0,\n                        \"total_succeeded\": 0,\n                        \"total_rolled_back\": 0,\n                        \"total_rollback_failed\": 0,\n                        \"total_rollback_succeeded\": 0,\n                        \"gift\": {\n                            \"redeemed_amount\": 0,\n                            \"amount_to_go\": 0\n                        },\n                        \"loyalty_card\": {\n                            \"redeemed_points\": 0,\n                            \"points_to_go\": 220\n                        }\n                    },\n                    \"orders\": {\n                        \"total_amount\": 22000,\n                        \"total_count\": 1,\n                        \"average_amount\": 22000,\n                        \"last_order_amount\": 22000,\n                        \"last_order_date\": \"2021-11-12T11:42:39.633Z\"\n                    }\n                },\n                \"loyalty\": {\n                    \"points\": 220,\n                    \"referred_customers\": 0,\n                    \"campaigns\": {\n                        \"Loyalty Webhooks\": {\n                            \"points\": 220,\n                            \"referred_customers\": 0\n                        }\n                    }\n                },\n                \"metadata\": {\n                    \"test\": true,\n                    \"acq_channel\": \"Twitter\"\n                },\n                \"system_metadata\": {},\n                \"created_at\": \"2021-11-12T11:40:18.077Z\",\n                \"updated_at\": \"2021-11-12T11:42:47.393Z\",\n                \"email_unsubscribed\": false,\n                \"referrals\": {\n                    \"total\": 0,\n                    \"campaigns\": []\n                },\n                \"object\": \"customer\"\n            }\n        },\n        \"related_object\": {\n            \"id\": \"event_0a26b9290fc4891587\",\n            \"type\": \"customer.rewarded.loyalty_points\",\n            \"created_at\": \"2021-11-12T11:42:47.359Z\",\n            \"data_json\": {\n                \"object\": {\n                    \"id\": \"cust_vfkFOr6pMg3MZAHcd7J8Hch7\",\n                    \"source_id\": \"Loyal_customer__01\",\n                    \"name\": \"John Doe\",\n                    \"description\": null,\n                    \"email\": null,\n                    \"phone\": null,\n                    \"birthday\": null,\n                    \"birthdate\": null,\n                    \"address\": null,\n                    \"summary\": {\n                        \"redemptions\": {\n                            \"total_redeemed\": 0,\n                            \"total_failed\": 0,\n                            \"total_succeeded\": 0,\n                            \"total_rolled_back\": 0,\n                            \"total_rollback_failed\": 0,\n                            \"total_rollback_succeeded\": 0,\n                            \"gift\": {\n                                \"redeemed_amount\": 0,\n                                \"amount_to_go\": 0\n                            },\n                            \"loyalty_card\": {\n                                \"redeemed_points\": 0,\n                                \"points_to_go\": 0\n                            }\n                        },\n                        \"orders\": {\n                            \"total_amount\": 22000,\n                            \"total_count\": 1,\n                            \"average_amount\": 22000,\n                            \"last_order_amount\": 22000,\n                            \"last_order_date\": \"2021-11-12T11:42:39.633Z\"\n                        }\n                    },\n                    \"loyalty\": {\n                        \"points\": 0,\n                        \"referred_customers\": 0,\n                        \"campaigns\": {\n                            \"Loyalty Webhooks\": {\n                                \"points\": 0,\n                                \"referred_customers\": 0\n                            }\n                        }\n                    },\n                    \"metadata\": {\n                        \"test\": true,\n                        \"acq_channel\": \"Twitter\"\n                    },\n                    \"system_metadata\": {},\n                    \"created_at\": \"2021-11-12T11:40:18.077Z\",\n                    \"updated_at\": \"2021-11-12T11:42:40.635Z\",\n                    \"email_unsubscribed\": false,\n                    \"referrals\": {\n                        \"total\": 0,\n                        \"campaigns\": []\n                    },\n                    \"object\": \"customer\"\n                },\n                \"previous_attributes\": {},\n                \"related_object\": {\n                    \"points\": 220,\n                    \"total\": 220,\n                    \"balance\": 220,\n                    \"type\": \"loyalty_card\",\n                    \"object\": \"balance\",\n                    \"related_object\": {\n                        \"type\": \"voucher\",\n                        \"id\": \"v_CGrEQ778F6kLkgktg9xCyzvoMjzTcwbU\"\n                    }\n                },\n                \"balance\": {\n                    \"points\": 220,\n                    \"total\": 220,\n                    \"balance\": 220,\n                    \"type\": \"loyalty_card\",\n                    \"object\": \"balance\",\n                    \"related_object\": {\n                        \"type\": \"voucher\",\n                        \"id\": \"v_CGrEQ778F6kLkgktg9xCyzvoMjzTcwbU\"\n                    }\n                }\n            },\n            \"metadata_json\": {\n                \"source\": \"Automation\"\n            },\n            \"automation_id\": \"auto_McXM3rjWcPwaNU5ndIIP13jX\",\n            \"group_id\": \"v-0a26b921779d7eebcb\"\n        }\n    },\n    \"metadata\": {}\n}\n```\n<!--\ntitle: \"Points redeemed\"\nlineNumbers: true\n-->\n```json  \n{\n    \"id\": \"evcus_0a26bb89060c3ad8bc\",\n    \"object\": \"event\",\n    \"webhook_id\": null,\n    \"project_id\": \"proj_nXIkFGNmrFSf\",\n    \"created_at\": \"2021-11-12T11:53:09.910Z\",\n    \"type\": \"points_redeemed\",\n    \"data\": {\n        \"object\": {\n            \"voucher\": {\n                \"id\": \"v_ix6p7zxM8m7AdlgObubjP2ibDTCsnEkq\",\n                \"code\": \"xUgBLQck\",\n                \"campaign\": \"20% discount\",\n                \"campaign_id\": \"camp_o9vZ7yIqtj5B9CbhJlKRXIZ5\",\n                \"category\": null,\n                \"type\": \"DISCOUNT_VOUCHER\",\n                \"discount\": {\n                    \"type\": \"PERCENT\",\n                    \"amount_limit\": 5000,\n                    \"percent_off\": 20\n                },\n                \"gift\": null,\n                \"loyalty_card\": null,\n                \"start_date\": null,\n                \"expiration_date\": null,\n                \"validity_timeframe\": null,\n                \"validity_day_of_week\": null,\n                \"active\": true,\n                \"additional_info\": null,\n                \"metadata\": {},\n                \"assets\": {\n                    \"qr\": {\n                        \"id\": \"U2FsdGVkX19pNCYXQ8ztNEb+OaYwP13ZoOfOMBJwzgz2RNchFxoMDPIHS47i8tY+oc3HzEpFr2SqITQ/IdD6V7RuYxsyrcfz53Je6+me6VBl9Pze3p8lTSJWwjp79tKEZHygNMggPsfIEi4Ei3Wt1A==\",\n                        \"url\": \"https://dl.voucherify.io/api/v1/assets/qr/U2FsdGVkX19pNCYXQ8ztNEb%2BOaYwP13ZoOfOMBJwzgz2RNchFxoMDPIHS47i8tY%2Boc3HzEpFr2SqITQ%2FIdD6V7RuYxsyrcfz53Je6%2Bme6VBl9Pze3p8lTSJWwjp79tKEZHygNMggPsfIEi4Ei3Wt1A%3D%3D\"\n                    },\n                    \"barcode\": {\n                        \"id\": \"U2FsdGVkX19a0CQqRE3y6dRDn0Jyr74H85dLNo9MQrXRZFBj9fcDUlaV3Q0uG2xa4l4Ch4WVfPGQ3iEEPpYTMQGwm8xN9cynpCv/upu9ZD9iWat6+nlw+PsKH5CcyNemhfI273GhBOvh5ysRMpFUZQ==\",\n                        \"url\": \"https://dl.voucherify.io/api/v1/assets/barcode/U2FsdGVkX19a0CQqRE3y6dRDn0Jyr74H85dLNo9MQrXRZFBj9fcDUlaV3Q0uG2xa4l4Ch4WVfPGQ3iEEPpYTMQGwm8xN9cynpCv%2Fupu9ZD9iWat6%2Bnlw%2BPsKH5CcyNemhfI273GhBOvh5ysRMpFUZQ%3D%3D\"\n                    }\n                },\n                \"is_referral_code\": false,\n                \"created_at\": \"2021-11-12T11:53:03.194Z\",\n                \"updated_at\": null,\n                \"holder_id\": \"cust_vfkFOr6pMg3MZAHcd7J8Hch7\",\n                \"redemption\": {\n                    \"quantity\": 1,\n                    \"redeemed_quantity\": 0,\n                    \"object\": \"list\",\n                    \"url\": \"/v1/vouchers/xUgBLQck/redemptions?page=1&limit=10\"\n                },\n                \"publish\": {\n                    \"object\": \"list\",\n                    \"count\": 1,\n                    \"url\": \"/v1/vouchers/xUgBLQck/publications?page=1&limit=10\"\n                },\n                \"object\": \"voucher\"\n            },\n            \"campaign\": {\n                \"id\": \"camp_iQgR6PmpF3D5H22OcNcRUU0f\",\n                \"name\": \"Loyalty Webhooks\",\n                \"campaign_type\": \"LOYALTY_PROGRAM\",\n                \"type\": \"AUTO_UPDATE\",\n                \"voucher\": {\n                    \"type\": \"LOYALTY_CARD\",\n                    \"loyalty_card\": {\n                        \"points\": 0,\n                        \"balance\": 0\n                    },\n                    \"redemption\": {\n                        \"quantity\": null,\n                        \"redeemed_quantity\": 0\n                    },\n                    \"code_config\": {\n                        \"length\": 8,\n                        \"prefix\": \"\",\n                        \"charset\": \"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\",\n                        \"pattern\": \"########\",\n                        \"postfix\": \"\"\n                    },\n                    \"is_referral_code\": false\n                },\n                \"auto_join\": false,\n                \"join_once\": false,\n                \"vouchers_count\": 0,\n                \"active\": true,\n                \"object\": \"campaign\"\n            },\n            \"customer\": {\n                \"id\": \"cust_vfkFOr6pMg3MZAHcd7J8Hch7\",\n                \"source_id\": \"Loyal_customer__01\",\n                \"name\": \"John Doe\",\n                \"description\": null,\n                \"email\": null,\n                \"phone\": null,\n                \"birthday\": null,\n                \"birthdate\": null,\n                \"address\": null,\n                \"summary\": {\n                    \"redemptions\": {\n                        \"total_redeemed\": 1,\n                        \"total_failed\": 0,\n                        \"total_succeeded\": 1,\n                        \"total_rolled_back\": 0,\n                        \"total_rollback_failed\": 0,\n                        \"total_rollback_succeeded\": 0\n                    },\n                    \"orders\": {\n                        \"total_amount\": 22000,\n                        \"total_count\": 1,\n                        \"average_amount\": 22000,\n                        \"last_order_amount\": 22000,\n                        \"last_order_date\": \"2021-11-12T11:42:39.633Z\"\n                    }\n                },\n                \"loyalty\": {\n                    \"points\": 218,\n                    \"referred_customers\": 0,\n                    \"campaigns\": {\n                        \"Loyalty Webhooks\": {\n                            \"points\": 218,\n                            \"referred_customers\": 0\n                        }\n                    }\n                },\n                \"referrals\": {\n                    \"total\": 0,\n                    \"campaigns\": []\n                },\n                \"metadata\": {\n                    \"test\": true,\n                    \"acq_channel\": \"Twitter\"\n                },\n                \"system_metadata\": {},\n                \"created_at\": \"2021-11-12T11:40:18.077Z\",\n                \"updated_at\": \"2021-11-12T11:53:07.582Z\",\n                \"object\": \"customer\"\n            },\n            \"publication\": {\n                \"id\": \"pub_aFszQ4kOtT1Hori8Wl1i0az1sFQN3CRv\",\n                \"created_at\": \"2021-11-12T11:53:03.172Z\",\n                \"customer_id\": \"cust_vfkFOr6pMg3MZAHcd7J8Hch7\",\n                \"customer\": {\n                    \"id\": \"cust_vfkFOr6pMg3MZAHcd7J8Hch7\",\n                    \"name\": \"John Doe\",\n                    \"email\": null,\n                    \"source_id\": \"Loyal_customer__01\",\n                    \"metadata\": {\n                        \"test\": true,\n                        \"acq_channel\": \"Twitter\"\n                    },\n                    \"object\": \"customer\"\n                },\n                \"tracking_id\": \"Loyal_customer__01\",\n                \"metadata\": {},\n                \"channel\": \"API\",\n                \"source_id\": null,\n                \"result\": \"SUCCESS\",\n                \"voucher_code\": \"xUgBLQck\",\n                \"vouchers\": [\n                    {\n                        \"id\": \"v_ix6p7zxM8m7AdlgObubjP2ibDTCsnEkq\",\n                        \"code\": \"xUgBLQck\",\n                        \"campaign\": \"20% discount\",\n                        \"campaign_id\": \"camp_o9vZ7yIqtj5B9CbhJlKRXIZ5\",\n                        \"category\": null,\n                        \"type\": \"DISCOUNT_VOUCHER\",\n                        \"discount\": {\n                            \"type\": \"PERCENT\",\n                            \"percent_off\": 20,\n                            \"amount_limit\": 5000\n                        },\n                        \"gift\": null,\n                        \"loyalty_card\": null,\n                        \"start_date\": null,\n                        \"expiration_date\": null,\n                        \"validity_timeframe\": null,\n                        \"validity_day_of_week\": null,\n                        \"active\": true,\n                        \"additional_info\": null,\n                        \"metadata\": {},\n                        \"assets\": {\n                            \"qr\": {\n                                \"id\": \"U2FsdGVkX19pNCYXQ8ztNEb+OaYwP13ZoOfOMBJwzgz2RNchFxoMDPIHS47i8tY+oc3HzEpFr2SqITQ/IdD6V7RuYxsyrcfz53Je6+me6VBl9Pze3p8lTSJWwjp79tKEZHygNMggPsfIEi4Ei3Wt1A==\",\n                                \"url\": \"https://dl.voucherify.io/api/v1/assets/qr/U2FsdGVkX19pNCYXQ8ztNEb%2BOaYwP13ZoOfOMBJwzgz2RNchFxoMDPIHS47i8tY%2Boc3HzEpFr2SqITQ%2FIdD6V7RuYxsyrcfz53Je6%2Bme6VBl9Pze3p8lTSJWwjp79tKEZHygNMggPsfIEi4Ei3Wt1A%3D%3D\"\n                            },\n                            \"barcode\": {\n                                \"id\": \"U2FsdGVkX19a0CQqRE3y6dRDn0Jyr74H85dLNo9MQrXRZFBj9fcDUlaV3Q0uG2xa4l4Ch4WVfPGQ3iEEPpYTMQGwm8xN9cynpCv/upu9ZD9iWat6+nlw+PsKH5CcyNemhfI273GhBOvh5ysRMpFUZQ==\",\n                                \"url\": \"https://dl.voucherify.io/api/v1/assets/barcode/U2FsdGVkX19a0CQqRE3y6dRDn0Jyr74H85dLNo9MQrXRZFBj9fcDUlaV3Q0uG2xa4l4Ch4WVfPGQ3iEEPpYTMQGwm8xN9cynpCv%2Fupu9ZD9iWat6%2Bnlw%2BPsKH5CcyNemhfI273GhBOvh5ysRMpFUZQ%3D%3D\"\n                            }\n                        },\n                        \"is_referral_code\": false,\n                        \"created_at\": \"2021-11-12T11:53:03.194Z\",\n                        \"updated_at\": null,\n                        \"holder_id\": \"cust_vfkFOr6pMg3MZAHcd7J8Hch7\",\n                        \"object\": \"voucher\",\n                        \"distributions\": null,\n                        \"publish\": {\n                            \"object\": \"list\",\n                            \"count\": 1,\n                            \"url\": \"/v1/vouchers/xUgBLQck/publications?page=1&limit=10\"\n                        },\n                        \"redemption\": {\n                            \"quantity\": 1,\n                            \"redeemed_quantity\": 0,\n                            \"object\": \"list\",\n                            \"url\": \"/v1/vouchers/xUgBLQck/redemptions?page=1&limit=10\"\n                        }\n                    }\n                ],\n                \"vouchers_id\": [\n                    \"v_ix6p7zxM8m7AdlgObubjP2ibDTCsnEkq\"\n                ],\n                \"campaign_name\": \"20% discount\",\n                \"gift\": null,\n                \"loyalty_card\": null,\n                \"discount\": {\n                    \"type\": \"PERCENT\",\n                    \"percent_off\": 20,\n                    \"amount_limit\": 5000\n                },\n                \"is_referral_code\": false,\n                \"failure_code\": null,\n                \"failure_message\": null,\n                \"voucher\": null\n            }\n        },\n        \"related_object\": {\n            \"id\": \"evcus_0a26bb89060c3ad8bc\",\n            \"type\": \"customer.reward_redemptions.completed\",\n            \"data\": {\n                \"customer\": {\n                    \"id\": \"cust_vfkFOr6pMg3MZAHcd7J8Hch7\",\n                    \"name\": \"John Doe\",\n                    \"email\": null,\n                    \"source_id\": \"Loyal_customer__01\",\n                    \"metadata\": {\n                        \"test\": true,\n                        \"acq_channel\": \"Twitter\"\n                    },\n                    \"object\": \"customer\"\n                },\n                \"holder\": {\n                    \"id\": \"cust_vfkFOr6pMg3MZAHcd7J8Hch7\",\n                    \"name\": \"John Doe\",\n                    \"email\": null,\n                    \"source_id\": \"Loyal_customer__01\",\n                    \"metadata\": {\n                        \"test\": true,\n                        \"acq_channel\": \"Twitter\"\n                    },\n                    \"object\": \"customer\"\n                },\n                \"voucher\": {\n                    \"id\": \"v_CGrEQ778F6kLkgktg9xCyzvoMjzTcwbU\",\n                    \"code\": \"qjvEslzU\",\n                    \"loyalty_card\": {\n                        \"points\": 220,\n                        \"balance\": 218\n                    },\n                    \"type\": \"LOYALTY_CARD\",\n                    \"campaign\": \"Loyalty Webhooks\",\n                    \"campaign_id\": \"camp_iQgR6PmpF3D5H22OcNcRUU0f\",\n                    \"is_referral_code\": false,\n                    \"holder_id\": \"cust_vfkFOr6pMg3MZAHcd7J8Hch7\"\n                },\n                \"campaign\": {\n                    \"id\": \"camp_iQgR6PmpF3D5H22OcNcRUU0f\",\n                    \"name\": \"Loyalty Webhooks\",\n                    \"campaign_type\": \"LOYALTY_PROGRAM\",\n                    \"type\": \"AUTO_UPDATE\",\n                    \"is_referral_code\": false,\n                    \"voucher\": {\n                        \"type\": \"LOYALTY_CARD\",\n                        \"loyalty_card\": {\n                            \"points\": 0,\n                            \"balance\": 0\n                        },\n                        \"redemption\": {\n                            \"quantity\": null,\n                            \"redeemed_quantity\": 0\n                        },\n                        \"code_config\": {\n                            \"length\": 8,\n                            \"prefix\": \"\",\n                            \"charset\": \"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\",\n                            \"pattern\": \"########\",\n                            \"postfix\": \"\"\n                        }\n                    },\n                    \"auto_join\": false,\n                    \"join_once\": false,\n                    \"active\": true\n                },\n                \"reward_redemption\": {\n                    \"id\": \"rewr_uATcoUjIp3VJNgT5TZT5NMaT\",\n                    \"state\": \"COMPLETED\",\n                    \"created_at\": \"2021-11-12T11:53:06.025Z\",\n                    \"updated_at\": null,\n                    \"voucher_id\": \"v_CGrEQ778F6kLkgktg9xCyzvoMjzTcwbU\",\n                    \"campaign_id\": \"camp_iQgR6PmpF3D5H22OcNcRUU0f\",\n                    \"customer_id\": \"cust_vfkFOr6pMg3MZAHcd7J8Hch7\",\n                    \"reward_assignment_id\": \"rewa_bRTNrtAqXmdHNDe4cNg7y3JC\",\n                    \"source_id\": \"r_Lbxqqjv59hCRLG3Nkl8E4yYk\",\n                    \"source_type\": \"redemption\"\n                },\n                \"reward\": {\n                    \"assignment_id\": \"rewa_bRTNrtAqXmdHNDe4cNg7y3JC\",\n                    \"voucher\": {\n                        \"id\": \"v_ix6p7zxM8m7AdlgObubjP2ibDTCsnEkq\",\n                        \"code\": \"xUgBLQck\",\n                        \"discount\": {\n                            \"type\": \"PERCENT\",\n                            \"amount_limit\": 5000,\n                            \"percent_off\": 20\n                        },\n                        \"type\": \"DISCOUNT_VOUCHER\",\n                        \"campaign\": \"20% discount\",\n                        \"campaign_id\": \"camp_o9vZ7yIqtj5B9CbhJlKRXIZ5\",\n                        \"is_referral_code\": false,\n                        \"holder_id\": \"cust_vfkFOr6pMg3MZAHcd7J8Hch7\"\n                    },\n                    \"id\": \"rew_l7z9yeLGZHJgCsxwNX5tDXqs\",\n                    \"object\": \"reward\",\n                    \"name\": \"20% discount\",\n                    \"type\": \"CAMPAIGN\"\n                },\n                \"reward_assignment\": {\n                    \"id\": \"rewa_bRTNrtAqXmdHNDe4cNg7y3JC\",\n                    \"reward_id\": \"rew_l7z9yeLGZHJgCsxwNX5tDXqs\",\n                    \"related_object_id\": \"camp_iQgR6PmpF3D5H22OcNcRUU0f\",\n                    \"related_object_type\": \"campaign\",\n                    \"parameters\": {\n                        \"loyalty\": {\n                            \"points\": 2\n                        }\n                    },\n                    \"created_at\": \"2021-11-12T11:39:05.504Z\",\n                    \"updated_at\": null,\n                    \"object\": \"reward_assignment\"\n                },\n                \"source\": {\n                    \"id\": \"r_Lbxqqjv59hCRLG3Nkl8E4yYk\",\n                    \"type\": \"redemption\"\n                },\n                \"balance\": null\n            },\n            \"created_at\": \"2021-11-12T11:53:09.910Z\"\n        }\n    },\n    \"metadata\": {}\n}\n```",
        "x-tags": [
          "EVENTS API"
        ]
      },
      "15_req_track_custom_event": {
        "title": "Track Custom Event Request Body",
        "type": "object",
        "description": "Request schema for tracking a custom event.",
        "x-tags": [
          "EVENTS API"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "customer": {
            "type": "object"
          },
          "referral": {
            "type": "object"
          },
          "loyalty": {
            "type": "object"
          }
        }
      },
      "16_obj_export_object": {
        "title": "Export Object",
        "type": "object",
        "description": "This is an object representing an export. \n\nThe `/exports` endpoint allows you to retrieve Voucherify objects such as [vouchers](OpenAPI.json/components/schemas/1_obj_voucher_object), [redemptions](OpenAPI.json/components/schemas/7_obj_redemption_object), [publications](OpenAPI.json/components/schemas/5_obj_publication_object), [customers](OpenAPI.json/components/schemas/9_obj_customer_object), and [orders](OpenAPI.json/components/schemas/10_obj_order_object) as a CSV file. This functionality works asynchronously and comes down to the following steps:  \n* create an export object and return its `id` so you can track its `status`\n* trigger a CSV file generation, change the status to `SCHEDULED`\n* when the generation is over, store the file in S3 and change the `status` to `DONE`\n* now you can [get](OpenAPI.json/paths/~1exports~1{export_id}/get) it\n\nWith `parameters` you can select which `fields` will be exported and `filter` out the relevant data\n\n<!--\ntitle: \"Request Body\"\nlineNumbers: true\n-->\n```json\n{\n    \"fields\": [\n        \"code\",\n        \"voucher_type\"\n    ],\n    \"filters\": {\n        \"categories\": {\n            \"conditions\": {\n                \"$in\": [\n                    \"postman\"\n                ]\n            }\n        }\n    }\n}\n```\n\n\n## Fields values\nHere is a list of the fields you can export for particular objects.  \n| **Object** | **Fields** |\n|:---|:---|\n| voucher | code<br>voucher_type<br>value<br>discount_type<br>campaign<br>category<br>start_date<br>expiration_date<br>gift_balance<br>loyalty_balance<br>redemption_quantity<br>redemption_count<br>active<br>qr_code<br>bar_code<br>metadata<br>\"metadata.X\" *where X is a single metadata property*<br>id<br>is_referral_code<br>created_at<br>updated_at<br>validity_timeframe_interval<br>validity_timeframe_duration<br>validity_day_of_week<br>discount_amount_limit<br>campaign_id<br>additional_info<br>customer_id<br>discount_unit_type<br>discount_unit_effect<br>customer_source_id |\n| redemption | object<br>date<br>voucher_code<br>campaign<br>promotion_tier_id<br>customer_id<br>tracking_id<br>order_amount<br>gift_amount<br>loyalty_points<br>result<br>failure_code<br>failure_message<br>metadata<br>\"metadata.X\" *where X is a single metadata property* |\n| publication | voucher_code<br>customer_id<br>date<br>channel<br>campaign<br>metadata<br>is_winner<br>\"metadata.X\" *where X is a single metadata property* |\n| customer | name, id<br>description<br>email<br>source_id<br>created_at<br>address_city<br>address_state<br>address_line_1<br>address_line_2<br>address_country<br>address_postal_code<br>metadata<br>\"metadata.X\" *where X is a single metadata property*<br>redemptions_total_redeemed<br>redemptions_total_failed<br>redemptions_total_succeeded<br>redemptions_total_rolled_back<br>redemptions_total_rollback_failed<br>redemptions_total_rollback_succeeded<br>orders_total_amount<br>orders_total_count<br>orders_average_amount<br>orders_last_order_amount<br>orders_last_order_date<br>loyalty_points<br>loyalty_referred_customers<br>updated_at<br>phone<br>birthdate |\n| order | id<br>source_id<br>status<br>created_at<br>updated_at<br>amount<br>discount_amount<br>items_discount_amount<br>total_discount_amount<br>total_amount<br>customer_id<br>referrer_id |\n| points expiration | id<br>campaign_id<br>voucher_id<br>expires_at<br>points |\n\n\n## Pagination and example request\nVoucherify allows you to specify the timeframe for the records you want to retrieve. Thanks to this mechanism it should be easy to implement a pagination mechanism. See the example of request body: \n\n<!--\ntitle: \"Request body\"\nlineNumbers: true\n-->\n```json\n{\n    \"exported_object\": \"redemption\",\n    \"parameters\": {\n        \"order\": \"-created_at\", // results start from the latest resources, \"created_at\" sorts from the oldest to the newest resources\n        \"fields\": [\n            \"id\",\n            \"object\",\n            \"date\",\n            \"voucher_code\",\n            \"customer_id\",\n            \"result\"\n        ],\n        \"filters\": {\n            \"junction\": \"and\",\n            \"created_at\": {\n                \"conditions\": {\n                    \"$after\": [\n                        \"2018-05-30T22:00:00.000Z\"\n                    ],\n                    \"$before\": [\n                        \"2018-06-29T22:00:00.000Z\"\n                    ]\n                }\n            }\n        }\n    }\n}\n```\n\nAn export request will almost always result in a single file being generated by the system. However, when your volume of data is large, the system may split the results into multiple chunks.",
        "x-tags": [
          "EXPORTS API"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique export ID.",
            "example": "exp_FFfp9o7daWuJqJCKp5xqqli4"
          },
          "object": {
            "type": "string",
            "default": "export",
            "description": "The type of object being represented. This object stores information about the export."
          },
          "created_at": {
            "type": "string",
            "example": "2022-04-28T11:23:20.922Z",
            "description": "Timestamp representing the date and time when the export was scheduled in ISO 8601 format."
          },
          "status": {
            "type": "string",
            "description": "Status of the export. Informs you whether the export has already been completed, i.e. indicates whether the file containing the exported data has been generated.",
            "enum": [
              "SCHEDULED",
              "IN_PROGRESS",
              "DONE",
              "ERROR"
            ]
          },
          "channel": {
            "type": "string",
            "description": "The channel through which the export was triggered.",
            "enum": [
              "API",
              "WEBSITE"
            ]
          },
          "exported_object": {
            "type": "string",
            "description": "The type of exported object.",
            "enum": [
              "order",
              "voucher",
              "publication",
              "redemption",
              "customer",
              "points_expiration"
            ]
          },
          "parameters": {
            "type": "object",
            "description": "List of fields and filters that were passed in the request body to create the export.",
            "properties": {
              "order": {
                "type": "string",
                "description": "How the export was filtered, where the dash `-` preceding a sorting option means sorting in a descending order."
              },
              "fields": {
                "type": "array",
                "description": "Array of strings containing the data that was exported. These fields define the headers in the CSV file.",
                "items": {
                  "type": "object"
                }
              },
              "filters": {
                "type": "object"
              }
            }
          },
          "result": {
            "type": "object",
            "description": "Contains the URL of the CSV file.",
            "properties": {
              "url": {
                "type": "string",
                "description": "URL of the CSV file location. It contains the `token` used for authorization in the [Download export](OpenAPI.json/paths/~1exports~1{exportId}/get) method."
              }
            }
          },
          "user_id": {
            "type": "string",
            "description": "Identifies the specific user who initiated the export through the Voucherify Dashboard; returned when the `channel` value is `WEBSITE`.",
            "example": "user_g24UoRO3Caxu7FCT4n5tpYEa3zUG0FrH"
          }
        }
      },
      "16_res_list_exports_GET": {
        "description": "Response schema for listing exports.",
        "type": "object",
        "x-examples": {
          "example-1": {
            "object": "list",
            "data_ref": "exports",
            "exports": [
              {
                "id": "exp_VWjSy7z7qLc2mlo3NIQrMmVv",
                "object": "export",
                "created_at": "2022-04-25T13:23:42.240Z",
                "status": "DONE",
                "channel": "API",
                "exported_object": "points_expiration",
                "parameters": {
                  "id": "camp_7s3uXI44aKfIk5IhmeOPr6ic",
                  "order": "-expires_at",
                  "fields": [
                    "id",
                    "campaign_id",
                    "voucher_id",
                    "status",
                    "expires_at",
                    "points"
                  ],
                  "filters": {
                    "junction": "and",
                    "campaign_id": {
                      "conditions": {
                        "$in": [
                          "camp_7s3uXI44aKfIk5IhmeOPr6ic"
                        ]
                      }
                    }
                  }
                },
                "result": {
                  "url": "https://dev.download.voucherify.io/v1/exports/exp_VWjSy7z7qLc2mlo3NIQrMmVv?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0ZW5hbnQiOiJzYW11ZWwuamFuaWtAdm91Y2hlcmlmeS5pbyIsImV4cG9ydElkIjoiZXhwX1ZXalN5N3o3cUxjMm1sbzNOSVFyTW1WdiIsImlhdCI6MTY1MDg5MzAyMywiZXhwIjoxNjUwODkzOTIzfQ.ByHDccct_Nra472PExHfQqB4FgvOxkTFbgOmMyMds-M"
                }
              },
              {
                "id": "exp_aRYeS9DF1j131jaDO0HmqjJs",
                "object": "export",
                "created_at": "2022-04-25T10:51:46.731Z",
                "status": "DONE",
                "channel": "API",
                "exported_object": "points_expiration",
                "parameters": {
                  "id": "camp_7s3uXI44aKfIk5IhmeOPr6ic",
                  "order": "-expires_at",
                  "fields": [
                    "id",
                    "campaign_id",
                    "voucher_id",
                    "status",
                    "expires_at",
                    "points"
                  ],
                  "filters": {
                    "junction": "and",
                    "campaign_id": {
                      "conditions": {
                        "$in": [
                          "camp_7s3uXI44aKfIk5IhmeOPr6ic"
                        ]
                      }
                    }
                  }
                },
                "result": {
                  "url": "https://dev.download.voucherify.io/v1/exports/exp_aRYeS9DF1j131jaDO0HmqjJs?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0ZW5hbnQiOiJzYW11ZWwuamFuaWtAdm91Y2hlcmlmeS5pbyIsImV4cG9ydElkIjoiZXhwX2FSWWVTOURGMWoxMzFqYURPMEhtcWpKcyIsImlhdCI6MTY1MDg4MzkwNywiZXhwIjoxNjUwODg0ODA3fQ.I46zb1r48VRlwC5uK3xvaTwDoUtUtZ45-M5Wpzq4iJk"
                }
              }
            ],
            "total": 45
          }
        },
        "title": "List Exports Response Body",
        "properties": {
          "object": {
            "type": "string",
            "description": "The type of object represented by JSON. This object stores information about exports.",
            "default": "list"
          },
          "data_ref": {
            "type": "string",
            "description": "Identifies the name of the attribute that contains the array of exports.",
            "default": "exports"
          },
          "exports": {
            "type": "array",
            "uniqueItems": true,
            "description": "An array of export objects.",
            "items": {
              "$ref": "#/components/schemas/16_obj_export_object"
            }
          },
          "total": {
            "type": "integer",
            "description": "Total number of exports."
          }
        }
      },
      "16_req_create_export_POST": {
        "description": "Request schema for creating an export.",
        "type": "object",
        "x-examples": {
          "example-1": {
            "exported_object": "voucher",
            "parameters": {
              "fields": [
                "code",
                "voucher_type"
              ],
              "filters": {
                "categories": {
                  "conditions": {
                    "$in": [
                      "postman"
                    ]
                  }
                }
              }
            }
          }
        },
        "title": "Create Export Request Body",
        "properties": {
          "exported_object": {
            "type": "string",
            "description": "The type of object to be exported.",
            "enum": [
              "voucher",
              "order",
              "publication",
              "redemption",
              "customer",
              "points_expiration"
            ]
          },
          "parameters": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/16_obj_export_order"
              },
              {
                "$ref": "#/components/schemas/16_obj_export_voucher"
              },
              {
                "$ref": "#/components/schemas/16_obj_export_publication"
              },
              {
                "$ref": "#/components/schemas/16_obj_export_redemption"
              },
              {
                "$ref": "#/components/schemas/16_obj_export_customer"
              },
              {
                "$ref": "#/components/schemas/16_obj_export_points_expiration"
              }
            ]
          }
        }
      },
      "16_obj_export_order": {
        "description": "List of available fields and filters that can be exported with an order.",
        "title": "order",
        "type": "object",
        "properties": {
          "field": {
            "type": "array",
            "enum": [
              [
                "id",
                "source_id",
                "created_at",
                "updated_at",
                "status",
                "amount",
                "discount_amount",
                "items_discount_amount",
                "total_discount_amount",
                "total_amount",
                "customer_id",
                "referrer_id",
                "metadata"
              ]
            ],
            "description": "Array of strings containing the data in the export. These fields define the headers in the CSV file. The array can be a combintation of any of the following available fields:\n\n| **Field** | **Definition** | **Example Export** |\n|:---|:---|:---|\n| id | Unique order ID. | ord_A69RIxEdRsPuC6i8gFGVHUft |\n| source_id | Unique order source ID. | 8638 |\n| created_at | Timestamp in ISO 8601 format representing the date and time when the order was created. | 2022-03-09T09:16:32.521Z |\n| updated_at | Timestamp in ISO 8601 format representing the date and time when the order was last updated. | 2022-03-09T09:16:33.331Z |\n| status | Order status. | `PAID`, `CREATED`, `FULFILLED`, `CANCELED` |\n| amount | Total amount of order items. | 7700 |\n| discount_amount | Represents total amount of the discount applied to whole cart. | 500 |\n| items_discount_amount | Represents total amount of the discount applied to order line items. | 100 |\n| total_discount_amount | All discounts applied to the order including discounts applied to particular order line items and discounts applied to the whole cart. | 600 |\n| total_amount | Total order amount after applying all discounts. | 7100 |\n| customer_id | Customer unique ID. | cust_2G4fUQdCXUqp35nXNleav7bO |\n| referrer_id | Referrer unique ID. | cust_IkrTR674vvQvr9a4rDMiqglY |\n| metadata | Order metadata; expressed as metadata.X, where X is the name of the custom metadata property. | 1 |",
            "items": {
              "type": "string"
            }
          },
          "filters": {
            "type": "object"
          }
        }
      },
      "16_obj_export_voucher": {
        "description": "List of available fields and filters that can be exported with a voucher.",
        "title": "voucher",
        "type": "object",
        "properties": {
          "fields": {
            "type": "array",
            "enum": [
              [
                "code",
                "voucher_type",
                "value",
                "discount_type",
                "campaign",
                "category",
                "start_date",
                "expiration_date",
                "gift_balance",
                "loyalty_balance",
                "redemption_quantity",
                "redemption_count",
                "active",
                "qr_code",
                "bar_code",
                "metadata",
                "id",
                "is_referral_code",
                "created_at",
                "updated_at",
                "validity_timeframe_interval",
                "validity_timeframe_duration",
                "validity_day_of_week",
                "discount_amount_limit",
                "campaign_id",
                "additional_info",
                "customer_id",
                "discount_unit_type",
                "discount_unit_effect",
                "customer_source_id"
              ]
            ],
            "description": "Array of strings containing the data in the export. These fields define the headers in the CSV file. The array can be a combintation of any of the following available fields:\n\n| **Field** | **Definition** | **Example Export** |\n|:---|:---|:---|\n| id | Unique voucher ID. | v_HSnGD2vNIHYighTQxwcB4dtVAv8VOmZD |\n| code | Unique voucher code. | WELCOME100 |\n| voucher_type | Type of voucher. | `DISCOUNT_VOUCHER`, `GIFT_VOUCHER`, `LOYALTY_CARD` |\n| value | Value of voucher. | `DISCOUNT_VOUCHER` : amount, percent, unit<br>`GIFT_VOUCHER`: amount left to spend<br>`LOYALTY_CARD`: available usable points |\n| discount_type | The type of discount for a `DISCOUNT_VOUCHER`. | `AMOUNT`, `PERCENT`, `UNIT`, `FIXED` |\n| campaign | Unique campaign name. | Summer Discounts 20% off |\n| category | Tag defining the category that this voucher belongs to. |  |\n| start_date | Start date defines when the code starts to be active. Activation timestamp in ISO 8601 format. Voucher is _inactive_ before this date. | 2020-12-10T23:00:00.000Z |\n| expiration_date | Expiration date defines when the code expires. Expiration timestamp in ISO 8601 format. Voucher is _inactive_ after this date. | 2023-12-31T23:00:00.000Z |\n| gift_balance | Amount left to spend. | 1000 |\n| loyalty_balance | Available usable points. | 2000 |\n| redemption_quantity | Maximum number of times a voucher can be redeemed. | 2 |\n| redemption_count | Total redemptions. | 59 |\n| active | Boolean indicating whether the voucher is available for use. | `true`, `false` |\n| qr_code | URL to QR representation of encrypted code. |  |\n| bar_code | URL to barcode representation of encrypted code. |  |\n| metadata | Custom voucher metadata. |  |\n| is_referral_code | Boolean indicating whether the voucher is a referral code. | `true`, `false` |\n| created_at | Timestamp in ISO 8601 format representing the date and time when the voucher was created. | 2022-04-14T09:55:46.814Z |\n| updated_at | Timestamp in ISO 8601 format representing the date and time when the voucher was last updated. | 2022-04-14T10:02:18.036Z |\n| validity_timeframe_interval | Defines the intervening time between two time points in ISO 8601 format, expressed as a duration. For example, a voucher with an interval of `P2D` will be active every other day. | P2D |\n| validity_timeframe_duration | Defines the amount of time the voucher will be active in ISO 8601 format. For example, a voucher with a duration of `PT1H` will be valid for a duration of one hour. | PT1H |\n| validity_day_of_week | Array corresponding to the particular days of the week in which the voucher is valid. | \"1,2,3,4,5\" |\n| discount_amount_limit | For `PERCENT` discount type, this is the maximum threshold allowed to be deducted. | 50 |\n| campaign_id | Parent campaign ID. | camp_7s3uXI44aKfIk5IhmeOPr6ic |\n| additional_info | An optional field to keep any extra textual information about the code such as a code description and details. |  |\n| customer_id | Unique customer ID of the assigned owner to whom the voucher was published. | cust_7iUa6ICKyU6gH40dBU25kQU1 |\n| discount_unit_type | For `UNIT` discount type, either a shipping or product ID for a `UNIT` discount with one product. | prod_5h1pp1ng, prod_0a9f9aeddb019a42db |\n| discount_unit_effect | `UNIT` discount effect. | `ADD_MANY_ITEMS`, `ADD_MISSING_ITEMS`,`ADD_NEW_ITEMS` |\n| customer_source_id | Unique customer source id of the assigned owner to whom the voucher was published. | name.lastname@email.com |\n",
            "items": {
              "type": "string"
            }
          },
          "filters": {
            "type": "object"
          }
        }
      },
      "16_obj_export_publication": {
        "description": "List of available fields and filters that can be exported with a publication.",
        "title": "publication",
        "type": "object",
        "properties": {
          "fields": {
            "type": "array",
            "enum": [
              [
                "voucher_code",
                "customer_id",
                "customer_source_id",
                "date",
                "channel",
                "campaign",
                "is_winner",
                "metadata"
              ]
            ],
            "description": "Array of strings containing the data in the export. These fields define the headers in the CSV file. The array can be a combintation of any of the following available fields:\n\n| **Field** | **Definition** | **Example Export** |\n|:---|:---|:---|\n| voucher_code | Unique voucher code. | WELCOME100 |\n| customer_id | Customer unique ID. | cust_7iUa6ICKyU6gH40dBU25kQU1 |\n| customer_source_id | Unique customer source id of the assigned owner to whom the voucher was published. | name.lastname@email.com |\n| date | Timestamp in ISO 8601 format representing the date and time when the voucher was published. | 2022-04-28T10:19:30.792Z |\n| channel | Publication channel. | voucherify-website |\n| campaign | Unique campaign name. | Summer Discounts 20% off |\n| is_winner |  |  |\n| metadata | Custom publication metadata. |  |\n",
            "items": {
              "type": "string"
            }
          },
          "filters": {
            "type": "object"
          }
        }
      },
      "16_obj_export_redemption": {
        "description": "List of available fields and filters that can be exported with a redemption.",
        "title": "redemption",
        "type": "object",
        "properties": {
          "fields": {
            "type": "array",
            "enum": [
              [
                "id",
                "object",
                "date",
                "voucher_code",
                "campaign",
                "promotion_tier_id",
                "customer_id",
                "customer_source_id",
                "customer_name",
                "tracking_id",
                "order_amount",
                "gift_amount",
                "loyalty_points",
                "result",
                "failure_code",
                "failure_message",
                "metadata"
              ]
            ],
            "description": "Array of strings containing the data in the export. These fields define the headers in the CSV file. The array can be a combintation of any of the following available fields:\n\n| **Field** | **Definition** | **Example Export** |\n|:---|:---|:---|\n| id | Unique redemption ID. | r_0acf3a6dae00e679c8, rf_0acf3a495740e679b8 |\n| object | Object being exported; by default `redemption`. | redemption |\n| date | Timestamp in ISO 8601 format representing the date and time when the voucher was redeemed. | 2022-03-23T08:52:24.867Z |\n| voucher_code | Unique voucher code redeemed. | WELCOME100 |\n| campaign | Parent campaign name of voucher if applicable. | Summer Discounts 20% off |\n| promotion_tier_id |  | promo_Mwy9XpA0TLctSGriM5kum0qp |\n| customer_id | Unique customer ID of redeeming customer. | cust_nk0N1uNQ1YnupAoJGOgvsODC |\n| customer_source_id | Unique source ID of redeeming customer. | name.lastname@email.com |\n| customer_name | Customer name. | John Smith |\n| tracking_id |  | track_Pw6r3ejnml43kIwNS4Zj09KZ67xOfLUy |\n| order_amount | Total order amount before applying all discounts. | 1000 |\n| gift_amount | Gift credits used for redemption. | 10 |\n| loyalty_points |  | 12 |\n| result | Tells you whether the redemption succeeded. | `SUCCESS`, `FAILURE` |\n| failure_code | Internal Voucherify code for reason why redemption failed. | invalid_customer |\n| failure_message | A human-readable message providing a short description explaining why the redemption failed. | Customer must be a holder of a loyalty card. |\n| metadata | Custom redemption metadata. |  |",
            "items": {
              "type": "string"
            }
          },
          "filters": {
            "type": "object"
          }
        }
      },
      "16_obj_export_customer": {
        "description": "List of available fields and filters that can be exported with a customer.",
        "title": "customer",
        "type": "object",
        "properties": {
          "fields": {
            "type": "array",
            "enum": [
              [
                "name",
                "id",
                "description",
                "email",
                "source_id",
                "created_at",
                "address_city",
                "address_state",
                "address_line_1",
                "address_line_2",
                "address_country",
                "address_postal_code",
                "redemptions_total_redeemed",
                "redemptions_total_failed",
                "redemptions_total_succeeded",
                "redemptions_total_rolled_back",
                "redemptions_total_rollback_failed",
                "redemptions_total_rollback_succeeded",
                "orders_total_amount",
                "orders_total_count",
                "orders_average_amount",
                "orders_last_order_amount",
                "orders_last_order_date",
                "loyalty_points",
                "loyalty_referred_customers",
                "updated_at",
                "phone",
                "birthday",
                "metadata",
                "birthdate"
              ]
            ],
            "description": "Array of strings containing the data in the export. These fields define the headers in the CSV file. The array can be a combintation of any of the following available fields:\n\n| **Field** | **Definition** | **Example Export** |\n|:---|:---|:---|\n| name | Customer name. | John Smith |\n| id | Unique customer ID. | cust_J1CDUdbqn5Exva8ASWk1Fq0j |\n| description | An arbitrary string that you can attach to a customer object. | Customer requesting to be added to VIP tier. |\n| email | Customer's email. | name.lastname@email.com |\n| source_id | Unique custom customer identifier. | name.lastname@email.com |\n| created_at | Timestamp in ISO 8601 format representing the date and time when the customer was created. | 2022-02-03T13:10:11.928Z |\n| address_city | City | Houston |\n| address_state | State | TX |\n| address_line_1 | First line of customer's address. | 72738 Main St |\n| address_line_2 | Second line of customer's address. | Bld 2, Apt 4 |\n| address_country | Country | United States of America |\n| address_postal_code | Postal code (ZIP code) | 77042-4143 |\n| redemptions_total_redeemed | Total customer redemptions. | 5 |\n| redemptions_total_failed | Total customer failed redemptions. | 2 |\n| redemptions_total_succeeded | Total customer succeeded redemptions. | 3 |\n| redemptions_total_rolled_back | Total customer redemptions that were rolled back. | 3 |\n| redemptions_total_rollback_failed | Total customer redemptions that were unsuccessfully rolled back. | 2 |\n| redemptions_total_rollback_succeeded | Total customer redemptions that were successfully rolled back. | 1 |\n| orders_total_amount | Total sum of order amounts over customer lifetime. Value is multiplied by 100 to precisely represent 2 decimal places. | 10000 (represents $100) |\n| orders_total_count | Total number of customer orders. Value is multiplied by 100 to precisely represent 2 decimal places. | 2 |\n| orders_average_amount | Average amount spent on orders. Value is multiplied by 100 to precisely represent 2 decimal places. | 50 |\n| orders_last_order_amount | How much did the customer spend on their last order. Value is multiplied by 100 to precisely represent 2 decimal places. | 50 |\n| orders_last_order_date | When was the last customer order; timestamp in ISO 8601 format representing the date and time. | 2022-02-03T13:17:30.630Z |\n| loyalty_points |  |  |\n| loyalty_referred_customers | How many customers were referred by this customer. |  |\n| updated_at | Timestamp in ISO 8601 format representing the date and time when the customer was updated. | 2022-02-14T14:10:14.305Z |\n| phone | Customer's phone number. | +1 (294) 752-1846 |\n| ~birthday~ | ~Customer's birthday.~ |  |\n| metadata | Customer metadata. |  |2-04-29 |\n| birthdate | Customer's birthdate. | 2022-04-29",
            "items": {
              "type": "string"
            }
          },
          "filters": {
            "type": "object"
          }
        }
      },
      "16_obj_export_points_expiration": {
        "description": "List of available fields and filters that can be exported with points expirations.",
        "title": "points_expiration",
        "type": "object",
        "properties": {
          "fields": {
            "type": "array",
            "enum": [
              [
                "id",
                "campaign_id",
                "voucher_id",
                "status",
                "expires_at",
                "points"
              ]
            ],
            "description": "Array of strings containing the data in the export. These fields define the headers in the CSV file. The array can be a combintation of any of the following available fields:  \n\n| **Field** | **Definition** | **Example Export** |\n|:---|:---|:---|\n| id | Loyalty points bucket ID. | lopb_Wl1o3EjJIHSNjvO5BDLy4z1n |\n| campaign_id | Campaign ID of the parent loyalty campaign. | camp_7s3uXI44aKfIk5IhmeOPr6ic |\n| voucher_id | Voucher ID of the parent loyalty card. | v_YLn0WVWXSXbUfDvxgrgUbtfJ3SQIY655 |\n| status | Status of the loyalty points bucket. | `ACTIVE` or `INACTIVE` |\n| expires_at | Timestamp in ISO 8601 format representing the date when the points expire. | 2022-06-30 |\n| points | Number of points. | 1000 |",
            "items": {
              "type": "string",
              "enum": [
                "id"
              ]
            }
          },
          "filters": {
            "type": "object",
            "properties": {
              "junction": {
                "type": "string",
                "default": "and"
              },
              "campaign_id": {
                "type": "object",
                "properties": {
                  "conditions": {
                    "type": "object",
                    "description": "A key value pair representing the condition name and value. In this case, this is a pre-defined condition that defines the parent campaign.",
                    "properties": {
                      "$in": {
                        "type": "array",
                        "description": "An array containing the string value of the ",
                        "items": {
                          "type": "string",
                          "example": "[\"camp_7s3uXI44aKfIk5IhmeOPr6ic\"]"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "17_obj_async_action_object": {
        "title": "Async Action Object",
        "type": "object",
        "description": "This is an object representing an asynchronous action.",
        "x-tags": [
          "ASYNC ACTIONS API"
        ],
        "properties": {
          "id": {
            "type": "string",
            "example": "aa_0adad13d6f057f088e",
            "description": "Async action unique ID."
          },
          "type": {
            "type": "string",
            "description": "Type of async action.",
            "enum": [
              "CAMPAIGN.VOUCHERS_IMPORT",
              "CAMPAIGN.VOUCHERS_IMPORT_CSV",
              "CAMPAIGN.VOUCHERS_UPDATE",
              "CAMPAIGN.VOUCHERS_DELETE",
              "CAMPAIGN.VOUCHERS_GENERATE",
              "CUSTOMERS.IMPORT_CSV",
              "CUSTOMERS.BULK_UPDATE",
              "CUSTOMERS.METADATA_UPDATE",
              "CUSTOMERS.METADATA_KEY_PURGE",
              "PRODUCTS.BULK_UPDATE",
              "PRODUCTS.METADATA_UPDATE",
              "PRODUCTS.METADATA_KEY_PURGE",
              "PRODUCTS.IMPORT_CSV",
              "SKUS.IMPORT_CSV",
              "VOUCHERS.IMPORT",
              "VOUCHERS.IMPORT_CSV",
              "VOUCHERS.BULK_UPDATE",
              "VOUCHERS.METADATA_UPDATE",
              "VOUCHERS.METADATA_KEY_PURGE"
            ]
          },
          "status": {
            "type": "string",
            "description": "Status of async action. Informs you whether the async action has already been completed.",
            "enum": [
              "ENQUEUED",
              "IN_PROGRESS",
              "DONE",
              "FAILED"
            ]
          },
          "result": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/17_res_obj_get_async_action_result_campaign_vouchers_import"
              },
              {
                "$ref": "#/components/schemas/17_res_obj_get_async_action_result_campaign_vouchers_import_csv"
              },
              {
                "$ref": "#/components/schemas/17_res_obj_get_async_action_result_campaign_vouchers_update"
              },
              {
                "$ref": "#/components/schemas/17_res_obj_get_async_action_result_campaign_vouchers_delete"
              },
              {
                "$ref": "#/components/schemas/17_res_obj_get_async_action_result_campaign_vouchers_generate"
              },
              {
                "$ref": "#/components/schemas/17_res_obj_get_async_action_result_customers_import_csv"
              },
              {
                "$ref": "#/components/schemas/17_res_obj_get_async_action_result_customers_bulk_update"
              },
              {
                "$ref": "#/components/schemas/17_res_obj_get_async_action_result_customers_metadata_update"
              },
              {
                "$ref": "#/components/schemas/17_res_obj_get_async_action_result_customers_metadata_key_purge"
              },
              {
                "$ref": "#/components/schemas/17_res_obj_get_async_action_result_products_bulk_update"
              },
              {
                "$ref": "#/components/schemas/17_res_obj_get_async_action_result_products_metadata_update"
              },
              {
                "$ref": "#/components/schemas/17_res_obj_get_async_action_result_products_import_csv"
              },
              {
                "$ref": "#/components/schemas/17_res_obj_get_async_action_result_skus_import_csv"
              },
              {
                "$ref": "#/components/schemas/17_res_obj_get_async_action_result_products_metadata_key_purge"
              },
              {
                "$ref": "#/components/schemas/17_res_obj_get_async_action_result_vouchers_import"
              },
              {
                "$ref": "#/components/schemas/17_res_obj_get_async_action_result_vouchers_import_csv"
              },
              {
                "$ref": "#/components/schemas/17_res_obj_get_async_action_result_vouchers_bulk_update"
              },
              {
                "$ref": "#/components/schemas/17_res_obj_get_async_action_result_vouchers_metadata_update"
              },
              {
                "$ref": "#/components/schemas/17_res_obj_get_async_action_result_vouchers_metadata_key_purge"
              }
            ]
          },
          "created_at": {
            "type": "string",
            "description": "Timestamp representing the date and time when the async action was scheduled in ISO 8601 format.",
            "example": "2022-06-23T11:21:45.578Z"
          },
          "updated_at": {
            "type": "string",
            "example": "2022-06-23T11:21:46.795Z",
            "description": "Timestamp representing the date and time when the async action was updated in ISO 8601 format."
          },
          "processing_time": {
            "type": "string",
            "example": "1217",
            "description": "The length of time it took to process the request in milliseconds."
          },
          "request_id": {
            "type": "string",
            "example": "v-0b45cee140c3c9b5ca"
          },
          "object": {
            "type": "string",
            "default": "async_action",
            "description": "The type of object represented by JSON. This object stores information about the async action."
          }
        }
      },
      "17_res_list_async_actions_GET": {
        "description": "Response body schema for listing asynchronous actions.  \n\nThe table below lists the possible types of async actions. The types are different for each endpoint generating the async action.\n\n| **Types by Context** |\n|:---|\n| **CAMPAIGN** |\n| CAMPAIGN.VOUCHERS_IMPORT<br>CAMPAIGN.VOUCHERS_IMPORT_CSV<br>CAMPAIGN.VOUCHERS_UPDATE<br>CAMPAIGN.VOUCHERS_DELETE<br>CAMPAIGN.VOUCHERS_GENERATE |\n| **CUSTOMERS** |\n| CUSTOMERS.IMPORT_CSV<br>CUSTOMERS.BULK_UPDATE<br>CUSTOMERS.METADATA_UPDATE<br>CUSTOMERS.METADATA_KEY_PURGE |\n| **PRODUCTS** |\n| PRODUCTS.BULK_UPDATE<br>PRODUCTS.METADATA_UPDATE<br>PRODUCTS.METADATA_KEY_PURGE<br>PRODUCTS.IMPORT_CSV<br>SKUS.IMPORT_CSV |\n| **VOUCHERS** |\n| VOUCHERS.IMPORT<br>VOUCHERS.IMPORT_CSV<br>VOUCHERS.BULK_UPDATE<br>VOUCHERS.METADATA_UPDATE<br>VOUCHERS.METADATA_KEY_PURGE |",
        "type": "object",
        "x-examples": {
          "example-1": {
            "object": "list",
            "data_ref": "async_actions",
            "async_actions": [
              {
                "id": "aa_0ae2af6a38161f8c79",
                "type": "CAMPAIGN.VOUCHERS_DELETE",
                "status": "DONE",
                "created_at": "2022-04-07T11:34:39.072Z",
                "object": "async_action"
              }
            ]
          }
        },
        "examples": [
          {
            "object": "list",
            "data_ref": "async_actions",
            "async_actions": [
              {
                "id": "aa_0ae2af6a38161f8c79",
                "type": "CAMPAIGN.VOUCHERS_DELETE",
                "status": "DONE",
                "created_at": "2022-04-07T11:34:39.072Z",
                "object": "async_action"
              },
              {
                "id": "aa_0ae27a55b696a4e0f0",
                "type": "CUSTOMERS.BULK_UPDATE",
                "status": "DONE",
                "created_at": "2022-04-07T07:42:44.442Z",
                "object": "async_action"
              },
              {
                "id": "aa_0adad13d6f057f088e",
                "type": "CAMPAIGN.VOUCHERS_IMPORT",
                "status": "DONE",
                "created_at": "2022-04-01T08:54:35.196Z",
                "object": "async_action"
              },
              {
                "id": "aa_0adacc81de057f084c",
                "type": "CAMPAIGN.VOUCHERS_IMPORT",
                "status": "DONE",
                "created_at": "2022-04-01T08:33:54.552Z",
                "object": "async_action"
              }
            ]
          }
        ],
        "title": "List Async Actions Response Body",
        "properties": {
          "object": {
            "type": "string",
            "description": "The type of object represented by JSON. This object stores information about asynchronous actions.",
            "default": "list"
          },
          "data_ref": {
            "type": "string",
            "default": "async_actions",
            "description": "Identifies the name of the JSON property that contains the array of asynchronous actions."
          },
          "async_actions": {
            "type": "array",
            "uniqueItems": false,
            "description": "An array of async actions.",
            "items": {
              "type": "object",
              "additionalProperties": false,
              "description": "Contains an async action definition.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Async action unique ID.",
                  "example": "aa_0ae2af6a38161f8c79"
                },
                "type": {
                  "type": "string",
                  "description": "Type of async action.",
                  "enum": [
                    "CAMPAIGN.VOUCHERS_IMPORT",
                    "CAMPAIGN.VOUCHERS_IMPORT_CSV",
                    "CAMPAIGN.VOUCHERS_UPDATE",
                    "CAMPAIGN.VOUCHERS_DELETE",
                    "CAMPAIGN.VOUCHERS_GENERATE",
                    "CUSTOMERS.IMPORT_CSV",
                    "CUSTOMERS.BULK_UPDATE",
                    "CUSTOMERS.METADATA_UPDATE",
                    "CUSTOMERS.METADATA_KEY_PURGE",
                    "PRODUCTS.BULK_UPDATE",
                    "PRODUCTS.METADATA_UPDATE",
                    "PRODUCTS.METADATA_KEY_PURGE",
                    "PRODUCTS.IMPORT_CSV",
                    "SKUS.IMPORT_CSV",
                    "VOUCHERS.IMPORT",
                    "VOUCHERS.IMPORT_CSV",
                    "VOUCHERS.BULK_UPDATE",
                    "VOUCHERS.METADATA_UPDATE",
                    "VOUCHERS.METADATA_KEY_PURGE"
                  ]
                },
                "status": {
                  "type": "string",
                  "description": "Status of async action. Informs you whether the async action has already been completed.",
                  "enum": [
                    "ENQUEUED",
                    "IN_PROGRESS",
                    "DONE",
                    "FAILED"
                  ]
                },
                "created_at": {
                  "type": "string",
                  "description": "Timestamp representing the date and time when the async action was scheduled in ISO 8601 format.",
                  "example": "2022-04-07T07:42:44.442Z"
                },
                "updated_at": {
                  "type": "string",
                  "description": "Timestamp representing the date and time when the async action was updated in ISO 8601 format.",
                  "example": "2022-06-22T07:58:21.703Z"
                },
                "object": {
                  "type": "string",
                  "default": "async_action",
                  "description": "The type of object represented by each nested object in the JSON `async_actions` array. This object stores information about the async action."
                }
              }
            }
          }
        }
      },
      "17_res_obj_get_async_action_result_message": {
        "title": "Message",
        "type": "object",
        "description": "Result schema with message.",
        "properties": {
          "message": {
            "type": "string",
            "description": "A human-readable message providing a short description about the result."
          }
        }
      },
      "17_res_obj_get_async_action_result_message_failed": {
        "title": "Message with Failed Array",
        "type": "object",
        "description": "Result schema with message and failed array.",
        "properties": {
          "message": {
            "type": "string",
            "description": "A human-readable message providing a short description about the result."
          },
          "failed": {
            "type": "array",
            "description": "If any records failed during the process, this array shows the failure details.",
            "items": {}
          }
        }
      },
      "17_res_obj_get_async_action_result_code_updated_found": {
        "title": "Code Updated and Found",
        "type": "object",
        "description": "Result schema with an array of code, updated, and found parameters.",
        "properties": {
          "results": {
            "type": "array",
            "description": "An array of statuses for each record.",
            "items": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "Unique voucher code."
                },
                "updated": {
                  "type": "boolean",
                  "description": "Indicates whether the record was updated."
                },
                "found": {
                  "type": "boolean",
                  "description": "Indicates whether the record was found."
                }
              }
            }
          }
        }
      },
      "17_res_obj_get_async_action_result_campaign_vouchers_import": {
        "title": "CAMPAIGN.VOUCHERS_IMPORT",
        "type": "object",
        "description": "Result schema for a CAMPAIGN.VOUCHERS_IMPORT async action type.",
        "properties": {
          "message": {
            "type": "string",
            "description": "A human-readable message providing a short description about the result."
          },
          "failed": {
            "type": "array",
            "description": "If any records failed during the process, this array shows the failure details.",
            "items": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "Unique voucher code."
                },
                "reason": {
                  "type": "string",
                  "description": "Detailed failure cause for the voucher code import."
                }
              }
            }
          }
        },
        "examples": []
      },
      "17_res_obj_get_async_action_result_campaign_vouchers_import_csv": {
        "title": "CAMPAIGN.VOUCHERS_IMPORT_CSV",
        "type": "object",
        "description": "Result schema for a CAMPAIGN.VOUCHERS_IMPORT_CSV async action type.",
        "properties": {
          "message": {
            "type": "string",
            "description": "A human-readable message providing a short description about the result."
          },
          "failed": {
            "type": "array",
            "description": "If any records failed during the process, this array shows the failure details.",
            "items": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "Unique voucher code."
                },
                "row": {
                  "type": "integer",
                  "description": "The CSV file row number where the code definition is recorded. The row counter excludes the file headers row."
                },
                "reason": {
                  "type": "string",
                  "description": "Detailed failure cause for the voucher code import."
                }
              }
            }
          }
        }
      },
      "17_res_obj_get_async_action_result_campaign_vouchers_update": {
        "title": "CAMPAIGN.VOUCHERS_UPDATE",
        "type": "object",
        "description": "Result schema for a CAMPAIGN.VOUCHERS_UPDATE async action type.",
        "properties": {
          "message": {
            "type": "string",
            "description": "A human-readable message providing a short description about the result."
          }
        }
      },
      "17_res_obj_get_async_action_result_campaign_vouchers_delete": {
        "title": "CAMPAIGN.VOUCHERS_DELETE",
        "type": "object",
        "description": "Result schema for a CAMPAIGN.VOUCHERS_DELETE async action type.",
        "properties": {
          "message": {
            "type": "string",
            "description": "A human-readable message providing a short description about the result."
          }
        }
      },
      "17_res_obj_get_async_action_result_campaign_vouchers_generate": {
        "title": "CAMPAIGN.VOUCHERS_GENERATE",
        "type": "object",
        "description": "Result schema for a CAMPAIGN.VOUCHERS_GENERATE async action type.",
        "properties": {
          "message": {
            "type": "string",
            "description": "A human-readable message providing a short description about the result."
          }
        }
      },
      "17_res_obj_get_async_action_result_customers_import_csv": {
        "title": "CUSTOMERS.IMPORT_CSV",
        "type": "object",
        "description": "Result schema for a CUSTOMERS.IMPORT_CSV async action type.",
        "properties": {
          "message": {
            "type": "string",
            "description": "A human-readable message providing a short description about the result."
          },
          "failed": {
            "type": "array",
            "description": "If any records failed during the process, this array shows the failure details.",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Customer's name from CSV file."
                },
                "row": {
                  "type": "integer",
                  "description": "The CSV file row number where the customer is recorded. The row counter excludes the file headers row."
                },
                "reason": {
                  "type": "string",
                  "description": "Detailed failure cause for the customer import."
                }
              }
            }
          }
        }
      },
      "17_res_obj_get_async_action_result_customers_bulk_update": {
        "title": "CUSTOMERS.BULK_UPDATE",
        "type": "object",
        "description": "Result schema for a CUSTOMERS.BULK_UPDATE async action type.",
        "properties": {
          "results": {
            "type": "array",
            "description": "An array of statuses for each record.",
            "items": {
              "type": "object",
              "properties": {
                "source_id": {
                  "type": "string",
                  "description": "Unique customer `source_id`."
                },
                "updated": {
                  "type": "boolean",
                  "description": "Indicates whether the record was updated."
                },
                "found": {
                  "type": "boolean",
                  "description": "Indicates whether the record was found."
                }
              }
            }
          }
        }
      },
      "17_res_obj_get_async_action_result_customers_metadata_update": {
        "title": "CUSTOMERS.METADATA_UPDATE",
        "type": "object",
        "description": "Result schema for a CUSTOMERS.METADATA_UPDATE async action type.",
        "properties": {
          "results": {
            "type": "array",
            "description": "An array of statuses for each record.",
            "items": {
              "type": "object",
              "properties": {
                "source_id": {
                  "type": "string",
                  "description": "Unique customer `source_id`."
                },
                "updated": {
                  "type": "boolean",
                  "description": "Indicates whether the record was updated."
                },
                "found": {
                  "type": "boolean",
                  "description": "Indicates whether the record was found."
                }
              }
            }
          }
        }
      },
      "17_res_obj_get_async_action_result_customers_metadata_key_purge": {
        "title": "CUSTOMERS.METADATA_KEY_PURGE",
        "type": "object",
        "description": "Result schema for a CUSTOMERS.METADATA_KEY_PURGE async action type.",
        "properties": {
          "message": {
            "type": "string",
            "description": "A human-readable message providing a short description about the result."
          }
        }
      },
      "17_res_obj_get_async_action_result_products_bulk_update": {
        "title": "PRODUCTS.BULK_UPDATE",
        "type": "object",
        "description": "Result schema for a PRODUCTS.BULK_UPDATE async action type.",
        "properties": {
          "results": {
            "type": "array",
            "description": "An array of statuses for each record.",
            "items": {
              "type": "object",
              "properties": {
                "source_id": {
                  "type": "string",
                  "description": "Unique product `source_id`."
                },
                "updated": {
                  "type": "boolean",
                  "description": "Indicates whether the record was updated."
                },
                "found": {
                  "type": "boolean",
                  "description": "Indicates whether the record was found."
                }
              }
            }
          }
        }
      },
      "17_res_obj_get_async_action_result_products_metadata_update": {
        "title": "PRODUCTS.METADATA_UPDATE",
        "type": "object",
        "description": "Result schema for a PRODUCTS.METADATA_UPDATE async action type.",
        "properties": {
          "results": {
            "type": "array",
            "description": "An array of statuses for each record.",
            "items": {
              "type": "object",
              "properties": {
                "source_id": {
                  "type": "string",
                  "description": "Unique product `source_id`."
                },
                "updated": {
                  "type": "boolean",
                  "description": "Indicates whether the record was updated."
                },
                "found": {
                  "type": "boolean",
                  "description": "Indicates whether the record was found."
                }
              }
            }
          }
        }
      },
      "17_res_obj_get_async_action_result_products_metadata_key_purge": {
        "title": "PRODUCTS.METADATA_KEY_PURGE",
        "type": "object",
        "description": "Result schema for a PRODUCTS.METADATA_KEY_PURGE async action type.",
        "properties": {
          "message": {
            "type": "string",
            "description": "A human-readable message providing a short description about the result."
          }
        }
      },
      "17_res_obj_get_async_action_result_products_import_csv": {
        "title": "PRODUCTS.IMPORT_CSV",
        "type": "object",
        "description": "Result schema for a PRODUCTS.IMPORT_CSV async action type.",
        "properties": {
          "message": {
            "type": "string",
            "description": "A human-readable message providing a short description about the result."
          },
          "failed": {
            "type": "array",
            "description": "If any records failed during the process, this array shows the failure details.",
            "items": {
              "type": "object",
              "description": "Contains the details regarding a CSV file line item failed import.",
              "properties": {
                "row": {
                  "type": "integer",
                  "description": "The CSV file row number where the product definition is recorded. The row counter excludes the file headers row."
                },
                "reason": {
                  "type": "string",
                  "description": "Detailed failure cause for the product import."
                }
              }
            }
          }
        }
      },
      "17_res_obj_get_async_action_result_skus_import_csv": {
        "title": "SKUS.IMPORT_CSV",
        "type": "object",
        "description": "Result schema for a SKUS.IMPORT_CSV async action type.",
        "properties": {
          "message": {
            "type": "string",
            "description": "A human-readable message providing a short description about the result.",
            "example": "2 sku(s) imported successfully, 6 failed."
          },
          "failed": {
            "type": "array",
            "description": "If any records failed during the process, this array shows the failure details.",
            "items": {
              "type": "object",
              "description": "Contains the details regarding a CSV file line item failed import.",
              "properties": {
                "row": {
                  "type": "integer",
                  "description": "The CSV file row number where the SKU definition is recorded. The row counter excludes the file headers row.",
                  "example": 2
                },
                "reason": {
                  "type": "string",
                  "description": "Detailed failure cause for the SKU import.",
                  "example": "Resource sku with id size-small is in use by products with ids [prod_0b0e3441c2462eff2c]"
                }
              }
            }
          }
        }
      },
      "17_res_obj_get_async_action_result_vouchers_import": {
        "title": "VOUCHERS.IMPORT",
        "type": "object",
        "description": "Result schema for a VOUCHERS.IMPORT async action type.",
        "properties": {
          "message": {
            "type": "string",
            "description": "A human-readable message providing a short description about the result."
          },
          "failed": {
            "description": "If any records failed during the process, this array shows the failure details.",
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "description": "Unique voucher code."
              },
              "reason": {
                "type": "string",
                "description": "Detailed failure cause for the voucher code import."
              }
            }
          }
        }
      },
      "17_res_obj_get_async_action_result_vouchers_import_csv": {
        "title": "VOUCHERS.IMPORT_CSV",
        "type": "object",
        "description": "Result schema for a VOUCHERS.IMPORT_CSV async action type.",
        "properties": {
          "message": {
            "type": "string",
            "description": "A human-readable message providing a short description about the result."
          },
          "failed": {
            "type": "array",
            "description": "If any records failed during the process, this array shows the failure details.",
            "items": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "Unique voucher code."
                },
                "row": {
                  "type": "integer",
                  "description": "The CSV file row number where the code definition is recorded. The row counter excludes the file headers row."
                },
                "reason": {
                  "type": "string",
                  "description": "Detailed failure cause for the voucher code import."
                }
              }
            }
          }
        }
      },
      "17_res_obj_get_async_action_result_vouchers_bulk_update": {
        "title": "VOUCHERS.BULK_UPDATE",
        "type": "object",
        "description": "Result schema for a VOUCHERS.BULK_UPDATE async action type.",
        "properties": {
          "results": {
            "type": "array",
            "description": "An array of statuses for each record.",
            "items": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "Unique voucher code."
                },
                "updated": {
                  "type": "boolean",
                  "description": "Indicates whether the record was updated."
                },
                "found": {
                  "type": "boolean",
                  "description": "Indicates whether the record was found."
                }
              }
            }
          }
        }
      },
      "17_res_obj_get_async_action_result_vouchers_metadata_update": {
        "title": "VOUCHERS.METADATA_UPDATE",
        "type": "object",
        "description": "Result schema for a VOUCHERS.METADATA_UPDATE async action type.",
        "properties": {
          "results": {
            "type": "array",
            "description": "An array of statuses for each record.",
            "items": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "Unique voucher code."
                },
                "updated": {
                  "type": "boolean",
                  "description": "Indicates whether the record was updated."
                },
                "found": {
                  "type": "boolean",
                  "description": "Indicates whether the record was found."
                }
              }
            }
          }
        }
      },
      "17_res_obj_get_async_action_result_vouchers_metadata_key_purge": {
        "title": "VOUCHERS.METADATA_KEY_PURGE",
        "type": "object",
        "description": "Result schema for a VOUCHERS.METADATA_KEY_PURGE async action type.",
        "properties": {
          "message": {
            "type": "string",
            "description": "A human-readable message providing a short description about the result."
          }
        }
      },
      "18_res_list_consents_GET": {
        "description": "Response body schema for listing consents.",
        "type": "object",
        "x-examples": {
          "example-1": {
            "groups": {
              "object": "list",
              "data_ref": "data",
              "data": [
                {
                  "id": "cnstgr_3c7Z3rcOLv51bsXlRtTZPYj8",
                  "name": "Consent group",
                  "description": "Consent group",
                  "consents": [
                    "cnst_6jQ5XcUOLnj5L7ImQAdBsJ1I"
                  ],
                  "created_at": "2022-04-13T09:12:47.743Z",
                  "updated_at": null,
                  "object": "consent_group"
                }
              ],
              "total": 1
            },
            "consents": {
              "object": "list",
              "data_ref": "data",
              "data": [
                {
                  "id": "cnst_6jQ5XcUOLnj5L7ImQAdBsJ1I",
                  "name": "Consent",
                  "description": "Consent for marketing",
                  "category": "New",
                  "created_at": "2022-04-13T09:11:27.037Z",
                  "updated_at": null,
                  "object": "consent"
                }
              ],
              "total": 1
            }
          }
        },
        "examples": [
          {
            "groups": {
              "object": "list",
              "data_ref": "data",
              "data": [
                {
                  "id": "cnstgr_3c7Z3rcOLv51bsXlRtTZPYj8",
                  "name": "Consent group",
                  "description": "Consent group",
                  "consents": [
                    "cnst_6jQ5XcUOLnj5L7ImQAdBsJ1I",
                    "cnst_VCmucIvAsmDYw2PPAok6bcYy"
                  ],
                  "created_at": "2022-04-13T09:12:47.743Z",
                  "updated_at": "2022-04-13T09:45:46.616Z",
                  "object": "consent_group"
                },
                {
                  "id": "cnstgr_EAIakTj5lNG2ZpiQEauGqBlY",
                  "name": "Consent group 2",
                  "description": "Consent group 2",
                  "consents": [
                    "cnst_6jQ5XcUOLnj5L7ImQAdBsJ1I",
                    "cnst_VCmucIvAsmDYw2PPAok6bcYy"
                  ],
                  "created_at": "2022-04-13T10:03:46.564Z",
                  "updated_at": null,
                  "object": "consent_group"
                }
              ],
              "total": 2
            },
            "consents": {
              "object": "list",
              "data_ref": "data",
              "data": [
                {
                  "id": "cnst_6jQ5XcUOLnj5L7ImQAdBsJ1I",
                  "name": "Consent",
                  "description": "Consent for marketing",
                  "category": "New",
                  "created_at": "2022-04-13T09:11:27.037Z",
                  "updated_at": null,
                  "object": "consent"
                },
                {
                  "id": "cnst_VCmucIvAsmDYw2PPAok6bcYy",
                  "name": "Consent 2",
                  "description": "Consent 2",
                  "category": "Trial",
                  "created_at": "2022-04-13T09:45:37.597Z",
                  "updated_at": null,
                  "object": "consent"
                }
              ],
              "total": 2
            }
          }
        ],
        "title": "List Consents Response Body",
        "properties": {
          "groups": {
            "type": "object",
            "description": "Contains marketing permission groups' definitions.",
            "properties": {
              "object": {
                "type": "string",
                "default": "list",
                "description": "Stores information about marketing permission groups."
              },
              "data_ref": {
                "type": "string",
                "default": "data",
                "description": "Identifies the name of the attribute that contains the array of marketing permission groups."
              },
              "data": {
                "type": "array",
                "uniqueItems": false,
                "description": "An array of marketing permission groups.",
                "items": {
                  "type": "object",
                  "additionalProperties": false,
                  "description": "Contains a marketing permission group's definition.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "cnstgr_3c7Z3rcOLv51bsXlRtTZPYj8",
                      "description": "Unique group ID."
                    },
                    "name": {
                      "type": "string",
                      "description": "Marketing permission group name."
                    },
                    "description": {
                      "type": "string",
                      "description": "Marketing permission group category."
                    },
                    "consents": {
                      "type": "array",
                      "description": "List of consents that are assigned to the group.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-04-13T09:12:47.743Z",
                      "description": "Timestamp representing the date and time when the group was created in ISO 8601 format."
                    },
                    "updated_at": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "format": "date-time",
                      "example": "2022-05-14T09:11:27.037Z",
                      "description": "Timestamp representing the date and time when the group was updated in ISO 8601 format."
                    },
                    "object": {
                      "type": "string",
                      "default": "consent_group",
                      "description": "Stores information about a marketing permission group."
                    }
                  }
                }
              },
              "total": {
                "type": "integer",
                "description": "Total number of groups."
              }
            }
          },
          "consents": {
            "type": "object",
            "description": "Contains opt-in consents' definitions.",
            "properties": {
              "object": {
                "type": "string",
                "default": "list",
                "description": "Stores information about opt-in consents."
              },
              "data_ref": {
                "type": "string",
                "default": "data",
                "description": "Identifies the name of the attribute that contains the array of opt-in consents."
              },
              "data": {
                "type": "array",
                "uniqueItems": false,
                "description": "An array of consents.",
                "items": {
                  "type": "object",
                  "additionalProperties": false,
                  "description": "Contains an opt-in consent definition.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "cnst_6jQ5XcUOLnj5L7ImQAdBsJ1I",
                      "description": "Unique consent ID."
                    },
                    "name": {
                      "type": "string",
                      "description": "Consent name."
                    },
                    "description": {
                      "type": "string",
                      "description": "Consent description."
                    },
                    "category": {
                      "type": "string",
                      "description": "Consent category."
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-04-13T09:11:27.037Z",
                      "description": "Timestamp representing the date and time when the consent was created in ISO 8601 format."
                    },
                    "updated_at": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "format": "date-time",
                      "example": "2022-05-14T09:11:27.037Z",
                      "description": "Timestamp representing the date and time when the consent was updated in ISO 8601 format."
                    },
                    "object": {
                      "type": "string",
                      "default": "consent",
                      "description": "Stores information about an opt-in consent."
                    }
                  }
                }
              },
              "total": {
                "type": "integer",
                "description": "Total number of consents."
              }
            }
          }
        }
      },
      "20_res_categories_GET": {
        "type": "object",
        "x-examples": {
          "example-1": {
            "object": "list",
            "data_ref": "data",
            "data": [
              {
                "id": "cat_0b5f49fb31c3bf6ab0",
                "name": "Sixth",
                "hierarchy": 6,
                "created_at": "2022-07-13T06:21:36.852Z",
                "object": "category"
              },
              {
                "id": "cat_0b5f49e6e1ce5bd2ba",
                "name": "Fifth",
                "hierarchy": 5,
                "created_at": "2022-07-13T06:21:16.039Z",
                "object": "category"
              },
              {
                "id": "cat_0b5f49deafce5bd2b5",
                "name": "Fourth",
                "hierarchy": 4,
                "created_at": "2022-07-13T06:21:07.662Z",
                "object": "category"
              },
              {
                "id": "cat_0b5f49d45c43bf6a99",
                "name": "Third",
                "hierarchy": 3,
                "created_at": "2022-07-13T06:20:57.094Z",
                "object": "category"
              },
              {
                "id": "cat_0b5f3f9881ce5bccb6",
                "name": "Second",
                "hierarchy": 2,
                "created_at": "2022-07-13T05:36:14.355Z",
                "object": "category"
              },
              {
                "id": "cat_0b53bc388dc2f108ba",
                "name": "First",
                "hierarchy": 1,
                "created_at": "2022-07-04T06:58:57.734Z",
                "object": "category"
              }
            ],
            "total": 6
          }
        },
        "title": "List Categories Response Body",
        "description": "Response schema for **GET** `/categories`.",
        "properties": {
          "object": {
            "type": "string",
            "default": "list",
            "description": "The type of object represented by JSON. This object stores information about categories in a dictionary."
          },
          "data_ref": {
            "type": "string",
            "description": "Identifies the name of the attribute that contains the array of category objects.",
            "default": "data"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/20_obj_category_object"
            }
          },
          "total": {
            "type": "integer",
            "description": "Total number of categories."
          }
        }
      },
      "20_obj_category_object": {
        "type": "object",
        "x-examples": {
          "example-1": {
            "id": "cat_0b5f49fb31c3bf6ab0",
            "name": "Sixth",
            "hierarchy": 6,
            "created_at": "2022-07-13T06:21:36.852Z",
            "updated_at": "2022-08-16T11:03:54.727Z",
            "object": "category"
          }
        },
        "title": "Category Object",
        "description": "This is an object representing a category.",
        "x-tags": [
          "CATEGORIES API"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique category ID assigned by Voucherify."
          },
          "name": {
            "type": "string",
            "description": "Category name."
          },
          "hierarchy": {
            "type": "string",
            "description": "Category hierarchy."
          },
          "created_at": {
            "type": "string",
            "description": "Timestamp representing the date and time when the category was created in ISO 8601 format.",
            "example": "2022-07-14T10:45:13.156Z"
          },
          "updated_at": {
            "type": "string",
            "example": "2022-08-16T10:52:08.094Z",
            "description": "Timestamp representing the date and time when the category was updated in ISO 8601 format."
          },
          "object": {
            "type": "string",
            "default": "category",
            "description": "The type of object represented by the JSON. This object stores information about the category."
          }
        }
      },
      "20_req_categories_categoryId_PUT": {
        "type": "object",
        "x-examples": {
          "example-1": {
            "name": "Sixth",
            "hierarchy": 6
          }
        },
        "title": "Update Category Request Body",
        "description": "Request schema for updating a category using **PUT** `/categories/{categoryID}`.",
        "x-tags": [
          "CATEGORIES API"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Category name."
          },
          "hierarchy": {
            "type": "integer",
            "description": "Category hierarchy."
          }
        },
        "required": [
          "name",
          "hierarchy"
        ]
      },
      "20_req_categories_POST": {
        "type": "object",
        "x-examples": {
          "example-1": {
            "name": "Sixth",
            "hierarchy": 6
          }
        },
        "title": "Update Category Request Body",
        "description": "Request schema for updating a category using **POST** `/categories`.",
        "x-tags": [
          "CATEGORIES API"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Category name."
          },
          "hierarchy": {
            "type": "integer",
            "description": "Category hierarchy."
          }
        },
        "required": [
          "name",
          "hierarchy"
        ]
      },
      "20_res_categories_POST_category_object": {
        "type": "object",
        "x-examples": {
          "example-1": {
            "id": "cat_0b5f49fb31c3bf6ab0",
            "name": "Sixth",
            "hierarchy": 6,
            "created_at": "2022-07-13T06:21:36.852Z",
            "updated_at": "2022-08-16T11:03:54.727Z",
            "object": "category"
          }
        },
        "title": "Category Object",
        "description": "This is an object representing a newly created category.",
        "x-tags": [
          "CATEGORIES API"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique category ID assigned by Voucherify."
          },
          "name": {
            "type": "string",
            "description": "Category name."
          },
          "hierarchy": {
            "type": "string",
            "description": "Category hierarchy."
          },
          "created_at": {
            "type": "string",
            "description": "Timestamp representing the date and time when the category was created in ISO 8601 format.",
            "example": "2022-07-14T10:45:13.156Z"
          },
          "object": {
            "type": "string",
            "default": "category",
            "description": "The type of object represented by the JSON. This object stores information about the category."
          }
        }
      },
      "21_obj_metadata_schema_object": {
        "type": "object",
        "x-examples": {
          "example-1": {
            "id": "cat_0b5f49fb31c3bf6ab0",
            "name": "Sixth",
            "hierarchy": 6,
            "created_at": "2022-07-13T06:21:36.852Z",
            "updated_at": "2022-08-16T11:03:54.727Z",
            "object": "category"
          }
        },
        "title": "Metadata Schema Object",
        "description": "This is an object representing a metadata schema.",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique metadata schema ID.",
            "example": "ms_OF36L2rk4EqhdxvZs56IW9iE"
          },
          "related_object": {
            "type": "string",
            "description": "The resource type.There is an infinite number of possibilities for the resource type because you can define custom metadata schemas. Some examples are included here to show you the standard metadata schema resource types.",
            "enum": [
              "campaign",
              "customer",
              "earning_rule",
              "loyalty_tier",
              "order",
              "order_item",
              "product",
              "promotion_tier",
              "publication",
              "redemption",
              "reward",
              "voucher"
            ]
          },
          "properties": {
            "description": "Contains the metadata definitions. There can be many properties within this object.",
            "anyOf": [
              {
                "properties": {
                  "custom_property_name": {
                    "type": "object",
                    "description": "Custom property name. This is defined in **Project Settings** > **Metadata Schema** in the Dashboard.",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "string",
                          "number",
                          "object",
                          "date",
                          "datetime",
                          "geopoint",
                          "boolean",
                          "image_url"
                        ]
                      },
                      "array": {
                        "type": "boolean",
                        "description": "Indicates whether the definition is an array."
                      },
                      "optional": {
                        "type": "boolean",
                        "description": "Indicates whether this definition is optional or not optional for the resource."
                      },
                      "objectType": {
                        "type": [
                          "string",
                          "null"
                        ],
                        "description": "Returns the name of the custom resource if the resource was previously defined in the Dashboard as a custom (non-standard) Nested object."
                      },
                      "eq": {
                        "type": "array",
                        "description": "Array of possible values when the setting for `is equal to any of` in the Dashboard is defined explicitly.",
                        "items": {}
                      },
                      "ne": {
                        "type": "array",
                        "description": "Array of values that are not allowed when the setting for `is not equal to any of` in the Dashboard is defined explicitly.",
                        "items": {}
                      },
                      "lt": {
                        "type": "integer",
                        "description": "A property of `number` type must have `less than` this value."
                      },
                      "lte": {
                        "type": "integer",
                        "description": "A property of `number` type must be `less than or equal` to this value."
                      },
                      "gt": {
                        "type": "integer",
                        "description": "A property of `number` type must be `greater than` this value."
                      },
                      "gte": {
                        "type": "integer",
                        "description": "A property of `number` type must be `greater than or equal` to this value."
                      },
                      "deleted": {
                        "type": "boolean",
                        "description": "Indicates whether the definition was deleted from the schema."
                      },
                      "maxLength": {
                        "type": "integer",
                        "description": "Value for maximum length when the setting for `has maximum length of` in the Dashboard is defined explicitly."
                      },
                      "minLength": {
                        "type": "integer",
                        "description": "Value indicating minimum length when the setting for `has minimum length of` in the Dashboard is defined explicitly."
                      },
                      "exactLength": {
                        "type": "integer",
                        "description": "Value indicating exact length when the setting for `has exact length of` in the Dashboard is defined explicitly."
                      }
                    }
                  }
                }
              }
            ],
            "type": "object"
          },
          "allow_defined_only": {
            "type": "boolean",
            "description": "Restricts the creation of metadata fields when set to `true`. In other words, it indicates whether or not you are allowed to create new metadata definitions; for example, in the campaign manager or publication manager. If it is set to true, then only the defined fields will be available for assigning values.\t"
          },
          "created_at": {
            "type": "string",
            "example": "2021-12-03T13:33:44.556Z",
            "description": "Timestamp representing the date and time when the metadata schema was created in ISO 8601 format.\t"
          },
          "updated_at": {
            "type": "string",
            "example": "2022-08-11T08:05:30.695Z",
            "description": "Timestamp representing the date and time when the metadata schema was updated in ISO 8601 format.\t"
          },
          "object": {
            "type": "string",
            "default": "metadata_schema",
            "description": "The type of object represented by the JSON. This object stores information about the metadata schema."
          }
        },
        "x-tags": [
          "METADATA SCHEMAS API"
        ]
      },
      "21_res_metadata_shemas_GET": {
        "title": "List Metadata Schemas Response Body",
        "x-stoplight": {
          "id": "7hvc5vsbds9of"
        },
        "type": "object",
        "description": "Response schema for listing metadata schemas using **GET** `/metadata-schemas`.",
        "properties": {
          "object": {
            "type": "string",
            "description": "The type of object represented by JSON. This object stores information about metadata schemas in a dictionary.",
            "default": "list"
          },
          "data_ref": {
            "type": "string",
            "description": "Identifies the name of the attribute that contains the array of metadata schema objects.",
            "default": "schemas"
          },
          "schemas": {
            "type": "array",
            "description": "Array of metadata schema objects.",
            "items": {
              "$ref": "#/components/schemas/21_obj_metadata_schema_object"
            }
          },
          "total": {
            "type": "string",
            "description": "Total number of metadata schemas."
          }
        }
      },
      "a_req_importCSV": {
        "type": "object",
        "title": "Import CSV file",
        "description": "Request body schema for importing data using a CSV file.",
        "format": "binary",
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "description": "The property name 'file' will be used for the file path."
          }
        },
        "required": [
          "file"
        ]
      },
      "a_res_async_actions": {
        "type": "object",
        "title": "Asynchronous Actions",
        "description": "Response to requests that are processed asynchronously.",
        "additionalProperties": false,
        "examples": [
          {
            "async_action_id": "aa_0a875d56c805df6601"
          }
        ],
        "properties": {
          "async_action_id": {
            "type": "string",
            "example": "aa_0a875d56c805df6601",
            "description": "The ID of the scheduled asynchronous action."
          }
        }
      },
      "error": {
        "title": "error",
        "type": "object",
        "properties": {},
        "discriminator": {
          "propertyName": "key",
          "mapping": {
            "not_enough_codes": "not_enough_codes"
          }
        },
        "description": "Short error response",
        "examples": []
      },
      "e_error": {
        "title": "Error Object",
        "type": "object",
        "description": "Error details",
        "properties": {
          "code": {
            "type": "integer",
            "description": "Error's HTTP status code."
          },
          "key": {
            "type": "string",
            "description": "Short string describing the kind of error which occurred."
          },
          "message": {
            "type": "string",
            "description": "A human-readable message providing a short description about the error."
          },
          "details": {
            "type": "string",
            "description": "A human-readable message providing more details about the error."
          },
          "request_id": {
            "type": "string",
            "example": "v-0a885062c80375740f"
          },
          "error": {
            "type": "object",
            "description": "Contains custom user-defined error message translation.",
            "properties": {
              "message": {
                "type": "string",
                "description": "Error message translation defined in Dashboard &rarr; Project Settings &rarr; Error Messages"
              }
            }
          }
        }
      },
      "e_error_no_translation": {
        "title": "Error Object",
        "type": "object",
        "description": "Error details",
        "properties": {
          "code": {
            "type": "integer",
            "description": "Error's HTTP status code."
          },
          "key": {
            "type": "string",
            "description": "Short string describing the kind of error which occurred."
          },
          "message": {
            "type": "string",
            "description": "A human-readable message providing a short description about the error."
          },
          "details": {
            "type": "string",
            "description": "A human-readable message providing more details about the error."
          },
          "request_id": {
            "type": "string",
            "example": "v-0a885062c80375740f"
          }
        }
      },
      "e_400_missing_param": {
        "description": "Error: Bad Request &rarr; Missing Parameters",
        "type": "object",
        "x-examples": {
          "example-1": {
            "code": 400,
            "key": "missing_param",
            "message": "Missing required parameter",
            "details": "Parameter 'custom_event.schema_id' is required",
            "request_id": "v-0a96c19b1a41c03999"
          }
        },
        "title": "Missing Parameters",
        "properties": {
          "code": {
            "type": "integer",
            "default": 400,
            "description": "Error's HTTP status code."
          },
          "key": {
            "type": "string",
            "default": "missing_param",
            "description": "Short string describing the kind of error which occurred."
          },
          "message": {
            "type": "string",
            "default": "Missing required parameter",
            "description": "A human-readable message providing a short description about the error."
          },
          "details": {
            "type": "string",
            "example": "Parameter 'custom_event.schema_id' is required",
            "description": "A human-readable message providing more details about the error."
          },
          "request_id": {
            "type": "string",
            "example": "v-0a96c19b1a41c03999"
          }
        }
      },
      "e_400_not_enough_source_ids": {
        "description": "Error: Bad Request &rarr; Missing Parameters",
        "type": "object",
        "x-examples": {
          "example-1": {
            "code": 400,
            "key": "missing_param",
            "message": "Missing required parameter",
            "details": "Parameter 'custom_event.schema_id' is required",
            "request_id": "v-0a96c19b1a41c03999"
          }
        },
        "title": "Not Enough Source ID's",
        "properties": {
          "code": {
            "type": "integer",
            "default": 400,
            "description": "Error's HTTP status code."
          },
          "key": {
            "type": "string",
            "default": "not_enought_source_ids",
            "description": "Short string describing the kind of error which occurred."
          },
          "message": {
            "type": "string",
            "default": "Not enough source_ids",
            "description": "A human-readable message providing a short description about the error."
          },
          "details": {
            "type": "string",
            "example": "Specify at least 1 source_id",
            "description": "A human-readable message providing more details about the error."
          },
          "request_id": {
            "type": "string",
            "example": "v-0a96c19b1a41c03999"
          }
        }
      },
      "e_400_invalid_payload": {
        "title": "Invalid Payload",
        "type": "object",
        "description": "Error: Bad Request &rarr; Invalid Payload",
        "properties": {
          "code": {
            "type": "integer",
            "default": 400,
            "description": "Error's HTTP status code."
          },
          "key": {
            "type": "string",
            "default": "invalid_payload",
            "description": "Short string describing the kind of error which occurred."
          },
          "message": {
            "type": "string",
            "default": "Invalid payload",
            "description": "A human-readable message providing a short description about the error."
          },
          "details": {
            "type": "string",
            "description": "A human-readable message providing more details about the error."
          },
          "request_id": {
            "type": "string",
            "example": "v-0a884c6be8c3756f42"
          }
        }
      },
      "e_400_invalid_balance": {
        "title": "Invalid Balance",
        "type": "object",
        "description": "Error: Bad Request &rarr; Invalid Balance",
        "properties": {
          "code": {
            "type": "integer",
            "default": 400,
            "description": "Error's HTTP status code."
          },
          "key": {
            "type": "string",
            "default": "invalid_balance",
            "description": "Short string describing the kind of error which occurred."
          },
          "message": {
            "type": "string",
            "description": "A human-readable message providing a short description about the error."
          },
          "details": {
            "type": "string",
            "description": "A human-readable message providing more details about the error."
          },
          "request_id": {
            "type": "string",
            "example": "v-0a884c6be8c3756f42"
          }
        }
      },
      "e_400_resource_in_use": {
        "title": "Resource in use",
        "type": "object",
        "description": "Error: Bad Request &rarr; Resource in use",
        "properties": {
          "code": {
            "type": "integer",
            "default": 400,
            "description": "Error's HTTP status code."
          },
          "key": {
            "type": "string",
            "default": "resource_in_use",
            "description": "Short string describing the kind of error which occurred."
          },
          "message": {
            "type": "string",
            "default": "Resource in use",
            "description": "A human-readable message providing a short description about the error."
          },
          "details": {
            "type": "string",
            "description": "A human-readable message providing more details about the error."
          },
          "request_id": {
            "type": "string",
            "example": "v-0a884c6be8c3756f42",
            "description": "Request ID."
          },
          "related_object_ids": {
            "type": "array",
            "description": "Name or ID of the resources that are related.",
            "items": {
              "type": "string",
              "example": "rewa_5WV7H3y2lT3GGl03Xjw29IEc"
            }
          },
          "related_object_type": {
            "type": "string",
            "description": "Specifies the type of resource that is related."
          }
        }
      },
      "e_400_invalid_export_fields": {
        "title": "Invalid Export Fields",
        "type": "object",
        "description": "Error: Bad Request &rarr; Invalid Export Fields",
        "properties": {
          "code": {
            "type": "integer",
            "default": 400,
            "description": "Error's HTTP status code."
          },
          "key": {
            "type": "string",
            "default": "invalid_export_fields",
            "description": "Short string describing the kind of error which occurred."
          },
          "message": {
            "type": "string",
            "default": "Invalid Export",
            "description": "A human-readable message providing a short description about the error."
          },
          "details": {
            "type": "string",
            "description": "A human-readable message providing more details about the error."
          },
          "request_id": {
            "type": "string",
            "example": "v-0a884c6be8c3756f42"
          }
        }
      },
      "e_400_invalid_voucher": {
        "title": "Invalid Voucher",
        "type": "object",
        "description": "Error: Bad Request &rarr; Invalid Voucher",
        "properties": {
          "code": {
            "type": "integer",
            "default": 400,
            "description": "Error's HTTP status code."
          },
          "key": {
            "type": "string",
            "default": "invalid_voucher",
            "description": "Short string describing the kind of error which occurred."
          },
          "message": {
            "type": "string",
            "default": "Invalid Voucher",
            "description": "A human-readable message providing a short description about the error."
          },
          "details": {
            "type": "string",
            "description": "A human-readable message providing more details about the error."
          },
          "request_id": {
            "type": "string",
            "example": "v-0a884c6be8c3756f42"
          }
        }
      },
      "e_400_not_enough_codes": {
        "title": "Not Enough Codes",
        "type": "object",
        "description": "Error: Bad Request &rarr; Not enough codes",
        "properties": {
          "code": {
            "type": "integer",
            "default": 400,
            "description": "Error's HTTP status code."
          },
          "key": {
            "type": "string",
            "default": "not_enough_codes",
            "description": "Short string describing the kind of error which occurred."
          },
          "message": {
            "type": "string",
            "default": "Not enough codes",
            "description": "A human-readable message providing a short description about the error."
          },
          "details": {
            "type": "string",
            "example": "Specify at least 1 code in codes.",
            "description": "A human-readable message providing more details about the error."
          },
          "request_id": {
            "type": "string",
            "example": "v-0a885062c80375740f"
          }
        }
      },
      "e_400_metadata_validation_failed": {
        "title": "Metadata Validation Failed",
        "type": "object",
        "description": "Error: Bad Request &rarr; Metadata validation failed",
        "properties": {
          "code": {
            "type": "integer",
            "default": 400,
            "description": "Error's HTTP status code."
          },
          "key": {
            "type": "string",
            "default": "metadata_validation_failed",
            "description": "Short string describing the kind of error which occurred."
          },
          "message": {
            "type": "string",
            "default": "Metadata validation failed",
            "description": "A human-readable message providing a short description about the error."
          },
          "details": {
            "type": "string",
            "example": "Ranking: must be a number (actual value is 'true')",
            "description": "A human-readable message providing more details about the error."
          },
          "request_id": {
            "type": "string",
            "example": "v-0a885062c80375740f"
          }
        }
      },
      "e_400_missing_reward": {
        "title": "Missing Reward",
        "type": "object",
        "description": "Error: Bad Request &rarr; Missing Reward",
        "properties": {
          "code": {
            "type": "integer",
            "default": 400,
            "description": "Error's HTTP status code."
          },
          "key": {
            "type": "string",
            "default": "missing_reward",
            "description": "Short string describing the kind of error which occurred."
          },
          "message": {
            "type": "string",
            "default": "Missing reward",
            "description": "A human-readable message providing a short description about the error."
          },
          "details": {
            "type": "string",
            "example": "A reward is required when redeeming a LOYALTY_CARD",
            "description": "A human-readable message providing more details about the error."
          },
          "request_id": {
            "type": "string",
            "example": "v-0a885062c80375740f"
          },
          "resource_id": {
            "type": "string",
            "example": "rf_0b3a1814550e5aaa34"
          },
          "resource_type": {
            "type": "string",
            "example": "redemption"
          },
          "error": {
            "type": "object",
            "description": "Contains error message translation.",
            "properties": {
              "message": {
                "type": "string",
                "example": "Missing reward = please add one.",
                "description": "Error message translation defined in Dashboard &rarr; Project Settings &rarr; Error Messages"
              }
            }
          }
        }
      },
      "e_400_missing_order": {
        "title": "Missing Order",
        "type": "object",
        "description": "Error: Bad Request &rarr; Missing Order",
        "properties": {
          "code": {
            "type": "integer",
            "default": 400,
            "description": "Error's HTTP status code."
          },
          "key": {
            "type": "string",
            "default": "missing_order",
            "description": "Short string describing the kind of error which occurred."
          },
          "message": {
            "type": "string",
            "default": "Missing order",
            "description": "A human-readable message providing a short description about the error."
          },
          "details": {
            "type": "string",
            "example": "An order is required when redeeming a LOYALTY_CARD",
            "description": "A human-readable message providing more details about the error."
          },
          "request_id": {
            "type": "string",
            "example": "v-0a885062c80375740f"
          },
          "resource_id": {
            "type": "string",
            "example": "rf_0b3a1814550e5aaa34"
          },
          "resource_type": {
            "type": "string",
            "example": "redemption"
          },
          "error": {
            "type": "object",
            "description": "Contains error message translation.",
            "properties": {
              "message": {
                "type": "string",
                "example": "Missing order = please add one.",
                "description": "Error message translation defined in Dashboard &rarr; Project Settings &rarr; Error Messages"
              }
            }
          }
        }
      },
      "e_400_loyalty_card_points_exceeded": {
        "title": "Loyalty Card Points Exceeded",
        "type": "object",
        "description": "Error: Bad Request &rarr; Loyalty Card Points Exceeded",
        "properties": {
          "code": {
            "type": "integer",
            "default": 400,
            "description": "Error's HTTP status code."
          },
          "key": {
            "type": "string",
            "default": "loyalty_card_points_exceeded",
            "description": "Short string describing the kind of error which occurred."
          },
          "message": {
            "type": "string",
            "default": "loyalty card points exceeded",
            "description": "A human-readable message providing a short description about the error."
          },
          "details": {
            "type": "string",
            "example": "SoAm6kbC",
            "description": "A human-readable message providing more details about the error."
          },
          "request_id": {
            "type": "string",
            "example": "v-0a885062c80375740f"
          },
          "resource_id": {
            "type": "string",
            "example": "rf_0b3a1814550e5aaa34"
          },
          "resource_type": {
            "type": "string",
            "example": "redemption"
          },
          "error": {
            "type": "object",
            "description": "Contains error message translation.",
            "properties": {
              "message": {
                "type": "string",
                "example": "There are not enough loyalty points on the card.",
                "description": "Error message translation defined in Dashboard &rarr; Project Settings &rarr; Error Messages"
              }
            }
          }
        }
      },
      "e_403_wrong_api_endpoint": {
        "title": "Wrong API Endpoint",
        "type": "object",
        "description": "Error: Forbidden &rarr; Wrong API Endpoint",
        "properties": {
          "code": {
            "type": "integer",
            "default": 403,
            "description": "Error's HTTP status code."
          },
          "key": {
            "type": "string",
            "default": "wrong_api_endpoint",
            "description": "Short string describing the kind of error which occurred."
          },
          "message": {
            "type": "string",
            "default": "Wrong API endpoint",
            "description": "A human-readable message providing a short description about the error."
          },
          "details": {
            "type": "string",
            "example": "Given project is bound to different API endpoint, you should use: https://dev.api.voucherify.io",
            "description": "A human-readable message providing more details about the error."
          }
        }
      },
      "e_404_not_found": {
        "description": "Error: Not Found",
        "type": "object",
        "x-examples": {
          "example-1": {
            "code": 404,
            "key": "not_found",
            "message": "Resource not found",
            "details": "Cannot find voucher with id IrKORhS",
            "request_id": "v-0a96cd820301c0483a",
            "resource_id": "IrKORhS",
            "resource_type": "voucher"
          }
        },
        "title": "Not Found",
        "properties": {
          "code": {
            "type": "integer",
            "default": 404,
            "description": "Error's HTTP status code."
          },
          "key": {
            "type": "string",
            "default": "not_found",
            "description": "Short string describing the kind of error which occurred."
          },
          "message": {
            "type": "string",
            "default": "Resource not found",
            "description": "A human-readable message providing a short description about the error."
          },
          "details": {
            "type": "string",
            "description": "A human-readable message providing more details about the error."
          },
          "request_id": {
            "type": "string",
            "example": "v-0a96cd820301c0483a",
            "description": "Request ID."
          },
          "resource_id": {
            "type": "string",
            "description": "Name or ID of the resource that was not found."
          },
          "resource_type": {
            "type": "string",
            "description": "Specifies the type of resource that was not found."
          }
        }
      },
      "e_409_duplicate_found": {
        "title": "Duplicated Resource",
        "type": "object",
        "description": "Error: Conflict &rarr; Duplicated resource found",
        "properties": {
          "code": {
            "type": "integer",
            "default": 409,
            "description": "Error's HTTP status code."
          },
          "key": {
            "type": "string",
            "default": "duplicate_found",
            "description": "Short string describing the kind of error which occurred."
          },
          "message": {
            "type": "string",
            "default": "Duplicated resource found",
            "description": "A human-readable message providing a short description about the error."
          },
          "details": {
            "type": "string",
            "description": "A human-readable message providing more details about the error."
          },
          "request_id": {
            "type": "string",
            "example": "v-0aa36e570e44cb3bdd"
          },
          "resource_id": {
            "type": "string",
            "description": "Name or ID of the resource that already exists."
          },
          "resource_type": {
            "type": "string",
            "description": "Specifies the type of resource that already exists."
          }
        }
      },
      "e_400_duplicate_key": {
        "title": "Duplicated Key",
        "type": "object",
        "description": "Error: Conflict &rarr; Duplicated key found",
        "properties": {
          "code": {
            "type": "integer",
            "default": 400,
            "description": "Error's HTTP status code."
          },
          "key": {
            "type": "string",
            "default": "duplicate_key",
            "description": "Short string describing the kind of error which occurred."
          },
          "message": {
            "type": "string",
            "default": "Duplicate codes",
            "description": "A human-readable message providing a short description about the error."
          },
          "details": {
            "type": "string",
            "description": "A human-readable message providing more details about the error."
          },
          "request_id": {
            "type": "string",
            "example": "v-0aa36e570e44cb3bdd"
          }
        }
      },
      "e_400_duplicate_source_id": {
        "title": "Duplicate Source ID",
        "type": "object",
        "description": "Error: Conflict &rarr; Duplicate source_id found",
        "properties": {
          "code": {
            "type": "integer",
            "default": 400,
            "description": "Error's HTTP status code."
          },
          "key": {
            "type": "string",
            "default": "duplicate_source_id",
            "description": "Short string describing the kind of error which occurred."
          },
          "message": {
            "type": "string",
            "default": "Duplicate source_id",
            "description": "A human-readable message providing a short description about the error."
          },
          "details": {
            "type": "string",
            "description": "A human-readable message providing more details about the error."
          },
          "request_id": {
            "type": "string",
            "example": "v-0aa36e570e44cb3bdd"
          }
        }
      }
    },
    "examples": {
      "req_vouchers_metadata_1_test": {
        "summary": "Request Body",
        "description": "Request body to update metadata in bulk *asynchronously*.",
        "value": {
          "codes": [
            "PROMO-CODE810",
            "PROMO-CODE726"
          ],
          "metadata": {
            "lang": "en",
            "authorized_internally": true
          }
        }
      },
      "req_vouchers_metadata_2_test": {
        "summary": "Request Body",
        "description": "Request body to update metadata in bulk *asynchronously*.",
        "value": {
          "codes": [
            "PROMO-CODE810",
            "PROMO-CODE726",
            "PROMO-CODE888"
          ],
          "metadata": {
            "lang": "en",
            "authorized_internally": true
          }
        }
      },
      "req_vouchers_metadata_1": {
        "value": {
          "codes": [
            "PROMO-CODE810",
            "PROMO-CODE726"
          ],
          "metadata": {
            "lang": "en",
            "authorized_internally": true
          }
        }
      },
      "req_vouchers_metadata_2": {
        "value": {
          "codes": [
            "PROMO-CODE810",
            "PROMO-CODE726",
            "PROMO-CODE888"
          ],
          "metadata": {
            "lang": "en",
            "authorized_internally": true
          }
        }
      },
      "res_async_actions": {
        "value": {
          "async_action_id": "aa_0ab2df092385be5ca5"
        }
      }
    }
  },
  "tags": [
    {
      "name": "VOUCHERS API",
      "description": "Manage discount and gift card vouchers."
    },
    {
      "name": "CAMPAIGNS API",
      "description": "Group vouchers or promotion tiers of a specific type."
    },
    {
      "name": "PROMOTIONS API",
      "description": "Manage promotions."
    },
    {
      "name": "REWARDS API",
      "description": "Manage rewards."
    },
    {
      "name": "DISTRIBUTIONS API",
      "description": "Manage distributions."
    },
    {
      "name": "VALIDATIONS API",
      "description": "Validate vouchers and promotions."
    },
    {
      "name": "REDEMPTIONS API",
      "description": "Manage redemptions."
    },
    {
      "name": "STACKABLE DISCOUNTS API",
      "description": "Manage multiple discounts in one request."
    },
    {
      "name": "LOYALTIES API",
      "description": "Manage loyalty campaign."
    },
    {
      "name": "CUSTOMERS API",
      "description": "Manage customers."
    },
    {
      "name": "ORDERS API",
      "description": "Manage orders."
    },
    {
      "name": "PRODUCTS API",
      "description": "Manage products."
    },
    {
      "name": "PRODUCT COLLECTIONS API",
      "description": "Group products."
    },
    {
      "name": "VALIDATION RULES API",
      "description": "Configure validation rules."
    },
    {
      "name": "SEGMENTS API",
      "description": "Manage customer segments."
    },
    {
      "name": "EVENTS API",
      "description": "Track custom and internal events."
    },
    {
      "name": "CONSENTS API",
      "description": "List marketing opt-in consents."
    },
    {
      "name": "ASYNC ACTIONS API",
      "description": "Track asynchronous operations scheduled in Projects."
    },
    {
      "name": "EXPORTS API",
      "description": "Export data from Voucherify."
    },
    {
      "name": "CATEGORIES API",
      "description": "Manage categories."
    },
    {
      "name": "METADATA SCHEMAS API",
      "description": "List metadata schemas."
    }
  ],
  "paths": {
    "/vouchers/{code}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/code"
        }
      ],
      "get": {
        "summary": "Get Voucher",
        "tags": [
          "VOUCHERS API"
        ],
        "operationId": "get-vouchers-code",
        "description": "Retrieves the voucher with the given `code`.",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a voucher object if a valid identifier was provided. \n\nAdditionally, the response returns validation rules related to the voucher object. They can be inherited from a campaign.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/1_obj_voucher_object"
                }
              }
            }
          },
          "404": {
            "description": "Not Found. When requesting the code of a voucher that has been deleted, the resource will not be returned.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/e_404_not_found"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update Voucher",
        "tags": [
          "VOUCHERS API"
        ],
        "operationId": "put-vouchers-code",
        "description": "Updates the specified voucher by setting the values of the parameters passed in the request body. Any parameters not provided in the payload will be left unchanged.\n\nYou can modify the following fields:  \n\n- `category`\n- `start_date`\n- `expiration_date`\n- `active`\n- `additional_info`\n- `metadata`\n- `validity_day_of_week`\n- `validity_timeframe`\n- `gift` &rarr; `amount` + `effect`\n- `loyalty_card` &rarr; `points`\n- `discount` &darr;\n  - Amount type &rarr; `amount_off` + `effect` + **requires** `type`=`AMOUNT` \n  - Percent type &rarr; `percent_off` + `effect`\n  - Fixed type &rarr; `fixed_amount` + `effect` + **requires** `type`=`FIXED` \n  - Unit type &darr; \n    - One item &rarr; `unit_off` + `unit_type` + `effect` + **requires** `type`=`UNIT`\n    - Multiple item types &rarr; `unit_off` + `unit_type` + `effect` + **requires** higher level `type`=`UNIT` & `effect`=`ADD_MANY_ITEMS` (HERE ONLY TYPE=UNIT IS REQUIRED - IF I DON'T PASS THE OTHER ATTRIBUTES, IT DELETES THEM FROM THE VOUCHER OBJECT RESPONSE)\n  - ~~Shipping type &rarr; `unit_off` + `unit_type` + `effect` + **requires** `type`=`UNIT`~~ \n\nFields other than the ones listed above won't be modified. Even if provided, they will be silently skipped.",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/1_req_vouchers_code_PUT"
              },
              "examples": {
                "example-1-Update-Percentage-Discount": {
                  "value": {
                    "category": "Existing Customers",
                    "discount": {
                      "percent_off": 20,
                      "effect": "APPLY_TO_ITEMS"
                    },
                    "start_date": "2021-01-01T00:00:00Z",
                    "expiration_date": "2023-12-31T23:59:59Z",
                    "active": true,
                    "additional_info": "This voucher is being activated.",
                    "metadata": {
                      "test": false,
                      "locale": "de-en-pl"
                    },
                    "validity_day_of_week": [
                      1,
                      2,
                      3,
                      4,
                      5,
                      6
                    ],
                    "validity_timeframe": {
                      "duration": "PT1H",
                      "interval": "P3D"
                    }
                  }
                },
                "example-2-Update-Gift-Card": {
                  "value": {
                    "category": "Existing Customers",
                    "gift": {
                      "amount": 20000,
                      "effect": "APPLY_TO_ITEMS"
                    },
                    "start_date": "2021-01-01T00:00:00Z",
                    "active": false,
                    "additional_info": "This gift card is disabled.",
                    "metadata": {
                      "test": false,
                      "locale": "de-en-pl"
                    }
                  }
                },
                "example-3-Update-Loyalty-Card": {
                  "value": {
                    "category": "Existing Customers",
                    "loyalty_card": {
                      "points": 20000
                    },
                    "active": false,
                    "additional_info": "This loyalty card is being deactivated and points updated.",
                    "metadata": {
                      "test": false,
                      "locale": "de-en-pl"
                    }
                  }
                },
                "example-4-Update-Amount-Discount": {
                  "value": {
                    "category": "Existing Customers",
                    "discount": {
                      "amount_off": 2000,
                      "type": "AMOUNT",
                      "effect": "APPLY_TO_ITEMS"
                    },
                    "start_date": "2021-01-01T00:00:00Z"
                  }
                },
                "example-5-Update-Fixed-Discount": {
                  "value": {
                    "category": "Existing Customers",
                    "discount": {
                      "type": "FIXED",
                      "fixed_amount": 2000,
                      "effect": "APPLY_TO_ITEMS"
                    },
                    "start_date": "2021-01-01T00:00:00Z"
                  }
                },
                "example-1-Update-Unit-Discount-Multiple-Items": {
                  "value": {
                    "discount": {
                      "type": "UNIT",
                      "effect": "ADD_MANY_ITEMS",
                      "units": [
                        {
                          "unit_off": 2,
                          "unit_type": "prod_0a9f9ab4ab019a42d5",
                          "effect": "ADD_MISSING_ITEMS"
                        },
                        {
                          "unit_off": 1,
                          "unit_type": "prod_0a9f9aeddb019a42db",
                          "effect": "ADD_MISSING_ITEMS"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "required": true,
          "description": "Specify the parameters to be updated."
        },
        "responses": {
          "200": {
            "description": "Returns the voucher object if the update succeeded. Returns an error if update parameters are invalid (e.g. specifying an invalid gift amount).",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/1_obj_voucher_object"
                },
                "examples": {
                  "example-1-Response-Percentage-Discount-Voucher": {
                    "value": {
                      "id": "v_MBOEmHelKwvykVZ8JcT4TE5Kla5IMJyc",
                      "code": "welcome",
                      "campaign": null,
                      "campaign_id": null,
                      "category": "Existing Customers",
                      "type": "DISCOUNT_VOUCHER",
                      "discount": {
                        "type": "PERCENT",
                        "percent_off": 20,
                        "effect": "APPLY_TO_ITEMS"
                      },
                      "gift": null,
                      "loyalty_card": null,
                      "start_date": "2021-01-01T00:00:00.000Z",
                      "expiration_date": "2023-12-31T23:59:59.000Z",
                      "validity_timeframe": {
                        "interval": "P3D",
                        "duration": "PT1H"
                      },
                      "validity_day_of_week": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6
                      ],
                      "active": true,
                      "additional_info": "This voucher is being activated.",
                      "metadata": {
                        "test": false,
                        "locale": "de-en-pl"
                      },
                      "assets": {
                        "qr": {
                          "id": "U2FsdGVkX1+by33CNzWu6xXjCrLKRr1+H9K3I9wOSa7idiHrMYJe0HlrWiy7INhaJf1BnaKJjLKcUC+4/hCbILtJ9lHXZWhewG5q5rmx29gK0IH2eRauw1qCZKIlXfqeGTG2T5ftPsEl1D4xf8W2MA==",
                          "url": "https://dev.dl.voucherify.io/api/v1/assets/qr/U2FsdGVkX1%2Bby33CNzWu6xXjCrLKRr1%2BH9K3I9wOSa7idiHrMYJe0HlrWiy7INhaJf1BnaKJjLKcUC%2B4%2FhCbILtJ9lHXZWhewG5q5rmx29gK0IH2eRauw1qCZKIlXfqeGTG2T5ftPsEl1D4xf8W2MA%3D%3D"
                        },
                        "barcode": {
                          "id": "U2FsdGVkX19wOdFeXYXZ4Xu22L0Ummk03Urz/ZTnXUFeHeehtK4L6RTvNgVeSR+McTZR4DYNLEGydZ+Fo2xEqqM1UWyl8Bx22Pi1CxghADOcy3bAvSca7EEPpvKrCY403UWUDvaO/OEAjvVoiEuaHA==",
                          "url": "https://dev.dl.voucherify.io/api/v1/assets/barcode/U2FsdGVkX19wOdFeXYXZ4Xu22L0Ummk03Urz%2FZTnXUFeHeehtK4L6RTvNgVeSR%2BMcTZR4DYNLEGydZ%2BFo2xEqqM1UWyl8Bx22Pi1CxghADOcy3bAvSca7EEPpvKrCY403UWUDvaO%2FOEAjvVoiEuaHA%3D%3D"
                        }
                      },
                      "is_referral_code": false,
                      "created_at": "2022-02-17T09:05:34.668Z",
                      "updated_at": "2022-02-17T11:03:05.878Z",
                      "validation_rules_assignments": {
                        "object": "list",
                        "data_ref": "data",
                        "data": [
                          {
                            "id": "asgm_74F7QZoYbUoljwQO",
                            "rule_id": "val_4j7DCRm2IS59",
                            "related_object_id": "v_MBOEmHelKwvykVZ8JcT4TE5Kla5IMJyc",
                            "related_object_type": "voucher",
                            "created_at": "2022-02-17T09:05:34.642Z",
                            "object": "validation_rules_assignment"
                          }
                        ],
                        "total": 1
                      },
                      "redemption": {
                        "quantity": 10,
                        "redeemed_quantity": 0,
                        "object": "list",
                        "url": "/v1/vouchers/welcome/redemptions?page=1&limit=10"
                      },
                      "publish": {
                        "object": "list",
                        "count": 0,
                        "url": "/v1/vouchers/welcome/publications?page=1&limit=10"
                      },
                      "object": "voucher"
                    }
                  },
                  "example-2-Response-Gift-Card": {
                    "value": {
                      "id": "v_7xaObxyK5LG62Rp0Xqpez7lqiBFL62pL",
                      "code": "welcomegiftcard",
                      "campaign": null,
                      "campaign_id": null,
                      "category": "Existing Customers",
                      "type": "GIFT_VOUCHER",
                      "discount": null,
                      "gift": {
                        "amount": 20000,
                        "balance": 20000,
                        "effect": "APPLY_TO_ITEMS"
                      },
                      "loyalty_card": null,
                      "start_date": "2021-01-01T00:00:00.000Z",
                      "expiration_date": null,
                      "validity_timeframe": null,
                      "validity_day_of_week": null,
                      "active": false,
                      "additional_info": "This gift card is disabled.",
                      "metadata": {
                        "test": false,
                        "locale": "de-en-pl"
                      },
                      "assets": {
                        "qr": {
                          "id": "U2FsdGVkX1+mTbI2MdzBdMJ7AsOPKvGGgRB7O4oHZv5qq8I3M/OBPJm4PV8bTtBgR+oXOU4Jv1ucbIV7yg1mzC86LVFKjO7Ptnj+63mS9QdHvvILEAulBuZZQ+hZ0HmFXjDl4Quz/kUqGwffKGTziQ==",
                          "url": "https://dev.dl.voucherify.io/api/v1/assets/qr/U2FsdGVkX1%2BmTbI2MdzBdMJ7AsOPKvGGgRB7O4oHZv5qq8I3M%2FOBPJm4PV8bTtBgR%2BoXOU4Jv1ucbIV7yg1mzC86LVFKjO7Ptnj%2B63mS9QdHvvILEAulBuZZQ%2BhZ0HmFXjDl4Quz%2FkUqGwffKGTziQ%3D%3D"
                        },
                        "barcode": {
                          "id": "U2FsdGVkX184KgQ11OfpqB4WkJuH9ushSwZb0YrcN+8OaGPHxBQMiBr2axwnvQlZYv6YhqWtnc5iHByHrkg+6qYHxOLBPRMWCysIhcuUEB57IDhgYUHRPyM2bWjQadVHngGfVGCQ0CUy4PO/71RdMw==",
                          "url": "https://dev.dl.voucherify.io/api/v1/assets/barcode/U2FsdGVkX184KgQ11OfpqB4WkJuH9ushSwZb0YrcN%2B8OaGPHxBQMiBr2axwnvQlZYv6YhqWtnc5iHByHrkg%2B6qYHxOLBPRMWCysIhcuUEB57IDhgYUHRPyM2bWjQadVHngGfVGCQ0CUy4PO%2F71RdMw%3D%3D"
                        }
                      },
                      "is_referral_code": false,
                      "created_at": "2022-02-17T09:09:49.665Z",
                      "updated_at": "2022-02-17T11:11:48.071Z",
                      "validation_rules_assignments": {
                        "object": "list",
                        "data_ref": "data",
                        "data": [],
                        "total": 0
                      },
                      "redemption": {
                        "quantity": null,
                        "redeemed_quantity": 0,
                        "redeemed_amount": 0,
                        "object": "list",
                        "url": "/v1/vouchers/welcomegiftcard/redemptions?page=1&limit=10"
                      },
                      "publish": {
                        "object": "list",
                        "count": 0,
                        "url": "/v1/vouchers/welcomegiftcard/publications?page=1&limit=10"
                      },
                      "object": "voucher"
                    }
                  },
                  "example-3-Response-Loyalty-Card": {
                    "value": {
                      "id": "v_l84t3fy3keMUiOeaHbN1cbTdW8O5eUlm",
                      "code": "welcomeloyalty",
                      "campaign": "Loyalty Campaign",
                      "campaign_id": "camp_E87CubZLZ8eoQt3c4kAEZsx0",
                      "category": "Existing Customers",
                      "type": "LOYALTY_CARD",
                      "discount": null,
                      "gift": null,
                      "loyalty_card": {
                        "points": 20000,
                        "balance": 20000
                      },
                      "start_date": null,
                      "expiration_date": null,
                      "validity_timeframe": null,
                      "validity_day_of_week": null,
                      "active": false,
                      "additional_info": "This loyalty card is being deactivated and points updated.",
                      "metadata": {
                        "test": false,
                        "locale": "de-en-pl"
                      },
                      "assets": {
                        "qr": {
                          "id": "U2FsdGVkX186PCWooyrNsjfI+nb+Y9ziUZ1k7xe+nJQ53Ms1ynNJOX6JXC6SwxS1WDhYwAKX5FxaDoKyuPf5MkQrkeB6u5bSx333ldAyLypNnqwBD2N17S64WFnTqV7eXUk3hS30wDYcz0cQAJFDcQ==",
                          "url": "https://dev.dl.voucherify.io/api/v1/assets/qr/U2FsdGVkX186PCWooyrNsjfI%2Bnb%2BY9ziUZ1k7xe%2BnJQ53Ms1ynNJOX6JXC6SwxS1WDhYwAKX5FxaDoKyuPf5MkQrkeB6u5bSx333ldAyLypNnqwBD2N17S64WFnTqV7eXUk3hS30wDYcz0cQAJFDcQ%3D%3D"
                        },
                        "barcode": {
                          "id": "U2FsdGVkX1/FWUg0RbOU7R7Zqg7/8Ba6oYuXrmIl7EdXGgaPMPfpePNGRzxBu4LP2dNEUO9h1Sh37MR1PxOoaemPwlgTDo/1G8dX1JjSppNoaTHhkzk2w4yutNhP7o8cq3ZBbT3TNMTKb2H3fUMc7A==",
                          "url": "https://dev.dl.voucherify.io/api/v1/assets/barcode/U2FsdGVkX1%2FFWUg0RbOU7R7Zqg7%2F8Ba6oYuXrmIl7EdXGgaPMPfpePNGRzxBu4LP2dNEUO9h1Sh37MR1PxOoaemPwlgTDo%2F1G8dX1JjSppNoaTHhkzk2w4yutNhP7o8cq3ZBbT3TNMTKb2H3fUMc7A%3D%3D"
                        }
                      },
                      "is_referral_code": false,
                      "created_at": "2022-02-17T09:12:01.428Z",
                      "updated_at": "2022-02-17T11:20:12.447Z",
                      "validation_rules_assignments": {
                        "object": "list",
                        "data_ref": "data",
                        "data": [],
                        "total": 0
                      },
                      "redemption": {
                        "quantity": null,
                        "redeemed_quantity": 0,
                        "redeemed_points": 0,
                        "object": "list",
                        "url": "/v1/vouchers/welcomeloyalty/redemptions?page=1&limit=10"
                      },
                      "publish": {
                        "object": "list",
                        "count": 0,
                        "url": "/v1/vouchers/welcomeloyalty/publications?page=1&limit=10"
                      },
                      "object": "voucher"
                    }
                  },
                  "example-4-Response-Amount-Discount": {
                    "value": {
                      "id": "v_jMIjKfG2oJ7vCwIPhsLsbXYGTdPLlbJd",
                      "code": "WelcomeDiscountAmount",
                      "campaign": null,
                      "campaign_id": null,
                      "category": "Existing Customers",
                      "type": "DISCOUNT_VOUCHER",
                      "discount": {
                        "type": "AMOUNT",
                        "amount_off": 2000,
                        "effect": "APPLY_TO_ITEMS"
                      },
                      "gift": null,
                      "loyalty_card": null,
                      "start_date": "2021-01-01T00:00:00.000Z",
                      "expiration_date": "2022-12-31T23:59:59.000Z",
                      "validity_timeframe": {
                        "interval": "P2D",
                        "duration": "PT1H"
                      },
                      "validity_day_of_week": [
                        1,
                        2,
                        3,
                        4,
                        5
                      ],
                      "active": false,
                      "additional_info": "This voucher will remain inactive until enabled.",
                      "metadata": {
                        "test": true,
                        "locale": "de-en"
                      },
                      "assets": {
                        "qr": {
                          "id": "U2FsdGVkX1+TcEE9sZP6aMfAW3NZv9GWlCnUNn+SiK4FIbMRWWjN5hzTR7Yc/73yfldUb6SMgIvUNL551Nz/nPjrMY2iauia1MSWX21MItsSPfy8qccrC+WAlvpGK/1ZklnxYaeKqxTqwSXl7ppSlgcuEejbFiaqEDajvYUZsF4=",
                          "url": "https://dev.dl.voucherify.io/api/v1/assets/qr/U2FsdGVkX1%2BTcEE9sZP6aMfAW3NZv9GWlCnUNn%2BSiK4FIbMRWWjN5hzTR7Yc%2F73yfldUb6SMgIvUNL551Nz%2FnPjrMY2iauia1MSWX21MItsSPfy8qccrC%2BWAlvpGK%2F1ZklnxYaeKqxTqwSXl7ppSlgcuEejbFiaqEDajvYUZsF4%3D"
                        },
                        "barcode": {
                          "id": "U2FsdGVkX1/AhpZMq/h+Phi8JZF9m4qL8/U/Z5AST82jaAOnnhdHdbaGjB1+/0VFIdGBA8w2+3JX5qd61Dfk6yfiLCraVw7lYjQddCHF5SKtJs4hqsLHZevQTCzpZkeIHC3ThsG/fLZTsaNn8tjewd/W4qn/2Cc5NgTdv7fqui4=",
                          "url": "https://dev.dl.voucherify.io/api/v1/assets/barcode/U2FsdGVkX1%2FAhpZMq%2Fh%2BPhi8JZF9m4qL8%2FU%2FZ5AST82jaAOnnhdHdbaGjB1%2B%2F0VFIdGBA8w2%2B3JX5qd61Dfk6yfiLCraVw7lYjQddCHF5SKtJs4hqsLHZevQTCzpZkeIHC3ThsG%2FfLZTsaNn8tjewd%2FW4qn%2F2Cc5NgTdv7fqui4%3D"
                        }
                      },
                      "is_referral_code": false,
                      "created_at": "2022-02-17T11:41:05.236Z",
                      "updated_at": "2022-02-17T11:45:29.269Z",
                      "validation_rules_assignments": {
                        "object": "list",
                        "data_ref": "data",
                        "data": [
                          {
                            "id": "asgm_tDN7MJNayjrf1wyn",
                            "rule_id": "val_4j7DCRm2IS59",
                            "related_object_id": "v_jMIjKfG2oJ7vCwIPhsLsbXYGTdPLlbJd",
                            "related_object_type": "voucher",
                            "created_at": "2022-02-17T11:41:05.210Z",
                            "object": "validation_rules_assignment"
                          }
                        ],
                        "total": 1
                      },
                      "redemption": {
                        "quantity": 10,
                        "redeemed_quantity": 0,
                        "object": "list",
                        "url": "/v1/vouchers/WelcomeDiscountAmount/redemptions?page=1&limit=10"
                      },
                      "publish": {
                        "object": "list",
                        "count": 0,
                        "url": "/v1/vouchers/WelcomeDiscountAmount/publications?page=1&limit=10"
                      },
                      "object": "voucher"
                    }
                  },
                  "example-5-Response-Fixed-Discount": {
                    "value": {
                      "id": "v_B1Pe7QPTjXCHm8IcDkJAQs4g6Zc08UlK",
                      "code": "wou4w1Og",
                      "campaign": "Fixed",
                      "campaign_id": "camp_2jVA6EKGSAe6scyc3i1q9ROD",
                      "category": "Existing Customers",
                      "type": "DISCOUNT_VOUCHER",
                      "discount": {
                        "type": "FIXED",
                        "effect": "APPLY_TO_ITEMS",
                        "fixed_amount": 2000
                      },
                      "gift": null,
                      "loyalty_card": null,
                      "start_date": "2021-01-01T00:00:00.000Z",
                      "expiration_date": null,
                      "validity_timeframe": null,
                      "validity_day_of_week": null,
                      "active": true,
                      "additional_info": null,
                      "metadata": {},
                      "assets": {
                        "qr": {
                          "id": "U2FsdGVkX18zxYPpRIYeGHCoCAp3ZAPEUM0qacHQIIW/82oGOW24bFMA06kahjkZKVA/1mqqJsqh83C29Jhdz82KrRsM2zl9nzplu5hrmn7m0twnf5NQaTTcovEvnBV8Kej9tGhzc/dPwqE+xEKuDg==",
                          "url": "https://dev.dl.voucherify.io/api/v1/assets/qr/U2FsdGVkX18zxYPpRIYeGHCoCAp3ZAPEUM0qacHQIIW%2F82oGOW24bFMA06kahjkZKVA%2F1mqqJsqh83C29Jhdz82KrRsM2zl9nzplu5hrmn7m0twnf5NQaTTcovEvnBV8Kej9tGhzc%2FdPwqE%2BxEKuDg%3D%3D"
                        },
                        "barcode": {
                          "id": "U2FsdGVkX18tsK1tz0X2IQWbFHCY4wZBDjoysFt1fBlWo/9bm/HNTci1Q3bSFuIzqIQqlU2TkSacFBgOWGuVG08XboZsqNSXXsAgST9tyoxpaOJ22B2EwWspdvuwJqvZh4PpEyh3BBDS7eOWsr3+Sw==",
                          "url": "https://dev.dl.voucherify.io/api/v1/assets/barcode/U2FsdGVkX18tsK1tz0X2IQWbFHCY4wZBDjoysFt1fBlWo%2F9bm%2FHNTci1Q3bSFuIzqIQqlU2TkSacFBgOWGuVG08XboZsqNSXXsAgST9tyoxpaOJ22B2EwWspdvuwJqvZh4PpEyh3BBDS7eOWsr3%2BSw%3D%3D"
                        }
                      },
                      "is_referral_code": false,
                      "created_at": "2022-02-17T11:54:37.766Z",
                      "updated_at": "2022-02-17T12:04:53.346Z",
                      "validation_rules_assignments": {
                        "object": "list",
                        "data_ref": "data",
                        "data": [],
                        "total": 0
                      },
                      "redemption": {
                        "quantity": 1,
                        "redeemed_quantity": 0,
                        "object": "list",
                        "url": "/v1/vouchers/wou4w1Og/redemptions?page=1&limit=10"
                      },
                      "publish": {
                        "object": "list",
                        "count": 0,
                        "url": "/v1/vouchers/wou4w1Og/publications?page=1&limit=10"
                      },
                      "object": "voucher"
                    }
                  },
                  "example-1-Unit-Discount-Multiple-Items": {
                    "value": {
                      "id": "v_cu8nyozvTDA413H17bH5BLha0cjxt7s8",
                      "code": "MultipleUnitTypesUnitDiscount",
                      "campaign": null,
                      "campaign_id": null,
                      "category": "New Customers",
                      "type": "DISCOUNT_VOUCHER",
                      "discount": {
                        "type": "UNIT",
                        "effect": "ADD_MANY_ITEMS",
                        "units": [
                          {
                            "unit_off": 2,
                            "unit_type": "prod_0a9f9ab4ab019a42d5",
                            "effect": "ADD_MISSING_ITEMS"
                          },
                          {
                            "unit_off": 1,
                            "unit_type": "prod_0a9f9aeddb019a42db",
                            "effect": "ADD_MISSING_ITEMS"
                          }
                        ]
                      },
                      "gift": null,
                      "loyalty_card": null,
                      "start_date": "2020-01-01T00:00:00.000Z",
                      "expiration_date": "2022-12-31T23:59:59.000Z",
                      "validity_timeframe": {
                        "interval": "P2D",
                        "duration": "PT1H"
                      },
                      "validity_day_of_week": [
                        1,
                        2,
                        3,
                        4,
                        5
                      ],
                      "active": false,
                      "additional_info": "This voucher will remain inactive until enabled.",
                      "metadata": {
                        "test": true,
                        "locale": "de-en"
                      },
                      "assets": {
                        "qr": {
                          "id": "U2FsdGVkX1+ocJBtZ9NqT97gZ/QTfOz54TAoRoKO3tnCYBtHZWMghEHT0b2aFrPSL1lqMyf6fYy6DH2/DkH5p5Vd8dOozW1LV6wPVatWpa1lZMeMIB0OcARCW3q+3QydoW2KdliLKyksFwumH9C7Fsnj6HTaEbUjSttTZE/be+o=",
                          "url": "https://dev.dl.voucherify.io/api/v1/assets/qr/U2FsdGVkX1%2BocJBtZ9NqT97gZ%2FQTfOz54TAoRoKO3tnCYBtHZWMghEHT0b2aFrPSL1lqMyf6fYy6DH2%2FDkH5p5Vd8dOozW1LV6wPVatWpa1lZMeMIB0OcARCW3q%2B3QydoW2KdliLKyksFwumH9C7Fsnj6HTaEbUjSttTZE%2Fbe%2Bo%3D"
                        },
                        "barcode": {
                          "id": "U2FsdGVkX1+Sly3IYj3EbZFHGGNxV6Ns4j76O8d0kRQe3WriJz5qY6s4GBIwlsdy13AciaQuiVt232HlOlZ4TzGaSSk3+ZMldwBGaTp/fIN9SGBW/NVUtfDOI2sIDLZCBBrdK7WVvtCQQ+1Y+6qClYg/QurJExCFRkDeKpKjDug=",
                          "url": "https://dev.dl.voucherify.io/api/v1/assets/barcode/U2FsdGVkX1%2BSly3IYj3EbZFHGGNxV6Ns4j76O8d0kRQe3WriJz5qY6s4GBIwlsdy13AciaQuiVt232HlOlZ4TzGaSSk3%2BZMldwBGaTp%2FfIN9SGBW%2FNVUtfDOI2sIDLZCBBrdK7WVvtCQQ%2B1Y%2B6qClYg%2FQurJExCFRkDeKpKjDug%3D"
                        }
                      },
                      "is_referral_code": false,
                      "created_at": "2022-02-18T06:27:45.619Z",
                      "updated_at": "2022-02-18T06:31:08.630Z",
                      "validation_rules_assignments": {
                        "object": "list",
                        "data_ref": "data",
                        "data": [],
                        "total": 0
                      },
                      "redemption": {
                        "quantity": 5,
                        "redeemed_quantity": 0,
                        "object": "list",
                        "url": "/v1/vouchers/MultipleUnitTypesUnitDiscount/redemptions?page=1&limit=10"
                      },
                      "publish": {
                        "object": "list",
                        "count": 0,
                        "url": "/v1/vouchers/MultipleUnitTypesUnitDiscount/publications?page=1&limit=10"
                      },
                      "object": "voucher"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Voucher",
        "tags": [
          "VOUCHERS API"
        ],
        "operationId": "delete-vouchers-code",
        "description": "Deletes a voucher. This operation cannot be undone. Additionally, this operation immediately removes any redemptions on the voucher.",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "force",
            "description": "If this flag is set to `true`, the voucher will be removed permanently. Going forward, the user will be able to create the next voucher with exactly the same code."
          }
        ],
        "responses": {
          "204": {
            "description": "Returns no content if deletion is successful."
          },
          "404": {
            "description": "Returns an error indicating that the voucher with given ID was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/e_404_not_found"
                },
                "examples": {
                  "Voucher Not Found": {
                    "value": {
                      "code": 404,
                      "key": "not_found",
                      "message": "Resource not found",
                      "details": "Cannot find voucher with id 10OFF",
                      "request_id": "v-0ae28d3cec96bb1b7e",
                      "resource_id": "10OFF",
                      "resource_type": "voucher"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create Voucher",
        "tags": [
          "VOUCHERS API"
        ],
        "operationId": "post-vouchers-code",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "description": "Create a standalone voucher. You can choose to create a `GIFT_VOUCHER`, a `DISCOUNT_VOUCHER`, or a `LOYALTY_CARD`. The code path parameter can use all letters of the English alphabet, Arabic numerals and special characters.  \n\nWhen you create a new voucher, you can specify a type to create it.\nCreating a new voucher will create a new stand alone voucher if no `campaign` name or `campaign_id` is provided. In case of the loyalty card, a campaign name is required.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/1_req_vouchers_code_POST"
              },
              "examples": {
                "Percentage-Discount": {
                  "value": {
                    "category": "New Customers",
                    "type": "DISCOUNT_VOUCHER",
                    "discount": {
                      "percent_off": 10,
                      "type": "PERCENT",
                      "effect": "APPLY_TO_ORDER"
                    },
                    "start_date": "2022-01-01T00:00:00Z",
                    "expiration_date": "2022-12-31T23:59:59Z",
                    "validity_timeframe": {
                      "duration": "PT1H",
                      "interval": "P2D"
                    },
                    "validity_day_of_week": [
                      1,
                      2,
                      3,
                      4,
                      5
                    ],
                    "active": false,
                    "additional_info": "This voucher will remain inactive until enabled.",
                    "redemption": {
                      "quantity": 10
                    },
                    "metadata": {
                      "test": true,
                      "locale": "de-en"
                    },
                    "validation_rules": [
                      "val_4j7DCRm2IS59"
                    ]
                  }
                },
                "Gift-Card": {
                  "value": {
                    "category": "New Customers",
                    "type": "GIFT_VOUCHER",
                    "gift": {
                      "amount": 10000,
                      "effect": "APPLY_TO_ORDER"
                    },
                    "start_date": "2022-01-01T00:00:00Z",
                    "active": true,
                    "additional_info": "This gift card is enabled immediately upon creation.",
                    "metadata": {
                      "test": true,
                      "locale": "de-en"
                    }
                  }
                },
                "Loyalty-Card": {
                  "value": {
                    "category": "New Customers",
                    "campaign": "camp_E87CubZLZ8eoQt3c4kAEZsx0",
                    "type": "LOYALTY_CARD",
                    "loyalty_card": {
                      "points": 10000
                    },
                    "additional_info": "This loyalty card is enabled immediately upon creation.",
                    "metadata": {
                      "test": true,
                      "locale": "de-en"
                    }
                  }
                }
              }
            }
          },
          "description": "Specify the details of the voucher that you would like to create."
        },
        "responses": {
          "200": {
            "description": "Returns a voucher object if the call succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/1_obj_voucher_object"
                },
                "examples": {
                  "Percentage-Discount": {
                    "value": {
                      "id": "v_MBOEmHelKwvykVZ8JcT4TE5Kla5IMJyc",
                      "code": "welcome",
                      "campaign": null,
                      "campaign_id": null,
                      "category": "New Customers",
                      "type": "DISCOUNT_VOUCHER",
                      "discount": {
                        "type": "PERCENT",
                        "percent_off": 10,
                        "effect": "APPLY_TO_ORDER"
                      },
                      "gift": null,
                      "loyalty_card": null,
                      "start_date": "2022-01-01T00:00:00.000Z",
                      "expiration_date": "2022-12-31T23:59:59.000Z",
                      "validity_timeframe": {
                        "interval": "P2D",
                        "duration": "PT1H"
                      },
                      "validity_day_of_week": [
                        1,
                        2,
                        3,
                        4,
                        5
                      ],
                      "active": false,
                      "additional_info": "This voucher will remain inactive until enabled.",
                      "metadata": {
                        "test": true,
                        "locale": "de-en"
                      },
                      "assets": {
                        "qr": {
                          "id": "U2FsdGVkX1+by33CNzWu6xXjCrLKRr1+H9K3I9wOSa7idiHrMYJe0HlrWiy7INhaJf1BnaKJjLKcUC+4/hCbILtJ9lHXZWhewG5q5rmx29gK0IH2eRauw1qCZKIlXfqeGTG2T5ftPsEl1D4xf8W2MA==",
                          "url": "https://dev.dl.voucherify.io/api/v1/assets/qr/U2FsdGVkX1%2Bby33CNzWu6xXjCrLKRr1%2BH9K3I9wOSa7idiHrMYJe0HlrWiy7INhaJf1BnaKJjLKcUC%2B4%2FhCbILtJ9lHXZWhewG5q5rmx29gK0IH2eRauw1qCZKIlXfqeGTG2T5ftPsEl1D4xf8W2MA%3D%3D"
                        },
                        "barcode": {
                          "id": "U2FsdGVkX19wOdFeXYXZ4Xu22L0Ummk03Urz/ZTnXUFeHeehtK4L6RTvNgVeSR+McTZR4DYNLEGydZ+Fo2xEqqM1UWyl8Bx22Pi1CxghADOcy3bAvSca7EEPpvKrCY403UWUDvaO/OEAjvVoiEuaHA==",
                          "url": "https://dev.dl.voucherify.io/api/v1/assets/barcode/U2FsdGVkX19wOdFeXYXZ4Xu22L0Ummk03Urz%2FZTnXUFeHeehtK4L6RTvNgVeSR%2BMcTZR4DYNLEGydZ%2BFo2xEqqM1UWyl8Bx22Pi1CxghADOcy3bAvSca7EEPpvKrCY403UWUDvaO%2FOEAjvVoiEuaHA%3D%3D"
                        }
                      },
                      "is_referral_code": false,
                      "created_at": "2022-02-17T09:05:34.668Z",
                      "updated_at": null,
                      "validation_rules_assignments": {
                        "object": "list",
                        "data_ref": "data",
                        "data": [
                          {
                            "id": "asgm_74F7QZoYbUoljwQO",
                            "rule_id": "val_4j7DCRm2IS59",
                            "related_object_id": "v_MBOEmHelKwvykVZ8JcT4TE5Kla5IMJyc",
                            "related_object_type": "voucher",
                            "created_at": "2022-02-17T09:05:34.642Z",
                            "object": "validation_rules_assignment"
                          }
                        ],
                        "total": 1
                      },
                      "redemption": {
                        "quantity": 10,
                        "redeemed_quantity": 0,
                        "object": "list",
                        "url": "/v1/vouchers/welcome/redemptions?page=1&limit=10"
                      },
                      "publish": {
                        "object": "list",
                        "count": 0,
                        "url": "/v1/vouchers/welcome/publications?page=1&limit=10"
                      },
                      "object": "voucher"
                    }
                  },
                  "Gift-Card": {
                    "value": {
                      "id": "v_7xaObxyK5LG62Rp0Xqpez7lqiBFL62pL",
                      "code": "welcomegiftcard",
                      "campaign": null,
                      "campaign_id": null,
                      "category": "New Customers",
                      "type": "GIFT_VOUCHER",
                      "discount": null,
                      "gift": {
                        "amount": 10000,
                        "balance": 10000,
                        "effect": "APPLY_TO_ORDER"
                      },
                      "loyalty_card": null,
                      "start_date": "2022-01-01T00:00:00.000Z",
                      "expiration_date": null,
                      "validity_timeframe": null,
                      "validity_day_of_week": null,
                      "active": true,
                      "additional_info": "This gift card is enabled immediately upon creation.",
                      "metadata": {
                        "test": true,
                        "locale": "de-en"
                      },
                      "assets": {
                        "qr": {
                          "id": "U2FsdGVkX1+mTbI2MdzBdMJ7AsOPKvGGgRB7O4oHZv5qq8I3M/OBPJm4PV8bTtBgR+oXOU4Jv1ucbIV7yg1mzC86LVFKjO7Ptnj+63mS9QdHvvILEAulBuZZQ+hZ0HmFXjDl4Quz/kUqGwffKGTziQ==",
                          "url": "https://dev.dl.voucherify.io/api/v1/assets/qr/U2FsdGVkX1%2BmTbI2MdzBdMJ7AsOPKvGGgRB7O4oHZv5qq8I3M%2FOBPJm4PV8bTtBgR%2BoXOU4Jv1ucbIV7yg1mzC86LVFKjO7Ptnj%2B63mS9QdHvvILEAulBuZZQ%2BhZ0HmFXjDl4Quz%2FkUqGwffKGTziQ%3D%3D"
                        },
                        "barcode": {
                          "id": "U2FsdGVkX184KgQ11OfpqB4WkJuH9ushSwZb0YrcN+8OaGPHxBQMiBr2axwnvQlZYv6YhqWtnc5iHByHrkg+6qYHxOLBPRMWCysIhcuUEB57IDhgYUHRPyM2bWjQadVHngGfVGCQ0CUy4PO/71RdMw==",
                          "url": "https://dev.dl.voucherify.io/api/v1/assets/barcode/U2FsdGVkX184KgQ11OfpqB4WkJuH9ushSwZb0YrcN%2B8OaGPHxBQMiBr2axwnvQlZYv6YhqWtnc5iHByHrkg%2B6qYHxOLBPRMWCysIhcuUEB57IDhgYUHRPyM2bWjQadVHngGfVGCQ0CUy4PO%2F71RdMw%3D%3D"
                        }
                      },
                      "is_referral_code": false,
                      "created_at": "2022-02-17T09:09:49.665Z",
                      "updated_at": null,
                      "redemption": {
                        "quantity": null,
                        "redeemed_quantity": 0,
                        "redeemed_amount": 0,
                        "object": "list",
                        "url": "/v1/vouchers/welcomegiftcard/redemptions?page=1&limit=10"
                      },
                      "publish": {
                        "object": "list",
                        "count": 0,
                        "url": "/v1/vouchers/welcomegiftcard/publications?page=1&limit=10"
                      },
                      "object": "voucher"
                    }
                  },
                  "Loyalty-Card": {
                    "value": {
                      "id": "v_l84t3fy3keMUiOeaHbN1cbTdW8O5eUlm",
                      "code": "welcomeloyalty",
                      "campaign": "Loyalty Campaign",
                      "campaign_id": "camp_E87CubZLZ8eoQt3c4kAEZsx0",
                      "category": "New Customers",
                      "type": "LOYALTY_CARD",
                      "discount": null,
                      "gift": null,
                      "loyalty_card": {
                        "points": 10000,
                        "balance": 10000
                      },
                      "start_date": null,
                      "expiration_date": null,
                      "validity_timeframe": null,
                      "validity_day_of_week": null,
                      "active": true,
                      "additional_info": "This loyalty card is enabled immediately upon creation.",
                      "metadata": {
                        "test": true,
                        "locale": "de-en"
                      },
                      "assets": {
                        "qr": {
                          "id": "U2FsdGVkX186PCWooyrNsjfI+nb+Y9ziUZ1k7xe+nJQ53Ms1ynNJOX6JXC6SwxS1WDhYwAKX5FxaDoKyuPf5MkQrkeB6u5bSx333ldAyLypNnqwBD2N17S64WFnTqV7eXUk3hS30wDYcz0cQAJFDcQ==",
                          "url": "https://dev.dl.voucherify.io/api/v1/assets/qr/U2FsdGVkX186PCWooyrNsjfI%2Bnb%2BY9ziUZ1k7xe%2BnJQ53Ms1ynNJOX6JXC6SwxS1WDhYwAKX5FxaDoKyuPf5MkQrkeB6u5bSx333ldAyLypNnqwBD2N17S64WFnTqV7eXUk3hS30wDYcz0cQAJFDcQ%3D%3D"
                        },
                        "barcode": {
                          "id": "U2FsdGVkX1/FWUg0RbOU7R7Zqg7/8Ba6oYuXrmIl7EdXGgaPMPfpePNGRzxBu4LP2dNEUO9h1Sh37MR1PxOoaemPwlgTDo/1G8dX1JjSppNoaTHhkzk2w4yutNhP7o8cq3ZBbT3TNMTKb2H3fUMc7A==",
                          "url": "https://dev.dl.voucherify.io/api/v1/assets/barcode/U2FsdGVkX1%2FFWUg0RbOU7R7Zqg7%2F8Ba6oYuXrmIl7EdXGgaPMPfpePNGRzxBu4LP2dNEUO9h1Sh37MR1PxOoaemPwlgTDo%2F1G8dX1JjSppNoaTHhkzk2w4yutNhP7o8cq3ZBbT3TNMTKb2H3fUMc7A%3D%3D"
                        }
                      },
                      "is_referral_code": false,
                      "created_at": "2022-02-17T09:12:01.428Z",
                      "updated_at": null,
                      "redemption": {
                        "quantity": null,
                        "redeemed_quantity": 0,
                        "redeemed_points": 0,
                        "object": "list",
                        "url": "/v1/vouchers/welcomeloyalty/redemptions?page=1&limit=10"
                      },
                      "publish": {
                        "object": "list",
                        "count": 0,
                        "url": "/v1/vouchers/welcomeloyalty/publications?page=1&limit=10"
                      },
                      "object": "voucher"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Returns an error if a voucher code already exists.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/e_409_duplicate_found"
                },
                "examples": {
                  "Duplicate Code": {
                    "value": {
                      "code": 409,
                      "key": "duplicate_found",
                      "message": "Duplicated resource found",
                      "details": "Duplicated voucher exists with id CODE",
                      "request_id": "v-0ae786a8f786b73dfa",
                      "resource_id": "CODE",
                      "resource_type": "voucher"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/vouchers/": {
      "post": {
        "summary": "Create Voucher",
        "operationId": "post-vouchers",
        "responses": {
          "200": {
            "description": "Returns a voucher object if the call succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/1_obj_voucher_object"
                },
                "examples": {
                  "example-1-Response-Percentage-Discount": {
                    "value": {
                      "id": "v_YJYfeKoR0XAGIvaM7k51wTbDjU4WIpC5",
                      "code": "NEW-WELCOME-COUPON",
                      "campaign": "Bug fix",
                      "campaign_id": "camp_Y6dLsYIZloGqP8izufXY6SSJ",
                      "category": "New Customers",
                      "type": "DISCOUNT_VOUCHER",
                      "discount": {
                        "type": "PERCENT",
                        "percent_off": 10,
                        "effect": "APPLY_TO_ORDER"
                      },
                      "gift": null,
                      "loyalty_card": null,
                      "start_date": "2016-01-01T00:00:00.000Z",
                      "expiration_date": "2022-12-31T23:59:59.000Z",
                      "validity_timeframe": {
                        "interval": "P2D",
                        "duration": "PT1H"
                      },
                      "validity_day_of_week": [
                        1,
                        2,
                        3,
                        4,
                        5
                      ],
                      "active": false,
                      "additional_info": "This voucher will remain inactive until enabled.",
                      "metadata": {
                        "test": true,
                        "locale": "de-en"
                      },
                      "assets": {
                        "qr": {
                          "id": "U2FsdGVkX180g6GhUA0kT47tHGvZ5thjCgY5nbsPtiecixkkEznFVg2v3SDG9dpCbXR6BSUdM/d78Wm/zru1ybT4+AQ2X0JnEy86N7TZ/aoezZORjcBRUfyVM/scUUF/vmD4Ezn+Elp2+V9AFcAXN/WthaRMl9e7xvEeIEQ5nao=",
                          "url": "https://dev.dl.voucherify.io/api/v1/assets/qr/U2FsdGVkX180g6GhUA0kT47tHGvZ5thjCgY5nbsPtiecixkkEznFVg2v3SDG9dpCbXR6BSUdM%2Fd78Wm%2Fzru1ybT4%2BAQ2X0JnEy86N7TZ%2FaoezZORjcBRUfyVM%2FscUUF%2FvmD4Ezn%2BElp2%2BV9AFcAXN%2FWthaRMl9e7xvEeIEQ5nao%3D"
                        },
                        "barcode": {
                          "id": "U2FsdGVkX1/AynivxYCEIxfTnf3A1lO0xsNihOlbUMo6Y6873LQ2qpmkk90aUFnaFKd7pVumcirRweblzGVSxy24Phhd174VSPaLxxmSKp0FPv0dRos/XWBg8zu0Kta0pA/yvFK3WWGlNoPPPnvEhVWKKzOr09Gj94SMrr+TGlI=",
                          "url": "https://dev.dl.voucherify.io/api/v1/assets/barcode/U2FsdGVkX1%2FAynivxYCEIxfTnf3A1lO0xsNihOlbUMo6Y6873LQ2qpmkk90aUFnaFKd7pVumcirRweblzGVSxy24Phhd174VSPaLxxmSKp0FPv0dRos%2FXWBg8zu0Kta0pA%2FyvFK3WWGlNoPPPnvEhVWKKzOr09Gj94SMrr%2BTGlI%3D"
                        }
                      },
                      "is_referral_code": false,
                      "created_at": "2022-02-17T07:14:40.096Z",
                      "updated_at": null,
                      "validation_rules_assignments": {
                        "object": "list",
                        "data_ref": "data",
                        "data": [
                          {
                            "id": "asgm_COu5PJAsWmAwuCqR",
                            "rule_id": "val_4j7DCRm2IS59",
                            "related_object_id": "v_YJYfeKoR0XAGIvaM7k51wTbDjU4WIpC5",
                            "related_object_type": "voucher",
                            "created_at": "2022-02-17T07:14:40.280Z",
                            "object": "validation_rules_assignment"
                          }
                        ],
                        "total": 1
                      },
                      "redemption": {
                        "quantity": 10,
                        "redeemed_quantity": 0,
                        "object": "list",
                        "url": "/v1/vouchers/NEW-WELCOME-COUPON/redemptions?page=1&limit=10"
                      },
                      "publish": {
                        "object": "list",
                        "count": 0,
                        "url": "/v1/vouchers/NEW-WELCOME-COUPON/publications?page=1&limit=10"
                      },
                      "object": "voucher"
                    }
                  },
                  "example-2-Response-Gift-Voucher": {
                    "value": {
                      "id": "v_yAZyBimXtF9yQ2C5BEF9WMhNzOMJNfz6",
                      "code": "New-GIFT-CARD-8tqB6FcyhE0",
                      "campaign": null,
                      "campaign_id": null,
                      "category": "New Customers",
                      "type": "GIFT_VOUCHER",
                      "discount": null,
                      "gift": {
                        "amount": 10000,
                        "balance": 10000,
                        "effect": "APPLY_TO_ORDER"
                      },
                      "loyalty_card": null,
                      "start_date": "2022-01-01T00:00:00.000Z",
                      "expiration_date": null,
                      "validity_timeframe": null,
                      "validity_day_of_week": null,
                      "active": true,
                      "additional_info": "This gift card is enabled immediately upon creation.",
                      "metadata": {
                        "test": true,
                        "locale": "de-en"
                      },
                      "assets": {
                        "qr": {
                          "id": "U2FsdGVkX1+pm0q3U4i/KrjResuZpwDigEa5WcDOlwYS/bj3rsesZXDpJF5MNHMUsKqy0+wn5tY3QbjPGv0dwbqRn/OjrIRgNlP99azD0n0n9C/chiTABp8BxlJmMKKFo5AggBbQu4+Mw8Cv8V3+0Ga7ETzeehS+Yrj6c+3ioxg=",
                          "url": "https://dev.dl.voucherify.io/api/v1/assets/qr/U2FsdGVkX1%2Bpm0q3U4i%2FKrjResuZpwDigEa5WcDOlwYS%2Fbj3rsesZXDpJF5MNHMUsKqy0%2Bwn5tY3QbjPGv0dwbqRn%2FOjrIRgNlP99azD0n0n9C%2FchiTABp8BxlJmMKKFo5AggBbQu4%2BMw8Cv8V3%2B0Ga7ETzeehS%2BYrj6c%2B3ioxg%3D"
                        },
                        "barcode": {
                          "id": "U2FsdGVkX1/UaGX0zV8oXbpYah2G76V1ljYSy6hDSnWAZhpz5v10vRibGaOJUahyLcClMyxAsUhU9WXWi4BUGWIEEu510AxzxyGHOTDTjavJH0Q79PI0ciLHdujNFOgLOXWe9Ffwzj+Kvjmbhb22/SVZd/xzQlUBJcv7XboJYU0=",
                          "url": "https://dev.dl.voucherify.io/api/v1/assets/barcode/U2FsdGVkX1%2FUaGX0zV8oXbpYah2G76V1ljYSy6hDSnWAZhpz5v10vRibGaOJUahyLcClMyxAsUhU9WXWi4BUGWIEEu510AxzxyGHOTDTjavJH0Q79PI0ciLHdujNFOgLOXWe9Ffwzj%2BKvjmbhb22%2FSVZd%2FxzQlUBJcv7XboJYU0%3D"
                        }
                      },
                      "is_referral_code": false,
                      "created_at": "2022-02-17T07:49:10.834Z",
                      "updated_at": null,
                      "redemption": {
                        "quantity": null,
                        "redeemed_quantity": 0,
                        "redeemed_amount": 0,
                        "object": "list",
                        "url": "/v1/vouchers/New-GIFT-CARD-8tqB6FcyhE0/redemptions?page=1&limit=10"
                      },
                      "publish": {
                        "object": "list",
                        "count": 0,
                        "url": "/v1/vouchers/New-GIFT-CARD-8tqB6FcyhE0/publications?page=1&limit=10"
                      },
                      "object": "voucher"
                    }
                  },
                  "example-3-Response-Loyalty-Card": {
                    "value": {
                      "id": "v_tVkcOhjHCz9W7q8QnuJnTGPBR2hdaYrC",
                      "code": "New-LOYALTY-CARD-UC1",
                      "campaign": "Loyalty Campaign",
                      "campaign_id": "camp_E87CubZLZ8eoQt3c4kAEZsx0",
                      "category": "New Customers",
                      "type": "LOYALTY_CARD",
                      "discount": null,
                      "gift": null,
                      "loyalty_card": {
                        "points": 10000,
                        "balance": 10000
                      },
                      "start_date": null,
                      "expiration_date": null,
                      "validity_timeframe": null,
                      "validity_day_of_week": null,
                      "active": true,
                      "additional_info": "This loyalty card is enabled immediately upon creation.",
                      "metadata": {
                        "test": true,
                        "locale": "de-en"
                      },
                      "assets": {
                        "qr": {
                          "id": "U2FsdGVkX1+6lGBFlqtS9OoY2wbAsoSupV43qa+g5sGu+R0IDTq2k85LIfbKfV9sDSYv80pP9ucsazJ6qGI9ineqQyhv9VVHdsJ2qGRiuZzpw/vRkSA0a7J9N1MpANgzqpIULZHLjYtrCQ/2el72nZ6Hpr2NkWtk19JTpNwB8tk=",
                          "url": "https://dev.dl.voucherify.io/api/v1/assets/qr/U2FsdGVkX1%2B6lGBFlqtS9OoY2wbAsoSupV43qa%2Bg5sGu%2BR0IDTq2k85LIfbKfV9sDSYv80pP9ucsazJ6qGI9ineqQyhv9VVHdsJ2qGRiuZzpw%2FvRkSA0a7J9N1MpANgzqpIULZHLjYtrCQ%2F2el72nZ6Hpr2NkWtk19JTpNwB8tk%3D"
                        },
                        "barcode": {
                          "id": "U2FsdGVkX180bvJVsyZvpAqwYXTnm4MvvH4Rur+ZhM+Mbmnva/fgYUcUbOttsFXPY/PMZ9Xi8pomVp26a7amIPguNimD8w4PMZLMavMtH7EtJ4k+0V0Wp7JUkudIKeRw2fDnQ3/0cgqvK6PMReUwFWb5nUT3ABpZDAdaOVoMDhE=",
                          "url": "https://dev.dl.voucherify.io/api/v1/assets/barcode/U2FsdGVkX180bvJVsyZvpAqwYXTnm4MvvH4Rur%2BZhM%2BMbmnva%2FfgYUcUbOttsFXPY%2FPMZ9Xi8pomVp26a7amIPguNimD8w4PMZLMavMtH7EtJ4k%2B0V0Wp7JUkudIKeRw2fDnQ3%2F0cgqvK6PMReUwFWb5nUT3ABpZDAdaOVoMDhE%3D"
                        }
                      },
                      "is_referral_code": false,
                      "created_at": "2022-02-17T08:06:41.091Z",
                      "updated_at": null,
                      "redemption": {
                        "quantity": null,
                        "redeemed_quantity": 0,
                        "redeemed_points": 0,
                        "object": "list",
                        "url": "/v1/vouchers/New-LOYALTY-CARD-UC1/redemptions?page=1&limit=10"
                      },
                      "publish": {
                        "object": "list",
                        "count": 0,
                        "url": "/v1/vouchers/New-LOYALTY-CARD-UC1/publications?page=1&limit=10"
                      },
                      "object": "voucher"
                    }
                  },
                  "example-4-Response-Unit-Discount-Multiple-Items": {
                    "value": {
                      "id": "v_cu8nyozvTDA413H17bH5BLha0cjxt7s8",
                      "code": "MultipleUnitTypesUnitDiscount",
                      "campaign": null,
                      "campaign_id": null,
                      "category": "New Customers",
                      "type": "DISCOUNT_VOUCHER",
                      "discount": {
                        "type": "UNIT",
                        "effect": "ADD_MANY_ITEMS",
                        "units": [
                          {
                            "unit_off": 1,
                            "unit_type": "prod_0a9f9ab4ab019a42d5",
                            "effect": "ADD_NEW_ITEMS"
                          },
                          {
                            "unit_off": 1,
                            "unit_type": "prod_0a9f9aeddb019a42db",
                            "effect": "ADD_MISSING_ITEMS"
                          }
                        ]
                      },
                      "gift": null,
                      "loyalty_card": null,
                      "start_date": "2020-01-01T00:00:00.000Z",
                      "expiration_date": "2022-12-31T23:59:59.000Z",
                      "validity_timeframe": {
                        "interval": "P2D",
                        "duration": "PT1H"
                      },
                      "validity_day_of_week": [
                        1,
                        2,
                        3,
                        4,
                        5
                      ],
                      "active": false,
                      "additional_info": "This voucher will remain inactive until enabled.",
                      "metadata": {
                        "test": true,
                        "locale": "de-en"
                      },
                      "assets": {
                        "qr": {
                          "id": "U2FsdGVkX1+ocJBtZ9NqT97gZ/QTfOz54TAoRoKO3tnCYBtHZWMghEHT0b2aFrPSL1lqMyf6fYy6DH2/DkH5p5Vd8dOozW1LV6wPVatWpa1lZMeMIB0OcARCW3q+3QydoW2KdliLKyksFwumH9C7Fsnj6HTaEbUjSttTZE/be+o=",
                          "url": "https://dev.dl.voucherify.io/api/v1/assets/qr/U2FsdGVkX1%2BocJBtZ9NqT97gZ%2FQTfOz54TAoRoKO3tnCYBtHZWMghEHT0b2aFrPSL1lqMyf6fYy6DH2%2FDkH5p5Vd8dOozW1LV6wPVatWpa1lZMeMIB0OcARCW3q%2B3QydoW2KdliLKyksFwumH9C7Fsnj6HTaEbUjSttTZE%2Fbe%2Bo%3D"
                        },
                        "barcode": {
                          "id": "U2FsdGVkX1+Sly3IYj3EbZFHGGNxV6Ns4j76O8d0kRQe3WriJz5qY6s4GBIwlsdy13AciaQuiVt232HlOlZ4TzGaSSk3+ZMldwBGaTp/fIN9SGBW/NVUtfDOI2sIDLZCBBrdK7WVvtCQQ+1Y+6qClYg/QurJExCFRkDeKpKjDug=",
                          "url": "https://dev.dl.voucherify.io/api/v1/assets/barcode/U2FsdGVkX1%2BSly3IYj3EbZFHGGNxV6Ns4j76O8d0kRQe3WriJz5qY6s4GBIwlsdy13AciaQuiVt232HlOlZ4TzGaSSk3%2BZMldwBGaTp%2FfIN9SGBW%2FNVUtfDOI2sIDLZCBBrdK7WVvtCQQ%2B1Y%2B6qClYg%2FQurJExCFRkDeKpKjDug%3D"
                        }
                      },
                      "is_referral_code": false,
                      "created_at": "2022-02-18T06:27:45.619Z",
                      "updated_at": null,
                      "redemption": {
                        "quantity": 5,
                        "redeemed_quantity": 0,
                        "object": "list",
                        "url": "/v1/vouchers/MultipleUnitTypesUnitDiscount/redemptions?page=1&limit=10"
                      },
                      "publish": {
                        "object": "list",
                        "count": 0,
                        "url": "/v1/vouchers/MultipleUnitTypesUnitDiscount/publications?page=1&limit=10"
                      },
                      "object": "voucher"
                    }
                  },
                  "example-5-Response-Unit-Discount-Single-Item": {
                    "value": {
                      "id": "v_NQdraO4fXWYvMMWYL9OY22hRernr553n",
                      "code": "AddMissingItemDiscount",
                      "campaign": null,
                      "campaign_id": null,
                      "category": "New Customers",
                      "type": "DISCOUNT_VOUCHER",
                      "discount": {
                        "type": "UNIT",
                        "unit_off": 1,
                        "unit_type": "prod_0a9f9ab4ab019a42d5",
                        "effect": "ADD_MISSING_ITEMS"
                      },
                      "gift": null,
                      "loyalty_card": null,
                      "start_date": "2020-01-01T00:00:00.000Z",
                      "expiration_date": "2022-12-31T23:59:59.000Z",
                      "validity_timeframe": null,
                      "validity_day_of_week": null,
                      "active": false,
                      "additional_info": "This voucher will remain inactive until enabled.",
                      "metadata": {},
                      "assets": {
                        "qr": {
                          "id": "U2FsdGVkX19Yh7LTNyOVKSXQ+ceTr023saElWAUeucwOgjTH50x1SoSF/PP1aoGBr6sSxHZNZOvBGumWNHjsF85y7cPY7La/4a0d1kWqnAiBWeWnGOgDFeQFqthGswypFOK1jdAzUPqLSbxW3O6q936N6Bsmoz4QHYE//kfWFhs=",
                          "url": "https://dev.dl.voucherify.io/api/v1/assets/qr/U2FsdGVkX19Yh7LTNyOVKSXQ%2BceTr023saElWAUeucwOgjTH50x1SoSF%2FPP1aoGBr6sSxHZNZOvBGumWNHjsF85y7cPY7La%2F4a0d1kWqnAiBWeWnGOgDFeQFqthGswypFOK1jdAzUPqLSbxW3O6q936N6Bsmoz4QHYE%2F%2FkfWFhs%3D"
                        },
                        "barcode": {
                          "id": "U2FsdGVkX1+RqzgyYsIJzAEBxmQt1OZLu4+PSUDQBldDKK1o5XsEoBSQEMPWHis1wJSg4ZNqJ9ZdJ0Ukc+K6X1fjg0ggDsCdXP2ZxpyGPD8/1ReggJZ/tq823ji7A5pzhG1TljA6+vmISuHvs2wkcum0djN9AWuAlB0F/vbXexo=",
                          "url": "https://dev.dl.voucherify.io/api/v1/assets/barcode/U2FsdGVkX1%2BRqzgyYsIJzAEBxmQt1OZLu4%2BPSUDQBldDKK1o5XsEoBSQEMPWHis1wJSg4ZNqJ9ZdJ0Ukc%2BK6X1fjg0ggDsCdXP2ZxpyGPD8%2F1ReggJZ%2Ftq823ji7A5pzhG1TljA6%2BvmISuHvs2wkcum0djN9AWuAlB0F%2FvbXexo%3D"
                        }
                      },
                      "is_referral_code": false,
                      "created_at": "2022-02-18T06:46:44.536Z",
                      "updated_at": null,
                      "redemption": {
                        "quantity": 3,
                        "redeemed_quantity": 0,
                        "object": "list",
                        "url": "/v1/vouchers/AddMissingItemDiscount/redemptions?page=1&limit=10"
                      },
                      "publish": {
                        "object": "list",
                        "count": 0,
                        "url": "/v1/vouchers/AddMissingItemDiscount/publications?page=1&limit=10"
                      },
                      "object": "voucher"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Create a standalone voucher. You can choose to create a `GIFT_VOUCHER`, a `DISCOUNT_VOUCHER`, or a `LOYALTY_CARD`. \n\nWhen you create a new voucher, you can specify a type to create it.\nCreating a new voucher will create a new stand alone voucher if no `campaign` name or `campaign_id` is provided. In case of the loyalty card, a campaign name is required.\n\nYou can optionally use the `code` parameter to define a specific code or the `code_config` parameter to design rules for Voucherify API to create a random code. If neither of the two parameters are passed, then a random code is generated by the Voucherify API.\n\nThis method will return an error when trying to create a voucher that already exists.",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/1_req_vouchers__POST"
              },
              "examples": {
                "example-1-Create-Percentage-Discount": {
                  "value": {
                    "category": "New Customers",
                    "code": "NEW-WELCOME-COUPON",
                    "type": "DISCOUNT_VOUCHER",
                    "campaign_id": "camp_Y6dLsYIZloGqP8izufXY6SSJ",
                    "discount": {
                      "percent_off": 10,
                      "type": "PERCENT",
                      "effect": "APPLY_TO_ORDER"
                    },
                    "start_date": "2016-01-01T00:00:00Z",
                    "expiration_date": "2022-12-31T23:59:59Z",
                    "validity_timeframe": {
                      "duration": "PT1H",
                      "interval": "P2D"
                    },
                    "validity_day_of_week": [
                      1,
                      2,
                      3,
                      4,
                      5
                    ],
                    "active": false,
                    "additional_info": "This voucher will remain inactive until enabled.",
                    "redemption": {
                      "quantity": 10
                    },
                    "metadata": {
                      "test": true,
                      "locale": "de-en"
                    },
                    "validation_rules": [
                      "val_4j7DCRm2IS59"
                    ]
                  }
                },
                "example-2-Create-Gift-Card": {
                  "value": {
                    "category": "New Customers",
                    "type": "GIFT_VOUCHER",
                    "gift": {
                      "amount": 10000,
                      "effect": "APPLY_TO_ORDER"
                    },
                    "start_date": "2022-01-01T00:00:00Z",
                    "active": true,
                    "additional_info": "This gift card is enabled immediately upon creation.",
                    "metadata": {
                      "test": true,
                      "locale": "de-en"
                    },
                    "code_config": {
                      "pattern": "GIFT-CARD-##########",
                      "prefix": "New-",
                      "postfix": "0",
                      "charset": "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"
                    }
                  }
                },
                "example-3-Create-Loyalty-Card": {
                  "value": {
                    "category": "New Customers",
                    "campaign": "camp_E87CubZLZ8eoQt3c4kAEZsx0",
                    "type": "LOYALTY_CARD",
                    "loyalty_card": {
                      "points": 10000
                    },
                    "additional_info": "This loyalty card is enabled immediately upon creation.",
                    "metadata": {
                      "test": true,
                      "locale": "de-en"
                    },
                    "code_config": {
                      "pattern": "LOYALTY-CARD-##",
                      "prefix": "New-",
                      "postfix": "1",
                      "charset": "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"
                    }
                  }
                },
                "example-4-Create-Unit-Discount-Multiple-Items": {
                  "value": {
                    "category": "New Customers",
                    "code": "MultipleUnitTypesUnitDiscount",
                    "type": "DISCOUNT_VOUCHER",
                    "discount": {
                      "type": "UNIT",
                      "effect": "ADD_MANY_ITEMS",
                      "units": [
                        {
                          "unit_off": 1,
                          "unit_type": "prod_0a9f9ab4ab019a42d5",
                          "effect": "ADD_NEW_ITEMS"
                        },
                        {
                          "unit_off": 1,
                          "unit_type": "prod_0a9f9aeddb019a42db",
                          "effect": "ADD_MISSING_ITEMS"
                        }
                      ]
                    },
                    "start_date": "2020-01-01T00:00:00Z",
                    "expiration_date": "2022-12-31T23:59:59Z",
                    "validity_timeframe": {
                      "duration": "PT1H",
                      "interval": "P2D"
                    },
                    "validity_day_of_week": [
                      1,
                      2,
                      3,
                      4,
                      5
                    ],
                    "active": false,
                    "additional_info": "This voucher will remain inactive until enabled.",
                    "redemption": {
                      "quantity": 5
                    },
                    "metadata": {
                      "test": true,
                      "locale": "de-en"
                    }
                  }
                },
                "example-5-Create-Unit-Discount-Single-Item": {
                  "value": {
                    "category": "New Customers",
                    "code": "AddMissingItemDiscount",
                    "type": "DISCOUNT_VOUCHER",
                    "discount": {
                      "type": "UNIT",
                      "unit_off": 1,
                      "unit_type": "prod_0a9f9ab4ab019a42d5",
                      "effect": "ADD_MISSING_ITEMS"
                    },
                    "start_date": "2020-01-01T00:00:00Z",
                    "expiration_date": "2022-12-31T23:59:59Z",
                    "active": false,
                    "additional_info": "This voucher will remain inactive until enabled.",
                    "redemption": {
                      "quantity": 3
                    }
                  }
                }
              }
            }
          },
          "description": "Specify the details of the voucher that you would like to create."
        },
        "tags": [
          "VOUCHERS API"
        ]
      }
    },
    "/vouchers": {
      "get": {
        "summary": "List Vouchers",
        "tags": [
          "VOUCHERS API"
        ],
        "operationId": "get-vouchers",
        "description": "Returns a list of your vouchers. The vouchers are returned sorted by creation date, with the most recent vouchers appearing first.\n\nWhen you get a list of vouchers, you can optionally specify query parameters to customize the amount of vouchers returned per call using `limit`, which page of vouchers to return using `page`, sort the vouchers using the `order` query parameter and more.\n\nThis method will return an error when trying to return a limit of more than 100 vouchers.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/category"
          },
          {
            "in": "query",
            "name": "campaign_id",
            "description": "Limit search results to vouchers within the specified campaign",
            "schema": {
              "type": "string",
              "example": "camp_Pfja7X91b1GoyH5wnpzCwlP3"
            }
          },
          {
            "$ref": "#/components/parameters/customer"
          },
          {
            "$ref": "#/components/parameters/campaign"
          },
          {
            "$ref": "#/components/parameters/created_at"
          },
          {
            "$ref": "#/components/parameters/created_at[after]"
          },
          {
            "$ref": "#/components/parameters/created_at[before]"
          },
          {
            "$ref": "#/components/parameters/updated_at"
          },
          {
            "$ref": "#/components/parameters/updated_at[after]"
          },
          {
            "$ref": "#/components/parameters/updated_at[before]"
          },
          {
            "$ref": "#/components/parameters/order"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a dictionary that contains an array of vouchers. Each entry in the array is a separate voucher object. If no more vouchers are available (query parameter `page` incremented over and above the voucher count), the resulting array will be empty. The result can be narrowed down according to specified (or default) filters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/1_res_vouchers_GET"
                }
              }
            }
          }
        }
      }
    },
    "/vouchers/{code}/enable": {
      "parameters": [
        {
          "$ref": "#/components/parameters/code"
        }
      ],
      "post": {
        "summary": "Enable Voucher",
        "tags": [
          "VOUCHERS API"
        ],
        "operationId": "post-vouchers-code-enable",
        "description": "There are various times when you'll want to manage a voucher's accessibility. This can be done by two API methods for managing the voucher state - *enable* and *disable*.  \n___\nSets voucher state to **active**. The voucher can be redeemed - only if the redemption occurs after the start date and the voucher is not expired.",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a voucher object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/1_obj_voucher_object"
                }
              }
            }
          },
          "404": {
            "description": "Not Found. If the voucher code does not exist, this call returns an error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/e_404_not_found"
                },
                "examples": {
                  "example-1-Not-Found": {
                    "value": {
                      "code": 404,
                      "key": "not_found",
                      "message": "Resource not found",
                      "details": "Cannot find voucher with id IrKORhS",
                      "request_id": "v-0a96cd820301c0483a",
                      "resource_id": "IrKORhS",
                      "resource_type": "voucher"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/vouchers/{code}/disable": {
      "parameters": [
        {
          "$ref": "#/components/parameters/code"
        }
      ],
      "post": {
        "summary": "Disable Voucher",
        "tags": [
          "VOUCHERS API"
        ],
        "operationId": "post-vouchers-code-disable",
        "description": "There are various times when you'll want to manage a voucher's accessibility. This can be done by two API methods for managing the voucher state - *enable* and *disable*.  \n___\nSets voucher state to **inactive**. The voucher cannot be redeemed.",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a voucher object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/1_obj_voucher_object"
                }
              }
            }
          },
          "404": {
            "description": "Not Found. If the voucher code does not exist, this call returns an error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/e_404_not_found"
                },
                "examples": {
                  "example-1-Not-Found": {
                    "value": {
                      "code": 404,
                      "key": "not_found",
                      "message": "Resource not found",
                      "details": "Cannot find voucher with id IrKORhS",
                      "request_id": "v-0a96cd820301c0483a",
                      "resource_id": "IrKORhS",
                      "resource_type": "voucher"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/vouchers/{code}/balance": {
      "parameters": [
        {
          "$ref": "#/components/parameters/code"
        }
      ],
      "post": {
        "summary": "Add Gift Card Balance",
        "tags": [
          "VOUCHERS API"
        ],
        "operationId": "post-vouchers-code-balance",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "description": "Add balance to an existing gift card.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/1_req_vouchers_code_balance"
              },
              "examples": {
                "example-1": {
                  "value": {
                    "amount": 10000
                  }
                }
              }
            }
          },
          "required": true,
          "description": "Provide the amount to be added to the gift card."
        },
        "responses": {
          "200": {
            "description": "Returns a balance object if the operation succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/1_res_vouchers_code_balance"
                },
                "examples": {
                  "example-1-Balance": {
                    "value": {
                      "amount": 10000,
                      "total": 20100,
                      "balance": 20100,
                      "type": "gift_voucher",
                      "object": "balance",
                      "related_object": {
                        "type": "voucher",
                        "id": "v_4Bd3aX7eXjHbe7Ef7on8YsLWBynsT4jq"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found. A common source of error is an invalid type of voucher, or non-existent code.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/e_404_not_found"
                },
                "examples": {
                  "example-1-Not-Found": {
                    "value": {
                      "code": 404,
                      "key": "not_found",
                      "message": "Resource not found",
                      "details": "Cannot find voucher with id IrKORhS",
                      "request_id": "v-0a96cd820301c0483a",
                      "resource_id": "IrKORhS",
                      "resource_type": "voucher"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/vouchers/import": {
      "post": {
        "summary": "Import Vouchers",
        "tags": [
          "VOUCHERS API"
        ],
        "operationId": "post-vouchers-import",
        "description": "Import standalone vouchers and gift cards into the repository.\n\n<!-- theme: info -->\n\n> #### Important notes\n>\n> - Start and expiration dates need to be provided in compliance with the ISO 8601 norms. For example, 2020-03-11T09:00:00.000Z.\n> - Custom code attributes (not supported by-default) need to be added as code metadata.\n> - You cannot import the same codes to a single Voucherify Project.\n\nAny parameters not provided in the payload will be left blank or null.\n\nFor both standalone discount vouchers and gift cards, you can import the following fields:  \n\n- `code`\n- `category`\n- `active`\n- `type`\n- `start_date`\n- `expiration_date`\n- `redemption` &rarr; `quantity`\n- `additional_info`\n- `metadata`\n\nFor gift cards, you can import the following field:\n\n- `gift` &rarr; `amount`\n\nFor discount vouchers, you can import the `discount` field; the object will slightly vary depending on the type of discount. Each discount type **requires** the `type` to be defined in the import.\n\n- `discount` &darr;\n  - Amount type &rarr; `amount_off`, `effect`\n  - Percent type &rarr; `percent_off`, `effect`\n  - Fixed type &rarr; `fixed_amount`, `effect`\n  - Unit type &darr; \n    - One item &rarr; `unit_off`, `unit_type`, `effect`\n    - Multiple item types &rarr; `unit_off`, `unit_type`, `effect`\n  - Shipping type &rarr; `unit_off`, `unit_type`, `effect`\n\nFields other than the ones listed above won't be imported. Even if provided, they will be silently skipped.",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/1_req_vouchers_import"
              },
              "examples": {
                "example-1-Array-Of-Vouchers": {
                  "value": [
                    {
                      "code": "PROMO-CODE30OFF-NO-EFFECT",
                      "category": "new customer acquisition",
                      "type": "DISCOUNT_VOUCHER",
                      "active": true,
                      "discount": {
                        "amount_off": 3000,
                        "type": "AMOUNT"
                      },
                      "start_date": "2020-12-01T23:00:00Z",
                      "expiration_date": "2023-12-19T23:00:00Z",
                      "redemption": {
                        "quantity": 1
                      },
                      "metadata": {
                        "unit": "EUR"
                      },
                      "additional_info": "secret-code1"
                    },
                    {
                      "code": "PROMO-CODE30-PERCENT-NO-EFFECT",
                      "type": "DISCOUNT_VOUCHER",
                      "active": false,
                      "discount": {
                        "percent_off": 30,
                        "type": "PERCENT"
                      },
                      "start_date": "2020-12-10T23:00:00Z",
                      "expiration_date": "2023-12-31T23:00:00Z",
                      "redemption": {
                        "quantity": 1
                      },
                      "metadata": {
                        "unit": "EUR"
                      },
                      "additional_info": "secret-code2"
                    },
                    {
                      "code": "GIFT-CARD-100",
                      "type": "GIFT_VOUCHER",
                      "active": true,
                      "category": "new customer acquisition",
                      "gift": {
                        "amount": 10000
                      },
                      "start_date": "2020-12-10T23:00:00Z",
                      "expiration_date": "2023-12-31T23:00:00Z",
                      "redemption": {
                        "quantity": 5
                      },
                      "metadata": {
                        "unit": "EUR"
                      },
                      "additional_info": "secret-GIFT-code2"
                    },
                    {
                      "code": "PROMO-CODE1-PERCENT-EFFECT-ORDER",
                      "type": "DISCOUNT_VOUCHER",
                      "active": false,
                      "discount": {
                        "percent_off": 30,
                        "type": "PERCENT",
                        "effect": "APPLY_TO_ORDER"
                      },
                      "start_date": "2020-12-10T23:00:00Z",
                      "expiration_date": "2023-12-31T23:00:00Z",
                      "redemption": {
                        "quantity": 1
                      },
                      "metadata": {
                        "unit": "EUR"
                      },
                      "additional_info": "secret-code2"
                    },
                    {
                      "code": "PROMO-CODE2-PERCENT-EFFECT-ITEM",
                      "type": "DISCOUNT_VOUCHER",
                      "active": false,
                      "discount": {
                        "percent_off": 30,
                        "type": "PERCENT",
                        "effect": "APPLY_TO_ITEMS"
                      },
                      "start_date": "2020-12-10T23:00:00Z",
                      "expiration_date": "2023-12-31T23:00:00Z",
                      "redemption": {
                        "quantity": 1
                      },
                      "metadata": {
                        "unit": "EUR"
                      },
                      "additional_info": "secret-code2"
                    },
                    {
                      "code": "PROMO-CODE1-PERCENT-NO-EFFECT-REDEEMED-QUANTITY-ATTRIBUTE-DOESNT-GET-PASSED",
                      "type": "DISCOUNT_VOUCHER",
                      "active": false,
                      "discount": {
                        "percent_off": 30,
                        "type": "PERCENT"
                      },
                      "start_date": "2020-12-10T23:00:00Z",
                      "expiration_date": "2023-12-31T23:00:00Z",
                      "redemption": {
                        "quantity": 1,
                        "redeemed_quantity": 1
                      },
                      "metadata": {
                        "unit": "EUR"
                      },
                      "additional_info": "secret-code2"
                    },
                    {
                      "code": "PROMO-CODE1-AMOUNT-EFFECT-ITEMS-PROPORTIONALLY",
                      "type": "DISCOUNT_VOUCHER",
                      "active": false,
                      "discount": {
                        "amount_off": 30,
                        "type": "AMOUNT",
                        "effect": "APPLY_TO_ITEMS_PROPORTIONALLY"
                      },
                      "start_date": "2020-12-10T23:00:00Z",
                      "expiration_date": "2023-12-31T23:00:00Z",
                      "redemption": {
                        "quantity": 1
                      },
                      "metadata": {
                        "unit": "EUR"
                      },
                      "additional_info": "secret-code2"
                    },
                    {
                      "code": "PROMO-CODE1-FIXED-EFFECT-ORDER",
                      "type": "DISCOUNT_VOUCHER",
                      "active": false,
                      "discount": {
                        "fixed_amount": 30,
                        "type": "FIXED",
                        "effect": "APPLY_TO_ORDER"
                      },
                      "start_date": "2020-12-10T23:00:00Z",
                      "expiration_date": "2023-12-31T23:00:00Z",
                      "redemption": {
                        "quantity": 1
                      },
                      "metadata": {
                        "unit": "EUR"
                      },
                      "additional_info": "secret-code2"
                    },
                    {
                      "code": "PROMO-CODE1-UNIT-SINGLE-ITEM-EFFECT-MISSING",
                      "type": "DISCOUNT_VOUCHER",
                      "active": false,
                      "discount": {
                        "unit_off": 1,
                        "unit_type": "prod_0a9f9aeddb019a42db",
                        "type": "UNIT",
                        "effect": "ADD_MISSING_ITEMS"
                      },
                      "start_date": "2020-12-10T23:00:00Z",
                      "expiration_date": "2023-12-31T23:00:00Z",
                      "redemption": {
                        "quantity": 1
                      },
                      "metadata": {
                        "unit": "EUR"
                      },
                      "additional_info": "secret-code2"
                    },
                    {
                      "code": "PROMO-CODE2-UNIT-MULTIPLE-ITEMS",
                      "type": "DISCOUNT_VOUCHER",
                      "active": true,
                      "discount": {
                        "type": "UNIT",
                        "effect": "ADD_MANY_ITEMS",
                        "units": [
                          {
                            "unit_off": 1,
                            "unit_type": "prod_0a9f9aeddb019a42db",
                            "effect": "ADD_MISSING_ITEMS"
                          },
                          {
                            "unit_off": 1,
                            "unit_type": "prod_0a9f9aeddb019a42db",
                            "effect": "ADD_NEW_ITEMS"
                          }
                        ]
                      },
                      "start_date": "2020-12-10T23:00:00Z",
                      "expiration_date": "2023-12-31T23:00:00Z",
                      "redemption": {
                        "quantity": 1
                      },
                      "metadata": {
                        "unit": "EUR"
                      },
                      "additional_info": "secret-code2"
                    },
                    {
                      "code": "PROMO-CODE1-SHIPPING",
                      "type": "DISCOUNT_VOUCHER",
                      "active": false,
                      "discount": {
                        "type": "UNIT",
                        "unit_off": 1,
                        "unit_type": "prod_5h1pp1ng",
                        "effect": "ADD_MISSING_ITEMS"
                      },
                      "start_date": "2020-12-10T23:00:00Z",
                      "expiration_date": "2023-12-31T23:00:00Z",
                      "redemption": {
                        "quantity": 1
                      },
                      "metadata": {
                        "unit": "EUR"
                      },
                      "additional_info": "secret-code2"
                    }
                  ]
                }
              }
            }
          },
          "required": true,
          "description": "The request body is an array of objects. Each object contains details about a specific voucher. "
        },
        "responses": {
          "202": {
            "description": "Returns id of the scheduled async action. The response informs you that your request has been accepted and vouchers will be added to the repository asynchronously. To check the import status and result, copy the `async_action_id` from the response and pass it using the [Get Async Action](OpenAPI.json/paths/~1async-actions~1{async_action_id}/get) endpoint.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/a_res_async_actions"
                },
                "examples": {
                  "example-1-Async-Action-Id": {
                    "value": {
                      "async_action_id": "aa_0aac93c6af84485df3"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/vouchers/importCSV": {
      "post": {
        "summary": "Import Vouchers using CSV",
        "tags": [
          "VOUCHERS API"
        ],
        "operationId": "post-vouchers-importCSV",
        "description": "Import standalone vouchers into the repository using a CSV file.\n\nThe CSV file has to include headers in the first line. All properties listed in the file headers that cannot be mapped to standard voucher fields will be added to the metadata object.  \n\nYou can find an example CSV file [here](https://support.voucherify.io/article/45-import-codes-and-share-them-digitally#coupons).\n___\nCurl Example\n<!--\ntitle: \"Example Request\"\nlineNumbers: true\n-->\n```cURL\ncurl -X POST \\\n  https://api.voucherify.io/v1/vouchers/importCSV \\\n  -F file=@/path/to/vouchers.csv \\\n  -H \"X-App-Id: c70a6f00-cf91-4756-9df5-47628850002b\" \\\n  -H \"X-App-Token: 3266b9f8-e246-4f79-bdf0-833929b1380c\"\n```\n\n<!-- theme: info -->\n\n> #### Standard voucher fields mapping\n>\n> Go to the [import vouchers](OpenAPI.json/paths/~1vouchers~1import) to see all standard CSV fields description(section body params).\n> - Supported CSV file headers: Code,Voucher Type,Value,Discount Type,Category,Start Date,Expiration Date,Redemption Limit,Active,Additional Info,Custom Metadata Property Name\n>- Start and expiration dates need to be provided in compliance with the ISO 8601 norms. For example, 2020-03-11T09:00:00.000Z.  \n>    - `YYYY-MM-DD`\n>    - `YYYY-MM-DDTHH`\n>    - `YYYY-MM-DDTHH:mm`\n>    - `YYYY-MM-DDTHH:mm:ss`\n>    - `YYYY-MM-DDTHH:mm:ssZ`\n>    - `YYYY-MM-DDTHH:mm:ssZ`\n>    - `YYYY-MM-DDTHH:mm:ss.SSSZ`\n> - Custom code attributes (not supported by-default) need to be added as code metadata.\n> - You cannot import the same codes to a single Voucherify Project.\n\n<!-- theme: info -->\n\n> #### Standard voucher fields mapping\n>\n> In the structure representing your data, you can define a category that the voucher belongs to. You can later use the category of a voucher to group and search by specific criteria.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/a_req_importCSV"
              }
            }
          },
          "description": "The file path is stored in the form `file` header."
        },
        "responses": {
          "200": {
            "description": "Returns ID of the scheduled async action. The response informs you that your request has been accepted and vouchers will be added to the repository asynchronously. To check the import status and result, copy the `async_action_id` from the response and pass it using the [Get Async Action](OpenAPI.json/paths/~1async-actions~1{async_action_id}/get) endpoint.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/a_res_async_actions"
                }
              }
            }
          }
        }
      }
    },
    "/vouchers/qualification": {
      "post": {
        "summary": "Examine Qualification",
        "tags": [
          "VOUCHERS API"
        ],
        "operationId": "post-vouchers-qualification",
        "description": "Display vouchers qualified to the given customer and context (e.g., order, [loyalty reward]double check this). Checks up to 50 **standalone vouchers**. \n\n__How does this endpoint work?__ \n\n A property's value that does not meet a validation rule requirement will disqualify that particular voucher and it will not be listed in the results.\n\nAs a sample use case, you can imagine a requirement of displaying coupons available for the customer below the shopping cart. The customer can choose and apply the proposed voucher.\n\n__What's excluded?__\n\n The verification logic won't run against coupons from bulk unique code campaigns. For campaigns with multiple unique codes, you should run a [dedicated function](OpenAPI.json/paths/~1campaigns~1qualification/post) for searching and identifying qualified campaigns.\n\n<!-- theme: info -->\n\n> #### Query parameters let you sort and filter the returned vouchers\n>\n> Customize your response:\n> - If you only care about verifying a customer, use `audienceRulesOnly` set to `true`. \n>- If you want to limit the number of vouchers to be returned from the entire pool of eligible vouchers, set a `limit`. This will return vouchers sorted by `-created_at`, by default beginning with the most recent vouchers listed at the top.\n> - If you have a preference on the sorting order of the returned vouchers, you can use `order` to customize your response.\n __Prevailing assumption__: data is synced with Voucherify.\n\n_Aside:_ You have the option of sending customer data via the dedicated `customer` object in the request body or a nested `customer` object within the `order` object.\n #### Quick Guide on sending request body payload\n<!--\ntype: tab\n\ntitle: Customer\n-->\n\n #### Available options:\n\n - You can either pass a customer `id` (Voucherify system generated),\n\n - a `source_id` (your own unique internal customer identifier e.g., email, database ID, CRM id), \n\n - a combination of the remaining parameters in the customer object, \n\n - a combination of customer `id` and remaining parameters excluding `source_id`, or\n\n - a combination of `source_id` and remaining parameters excluding `id`\n\n #### Note:\n\n For the latter two options, if you pass the `source_id` or the `id` with the other parameters, the logic will run independently for parameters explicitly passed in the request body versus those not explicitly passed in the request body. For _parameters not explicitly listed in the payload_, the verification will be against the data stored for that customer in the system. On the otherhand, for any _parameter values explicitly passed in the payload_, the logic will ignore those stored in the system and will use the new values provided in the qualification request body. \n\n The qualification runs against rules that are defined through the [Create Validation Rules](https://docs.voucherify.io/reference/create-validation-rules) endpoint or via the Dashboard; in the _Advanced Rule Builder_ &rarr; _Audience_ &rarr; _Customer segment_ or _Basic Builder_ &rarr; _Customer Activity_. [Read more](https://support.voucherify.io/article/148-how-to-build-a-rule). \n\n<!--\ntype: tab\ntitle: Order\n-->\n\n  #### Available options:\n\n - You can either pass an order `id` (Voucherify system generated),\n\n - a `source_id` (your own unique internal order identifier), \n\n - a combination of the remaining parameters in the order object, \n\n - a combination of order `id` and remaining parameters excluding `source_id`, or\n\n - a combination of `source_id` and remaining parameters excluding `id`\n\n #### Note:\n\n For the latter two options, if you pass the `source_id` or the `id` with the other parameters, the logic will run independently for parameters explicitly passed in the request body versus those not explicitly passed in the request body. For _parameters not explicitly listed in the payload_, the verification will be against the data stored for that order in the system. On the otherhand, for any _parameter values explicitly passed in the payload_, the logic will ignore those stored in the system and will use the new values provided in the qualification request body. \n\n The qualification runs against rules that are defined through the [Create Validation Rules](https://docs.voucherify.io/reference/create-validation-rules) endpoint or via the Dashboard; in the _Advanced Rule Builder_ &rarr; _Order structure/Order volume_ or _Basic Builder_ &rarr; _Order_. [Read more](https://support.voucherify.io/article/148-how-to-build-a-rule).\n\n __Guidelines:__ \n\nTo validate against vouchers with total order `amount` requirements, make sure to include the total order `amount` in the order object or alternatively the `amount` for _every_ order item (the application will then add each amount to get the total and perform the qualification checks). If the total order `amount` is provided along with the individual items' amounts, the total order `amount` will take precedence.\n\n<!-- title: Payload configuration -->\n| **Case** | **Order-Level Parameter Included** | **Item-Level Parameter Included** | **Precedence** | **Calculation Result** | **Parameter included in payload accounts for checks against requirements in these validation rules** |\n|:---:|:---:|:---:|:---:|---|---|\n| **1** | `amount` | `amount` | Order-level | Uses order-level `amount` | - Total order amount |\n| **2** |  | `amount` | Item-level | Sums each item-level `amount` | - Total order amount  <br>- subtotal of matched items |\n| **3** |  | `price`<br>`quantity` | Item-level | Multiplies each item's (`price` x `quantity`) to get item `amount` and then adds each item's `amount` to get total order `amount`  | - Total order amount<br>- Subtotal of matched items<br>- Unit price of any matching order line<br>- Price of each item/Price of any item |\n| **4** |  | `amount`  <br>`price`    <br>`quantity` | Item-level `amount` | Uses item-level `amount` for  total order `amount` calculation, ignores (`price` x `quantity`) calculation | - Total order amount (uses item `amount` if provided or `price` x `quantity` for items without `amount` property; `amount` takes precedence in case all 3 properties are provided for an item)<br>- Subtotal of matched items (uses item `amount`, takes precedence if all 3 properties are provided)<br>- Unit price of any matching order line<br>- Price of each item/Price of any item |\n| **5** | `amount` | `amount`  <br>`price`  <br>`quantity` | Order-level  | Uses order-level `amount` for total order `amount` | - Total order amount (uses order-level `amount`). <br>- Subtotal of matched items (see case **4** for details). <br>- Unit price of any matching order line  <br>- Price of each item/Price of any item |\n  \n\n<!--\ntype: tab\ntitle: Reward\n-->\n\nNeed to figure out what the proper format is and what is this object validated against. Also is the is referral reward or is this a loyalty reward.\n\n<!--\ntype: tab\ntitle: Gift\n-->\n\nNot supported? Can't you also verify if you can use a particular gift card.\n\n<!--\ntype: tab\ntitle: Metadata\n-->\n\nYou can send **redemption** metadata in the payload to return vouchers that meet requirements set by validation rules on redemption metadata.\n\n The qualification runs against rules that are defined through the [Create Validation Rules](https://docs.voucherify.io/reference/create-validation-rules) endpoint or via the Dashboard; in the _Advanced Rule Builder_ &rarr; _Advanced_ &rarr; _Redemption metadata satisfy_ or _Basic Builder_ &rarr; _Attributes match_ &rarr; _REDEMPTION METADATA_. [Read more](https://support.voucherify.io/article/148-how-to-build-a-rule).\n\n<!-- type: tab-end -->",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          },
          {
            "$ref": "#/components/parameters/audienceRulesOnly"
          },
          {
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "in": "query",
            "name": "limit",
            "description": "The number of vouchers to be qualified."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "created_at",
                "-created_at",
                "updated_at",
                "-updated_at",
                "type",
                "-type",
                "code",
                "-code",
                "category",
                "-category"
              ]
            },
            "in": "query",
            "name": "order",
            "description": "Sorts the results using one of the filtering options, where the dash `-` means sorting in a descending order."
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/1_req_vouchers_qualification"
              },
              "examples": {
                "example-1-Qualify-product-using-product_id": {
                  "value": {
                    "customer": {
                      "id": "cust_J1CDUdbqn5Exva8ASWk1Fq0j",
                      "source_id": "firstname.lastname@mycompany.com",
                      "name": "FirstName LastName",
                      "email": "firstname.lastname@mycompany.com",
                      "phone": "string",
                      "address": {
                        "city": "New York",
                        "country": "United States of America",
                        "postal_code": "10001",
                        "state": "NY"
                      },
                      "metadata": {},
                      "birthdate": "YYYY-MM-DD"
                    },
                    "order": {
                      "id": "ord_gqj1QYW2j2A1E3Ula2YjdPf4",
                      "source_id": "string",
                      "amount": 10000,
                      "items": [
                        {
                          "source_id": "product_1234",
                          "product_id": "prod_0a9f9aeddb019a42db",
                          "amount": 10000,
                          "quantity": 1,
                          "price": 10000,
                          "metadata": {},
                          "related_object": "product",
                          "product": {
                            "source_id": "product_1234",
                            "name": "Phone",
                            "price": 10000,
                            "metadata": {}
                          }
                        }
                      ],
                      "customer": {
                        "id": "cust_J1CDUdbqn5Exva8ASWk1Fq0j",
                        "source_id": "firstname.lastname@mycompany.com",
                        "name": "FirstName LastName",
                        "email": "firstname.lastname@mycompany.com",
                        "phone": "string",
                        "address": {
                          "city": "New York",
                          "country": "United States of America",
                          "postal_code": "10001",
                          "state": "NY"
                        },
                        "metadata": {},
                        "birthdate": "YYYY-MM-DD"
                      },
                      "referrer": {},
                      "metadata": "string"
                    },
                    "reward": {
                      "points": 0,
                      "assignment_id": "string",
                      "id": "string"
                    },
                    "metadata": {}
                  }
                },
                "example-2-Qualify-product-using-source_id": {
                  "value": {
                    "customer": {
                      "id": "cust_J1CDUdbqn5Exva8ASWk1Fq0j",
                      "source_id": "firstname.lastname@mycompany.com",
                      "name": "FirstName LastName",
                      "email": "firstname.lastname@mycompany.com",
                      "phone": "string",
                      "address": {
                        "city": "New York",
                        "country": "United States of America",
                        "postal_code": "10001",
                        "state": "NY"
                      },
                      "metadata": {},
                      "birthdate": "YYYY-MM-DD"
                    },
                    "order": {
                      "id": "ord_gqj1QYW2j2A1E3Ula2YjdPf4",
                      "source_id": "string",
                      "amount": 10000,
                      "items": [
                        {
                          "source_id": "product_1234",
                          "product_id": "prod_0a9f9aeddb019a42db",
                          "amount": 10000,
                          "quantity": 1,
                          "price": 10000,
                          "metadata": {},
                          "related_object": "product",
                          "product": {
                            "source_id": "product_1234",
                            "name": "Phone",
                            "price": 10000,
                            "metadata": {}
                          }
                        }
                      ],
                      "customer": {
                        "id": "cust_J1CDUdbqn5Exva8ASWk1Fq0j",
                        "source_id": "firstname.lastname@mycompany.com",
                        "name": "FirstName LastName",
                        "email": "firstname.lastname@mycompany.com",
                        "phone": "string",
                        "address": {
                          "city": "New York",
                          "country": "United States of America",
                          "postal_code": "10001",
                          "state": "NY"
                        },
                        "metadata": {},
                        "birthdate": "YYYY-MM-DD"
                      },
                      "referrer": {},
                      "metadata": "string"
                    },
                    "reward": {
                      "points": 0,
                      "assignment_id": "string",
                      "id": "string"
                    },
                    "metadata": {}
                  }
                },
                "example-3-Qualify-SKU-using-sku_id": {
                  "value": {
                    "customer": {
                      "id": "cust_J1CDUdbqn5Exva8ASWk1Fq0j",
                      "source_id": "firstname.lastname@mycompany.com",
                      "name": "FirstName LastName",
                      "email": "firstname.lastname@mycompany.com",
                      "phone": "string",
                      "address": {
                        "city": "New York",
                        "country": "United States of America",
                        "postal_code": "10001",
                        "state": "NY"
                      },
                      "metadata": {},
                      "birthdate": "YYYY-MM-DD"
                    },
                    "order": {
                      "id": "ord_gqj1QYW2j2A1E3Ula2YjdPf4",
                      "source_id": "string",
                      "amount": 10000,
                      "items": [
                        {
                          "source_id": "product_1234",
                          "product_id": "prod_0a9f9aeddb019a42db",
                          "amount": 10000,
                          "quantity": 1,
                          "price": 10000,
                          "metadata": {},
                          "related_object": "product",
                          "product": {
                            "source_id": "product_1234",
                            "name": "Phone",
                            "price": 10000,
                            "metadata": {}
                          }
                        }
                      ],
                      "customer": {
                        "id": "cust_J1CDUdbqn5Exva8ASWk1Fq0j",
                        "source_id": "firstname.lastname@mycompany.com",
                        "name": "FirstName LastName",
                        "email": "firstname.lastname@mycompany.com",
                        "phone": "string",
                        "address": {
                          "city": "New York",
                          "country": "United States of America",
                          "postal_code": "10001",
                          "state": "NY"
                        },
                        "metadata": {},
                        "birthdate": "YYYY-MM-DD"
                      },
                      "referrer": {},
                      "metadata": "string"
                    },
                    "reward": {
                      "points": 0,
                      "assignment_id": "string",
                      "id": "string"
                    },
                    "metadata": {}
                  }
                },
                "example-4-Qualify-SKU-using-source_id": {
                  "value": {
                    "customer": {
                      "id": "cust_J1CDUdbqn5Exva8ASWk1Fq0j",
                      "source_id": "firstname.lastname@mycompany.com",
                      "name": "FirstName LastName",
                      "email": "firstname.lastname@mycompany.com",
                      "phone": "string",
                      "address": {
                        "city": "New York",
                        "country": "United States of America",
                        "postal_code": "10001",
                        "state": "NY"
                      },
                      "metadata": {},
                      "birthdate": "YYYY-MM-DD"
                    },
                    "order": {
                      "id": "ord_gqj1QYW2j2A1E3Ula2YjdPf4",
                      "source_id": "string",
                      "amount": 10000,
                      "items": [
                        {
                          "source_id": "product_1234",
                          "product_id": "prod_0a9f9aeddb019a42db",
                          "amount": 10000,
                          "quantity": 1,
                          "price": 10000,
                          "metadata": {},
                          "related_object": "product",
                          "product": {
                            "source_id": "product_1234",
                            "name": "Phone",
                            "price": 10000,
                            "metadata": {}
                          }
                        }
                      ],
                      "customer": {
                        "id": "cust_J1CDUdbqn5Exva8ASWk1Fq0j",
                        "source_id": "firstname.lastname@mycompany.com",
                        "name": "FirstName LastName",
                        "email": "firstname.lastname@mycompany.com",
                        "phone": "string",
                        "address": {
                          "city": "New York",
                          "country": "United States of America",
                          "postal_code": "10001",
                          "state": "NY"
                        },
                        "metadata": {},
                        "birthdate": "YYYY-MM-DD"
                      },
                      "referrer": {},
                      "metadata": "string"
                    },
                    "reward": {
                      "points": 0,
                      "assignment_id": "string",
                      "id": "string"
                    },
                    "metadata": {}
                  }
                },
                "example-5-Qualify-redemption-metadata": {
                  "value": {
                    "customer": {
                      "id": "cust_J1CDUdbqn5Exva8ASWk1Fq0j",
                      "source_id": "firstname.lastname@mycompany.com",
                      "name": "FirstName LastName",
                      "email": "firstname.lastname@mycompany.com",
                      "phone": "string",
                      "address": {
                        "city": "New York",
                        "country": "United States of America",
                        "postal_code": "10001",
                        "state": "NY"
                      },
                      "metadata": {},
                      "birthdate": "YYYY-MM-DD"
                    },
                    "order": {
                      "id": "ord_gqj1QYW2j2A1E3Ula2YjdPf4",
                      "source_id": "string",
                      "amount": 10000,
                      "items": [
                        {
                          "source_id": "product_1234",
                          "product_id": "prod_0a9f9aeddb019a42db",
                          "amount": 10000,
                          "quantity": 1,
                          "price": 10000,
                          "metadata": {},
                          "related_object": "product",
                          "product": {
                            "source_id": "product_1234",
                            "name": "Phone",
                            "price": 10000,
                            "metadata": {}
                          }
                        }
                      ],
                      "customer": {
                        "id": "cust_J1CDUdbqn5Exva8ASWk1Fq0j",
                        "source_id": "firstname.lastname@mycompany.com",
                        "name": "FirstName LastName",
                        "email": "firstname.lastname@mycompany.com",
                        "phone": "string",
                        "address": {
                          "city": "New York",
                          "country": "United States of America",
                          "postal_code": "10001",
                          "state": "NY"
                        },
                        "metadata": {},
                        "birthdate": "YYYY-MM-DD"
                      },
                      "referrer": {},
                      "metadata": "string"
                    },
                    "reward": {
                      "points": 0,
                      "assignment_id": "string",
                      "id": "string"
                    },
                    "metadata": {}
                  }
                },
                "example-6-Qualify-order-line-item-metadata": {
                  "value": {
                    "customer": {
                      "id": "cust_J1CDUdbqn5Exva8ASWk1Fq0j",
                      "source_id": "firstname.lastname@mycompany.com",
                      "name": "FirstName LastName",
                      "email": "firstname.lastname@mycompany.com",
                      "phone": "string",
                      "address": {
                        "city": "New York",
                        "country": "United States of America",
                        "postal_code": "10001",
                        "state": "NY"
                      },
                      "metadata": {},
                      "birthdate": "YYYY-MM-DD"
                    },
                    "order": {
                      "id": "ord_gqj1QYW2j2A1E3Ula2YjdPf4",
                      "source_id": "string",
                      "amount": 10000,
                      "items": [
                        {
                          "source_id": "product_1234",
                          "product_id": "prod_0a9f9aeddb019a42db",
                          "amount": 10000,
                          "quantity": 1,
                          "price": 10000,
                          "metadata": {},
                          "related_object": "product",
                          "product": {
                            "source_id": "product_1234",
                            "name": "Phone",
                            "price": 10000,
                            "metadata": {}
                          }
                        }
                      ],
                      "customer": {
                        "id": "cust_J1CDUdbqn5Exva8ASWk1Fq0j",
                        "source_id": "firstname.lastname@mycompany.com",
                        "name": "FirstName LastName",
                        "email": "firstname.lastname@mycompany.com",
                        "phone": "string",
                        "address": {
                          "city": "New York",
                          "country": "United States of America",
                          "postal_code": "10001",
                          "state": "NY"
                        },
                        "metadata": {},
                        "birthdate": "YYYY-MM-DD"
                      },
                      "referrer": {},
                      "metadata": "string"
                    },
                    "reward": {
                      "points": 0,
                      "assignment_id": "string",
                      "id": "string"
                    },
                    "metadata": {}
                  }
                }
              }
            }
          },
          "required": true,
          "description": "Should contain given customer and context such as an order."
        },
        "responses": {
          "200": {
            "description": "This operation returns the list of valid and active vouchers based on the qualification of given context (e.g., customer profile, redemptions metadata, order).",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/1_res_vouchers_qualification"
                }
              }
            }
          }
        }
      }
    },
    "/vouchers/bulk/async": {
      "post": {
        "summary": "Update Vouchers in bulk",
        "tags": [
          "VOUCHERS API"
        ],
        "operationId": "post-vouchers-bulk-async",
        "description": "Use this endpoint to update specific metadata parameters for each code, respectively.  \nYou can update each code's metadata property separately.\n\n\nUpdate up to **100 records** in one request.\nUpserts are not supported.  \n\n**NOTE:** Currently only **metadata** updates are supported.",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/1_req_vouchers_bulk_async"
              },
              "examples": {
                "example-1-Update-Metadata": {
                  "value": [
                    {
                      "code": "example_code",
                      "metadata": {
                        "lang": "en",
                        "test": false,
                        "MetadataTest": "Update metadata",
                        "update_value": 1,
                        "next_update_date": "2022-11-11T09:00:00.000Z"
                      }
                    },
                    {
                      "code": "example_code2",
                      "metadata": {
                        "lang": "pl",
                        "test": false,
                        "MetadataTest": "Update metadata",
                        "update_value": 2
                      }
                    }
                  ]
                }
              }
            }
          },
          "required": true,
          "description": "List of objects, each containing a code that is being updated and the metadata key/value pairs for that code."
        },
        "responses": {
          "202": {
            "description": "Returns the id of the scheduled asynchronous action, informing you that your request has been accepted and the voucher(s) will be updated in the repository asynchronously. To check the status and result, copy the `async_action_id` from the response and pass it using [Get Async Action](OpenAPI.json/paths/~1async-actions~1{async_action_id}/get) endpoint.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/a_res_async_actions"
                },
                "examples": {
                  "example-1-Update-Metadata": {
                    "$ref": "#/components/examples/res_async_actions"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/vouchers/metadata/async": {
      "post": {
        "summary": "Update Vouchers' metadata in bulk",
        "tags": [
          "VOUCHERS API"
        ],
        "operationId": "post-vouchers-metadata-async",
        "description": "Use this endpoint to update the same metadata parameters for a list of codes.   \nUpdate up to **100 records** in one request. Upserts are not supported. ",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "responses": {
          "202": {
            "description": "Returns the id of the scheduled asynchronous action, informing you that your request has been accepted and the voucher(s) will be updated in the repository asynchronously. To check the status and result, copy the `async_action_id` from the response and pass it using [Get Async Action](OpenAPI.json/paths/~1async-actions~1{async_action_id}/get) endpoint.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/a_res_async_actions"
                },
                "examples": {
                  "example-1-Update-Same-Metadata-Parameters-Bulk": {
                    "$ref": "#/components/examples/res_async_actions"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Returns an error indicating the reason for an unsuccessfull operation.",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/e_400_invalid_payload"
                    },
                    {
                      "$ref": "#/components/schemas/e_400_not_enough_codes"
                    },
                    {
                      "$ref": "#/components/schemas/e_400_metadata_validation_failed"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "key"
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/1_req_vouchers_metadata_async"
              },
              "examples": {
                "example-1-Update-Same-Metadata-Parameters-Bulk": {
                  "value": {
                    "codes": [
                      "PROMO-CODE810",
                      "PROMO-CODE726"
                    ],
                    "metadata": {
                      "lang": "en",
                      "authorized_internally": true
                    }
                  }
                }
              }
            }
          },
          "required": true,
          "description": "Request to update vouchers metadata in bulk. Provide an array of voucher codes in the `codes` parameter along with the `metadata` object. The `metadata` object should contain the key value pairs that you would like to update for all the vouchers included in the `codes` parameter."
        }
      }
    },
    "/vouchers/{code}/sessions/{session_key}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/code"
        },
        {
          "$ref": "#/components/parameters/session_key"
        }
      ],
      "delete": {
        "summary": "Release Validation Session",
        "tags": [
          "VOUCHERS API"
        ],
        "operationId": "delete-vouchers-code-sessions-session_key",
        "description": "Manually release a validation session that has been set up for the voucher.",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ]
      }
    },
    "/campaigns": {
      "post": {
        "summary": "Create Campaign",
        "operationId": "post-campaigns",
        "responses": {
          "200": {
            "description": "Returns a campaign object if the call succeeded. The returned object will have information about the discount type and the discount amount."
          }
        },
        "tags": [
          "CAMPAIGNS API"
        ],
        "description": "Method to create a batch of vouchers aggregated in one campaign. You can choose a variety of voucher types and define a unique pattern for generating codes.  \n<!-- theme: info -->\n\n> #### Global uniqueness\n>\n> All campaign codes are unique across the whole project. Voucherify will not allow you to generate 2 campaigns with the same coupon code.  \n<!-- theme: warning -->\n> #### Code generation status\n>\n> This is an asynchronous action; you can't read or modify a newly created campaign until the code generation is completed. See the `creation_status` field in the [campaign object](OpenAPI.json/components/schemas/2_obj_campaign_object) description.",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        }
      },
      "get": {
        "summary": "List Campaigns",
        "operationId": "get-campaigns",
        "responses": {
          "200": {
            "description": "Returns a dictionary with a `campaign` property that contains an array of campaigns. The maximum number of campaigns returned is determined by the `limit` query parameter. Each entry in the array is a separate campaign object. If no more campaigns are available, the resulting array on a given page will be empty."
          }
        },
        "tags": [
          "CAMPAIGNS API"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/campaign_type"
          }
        ],
        "description": "Retrieve a list of campaigns in a project. \n\nThe campaigns are returned sorted by creation date, with the most recent campaigns appearing first.  \n\nWhen you get a list of campaigns, you can optionally specify query parameters to customize the amount of campaigns returned per call using `limit`, which page of campaigns to return using `page`, sort the campaigns using the `order` query parameter and filter the results by the `campaign_type`.\n\nThis method will return an error when trying to return a limit of more than XXX campaigns."
      }
    },
    "/campaigns/{campaign_id}": {
      "parameters": [
        {
          "in": "path",
          "name": "campaign_id",
          "description": "You can either pass the `campaign_id`, which was assigned by Voucherify, or the `name` of the campaign as the path parameter value, e.g., `Loyalty%20Campaign`. ",
          "schema": {
            "type": "string",
            "example": "camp_BcHeMm4QaKjqCWMQFecMp1U0"
          }
        }
      ],
      "get": {
        "summary": "Get Campaign",
        "tags": [
          "CAMPAIGNS API"
        ],
        "responses": {
          "200": {
            "description": "Returns a campaign object if a valid identifier was provided. When requesting the campaign that has been deleted, the resource will not be returned, including a 404 HTTP status code."
          }
        },
        "operationId": "get-campaigns-campaignId",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "description": "Retrieves the campaign with the given `campaign_id` or campaign `name`."
      },
      "put": {
        "summary": "Update Campaign",
        "operationId": "put-campaigns-campaign_id",
        "responses": {
          "200": {
            "description": "Returns the campaign object if the update succeeded. Returns an error if update parameters are invalid (e.g. specifying an invalid campaign type)."
          }
        },
        "description": "Updates the specified campaign by setting the values of the parameters passed in the request body. Any parameters not provided in the payload will be left unchanged. \n\nYou can modify the following fields:  \n\n- `start_date`\n- `expiration_date`\n- `metadata`\n- `description`\n- `type` \n\nFields other than the ones listed above won't be modified. Even if provided, they will be silently skipped.   \n<!-- theme: warning -->\n> #### Vouchers will be affected\n>\n> This method will update vouchers aggregated in the campaign. It will affect all vouchers that are not published or redeemed yet.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "tags": [
          "CAMPAIGNS API"
        ]
      },
      "delete": {
        "summary": "Delete Campaign",
        "operationId": "delete-campaigns-campaign_id",
        "responses": {
          "202": {
            "description": "Returns the ID of the scheduled asynchronous action, informing you that your request has been accepted and the campaign will be deleted from the repository asynchronously. To check the deletion status and result, copy the `async_action_id` from the response and pass it using [Get Async Action](OpenAPI.json/paths/~1async-actions~1{async_action_id}/get) endpoint.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/a_res_async_actions"
                },
                "examples": {
                  "Delete-Campaign": {
                    "$ref": "#/components/examples/res_async_actions"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Returns an error indicating that the campaign with given ID was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/e_404_not_found"
                },
                "examples": {
                  "Campaign-Not-Found": {
                    "value": {
                      "code": 404,
                      "key": "not_found",
                      "message": "Resource not found",
                      "details": "Cannot find campaign with id Spring Campaign",
                      "request_id": "v-0adac46be8cdbfd921",
                      "resource_id": "Spring Campaign",
                      "resource_type": "campaign"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Permanently deletes a campaign and all related vouchers. This action cannot be undone. Also, this method immediately removes any redemptions on the voucher.",
        "parameters": [
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "description": "If this flag is set to `true`, the campaign and related vouchers will be removed permanently. Going forward, the user will be able to create the next campaign with exactly the same name.",
            "name": "force"
          },
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "tags": [
          "CAMPAIGNS API"
        ]
      }
    },
    "/campaigns/{campaign_id}/vouchers": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "example": "camp_BcHeMm4QaKjqCWMQFecMp1U0"
          },
          "name": "campaign_id",
          "in": "path",
          "required": true,
          "description": "The `campaign_id` or `name` of the campaign to which voucher(s) will be added. You can either pass the `campaign_id`, which was assigned by Voucherify, or the `name` of the campaign as the path parameter value, e.g., `Loyalty%20Campaign`. "
        }
      ],
      "post": {
        "summary": "Add Vouchers to Campaign",
        "operationId": "post-campaigns-campaign_id-vouchers",
        "responses": {
          "200": {
            "description": "Returns a voucher object if the call succeeded. The returned object will have information about discount type, and discount amount, and all other which you provided to overwrite the origin one from campaign definition."
          }
        },
        "tags": [
          "CAMPAIGNS API"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "vouchers_count",
            "description": "Number of vouchers that should be added"
          }
        ],
        "description": "This method gives the possibility to push new vouchers to an existing campaign. New vouchers will inherit properties from the campaign profile. However, it is possible to overwrite some of them in the request body: `metadata`, `additional_info`, `redemption.quantity`, `category`, `code_config`. If you provide an optional `code_config` parameter with a voucher code configuration, then it will be used to generate new voucher codes. Otherwise, the voucher code configuration from the campaign will be used.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        }
      }
    },
    "/campaigns/{campaign_id}/vouchers/{code}": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "example": "camp_BcHeMm4QaKjqCWMQFecMp1U0"
          },
          "name": "campaign_id",
          "in": "path",
          "required": true,
          "description": "The `campaign_id` or `name` of the campaign to which voucher will be added. You can either pass the `campaign_id`, which was assigned by Voucherify, or the `name` of the campaign as the path parameter value, e.g., `Loyalty%20Campaign`. "
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "code",
          "in": "path",
          "required": true,
          "description": "A custom **code** that identifies the voucher."
        }
      ],
      "post": {
        "summary": "Add Voucher with certain code to Campaign",
        "operationId": "post-campaigns-campaign_id-vouchers-code",
        "responses": {
          "200": {
            "description": "Returns a voucher object if the call succeeded. The returned object will have information about discount type, and discount amount, and all other which you provided to overwrite the origin one from campaign definition."
          }
        },
        "tags": [
          "CAMPAIGNS API"
        ],
        "description": "This method gives a possibility to push new vouchers to existing campaign. Voucher definition will be inherited from this one kept in campaign profile. However you are able to overwrite few properties inherited from campaign: `metadata`, `additional_info`, `redemption.quantity`, `category`.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          },
          "description": ""
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ]
      }
    },
    "/campaigns/{campaign_id}/import": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "example": "camp_BcHeMm4QaKjqCWMQFecMp1U0"
          },
          "name": "campaign_id",
          "in": "path",
          "required": true,
          "description": "The ID of an existing campaign to which you're importing the codes. You can either pass the `campaign_id`, which was assigned by Voucherify, or the `name` of the campaign as the path parameter value, e.g., `Loyalty%20Campaign`. "
        }
      ],
      "post": {
        "summary": "Import Vouchers to Campaign",
        "operationId": "post-campaigns-campaign_id-import",
        "responses": {
          "202": {
            "description": "Returns the id of the scheduled asynchronous action, informing you that your request has been accepted and the vouchers will be imported to the repository asynchronously. To check the status and result, copy the `async_action_id` from the response and pass it using [Get Async Action](OpenAPI.json/paths/~1async-actions~1{async_action_id}/get) endpoint.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/a_res_async_actions"
                },
                "examples": {
                  "example-1": {
                    "$ref": "#/components/examples/res_async_actions"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Returns an error if the request includes incorrect data, e.g. a wrong data type or duplicated codes.",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/e_400_invalid_voucher"
                    },
                    {
                      "$ref": "#/components/schemas/e_400_duplicate_key"
                    }
                  ]
                },
                "examples": {
                  "example-1-Duplicate-Codes": {
                    "value": {
                      "code": 400,
                      "key": "duplicate_key",
                      "message": "Duplicate codes",
                      "details": "2 voucher codes(s) already exist.",
                      "request_id": "v-0adaccaba61502e4b3"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "CAMPAIGNS API"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          },
          "description": "Discount type, expiration date and the remaining attributes will be taken from the [Campaign](OpenAPI.json/components/schemas/2_obj_campaign_object) settings."
        },
        "description": "Imports vouchers to an **existing** campaign."
      }
    },
    "/campaigns/{campaign_id}/importCSV": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "campaign_id",
          "in": "path",
          "required": true
        }
      ],
      "post": {
        "summary": "Import Vouchers to Campaign by CSV",
        "operationId": "post-campaigns-campaign_id-importCSV",
        "responses": {
          "200": {
            "description": "Returns the id of the scheduled asynchronous action, informing you that your request has been accepted and the vouchers will be imported to the repository asynchronously. To check the status and result, copy the `async_action_id` from the response and pass it using [Get Async Action](OpenAPI.json/paths/~1async-actions~1{async_action_id}/get) endpoint.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/a_res_async_actions"
                },
                "examples": {
                  "example-1": {
                    "$ref": "#/components/examples/res_async_actions"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Returns an error if the CSV file includes incorrect data, e.g. a wrong data type or duplicated codes."
          }
        },
        "tags": [
          "CAMPAIGNS API"
        ],
        "description": "Imports vouchers to an **existing** campaign.  \n\n\nThe CSV file has to include headers in the first line. \n\nCurl Example\n<!--\ntitle: \"Example Request\"\nlineNumbers: true\n-->\n```cURL\ncurl -X POST \\\n  https://api.voucherify.io/v1/campaigns/TEST-CAMPAIGN/importCSV \\\n  -F file=@/path/to/campaigns.csv \\\n  -H \"X-App-Id: c70a6f00-cf91-4756-9df5-47628850002b\" \\\n  -H \"X-App-Token: 3266b9f8-e246-4f79-bdf0-833929b1380c\"\n```\n\nYou can import values for the following fields: `Code` (required), `Category`, and `Active`. In gift cards import, you can also include the current card balance using the `Gift Amount` header. In loyalty cards import, you can also include the current loyalty card score in points using the `Loyalty Points` header. Other CSV columns will be mapped to metadata properties. \n\nGo to the description of Import Vouchers to Campaignrefimport-vouchers to see the detailed description of supported code attributes that you can include in CSV.\n\n\n\nDiscount type, time limits, and validation rules will be taken from the [campaign object](OpenAPI.json/components/schemas/2_obj_campaign_object) settings. \n\n<!-- theme: info -->\n\n> #### Active\n>\n> The CSV file is allowed in two versions - either with or without `Active` column. It indicates if voucher is enabled after import event.  ",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/a_req_importCSV"
              }
            }
          },
          "description": "The file path is stored in the form `file` header."
        }
      }
    },
    "/campaigns/qualification": {
      "post": {
        "summary": "Examine Qualification",
        "operationId": "post-campaigns-qualification",
        "responses": {
          "200": {
            "description": "This operation returns the list of valid and active campaigns based on the qualification of given context (e.g., customer profile, redemptions metadata, order).\n\n[Read](https://docs.voucherify.io/docs/checking-eligibility-for-coupons) about Qualification API limits before you start."
          }
        },
        "tags": [
          "CAMPAIGNS API"
        ],
        "description": "The method can be used for sending a request to display all campaigns qualified to the given customer and context (e.g., order). The maximum number of returned campaigns is 50. A checking logic will be run only among campaigns and will ignore standalone vouchers. As a recommended subsequent step after selecting qualified campaign is to publish voucher code from that campaign. The API method for publishing will return a unique code which will belong to a given customer.\n\nAs a sample use case, you can imagine a requirement of displaying below cart the coupons (grouped in campaigns) eligible to a customer. The customer should get assigned to the particular voucher from the campaign and then might redeem that code when he places an order.\n\n[Read](https://docs.voucherify.io/docs/checking-eligibility-for-coupons) about Qualification API limits before you start.",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "audienceRulesOnly",
            "description": "This parameter set to true will ask only for verifying vouchers' validation rules only against conditions applied to audiences' attributes (belonging into segment and Customer metadata)"
          },
          {
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "in": "query",
            "name": "limit",
            "description": "The number of campaigns to be qualified."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "created_at",
                "-created_at",
                "updated_at",
                "-updated_at",
                "type",
                "-type",
                "code",
                "-code",
                "category",
                "-category",
                "campaign",
                "-campaign"
              ]
            },
            "in": "query",
            "name": "order",
            "description": "Sorts the results using one of the filtering options, where the dash `-` means sorting in a descending order."
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        }
      }
    },
    "/campaigns/{campaign_id}/disable": {
      "post": {
        "summary": "Disable Campaign",
        "operationId": "post-campaigns-disable",
        "responses": {
          "200": {
            "description": "Returns an empty json `{}`.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/res_empty_json"
                },
                "examples": {
                  "Empty-JSON": {
                    "value": {}
                  }
                }
              }
            }
          },
          "404": {
            "description": "If the campaign does not exist, the API returns a Not Found error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/e_404_not_found"
                },
                "examples": {
                  "Not-Found": {
                    "value": {
                      "code": 404,
                      "key": "not_found",
                      "message": "Resource not found",
                      "details": "Cannot find campaign with id Spring Campaign",
                      "request_id": "v-0adaf3735116bb298b",
                      "resource_id": "Spring Campaign",
                      "resource_type": "campaign"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "CAMPAIGNS API"
        ],
        "description": "There are various times when you'll want to manage a campaign's accessibility. This can be done by two API methods for managing the campaign state - *enable* and *disable*.  \n\nSets campaign state to **inactive**. The vouchers in this campaign can no longer be redeemed.",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ]
      },
      "parameters": [
        {
          "schema": {
            "type": "string",
            "example": "camp_BcHeMm4QaKjqCWMQFecMp1U0"
          },
          "name": "campaign_id",
          "in": "path",
          "required": true,
          "description": "The `campaign_id` or `name` of the campaign being disabled. You can either pass the `campaign_id`, which was assigned by Voucherify, or the `name` of the campaign as the path parameter value, e.g., `Loyalty%20Campaign`. "
        }
      ]
    },
    "/campaigns/{campaign_id}/enable": {
      "post": {
        "summary": "Enable Campaign",
        "operationId": "post-campaigns-disable",
        "responses": {
          "200": {
            "description": "Returns an empty json `{}`.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/res_empty_json"
                },
                "examples": {
                  "Empty-JSON": {
                    "value": {}
                  }
                }
              }
            }
          },
          "404": {
            "description": "If the campaign does not exist, the API returns a Not Found error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/e_404_not_found"
                },
                "examples": {
                  "Not-Found": {
                    "value": {
                      "code": 404,
                      "key": "not_found",
                      "message": "Resource not found",
                      "details": "Cannot find campaign with id camp_h8RyP6FV94F3Ev2odP24j5p",
                      "request_id": "v-0adaf4847c9502879b",
                      "resource_id": "camp_h8RyP6FV94F3Ev2odP24j5p",
                      "resource_type": "campaign"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "CAMPAIGNS API"
        ],
        "description": "There are various times when you'll want to manage a campaign's accessibility. This can be done by two API methods for managing the campaign state - *enable* and *disable*.  \n\nSets campaign state to **active**. The vouchers in this campaign can be redeemed - only if the redemption occurs after the start date of the campaign and voucher and the voucher and campaign are not expired.",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ]
      },
      "parameters": [
        {
          "schema": {
            "type": "string",
            "example": "camp_BcHeMm4QaKjqCWMQFecMp1U0"
          },
          "name": "campaign_id",
          "in": "path",
          "required": true,
          "description": "The `campaign_id` or `name` of the campaign being enabled. You can either pass the `campaign_id`, which was assigned by Voucherify or the `name` of the campaign as the path parameter value, e.g., `Loyalty%20Campaign`. "
        }
      ]
    },
    "/promotions/{campaign_id}/tiers": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "campaign_id",
          "in": "path",
          "required": true,
          "description": "Id of the campaign."
        }
      ],
      "get": {
        "summary": "List Promotion Tiers from Campaign",
        "tags": [
          "PROMOTIONS API"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "operationId": "get-promotions-campaign_id-tiers",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "description": "This method enables you to list promotion tiers from a specified campaign."
      },
      "post": {
        "summary": "Add Promotion Tier to Campaign",
        "operationId": "post-promotions-campaign_id-tiers",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "PROMOTIONS API"
        ],
        "description": "This method gives a possibility to push new promotion tier to existing campaign.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ]
      }
    },
    "/promotions/tiers/{promotion_tier_id}": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "example": "promo_2EnAik6Jt7dKTOMkRTIgEjZH"
          },
          "name": "promotion_tier_id",
          "in": "path",
          "required": true,
          "description": "ID of the promotion tier."
        }
      ],
      "put": {
        "summary": "Update Promotion Tier",
        "operationId": "put-promotions-tiers-promotion_tier_id",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "description": "This method updates a promotion tier.",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "tags": [
          "PROMOTIONS API"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Promotion Tier",
        "operationId": "delete-promotions-tiers-promotion_tier_id",
        "responses": {
          "204": {
            "description": "Returns no content if deletion is successful."
          },
          "404": {
            "description": "Returns an error indicating that the promotion tier with given ID was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/e_404_not_found"
                },
                "examples": {
                  "Not Found": {
                    "value": {
                      "code": 404,
                      "key": "not_found",
                      "message": "Resource not found",
                      "details": "Cannot find promotion_tier with id promo_2EnAik6Jt7dKTOMkRTIgEjZ",
                      "request_id": "v-0ae284707e9027a79d",
                      "resource_id": "promo_2EnAik6Jt7dKTOMkRTIgEjZ",
                      "resource_type": "promotion_tier"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "PROMOTIONS API"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "description": "This method deletes a promotion tier."
      }
    },
    "/promotions/tiers": {
      "get": {
        "summary": "List Promotion Tiers",
        "tags": [
          "PROMOTIONS API"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "operationId": "get-promotions-tiers",
        "description": "This method enables you to list promotion tiers.\n\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "is_available",
            "description": "This parameter allows filtering only available promotions in the moment. It can select only not expired and active promotions."
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "limit",
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100 items."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "description": "Which page of results to return.",
            "name": "page"
          }
        ]
      }
    },
    "/promotions/tiers/{promotion_tier_id}/enable": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "promotion_tier_id",
          "in": "path",
          "required": true,
          "description": "Id of the promotion tier"
        }
      ],
      "post": {
        "summary": "Enable Promotion Tier",
        "operationId": "post-promotions-tiers-promotion_tier_id-enable",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "PROMOTIONS API"
        ],
        "description": "This method updates a promotion tier.",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ]
      }
    },
    "/promotions/tiers/{promotion_tier_id}/disable": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "promotion_tier_id",
          "in": "path",
          "required": true,
          "description": "Id of the promotion tier"
        }
      ],
      "post": {
        "summary": "Enable Promotion Tier",
        "operationId": "post-promotions-tiers-promotion_tier_id-enable",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "PROMOTIONS API"
        ],
        "description": "This method updates a promotion tier.",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ]
      }
    },
    "/promotions/{campaign_id}/stacks": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "campaign_id",
          "in": "path",
          "required": true,
          "description": "Id of the campaign"
        }
      ],
      "get": {
        "summary": "List Promotion Stacks",
        "tags": [
          "PROMOTIONS API"
        ],
        "responses": {
          "200": {
            "description": "Returns a list if a valid promotion campaign identifier was provided in the path.\n\n`data` An array of stack objects.\n`id` An internal id corresponding to the stack id.\n`name` Contains the name of the stack.\n`tiers` An object containing the `ids` of the stacked promotion tiers.  \n\nReturns an error if an incorrect campaign id is provided."
          }
        },
        "operationId": "get-promotions-campaign_id-stacks",
        "description": "This method enables you to list promotion stacks from a specified campaign.",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ]
      },
      "post": {
        "summary": "Create Promotion Stack",
        "operationId": "post-promotions-campaign_id-stacks",
        "responses": {
          "200": {
            "description": "Returns a new stack object if a valid promotion campaign identifier was provided in the path and available promotion ids in the payload.\n\n`id` An internal id corresponding to the stack id.\n`name` Contains the name of the stack.\n`tiers` An object containing the `ids` of the stacked promotion tiers.  \n\nReturns an error if an incorrect campaign id or promotion id is provided."
          }
        },
        "tags": [
          "PROMOTIONS API"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "description": "This method creates one promotion stack given promotion tier ids.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        }
      }
    },
    "/promotions/{campaign_id}/stacks/{stack_id}": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "example": "camp_BcHeMm4QaKjqCWMQFecMp1U0"
          },
          "name": "campaign_id",
          "in": "path",
          "required": true,
          "description": "ID of the promotion campaign. You can either pass the `campaign_id`, which was assigned by Voucherify, or the `name` of the campaign as the path parameter value, e.g., `Loyalty%20Campaign`. "
        },
        {
          "schema": {
            "type": "string",
            "example": "stack_KOIde7AUf08at12lZ1r3OfFL"
          },
          "name": "stack_id",
          "in": "path",
          "required": true,
          "description": "ID of the promotion stack."
        }
      ],
      "get": {
        "summary": "Get Promotion Stack",
        "tags": [
          "PROMOTIONS API"
        ],
        "responses": {
          "200": {
            "description": "Returns a stack object if valid identifiers were provided in the path.\n\n`id` Corresponds to the internal stack id.\n`name` Contains the name of the stack.\n`tiers` An object containing the `ids` of the stacked promotion tiers.\n\nReturns an error if incorrect `campaign id` or `stack id` is provided."
          }
        },
        "operationId": "get-promotions-campaign_id-stacks-stack_id",
        "description": "This method returns the details of a promotion stack, including the promotion tiers grouped within the stack.",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ]
      },
      "put": {
        "summary": "Update Promotion Stack",
        "operationId": "put-promotions-campaign_id-stacks-stack_id",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "PROMOTIONS API"
        ],
        "description": "This methods allows for editing an existing stack.",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Promotion Stack",
        "operationId": "delete-promotions-campaign_id-stacks-stack_id",
        "responses": {
          "204": {
            "description": "Returns no content if deletion is successful."
          },
          "404": {
            "description": "Returns an error indicating that the stack or campaign with given ID was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/e_404_not_found"
                },
                "examples": {
                  "Stack Not Found": {
                    "value": {
                      "code": 404,
                      "key": "not_found",
                      "message": "Resource not found",
                      "details": "Cannot find promotion_stack with id stack_KOIde7AUf08at12lZ1r3OfFp",
                      "request_id": "v-0ae289ca779027b030",
                      "resource_id": "stack_KOIde7AUf08at12lZ1r3OfFp",
                      "resource_type": "promotion_stack"
                    }
                  },
                  "Campaign Not Found": {
                    "value": {
                      "code": 404,
                      "key": "not_found",
                      "message": "Resource not found",
                      "details": "Cannot find campaign with id Summer % Promotion",
                      "request_id": "v-0ae28a621c46af534b",
                      "resource_id": "Summer % Promotion",
                      "resource_type": "campaign"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "PROMOTIONS API"
        ],
        "description": "This method deletes a promotion stack.",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ]
      }
    },
    "/rewards": {
      "get": {
        "summary": "List Rewards",
        "tags": [
          "REWARDS API"
        ],
        "responses": {
          "200": {
            "description": "Returns a dictionary of reward objects.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/4_res_list_rewards"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "object": "list",
                      "data_ref": "data",
                      "data": [
                        {
                          "id": "rew_3e7IqghVtTR7L3xQMSCxjFu2",
                          "name": "Get $10",
                          "type": "CAMPAIGN",
                          "parameters": {
                            "campaign": {
                              "id": "camp_FNYR4jhqZBM9xTptxDGgeNBV",
                              "balance": 1000,
                              "type": "GIFT_VOUCHERS"
                            }
                          },
                          "stock": null,
                          "redeemed": null,
                          "attributes": {},
                          "created_at": "2022-03-10T08:40:20.917Z",
                          "updated_at": "2022-08-17T07:52:56.965Z",
                          "metadata": null,
                          "object": "reward"
                        },
                        {
                          "id": "rew_nIy4gHpQHle2c3pNMwuj7G6j",
                          "name": "Get 100 Points",
                          "type": "CAMPAIGN",
                          "parameters": {
                            "campaign": {
                              "id": "camp_E87CubZLZ8eoQt3c4kAEZsx0",
                              "balance": 100,
                              "type": "LOYALTY_PROGRAM"
                            }
                          },
                          "stock": null,
                          "redeemed": null,
                          "attributes": {},
                          "created_at": "2022-02-28T11:56:13.764Z",
                          "updated_at": null,
                          "metadata": null,
                          "object": "reward"
                        },
                        {
                          "id": "rew_BNZ3van6AF2AiquWp8Lfw0xq",
                          "name": "30% discount",
                          "type": "CAMPAIGN",
                          "parameters": {
                            "campaign": {
                              "id": "camp_ZtHLATYVpItqmuSqmaz1rZ2Y",
                              "type": "DISCOUNT_COUPONS"
                            }
                          },
                          "stock": null,
                          "redeemed": null,
                          "attributes": {},
                          "created_at": "2022-08-11T09:48:50.609Z",
                          "updated_at": null,
                          "metadata": {},
                          "object": "reward"
                        },
                        {
                          "id": "rew_nlV8bgWU1jNO9YWQ7CdZmzq7",
                          "name": "1 point = $0.01",
                          "type": "COIN",
                          "parameters": {
                            "coin": {
                              "exchange_ratio": 0.01,
                              "points_ratio": 1
                            }
                          },
                          "stock": null,
                          "redeemed": null,
                          "attributes": {},
                          "created_at": "2022-08-11T16:45:21.582Z",
                          "updated_at": null,
                          "metadata": {
                            "Type": "0.01"
                          },
                          "object": "reward"
                        },
                        {
                          "id": "rew_x6FmF1KFdDs06hYPr9lK6ajf",
                          "name": "Material Reward",
                          "type": "MATERIAL",
                          "parameters": {
                            "product": {
                              "id": "prod_0b7d7dfb05cbe5c616",
                              "sku_id": "sku_0b7d7dfb090be5c619"
                            }
                          },
                          "stock": "4",
                          "redeemed": "1",
                          "attributes": {
                            "image_url": "https://voucherify-uploads.s3.amazonaws.com/org_2qt8DYlM/img_wJHdZUAVSpWtYM6ORq4up3I2.png",
                            "description": "Get a Comic Book in Archie's series."
                          },
                          "created_at": "2022-08-17T07:13:32.781Z",
                          "updated_at": null,
                          "metadata": {
                            "Type": "Personal"
                          },
                          "object": "reward"
                        }
                      ],
                      "total": 5
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-rewards",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          },
          {
            "schema": {
              "type": "string",
              "example": "rewa_m9hEAu10KsPcLhGXiHG85aY0"
            },
            "in": "query",
            "name": "assignment_id",
            "description": "A unique reward assignment ID. Use this parameter to get the reward details in the context of an assignment ID."
          }
        ],
        "description": "Retrieve rewards."
      },
      "post": {
        "summary": "Create Reward",
        "operationId": "post-rewards",
        "responses": {
          "200": {
            "description": "Returns a reward object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/4_obj_reward_object"
                },
                "examples": {
                  "Material": {
                    "value": {
                      "id": "rew_Crmu3hu2FKZWZIML59AeAs1n",
                      "name": "Material Reward",
                      "type": "MATERIAL",
                      "parameters": {
                        "product": {
                          "id": "prod_0b15f6b9f650c16990",
                          "sku_id": "sku_0b1621b319d248b79f"
                        }
                      },
                      "stock": "2",
                      "redeemed": null,
                      "attributes": {
                        "image_url": "https://www.website.com/img_fPH9oOb.png",
                        "description": "Archie's Series"
                      },
                      "created_at": "2022-08-25T11:20:58.172Z",
                      "updated_at": null,
                      "metadata": {
                        "Type": "Material"
                      },
                      "object": "reward"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "REWARDS API"
        ],
        "description": "Create a new reward.",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/4_req_create_reward"
              },
              "examples": {
                "Gift card credits": {
                  "value": {
                    "name": "Digital - Gift Card Reward",
                    "type": "CAMPAIGN",
                    "metadata": {
                      "Type": "Gift"
                    },
                    "parameters": {
                      "campaign": {
                        "id": "camp_hC2GdqYtOmTT45zfhib62cK1",
                        "balance": 3000
                      }
                    }
                  }
                },
                "Discount Coupon": {
                  "value": {
                    "name": "Digital - Discount Coupon",
                    "type": "CAMPAIGN",
                    "metadata": {
                      "Type": "Discount"
                    },
                    "parameters": {
                      "campaign": {
                        "id": "camp_hC2GdqYtOmTT45zfhib62cK1"
                      }
                    }
                  }
                },
                "Loyalty Points": {
                  "value": {
                    "name": "Digital - Loyalty Points Reward",
                    "type": "CAMPAIGN",
                    "metadata": {
                      "Type": "Loyalty Points"
                    },
                    "parameters": {
                      "campaign": {
                        "id": "camp_hC2GdqYtOmTT45zfhib62cK1",
                        "balance": 100
                      }
                    }
                  }
                },
                "Pay with Points": {
                  "value": {
                    "name": "Pay with Points Reward",
                    "type": "COIN",
                    "metadata": {
                      "Type": "Coin"
                    },
                    "parameters": {
                      "coin": {
                        "exchange_ratio": 900,
                        "points_ratio": 8000
                      }
                    }
                  }
                },
                "Material Reward": {
                  "value": {
                    "name": "Get a Comic Book",
                    "metadata": {
                      "Type": "Material"
                    },
                    "type": "MATERIAL",
                    "parameters": {
                      "product": {
                        "id": "prod_0b15f6b9f650c16990",
                        "sku_id": "sku_0b1621b319d248b79f"
                      }
                    },
                    "stock": 2,
                    "attributes": {
                      "image_url": "https://www.website.com/img_fPHsk9Ob.png",
                      "description": "Archie's Series"
                    }
                  }
                }
              }
            }
          },
          "description": "Define parameters of the new reward."
        }
      }
    },
    "/rewards/{rewardId}": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "example": "rew_2erjvECLs92GYzKbak3QkyTV"
          },
          "name": "rewardId",
          "in": "path",
          "required": true,
          "description": "A unique reward ID."
        }
      ],
      "get": {
        "summary": "Get Reward",
        "tags": [
          "REWARDS API"
        ],
        "responses": {
          "200": {
            "description": "Returns a reward object if a valid identifier was provided. ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/4_obj_reward_object"
                }
              }
            }
          },
          "404": {
            "description": "Not Found. When requesting a reward that has been deleted or does not exist, the resource will not be returned.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/e_404_not_found"
                },
                "examples": {
                  "Not found": {
                    "value": {
                      "code": 404,
                      "key": "not_found",
                      "message": "Resource not found",
                      "details": "Cannot find reward with id rew_C7wS9eHFDN4CIbXI5PpLSkG",
                      "request_id": "v-0b8c77bcc890215e35",
                      "resource_id": "rew_C7wS9eHFDN4CIbXI5PpLSkG",
                      "resource_type": "reward"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-rewards-reward_id",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "description": "Retrieve a reward by the reward ID."
      },
      "put": {
        "summary": "Update Reward",
        "operationId": "put-rewards-reward_id",
        "responses": {
          "200": {
            "description": "Returns an updated reward object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/4_obj_reward_object"
                },
                "examples": {
                  "Material": {
                    "value": {
                      "id": "rew_wg2pvCr5LDhCq4uVQZ9LhuZm",
                      "name": "Get a Comic Book",
                      "type": "MATERIAL",
                      "parameters": {
                        "product": {
                          "id": "prod_0b15f6b9f650c16990",
                          "sku_id": "sku_0b1621b319d248b79f"
                        }
                      },
                      "stock": "2",
                      "redeemed": null,
                      "attributes": {
                        "image_url": "https://www.website.com/img_fPH9.png",
                        "description": "Comic book"
                      },
                      "created_at": "2022-08-25T10:00:12.794Z",
                      "updated_at": "2022-08-25T10:06:30.655Z",
                      "metadata": {
                        "Type": "Physical product"
                      },
                      "object": "reward"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Returns an error if the balance parameter is not defined correctly.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/e_400_invalid_balance"
                },
                "examples": {
                  "Invalid Balance": {
                    "value": {
                      "code": 400,
                      "key": "invalid_balance",
                      "message": "Property 'parameters.campaign.balance' is invalid",
                      "details": "Property 'parameters.campaign.balance' must be greater than zero for campaign type: GIFT_VOUCHERS",
                      "request_id": "v-0b96d2b90dce48855f"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "REWARDS API"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/4_req_update_reward"
              },
              "examples": {
                "Gift card credits": {
                  "value": {
                    "name": "Digital - Gift Card Reward",
                    "metadata": {
                      "Type": "Gift"
                    },
                    "parameters": {
                      "campaign": {
                        "id": "camp_hC2GdqYtOmTT45zfhib62cK1",
                        "balance": 3000
                      }
                    }
                  }
                },
                "Discount Coupon": {
                  "value": {
                    "name": "Digital - Discount Coupon",
                    "metadata": {
                      "Type": "Discount"
                    },
                    "parameters": {
                      "campaign": {
                        "id": "camp_hC2GdqYtOmTT45zfhib62cK1"
                      }
                    }
                  }
                },
                "Loyalty points": {
                  "value": {
                    "name": "Digital - Loyalty Points Reward",
                    "metadata": {
                      "Type": "Loyalty Points"
                    },
                    "parameters": {
                      "campaign": {
                        "id": "camp_hC2GdqYtOmTT45zfhib62cK1",
                        "balance": 100
                      }
                    }
                  }
                },
                "Pay with Points": {
                  "value": {
                    "name": "Pay with Points Reward",
                    "metadata": {
                      "Type": "Coin"
                    },
                    "parameters": {
                      "coin": {
                        "exchange_ratio": 900,
                        "points_ratio": 8000
                      }
                    }
                  }
                },
                "Material Reward": {
                  "value": {
                    "name": "Get a Comic Book",
                    "metadata": {
                      "Type": "Physical product"
                    },
                    "parameters": {
                      "product": {
                        "id": "prod_0b15f6b9f650c16990",
                        "sku_id": "sku_0b1621b319d248b79f"
                      }
                    },
                    "stock": 2,
                    "attributes": {
                      "image_url": "https://www.website.com/img_fPH9.png",
                      "description": "Comic book"
                    }
                  }
                }
              }
            }
          },
          "description": "Define the parameters to be updated for the reward."
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "description": "Update the details of a reward."
      },
      "delete": {
        "summary": "Delete Reward",
        "operationId": "delete-rewards-reward_id",
        "responses": {
          "204": {
            "description": "Returns no content if deletion is successful."
          },
          "400": {
            "description": "Bad Request. Returns an error indicating that the reward with given ID is assigned to a resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/e_400_resource_in_use"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "code": 400,
                      "key": "resource_in_use",
                      "message": "Resource in use",
                      "details": "Resource reward with id rew_fcYALROsORec6cP0VBItCVfq is in use by reward_assignments with ids [rewa_5WV7H3y2lT3GGl03Xjw29IEc]",
                      "request_id": "v-0b8c7b967950216291",
                      "related_object_ids": [
                        "rewa_5WV7H3y2lT3GGl03Xjw29IEc"
                      ],
                      "related_object_type": "reward_assignment"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Returns an error indicating that the reward with given ID was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/e_404_not_found"
                },
                "examples": {
                  "Reward Not Found": {
                    "value": {
                      "code": 404,
                      "key": "not_found",
                      "message": "Resource not found",
                      "details": "Cannot find reward with id rew_2erjvECLs92GYzKbak3QkyT",
                      "request_id": "v-0ae29895e8c6b7781a",
                      "resource_id": "rew_2erjvECLs92GYzKbak3QkyT",
                      "resource_type": "reward"
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "tags": [
          "REWARDS API"
        ],
        "description": "Delete a reward."
      }
    },
    "/rewards/{reward_id}/assignments": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "reward_id",
          "in": "path",
          "required": true,
          "description": "A unique reward identifier"
        }
      ],
      "get": {
        "summary": "List Reward Assignments",
        "tags": [
          "REWARDS API"
        ],
        "responses": {
          "200": {
            "description": "Returns a dictionary of reward assignment objects. Each object contains information regarding the resource to which the reward was assigned and the cost in loyalty points for the reward.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/4_res_list_reward_assignments"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "object": "list",
                      "data_ref": "data",
                      "data": [
                        {
                          "id": "rewa_PbIRoMXpwe5QhobW4JKu0VjH",
                          "reward_id": "rew_C7wS9eHFDN4CIbXI5PpLSkGY",
                          "related_object_id": "camp_wciTvaOfYmAa3EmIIW3QpXXZ",
                          "related_object_type": "campaign",
                          "parameters": {
                            "loyalty": {
                              "points": 15
                            }
                          },
                          "created_at": "2022-08-17T08:13:02.507Z",
                          "updated_at": null,
                          "object": "reward_assignment"
                        },
                        {
                          "id": "rewa_pJYQBXSitK2OVPK3XMXZK76X",
                          "reward_id": "rew_C7wS9eHFDN4CIbXI5PpLSkGY",
                          "related_object_id": "camp_jcErmtGAOmHUAy0oUgkwKnPZ",
                          "related_object_type": "campaign",
                          "parameters": {
                            "loyalty": {
                              "points": 20
                            }
                          },
                          "created_at": "2022-08-24T11:40:22.418Z",
                          "updated_at": null,
                          "object": "reward_assignment"
                        }
                      ],
                      "total": 2
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Returns an error if the given reward is missing, does not exist or was deleted.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/e_404_not_found"
                },
                "examples": {
                  "Not Found": {
                    "value": {
                      "code": 404,
                      "key": "not_found",
                      "message": "Resource not found",
                      "details": "Cannot find reward with id rew_C7wS9eHFDN4CIbXI5PpLSkGYi",
                      "request_id": "v-0b95a68c678ad5c765",
                      "resource_id": "rew_C7wS9eHFDN4CIbXI5PpLSkGYi",
                      "resource_type": "reward"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-rewards-reward_id-assignments",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "description": "Retrieve reward assignments by the reward ID."
      },
      "post": {
        "summary": "Create Reward Assignment",
        "operationId": "post-rewards-reward_id-assignments",
        "responses": {
          "200": {
            "description": "Returns a reward assignment object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/4_obj_reward_assignment_object"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "id": "rewa_cqD2XE5x8LcD2c1FLlvqikti",
                      "reward_id": "rew_C7wS9eHFDN4CIbXI5PpLSkGY",
                      "related_object_id": "camp_OTuGGP90PivbvROsRvfM65El",
                      "related_object_type": "campaign",
                      "parameters": {
                        "loyalty": {
                          "points": 39
                        }
                      },
                      "created_at": "2022-08-24T13:44:42.610Z",
                      "updated_at": null,
                      "object": "reward_assignment"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Returns an error if request body parameters are missing.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/e_400_missing_param"
                },
                "examples": {
                  "Missing Parameter": {
                    "value": {
                      "code": 400,
                      "key": "missing_param",
                      "message": "Missing required parameter",
                      "details": "Parameter 'parameters.loyalty' is required",
                      "request_id": "v-0b95c7f3684ad5f06d"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Returns an error when creating a reward assignment for a reward that has been deleted or does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/e_404_not_found"
                },
                "examples": {
                  "Reward Not Found": {
                    "value": {
                      "code": 404,
                      "key": "not_found",
                      "message": "Resource not found",
                      "details": "Cannot find reward with id rew_C7wS9eHFDN4CIbXI5PpLSkGYi",
                      "request_id": "v-0b95c0bedf46fcbe83",
                      "resource_id": "rew_C7wS9eHFDN4CIbXI5PpLSkGYi",
                      "resource_type": "reward"
                    }
                  },
                  "Missing Campaign": {
                    "value": {
                      "code": 404,
                      "key": "not_found",
                      "message": "Resource not found",
                      "details": "Cannot find campaign with id null",
                      "request_id": "v-0b95c68b12cad5eebb",
                      "resource_id": null,
                      "resource_type": "campaign"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Returns an error if a conflict is found, i.e. an assignment for the reward has already been created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/e_409_duplicate_found"
                },
                "examples": {
                  "Duplicate Found": {
                    "value": {
                      "code": 409,
                      "key": "duplicate_found",
                      "message": "Duplicated resource found",
                      "details": "Duplicated reward_assignment exists with id rewa_q1Ad955TUZS4nVIxplOw9pL3",
                      "request_id": "v-0b95c78daa06fcc6bb",
                      "resource_id": "rewa_q1Ad955TUZS4nVIxplOw9pL3",
                      "resource_type": "reward_assignment"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "REWARDS API"
        ],
        "description": "Assigns a reward to a specified loyalty campaign.",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/4_req_create_reward_assignment"
              },
              "examples": {
                "Example": {
                  "value": {
                    "campaign": "camp_OTuGGP90PivbvROsRvfM65El",
                    "parameters": {
                      "loyalty": {
                        "points": 39
                      }
                    }
                  }
                }
              }
            }
          },
          "description": "Provide the campaign ID of the campaign to which the reward is to be assigned and define the cost of the reward in terms of loyalty points."
        }
      }
    },
    "/rewards/{rewardId}/assignments/{assignmentId}": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "example": "rew_2erjvECLs92GYzKbak3QkyTV"
          },
          "name": "rewardId",
          "in": "path",
          "required": true,
          "description": "A unique reward ID."
        },
        {
          "schema": {
            "type": "string",
            "example": "rewa_YkwQ5ezNYTQV2geodMVhTpy4"
          },
          "name": "assignmentId",
          "in": "path",
          "required": true,
          "description": "A unique reward assignment ID."
        }
      ],
      "put": {
        "summary": "Update Reward Assignment",
        "operationId": "put-rewards-reward_id-assignments-assignment_id",
        "responses": {
          "200": {
            "description": "Returns the updated reward assignment object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/4_obj_reward_assignment_object"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "id": "rewa_pJYQBXSitK2OVPK3XMXZK76X",
                      "reward_id": "rew_C7wS9eHFDN4CIbXI5PpLSkGY",
                      "related_object_id": "camp_jcErmtGAOmHUAy0oUgkwKnPZ",
                      "related_object_type": "campaign",
                      "parameters": {
                        "loyalty": {
                          "points": 35
                        }
                      },
                      "created_at": "2022-08-24T11:40:22.418Z",
                      "updated_at": "2022-08-24T13:02:32.262Z",
                      "object": "reward_assignment"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Returns an error indicating that the reward assignment with given ID was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/e_404_not_found"
                },
                "examples": {
                  "Not Found": {
                    "value": {
                      "code": 404,
                      "key": "not_found",
                      "message": "Resource not found",
                      "details": "Cannot find reward_assignment with id rewa_pJYQBXSitK2OVPK3XMXZK76XI",
                      "request_id": "v-0b95b8760a4ad5dda1",
                      "resource_id": "rewa_pJYQBXSitK2OVPK3XMXZK76XI",
                      "resource_type": "reward_assignment"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "REWARDS API"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/4_req_update_reward_assignment"
              },
              "examples": {
                "Example": {
                  "value": {
                    "parameters": {
                      "loyalty": {
                        "points": 35
                      }
                    }
                  }
                }
              }
            }
          },
          "description": "Define the number of points required to exchange for the reward."
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "description": "Update the number of points needed to successfully redeem the reward."
      },
      "delete": {
        "summary": "Delete Reward Assignment",
        "operationId": "delete-rewards-reward_id-assignments-assignment_id",
        "responses": {
          "204": {
            "description": "Returns no content if deletion is successful."
          },
          "404": {
            "description": "Returns an error indicating that the reward or reward assignment with given ID was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/e_404_not_found"
                },
                "examples": {
                  "Reward Not Found": {
                    "value": {
                      "code": 404,
                      "key": "not_found",
                      "message": "Resource not found",
                      "details": "Cannot find reward with id rew_2erjvECLs92GYzKbak3QkyT",
                      "request_id": "v-0ae29f325e1027cde8",
                      "resource_id": "rew_2erjvECLs92GYzKbak3QkyT",
                      "resource_type": "reward"
                    }
                  },
                  "Reward Assignment Not Found": {
                    "value": {
                      "code": 404,
                      "key": "not_found",
                      "message": "Resource not found",
                      "details": "Cannot find reward_assignment with id rewa_YkwQ5ezNYTQV2geodMVhTpy",
                      "request_id": "v-0ae2a0588b9027cf95",
                      "resource_id": "rewa_YkwQ5ezNYTQV2geodMVhTpy",
                      "resource_type": "reward_assignment"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "REWARDS API"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "description": "This method deletes a reward assignment for a particular reward."
      },
      "get": {
        "summary": "Get Reward Assignment",
        "operationId": "get-rewards-rewardId-assignments-assignmentId",
        "responses": {
          "200": {
            "description": "Returns a reward assignment object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/4_obj_reward_assignment_object"
                }
              }
            }
          },
          "404": {
            "description": "Returns an error indicating that the reward assignment with given ID was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/e_404_not_found"
                },
                "examples": {
                  "Reward Assignment Not Found": {
                    "value": {
                      "code": 404,
                      "key": "not_found",
                      "message": "Resource not found",
                      "details": "Cannot find reward_assignment with id rewa_pJYQBXSitK2OVPK3XMXZK76X",
                      "request_id": "v-0b95b596e98ad5da24",
                      "resource_id": "rewa_pJYQBXSitK2OVPK3XMXZK76X",
                      "resource_type": "reward_assignment"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "REWARDS API"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "description": "Retrieve a reward assignment."
      }
    },
    "/publications": {
      "get": {
        "summary": "List Publications",
        "tags": [
          "DISTRIBUTIONS API"
        ],
        "responses": {
          "200": {
            "description": "Returns a list of publications you’ve previously created with [create publication](OpenAPI.json/paths/~1publications/post) or implicitly by the distribution manager. The publications are returned in sorted order, with the most recent ones appearing first.  \n\n<!-- theme: warning -->\n> #### Pagination!\n>\n> If you want to scroll through a huge set of records, it is recommended to use [Exports API](OpenAPI.json/components/schemas/16_obj_export_object). This API will return an error `page_over_limit` if you reach a page above 1000.\n\n`filters` query param allow for joining multiple parameters with logical operators. The syntax looks as follows:\n\n`filters[<field_name>][conditions][<operator>][<index>]=<value>`\n\nOperators:\n```\n    \"$in\"\n    \"$not_in\"\n    \"$is\"\n    \"$is_not\"\n    \"$has_value\"\n    \"$is_unknown\"\n    \"$contains\"\n    \"$starts_with\"\n    \"$ends_with\"\n    \"$more_than\"\n    \"$less_than\"\n    \"$more_than_equal\"\n    \"$less_than_equal\"\n```\n\nExample 1 - list publications of a given customer\n```\nGET /v1/publications?filters[customer_id][conditions][$is][0]=cust_lUET6gRpO5Wxlg5p2j2gRCgL\n```\n\nExample 2 - list publications of 2 customers\n```\nGET /v1/publications?filters[customer_id][conditions][$in][0]=cust_lUET6gRpO5Wxlg5p2j2gRCgL&filters[customer_id][conditions][$in][1]=cust_aR7NfHusxT7PdTMAKMfWDXnc\n```\nor with the `junction` operator\n```\nGET /v1/publications?filters[customer_id][conditions][$is][0]=cust_lUET6gRpO5Wxlg5p2j2gRCgL&filters[customer_id][conditions][$is][1]=cust_aR7NfHusxT7PdTMAKMfWDXnc&filters[junction]=OR\n```"
          }
        },
        "operationId": "get-publications",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "order",
            "description": "Sorts the results, options: `\"id\", \"voucher_code\", \"tracking_id\", \"customer_id\", \"created_at\", \"channel\"`"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "campaign",
            "description": "Filters by a given campaign"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "customer",
            "description": "Filters by a customer"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "voucher",
            "description": "Filters by a given voucher code"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "result",
            "description": "Filters by a publication result"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "voucher_type",
            "description": "Filters by a voucher typerefthe-voucher-object"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "is_referral_code",
            "description": "If true, the query returns only publications of codes from a referral campaign. Otherwise, only publications from coupon campaigns"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "filters",
            "description": "Allows for combining the filters mentioned above, see below for the reference"
          }
        ]
      },
      "post": {
        "summary": "Create Publication",
        "operationId": "post-publications",
        "responses": {
          "200": {
            "description": "Returns a publication object if a valid identifier was provided. Object will contain single published voucher object or list of published voucher codes in case of multiple publication."
          }
        },
        "tags": [
          "DISTRIBUTIONS API"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "join_once",
            "description": "Through this flag, you can control if a particular person gets only one and always the same code even if the app sends multiple publications requests. It means that if you have a referral program, a referrer is assigned only to one code also if an integration sends publication requests more than once for the same customer."
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        },
        "description": "This method selects vouchers that are suitable for publication, adds a publish entry and returns the publication.\n\nA voucher is suitable for publication when it's active and hasn't been published yet.  \n\n<!-- theme: warning -->\n> #### Clearly define the source of the voucher\n>\n> You must clearly define which source you want to publish voucher code from. It can be either a code from a campaign or a specific voucher identified by code.  \n<!-- theme: warning -->\n> #### Publish multiple vouchers\n> In case you want to publish multiple vouchers within single publication you need to specify campaign name and number of vouchers you want to publish.  \n<!-- theme: info -->\n\n> #### Auto-update campaign\n>\n> In case you want to ensure the number of publishable codes increases automatically with the number of customers, you should use **auto-update** campaign."
      }
    },
    "/vouchers/{code}/validate": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "code",
          "in": "path",
          "required": true,
          "description": "A code that identifies the voucher (e.g., Testing7fjWdr)."
        }
      ],
      "post": {
        "summary": "Validate Voucher",
        "operationId": "post-vouchers-code-validate",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "VALIDATIONS API"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "description": "To verify a voucher code given by customer, you can use this method. It is designed for server side integration which means that is accessible only through private keys.  \n\n#### Gift Vouchers - validate Gift Card and control amount to redeem\nVoucherify also gives the possibility to create a gift card, which allows using credits to fulfill the order. A user can specify how many credits he wants to use from the gift card. The available balance of credits is counted based on policy rules attached to the Gift Voucher definition.  \n\nThis operation returns information about the validity of the code. Moreover, it returns hashed source identifier which can be used as tracking id in future calls.\n\nIf a validation session is established then the session details will be returned as well. Read more about sessions: Validation Sessionvalidation-session\n\nVoucher validation might fail because of one of these reasons:\n* `voucher not found` - voucher doesn't exist or was [deleted](OpenAPI.json/paths/~1vouchers~1{code}/delete)\n* `voucher expired` - voucher is out of start date - expiration date time frame\n* `voucher is disabled` - learn more [disable voucher](OpenAPI.json/paths/~1vouchers~1{code}~1disable/post)\n* `customer does not match segment rules` - learn more customer trackingdoc:customer-tracking \n* `order does not match validation rules` - learn more about validation rulesdoc:validation-rules"
      }
    },
    "/validate": {
      "get": {
        "summary": "Validate Voucher (client-side)",
        "tags": [
          "VALIDATIONS API"
        ],
        "responses": {
          "200": {
            "description": "This operation returns information about validity of the code. Moreover it returns hashed source identifier which can be used as tracking id in future calls.\n\nIf a validation session is established then the session details will be returned as well. Read more about sessions: Validation Sessionref:validation-session .\n\nVoucher validation might fail because of one of these reasons:\n* `voucher not found` - voucher doesn't exist or was deletedref:delete-voucher\n* `voucher expired` - voucher is out of [start date - expiration date] time frame\n* `voucher is disabled` - learn more disable voucherdisable-voucher \n* `customer does not match segment rules` - learn more customer trackingcustomer-tracking\n* `order does not match validation rules` - learn more about validation rulesvalidation-rules"
          }
        },
        "operationId": "get-validate",
        "description": "To verify a voucher code given by customer, you can use this method. It is designed for client side integration which means that is accessible only through public keys. This method is designed to be run directly either in web browsers or mobile apps.\n\n### Set customer identity (optional)\n\nVoucherify can help you track anonymous customers. Once you integrate Voucherify.js into your web app and call validate method, Voucherify will return a tracking ID and the script will store it in a cookie. Every next validate call will be using the same tracking ID.\n\nWe are tracking users who are validating vouchers with those who consume them by a tracking_id. For that, we are setting up an identity for the user. We will generate a tracking_id on the server side unless you specify it on your own. In both cases, you will receive it in the validation response.\n\nThe returned tracking_id field should be used as customer source_id in subsequent redemption requests. The tracking_id returned from Validation API is encoded. Voucherify will recognize both values for identifying customer - the one before encryption send as a query parameter to `GET validate` request, and the version encrypted and returned as part of the validation request.\n\n### Sample workflow\n\nCustomer tracking workflow in a nutshell:\n\n**Client-side:**\n  * A customer visits your website.\n  * A customer validates a voucher code. That triggers a validate request to Voucherify. In request, you pass tracking_id or customer.source_id. As a result, it returns **encoded tracking_id**.\n\n**Backend:**\n  * Once the customer finishes the checkout process, your website passes the tracking_id to your backend during a redemption. It is sent as a property *source_id* in a customer object.\n  * A customer object is created and within the redemption response, you get a customer.id.\n  * You can use the customer.id or customer.source_id to fetch or modify the customer details.\n  \nA customer is created (upserted) automatically with a redemption call. Alternatively, you can create a new profile by creating a customer via a dedicated API method. Take a look at the customer object to understand the [entity's structure](https://docs.voucherify.io/reference#the-customer-object). \n\n<!-- theme: info -->\n\n> #### Customer identifier\n>\n> Source id of the customer may be either already hashed version of tracking id you received in a response from a validation request or a custom ID you predefined (email address). Nevertheless, we recommend using identifiers delivered by Voucherify API.\n\n<!--\ntitle: \"Example Code - Readable form\"\nlineNumbers: true\n-->\n```cURL\ncurl -X GET \\\n  -H \"X-Client-Application-Id: 011240bf-d5fc-4ef1-9e82-11eb68c43bf5\" \\\n  -H \"X-Client-Token: 9e2230c5-71fb-460a-91c6-fbee64707a20\" \\\n  -H \"Content-Type: application/json\" \\\n  -H \"origin: yourdomain.com\" \\\n  'https://api.voucherify.io/client/v1/validate?code=5OFF5&amount=1500&item[0][sku_id]=sku_13SWYzm3tuMXSP&item[0][quantity]=2&item[1][product_id]=prod_DSFGCz3IFxpkiL&item[1][quantity]=2'\n```\n\n\n### [JSFiddle Example](https://jsfiddle.net/voucherify/gfu2bgn5/)\n<!--\ntitle: \"Example Code - Voucherify.js\"\nlineNumbers: true\n-->\n```javascript\n<script type=\"text/javascript\" src=\"https://cdn.rawgit.com/rspective/voucherify.js/v1.4.5/dist/voucherify-1.4.5.js\"></script>\n\n<script type=\"text/javascript\">\n  function init() {\n    Voucherify.initialize(\n      \"011240bf-d5fc-4ef1-9e82-11eb68c43bf5\", //YOUR-CLIENT-APPLICATION-ID-FROM-SETTINGS\n      \"9e2230c5-71fb-460a-91c6-fbee64707a20\" //YOUR-CLIENT-TOKEN-FROM-SETTINGS\n    );\n  };\n  init();\n  \n  //-- [Optional] If you want us to track your customers' activity, then you should invoke the following function to set identity. You have to do it only once. If the identity parameter is not passed, then we will generate it for you.\n  Voucherify.setIdentity(\"your-customer-uniq-id\");\n  Voucherify.validate(\"Testing7fjWdr\", function callback (response) {\n    console.log(response);\n  });\n</script>\n```\n\n### Examples with Query Parameters\n\n| **Query Parameters** | **Example URL** |\n|:---|:---|\n| Shortcut - `customer` query param instead of `customer[source_id]` | `https://api.voucherify.io/client/v1/validate?code=sKKFCKLZ&amount=10100&customer=customer_id` |\n| Pass `customer`'s and `redemption`'s context `metadata` in query parameters | `https://api.voucherify.io/client/v1/validate?code=sKKFCKLZ&amount=10100&customer=sure_he_is_new&metadata[shop]=1&customer[metadata][propsy]=2&metadata[test]=true` |\n| Use `tracking_id` instead of `source_id` | `https://api.voucherify.io/client/v1/validate?code=IKU-mvS-JOG&amount=10100&tracking_id=sure_he_is_new_5&metadata[shop]=1&metadata[test]=true` |\n\n### Returns\n\nThis operation returns information about validity of the code. Moreover it returns hashed source identifier which can be used as tracking id in future calls.\n\nIf a validation session is established then the session details will be returned as well. Read more about sessions: Validation Session .\n\nVoucher validation might fail because of one of these reasons:\n\n* `voucher not found` - voucher doesn't exist or was deleted LINK\n* `voucher expired` - voucher is out of [start date - expiration date] time frame\n* `voucher is disabled` - learn more disable voucher LINK\n* `customer does not match segment rules` - learn more customer tracking LINK\n* `order does not match validation rules` - learn more about validation rules LINK",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-Client-Token"
          },
          {
            "$ref": "#/components/parameters/X-Client-Application-Id"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "code",
            "description": "A code that identifies the voucher (e.g., `Testing7fjWdr`)."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "tracking_id",
            "description": "A tracking identifier of a user that validated a voucher. Identifier generated during voucher validation based on your internal id during the first request (e.g., email, database ID). If you do request a first time, you should pass your internal id to track customer. **Although not all information is required, the extra info helps prevent fraud.**"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "amount",
            "description": "A positive integer representing the total amount for the order."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "order.items"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "customer.source_id"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "customer.metadata"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "session_type",
            "description": "Required for session to be setup. Possible values are: LOCK"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "session_key",
            "description": "The session unique identifier. Sending existing identifier will result in overwriting the existing session. If none provided then new id will be generated"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "session_ttl",
            "description": "The value of session's lifetime in time units"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "session_ttl_unit",
            "description": " The time unit for session's lifetime. Possible values are: MILLISECONDS, SECONDS, MINUTES, HOURS, DAYS"
          }
        ]
      }
    },
    "/promotions/validation": {
      "post": {
        "summary": "Validate Promotions",
        "operationId": "post-promotions-validation",
        "responses": {
          "200": {
            "description": "This operation returns a list of valid promotions for a given context (customer and order). You can choose which promotion to apply for example by the highest discount amount."
          }
        },
        "description": "Use this method to get valid promotions for a given customer and order (private keys)\n\n\nIf a validation session is established then the session details will be returned as well. Read more about sessions: [Validation Session] (ref:validation-session)\n\n### Advanced validation filters\n\nYou can narrow down validation to specific promotion ID or tier metadata. Here are the examples of filtering queries you can use:\n\n| **Filter** | **Example** |\n|:---|:---|\n| promotion_id | [filters][promotion_id][conditions][$is]={{Campaign_id}} |\n| tier metadata | [filters][metadata.{{Promotion tier metadata key}}][conditions][$is]={{Promotion tier metadata value}} |",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "audienceRulesOnly",
            "description": "If you add a query param AudienceRulesOnly=true, the request will be validated against customer-related rules only, the rest of attached limits and rules will be ignored."
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        },
        "tags": [
          "VALIDATIONS API"
        ]
      }
    },
    "/promotions/tiers/{tier_id}/validation": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "tier_id",
          "in": "path",
          "required": true,
          "description": "Id of the promotion tier"
        }
      ],
      "post": {
        "summary": "Validate Promotion Tier",
        "operationId": "post-promotions-tiers-tier_id-validation",
        "responses": {
          "200": {
            "description": "Returns validation result in `valid` key of the promotion tier object. Returns `true` if the promotion tier rules and validation rules are satisfied given the request body parameters. Returns `false` if the data provided in the payload does not meet validation rules or promotion tier requirements."
          }
        },
        "description": "To verify whether the promotion tier discount can be applied to an order. This method is designed for server side integration which means that it is accessible only through private keys.",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        },
        "tags": [
          "VALIDATIONS API"
        ]
      }
    },
    "/vouchers/{code}/redemption": {
      "parameters": [
        {
          "$ref": "#/components/parameters/code"
        }
      ],
      "get": {
        "summary": "Get Voucher's Redemption",
        "tags": [
          "REDEMPTIONS API"
        ],
        "responses": {
          "200": {
            "description": "A dictionary with a `redemption_entries` property that contains an array of voucher's redemptions."
          }
        },
        "operationId": "get-vouchers-code-redemption",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ]
      },
      "post": {
        "summary": "Redeem Voucher",
        "operationId": "post-vouchers-code-redemption",
        "responses": {
          "200": {
            "description": "Returns a redemption object if the redeem operation succeeded."
          },
          "400": {
            "description": "Returns an error if something goes wrong. A common source of error is an invalid or expired voucher, or a valid gift voucher with insufficient available balance."
          }
        },
        "tags": [
          "REDEMPTIONS API"
        ],
        "description": "To redeem a voucher, you create a redemption object. It increments redemption counter and updates history of the voucher. \n\n#### How discounts and order amounts and calculated in the API response?\n\nIn the table below, you can see the logic the API follows to calculate discounts and amounts:\n\n| **Field** | **Calculation** | **Description** |\n|:---|:---|:---|\n| amount | N/A | This field shows order amount before applying any discount |\n| total_amount | total_amount = amount - total_discount_amount | This field shows order amount after applying all the discounts |\n| discount_amount | discount_amount = previous_discount_amonut + applied_discount_amount | This field sums up all order-level discounts applied to a patricular order |\n| items_discount_amount | sum(items, i => i.discount_amount) | This field sums up all product-specific discounts applied to this order id |\n| total_discount_amount | total_discount_amount = discount_amount + items_discount_amount | This field sums up all order-level and all product-specific discounts applied to this order id |\n| applied_discount_amount | N/A | This field shows order-level discount applied in a particular request |\n| items_applied_discount_amount | sum(items, i => i.applied_discount_amount) | This field sums up all product-specific discounts applied in a particular request |\n| total_applied_discount_amount | total_applied_discount_amount = applied_discount_amount + items_applied_discount_amount | This field sums up all order-level and all product-specific discounts applied in a particular request |\n\n## SDKs  \n\nYou can invoke the redemption endpoint with one of the official libraries:  \n\n[![Voucherify PHP SDK](../docs/svg/php.svg)](https://github.com/rspective/voucherify-php-sdk)&nbsp;&nbsp;\n[![Voucherify JavaScript SDK](../docs/svg/javascript.svg)](https://github.com/rspective/voucherify.js)&nbsp;&nbsp;\n[![Voucherify Node.js SDK](../docs/svg/nodejs.svg)](https://github.com/rspective/voucherify-nodejs-sdk)&nbsp;&nbsp;\n[![Voucherify Ruby SDK](../docs/svg/ruby.svg)](https://github.com/rspective/voucherify-ruby-sdk)&nbsp;&nbsp;\n[![Voucherify Swift SDK](../docs/svg/ios.svg)](https://github.com/voucherifyio/voucherify-ios-sdk)&nbsp;&nbsp;\n[![Voucherify Java SDK](../docs/svg/java.svg)](https://github.com/rspective/voucherify-java-sdk)&nbsp;&nbsp;\n[![Voucherify Android SDK](../docs/svg/android.svg)](https://github.com/rspective/voucherify-android-sdk)&nbsp;&nbsp;\n[![Voucherify .NET Framework SDK](../docs/svg/dotNet.svg)](https://github.com/voucherifyio/voucherify-dotNET-sdk)&nbsp;&nbsp;\n[![Voucherify Python SDK](../docs/svg/python.svg)](https://github.com/voucherifyio/voucherify-python-sdk)\n\n## Customer tracking\n\nRedeem operation is a key part of [Customer tracking] (doc:customer-tracking) workflow. There're 3 ways you can identify your end customer in Voucherify within this request. You can provide either a tracking ID (e.g. your customer's login or a generated id), customer ID (if customer already stored in Voucherify) or a full `customer` object in payload. Note that you can pass and thus store any customer-related metadata. See examples on the right.\n\n<!--\ntitle: \"Example Customer\"\nlineNumbers: true\n-->\n```json\n\"customer\": {\n  \"source_id\": \"alice.morgan\",\n  \"name\": \"Alice Morgan\",\n  \"email\": \"alice@morgan.com\",\n  \"description\": \"\",\n  \"metadata\": {\n    \"locale\": \"en-GB\",\n    \"shoeSize\": 5,\n    \"favourite_brands\": [\"Armani\", \"L’Autre Chose\", \"Vicini\"]\n  }\n}\n```\n\nIf you already created a customer profile in Voucherify's database, whether it was implicitly by providing it to the redeem function or explicitly by invoking the `customer.create` method, you can identify your customer in following redemptions by a generated id (starting with `cust_`). \n\n<!--\nlineNumbers: true\n-->\n```json title=Example Customer Identifier [object]\n{\n  \"customer\": {\n    \"id\": \"cust_C9qJ3xKgZFqkpMw7b21MF2ow\"\n  }\n}\n```\n<!--\nlineNumbers: true\n-->\n```json title=Example Customer Identifier\n{\n  \"customer\": \"cust_C9qJ3xKgZFqkpMw7b21MF2ow\"\n}\n```\n<!--\nlineNumbers: true\n-->\n```json title=Example Customer Identifier by Tracking ID\n{\n  \"customer\": \"alice.morgan\"\n}\n```\n\n<!-- theme: info -->\n\n> #### Customer identifier\n>\n> Do you need to undo a redemption? You can do it with [redemption rollback](OpenAPI.json/paths/~1redemptions~1{redemption_id}~1rollback/post).\n\n## Redemption failures\n\nThere are several reasons why a redemption may fail. You will get the reason in the error key:\n - `resource_not_found` - voucher with given code does not exist\n- `voucher_not_active` - voucher is not active yet (before start date)\n- `voucher_expired` - voucher has already expired (after expiration date)\n- `voucher_disabled` -  voucher has been disabled (`active: false`)\n- `quantity_exceeded` - voucher's redemptions limit has been exceeded\n- `gift_amount_exceeded` - gift amount has been exceeded\n- `customer_rules_violated` - customer did not match to the segment\n- `order_rules_violated` - order did not match validation rules\n- `invalid_order` - order was specified incorrectly\n- `invalid_amount` - order amount was specified incorrectly\n- `missing_amount` - order amount was not specified\n- `missing_order_items` - order items was not specified\n- `missing_customer` - customer was not specified\n\n## Order object\n\nThe purchase of previously defined products by end customers is handled through the order objects. You are obligated to pass order object in case you use validation rules. You can learn more about the [validation rules structure] (doc:validation-rules).  \n\n| **Attributes** | **Description** |\n|:---|:---|\n| amount<br>`integer` | A positive integer representing the total amount for the order. |\n| items<br>`list` | List of items constituting the order. Order items can be defined either by `product_id` or `sku_id`. Along with every item you must define `quantity`.<br><br>Child attributes:<br><br>- `product_id` (*string*) - The ID of the associated product object for this line item.<br><br>- `sku_id` (*string*) - The ID of the associated variant (sku) object for this line item.<br><br>- `quantity` (*integer*) - A positive integer representing the number of instances of item that are included in this order line.<br><br>- `price` (*integer*) - A positive integer representing the cost of an item.<br><br>- `amount` (*integer*) - `quantity` * `price` (you should provide it to retrieve `discount_amount` for a particular order item if the discount is applied only to this item learn more |\n\n\n<!-- theme: info -->\n\n> #### Order ID\n>\n> If you use the same order id in more than one redemption request, all valid discounts provided in the redemption payload will be applied to the given order. [Read more in this guide] (https://docs.voucherify.io/docs/manage-stackable-discounts).\n\n<!--\nlineNumbers: true\n-->\n```json title=Example Order\n\"order\": {\n  \"amount\": 10000,\n  \"items\": [\n    {\n      \"product_id\": \"prod_Bi7sRr3kwvxH2I\",\n      \"sku_id\": null,\n      \"quantity\": 1\n    }\n  ]\n}\n```\n## Gift Vouchers - redeem Gift Card and control redeemed amount\n\nVoucherify also gives the possibility to create a gift card, which allows using credits to fulfill the order. A user can specify how many credits he wants to use from the gift card. The available balance of credits is counted based on policy rules attached to the Gift Voucher definition.\n\nWhen the user wants to define how many gift credits he uses from the gift card to complete the order, it's possible by property credits in the request body of the voucher code he wants to redeem. The value of credits cannot be higher than the current balance on the gift card.\n\n<!--\nlineNumbers: true\n-->\n```cURL title=Example Request - control redeemed amount\ncurl -i -X POST \\\n   -H \"Content-Type:application/json\" \\\n   -H \"X-App-Id:c70a6f00-cf91-4756-9df5-47628850002b\" \\\n   -H \"X-App-Token:3266b9f8-e246-4f79-bdf0-833929b1380c\" \\\n   -d '{\n        \"order\": {\n           \"amount\": 2500\n        },\n        \"gift\": {\n           \"credits\": 1500\n        }\n      }' \\ \n 'https://api.voucherify.io/v1/vouchers/aDm4CRR3/redemption'\n```\n## Loyalty Coins - redeem loyalty card and pay with points\n\nVoucherify offers the possibility to set up a reward type in the Loyalty Program, which allows using loyalty points as gift credits. The available balance of credits is counted based on policy rules attached to the reward definition.\n\nIf a user configures just one reward type of paying in points, in the redemption request, there is no additional information required. Voucherify will automatically select as a proper reward definition and will calculate the discount based on the attached policy.  \n\n<!--\nlineNumbers: true\n-->\n```json title=Example Request\n{\n    \"order\": {\n        \"amount\": 25000,\n        \"items\": [\n            {\n                \"product_id\": \"test_source_1\",\n                \"quantity\": \"1\",\n                \"price\": 15000\n            },\n            {\n                \"product_id\": \"test_source_2\",\n                \"quantity\": \"1\",\n                \"price\": 10000\n            }\n        ]\n    },\n    \"metadata\": {\n        \"category\": \"vip\",\n        \"shop\": \"s1\",\n        \"location\": \"l1\"\n    }\n}\n```\n<!--\nlineNumbers: true\n-->\n```json title=Example Response\n{\n    \"id\": \"r_zv5Qn7cF68RbVX4foKxgwUi1\",\n    \"object\": \"redemption\",\n    \"date\": \"2020-05-24T13:44:20Z\",\n    \"customer_id\": \"cust_lXisxEaEHYKTEVf1YnNS8AUh\",\n    \"amount\": 250,\n    \"order\": {\n        \"status\": \"PROCESSING\",\n        \"items\": [\n            {\n                \"object\": \"order_item\",\n                \"product_id\": \"test_source_1\",\n                \"quantity\": 1,\n                \"amount\": 15000,\n                \"price\": 15000\n            },\n            {\n                \"object\": \"order_item\",\n                \"product_id\": \"test_source_2\",\n                \"quantity\": 1,\n                \"amount\": 10000,\n                \"price\": 10000\n            }\n        ],\n        \"customer\": {\n            \"id\": \"cust_lXisxEaEHYKTEVf1YnNS8AUh\",\n            \"object\": \"customer\",\n            \"referrals\": {\n                \"campaigns\": [],\n                \"total\": 0\n            }\n        },\n        \"amount\": 25000,\n        \"object\": \"order\",\n        \"id\": \"ord_Tgi2ApelDyl86sm5AYDKCBMZ\",\n        \"created_at\": \"2020-05-24T13:44:20Z\",\n        \"discount_amount\": 25000\n    },\n    \"customer\": {\n        \"id\": \"cust_lXisxEaEHYKTEVf1YnNS8AUh\",\n        \"source_id\": \"tom+Loyalty@voucherify.io\",\n        \"name\": \"Tom Loyalty\",\n        \"email\": \"tom+Loyalty@voucherify.io\",\n        \"metadata\": {},\n        \"object\": \"customer\"\n    },\n    \"reward\": {\n        \"assignment_id\": \"rewa_pHilLjHWOD7oNjJZnog3VoEi\",\n        \"loyalty_tier_id\": \"ltr_3q5dW6GaRC4QkA1oYmfGy1k1\",\n        \"id\": \"rew_3qmzGPWJ7LfLXnPAjmbPacIl\",\n        \"name\": \"1 point - 25 cents\",\n        \"created_at\": \"2020-05-22T18:39:52Z\",\n        \"updated_at\": \"2020-05-23T08:18:55Z\",\n        \"parameters\": {\n            \"automation_id\": null,\n            \"coin\": {\n                \"exchange_ratio\": 0.25\n            }\n        },\n        \"type\": \"COIN\",\n        \"object\": \"reward\"\n    },\n    \"metadata\": {\n        \"category\": \"vip\",\n        \"shop\": \"s1\",\n        \"location\": \"l1\"\n    },\n    \"result\": \"SUCCESS\",\n    \"tracking_id\": \"track_IWQYtuUE7phYpPzTHD5uwbyvlrO4nqyzipbQQtsHrRw=\",\n    \"voucher\": {\n        \"id\": \"v_wjgLC2lrQy1urPOdd35JX0RtkcOcQOmb\",\n        \"code\": \"Dm1x8MuX\",\n        \"campaign\": \"TestLoyalty-GivePoints\",\n        \"campaign_id\": \"camp_qVVaC4vpVlof03eBi8qb5gE7\",\n        \"category\": null,\n        \"type\": \"LOYALTY_CARD\",\n        \"discount\": null,\n        \"gift\": null,\n        \"loyalty_card\": {\n            \"points\": 489,\n            \"balance\": 23\n        },\n        \"start_date\": null,\n        \"expiration_date\": null,\n        \"validity_timeframe\": null,\n        \"validity_day_of_week\": null,\n        \"publish\": {\n            \"object\": \"list\",\n            \"count\": 1,\n            \"url\": \"/v1/vouchers/Dm1x8MuX/publications?page=1&limit=10\"\n        },\n        \"redemption\": {\n            \"object\": \"list\",\n            \"quantity\": null,\n            \"redeemed_quantity\": 8,\n            \"url\": \"/v1/vouchers/Dm1x8MuX/redemptions?page=1&limit=10\",\n            \"redeemed_points\": 466\n        },\n        \"active\": true,\n        \"additional_info\": null,\n        \"metadata\": {},\n        \"assets\": {\n            \"qr\": {\n                \"id\": \"U2FsdGVkX1+9Eo0bLWMZmYK6nQxl3AyR3nqkloGURcpRJcxL3hl5xXSGRYjYdySc9twLaKnYGVXbLtjCGW8FBotl1rTAxLJQm4okoJ385Gd6pc1ty6AnhaHHJjCeLoYYSQCG1EyP9PRxnTihjmsE9g==\",\n                \"url\": \"https://dev.dl.voucherify.io/api/v1/assets/qr/U2FsdGVkX1%2B9Eo0bLWMZmYK6nQxl3AyR3nqkloGURcpRJcxL3hl5xXSGRYjYdySc9twLaKnYGVXbLtjCGW8FBotl1rTAxLJQm4okoJ385Gd6pc1ty6AnhaHHJjCeLoYYSQCG1EyP9PRxnTihjmsE9g%3D%3D\"\n            },\n            \"barcode\": {\n                \"id\": \"U2FsdGVkX19NfR0ANlhLM7Df9Ec+xqTh6aTbHakk/Gzeh9zTiuj8KUBLswVXkz0gdLVnn1ZtzjCv7oF/BSQTyJx0YSK+HIUG9RGD+9rVhiC7+4WkSKrgAZ+NeqQBIqcespt8WWygXjfkvbyXBSF7Lg==\",\n                \"url\": \"https://dev.dl.voucherify.io/api/v1/assets/barcode/U2FsdGVkX19NfR0ANlhLM7Df9Ec%2BxqTh6aTbHakk%2FGzeh9zTiuj8KUBLswVXkz0gdLVnn1ZtzjCv7oF%2FBSQTyJx0YSK%2BHIUG9RGD%2B9rVhiC7%2B4WkSKrgAZ%2BNeqQBIqcespt8WWygXjfkvbyXBSF7Lg%3D%3D\"\n            }\n        },\n        \"is_referral_code\": false,\n        \"holder_id\": \"cust_lXisxEaEHYKTEVf1YnNS8AUh\",\n        \"updated_at\": \"2020-05-24T13:44:20Z\",\n        \"holder\": {\n            \"id\": \"cust_lXisxEaEHYKTEVf1YnNS8AUh\",\n            \"source_id\": \"tom+Loyalty@voucherify.io\",\n            \"name\": \"Tom Loyalty\",\n            \"email\": \"tom+Loyalty@voucherify.io\",\n            \"metadata\": {},\n            \"object\": \"customer\"\n        },\n        \"object\": \"voucher\",\n        \"validation_rules_assignments\": {\n            \"data\": [],\n            \"object\": \"list\",\n            \"total\": 0,\n            \"data_ref\": \"data\"\n        }\n    }\n}\n```\n\nIn case the user wants to define how much he spends in points, it is configurable by property `points` in a request body.\n\n<!--\nlineNumbers: true\n-->\n```json title=Example Request\n{\n    \"reward\": {\n        \"points\": 10\n    },\n    \"order\": {\n        \"amount\": 25000,\n        \"items\": [\n            {\n                \"product_id\": \"test_source_1\",\n                \"quantity\": \"1\",\n                \"price\": 15000\n            },\n            {\n                \"product_id\": \"test_source_2\",\n                \"quantity\": \"1\",\n                \"price\": 10000\n            }\n        ]\n    },\n    \"metadata\": {\n        \"category\": \"vip\",\n        \"shop\": \"s1\",\n        \"location\": \"l1\"\n    }\n}\n```\n<!--\nlineNumbers: true\n-->\n```json title=Example Response\n{\n    \"id\": \"r_NJIfNYD8uc2lNm3YBAqXr3FF\",\n    \"object\": \"redemption\",\n    \"date\": \"2020-05-24T16:28:29Z\",\n    \"customer_id\": \"cust_lXisxEaEHYKTEVf1YnNS8AUh\",\n    \"amount\": 10,\n    \"order\": {\n        \"status\": \"PROCESSING\",\n        \"items\": [\n            {\n                \"object\": \"order_item\",\n                \"product_id\": \"test_source_1\",\n                \"quantity\": 1,\n                \"amount\": 15000,\n                \"price\": 15000\n            },\n            {\n                \"object\": \"order_item\",\n                \"product_id\": \"test_source_2\",\n                \"quantity\": 1,\n                \"amount\": 10000,\n                \"price\": 10000\n            }\n        ],\n        \"customer\": {\n            \"id\": \"cust_lXisxEaEHYKTEVf1YnNS8AUh\",\n            \"object\": \"customer\",\n            \"referrals\": {\n                \"campaigns\": [],\n                \"total\": 0\n            }\n        },\n        \"amount\": 25000,\n        \"object\": \"order\",\n        \"id\": \"ord_70kKdXIKCSx5cfglKSpz9aHy\",\n        \"created_at\": \"2020-05-24T16:28:29Z\",\n        \"discount_amount\": 250\n    },\n    \"customer\": {\n        \"id\": \"cust_lXisxEaEHYKTEVf1YnNS8AUh\",\n        \"source_id\": \"tom+Loyalty@voucherify.io\",\n        \"name\": \"Tom Loyalty\",\n        \"email\": \"tom+Loyalty@voucherify.io\",\n        \"metadata\": {},\n        \"object\": \"customer\"\n    },\n    \"reward\": {\n        \"assignment_id\": \"rewa_pHilLjHWOD7oNjJZnog3VoEi\",\n        \"loyalty_tier_id\": null,\n        \"id\": \"rew_3qmzGPWJ7LfLXnPAjmbPacIl\",\n        \"name\": \"1 point - 25 cents\",\n        \"created_at\": \"2020-05-22T18:39:52Z\",\n        \"updated_at\": \"2020-05-24T13:44:26Z\",\n        \"parameters\": {\n            \"automation_id\": null,\n            \"coin\": {\n                \"exchange_ratio\": 0.25\n            }\n        },\n        \"type\": \"COIN\",\n        \"object\": \"reward\"\n    },\n    \"metadata\": {\n        \"category\": \"vip\",\n        \"shop\": \"s1\",\n        \"location\": \"l1\"\n    },\n    \"result\": \"SUCCESS\",\n    \"tracking_id\": \"track_IWQYtuUE7phYpPzTHD5uwbyvlrO4nqyzipbQQtsHrRw=\",\n    \"voucher\": {\n        \"id\": \"v_wjgLC2lrQy1urPOdd35JX0RtkcOcQOmb\",\n        \"code\": \"Dm1x8MuX\",\n        \"campaign\": \"TestLoyalty-GivePoints\",\n        \"campaign_id\": \"camp_qVVaC4vpVlof03eBi8qb5gE7\",\n        \"category\": null,\n        \"type\": \"LOYALTY_CARD\",\n        \"discount\": null,\n        \"gift\": null,\n        \"loyalty_card\": {\n            \"points\": 539,\n            \"balance\": 63\n        },\n        \"start_date\": null,\n        \"expiration_date\": null,\n        \"validity_timeframe\": null,\n        \"validity_day_of_week\": null,\n        \"publish\": {\n            \"object\": \"list\",\n            \"count\": 1,\n            \"url\": \"/v1/vouchers/Dm1x8MuX/publications?page=1&limit=10\"\n        },\n        \"redemption\": {\n            \"object\": \"list\",\n            \"quantity\": null,\n            \"redeemed_quantity\": 9,\n            \"url\": \"/v1/vouchers/Dm1x8MuX/redemptions?page=1&limit=10\",\n            \"redeemed_points\": 476\n        },\n        \"active\": true,\n        \"additional_info\": null,\n        \"metadata\": {},\n        \"assets\": {\n            \"qr\": {\n                \"id\": \"U2FsdGVkX1+9Eo0bLWMZmYK6nQxl3AyR3nqkloGURcpRJcxL3hl5xXSGRYjYdySc9twLaKnYGVXbLtjCGW8FBotl1rTAxLJQm4okoJ385Gd6pc1ty6AnhaHHJjCeLoYYSQCG1EyP9PRxnTihjmsE9g==\",\n                \"url\": \"https://dev.dl.voucherify.io/api/v1/assets/qr/U2FsdGVkX1%2B9Eo0bLWMZmYK6nQxl3AyR3nqkloGURcpRJcxL3hl5xXSGRYjYdySc9twLaKnYGVXbLtjCGW8FBotl1rTAxLJQm4okoJ385Gd6pc1ty6AnhaHHJjCeLoYYSQCG1EyP9PRxnTihjmsE9g%3D%3D\"\n            },\n            \"barcode\": {\n                \"id\": \"U2FsdGVkX19NfR0ANlhLM7Df9Ec+xqTh6aTbHakk/Gzeh9zTiuj8KUBLswVXkz0gdLVnn1ZtzjCv7oF/BSQTyJx0YSK+HIUG9RGD+9rVhiC7+4WkSKrgAZ+NeqQBIqcespt8WWygXjfkvbyXBSF7Lg==\",\n                \"url\": \"https://dev.dl.voucherify.io/api/v1/assets/barcode/U2FsdGVkX19NfR0ANlhLM7Df9Ec%2BxqTh6aTbHakk%2FGzeh9zTiuj8KUBLswVXkz0gdLVnn1ZtzjCv7oF%2FBSQTyJx0YSK%2BHIUG9RGD%2B9rVhiC7%2B4WkSKrgAZ%2BNeqQBIqcespt8WWygXjfkvbyXBSF7Lg%3D%3D\"\n            }\n        },\n        \"is_referral_code\": false,\n        \"holder_id\": \"cust_lXisxEaEHYKTEVf1YnNS8AUh\",\n        \"updated_at\": \"2020-05-24T16:28:29Z\",\n        \"holder\": {\n            \"id\": \"cust_lXisxEaEHYKTEVf1YnNS8AUh\",\n            \"source_id\": \"tom+Loyalty@voucherify.io\",\n            \"name\": \"Tom Loyalty\",\n            \"email\": \"tom+Loyalty@voucherify.io\",\n            \"metadata\": {},\n            \"object\": \"customer\"\n        },\n        \"object\": \"voucher\",\n        \"validation_rules_assignments\": {\n            \"data\": [],\n            \"object\": \"list\",\n            \"total\": 0,\n            \"data_ref\": \"data\"\n        }\n    }\n}\n```\n\nMoreover, it is possible to define many levels of reward in which collected points can be used as gift credits. Per each tier, we can implement different conversion factors. Having many options in the rewards catalog, we will need to select a coins calculation policy (reward ID) that we want to use for calculating a final discount in the redemption request.\n\n\n<!--\nlineNumbers: true\n-->\n```json title=Example Request\n{\n    \"reward\": {\n        \"points\": 30,\n        \"id\": \"rew_noP2S5H8PEBFT97mennSA531\"\n    },\n    \"order\": {\n        \"amount\": 25000,\n        \"items\": [\n            {\n                \"product_id\": \"test_source_1\",\n                \"quantity\": \"1\",\n                \"price\": 15000\n            },\n            {\n                \"product_id\": \"test_source_2\",\n                \"quantity\": \"1\",\n                \"price\": 10000\n            }\n        ]\n    },\n    \"metadata\": {\n        \"category\": \"vip\",\n        \"shop\": \"s1\",\n        \"location\": \"l1\"\n    }\n}\n```\n<!--\nlineNumbers: true\n-->\n```json title=Example Response\n{\n    \"id\": \"r_se17sLon6YX5wMhYVzfQa2dc\",\n    \"object\": \"redemption\",\n    \"date\": \"2020-05-24T13:41:16Z\",\n    \"customer_id\": \"cust_lXisxEaEHYKTEVf1YnNS8AUh\",\n    \"amount\": 10,\n    \"order\": {\n        \"status\": \"PROCESSING\",\n        \"items\": [\n            {\n                \"object\": \"order_item\",\n                \"product_id\": \"test_source_1\",\n                \"quantity\": 1,\n                \"amount\": 15000,\n                \"price\": 15000\n            },\n            {\n                \"object\": \"order_item\",\n                \"product_id\": \"test_source_2\",\n                \"quantity\": 1,\n                \"amount\": 10000,\n                \"price\": 10000\n            }\n        ],\n        \"customer\": {\n            \"id\": \"cust_lXisxEaEHYKTEVf1YnNS8AUh\",\n            \"object\": \"customer\",\n            \"referrals\": {\n                \"campaigns\": [],\n                \"total\": 0\n            }\n        },\n        \"amount\": 25000,\n        \"object\": \"order\",\n        \"id\": \"ord_EfMmve84JzQIg2MCM3cAvLgF\",\n        \"created_at\": \"2020-05-24T13:41:16Z\",\n        \"discount_amount\": 25000\n    },\n    \"customer\": {\n        \"id\": \"cust_lXisxEaEHYKTEVf1YnNS8AUh\",\n        \"source_id\": \"tom+Loyalty@voucherify.io\",\n        \"name\": \"Tom Loyalty\",\n        \"email\": \"tom+Loyalty@voucherify.io\",\n        \"metadata\": {},\n        \"object\": \"customer\"\n    },\n    \"reward\": {\n        \"assignment_id\": \"rewa_g3QQwQfhJrjBYzEa1NJkub7N\",\n        \"loyalty_tier_id\": null,\n        \"id\": \"rew_noP2S5H8PEBFT97mennSA531\",\n        \"name\": \"1 point 25$\",\n        \"created_at\": \"2020-05-24T12:57:19Z\",\n        \"parameters\": {\n            \"automation_id\": null,\n            \"coin\": {\n                \"exchange_ratio\": 25.0\n            }\n        },\n        \"type\": \"COIN\",\n        \"object\": \"reward\"\n    },\n    \"metadata\": {\n        \"category\": \"vip\",\n        \"shop\": \"s1\",\n        \"location\": \"l1\"\n    },\n    \"result\": \"SUCCESS\",\n    \"tracking_id\": \"track_IWQYtuUE7phYpPzTHD5uwbyvlrO4nqyzipbQQtsHrRw=\",\n    \"voucher\": {\n        \"id\": \"v_wjgLC2lrQy1urPOdd35JX0RtkcOcQOmb\",\n        \"code\": \"Dm1x8MuX\",\n        \"campaign\": \"TestLoyalty-GivePoints\",\n        \"campaign_id\": \"camp_qVVaC4vpVlof03eBi8qb5gE7\",\n        \"category\": null,\n        \"type\": \"LOYALTY_CARD\",\n        \"discount\": null,\n        \"gift\": null,\n        \"loyalty_card\": {\n            \"points\": 439,\n            \"balance\": 223\n        },\n        \"start_date\": null,\n        \"expiration_date\": null,\n        \"validity_timeframe\": null,\n        \"validity_day_of_week\": null,\n        \"publish\": {\n            \"object\": \"list\",\n            \"count\": 1,\n            \"url\": \"/v1/vouchers/Dm1x8MuX/publications?page=1&limit=10\"\n        },\n        \"redemption\": {\n            \"object\": \"list\",\n            \"quantity\": null,\n            \"redeemed_quantity\": 7,\n            \"url\": \"/v1/vouchers/Dm1x8MuX/redemptions?page=1&limit=10\",\n            \"redeemed_points\": 216\n        },\n        \"active\": true,\n        \"additional_info\": null,\n        \"metadata\": {},\n        \"assets\": {\n            \"qr\": {\n                \"id\": \"U2FsdGVkX1+9Eo0bLWMZmYK6nQxl3AyR3nqkloGURcpRJcxL3hl5xXSGRYjYdySc9twLaKnYGVXbLtjCGW8FBotl1rTAxLJQm4okoJ385Gd6pc1ty6AnhaHHJjCeLoYYSQCG1EyP9PRxnTihjmsE9g==\",\n                \"url\": \"https://dev.dl.voucherify.io/api/v1/assets/qr/U2FsdGVkX1%2B9Eo0bLWMZmYK6nQxl3AyR3nqkloGURcpRJcxL3hl5xXSGRYjYdySc9twLaKnYGVXbLtjCGW8FBotl1rTAxLJQm4okoJ385Gd6pc1ty6AnhaHHJjCeLoYYSQCG1EyP9PRxnTihjmsE9g%3D%3D\"\n            },\n            \"barcode\": {\n                \"id\": \"U2FsdGVkX19NfR0ANlhLM7Df9Ec+xqTh6aTbHakk/Gzeh9zTiuj8KUBLswVXkz0gdLVnn1ZtzjCv7oF/BSQTyJx0YSK+HIUG9RGD+9rVhiC7+4WkSKrgAZ+NeqQBIqcespt8WWygXjfkvbyXBSF7Lg==\",\n                \"url\": \"https://dev.dl.voucherify.io/api/v1/assets/barcode/U2FsdGVkX19NfR0ANlhLM7Df9Ec%2BxqTh6aTbHakk%2FGzeh9zTiuj8KUBLswVXkz0gdLVnn1ZtzjCv7oF%2FBSQTyJx0YSK%2BHIUG9RGD%2B9rVhiC7%2B4WkSKrgAZ%2BNeqQBIqcespt8WWygXjfkvbyXBSF7Lg%3D%3D\"\n            }\n        },\n        \"is_referral_code\": false,\n        \"holder_id\": \"cust_lXisxEaEHYKTEVf1YnNS8AUh\",\n        \"updated_at\": \"2020-05-24T13:41:16Z\",\n        \"holder\": {\n            \"id\": \"cust_lXisxEaEHYKTEVf1YnNS8AUh\",\n            \"source_id\": \"tom+Loyalty@voucherify.io\",\n            \"name\": \"Tom Loyalty\",\n            \"email\": \"tom+Loyalty@voucherify.io\",\n            \"metadata\": {},\n            \"object\": \"customer\"\n        },\n        \"object\": \"voucher\",\n        \"validation_rules_assignments\": {\n            \"data\": [],\n            \"object\": \"list\",\n            \"total\": 0,\n            \"data_ref\": \"data\"\n        }\n    }\n}\n```",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "tracking_id",
            "description": "A tracking identifier of a user that redeemed a voucher. Identifier generated during voucher validation based on your internal id (e.g., email, database ID). If you also pass a customer ID, the tracking ID must be the ID of a source of the customer object. Otherwise, if you do not pass a customer ID, the tracking you provide must either be a token, like the ones returned by **Voucherify.js (voucher validation)**, or a string identifying customer, with the options described below. **Although not all information is required, the extra info helps prevent fraud.**"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        }
      }
    },
    "/redemptions": {
      "get": {
        "summary": "List Redemptions",
        "responses": {
          "200": {
            "description": "Returns a list of redemptions of all vouchers. The result can be narrowed according to specified (or default) filters, for example, you can sort redemptions by date:\n`https://api.voucherify.io/v1/redemptions?limit=3&[created_at][before]=2017-09-08T13:52:18.227Z`\n\nA dictionary with a `redemptions` property that contains an array of up to limit redemptions, starting after `created_at.after`. Each entry in the array is a separate redemption object. If no more redemptions are available, the resulting array will be empty. If you provide a non-existent customer ID, this call returns an empty object."
          }
        },
        "operationId": "get-redemptions",
        "description": "Returns a list of redemptions you’ve previously created. The redemptions are returned in sorted order, with the most recent redemptions appearing first.  \n\n#### Failed Redemptions\n\nA redemption may fail for various reasons. You can figure out an exact reason from `failure_code`:\n- `resource_not_found` - voucher with given code does not exist\n- `voucher_not_active` - voucher is not active yet (before start date)\n- `voucher_expired` - voucher has already expired (after expiration date)\n- `voucher_disabled` -  voucher has been disabled (`active: false`)\n- `quantity_exceeded` - voucher's redemptions limit has been exceeded\n- `gift_amount_exceeded` - gift amount has been exceeded\n- `customer_rules_violated` - customer did not match to the segment\n- `order_rules_violated` - order did not match validation rules\n- `invalid_order` - order was specified incorrectly\n- `invalid_amount` - order amount was specified incorrectly\n- `missing_amount` - order amount was not specified\n- `missing_order_items` - order items was not specified\n- `missing_customer` - customer was not specified",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "result",
            "description": "A filter on the list based on the redemption result. Available options are: `SUCCESS`, `FAILURE`. You can provide multiple values by repeating the param."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "campaign",
            "description": "A filter by the campaign redemptions originate from"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "customer",
            "description": "Return redemptions performed by the customer with given `id`."
          },
          {
            "schema": {
              "type": "string",
              "example": "2016-11-16T14:14:31Z or 2016-11-16"
            },
            "in": "query",
            "name": "[created_at]",
            "description": "A filter based on the object `created_at` field. Narrows down the results and lists redemptions done before or after a particular date time. You can use the following options: `[created_at][after]`, `[created_at][before]`. A date value must be presented in ISO 8601 format (`2016-11-16T14:14:31Z` or `2016-11-16`). An example: `[created_at][before]=2017-09-08T13:52:18.227Z`"
          }
        ],
        "tags": [
          "REDEMPTIONS API"
        ]
      },
      "post": {
        "summary": "Redeem Stackable Discounts (Beta)",
        "operationId": "post-redemptions",
        "responses": {
          "200": {
            "description": "All promo codes and tiers provided in redeemables are redeemed during the request and returned in the API response. As a result, there are child redemptions related to redemptions of each redeemable and parent_redemption that presents to the final effect of redeeming all redeemables and stores the list of child redemptions.  \n\n| Response | Description |\n|:---|:---|\n| redemptions `array of objects` | redemptions array lists all child redemptions that were executed during the request. Each child redemption returns Redemption object with detailed information on how each discount/code was applied to the order. |\n| parent_redemption `object` | parent_redemption represents the final effect of all child redemptions executed during the request. |\n| order `object` | The order object presents order details after all discounts are applied. You can read more about returned order properties in the table below. |",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/19_res_redemptions_POST"
                }
              }
            }
          }
        },
        "tags": [
          "STACKABLE DISCOUNTS API"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "description": "Use this method to redeem up to 5 redeemables in the single API request.\n\n#### How API returns calculated discounts and order amounts in the response\n\nIn the table below, you can see the logic the API follows to calculate discounts and amounts:\n\n| **Field** | **Calculation** | **Description** |\n|:---|:---|:---|\n| amount | N/A | This field shows order amount before applying any discount |\n| total_amount | total_amount = amount - total_discount_amount | This field shows order amount after applying all the discounts |\n| discount_amount | discount_amount = previous_discount_amonut + applied_discount_amount | This field sums up all order-level discounts applied to a particular order |\n| items_discount_amount | sum(items, i => i.discount_amount) | This field sums up all product-specific discounts applied to this order id |\n| total_discount_amount | total_discount_amount = discount_amount + items_discount_amount | This field sums up all order-level and all product-specific discounts applied to this order id |\n| applied_discount_amount | N/A | This field shows order-level discount applied in a particular request |\n| items_applied_discount_amount | sum(items, i => i.applied_discount_amount) | This field sums up all product-specific discounts applied in a particular request |\n| total_applied_discount_amount | total_applied_discount_amount = applied_discount_amount + items_applied_discount_amount | This field sums up all order-level and all product-specific discounts applied in a particular request |\n\n<!-- theme: info -->\n> #### Rollbacks\n>\n> You can't roll back a child redemption. When you call rollback on stacked redemption, all child redemptions will be rolled back. You need to refer to a `parent_redemption_id` in your [rollback request](OpenAPI.json/paths/~1redemptions~1{parent_redemption_id}~1rollbacks/post).",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          },
          "description": "#### Expanded Response\n\nResponses will vary depending on the strings passed in the options.expand string array.\n\n| **Expand Option** | **Response Body** |\n|:---|:---|\n| [\"order\"] | - Same response as fallback response (without an options object).<br>- Order data with calculated discounts are listed in each child redemption object.<br>- Metadata not included for each discount type. |\n| [\"order\", \"redemption\"] | - Returns redemption object `metadata`.<br>- Order data with calculated discounts are listed in each child redemption object. |\n| [\"redeemable\", \"redemption\"] | - Returns each discount type's `metadata` in each child redemption object.<br>- Returns redemption object `metadata`. |\n| [\"redemption\"] | - Returns redemption object `metadata`. |"
        }
      }
    },
    "/redemptions/{redemption_id}/rollback": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "redemption_id",
          "in": "path",
          "required": true,
          "description": "Identifier of original redemption which is supposed to be rolled back."
        }
      ],
      "post": {
        "summary": "Rollback Redemption",
        "operationId": "post-redemptions-redemption_id-rollback",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "REDEMPTIONS API"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "reason",
            "description": "Reason for the rollback."
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        },
        "description": "Your business logic may include a case when you need to undo a redemption. You can revert a redemption by calling this API endpoint. The operation creates a rollback entry in voucher's redemption history (`redemption.redemption_entries`) and gives 1 redemption back to the pool (decreases `redeemed_quantity` by 1). In case of gift vouchers, method returns funds back according to source redemption."
      }
    },
    "/redemptions/{redemption_id}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "redemption_id",
          "in": "path",
          "required": true,
          "description": "ID of previously created redemption."
        }
      ],
      "get": {
        "summary": "Get Redemption",
        "tags": [
          "REDEMPTIONS API"
        ],
        "responses": {
          "200": {
            "description": "It returns a redemption you’ve previously created."
          }
        },
        "operationId": "get-redemptions-redemption_id",
        "description": "Return a redemption you’ve previously created.",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ]
      }
    },
    "/promotions/tiers/{promotion_tier_id}/redemption": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "promotion_tier_id",
          "in": "path",
          "required": true,
          "description": "Id of the promotion to be redeemed."
        }
      ],
      "post": {
        "summary": "Redeem Promotion",
        "operationId": "post-promotions-tiers-promotion_tier_id-redemption",
        "responses": {
          "200": {
            "description": "Returns a redemption object if the redeem operation succeeded. Returns an error if something goes wrong."
          }
        },
        "tags": [
          "REDEMPTIONS API"
        ],
        "description": "To redeem a promotion, you create a redemption object passing a context. In the previous step, you should learn about active promotions through API method for validation. That validation method will return a list of active​ promotion tiers identified by ID.  \n> #### Redemption rollback\n>\n> Do you need to undo a redemption? You can do it with [redemption rollback](OpenAPI.json/paths/~1redemptions~1{redemption_id}~1rollback/post).",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        }
      }
    },
    "/validations": {
      "post": {
        "summary": "Validate Stackable Discounts (Beta)",
        "operationId": "post-validations",
        "responses": {
          "200": {
            "description": "All codes and tiers provided in redeemables are validated during the request and the result of their validation is returned in the API response. \n\n| **Response** | **Description** |\n|:---|:---|\n| valid `boolean` | If **all** redeemables can be applied in the given context, the API returns `true`. Otherwise, if at least one redeemable can't be applied, the API returns `false`. |\n| redeemables `array of objects` | The `redeemables` array lists the validation results of each redeemable. If a redeemable can be applied, the API returns `\"status\": \"APPLICABLE\"` |\n| order `object` | The `order` object presents details of the order provided in the request after all discounts are applied. [Read more](OpenAPI.json/paths/~1redemptions/post) about the returned order object. |\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/19_res_validations"
                }
              }
            }
          },
          "400": {
            "description": "Returns an error if the payload is missing an `\"object\"` or `\"id\"` property in the redeemables array, if you add more than one promotion stack or attempt to join stacks with vouchers/promotion tiers.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/e_400_invalid_payload"
                },
                "examples": {
                  "Invalid payload": {
                    "value": {
                      "code": 400,
                      "key": "invalid_payload",
                      "message": "Invalid payload",
                      "details": "Property .redeemables[1] should have required property 'id'",
                      "request_id": "v-0b4ff38ab8c8164573"
                    }
                  },
                  "Duplicated Redeemables": {
                    "value": {
                      "code": 400,
                      "key": "duplicated_redeemables",
                      "message": "Duplicated redeemables detected",
                      "details": "Duplicated redeemables detected in one redemption",
                      "request_id": "v-0b4ffecfb408165300"
                    }
                  },
                  "Invalid Redeemables": {
                    "value": {
                      "code": 400,
                      "key": "invalid_redeemables",
                      "message": "Invalid redeemables",
                      "details": "Promotion Stack cannot be use with other redeemables",
                      "request_id": "v-0b5007812f48165d6b"
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "tags": [
          "STACKABLE DISCOUNTS API"
        ],
        "description": "Verify redeemables provided in the request. This method is designed for server side integration which means that it is accessible only through private keys.  ",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/19_req_validations"
              }
            }
          },
          "description": "#### Expanded Response  \n\nResponses will vary depending on the strings passed in the `options.expand` string array. You can customize the response by using one of the following combinations of strings.\n  \n| **Expand Option** | **Response Body** |\n|:---|:---|\n| [\"order\"] | - Same response as fallback response (without an options object).<br>- Order data with calculated discounts are listed in each child redeemable object.<br>- Metadata not included for each discount type. |\n| [\"redeemable\"] | Expands redeemable objects by including `metadata` for each discount type. |\n| [\"order\", \"redeemable\"] | - Order data with calculated discounts are listed in each child redeemable object.<br>- Includes `metadata` for each discount type. |\n"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ]
      }
    },
    "/redemptions/{parentRedemptionId}/rollbacks": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "parentRedemptionId",
          "in": "path",
          "required": true,
          "description": "Unique identifier of a parent redemption, e.g. `r_JQfm73zWSJFQxs3bGxweYjgm`."
        }
      ],
      "post": {
        "summary": "Rollback Stackable Redemptions (Beta)",
        "operationId": "post-redemptions-parent_redemption_id-rollbacks",
        "responses": {
          "200": {
            "description": "Returns an array with the individual redemption rollback results along with the parent rollback result and related order.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/19_res_redemptions_parentRedemptionId_rollbacks"
                }
              }
            }
          },
          "400": {
            "description": "Returns an error indicating that the parent redemption ID is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/e_error_no_translation"
                },
                "examples": {
                  "Invalid Redemption Parent": {
                    "value": {
                      "code": 400,
                      "key": "invalid_redemption_parent",
                      "message": "Invalid redemption parent",
                      "details": "You can rollback only a redemption that does not have parent redemption.",
                      "request_id": "v-0b56a1cf1e4d69b375"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "STACKABLE DISCOUNTS API"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          },
          "description": ""
        },
        "description": "Rollback a stackable redemption. When you rollback a stacked redemption, all child redemptions will be rolled back. Provide the parent redemption ID as the path parameter."
      }
    },
    "/loyalties": {
      "get": {
        "summary": "List Loyalty Campaigns",
        "tags": [
          "LOYALTIES API"
        ],
        "responses": {
          "200": {
            "description": "`campaigns` which is an array of loyalty campaigns objects of the size of `limit`"
          }
        },
        "operationId": "get-loyalties",
        "description": "Returns a list of your loyalty campaigns. The campaigns are sorted by creation date, with the most recent campaigns appearing first.  ",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/page"
          }
        ]
      },
      "post": {
        "summary": "Create Loyalty Cards",
        "operationId": "post-loyalties",
        "responses": {
          "200": {
            "description": "Returns a campaign object with its settings but without the loyalty card codes."
          }
        },
        "tags": [
          "LOYALTIES API"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "description": "Creates a batch of loyalty cards vouchersref:the-voucher-object aggregated in a single loyalty campaign. It also allows to define a custom codes pattern.  \n\n<!-- theme: info -->\n\n> #### Global uniqueness\n>In the structure representing your data, you can define a category that the voucher belongs to. You can later use the category of a voucher to group and search by specific criteria.  \n\n<!-- theme: warning -->\n> #### Asyncronous action!\n>\n> This is an asynchronous action, you can't read or modify a newly created campaign until the code generation is completed. See `creation_status` field in the [campaign object](OpenAPI.json/components/schemas/2_obj_campaign_object) description.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        }
      }
    },
    "/loyalties/{campaign_id}": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "example": "camp_0dJG7cCAjquzcxWmZ634bA0C"
          },
          "name": "campaign_id",
          "in": "path",
          "required": true,
          "description": "The `campaign_id` or `name` of the loyalty campaign. You can either pass the `campaign_id`, which was assigned by Voucherify, or the `name` of the campaign as the path parameter value, e.g., `Loyalty%20Campaign`. "
        }
      ],
      "get": {
        "summary": "Get Loyalty Campaign",
        "tags": [
          "LOYALTIES API"
        ],
        "responses": {
          "200": {
            "description": "Returns a campaign object for a given campaign ID. When requesting the campaign that has been deleted, the resource will not be returned with 404 status code."
          }
        },
        "operationId": "get-loyalties-loyalty_campaign_id_or_name",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "description": "Get campaign by ID (e.g., camp_2boIBNQe7O9FzrwFJv0j4rUs)"
      },
      "post": {
        "summary": "Update Loyalty Campaign",
        "operationId": "post-loyalties-loyalty_campaign_id_or_name",
        "responses": {
          "200": {
            "description": "Returns the campaign object if the update succeeded. Returns an error if update parameters are invalid (e.g. specifying an invalid campaign type)."
          }
        },
        "tags": [
          "LOYALTIES API"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "description": "Updates a loyalty program for the following fields: `start_date`, `expiration_date`, `metadata`, `description`, `type`, `loyalty_card`. Other fields won't be modified (even if provided they are silently skipped). Any parameters not provided will be left unchanged. \n\nThis method will update the loyalty cards vouchersref:the-voucher-object which have not been published or redeemed yet.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Loyalty Campaign",
        "operationId": "delete-loyalties-loyalty_campaign_id_or_name",
        "responses": {
          "200": {
            "description": "Returns the id of the scheduled asynchronous action, informing you that your request has been accepted and the loyalty campaign will be deleted from the repository asynchronously. To check the deletion status and result, copy the `async_action_id` from the response and pass it using [Get Async Action](OpenAPI.json/paths/~1async-actions~1{async_action_id}/get) endpoint.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/a_res_async_actions"
                }
              }
            }
          },
          "404": {
            "description": "Returns an error indicating that the loyalty campaign with given ID was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/e_404_not_found"
                },
                "examples": {
                  "Loyalty Campaign Not Found": {
                    "value": {
                      "code": 404,
                      "key": "not_found",
                      "message": "Resource not found",
                      "details": "Cannot find campaign with id Summer Loyalty Perks",
                      "request_id": "v-0ae2b0092f50c130c7",
                      "resource_id": "Summer Loyalty Perks",
                      "resource_type": "campaign"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "LOYALTIES API"
        ],
        "description": "This method permanently deletes a loyalty campaign and all related loyalty cards. This action cannot be undone. Also, it immediately removes any redemptions on loyalty cards.",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "force",
            "description": "If this flag is set to `true`, the campaign and related vouchers will be removed permanently. Going forward, the user will be able to create the next campaign with the same name."
          }
        ]
      }
    },
    "/loyalties/{campaign_id}/rewards": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "campaign_id",
          "in": "path",
          "required": true,
          "description": "The `campaign_id` or `name` of the loyalty campaign. You can either pass the `campaign_id`, which was assigned by Voucherify, or the `name` of the campaign as the path parameter value, e.g., `Loyalty%20Campaign`. "
        }
      ],
      "get": {
        "summary": "List Reward Assignments",
        "tags": [
          "LOYALTIES API"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/8_res_loyalties_campaignId_rewards"
                }
              }
            }
          }
        },
        "operationId": "get-loyalties-campaign_id-rewards",
        "description": "Returns active [rewards](OpenAPI.json/components/schemas/4_obj_reward_object) from a given loyalty campaign.",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "schema": {
              "type": "string",
              "example": "rewa_m9hEAu10KsPcLhGXiHG85aY0"
            },
            "in": "query",
            "name": "assignment_id",
            "description": "A unique reward assignment ID."
          }
        ]
      },
      "post": {
        "summary": "Create Reward Assignment",
        "operationId": "post-loyalties-campaign_id-rewards",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "LOYALTIES API"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        },
        "description": "Add a [reward](OpenAPI.json/components/schemas/4_obj_reward_object) to a loyalty campaign."
      }
    },
    "/loyalties/{campaign_id}/reward-assignments": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "example": "camp_pqZjuhG6Mgtp4GD0zD7b8hA3"
          },
          "name": "campaign_id",
          "in": "path",
          "required": true,
          "description": "The `campaign_id` or `name` of the loyalty campaign. You can either pass the `campaign_id`, which was assigned by Voucherify, or the `name` of the campaign as the path parameter value, e.g., `Loyalty%20Campaign`. "
        }
      ],
      "get": {
        "summary": "List Reward Assignments",
        "tags": [
          "LOYALTIES API"
        ],
        "operationId": "get-loyalties-campaign_id-reward-assignments-assignment_id",
        "description": "Returns reward assignments from a given loyalty campaign.",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "schema": {
              "type": "string",
              "example": "rewa_m9hEAu10KsPcLhGXiHG85aY0"
            },
            "in": "query",
            "name": "assignment_id",
            "description": "A unique reward assignment ID."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/8_res_loyalties_campaignId_reward-assignments"
                }
              }
            }
          }
        }
      }
    },
    "/loyalties/{campaign_id}/reward-assignments/{assignment_id}": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "example": "camp_pqZjuhG6Mgtp4GD0zD7b8hA3"
          },
          "name": "campaign_id",
          "in": "path",
          "required": true,
          "description": "The `campaign_id` or `name` of the loyalty campaign. You can either pass the `campaign_id`, which was assigned by Voucherify, or the `name` of the campaign as the path parameter value, e.g., `Loyalty%20Campaign`. "
        },
        {
          "schema": {
            "type": "string",
            "example": "rewa_hzc19a5NLyIr2bVL3UB1w0B3"
          },
          "name": "assignment_id",
          "in": "path",
          "required": true,
          "description": "Unique reward assignment ID."
        }
      ],
      "get": {
        "summary": "Get Reward Assignment",
        "tags": [
          "LOYALTIES API"
        ],
        "responses": {
          "200": {
            "description": "Returns specific reward assignment.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/8_res_loyalties_campaign_id_reward-assignments_assignment_id"
                }
              }
            }
          }
        },
        "operationId": "get-loyalties-campaign_id-reward-assignments-assignment_id",
        "description": "Retrieve specific reward assignment.",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ]
      }
    },
    "/loyalties/{campaign_id}/reward-assignments/{assignment_id}/reward": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "example": "camp_pqZjuhG6Mgtp4GD0zD7b8hA3"
          },
          "name": "campaign_id",
          "in": "path",
          "required": true,
          "description": "The `campaign_id` or `name` of the loyalty campaign. You can either pass the `campaign_id`, which was assigned by Voucherify, or the `name` of the campaign as the path parameter value, e.g., `Loyalty%20Campaign`. "
        },
        {
          "schema": {
            "type": "string",
            "example": "rewa_hzc19a5NLyIr2bVL3UB1w0B3"
          },
          "name": "assignment_id",
          "in": "path",
          "required": true,
          "description": "Unique reward assignment ID."
        }
      ],
      "get": {
        "summary": "Get Reward Details",
        "tags": [
          "LOYALTIES API"
        ],
        "responses": {
          "200": {
            "description": "Returns reward details in the context of a loyalty *campaign* and reward assignment ID.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/8_res_loyalties_campaign_id_reward-assignments_assignment_id_reward"
                }
              }
            }
          }
        },
        "operationId": "get-loyalties-campaign_id-reward-assignments-assignment_id",
        "description": "Get reward details in the context of a loyalty campaign and reward assignment ID.",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ]
      }
    },
    "/loyalties/{campaign_id}/rewards/{assignment_id}": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "example": "camp_0dJG7cCAjquzcxWmZ634bA0C"
          },
          "name": "campaign_id",
          "in": "path",
          "required": true,
          "description": "The `campaign_id` or `name` of the loyalty campaign. You can either pass the `campaign_id`, which was assigned by Voucherify, or the `name` of the campaign as the path parameter value, e.g., `Loyalty%20Campaign`. "
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "assignment_id",
          "in": "path",
          "required": true,
          "description": "A unique reward assignment ID."
        }
      ],
      "put": {
        "summary": "Update Reward Assignment",
        "operationId": "put-loyalties-campaign_id-rewards-assignment_id",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "LOYALTIES API"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "description": "Updates rewards parameters e.g., point cost.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Reward Assignment",
        "operationId": "delete-loyalties-campaign_id-rewards-assignment_id",
        "responses": {
          "204": {
            "description": "Returns no content if deletion is successful."
          },
          "404": {
            "description": "Returns an error indicating that the loyalty campaign or reward assignment with given ID was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/e_404_not_found"
                },
                "examples": {
                  "Reward Assignment Not Found": {
                    "value": {
                      "code": 404,
                      "key": "not_found",
                      "message": "Resource not found",
                      "details": "Cannot find reward_assignment with id rewa_0b4hqJpVFssxXXrq56Ddtyo",
                      "request_id": "v-0ae2b69e0cd0c1364f",
                      "resource_id": "rewa_0b4hqJpVFssxXXrq56Ddtyo",
                      "resource_type": "reward_assignment"
                    }
                  },
                  "Loyalty Campaign Not Found": {
                    "value": {
                      "code": 404,
                      "key": "not_found",
                      "message": "Resource not found",
                      "details": "Cannot find campaign with id Loyalty Summer Campaign",
                      "request_id": "v-0ae2b71e57d027e263",
                      "resource_id": "Loyalty Summer Campaign",
                      "resource_type": "campaign"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "LOYALTIES API"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "description": "This method deletes a reward assignment for a particular loyalty campaign."
      },
      "get": {
        "summary": "Get Reward Assignment",
        "operationId": "get-loyalties-campaign_id-rewards-assignment_id",
        "responses": {
          "200": {
            "description": "Returns specific reward assignment.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/8_res_loyalties_campaignId_rewards_assignmentId"
                }
              }
            }
          }
        },
        "tags": [
          "LOYALTIES API"
        ],
        "description": "Retrieve specific reward assignment.",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ]
      }
    },
    "/loyalties/{campaign_id}/earning-rules/{earning_rule_id}": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "example": "camp_0dJG7cCAjquzcxWmZ634bA0C"
          },
          "name": "campaign_id",
          "in": "path",
          "required": true,
          "description": "The `campaign_id` or `name` of the loyalty campaign. You can either pass the `campaign_id`, which was assigned by Voucherify, or the `name` of the campaign as the path parameter value, e.g., `Loyalty%20Campaign`. "
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "earning_rule_id",
          "in": "path",
          "required": true,
          "description": "A unique earning rule ID."
        }
      ],
      "get": {
        "summary": "Get Earning Rule",
        "tags": [
          "LOYALTIES API"
        ],
        "responses": {
          "200": {
            "description": "Returns an earning rule object with the earning rule details."
          }
        },
        "operationId": "get-loyalties-campaign_id-earning-rules-earning_rule_id",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "description": "Retrieves an earning rule assigned to a campaign"
      },
      "put": {
        "summary": "Update Earning Rule",
        "operationId": "put-loyalties-campaign_id-earning-rules-earning_rule_id",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "LOYALTIES API"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Earning Rule",
        "operationId": "delete-loyalties-campaign_id-earning-rules-earning_rule_id",
        "responses": {
          "204": {
            "description": "Returns no content if deletion is successful."
          },
          "404": {
            "description": "Returns an error indicating that the loyalty campaign or earning rule with given ID was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/e_404_not_found"
                },
                "examples": {
                  "Earning Rule Not Found": {
                    "value": {
                      "code": 404,
                      "key": "not_found",
                      "message": "Resource not found",
                      "details": "Cannot find earning_rule with id ern_10S9ijStRZsf65xd12aydn4f",
                      "request_id": "v-0ae2bdc5f11027e81a",
                      "resource_id": "ern_10S9ijStRZsf65xd12aydn4f",
                      "resource_type": "earning_rule"
                    }
                  },
                  "Loyalty Campaign Not Found": {
                    "value": {
                      "code": 404,
                      "key": "not_found",
                      "message": "Resource not found",
                      "details": "Cannot find campaign with id Summer Loyalty Campaign",
                      "request_id": "v-0ae2be04d146b71e50",
                      "resource_id": "Summer Loyalty Campaign",
                      "resource_type": "campaign"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "LOYALTIES API"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "description": "This method deletes an earning rule for a specific loyalty campaign."
      }
    },
    "/loyalties/{campaignId}/earning-rules": {
      "parameters": [
        {
          "$ref": "#/components/parameters/campaignId"
        }
      ],
      "post": {
        "summary": "Create Earning Rules",
        "tags": [
          "LOYALTIES API"
        ],
        "operationId": "post-loyalties-campaignId-earning-rules",
        "description": "Create earning rules for a loyalty campaign.",
        "responses": {
          "200": {
            "description": "Returns an array of earning rule objects.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/8_obj_earning_rule_object"
                },
                "examples": {
                  "example-1": {
                    "value": [
                      {
                        "id": "ern_IXHyK6CDgfrG1Fr79Bh7PFKd",
                        "created_at": "2022-02-07T12:05:40.149Z",
                        "updated_at": null,
                        "loyalty": {
                          "points": 1000,
                          "type": "FIXED"
                        },
                        "event": "order.paid",
                        "source": {
                          "banner": "Order paid 1000 points",
                          "object_id": "camp_Pfja7X91b1GoyH5wnpzCwlP3",
                          "object_type": "campaign"
                        },
                        "active": true,
                        "start_date": "2022-02-02T13:00:00.000Z",
                        "expiration_date": "2022-03-03T14:30:00.000Z",
                        "validity_timeframe": {
                          "duration": "PT1H",
                          "interval": "P1D"
                        },
                        "validity_day_of_week": [
                          4
                        ],
                        "object": "earning_rule",
                        "automation_id": "auto_axpvVsodCE2Yi0RZIeH2KsJA"
                      },
                      {
                        "id": "ern_hSlULe1KZhqn7v4bBhOMLAaD",
                        "created_at": "2022-02-07T12:05:40.149Z",
                        "updated_at": null,
                        "loyalty": {
                          "type": "PROPORTIONAL",
                          "order": {
                            "amount": {
                              "every": 1,
                              "points": 1
                            }
                          }
                        },
                        "event": "order.paid",
                        "source": {
                          "banner": "Order paid 1 point for 1 dollar.",
                          "object_id": "camp_Pfja7X91b1GoyH5wnpzCwlP3",
                          "object_type": "campaign"
                        },
                        "active": true,
                        "start_date": "2022-02-02T13:00:00.000Z",
                        "expiration_date": "2022-03-03T14:30:00.000Z",
                        "validity_timeframe": {
                          "duration": "PT1H",
                          "interval": "P1D"
                        },
                        "validity_day_of_week": [
                          1,
                          2,
                          3,
                          4,
                          5
                        ],
                        "object": "earning_rule",
                        "automation_id": "auto_91DDzufPFsvAz5wUeHlMjgBe"
                      },
                      {
                        "id": "ern_G1k25SkjhVh7KawNHFbweGEw",
                        "created_at": "2022-02-07T12:05:40.149Z",
                        "updated_at": null,
                        "loyalty": {
                          "points": 1000,
                          "type": "FIXED"
                        },
                        "segment": {
                          "id": "seg_WJv55MbzQwnr56ttJ2xUrSgt"
                        },
                        "event": "customer.segment.entered",
                        "source": {
                          "banner": "Entered segment 100 points.",
                          "object_id": "camp_Pfja7X91b1GoyH5wnpzCwlP3",
                          "object_type": "campaign"
                        },
                        "active": true,
                        "start_date": "2022-02-02T13:00:00.000Z",
                        "expiration_date": "2022-03-03T14:30:00.000Z",
                        "validity_timeframe": {
                          "duration": "PT1H",
                          "interval": "P1D"
                        },
                        "validity_day_of_week": [
                          1,
                          2,
                          3,
                          4,
                          5
                        ],
                        "object": "earning_rule",
                        "automation_id": "auto_y2WLEn0AsjvVN8ZoNk2Jq2Cj"
                      },
                      {
                        "id": "ern_vMtOopc25BJruc0oP90A5NEC",
                        "created_at": "2022-02-07T12:05:40.149Z",
                        "updated_at": null,
                        "loyalty": {
                          "points": 1000,
                          "type": "FIXED"
                        },
                        "custom_event": {
                          "schema_id": "ms_fi47Dcu5T0m3v3nT5ch3ma"
                        },
                        "event": "payment_placed",
                        "source": {
                          "banner": "Entered segment 100 points.",
                          "object_id": "camp_Pfja7X91b1GoyH5wnpzCwlP3",
                          "object_type": "campaign"
                        },
                        "active": true,
                        "start_date": "2022-02-02T13:00:00.000Z",
                        "expiration_date": "2022-03-03T14:30:00.000Z",
                        "validity_timeframe": {
                          "duration": "PT1H",
                          "interval": "P1D"
                        },
                        "validity_day_of_week": [
                          1,
                          2,
                          3,
                          4,
                          5
                        ],
                        "object": "earning_rule",
                        "automation_id": "auto_lRiGaYlBwsH9o1PczVHIRDoO"
                      },
                      {
                        "id": "ern_0NZaprRK1xeaxVB76CeCEuik",
                        "created_at": "2022-02-07T12:05:40.149Z",
                        "updated_at": null,
                        "loyalty": {
                          "points": 1000,
                          "type": "FIXED"
                        },
                        "custom_event": {
                          "schema_id": "ms_fi47Dcu5T0m3v3nT5ch3ma"
                        },
                        "event": "payment_placed",
                        "source": {
                          "banner": "Entered segment 100 points.",
                          "object_id": "camp_Pfja7X91b1GoyH5wnpzCwlP3",
                          "object_type": "campaign"
                        },
                        "active": true,
                        "validity_day_of_week": [
                          1,
                          2,
                          3,
                          4,
                          5
                        ],
                        "object": "earning_rule",
                        "automation_id": "auto_Y6ivqDUl7dmYPjW9eWGHcCGI"
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "default",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/e_400_missing_param"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/8_req_loyalties_campaignId_earning-rules"
              },
              "examples": {
                "example-1": {
                  "value": [
                    {
                      "event": "order.paid",
                      "validation_rule_id": "val_248vs7tUjlIE",
                      "loyalty": {
                        "points": 1000,
                        "type": "FIXED"
                      },
                      "source": {
                        "banner": "Order Paid - You will get 100 points"
                      },
                      "active": true,
                      "start_date": "2022-02-02T13:00:00.000Z",
                      "expiration_date": "2022-03-03T14:30:00.000Z",
                      "validity_timeframe": {
                        "duration": "PT1H",
                        "interval": "P2D"
                      },
                      "validity_day_of_week": [
                        "[ 1, 2 ]"
                      ],
                      "custom_event": null,
                      "segment": null
                    }
                  ]
                },
                "example-2": {
                  "value": [
                    {
                      "event": "order.paid",
                      "validation_rule_id": null,
                      "loyalty": {
                        "points": 1000,
                        "type": "FIXED"
                      },
                      "source": {
                        "banner": "Order paid 1000 points"
                      },
                      "active": true,
                      "start_date": "2022-02-02T13:00:00.000Z",
                      "expiration_date": "2022-03-03T14:30:00.000Z",
                      "validity_timeframe": {
                        "duration": "PT1H",
                        "interval": "P1D"
                      },
                      "validity_day_of_week": [
                        4
                      ],
                      "segment": null,
                      "custom_event": null
                    },
                    {
                      "event": "order.paid",
                      "validation_rule_id": null,
                      "loyalty": {
                        "type": "PROPORTIONAL",
                        "order": {
                          "amount": {
                            "every": 1,
                            "points": 1
                          }
                        }
                      },
                      "source": {
                        "banner": "Order paid 1 point for 1 dollar."
                      },
                      "active": true,
                      "start_date": "2022-02-02T13:00:00.000Z",
                      "expiration_date": "2022-03-03T14:30:00.000Z",
                      "validity_timeframe": {
                        "duration": "PT1H",
                        "interval": "P1D"
                      },
                      "validity_day_of_week": [
                        1,
                        2,
                        3,
                        4,
                        5
                      ],
                      "custom_event": null
                    },
                    {
                      "event": "customer.segment.entered",
                      "validation_rule_id": null,
                      "loyalty": {
                        "points": 1000,
                        "type": "FIXED"
                      },
                      "source": {
                        "banner": "Entered segment 100 points."
                      },
                      "active": true,
                      "start_date": "2022-02-02T13:00:00.000Z",
                      "expiration_date": "2022-03-03T14:30:00.000Z",
                      "validity_timeframe": {
                        "duration": "PT1H",
                        "interval": "P1D"
                      },
                      "validity_day_of_week": [
                        1,
                        2,
                        3,
                        4,
                        5
                      ],
                      "segment": {
                        "id": "seg_WJv55MbzQwnr56ttJ2xUrSgt"
                      },
                      "custom_event": null
                    },
                    {
                      "event": "payment_placed",
                      "validation_rule_id": null,
                      "loyalty": {
                        "points": 1000,
                        "type": "FIXED"
                      },
                      "source": {
                        "banner": "Entered segment 100 points."
                      },
                      "active": true,
                      "start_date": "2022-02-02T13:00:00.000Z",
                      "expiration_date": "2022-03-03T14:30:00.000Z",
                      "validity_timeframe": {
                        "duration": "PT1H",
                        "interval": "P1D"
                      },
                      "validity_day_of_week": [
                        1,
                        2,
                        3,
                        4,
                        5
                      ],
                      "custom_event": {
                        "schema_id": "ms_fi47Dcu5T0m3v3nT5ch3ma"
                      }
                    },
                    {
                      "event": "payment_placed",
                      "validation_rule_id": null,
                      "loyalty": {
                        "points": 1000,
                        "type": "FIXED"
                      },
                      "source": {
                        "banner": "Entered segment 100 points."
                      },
                      "active": true,
                      "start_date": null,
                      "expiration_date": null,
                      "validity_day_of_week": [
                        1,
                        2,
                        3,
                        4,
                        5
                      ],
                      "custom_event": {
                        "schema_id": "ms_fi47Dcu5T0m3v3nT5ch3ma"
                      }
                    }
                  ]
                }
              }
            }
          },
          "description": "Customize the request body based on the type of earning rules you would like to create. The request body is an array of objects. The required minimum properties to include in the payload for each object are `event` and `loyalty`. Additionally, if you choose to add a `validity_timeframe`, you must include a `start_date`. Furthermore, an earning rule `event` type:  \n\n- `customer.segment.entered` requires a `segment` object\n- a custom event requires a `custom_event` object"
        }
      }
    },
    "/loyalties/{campaign_id}/earning-rules": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "campaign_id",
          "in": "path",
          "required": true,
          "description": "A unique campaign identifier"
        }
      ],
      "get": {
        "summary": "List Earning Rules",
        "tags": [
          "LOYALTIES API"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "operationId": "get-loyalties-campaign_id-earning-rules",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/page"
          }
        ],
        "description": ""
      },
      "post": {
        "summary": "Create Earning Rule",
        "operationId": "post-loyalties-campaign_id-earning-rules",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "LOYALTIES API"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        }
      }
    },
    "/loyalties/{campaign_id}/earning-rules/{earning_rule_id}/enable": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "campaign_id",
          "in": "path",
          "required": true,
          "description": "A unique campaign identifier"
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "earning_rule_id",
          "in": "path",
          "required": true,
          "description": "A unique earning rule identifier"
        }
      ],
      "post": {
        "summary": "Enable Earning Rule",
        "operationId": "post-loyalties-campaign_id-earning-rules-earning_rule_id-enable",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "LOYALTIES API"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "description": ""
      }
    },
    "/loyalties/{campaign_id}/earning-rules/{earning_rule_id}/disable": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "campaign_id",
          "in": "path",
          "required": true,
          "description": "A unique campaign identifier"
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "earning_rule_id",
          "in": "path",
          "required": true,
          "description": "A unique earning rule identifier"
        }
      ],
      "post": {
        "summary": "Disable Earning Rule",
        "operationId": "post-loyalties-campaign_id-earning-rules-earning_rule_id-enable",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "LOYALTIES API"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "description": ""
      }
    },
    "/loyalties/{campaign_id}/members": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "campaign_id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "List Members",
        "tags": [
          "LOYALTIES API"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "operationId": "get-loyalties-campaign_id-members",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/created_at"
          },
          {
            "$ref": "#/components/parameters/updated_at"
          }
        ],
        "description": "Returns a list of your loyalty cards holders. The vouchers are sorted by creation date, with the most recent vouchers appearing first."
      },
      "post": {
        "summary": "Add Member",
        "operationId": "post-loyalties-campaign_id-members",
        "responses": {
          "200": {
            "description": "Returns a publication object if a valid identifier was provided. The object will contain a single published voucher object."
          }
        },
        "tags": [
          "LOYALTIES API"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          },
          "description": ""
        },
        "description": "This method assigns a loyalty card to a customer. It selects a [loyalty card](OpenAPI.json/components/schemas/1_obj_voucher_object) suitable for publication, adds a publish entry, and returns the published voucher.  \n\nA voucher is suitable for publication when it's active and hasn't been published yet.  \n\n<!-- theme: info -->\n\n> #### Auto-update campaign\n>\n> In case you want to ensure the number of publishable codes increases automatically with the number of customers, you should use **auto-update** campaign.\n\n"
      }
    },
    "/loyalties/{campaign_id}/members/{member_id}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "campaign_id",
          "in": "path",
          "required": true,
          "description": "A unique campaign identifier"
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "member_id",
          "in": "path",
          "required": true,
          "description": "A code that identifies the loyalty card."
        }
      ],
      "get": {
        "summary": "Get Member",
        "tags": [
          "LOYALTIES API"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "operationId": "get-loyalties-campaign_id-members-member_id",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "description": "Retrieves the voucher with the given `member_id`."
      }
    },
    "/loyalties/members/{member_id}": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "example": "MmFAzfDe"
          },
          "name": "member_id",
          "in": "path",
          "required": true,
          "description": "Unique loyalty card assigned to a particular customer."
        }
      ],
      "get": {
        "summary": "Get Member",
        "operationId": "get-loyalties-campaign_id-members-member_id-activities",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/8_res_loyalties_members_memberId"
                }
              }
            }
          },
          "": {
            "description": "Returns a data array containing the member's tier."
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "description": "Retrieve loyalty card with the given `member_id`.",
        "tags": [
          "LOYALTIES API"
        ]
      }
    },
    "/loyalties/{campaign_id}/members/{member_id}/balance": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "campaign_id",
          "in": "path",
          "required": true,
          "description": "A unique campaign identifier."
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "member_id",
          "in": "path",
          "required": true,
          "description": "A code that identifies the loyalty card."
        }
      ],
      "post": {
        "summary": "Add/Remove Loyalty Card Balance",
        "operationId": "post-loyalties-campaign_id-members-member_id-balance",
        "responses": {
          "200": {
            "description": "Returns a balance object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/8_res_loyalties_campaign_id_members_member_id_balance"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/8_req_loyalties_campaign_id_members_member_id_balance"
              }
            }
          },
          "description": ""
        },
        "description": "This method gives adds or removes balance to an existing loyalty card.",
        "tags": [
          "LOYALTIES API"
        ]
      }
    },
    "/loyalties/members/{member_id}/balance": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "example": "MmFAzfDe"
          },
          "name": "member_id",
          "in": "path",
          "required": true,
          "description": "Unique loyalty card assigned to a particular customer."
        }
      ],
      "post": {
        "summary": "Add or Remove Loyalty Card Balance",
        "operationId": "post-loyalties-members-member_id-balance",
        "responses": {
          "200": {
            "description": "Returns a balance object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/8_res_loyalties_members_memberId_balance"
                }
              }
            }
          }
        },
        "tags": [
          "LOYALTIES API"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "description": "This method gives adds or removes balance to an existing loyalty card.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          },
          "description": ""
        }
      }
    },
    "/loyalties/{campaign_id}/members/{member_id}/transfers": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "campaign_id",
          "in": "path",
          "required": true,
          "description": "A unique identifier of the loyalty campaign containing the voucher to which the loyalty points will be sent."
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "member_id",
          "in": "path",
          "required": true,
          "description": "A unique code identifying the loyalty card to which the user wants to transfer loyalty points."
        }
      ],
      "post": {
        "summary": "Transfer Loyalty Points",
        "operationId": "post-loyalties-campaign_id-members-member_id-transfers",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "description": "This HTTP POST request method gives a possibility to transfer points between different loyalty cards. In the request, you need to provide the campaign ID and the loyalty card ID you want the points to be transferred to in the URL. In the request body, you have to provide the loyalty cards you want the points to be transferred from and the number of points to transfer from each card.",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        },
        "tags": [
          "LOYALTIES API"
        ]
      }
    },
    "/loyalties/{campaign_id}/members/{member_id}/redemption": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "campaign_id",
          "in": "path",
          "required": true,
          "description": "A unique campaign identifier"
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "member_id",
          "in": "path",
          "required": true,
          "description": "A code that identifies the voucher (e.g., Testing7fjWdr)."
        }
      ],
      "post": {
        "summary": "Redeem Reward",
        "operationId": "post-loyalties-campaign_id-members-member_id-transfers",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "description": "Through this method, an integration tries to exchange points from a loyalty card for a specified reward. This API method returns an assigned award in response. It means that if a requesting customer gets a coupon code with a discount for the next order, that discount code will be visible in response as part of the reward object definition.",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        },
        "tags": [
          "LOYALTIES API"
        ]
      }
    },
    "/loyalties/members/{member_id}/redemption": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "example": "MmFAzfDe"
          },
          "name": "member_id",
          "in": "path",
          "required": true,
          "description": "Unique loyalty card assigned to a particular customer."
        }
      ],
      "post": {
        "summary": "Redeem Reward",
        "operationId": "post-loyalties-members-member_id-redemption",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/8_res_loyalties_members_memberId_redemption"
                }
              }
            }
          },
          "400": {
            "description": "Returns an error indicating that a reward is missing.",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/e_400_missing_reward"
                    },
                    {
                      "$ref": "#/components/schemas/e_400_missing_order"
                    },
                    {
                      "$ref": "#/components/schemas/e_400_loyalty_card_points_exceeded"
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "LOYALTIES API"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        }
      }
    },
    "/loyalties/{campaign_id}/members/{member_id}/activities": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "campaign_id",
          "in": "path",
          "required": true,
          "description": "A unique campaign identifier"
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "member_id",
          "in": "path",
          "required": true,
          "description": "A code that identifies the voucher (e.g., Testing7fjWdr)."
        }
      ],
      "get": {
        "summary": "Get Member Activities",
        "operationId": "get-loyalties-campaign_id-members-member_id-activities",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "description": "Retrieves the list of activities for the given `member_id` related to voucher and customer who is a holder of the voucher.",
        "tags": [
          "LOYALTIES API"
        ]
      }
    },
    "/loyalties/members/{member_id}/activities": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "example": "MmFAzfDe"
          },
          "name": "member_id",
          "in": "path",
          "required": true,
          "description": "Unique loyalty card assigned to a particular customer."
        }
      ],
      "get": {
        "summary": "Get Member Activities",
        "operationId": "get-loyalties-campaign_id-members-member_id-activities",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/8_res_loyalties_members_memberId_activities"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "description": "",
        "tags": [
          "LOYALTIES API"
        ]
      }
    },
    "/loyalties/members/{member_id}/rewards": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "example": "MmFAzfDe"
          },
          "name": "member_id",
          "in": "path",
          "required": true,
          "description": "Unique loyalty card assigned to a particular customer."
        }
      ],
      "get": {
        "summary": "List Member Rewards",
        "operationId": "get-loyalties-campaign_id-members-member_id-activities",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/8_res_loyalties_members_memberId_rewards"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          },
          {
            "in": "query",
            "name": "affordable_only",
            "description": "Limit the results to rewards that the customer can actually afford (only rewards whose price in points is not higher than the loyalty points balance on a loyalty card). Set this flag to `true` to return rewards which the customer can actually afford.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "description": "Retrieves the list of rewards that the given customer (identified by `member_id`, which is a loyalty card assigned to a particular customer) **can get in exchange for loyalty points**.  \n\nYou can use the `affordable_only` parameter to limit the results to rewards that the customer can actually afford (only rewards whose price in points is not higher than the loyalty points balance on a loyalty card).  \n\nPlease note that rewards that are disabled (i.e. set to `Not Available` in the Dashboard) for a given loyalty tier reward mapping will not be returned in this endpoint.",
        "tags": [
          "LOYALTIES API"
        ]
      }
    },
    "/loyalties/members/{member_id}/tiers": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "example": "MmFAzfDe"
          },
          "name": "member_id",
          "in": "path",
          "required": true,
          "description": "Unique loyalty card assigned to a particular customer."
        }
      ],
      "get": {
        "summary": "Get Member's Loyalty Tier",
        "operationId": "get-loyalties-campaign_id-members-member_id-activities",
        "responses": {
          "200": {
            "description": "OK"
          },
          "": {
            "description": "Returns a data array containing the member's tier."
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "description": "Retrieve member tier using the loyalty card ID.",
        "tags": [
          "LOYALTIES API"
        ]
      }
    },
    "/loyalties/{campaign_id}/tiers/{tier_id}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "campaign_id",
          "in": "path",
          "required": true,
          "description": "a unique loyalty campaign identifier."
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "tier_id",
          "in": "path",
          "required": true,
          "description": "a unique loyalty tier identifier."
        }
      ],
      "get": {
        "summary": "Get Loyalty Tier",
        "tags": [
          "LOYALTIES API"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "operationId": "get-loyalties-campaign_id-tiers-tier_id",
        "description": "This HTTP GET request method gives a possibility to get a loyalty tier by ID which belongs to the loyalty program.",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ]
      }
    },
    "/loyalties/{campaign_id}/tiers": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "campaign_id",
          "in": "path",
          "required": true,
          "description": "a unique loyalty campaign identifier."
        }
      ],
      "get": {
        "summary": "List Loyalty Tiers",
        "tags": [
          "LOYALTIES API"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "operationId": "get-loyalties-campaign_id-tiers-tier_id",
        "description": "This HTTP GET request method gives a possibility to get a list of loyalty tiers which were added to the loyalty program.",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ]
      }
    },
    "/loyalties/{campaign_id}/tiers/{tier_id}/earning-rules": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "example": "camp_pqZjuhG6Mgtp4GD0zD7b8hA3"
          },
          "name": "campaign_id",
          "in": "path",
          "required": true,
          "description": "Unique campaign ID or name."
        },
        {
          "schema": {
            "type": "string",
            "example": "ltr_mtWowJBBhVYnY8oXaLJ2tUnk"
          },
          "name": "tier_id",
          "in": "path",
          "required": true,
          "description": "Unique tier ID."
        }
      ],
      "get": {
        "summary": "List Loyalty Tier Earning Rules",
        "tags": [
          "LOYALTIES API"
        ],
        "responses": {
          "200": {
            "description": "Returns a list of earning rules for a given tier. The object for each earning rule also contains information about how the points are calculated; this includes mapping. If a specific multiplier was used to calculate points for a given tier, then the `loyalty.points` parameter will account for this calculation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/8_res_loyalties_campaignId_tiers_tierId_earning-rules"
                }
              }
            }
          }
        },
        "operationId": "get-loyalties-campaign_id-tiers-tier_id",
        "description": "Retrieve available earning rules for a given tier and the calculation method for earning points.",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ]
      }
    },
    "/loyalties/{campaign_id}/tiers/{tier_id}/rewards": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "example": "camp_pqZjuhG6Mgtp4GD0zD7b8hA3"
          },
          "name": "campaign_id",
          "in": "path",
          "required": true,
          "description": "Unique campaign ID or name."
        },
        {
          "schema": {
            "type": "string",
            "example": "ltr_mtWowJBBhVYnY8oXaLJ2tUnk"
          },
          "name": "tier_id",
          "in": "path",
          "required": true,
          "description": "Unique tier ID."
        }
      ],
      "get": {
        "summary": "List Loyalty Tier Rewards",
        "tags": [
          "LOYALTIES API"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/8_res_loyalties_campaignId_tiers_tierId_rewards"
                }
              }
            }
          }
        },
        "operationId": "get-loyalties-campaign_id-tiers-tier_id",
        "description": "Get available rewards for a given tier.",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ]
      }
    },
    "/loyalties/{campaignId}/members/{memberId}/points-expiration": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "campaignId",
          "in": "path",
          "required": true,
          "description": "Campaign identifier."
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "memberId",
          "in": "path",
          "required": true,
          "description": "Loyalty card code."
        }
      ],
      "get": {
        "summary": "Get Points Expiration",
        "tags": [
          "LOYALTIES API"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "operationId": "get-loyalties-campaignId-members-memberId-points-expiration",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "description": ""
      }
    },
    "/loyalties/{campaignId}/points-expiration/export": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "campaignId",
          "in": "path",
          "required": true,
          "description": "Unique campaign ID."
        }
      ],
      "post": {
        "summary": "Create Points Expiration Export",
        "operationId": "post-loyalties-campaignId-points-expiration-export",
        "responses": {
          "200": {
            "description": "Returns an object with the export ID of the scheduled generation of CSV file with exported points expirations. You can use either the [Get Export](OpenAPI.json/paths/~1exports~1{export_id}/get) endpoint to view the status and obtain the URL of the CSV file or [Download Export](OpenAPI.json/paths/~1exports~1{exportId}/get) endpoint to download the CSV file.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/8_obj_export_object_points_expiration"
                }
              }
            }
          }
        },
        "tags": [
          "LOYALTIES API"
        ],
        "description": "Schedule the generation of a points expiration CSV file for a particular campaign.",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ]
      }
    },
    "/customers": {
      "get": {
        "summary": "List Customers",
        "tags": [
          "CUSTOMERS API"
        ],
        "responses": {
          "200": {
            "description": "Returns a dictionary with customer objects. The customers are returned sorted by creation date, with the most recent customers appearing first.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/9_res_list_customers"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "object": "list",
                      "data_ref": "customers",
                      "customers": [
                        {
                          "id": "cust_CSnYd37MXmrbS19XCrghjBsv",
                          "source_id": "source_123",
                          "name": "Bob Smith",
                          "description": "A frequent customer",
                          "email": "bob.smith@email.com",
                          "phone": "+1 933 222 3333",
                          "birthdate": "2022-01-01",
                          "address": {
                            "city": "New York",
                            "state": "NY",
                            "line_1": "123 Main St.",
                            "line_2": "APT 3 BLG 5",
                            "country": "United States",
                            "postal_code": "10001"
                          },
                          "summary": {
                            "redemptions": {
                              "total_redeemed": 1,
                              "total_failed": 0,
                              "total_succeeded": 1,
                              "total_rolled_back": 0,
                              "total_rollback_failed": 0,
                              "total_rollback_succeeded": 0,
                              "gift": {
                                "redeemed_amount": 0,
                                "amount_to_go": 0
                              },
                              "loyalty_card": {
                                "redeemed_points": 0,
                                "points_to_go": 4200
                              }
                            },
                            "orders": {
                              "total_amount": 1600,
                              "total_count": 1,
                              "average_amount": 1600,
                              "last_order_amount": 1600,
                              "last_order_date": "2022-08-30T10:17:39.220Z"
                            }
                          },
                          "loyalty": {
                            "points": 2200,
                            "referred_customers": 0,
                            "campaigns": {
                              "Christmas Campaign": {
                                "points": 1000,
                                "referred_customers": 0
                              },
                              "Fall Campaign": {
                                "points": 75,
                                "referred_customers": 0
                              },
                              "Winter Campaign": {
                                "points": 75,
                                "referred_customers": 0
                              },
                              "Summer Campaign": {
                                "points": 50,
                                "referred_customers": 0
                              },
                              "Spring Campaign": {
                                "points": 1000,
                                "referred_customers": 0
                              }
                            }
                          },
                          "referrals": {
                            "total": 1,
                            "campaigns": [
                              {
                                "campaign_id": "camp_rRsfatlwN7unSeUIJDCYedal",
                                "referrer_id": "cust_sehkNIi8Uq2qQuRqSr7xn4Zi",
                                "related_object_id": "r_0b9d4c5121d64dd01d",
                                "related_object_type": "redemption",
                                "date": "2022-08-30T10:17:41.089Z"
                              }
                            ]
                          },
                          "metadata": {
                            "lang": "en",
                            "test": true
                          },
                          "system_metadata": {},
                          "created_at": "2022-08-30T06:32:07.380Z",
                          "updated_at": "2022-08-30T10:17:58.049Z",
                          "object": "customer"
                        },
                        {
                          "id": "cust_X0hU04x7FeisPnD5lctZcQkI",
                          "source_id": "jane.smith@email.com",
                          "name": "Jane Smith",
                          "description": "A nice customer",
                          "email": "jane.smith@email.com",
                          "phone": "+1 933 222 3333",
                          "birthdate": "2022-01-02",
                          "address": {
                            "city": "New Yorke",
                            "state": "NY",
                            "line_1": "123 Main Ste.",
                            "line_2": "APT 3 BLG 4e",
                            "country": "United Statese",
                            "postal_code": "10001e"
                          },
                          "summary": {
                            "redemptions": {
                              "total_redeemed": 4,
                              "total_failed": 0,
                              "total_succeeded": 4,
                              "total_rolled_back": 1,
                              "total_rollback_failed": 0,
                              "total_rollback_succeeded": 1,
                              "gift": {
                                "redeemed_amount": 0,
                                "amount_to_go": 0
                              },
                              "loyalty_card": {
                                "redeemed_points": 0,
                                "points_to_go": 15549
                              }
                            },
                            "orders": {
                              "total_amount": 210000,
                              "total_count": 3,
                              "average_amount": 70000,
                              "last_order_amount": 70000,
                              "last_order_date": "2022-08-30T11:51:08.029Z"
                            }
                          },
                          "loyalty": {
                            "points": 15399,
                            "referred_customers": 0,
                            "campaigns": {
                              "Christmas Campaign": {
                                "points": 7000,
                                "referred_customers": 0
                              },
                              "Fall Campaign": {
                                "points": 2299,
                                "referred_customers": 0
                              },
                              "Winter Campaign": {
                                "points": 25,
                                "referred_customers": 0
                              },
                              "Summer Campaign": {
                                "points": 75,
                                "referred_customers": 0
                              },
                              "Spring Campaign": {
                                "points": 6000,
                                "referred_customers": 0
                              }
                            }
                          },
                          "referrals": {
                            "total": 2,
                            "campaigns": [
                              {
                                "campaign_id": "camp_rRsfatlwN7unSeUIJDCYedal",
                                "referrer_id": "cust_sehkNIi8Uq2qQuRqSr7xn4Zi",
                                "related_object_id": "r_0b9d4cc4aa164dd073",
                                "related_object_type": "redemption",
                                "date": "2022-08-30T10:19:39.196Z"
                              },
                              {
                                "campaign_id": "camp_YDsFdX8TgFtT0RUuKEFyhqs3",
                                "referrer_id": "cust_Vzck5i8U3OhcEUFY6MKhN9Rv",
                                "related_object_id": "r_0b9d61b6484ead0324",
                                "related_object_type": "redemption",
                                "date": "2022-08-30T11:51:10.445Z"
                              }
                            ]
                          },
                          "metadata": {
                            "lang": "en",
                            "test": false
                          },
                          "system_metadata": {},
                          "created_at": "2022-08-09T09:50:53.620Z",
                          "updated_at": "2022-08-30T11:51:24.327Z",
                          "object": "customer"
                        }
                      ],
                      "total": 2
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-customers",
        "description": "Returns a list of customers.",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "email",
            "description": "Limit the customers to the ones that have this specific email address."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "description": "Limit the customers to the ones that are located in the specified city.",
            "name": "city"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "description": "Filter customers by the name property.",
            "name": "name"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "created_at",
                "-created_at",
                "updated_at",
                "-updated_at",
                "source_id",
                "-source_id"
              ]
            },
            "in": "query",
            "name": "order",
            "description": "This is a property that controls the sorting direction of the results. Sort the results using one of the filtering options, where the dash `-` preceding a sorting option means sorting in a descending order."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "starting_after",
            "description": "A cursor for use in pagination. This is a date-time value that defines your place in the list based on `created_at` property from the customer object. For instance, if you make a list request and receive 100 objects, ending with an object created at `2020-05-24T13:43:09.024Z`, your subsequent call can include `starting_after=2020-05-24T13:43:09.024Z` in order to fetch the next page of the list. \n<!-- title: Options -->\n| **Option** | **Format** | **Sorting** |\n|:---|:---|:---|\n| Return customers **before** a specific creation date  | - set `starting_after` parameter to the breakpoint date | Sorting order is **descending**; the most recent dates first and least recent dates last. |\n| Return customers **after** a specific create or update date | - include the `order` parameter set to `created_at` or `updated_at`<br>- set `starting_after` to the breakpoint date | Sorting order is **ascending**; the least recent dates first and the most recent dates last. |\n"
          }
        ]
      },
      "post": {
        "summary": "Create Customer",
        "operationId": "post-customers",
        "responses": {
          "200": {
            "description": "Returns a customer object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/9_obj_customer_object"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "id": "cust_CSnYd37MXmrbS19XCrghjBsv",
                      "source_id": "source_123",
                      "name": "Bob Smith",
                      "description": "A frequent customer",
                      "email": "bob.smith@email.com",
                      "phone": "+1 933 222 3333",
                      "birthdate": "2022-01-01",
                      "address": {
                        "city": "New York",
                        "state": "NY",
                        "line_1": "123 Main St.",
                        "line_2": "APT 3 BLG 4",
                        "country": "United States",
                        "postal_code": "10001"
                      },
                      "summary": {
                        "redemptions": {
                          "total_redeemed": 0,
                          "total_failed": 0,
                          "total_succeeded": 0,
                          "total_rolled_back": 0,
                          "total_rollback_failed": 0,
                          "total_rollback_succeeded": 0,
                          "gift": {
                            "redeemed_amount": 0,
                            "amount_to_go": 0
                          },
                          "loyalty_card": {
                            "redeemed_points": 0,
                            "points_to_go": 0
                          }
                        },
                        "orders": {
                          "total_amount": 0,
                          "total_count": 0,
                          "average_amount": 0,
                          "last_order_amount": 0
                        }
                      },
                      "loyalty": {
                        "points": 0,
                        "referred_customers": 0,
                        "campaigns": {}
                      },
                      "referrals": {
                        "total": 0,
                        "campaigns": []
                      },
                      "metadata": {
                        "lang": "en",
                        "test": true
                      },
                      "system_metadata": {},
                      "created_at": "2022-08-30T06:32:07.380Z",
                      "object": "customer"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "CUSTOMERS API"
        ],
        "description": "Creates a customer object.\n\n<!-- theme: info -->\n\n> #### Upsert Mode\n>\n> If you pass a `source_id` that already exists in the customer database, Voucherify will return a related customer object with updated fields.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/9_req_create_customer"
              },
              "examples": {
                "Example": {
                  "value": {
                    "source_id": "source_123",
                    "name": "Bob Smith",
                    "description": "A frequent customer",
                    "email": "bob.smith@email.com",
                    "phone": "+1 933 222 3333",
                    "address": {
                      "city": "New York",
                      "country": "United States",
                      "line_1": "123 Main St.",
                      "line_2": "APT 3 BLG 4",
                      "postal_code": "10001",
                      "state": "NY"
                    },
                    "metadata": {
                      "lang": "en",
                      "test": true
                    },
                    "birthdate": "2022-01-01"
                  }
                }
              }
            }
          },
          "description": "Create a customer with specified parameters."
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ]
      }
    },
    "/customers/{customerId}": {
      "get": {
        "summary": "Get Customer",
        "tags": [
          "CUSTOMERS API"
        ],
        "responses": {
          "200": {
            "description": "Returns a customer object if a valid identifier was provided.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/9_obj_customer_object"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "id": "cust_T849EgzNVVmn5icJ2FAkT2rO",
                      "source_id": "alice.morgan@email.com",
                      "name": "Alice Morgan",
                      "email": "alice.morgan@email.com",
                      "address": null,
                      "summary": {
                        "redemptions": {
                          "total_redeemed": 2,
                          "total_failed": 0,
                          "total_succeeded": 2,
                          "total_rolled_back": 0,
                          "total_rollback_failed": 0,
                          "total_rollback_succeeded": 0,
                          "gift": {
                            "redeemed_amount": 0,
                            "amount_to_go": 0
                          },
                          "loyalty_card": {
                            "redeemed_points": 0,
                            "points_to_go": 3303
                          }
                        },
                        "orders": {
                          "total_amount": 203900,
                          "total_count": 2,
                          "average_amount": 101950,
                          "last_order_amount": 3900,
                          "last_order_date": "2022-07-26T14:59:52.814Z"
                        }
                      },
                      "loyalty": {
                        "points": 3303,
                        "referred_customers": 0,
                        "campaigns": {
                          "Summer Campaign": {
                            "points": 3303,
                            "referred_customers": 0
                          }
                        }
                      },
                      "referrals": {
                        "total": 0,
                        "campaigns": []
                      },
                      "system_metadata": {},
                      "created_at": "2022-02-07T08:28:23.644Z",
                      "updated_at": "2022-07-26T14:59:59.806Z",
                      "assets": {
                        "cockpit_url": "https://www.url.com"
                      },
                      "object": "customer"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found. When requesting the ID of a customer that has been deleted or does not exist in the system, the resource will not be returned.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/e_404_not_found"
                },
                "examples": {
                  "Not found": {
                    "value": {
                      "code": 404,
                      "key": "not_found",
                      "message": "Resource not found",
                      "details": "Cannot find customer with id cust_sehkNIi8Uq2qQuRqSr7xn4Z",
                      "request_id": "v-0b4c590350857970df",
                      "resource_id": "cust_sehkNIi8Uq2qQuRqSr7xn4Z",
                      "resource_type": "customer"
                    }
                  }
                }
              }
            }
          },
          "": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/9_obj_customer_object"
                }
              }
            },
            "description": ""
          }
        },
        "operationId": "get-customers",
        "description": "Retrieve customer details.",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ]
      },
      "parameters": [
        {
          "schema": {
            "type": "string",
            "example": "cust_J1CDUdbqn5Exva8ASWk1Fq0j"
          },
          "name": "customerId",
          "in": "path",
          "required": true,
          "description": "A Voucherify customer ID or source ID."
        }
      ],
      "delete": {
        "summary": "Delete Customer",
        "operationId": "delete-customers-customer_id",
        "responses": {
          "204": {
            "description": "Returns no content if deletion is successful."
          },
          "404": {
            "description": "Returns an error indicating that the customer with given ID was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/e_404_not_found"
                },
                "examples": {
                  "Customer Not Found": {
                    "value": {
                      "code": 404,
                      "key": "not_found",
                      "message": "Resource not found",
                      "details": "Cannot find customer with id cust_7pm0hh0yemiydeFsdYXZlr1",
                      "request_id": "v-0ae398fd9ac683dc84",
                      "resource_id": "cust_7pm0hh0yemiydeFsdYXZlr1",
                      "resource_type": "customer"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "CUSTOMERS API"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "description": "This method deletes a customer."
      },
      "put": {
        "summary": "Update Customer",
        "operationId": "put-customers-customer_id",
        "responses": {
          "200": {
            "description": "Returns a customer object if updates were successful.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/9_obj_customer_object"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "id": "cust_T849EgzNVVmn5icJ2FAkT2rO",
                      "source_id": "alice@morgan.com",
                      "name": "Alice McDonald",
                      "description": "Updating customer data",
                      "email": "alice.mdconald@email.com",
                      "phone": "+1 (132) 222-2222",
                      "birthday": "2022-01-02",
                      "birthdate": "2022-01-01",
                      "address": {
                        "city": "New York",
                        "state": "NY",
                        "line_1": "123 Main St.",
                        "line_2": "APT 3 BLG 4",
                        "country": "United States",
                        "postal_code": "10001"
                      },
                      "summary": {
                        "redemptions": {
                          "total_redeemed": 2,
                          "total_failed": 0,
                          "total_succeeded": 2,
                          "total_rolled_back": 0,
                          "total_rollback_failed": 0,
                          "total_rollback_succeeded": 0,
                          "gift": {
                            "redeemed_amount": 0,
                            "amount_to_go": 0
                          },
                          "loyalty_card": {
                            "redeemed_points": 0,
                            "points_to_go": 4428
                          }
                        },
                        "orders": {
                          "total_amount": 203900,
                          "total_count": 2,
                          "average_amount": 101950,
                          "last_order_amount": 3900,
                          "last_order_date": "2022-07-26T14:59:52.814Z"
                        }
                      },
                      "loyalty": {
                        "points": 3403,
                        "referred_customers": 0,
                        "campaigns": {
                          "Summer Campaign": {
                            "points": 0,
                            "referred_customers": 0
                          },
                          "Spring Campaign": {
                            "points": 50,
                            "referred_customers": 0
                          },
                          "Fall Campaign": {
                            "points": 50,
                            "referred_customers": 0
                          },
                          "Winter Campaign": {
                            "points": 3303,
                            "referred_customers": 0
                          }
                        }
                      },
                      "referrals": {
                        "total": 0,
                        "campaigns": []
                      },
                      "metadata": {
                        "lang": "en",
                        "test": true
                      },
                      "system_metadata": {},
                      "created_at": "2022-02-07T08:28:23.644Z",
                      "updated_at": "2022-08-31T09:58:30.475Z",
                      "object": "customer"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Returns an error indicating that a customer with given ID was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/e_404_not_found"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "code": 404,
                      "key": "not_found",
                      "message": "Resource not found",
                      "details": "Cannot find customer with id alice2@morgan.com",
                      "request_id": "v-0b9e924dd243bf26e2",
                      "resource_id": "alice2@morgan.com",
                      "resource_type": "customer"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "CUSTOMERS API"
        ],
        "description": "Updates the specified customer by setting the values of the parameters passed in the request body. Any parameters not provided in the payload will be left unchanged.",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/9_req_update_customer"
              },
              "examples": {
                "Example": {
                  "value": {
                    "name": "Alice McDonald",
                    "email": "alice.mdconald@email.com",
                    "description": "Updating customer data",
                    "phone": "+1 (132) 222-2222",
                    "address": {
                      "city": "New York",
                      "country": "United States",
                      "line_1": "123 Main St.",
                      "line_2": "APT 3 BLG 4",
                      "postal_code": "10001",
                      "state": "NY"
                    },
                    "metadata": {
                      "lang": "en",
                      "test": true
                    },
                    "birthdate": "2022-01-01",
                    "birthday": "2022-01-02"
                  }
                }
              }
            }
          },
          "description": "Specify the parameters to be updated."
        }
      }
    },
    "/customers/importCSV": {
      "post": {
        "summary": "Import and Update Customers using CSV",
        "operationId": "post-customers",
        "responses": {
          "202": {
            "description": "Returns ID of the scheduled async action. The response informs you that your request has been accepted and customers will be added to the repository asynchronously. To check the import status and result, copy the `async_action_id` from the response and pass it using the [Get Async Action](OpenAPI.json/paths/~1async-actions~1{async_action_id}/get) endpoint.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/a_res_async_actions"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "async_action_id": "aa_0a875d56c805df6601"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "CUSTOMERS API"
        ],
        "description": "This API method lets you import or update customer data. To get a proper and valid response, please send a CSV file with data separated by commas.  \n\n## Request Example\n<!--\ntitle: \"Example Request\"\nlineNumbers: true\n-->\n```cURL\ncurl -X POST \\\n  https://api.voucherify.io/v1/customers/importCSV \\\n  -F file=@/path/to/customers.csv \\\n  -H \"X-App-Id: c70a6f00-cf91-4756-9df5-47628850002b\" \\\n  -H \"X-App-Token: 3266b9f8-e246-4f79-bdf0-833929b1380c\"\n```\n## CSV File Format\n\nThe CSV file has to include headers in the first line. All properties which cannot be mapped to standard customer fields will be added to the metadata object.\n\n<!-- theme: info -->\n> ### Standard customer fields mapping\n>\n> **No spaces allowed in field names**  \n> Name, Email, Phone, Birthdate, Source_id, Address_line_1, Address_line_2, Address_Postal_Code, Address_City, Address_State, Address_Country, Description, Metadata_name_1, Metadata_name_2\n\n## Update Customers using CSV\n\nIf you would like to update customer's data, you can do it using the CSV file with new data. However, remember to include a `source_id` in your CSV file to manage the update successfully.",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/a_req_importCSV"
              },
              "examples": {}
            }
          },
          "description": "The file path is stored in the form `file` header."
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ]
      },
      "parameters": []
    },
    "/customers/{customerId}/permanent-deletion": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "customerId",
          "in": "path",
          "required": true,
          "description": "A Voucherify customer identifier or source_id."
        }
      ],
      "post": {
        "summary": "Delete Customer Permanently",
        "operationId": "post-customers-customer_id-permanent-deletion",
        "responses": {
          "200": {
            "description": "Returns a permanent deletion object and status of the deletion.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/9_res_customers_customerId_permanent-deletion"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "id": "del_7k3buMvBsJuXiLRmdh1WZvZs",
                      "created_at": "2022-09-02T17:50:29.302Z",
                      "related_object_id": "cust_XI8sPLvznzVpNI1BMIWGcUJa",
                      "related_object": "customer",
                      "status": "DONE",
                      "data_json": {
                        "events": 16,
                        "customer_events": 28,
                        "daily_events": 0,
                        "segments": 0,
                        "orders": 9,
                        "order_events": 5,
                        "customer": 1
                      },
                      "object": "pernament_deletion"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Returns an error indicating that a customer with given ID was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/e_404_not_found"
                },
                "examples": {
                  "Not Found": {
                    "value": {
                      "code": 404,
                      "key": "not_found",
                      "message": "Resource not found",
                      "details": "Cannot find customer with id cust_W8n9I8pJDXlM69j49iKJeYp",
                      "request_id": "v-0b4c62635a154e96f1",
                      "resource_id": "cust_W8n9I8pJDXlM69j49iKJeYp",
                      "resource_type": "customer"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "CUSTOMERS API"
        ],
        "description": "The organization user can remove consumer data permanently from the Voucherify system by using this API method. It d​eletes all customer data and connected resources. It makes the customer profile forgotten by Voucherify.",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ]
      }
    },
    "/customers/metadata/async": {
      "post": {
        "summary": "Update Customers Metadata in bulk",
        "operationId": "post-customers-metadata-async",
        "responses": {
          "202": {
            "description": "Returns ID of the scheduled async action. The response informs you that your request has been accepted and customers will be updated in the repository asynchronously. To check the update status and result, copy the `async_action_id` from the response and pass it using the [Get Async Action](OpenAPI.json/paths/~1async-actions~1{async_action_id}/get) endpoint.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/a_res_async_actions"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "async_action_id": "aa_0a875d56c805df6601"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "An error will be returned when submitting a request with no source IDs or missing metadata.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/e_error_no_translation"
                },
                "examples": {
                  "Not enough source IDs": {
                    "value": {
                      "code": 400,
                      "key": "not_enough_source_ids",
                      "message": "Not enough source_ids",
                      "details": "Specify at least 1 source_id",
                      "request_id": "v-0ba50abf2843bf6585"
                    }
                  },
                  "Invalid Payload": {
                    "value": {
                      "code": 400,
                      "key": "invalid_payload",
                      "message": "Invalid payload",
                      "details": "Payload should have required property 'metadata'",
                      "request_id": "v-0ba50c720789984b5c"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "CUSTOMERS API"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "description": "Update several customers metadata properties in one asynchronous operation. \n\nIn one request, it is possible to update a maximum of **100** records. In the response body, you get a unique async action identifier.  \n\nIf a requested customer object is not found, then an **upsert** occurs. This is reflected in the [Get Async Action](OpenAPI.json/paths/~1async-actions~1{async_action_id}/get) endpoint as follows:  \n\n<!--\ntitle: \"Response\"\nlineNumbers: true\n-->\n```json\n{\n    \"found\": false,\n    \"updated\": true\n}\n```",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/9_req_customers_metadata_async"
              },
              "examples": {
                "Example": {
                  "value": {
                    "source_ids": [
                      "source_123",
                      "source_456"
                    ],
                    "metadata": {
                      "lang": "en",
                      "test": false
                    }
                  }
                }
              }
            }
          },
          "description": "List the `source_ids` of the customer's you would like to update along with the metadata key value pairs. "
        }
      }
    },
    "/customers/bulk/async": {
      "post": {
        "summary": "Update Customers in bulk",
        "operationId": "post-customers-bulk-async",
        "responses": {
          "202": {
            "description": "Returns ID of the scheduled async action. The response informs you that your request has been accepted and customers will be updated in the repository asynchronously. To check the update status and result, copy the `async_action_id` from the response and pass it using the [Get Async Action](OpenAPI.json/paths/~1async-actions~1{async_action_id}/get) endpoint.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/a_res_async_actions"
                }
              }
            }
          },
          "400": {
            "description": "Returns an error if metadata fields are incorrect data type or a customer's source ID is missing in the request body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/e_error_no_translation"
                },
                "examples": {
                  "Metadata validation failed": {
                    "value": {
                      "code": 400,
                      "key": "metadata_validation_failed",
                      "message": "Metadata validation failed",
                      "details": "acquisition_channel: must be a string, property is required, must be equal to one of Facebook,Twitter,Website (actual value is 'true')",
                      "request_id": "v-0afb29d91094432cea"
                    }
                  },
                  "Invalid payload": {
                    "value": {
                      "code": 400,
                      "key": "invalid_payload",
                      "message": "Invalid payload",
                      "details": "Payload should have required property 'source_id'",
                      "request_id": "v-0ba51a2f5ec3bf76de"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "default": 429
                    },
                    "message": {
                      "type": "string",
                      "default": "Too many requests hit the API too quickly."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "CUSTOMERS API"
        ],
        "description": "Update several customers in one asynchronous operation. \n\nIn one request, it is possible to update a maximum of **100** records. In the response body, you get a unique async action identifier.  \n\nIf a requested customer object is not found, then an **upsert** occurs. This is reflected in the [Get Async Action](OpenAPI.json/paths/~1async-actions~1{async_action_id}/get) endpoint as follows:  \n\n<!--\ntitle: \"Response\"\nlineNumbers: true\n-->\n```json\n{\n    \"found\": false,\n    \"updated\": true\n}\n```",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/9_req_update_customers_bulk"
              },
              "examples": {
                "Example": {
                  "value": [
                    {
                      "source_id": "John.Smith@email.com",
                      "name": "John Smith",
                      "email": "john.smith@email.com",
                      "description": "Updating customer data",
                      "phone": "+1 (132) 222-2222",
                      "address": {
                        "city": "New York",
                        "country": "United States",
                        "line_1": "123 Main St.",
                        "line_2": "APT 3 BLG 4",
                        "postal_code": "10001",
                        "state": "NY"
                      },
                      "metadata": {
                        "lang": "en",
                        "test": true
                      },
                      "birthday": "2022-04-04"
                    },
                    {
                      "source_id": "Jane.Smith@email.com",
                      "name": "Jane Smith",
                      "email": "Jane.Smith@email.com",
                      "description": "Updating customer data",
                      "phone": "+1 (132) 222-2222",
                      "address": {
                        "city": "New York",
                        "country": "United States",
                        "line_1": "123 Main St.",
                        "line_2": "APT 3 BLG 4",
                        "postal_code": "10001",
                        "state": "NY"
                      },
                      "metadata": {
                        "lang": "en",
                        "test": true
                      },
                      "birthday": "2022-03-03"
                    },
                    {
                      "source_id": "Sally.Smith@email.com",
                      "name": "Sally Smith",
                      "email": "Sally.Smith@email.com",
                      "description": "Updating customer data",
                      "phone": "+1 (132) 222-2222",
                      "address": {
                        "city": "New York",
                        "country": "United States",
                        "line_1": "123 Main St.",
                        "line_2": "APT 3 BLG 4",
                        "postal_code": "10001",
                        "state": "NY"
                      },
                      "metadata": {
                        "lang": "en",
                        "test": true
                      },
                      "birthdate": "2022-02-02"
                    }
                  ]
                }
              }
            }
          },
          "description": "Specify the customer fields that you would like to update in each customer object."
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ]
      }
    },
    "/customers/{customerId}/consents": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "customerId",
          "in": "path",
          "required": true,
          "description": "A Voucherify unique customer identifier or source ID."
        }
      ],
      "put": {
        "summary": "Update Customer's consents",
        "operationId": "put-customers-customer_id-consents",
        "responses": {
          "204": {
            "description": "Returns no content if the consents were updated successfully."
          },
          "400": {
            "description": "Returns an error if the payload is empty.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/e_error_no_translation"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "code": 400,
                      "key": "invalid_payload",
                      "message": "Invalid payload",
                      "details": "The payload cannot be empty",
                      "request_id": "v-0ba675252cc3bf6b03"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "CUSTOMERS API"
        ],
        "description": "Update marketing permissions for the specified customer.",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/9_req_update_customers_consents"
              },
              "examples": {
                "Example": {
                  "value": {
                    "cnst_6jQ5XcUOLnj5L7ImQAdBsJ1I": true,
                    "cnst_VCmucIvAsmDYw2PPAok6bcYy": false
                  }
                },
                "Opt-out of all": {
                  "value": {
                    "unsubscribed": true
                  }
                }
              }
            }
          },
          "description": "Key-value pairs where the key is the consent identifier and value is a boolean that identifies if a customer has given the consent or not. To deny all consents use \"unsubscribed\" as a consent identifier and \"true\" as its value.  \n\n#### Examples\n\n<!--\ntitle: \"Request Body\"\nlineNumbers: true\n-->\n```json\n{\n    \"cnst_aIdUulAh0SCsOCaS3005y7yS\": true,\n    \"cnst_aIdUulAhwewqaS31213fdsfds\": false\n}\n```\n\nOpt-out from all communication:\n\n<!--\ntitle: \"Request Body\"\nlineNumbers: true\n-->\n```json\n{\n    \"unsubscribed\": true\n}\n```"
        }
      }
    },
    "/customers/{customer_id}/consents#": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "customer_id",
          "in": "path",
          "required": true,
          "description": "A Voucherify customer identifier or source_id"
        }
      ],
      "put": {
        "summary": "Update Customer's consents (client-side)",
        "operationId": "put-customers-customer_id-consents",
        "responses": {
          "204": {
            "description": "Returns no content if the consents were updated successfully."
          },
          "400": {
            "description": "Returns an error if the payload is empty.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/e_error_no_translation"
                },
                "examples": {
                  "Example": {
                    "value": {}
                  }
                }
              }
            }
          }
        },
        "tags": [
          "CUSTOMERS API"
        ],
        "description": "Update marketing permissions for the specified customer.",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-Client-Application-Id"
          },
          {
            "$ref": "#/components/parameters/X-Client-Token"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/9_req_update_customers_consents"
              },
              "examples": {
                "Example": {
                  "value": {
                    "cnst_6jQ5XcUOLnj5L7ImQAdBsJ1I": true,
                    "cnst_VCmucIvAsmDYw2PPAok6bcYy": false
                  }
                },
                "Opt-out of all": {
                  "value": {
                    "unsubscribed": true
                  }
                }
              }
            }
          },
          "description": "Key-value pairs where the key is the consent identifier and value is a boolean that identifies if a customer has given the consent or not. To deny all consents use \"unsubscribed\" as a consent identifier and \"true\" as its value.  \n\n#### Examples\n\n<!--\ntitle: \"Request Body\"\nlineNumbers: true\n-->\n```json\n{\n    \"cnst_aIdUulAh0SCsOCaS3005y7yS\": true,\n    \"cnst_aIdUulAhwewqaS31213fdsfds\": false\n}\n```\n\nOpt-out from all communication:\n\n<!--\ntitle: \"Request Body\"\nlineNumbers: true\n-->\n```json\n{\n    \"unsubscribed\": true\n}\n```"
        }
      }
    },
    "/customers/{customer_id}/activities": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "customer_id",
          "in": "path",
          "required": true,
          "description": "A Voucherify customer ID or source ID of the customer who performed the activities."
        }
      ],
      "get": {
        "summary": "List Customer Activities",
        "tags": [
          "CUSTOMERS API"
        ],
        "responses": {
          "200": {
            "description": "Returns a dictionary with customer activities.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/9_res_list_customer_activities"
                }
              }
            }
          }
        },
        "operationId": "get-customers-customer_id-activities",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "starting_after",
            "description": "A cursor for use in pagination. `starting_after` is a date-time value that defines your place in the list based on `created_at` property from the activity object. For instance, if you make a list request and receive 100 objects, ending with an object created at 2020-05-24T13:43:09.024Z, your subsequent call can include starting_after=2020-05-24T13:43:09.024Z in order to fetch the next page of the list."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "starting_after_id",
            "description": "By applying this filter value, you will get events starting after an event with the given ID."
          },
          {
            "schema": {
              "enum": [
                "DISCOUNT_COUPONS",
                "REFERRAL_PROGRAM",
                "GIFT_VOUCHERS",
                "PROMOTION",
                "LOYALTY_PROGRAM"
              ],
              "type": "string"
            },
            "in": "query",
            "name": "campaign_type",
            "description": "Through this parameter you can control a type of campaign by which Voucherify will filter related customer's activity. API will return only records related to that given type. Allowed values: DISCOUNT_COUPONS, REFERRAL_PROGRAM, GIFT_VOUCHERS, PROMOTION, LOYALTY_PROGRAM"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "campaign_id",
            "description": "By applying this parameter you request only events related to specific campaign identified by its ID."
          }
        ],
        "description": "Retrieve customer activities."
      }
    },
    "/orders": {
      "get": {
        "summary": "List Orders",
        "tags": [
          "ORDERS API"
        ],
        "responses": {
          "200": {
            "description": "Returns a dictionary with order objects. The orders are returned sorted by creation date, with the most recent orders appearing first.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/10_res_list_orders"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "object": "list",
                      "data_ref": "orders",
                      "orders": [
                        {
                          "id": "ord_v5vupdacgud1CwUSyKqSlHuk",
                          "source_id": null,
                          "created_at": "2022-09-09T07:44:41.594Z",
                          "updated_at": "2022-09-09T07:44:42.331Z",
                          "status": "PAID",
                          "amount": 2700,
                          "discount_amount": 1243,
                          "items_discount_amount": 270,
                          "total_discount_amount": 1513,
                          "total_amount": 1187,
                          "items": [
                            {
                              "object": "order_item",
                              "source_id": "prod_5h1pp1ng",
                              "related_object": "product",
                              "quantity": 1,
                              "amount": 700,
                              "discount_amount": 70,
                              "price": 700,
                              "subtotal_amount": 630,
                              "product": {
                                "name": "Shipping"
                              }
                            },
                            {
                              "object": "order_item",
                              "source_id": "roses_1",
                              "related_object": "product",
                              "quantity": 1,
                              "amount": 500,
                              "discount_amount": 50,
                              "price": 500,
                              "subtotal_amount": 450,
                              "product": {
                                "name": "Bouquet - Romantic Roses",
                                "price": 500
                              }
                            },
                            {
                              "object": "order_item",
                              "source_id": "vase_1",
                              "related_object": "product",
                              "quantity": 1,
                              "amount": 1500,
                              "discount_amount": 150,
                              "price": 1500,
                              "subtotal_amount": 1350,
                              "product": {
                                "name": "Vase - Boho Vintage",
                                "price": 1500
                              }
                            }
                          ],
                          "metadata": {},
                          "customer": {
                            "id": "cust_tAED42tFhLM9v7GmZUaklJFd",
                            "object": "customer"
                          },
                          "customer_id": "cust_tAED42tFhLM9v7GmZUaklJFd",
                          "referrer_id": null,
                          "object": "order",
                          "redemptions": {
                            "r_0baa093537528ef645": {
                              "date": "2022-09-09T07:44:41.695Z",
                              "related_object_type": "redemption",
                              "related_object_id": "r_0baa093537528ef645",
                              "stacked": [
                                "r_0baa093537528ef646",
                                "r_0baa093537528ef647",
                                "r_0baa093537528ef648"
                              ]
                            }
                          }
                        },
                        {
                          "id": "ord_3JkWC6jG0JgyRf5lO3r4IyU1",
                          "source_id": null,
                          "created_at": "2022-09-09T07:04:22.597Z",
                          "updated_at": "2022-09-09T07:04:23.743Z",
                          "status": "PAID",
                          "amount": 73100,
                          "items_discount_amount": 7310,
                          "total_discount_amount": 7310,
                          "total_amount": 65790,
                          "items": [
                            {
                              "object": "order_item",
                              "product_id": "prod_0b7d7c4e814be5c502",
                              "quantity": 1,
                              "amount": 70000,
                              "discount_amount": 7000,
                              "price": 70000,
                              "subtotal_amount": 63000,
                              "product": {
                                "name": "Apple iPhone 12",
                                "price": 70000
                              }
                            },
                            {
                              "object": "order_item",
                              "product_id": "prod_0b7d7dfb05cbe5c616",
                              "sku_id": "sku_0b7d7dfb090be5c619",
                              "quantity": 1,
                              "amount": 1600,
                              "discount_amount": 160,
                              "price": 1600,
                              "subtotal_amount": 1440,
                              "product": {
                                "name": "Comic Books1",
                                "price": 1600
                              },
                              "sku": {
                                "sku": "Comics1",
                                "price": 1600
                              }
                            },
                            {
                              "object": "order_item",
                              "product_id": "prod_0b72b0bd64d198e3ae",
                              "quantity": 1,
                              "amount": 1500,
                              "discount_amount": 150,
                              "price": 1500,
                              "subtotal_amount": 1350,
                              "product": {
                                "name": "Vase - Boho Vintage",
                                "price": 1500
                              }
                            }
                          ],
                          "metadata": {},
                          "customer": {
                            "id": "cust_tAED42tFhLM9v7GmZUaklJFd",
                            "object": "customer"
                          },
                          "customer_id": "cust_tAED42tFhLM9v7GmZUaklJFd",
                          "referrer_id": null,
                          "object": "order",
                          "redemptions": {
                            "r_0ba9fffae90e1b2495": {
                              "date": "2022-09-09T07:04:22.692Z",
                              "related_object_type": "voucher",
                              "related_object_id": "v_24rljiUfdLNC9poBf0BPNmoh2txzFkLs"
                            }
                          }
                        },
                        {
                          "id": "ord_HwdbziIPvUZJkIC7z74FKmPv",
                          "source_id": null,
                          "created_at": "2022-09-09T06:47:14.195Z",
                          "updated_at": "2022-09-09T06:47:15.369Z",
                          "status": "PAID",
                          "amount": 71600,
                          "discount_amount": 7160,
                          "total_discount_amount": 7160,
                          "total_amount": 64440,
                          "items": [
                            {
                              "object": "order_item",
                              "product_id": "prod_0b7d7dfb05cbe5c616",
                              "sku_id": "sku_0b7d7dfb090be5c619",
                              "quantity": 1,
                              "amount": 1600,
                              "price": 1600,
                              "subtotal_amount": 1600,
                              "product": {
                                "name": "Comic Books1",
                                "price": 1600
                              },
                              "sku": {
                                "sku": "Comics1",
                                "price": 1600
                              }
                            },
                            {
                              "object": "order_item",
                              "product_id": "prod_0b7d7c4e814be5c502",
                              "quantity": 1,
                              "amount": 70000,
                              "price": 70000,
                              "subtotal_amount": 70000,
                              "product": {
                                "name": "Apple iPhone 12",
                                "price": 70000
                              }
                            }
                          ],
                          "metadata": {},
                          "customer": {
                            "id": "cust_tAED42tFhLM9v7GmZUaklJFd",
                            "object": "customer"
                          },
                          "customer_id": "cust_tAED42tFhLM9v7GmZUaklJFd",
                          "referrer_id": null,
                          "object": "order",
                          "redemptions": {
                            "r_0ba9fc0eb00e1b2230": {
                              "date": "2022-09-09T06:47:14.369Z",
                              "related_object_type": "voucher",
                              "related_object_id": "v_3vEprqa6tbzfhFtpjr4mDlkNchXepW7s"
                            }
                          }
                        },
                        {
                          "id": "ord_HRluwFS2seoILUkXxWML0D7Z",
                          "source_id": null,
                          "created_at": "2022-09-09T06:44:27.383Z",
                          "updated_at": "2022-09-09T06:44:28.252Z",
                          "status": "PAID",
                          "amount": 71600,
                          "discount_amount": 100,
                          "total_discount_amount": 100,
                          "total_amount": 71500,
                          "items": [
                            {
                              "object": "order_item",
                              "product_id": "prod_0b7d7dfb05cbe5c616",
                              "sku_id": "sku_0b7d7dfb090be5c619",
                              "quantity": 1,
                              "amount": 1600,
                              "price": 1600,
                              "subtotal_amount": 1600,
                              "product": {
                                "name": "Comic Books1",
                                "price": 1600
                              },
                              "sku": {
                                "sku": "Comics1",
                                "price": 1600
                              }
                            },
                            {
                              "object": "order_item",
                              "product_id": "prod_0b7d7c4e814be5c502",
                              "quantity": 1,
                              "amount": 70000,
                              "price": 70000,
                              "subtotal_amount": 70000,
                              "product": {
                                "name": "Apple iPhone 12",
                                "price": 70000
                              }
                            }
                          ],
                          "metadata": {},
                          "customer": {
                            "id": "cust_tAED42tFhLM9v7GmZUaklJFd",
                            "object": "customer"
                          },
                          "referrer": {
                            "id": "cust_Vzck5i8U3OhcEUFY6MKhN9Rv",
                            "object": "customer"
                          },
                          "customer_id": "cust_tAED42tFhLM9v7GmZUaklJFd",
                          "referrer_id": "cust_Vzck5i8U3OhcEUFY6MKhN9Rv",
                          "object": "order",
                          "redemptions": {
                            "r_0ba9fb6bb7928ed9ec": {
                              "date": "2022-09-09T06:44:27.486Z",
                              "related_object_type": "voucher",
                              "related_object_id": "v_vhHuiEmZSchWHtE0xKm0HM7PFCR9cNkA",
                              "related_object_parent_id": "camp_rRsfatlwN7unSeUIJDCYedal"
                            }
                          }
                        },
                        {
                          "id": "ord_Qg5utCohAZ3tafYvc1O4C80r",
                          "source_id": null,
                          "created_at": "2022-09-09T06:42:34.083Z",
                          "updated_at": "2022-09-09T06:42:35.169Z",
                          "status": "PAID",
                          "amount": 70000,
                          "discount_amount": 4000,
                          "total_discount_amount": 4000,
                          "total_amount": 66000,
                          "items": [
                            {
                              "object": "order_item",
                              "product_id": "prod_0b7d7c4e814be5c502",
                              "quantity": 1,
                              "amount": 70000,
                              "price": 70000,
                              "subtotal_amount": 70000,
                              "product": {
                                "name": "Apple iPhone 12",
                                "price": 70000
                              }
                            }
                          ],
                          "metadata": {},
                          "customer": {
                            "id": "cust_tAED42tFhLM9v7GmZUaklJFd",
                            "object": "customer"
                          },
                          "customer_id": "cust_tAED42tFhLM9v7GmZUaklJFd",
                          "referrer_id": null,
                          "object": "order",
                          "redemptions": {
                            "r_0ba9fafd11d28ed999": {
                              "date": "2022-09-09T06:42:34.183Z",
                              "related_object_type": "voucher",
                              "related_object_id": "v_RaMaTT7F0Q47BetdGcFxsyqwo1aZGzJs",
                              "related_object_parent_id": "camp_hg7ajfHh6DcE1xa18mw3SdF6"
                            }
                          }
                        },
                        {
                          "id": "ord_G9LBb5SOPa36pHdwxUvzkw4P",
                          "source_id": null,
                          "created_at": "2022-09-09T06:38:17.984Z",
                          "updated_at": "2022-09-09T06:38:19.064Z",
                          "status": "PAID",
                          "amount": 4600,
                          "items_discount_amount": 300,
                          "total_discount_amount": 300,
                          "total_amount": 4300,
                          "items": [
                            {
                              "object": "order_item",
                              "product_id": "prod_0b7d7dfb05cbe5c616",
                              "sku_id": "sku_0b7d7dfb090be5c619",
                              "quantity": 1,
                              "amount": 1600,
                              "price": 1600,
                              "subtotal_amount": 1600,
                              "product": {
                                "name": "Comic Books1",
                                "price": 1600
                              },
                              "sku": {
                                "sku": "Comics1",
                                "price": 1600
                              }
                            },
                            {
                              "object": "order_item",
                              "product_id": "prod_0a65b3ff8592d7a5b5",
                              "quantity": 1,
                              "amount": 3000,
                              "discount_amount": 300,
                              "price": 3000,
                              "subtotal_amount": 2700,
                              "product": {
                                "name": "Koffee Cup",
                                "price": 3000
                              }
                            }
                          ],
                          "metadata": {},
                          "customer": {
                            "id": "cust_tAED42tFhLM9v7GmZUaklJFd",
                            "object": "customer"
                          },
                          "customer_id": "cust_tAED42tFhLM9v7GmZUaklJFd",
                          "referrer_id": null,
                          "object": "order",
                          "redemptions": {
                            "r_0ba9fa02fcd28ed8f1": {
                              "date": "2022-09-09T06:38:18.099Z",
                              "related_object_type": "voucher",
                              "related_object_id": "v_KqP2NOSb4dJb1D6UBhcq7ScPZXun0y40",
                              "related_object_parent_id": "camp_hC2GdqYtOmTT45zfhib62cK1"
                            }
                          }
                        },
                        {
                          "id": "ord_N3YBowDTZs0UH2hHoMZLbUDN",
                          "source_id": null,
                          "created_at": "2022-09-09T06:18:31.459Z",
                          "updated_at": "2022-09-09T06:18:31.624Z",
                          "status": "PAID",
                          "amount": 71600,
                          "discount_amount": 7160,
                          "total_discount_amount": 7160,
                          "total_amount": 64440,
                          "items": [
                            {
                              "object": "order_item",
                              "product_id": "prod_0b7d7c4e814be5c502",
                              "quantity": 1,
                              "amount": 70000,
                              "price": 70000,
                              "subtotal_amount": 70000,
                              "product": {
                                "name": "Apple iPhone 12",
                                "price": 70000
                              }
                            },
                            {
                              "object": "order_item",
                              "product_id": "prod_0b7d7dfb05cbe5c616",
                              "sku_id": "sku_0b7d7dfb090be5c619",
                              "quantity": 1,
                              "amount": 1600,
                              "price": 1600,
                              "subtotal_amount": 1600,
                              "product": {
                                "name": "Comic Books1",
                                "price": 1600
                              },
                              "sku": {
                                "sku": "Comics1",
                                "price": 1600
                              }
                            }
                          ],
                          "metadata": {},
                          "customer": {
                            "id": "cust_Vzck5i8U3OhcEUFY6MKhN9Rv",
                            "object": "customer"
                          },
                          "customer_id": "cust_Vzck5i8U3OhcEUFY6MKhN9Rv",
                          "referrer_id": null,
                          "object": "order",
                          "redemptions": {
                            "r_0ba9f57c37128ed639": {
                              "date": "2022-09-09T06:18:31.516Z",
                              "related_object_type": "promotion_tier",
                              "related_object_id": "promo_CQonGnrsFAdEJfJQ3oKB3a8G",
                              "related_object_parent_id": "camp_SGq39XXJ47vm7Xys3D0NLgQ0"
                            }
                          }
                        },
                        {
                          "id": "ord_3R6vsxRZRkND8rpe0rAn9Agc",
                          "source_id": null,
                          "created_at": "2022-09-05T08:13:13.720Z",
                          "updated_at": "2022-09-05T08:13:14.498Z",
                          "status": "PAID",
                          "amount": 74000,
                          "items_discount_amount": 1500,
                          "total_discount_amount": 1500,
                          "total_amount": 72500,
                          "items": [
                            {
                              "object": "order_item",
                              "product_id": "prod_0b7d7c4e814be5c502",
                              "quantity": 1,
                              "amount": 70000,
                              "price": 70000,
                              "subtotal_amount": 70000,
                              "product": {
                                "name": "Apple iPhone 12",
                                "price": 70000
                              }
                            },
                            {
                              "object": "order_item",
                              "product_id": "prod_0b72b0bd64d198e3ae",
                              "quantity": 2,
                              "amount": 3000,
                              "discount_amount": 500,
                              "price": 1500,
                              "subtotal_amount": 2500,
                              "product": {
                                "name": "Vase - Boho Vintage",
                                "price": 1500
                              }
                            },
                            {
                              "object": "order_item",
                              "product_id": "prod_0b72b00ffed198e344",
                              "quantity": 2,
                              "amount": 1000,
                              "discount_amount": 1000,
                              "price": 500,
                              "subtotal_amount": 0,
                              "product": {
                                "name": "Bouquet - Romantic Roses",
                                "price": 500
                              }
                            }
                          ],
                          "metadata": {},
                          "customer": {
                            "id": "cust_CSnYd37MXmrbS19XCrghjBsv",
                            "object": "customer"
                          },
                          "customer_id": "cust_CSnYd37MXmrbS19XCrghjBsv",
                          "referrer_id": null,
                          "object": "order",
                          "redemptions": {
                            "r_0ba4e961444579711a": {
                              "date": "2022-09-05T08:13:13.873Z",
                              "related_object_type": "voucher",
                              "related_object_id": "v_hwySVBBk6YmMD4GzZHJzke1Fxo3QO7kP",
                              "related_object_parent_id": "camp_Uji5a53s5wRSUHqznncTkhHh"
                            }
                          }
                        },
                        {
                          "id": "ord_7bqlkoHyEJCQuxVZpKfZYNeA",
                          "source_id": null,
                          "created_at": "2022-09-02T17:12:13.213Z",
                          "updated_at": "2022-09-02T17:12:13.969Z",
                          "status": "PAID",
                          "amount": 292400,
                          "items_discount_amount": 900,
                          "total_discount_amount": 900,
                          "total_amount": 291500,
                          "items": [
                            {
                              "object": "order_item",
                              "product_id": "prod_0b7d7dfb05cbe5c616",
                              "sku_id": "sku_0b7d7dfb090be5c619",
                              "quantity": 4,
                              "amount": 6400,
                              "price": 1600,
                              "subtotal_amount": 6400,
                              "product": {
                                "name": "Comic Books1",
                                "price": 1600
                              },
                              "sku": {
                                "sku": "Comics1",
                                "price": 1600
                              }
                            },
                            {
                              "object": "order_item",
                              "product_id": "prod_0b72b0bd64d198e3ae",
                              "quantity": 4,
                              "amount": 6000,
                              "price": 1500,
                              "subtotal_amount": 6000,
                              "product": {
                                "name": "Vase - Boho Vintage",
                                "price": 1500
                              }
                            },
                            {
                              "object": "order_item",
                              "product_id": "prod_0b7d7c4e814be5c502",
                              "quantity": 4,
                              "amount": 280000,
                              "discount_amount": 900,
                              "price": 70000,
                              "subtotal_amount": 279100,
                              "product": {
                                "name": "Apple iPhone 12",
                                "price": 70000
                              }
                            }
                          ],
                          "metadata": {},
                          "customer": {
                            "id": "cust_CSnYd37MXmrbS19XCrghjBsv",
                            "object": "customer"
                          },
                          "customer_id": "cust_CSnYd37MXmrbS19XCrghjBsv",
                          "referrer_id": null,
                          "object": "order",
                          "redemptions": {
                            "r_0ba187f9bb45792c13": {
                              "date": "2022-09-02T17:12:13.293Z",
                              "related_object_type": "voucher",
                              "related_object_id": "v_pg6DhwhmeZASoSoJ15PdzMT9MhsPjYuc",
                              "related_object_parent_id": "camp_W8DJVd8J0btqXT6FBwn7BSkC"
                            }
                          }
                        },
                        {
                          "id": "ord_7HwbJiHmS07O7FsVAtjJcuRS",
                          "source_id": null,
                          "created_at": "2022-09-02T17:08:37.794Z",
                          "updated_at": "2022-09-02T17:08:38.879Z",
                          "status": "PAID",
                          "amount": 223900,
                          "items_discount_amount": 900,
                          "total_discount_amount": 900,
                          "total_amount": 223000,
                          "items": [
                            {
                              "object": "order_item",
                              "product_id": "prod_0b7d7dfb05cbe5c616",
                              "sku_id": "sku_0b7d7dfb090be5c619",
                              "quantity": 4,
                              "amount": 6400,
                              "discount_amount": 300,
                              "price": 1600,
                              "subtotal_amount": 6100,
                              "product": {
                                "name": "Comic Books1",
                                "price": 1600
                              },
                              "sku": {
                                "sku": "Comics1",
                                "price": 1600
                              }
                            },
                            {
                              "object": "order_item",
                              "product_id": "prod_0b7d7c4e814be5c502",
                              "quantity": 3,
                              "amount": 210000,
                              "discount_amount": 300,
                              "price": 70000,
                              "subtotal_amount": 209700,
                              "product": {
                                "name": "Apple iPhone 12",
                                "price": 70000
                              }
                            },
                            {
                              "object": "order_item",
                              "product_id": "prod_0b72b0bd64d198e3ae",
                              "quantity": 5,
                              "amount": 7500,
                              "discount_amount": 300,
                              "price": 1500,
                              "subtotal_amount": 7200,
                              "product": {
                                "name": "Vase - Boho Vintage",
                                "price": 1500
                              }
                            }
                          ],
                          "metadata": {},
                          "customer": {
                            "id": "cust_CSnYd37MXmrbS19XCrghjBsv",
                            "object": "customer"
                          },
                          "customer_id": "cust_CSnYd37MXmrbS19XCrghjBsv",
                          "referrer_id": null,
                          "object": "order",
                          "redemptions": {
                            "r_0ba1872762c5792b73": {
                              "date": "2022-09-02T17:08:37.899Z",
                              "related_object_type": "voucher",
                              "related_object_id": "v_yQydppWWJpSUuGNEWJ4I2upFGY2Ma4IY",
                              "related_object_parent_id": "camp_A5L21BD4cJii28882owYBqTV"
                            }
                          }
                        }
                      ],
                      "total": 441
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-orders",
        "description": "Returns a list of orders.\n\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "created_at",
                "-created_at",
                "updated_at",
                "-updated_at"
              ]
            },
            "in": "query",
            "name": "order",
            "description": "This is a property that controls the sorting direction of the results. Sort the results using one of the filtering options, where the dash `-` preceding a sorting option means sorting in a descending order."
          }
        ]
      },
      "post": {
        "summary": "Create Order",
        "operationId": "post-orders",
        "responses": {
          "200": {
            "description": "Returns an order object if the operation succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/10_obj_order_object"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "id": "ord_cRKOEXiBOj0EZKF7g9n6l0eH",
                      "source_id": "new",
                      "created_at": "2022-09-09T09:20:01.660Z",
                      "updated_at": "2022-09-09T09:24:43.604Z",
                      "status": "FULFILLED",
                      "amount": 121700,
                      "total_amount": 121700,
                      "items": [
                        {
                          "object": "order_item",
                          "source_id": "prod_1",
                          "related_object": "product",
                          "quantity": 2,
                          "amount": 120000,
                          "price": 60000,
                          "subtotal_amount": 120000,
                          "product": {
                            "id": "prod_0b7d7c4e814be5c502",
                            "source_id": "prod_1",
                            "name": "Apple iPhone 12",
                            "metadata": {
                              "color": [
                                "purple"
                              ],
                              "vendor": "mall"
                            },
                            "price": 60000
                          }
                        },
                        {
                          "object": "order_item",
                          "source_id": "ComicBook_1",
                          "related_object": "sku",
                          "product_id": "prod_0b7d7dfb05cbe5c616",
                          "quantity": 1,
                          "amount": 1700,
                          "price": 1700,
                          "subtotal_amount": 1700,
                          "product": {
                            "id": "prod_0b7d7dfb05cbe5c616",
                            "source_id": "Books",
                            "name": "Comic Books1",
                            "metadata": {
                              "color": [
                                "silver"
                              ],
                              "vendor": "Bookstore1"
                            },
                            "price": 2100
                          },
                          "sku": {
                            "id": "sku_0b7d7dfb090be5c619",
                            "source_id": "ComicBook_1",
                            "sku": "Comics1",
                            "metadata": {
                              "color": [
                                "golden"
                              ],
                              "vendor": "islands"
                            },
                            "price": 1700
                          }
                        }
                      ],
                      "metadata": {
                        "location_id": [
                          "L1",
                          "L2"
                        ],
                        "payment_mean": [
                          "paypal",
                          "credit-card"
                        ]
                      },
                      "customer": {
                        "id": "cust_H0nXrItO1DNV3UiPIl54HA5o",
                        "object": "customer"
                      },
                      "referrer": {
                        "id": "cust_Vzck5i8U3OhcEUFY6MKhN9Rv",
                        "object": "customer"
                      },
                      "customer_id": "cust_H0nXrItO1DNV3UiPIl54HA5o",
                      "referrer_id": "cust_Vzck5i8U3OhcEUFY6MKhN9Rv",
                      "object": "order"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "ORDERS API"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/10_req_orders_post"
              },
              "examples": {
                "Example": {
                  "value": {
                    "source_id": "new",
                    "status": "FULFILLED",
                    "metadata": {
                      "location_id": [
                        "L1",
                        "L2"
                      ],
                      "payment_mean": [
                        "paypal",
                        "credit-card"
                      ]
                    },
                    "customer": {
                      "source_id": "bob.smith.1@email.com",
                      "name": "Bob Smith",
                      "description": "A nice customer",
                      "email": "bob.smith.1@email.com",
                      "phone": "+1 933 222 3333",
                      "address": {
                        "city": "New York",
                        "country": "United Statese",
                        "line_1": "123 Main St",
                        "line_2": "APT 3 BLG 4",
                        "postal_code": "10001",
                        "state": "NY"
                      },
                      "metadata": {
                        "lang": "en",
                        "test": false
                      },
                      "birthdate": "2022-01-02"
                    },
                    "referrer": {
                      "source_id": "jane.smith@email.com",
                      "name": "Jane Smith",
                      "description": "A really nice customer",
                      "email": "jane.smith@email.com",
                      "phone": "+1 933 222 3334",
                      "address": {
                        "city": "New York",
                        "country": "United States",
                        "line_1": "123 Main St.",
                        "line_2": "APT 3 BLG 4",
                        "postal_code": "10001",
                        "state": "NY"
                      },
                      "metadata": {
                        "lang": "en",
                        "test": false
                      },
                      "birthday": "2022-03-03"
                    },
                    "items": [
                      {
                        "source_id": "prod_1",
                        "related_object": "product",
                        "quantity": 2,
                        "product": {
                          "name": "Apple iPhone 12",
                          "price": 60000,
                          "metadata": {
                            "color": [
                              "purple"
                            ],
                            "vendor": "mall"
                          },
                          "override": true
                        }
                      },
                      {
                        "source_id": "ComicBook_1",
                        "related_object": "sku",
                        "quantity": 1,
                        "product": {
                          "source_id": "Books",
                          "name": "Comic Books1",
                          "price": 2100,
                          "metadata": {
                            "color": [
                              "silver"
                            ],
                            "vendor": "Bookstore1"
                          },
                          "override": true
                        },
                        "sku": {
                          "sku": "Comics1",
                          "source_id": "ComicBook_1",
                          "price": 1700,
                          "metadata": {
                            "color": [
                              "golden"
                            ],
                            "vendor": "islands"
                          },
                          "override": true
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "description": "Specify the order parameters."
        },
        "description": "Creates an order object and triggers an order creation event."
      }
    },
    "/orders/{order_id}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "order_id",
          "in": "path",
          "required": true,
          "description": "Unique Voucherify order identifier or order source ID."
        }
      ],
      "get": {
        "summary": "Get Order",
        "tags": [
          "ORDERS API"
        ],
        "responses": {
          "200": {
            "description": "Returns an order object if a valid identifier was provided. ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/10_obj_order_object"
                }
              }
            }
          },
          "404": {
            "description": "Returns an error when requesting an order that has been deleted or cannot be found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/e_404_not_found"
                },
                "examples": {
                  "Not Found": {
                    "value": {
                      "code": 404,
                      "key": "not_found",
                      "message": "Resource not found",
                      "details": "Cannot find order with id ord_nIcO2s8iD4Xh5E9IGDQ57Ax",
                      "request_id": "v-0baa1ad023d0656a84",
                      "resource_id": "ord_nIcO2s8iD4Xh5E9IGDQ57Ax",
                      "resource_type": "order"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-orders-order_id",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "description": "Retrieve an order."
      },
      "put": {
        "summary": "Update Order",
        "operationId": "put-orders-order_id",
        "responses": {
          "200": {
            "description": "Returns the order object if the update succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/10_obj_order_object"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "id": "ord_cRKOEXiBOj0EZKF7g9n6l0eH",
                      "source_id": "new",
                      "created_at": "2022-09-09T09:20:01.660Z",
                      "updated_at": "2022-09-09T09:41:00.881Z",
                      "status": "CANCELED",
                      "amount": 121700,
                      "total_amount": 121700,
                      "items": [
                        {
                          "object": "order_item",
                          "source_id": "prod_1",
                          "related_object": "product",
                          "quantity": 2,
                          "amount": 120000,
                          "price": 60000,
                          "subtotal_amount": 120000,
                          "product": {
                            "id": "prod_0b7d7c4e814be5c502",
                            "source_id": "prod_1",
                            "name": "Apple iPhone 12",
                            "metadata": {
                              "color": [
                                "purple"
                              ],
                              "vendor": "mall"
                            },
                            "price": 60000
                          }
                        },
                        {
                          "object": "order_item",
                          "source_id": "ComicBook_1",
                          "related_object": "sku",
                          "product_id": "prod_0b7d7dfb05cbe5c616",
                          "quantity": 1,
                          "amount": 1700,
                          "price": 1700,
                          "subtotal_amount": 1700,
                          "product": {
                            "id": "prod_0b7d7dfb05cbe5c616",
                            "source_id": "Books",
                            "name": "Comic Books1",
                            "metadata": {
                              "color": [
                                "silver"
                              ],
                              "vendor": "Bookstore1"
                            },
                            "price": 2100
                          },
                          "sku": {
                            "id": "sku_0b7d7dfb090be5c619",
                            "source_id": "ComicBook_1",
                            "sku": "Comics1",
                            "metadata": {
                              "color": [
                                "golden"
                              ],
                              "vendor": "islands"
                            },
                            "price": 1700
                          }
                        }
                      ],
                      "metadata": {
                        "location_id": [
                          "L1",
                          "L2"
                        ],
                        "payment_mean": [
                          "paypal",
                          "credit-card"
                        ]
                      },
                      "customer": {
                        "id": "cust_H0nXrItO1DNV3UiPIl54HA5o",
                        "object": "customer"
                      },
                      "referrer": {
                        "id": "cust_Vzck5i8U3OhcEUFY6MKhN9Rv",
                        "object": "customer"
                      },
                      "customer_id": "cust_H0nXrItO1DNV3UiPIl54HA5o",
                      "referrer_id": "cust_Vzck5i8U3OhcEUFY6MKhN9Rv",
                      "object": "order"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "ORDERS API"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/10_req_update_order"
              },
              "examples": {
                "Example": {
                  "value": {
                    "status": "CANCELED"
                  }
                }
              }
            }
          },
          "description": "Specify the parameters of the order that are to be updated."
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "description": "Updates the specified order by setting the values of the parameters passed in the request body. Any parameters not provided will be left unchanged."
      }
    },
    "/orders/export": {
      "post": {
        "summary": "Create Export",
        "operationId": "post-orders-export",
        "responses": {
          "200": {
            "description": "Returns the `id` of the export object and `status` of the file generation process. The `id` is used in the [Get Export](OpenAPI.json/paths/~1exports~1{export_id}/get) method to generate the url for the downloadable CSV file or in the [Download Export](OpenAPI.json/paths/~1exports~1{exportId}/get) method to return the contents of the CSV file. The status indicates whether the file has been scheduled for creation."
          }
        },
        "tags": [
          "ORDERS API"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        },
        "description": "Creates a downloadable CSV file containing a list of orders.\n\nThe parameters listed in the payload resembles headers in the CSV file. To include a parameter to the file, add it to parameters.fields.\n\nThe available filters are all [order object](OpenAPI.json/components/schemas/10_obj_order_object) attributes. Additionally, any metadata defined in the metadata schema can be downloaded.\n\nPassing an empty JSON will generate a file containing three default fields: `id`, `source_id`, and `status`."
      }
    },
    "/orders/import": {
      "post": {
        "summary": "Import Orders",
        "operationId": "post-orders-export",
        "responses": {
          "200": {
            "description": "Returns the ID of the scheduled asynchronous action, informing you that your request has been accepted and the order(s) will be added to the repository asynchronously. To check the status and result, copy the `async_action_id` from the response and pass it using [Get Async Action](OpenAPI.json/paths/~1async-actions~1{async_action_id}/get) endpoint.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/a_res_async_actions"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "async_action_id": "aa_0a875d56c805df6601"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "ORDERS API"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/10_req_orders_import"
              },
              "examples": {
                "Example": {
                  "value": [
                    {
                      "source_id": "orderImport14",
                      "status": "PAID",
                      "metadata": {
                        "location_id": [
                          "L1",
                          "L2"
                        ],
                        "payment_mean": [
                          "paypal",
                          "credit-card"
                        ]
                      },
                      "customer": {
                        "source_id": "bob2.smith@email.com",
                        "name": "Bob Smith",
                        "description": "A nice customer",
                        "email": "bob.smith@email.com",
                        "phone": "+1 933 222 3333",
                        "address": {
                          "city": "New York",
                          "country": "United States",
                          "line_1": "123 Main St.",
                          "line_2": "APT 3 BLG 4",
                          "postal_code": "10001",
                          "state": "NY"
                        },
                        "metadata": {
                          "lang": "en",
                          "test": true
                        },
                        "birthdate": "2022-01-01"
                      },
                      "referrer": {
                        "source_id": "jane.smith@email.com",
                        "name": "Jane Smith",
                        "description": "A really nice customer",
                        "email": "jane.smith@email.com",
                        "phone": "+1 933 222 3334",
                        "address": {
                          "city": "New York",
                          "country": "United States",
                          "line_1": "123 Main St.",
                          "line_2": "APT 3 BLG 4",
                          "postal_code": "10001",
                          "state": "NY"
                        },
                        "metadata": {
                          "lang": "en",
                          "test": false
                        },
                        "birthday": "2022-03-03"
                      },
                      "items": [
                        {
                          "source_id": "prod_1",
                          "related_object": "product",
                          "quantity": 2,
                          "product": {
                            "name": "Apple iPhone 12",
                            "price": 70000,
                            "metadata": {
                              "color": [
                                "silver"
                              ],
                              "vendor": "mall"
                            },
                            "override": true
                          }
                        },
                        {
                          "source_id": "ComicBook_1",
                          "related_object": "sku",
                          "quantity": 1,
                          "product": {
                            "source_id": "Books",
                            "name": "Comic Books1",
                            "price": 1600,
                            "metadata": {
                              "color": [
                                "silver"
                              ],
                              "vendor": "Bookstore1"
                            },
                            "override": true
                          },
                          "sku": {
                            "sku": "Comics1",
                            "source_id": "ComicBook_1",
                            "price": 1600,
                            "metadata": {
                              "color": [
                                "golden"
                              ],
                              "vendor": "islands"
                            },
                            "override": true
                          }
                        }
                      ]
                    },
                    {
                      "source_id": "orderImport15",
                      "status": "PAID",
                      "metadata": {
                        "location_id": [
                          "L3"
                        ],
                        "payment_mean": [
                          "wire-transfer"
                        ]
                      },
                      "customer": {
                        "source_id": "bob2.smith@email.com"
                      },
                      "referrer": {
                        "source_id": "jane.smith@email.com"
                      },
                      "items": [
                        {
                          "source_id": "ComicBook_1",
                          "quantity": 4,
                          "related_object": "sku",
                          "sku": {
                            "source_id": "ComicBook_1"
                          }
                        },
                        {
                          "source_id": "vase_1",
                          "quantity": 1,
                          "related_object": "product",
                          "product": {
                            "source_id": "vase_1"
                          }
                        }
                      ]
                    },
                    {
                      "source_id": "orderImport16",
                      "status": "FULFILLED",
                      "metadata": {
                        "location_id": [
                          "L3"
                        ],
                        "payment_mean": [
                          "wire-transfer"
                        ]
                      },
                      "customer": {
                        "id": "cust_LMY4ZylSdUYB1J4tzqNcl5VV"
                      },
                      "referrer": {
                        "id": "cust_Vzck5i8U3OhcEUFY6MKhN9Rv"
                      },
                      "items": [
                        {
                          "product_id": "prod_0b72b0bd64d198e3ae",
                          "quantity": 2
                        },
                        {
                          "sku_id": "sku_0b1621b319d248b79f",
                          "quantity": 2
                        }
                      ]
                    },
                    {
                      "source_id": "orderImport17",
                      "status": "CANCELED",
                      "amount": 7000,
                      "metadata": {
                        "location_id": [
                          "L3"
                        ],
                        "payment_mean": [
                          "wire-transfer"
                        ]
                      }
                    },
                    {
                      "source_id": "orderImport18",
                      "status": "CREATED",
                      "metadata": {
                        "location_id": [
                          "L3"
                        ],
                        "payment_mean": [
                          "wire-transfer"
                        ]
                      },
                      "items": [
                        {
                          "source_id": "ComicBook_1",
                          "amount": 900,
                          "related_object": "sku"
                        },
                        {
                          "source_id": "vase_1",
                          "amount": 2000,
                          "related_object": "product"
                        }
                      ]
                    },
                    {
                      "source_id": "orderImport19",
                      "status": "CREATED",
                      "metadata": {
                        "location_id": [
                          "L3"
                        ],
                        "payment_mean": [
                          "wire-transfer"
                        ]
                      },
                      "items": [
                        {
                          "amount": 900
                        },
                        {
                          "amount": 2000
                        }
                      ]
                    },
                    {
                      "source_id": "orderImport20",
                      "status": "CREATED",
                      "metadata": {
                        "location_id": [
                          "L3"
                        ],
                        "payment_mean": [
                          "wire-transfer"
                        ]
                      },
                      "items": [
                        {
                          "price": 900,
                          "quantity": 2
                        },
                        {
                          "price": 2000,
                          "quantity": 3
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "description": "The request body is sent in the form of an array of order objects."
        },
        "description": "<!-- theme: info -->\n\n> ### Historical orders\n> This endpoint should only be used to import historical orders into Voucherify. For on-going synchronization, the [create order](OpenAPI.json/paths/~1orders/post) and [update order](OpenAPI.json/paths/~1orders~1{order_id}/put) endpoints should be used. This is critical because this endpoint does not store events or launch distributions.\n\n## Limitations\n\n### Import volume\n\nThere can be only single on-going order import per tenant per project at given time. The user can schedule more imports but those extra imports will be scheduled to run in sequence one by one.  \n\n### Maximum count of orders in single import\n\nThere is a `2000` limit but we might decide to change it to a lower / higher value at any given time depending if we find this value is too high or too low with time.\n\n## Notifications\n\nThere are no notifications on the Dashboard because this import is launched via the API.\n\n## Triggered actions\n  \nIf you import orders with customers, then a logic will be scheduled responsible for placing these customers into segments and refreshing the segment's summary. Consequently, this update will trigger \n- **customers entering into segments** \n- **distributions** based on any rules tied to customer entering segment(s)\n- **earning rules** based on the customer entering segment (s)\n\n## What is not triggered\n\n1. Any kind of webhooks are not triggered during import of orders - for both orders and upserted products / skus.  \n\n2. Distributions based on Order Update, Order Paid, Order Created and Order Cancelled. In other words if you have a distribution based on Order Paid and you import an order with a PAID status, the distribution is not going to be triggered.    \n\n3. Any kind of events are not created during the import of orders - for both orders and upserted products / skus. In other words you won't see any events in the Activity tab in the Dashboard such as Order created or Order paid. If you are additionally upserting products / skus, then you won't see the Product created events listed, etc.   \n\n4. Earning rules based on Order Paid won't be triggered."
      },
      "parameters": []
    },
    "/products": {
      "get": {
        "summary": "List Products",
        "tags": [
          "PRODUCTS API"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "operationId": "get-products",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/page"
          }
        ]
      },
      "post": {
        "summary": "Create Product",
        "operationId": "post-products",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "PRODUCTS API"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        }
      }
    },
    "/products/{product_id}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "product_id",
          "in": "path",
          "required": true,
          "description": "A Voucherify product ID or source ID."
        }
      ],
      "get": {
        "summary": "Get Product",
        "tags": [
          "PRODUCTS API"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "operationId": "get-products-product_id",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ]
      },
      "put": {
        "summary": "Update Product",
        "operationId": "put-products-product_id",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "PRODUCTS API"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "description": "",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Product",
        "operationId": "delete-products-product_id",
        "responses": {
          "204": {
            "description": "Returns no content if deletion is successful."
          },
          "404": {
            "description": "Returns an error indicating that the product with given ID was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/e_404_not_found"
                },
                "examples": {
                  "Product Not Found": {
                    "value": {
                      "code": 404,
                      "key": "not_found",
                      "message": "Resource not found",
                      "details": "Cannot find product with id prod_0a4934c50ddc5dbae",
                      "request_id": "v-0ae39cd7de8683dfd8",
                      "resource_id": "prod_0a4934c50ddc5dbae",
                      "resource_type": "product"
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "force",
            "description": "If this flag is set to `true`, the product will be removed permanently. Going forward, the user will be able to create another product with exactly the same `source_id`."
          }
        ],
        "tags": [
          "PRODUCTS API"
        ],
        "description": "This method deletes a product."
      }
    },
    "/products/metadata/async": {
      "post": {
        "summary": "Update Products Metadata in bulk",
        "operationId": "post-products-metadata-async",
        "responses": {
          "202": {
            "description": "Returns ID of the scheduled async action. The response informs you that your request has been accepted and updates will be added to the repository asynchronously. To check the update status and result, copy the `async_action_id` from the response and pass it using the [Get Async Action](OpenAPI.json/paths/~1async-actions~1{async_action_id}/get) endpoint."
          }
        },
        "tags": [
          "PRODUCTS API"
        ],
        "description": "Update several product metadata properties in one asynchronous operation. \n\nIn one request, it is possible to update a maximum of **100** records. In the response body, you get a unique async action identifier. If a requested product object is not found, then an **upsert** occurs. This is reflected in the [Get Async Action](OpenAPI.json/paths/~1async-actions~1{async_action_id}/get) endpoint as follows:  \n\n<!--\ntitle: \"Response\"\nlineNumbers: true\n-->\n```json\n{\n    \"found\": false,\n    \"updated\": true\n}\n```",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          },
          "description": ""
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ]
      }
    },
    "/products/bulk/async": {
      "post": {
        "summary": "Update Products in bulk",
        "operationId": "post-products-bulk-async",
        "responses": {
          "202": {
            "description": "Returns ID of the scheduled async action. The response informs you that your request has been accepted and updates will be added to the repository asynchronously. To check the update status and result, copy the `async_action_id` from the response and pass it using the [Get Async Action](OpenAPI.json/paths/~1async-actions~1{async_action_id}/get) endpoint."
          }
        },
        "tags": [
          "PRODUCTS API"
        ],
        "description": "Update several products in one asynchronous operation. \n\nIn one request, it is possible to update a maximum of **100** records. In the response body, you get a unique async action identifier. If a requested product object is not found, then an **upsert** occurs. This is reflected in the [Get Async Action](OpenAPI.json/paths/~1async-actions~1{async_action_id}/get) endpoint as follows:  \n\n<!--\ntitle: \"Response\"\nlineNumbers: true\n-->\n```json\n{\n    \"found\": false,\n    \"updated\": true\n}\n```",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ]
      }
    },
    "/products/{productId}/skus": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "productId",
          "in": "path",
          "description": "A Voucherify [product](OpenAPI.json/components/schemas/11_obj_product_object) unique identifier or product source ID.",
          "required": true
        }
      ],
      "get": {
        "summary": "List SKUs in Product",
        "tags": [
          "PRODUCTS API"
        ],
        "responses": {
          "200": {
            "description": "Returns a dictionary of SKUs.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/11_res_products_productId_skus"
                }
              }
            }
          }
        },
        "operationId": "get-products-product_id-skus",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "description": "Retrieve all SKUs for a given product."
      },
      "post": {
        "summary": "Create SKU",
        "operationId": "post-products-product_id-skus",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "PRODUCTS API"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          },
          "description": ""
        },
        "description": "This method adds product varients to a [created product](OpenAPI.json/paths/~1products/post)."
      }
    },
    "/skus/{skuId}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "skuId",
          "in": "path",
          "required": true,
          "description": "A Voucherify SKU identifier or SKU source ID."
        }
      ],
      "get": {
        "summary": "Get SKU",
        "tags": [
          "PRODUCTS API"
        ],
        "responses": {
          "200": {
            "description": "Returns requested SKU object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/11_obj_sku_object"
                }
              }
            }
          },
          "404": {
            "description": "Returns an error indicating that the sku with given ID was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/e_404_not_found"
                },
                "examples": {
                  "Not Found": {
                    "value": {
                      "code": 404,
                      "key": "not_found",
                      "message": "Resource not found",
                      "details": "Cannot find sku with id sku_0b1621b319d248b79",
                      "request_id": "v-0b4fe3ddc55646d01d",
                      "resource_id": "sku_0b1621b319d248b79",
                      "resource_type": "sku"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-skus-sku_id",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "description": "Retrieve details of a SKU."
      }
    },
    "/products/{productId}/skus/{skuId}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "productId",
          "in": "path",
          "required": true,
          "description": "A unique Voucherify [product](OpenAPI.json/components/schemas/11_obj_product_object) ID or product source ID."
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "skuId",
          "in": "path",
          "required": true,
          "description": "A Voucherify [SKU](OpenAPI.json/components/schemas/11_obj_sku_object) ID or SKU source ID."
        }
      ],
      "put": {
        "summary": "Update SKU",
        "operationId": "put-products-product_id-skus-sku_id",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/11_obj_sku_object"
                }
              }
            },
            "description": "Returns the SKU object with the updated parameters."
          }
        },
        "tags": [
          "PRODUCTS API"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/11_req_products_productId_skus_skuId_PUT"
              }
            }
          },
          "description": "Specify the parameters to be updated."
        },
        "description": "Updates the specified SKU by setting the values of the parameters passed in the request body. Any parameters not provided in the payload will be left unchanged.\n\nYou can modify the following fields:  \n\n- Enter fields\n\nFields other than the ones listed above won't be modified. Even if provided, they will be silently skipped."
      },
      "delete": {
        "summary": "Delete SKU",
        "operationId": "delete-products-product_id-skus-sku_id",
        "responses": {
          "204": {
            "description": "Returns no content if deletion is successful."
          },
          "404": {
            "description": "Returns an error indicating that the product or sku with given ID was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/e_404_not_found"
                },
                "examples": {
                  "Product Not Found": {
                    "value": {
                      "code": 404,
                      "key": "not_found",
                      "message": "Resource not found",
                      "details": "Cannot find product with id 123-567-343",
                      "request_id": "v-0ae3a0d26fd40ecd11",
                      "resource_id": "123-567-343",
                      "resource_type": "product"
                    }
                  },
                  "SKU Not Found": {
                    "value": {
                      "code": 404,
                      "key": "not_found",
                      "message": "Resource not found",
                      "details": "Cannot find sku with id sku_0ae3a06b20019ba8f",
                      "request_id": "v-0ae3a1534d940ecd81",
                      "resource_id": "sku_0ae3a06b20019ba8f",
                      "resource_type": "sku"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "PRODUCTS API"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "force",
            "description": "If this flag is set to `true`, the SKU will be removed permanently. Going forward, the user will be able to create another SKU with exactly the same `source_id`."
          }
        ],
        "description": "This method deletes a product SKU."
      }
    },
    "/products/importCSV": {
      "post": {
        "summary": "Import Products using CSV",
        "operationId": "post-vouchers-importCSV",
        "description": "Import products into the repository using a CSV file.\n\nThe CSV file has to include headers in the first line.  \n\nCurl Example\n<!--\ntitle: \"Example Request\"\nlineNumbers: true\n-->\n```cURL\ncurl -X POST \\\n  https://api.voucherify.io/v1/products/importCSV \\\n  -F file=@/path/to/products.csv \\\n  -H \"X-App-Id: c70a6f00-cf91-4756-9df5-47628850002b\" \\\n  -H \"X-App-Token: 3266b9f8-e246-4f79-bdf0-833929b1380c\"\n```\n\n<!-- theme: info -->\n\n> #### Standard product fields mapping\n>\n> - Create a **comma separated value (CSV) file** or download our CSV import template. You can find an example template [here](https://s3.amazonaws.com/helpscout.net/docs/assets/5902f1c12c7d3a057f88a36d/attachments/627b82ed68d51e779443f550/Import_products_template.csv).\n> - Supported CSV file headers: `name,source_id,price,attributes,image_url,Metadata_property_name`\n> - **Name** is a **required** field. The remaining fields in the CSV template are optional.\n> - Override/Update products' **names** in Voucherify using this method. Data will be updated for each product included in the CSV file whose **source_id** matches a Source id in Voucherify. No other data can be updated other than the product name.\n> - Note that dates and date-time attributes need to be provided in compliance with the **ISO 8601 norms**. For example, 2022-03-11T09:00:00.000Z or 2022-03-11\n>    - `YYYY-MM-DD`\n>    - `YYYY-MM-DDTHH`\n>    - `YYYY-MM-DDTHH:mm`\n>    - `YYYY-MM-DDTHH:mm:ss`\n>    - `YYYY-MM-DDTHH:mm:ssZ`\n>    - `YYYY-MM-DDTHH:mm:ssZ`\n>    - `YYYY-MM-DDTHH:mm:ss.SSSZ`\n> - Columns that can't be mapped to standard fields, will be mapped to **Custom attributes** and added as **products' metadata**. There is no limit on the number of custom attributes that you can import as metadata. \n> - To provide the proper data type, you need to add all custom attributes to the metadata schema **before importing the file**.\n> - **Product attributes** (not custom attributes) need to be separated by a comma and enclosed in double quotes, i.e \"attribute1,attribute2\".\n> - Headers with metadata names **can't contain white-space characters**.\n> - If you import metadata defined in the schema as **arrays (multiple)**, you need to separate each value using a comma, for example:  \n>    - array of strings: \"subscribed,premium\"  \n>    - array of numbers: \"123,234\". \n>    - array of dates: \"2000-01-01,2000-01-02\"",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/a_req_importCSV"
              }
            }
          },
          "description": "The file path is stored in the form `file` header."
        },
        "responses": {
          "200": {
            "description": "Returns ID of the scheduled async action. The response informs you that your request has been accepted and products will be added to the repository asynchronously. To check the import status and result, copy the `async_action_id` from the response and pass it using the [Get Async Action](OpenAPI.json/paths/~1async-actions~1{async_action_id}/get) endpoint.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/a_res_async_actions"
                },
                "examples": {
                  "Async Action": {
                    "value": {
                      "async_action_id": "aa_0a875d56c805df6601"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "PRODUCTS API"
        ]
      },
      "parameters": []
    },
    "/skus/importCSV": {
      "post": {
        "summary": "Import SKUs using CSV",
        "operationId": "post-vouchers-importCSV",
        "description": "Import SKUs into the repository using a CSV file.\n\nThe CSV file has to include headers in the first line. All properties which cannot be mapped to standard SKU fields will be added to the metadata object. You can find an example template [here](https://s3.amazonaws.com/helpscout.net/docs/assets/5902f1c12c7d3a057f88a36d/attachments/627b98d08c9b585083488a4c/Import_SKUS_template.csv). \n\nCurl Example\n<!--\ntitle: \"Example Request\"\nlineNumbers: true\n-->\n```cURL\ncurl -X POST \\\n  https://api.voucherify.io/v1/skus/importCSV \\\n  -F file=@/path/to/skus.csv \\\n  -H \"X-App-Id: c70a6f00-cf91-4756-9df5-47628850002b\" \\\n  -H \"X-App-Token: 3266b9f8-e246-4f79-bdf0-833929b1380c\"\n```\n\n<!-- theme: info -->\n\n> #### Standard SKU fields mapping\n>\n> - **Required** fields are source_id and product_id.\n> - Supported CSV file headers: `product_id,sku,source_id,price,image_url,attributes`\n> - SKU **source_id**'s must be unique in the entire product catalog, no duplicates allowed.\n> - SKU attributes need to be in the form of a stringy-fied json, i.e.`\"{'color':'blue'}\"`. These attributes must be defined in the **product** beforehand in order for you to be able to import them to the SKU.\n> - You can use this method to update the following parameters in bulk: **sku** and the sku **price**.",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/a_req_importCSV"
              }
            }
          },
          "description": "The file path is stored in the form `file` header."
        },
        "responses": {
          "200": {
            "description": "Returns ID of the scheduled async action. The response informs you that your request has been accepted and SKUs will be added to the repository asynchronously. To check the import status and result, copy the `async_action_id` from the response and pass it using the [Get Async Action](OpenAPI.json/paths/~1async-actions~1{async_action_id}/get) endpoint.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/a_res_async_actions"
                },
                "examples": {
                  "Async Action": {
                    "value": {
                      "async_action_id": "aa_0a875d56c805df6601"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "PRODUCTS API"
        ]
      },
      "parameters": []
    },
    "/product-collections/{productCollectionId}": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "example": "pc_41V4DiQQO8YGqj0J2oZD57j4"
          },
          "name": "productCollectionId",
          "in": "path",
          "required": true,
          "description": "A unique product collection ID."
        }
      ],
      "get": {
        "summary": "Get Product Collection",
        "tags": [
          "PRODUCT COLLECTIONS API"
        ],
        "responses": {
          "200": {
            "description": "Returns a products collection object if a valid identifier was provided in the path.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/12_obj_product_collection_object"
                }
              }
            }
          },
          "404": {
            "description": "Not Found. When requesting a product collection that has been deleted or does not exist, the resource will not be returned.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/e_404_not_found"
                },
                "examples": {
                  "Not Found": {
                    "value": {
                      "code": 404,
                      "key": "not_found",
                      "message": "Resource not found",
                      "details": "Cannot find products_collection with id pc_41V4DiQQO8YGqj0J2oZD57j",
                      "request_id": "v-0b4ec2530e9646cb15",
                      "resource_id": "pc_41V4DiQQO8YGqj0J2oZD57j",
                      "resource_type": "products_collection"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-product-collections-product_collection_id",
        "description": "Retrieves the product collection.",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ]
      },
      "delete": {
        "summary": "Delete Product Collection",
        "operationId": "delete-product-collections-product_collection_id",
        "responses": {
          "204": {
            "description": "Returns no content if deletion is successful."
          },
          "400": {
            "description": "Returns an error indicating that the product collection with given ID is in use by other resources.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/e_400_resource_in_use"
                },
                "examples": {
                  "Product Colllection In Use": {
                    "value": {
                      "code": 400,
                      "key": "resource_in_use",
                      "message": "Resource in use",
                      "details": "Resource products_collection with id pc_41V4DiQQO8YGqj0J2oZD57j4 is in use by validation_ruless with ids [val_9TB89AjZeVEJ]",
                      "request_id": "v-0ae3a63aff940ed1b2",
                      "related_object_ids": [
                        "val_9TB89AjZeVEJ"
                      ],
                      "related_object_type": "validation_rules"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Returns an error indicating that the product collection with given ID was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/e_404_not_found"
                },
                "examples": {
                  "Product Collection Not Found": {
                    "value": {
                      "code": 404,
                      "key": "not_found",
                      "message": "Resource not found",
                      "details": "Cannot find products_collection with id pc_41V4DiQQO8YGqj0J2oZD57j",
                      "request_id": "v-0ae3a49261d027b870",
                      "resource_id": "pc_41V4DiQQO8YGqj0J2oZD57j",
                      "resource_type": "products_collection"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "PRODUCT COLLECTIONS API"
        ],
        "description": "This method deletes a product collection.",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ]
      }
    },
    "/product-collections/{productCollectionId}/products": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "productCollectionId",
          "in": "path",
          "required": true,
          "description": "Unique product collection ID."
        }
      ],
      "get": {
        "summary": "List Products in Collection",
        "tags": [
          "PRODUCT COLLECTIONS API"
        ],
        "responses": {
          "200": {
            "description": "Returns a list object if a valid identifier was provided in the path. The list contains products and/or SKUs grouped in the collection with each product's/SKU's details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/11_res_product-collections_productCollectionID_products"
                }
              }
            }
          },
          "404": {
            "description": "Not Found. When requesting a product collection that has been deleted or does not exist, the resource will not be returned.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/e_404_not_found"
                },
                "examples": {
                  "Not Found": {
                    "value": {
                      "code": 404,
                      "key": "not_found",
                      "message": "Resource not found",
                      "details": "Cannot find products_collection with id pc_M5XgaWPx3Sl4v26atA15zFj",
                      "request_id": "v-0b4ec6429e5646d089",
                      "resource_id": "pc_M5XgaWPx3Sl4v26atA15zFj",
                      "resource_type": "products_collection"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-product-collections-product_collection_id-products",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "description": "Retrieves list of products from a products collection; works for both dynamic and static product collections."
      }
    },
    "/product-collections": {
      "get": {
        "summary": "List Product Collections",
        "tags": [
          "PRODUCT COLLECTIONS API"
        ],
        "responses": {
          "200": {
            "description": "Returns a dictionary containing a list of product collections and details about each product collection.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/12_res_product-collections"
                }
              }
            }
          }
        },
        "operationId": "get-product-collections",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "description": "This method returns a list of product collections."
      }
    },
    "/validation-rules": {
      "get": {
        "summary": "List Validation Rules",
        "tags": [
          "VALIDATION RULES API"
        ],
        "responses": {
          "200": {
            "description": "Returns a dictionary of all validation rules.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/13_res_list_validation_rules"
                }
              }
            }
          }
        },
        "operationId": "get-validation-rules",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/page"
          }
        ],
        "description": "Retrieve all validation rules."
      },
      "post": {
        "summary": "Create Validation Rules",
        "operationId": "post-validation-rules",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request. \n\n{\n    \"code\": 400,\n    \"key\": \"invalid_validation_rules\",\n    \"message\": \"Invalid Validation Rule Definition\",\n    \"details\": \"Rule 'customer.metadata' must have a 'property'\"\n}",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                },
                "examples": {
                  "example-1": {
                    "value": {}
                  }
                }
              }
            }
          }
        },
        "tags": [
          "VALIDATION RULES API"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        }
      }
    },
    "/validation-rules/{validationRuleId}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "validationRuleId",
          "in": "path",
          "required": true,
          "description": "A unique validation rule ID."
        }
      ],
      "get": {
        "summary": "Get Validation Rule",
        "tags": [
          "VALIDATION RULES API"
        ],
        "responses": {
          "200": {
            "description": "Returns the validation rule object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/13_obj_validation_rule_object"
                }
              }
            }
          }
        },
        "operationId": "get-validation-rules-validation_rule_id",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "description": "Retrieve the details of a validation rule."
      },
      "put": {
        "summary": "Update Validation Rule",
        "operationId": "put-validation-rules-validation_rule_id",
        "responses": {
          "200": {
            "description": "Returns the validation rule object with the updated parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/13_obj_validation_rule_object"
                }
              }
            }
          }
        },
        "tags": [
          "VALIDATION RULES API"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Validation Rule",
        "operationId": "delete-validation-rules-validation_rule_id",
        "responses": {
          "204": {
            "description": "Returns no content if deletion is successful."
          },
          "404": {
            "description": "Returns an error indicating that the validation rule with given ID was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/e_404_not_found"
                },
                "examples": {
                  "Validation Rule Not Found": {
                    "value": {
                      "code": 404,
                      "key": "not_found",
                      "message": "Resource not found",
                      "details": "Cannot find validation_rules with id val_TGN3rqZ8vEm",
                      "request_id": "v-0ae3b3436346b778be",
                      "resource_id": "val_TGN3rqZ8vEm",
                      "resource_type": "validation_rules"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "VALIDATION RULES API"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "description": "This method deletes a validation rule."
      }
    },
    "/validation-rules/{validationRuleId}/assignments": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "validationRuleId",
          "in": "path",
          "required": true,
          "description": "Unique validation rule ID."
        }
      ],
      "get": {
        "summary": "List Validation Rule Assignments",
        "tags": [
          "VALIDATION RULES API"
        ],
        "responses": {
          "200": {
            "description": "Returns a dictionary of validation rule assignments.  If the validation rule ID provided in the path parameter cannot be found, the endpoint will return an empty `data` array and a total of `0`.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/13_res_validation-rules_validationRuleId_assignments"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "object": "list",
                      "data_ref": "data",
                      "data": [
                        {
                          "id": "asgm_74F7QZoYbUoljwQO",
                          "rule_id": "val_4j7DCRm2IS59",
                          "related_object_id": "v_MBOEmHelKwvykVZ8JcT4TE5Kla5IMJyc",
                          "related_object_type": "voucher",
                          "created_at": "2022-02-17T09:05:34.642Z",
                          "object": "validation_rules_assignment"
                        },
                        {
                          "id": "asgm_zzLBm8mIzGQStXl9",
                          "rule_id": "val_4j7DCRm2IS59",
                          "related_object_id": "v_JtWunK6jUo7X2qOFj0SyRHq4p9tgENlT",
                          "related_object_type": "voucher",
                          "created_at": "2022-02-17T08:18:15.085Z",
                          "object": "validation_rules_assignment"
                        },
                        {
                          "id": "asgm_JztMAws0e0Qx2Xy6",
                          "rule_id": "val_4j7DCRm2IS59",
                          "related_object_id": "camp_kjja4moiVB7hQKPGOT61026Z",
                          "related_object_type": "campaign",
                          "created_at": "2022-02-15T13:26:34.807Z",
                          "object": "validation_rules_assignment"
                        }
                      ],
                      "total": 3
                    }
                  },
                  "No Assignments": {
                    "value": {
                      "object": "list",
                      "data_ref": "data",
                      "data": [],
                      "total": 0
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-validation-rules-validation_rule_id-assignments",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "description": "Retrieve validation rule assignments for a specific validation rule."
      },
      "post": {
        "summary": "Create Validation Rules Assignments",
        "operationId": "post-validation-rules-validation_rule_id-assignments",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "VALIDATION RULES API"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        },
        "description": "Assign validation rule to either one of the following objects: `voucher`, `campaign` or `promotion_tier`."
      }
    },
    "/validation-rules-assignments": {
      "parameters": [],
      "get": {
        "summary": "List Validation Rules' Assignment(s)",
        "tags": [
          "VALIDATION RULES API"
        ],
        "responses": {
          "200": {
            "description": "Returns a dictionary with a data property that contains an array validation rule assignments. Each entry in the array is a separate object. If no more validation rule assignments are available, the resulting array will be empty. The result can be narrowed down according to default filters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/13_res_validation-rules_validationRuleId_assignments"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "object": "list",
                      "data_ref": "data",
                      "data": [
                        {
                          "id": "asgm_2S7Xm4dab4UvYAgm",
                          "rule_id": "val_5ix74ru7e",
                          "related_object_id": "camp_YDsFdX8TgFtT0RUuKEFyhqs3",
                          "related_object_type": "campaign",
                          "created_at": "2022-02-08T10:49:30.534Z",
                          "object": "validation_rules_assignment"
                        },
                        {
                          "id": "asgm_sFV4wEFvldwIvgfb",
                          "rule_id": "val_ZEZmA9oit8aU",
                          "related_object_id": "distr_9QKI02wqgjWyvZXeQkFEPmkkYe",
                          "related_object_type": "distribution",
                          "created_at": "2022-06-29T11:41:07.680Z",
                          "object": "validation_rules_assignment"
                        },
                        {
                          "id": "asgm_8xelF5R4zB8ue168",
                          "rule_id": "val_ggDODO6fakMs",
                          "related_object_id": "ern_xrRuGEV7EW0X8wtMaze3HOfw",
                          "related_object_type": "earning_rule",
                          "created_at": "2022-02-28T12:25:56.783Z",
                          "object": "validation_rules_assignment"
                        },
                        {
                          "id": "asgm_tZaqxeO8gP4q91jG",
                          "rule_id": "val_WB6ETAiFztw5",
                          "related_object_id": "promo_kJliy076IuJYtuYWSHE9fSuT",
                          "related_object_type": "promotion_tier",
                          "created_at": "2022-08-10T10:30:39.986Z",
                          "object": "validation_rules_assignment"
                        },
                        {
                          "id": "asgm_xTMHiyPGSz3rp5m2",
                          "rule_id": "val_2AxnWmW2ra6X",
                          "related_object_id": "rewa_m9hEAu10KsPcLhGXiHG85aY0",
                          "related_object_type": "reward_assignment",
                          "created_at": "2021-12-10T11:38:35.922Z",
                          "object": "validation_rules_assignment"
                        },
                        {
                          "id": "asgm_DhlDn54JwqVFJzR6",
                          "rule_id": "val_eR1c41hu0vUU",
                          "related_object_id": "v_XuF7icVlUcVpHsSY9nG7n7yJa5wx27Va",
                          "related_object_type": "voucher",
                          "created_at": "2022-03-23T07:50:31.068Z",
                          "object": "validation_rules_assignment"
                        }
                      ],
                      "total": 6
                    }
                  },
                  "No Assignments": {
                    "value": {
                      "object": "list",
                      "data_ref": "data",
                      "data": [],
                      "total": 0
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-validation-rules-validation_rule_id-assignments",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "related_object_id",
            "description": "The resource ID to which the validation rule was assigned; this could be, for example, a resource ID of a voucher, campaign, earning rule, reward assignment, promotion tier, or distribution."
          },
          {
            "schema": {
              "type": "string",
              "example": "val_30Qo2rclFi4T"
            },
            "in": "query",
            "name": "rule",
            "description": "Validation rule ID."
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "description": "Sorts the results using one of the filtering options: `-created_at`, `created_at`, where the dash `-` preceding a sorting option means sorting in a descending order.",
            "name": "order"
          }
        ],
        "description": "List all validation rules' assignments or filter the results using the related object ID or the validation rule ID query parameters. \n\n## How to retrieve specific validaiton rule assignments(s)\n\n### Related object ID\n\nTo find an assignment for a particular resource, you can use the ID of the object to which the validation rule was assigned. This could be, for example, an ID of a: voucher, campaign, distribution, reward assignment, earning rule, promotion tier.  \n\n\n<!--\ntitle: \"Request\"\nlineNumbers: true\n-->\n```curl\ncurl -X GET \\\n  -H \"X-App-Id: c70a6f00-cf91-4756-9df5-47628850002b\" \\\n  -H \"X-App-Token: 3266b9f8-e246-4f79-bdf0-833929b1380c\" \\\n  -H \"Content-Type: application/json\" \\\n  https://api.voucherify.io/v1/validation-rules-assignments?related_object_id=promo_kJliy076IuJYtuYWSHE9fSuT\n```\n<!--\ntitle: \"Response\"\nlineNumbers: true\n-->\n```json\n{\n    \"object\": \"list\",\n    \"data_ref\": \"data\",\n    \"data\": [\n        {\n            \"id\": \"asgm_tZaqxeO8gP4q91jG\",\n            \"rule_id\": \"val_WB6ETAiFztw5\",\n            \"related_object_id\": \"promo_kJliy076IuJYtuYWSHE9fSuT\",\n            \"related_object_type\": \"promotion_tier\",\n            \"created_at\": \"2022-08-10T10:30:39.986Z\",\n            \"object\": \"validation_rules_assignment\"\n        }\n    ],\n    \"total\": 1\n}\n```\n\n### Validation rule ID\n\nYou can use the validation rule ID to find assignment(s) for a specific validation rule.\n\n\n<!--\ntitle: \"Request\"\nlineNumbers: true\n-->\n```curl\ncurl -X GET \\\n  -H \"X-App-Id: c70a6f00-cf91-4756-9df5-47628850002b\" \\\n  -H \"X-App-Token: 3266b9f8-e246-4f79-bdf0-833929b1380c\" \\\n  -H \"Content-Type: application/json\" \\\n  https://api.voucherify.io/v1/validation-rules-assignments?rule=val_ZEZmA9oit8aU\n```\n<!--\ntitle: \"Response\"\nlineNumbers: true\n-->\n```json\n{\n    \"object\": \"list\",\n    \"data_ref\": \"data\",\n    \"data\": [\n        {\n            \"id\": \"asgm_vef0G6d9Al0rABxq\",\n            \"rule_id\": \"val_ZEZmA9oit8aU\",\n            \"related_object_id\": \"camp_rRsfatlwN7unSeUIJDCYedal\",\n            \"related_object_type\": \"campaign\",\n            \"created_at\": \"2022-06-29T11:43:52.953Z\",\n            \"object\": \"validation_rules_assignment\"\n        },\n        {\n            \"id\": \"asgm_sFV4wEFvldwIvgfb\",\n            \"rule_id\": \"val_ZEZmA9oit8aU\",\n            \"related_object_id\": \"distr_9QKI02wqgjWyvZXeQkFEPmkkYe\",\n            \"related_object_type\": \"distribution\",\n            \"created_at\": \"2022-06-29T11:41:07.680Z\",\n            \"object\": \"validation_rules_assignment\"\n        },\n        {\n            \"id\": \"asgm_69Qifyv6UZynFIIQ\",\n            \"rule_id\": \"val_ZEZmA9oit8aU\",\n            \"related_object_id\": \"promo_g83qUzYZpfX0OMAFOVoQuOYG\",\n            \"related_object_type\": \"promotion_tier\",\n            \"created_at\": \"2022-06-29T11:29:41.906Z\",\n            \"object\": \"validation_rules_assignment\"\n        }\n    ],\n    \"total\": 3\n}\n```\n"
      }
    },
    "/validation-rules/{validationRuleId}/assignments/{assignmentId}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "validationRuleId",
          "in": "path",
          "required": true,
          "description": "A unique validation rule assignment ID."
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "assignmentId",
          "in": "path",
          "required": true,
          "description": "A unique validation rule ID."
        }
      ],
      "delete": {
        "summary": "Delete Validation Rule Assignment",
        "operationId": "delete-validation-rules-validation_rule_id-assignments-assignment_id",
        "responses": {
          "204": {
            "description": "Returns no content if deletion is successful."
          },
          "404": {
            "description": "Returns an error indicating that the validation rule or validation rule assignment with given ID was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/e_404_not_found"
                },
                "examples": {
                  "Validation Rule Not Found": {
                    "value": {
                      "code": 404,
                      "key": "not_found",
                      "message": "Resource not found",
                      "details": "Cannot find validation_rules with id val_4j7DCRm2IS5",
                      "request_id": "v-0ae3b84bac0683f697",
                      "resource_id": "val_4j7DCRm2IS5",
                      "resource_type": "validation_rules"
                    }
                  },
                  "Validation Rule Assignment Not Found": {
                    "value": {
                      "code": 404,
                      "key": "not_found",
                      "message": "Resource not found",
                      "details": "Cannot find validation_rules_assignment with id asgm_tDN7MJNayjrf1wy",
                      "request_id": "v-0ae3b87eeb9027c916",
                      "resource_id": "asgm_tDN7MJNayjrf1wy",
                      "resource_type": "validation_rules_assignment"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "VALIDATION RULES API"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "description": "This method deletes a validation rule assignment."
      }
    },
    "/segments": {
      "post": {
        "summary": "Create Segment",
        "operationId": "post-segments",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "SEGMENTS API"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ]
      }
    },
    "/segments/{segmentId}": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "example": "seg_DNAOhUtJffvX0f57ajLMFBYR"
          },
          "name": "segmentId",
          "in": "path",
          "required": true,
          "description": "A unique customer segment ID."
        }
      ],
      "get": {
        "summary": "Get Segment",
        "tags": [
          "SEGMENTS API"
        ],
        "responses": {
          "200": {
            "description": "Returns segment object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/14_obj_segment_object"
                },
                "examples": {
                  "Tier Segment": {
                    "value": {
                      "id": "seg_Mv5w1b2FIEbiCCO5ioT8TfI2",
                      "name": "Tiers 2 - Senior",
                      "created_at": "2022-06-09T13:21:26.656Z",
                      "type": "auto-update",
                      "filter": {
                        "junction": "and",
                        "loyalty_points.campaigns.Tiers 2.points": {
                          "conditions": {
                            "$more_than_equal": [
                              41
                            ]
                          }
                        }
                      },
                      "initial_sync_status": "DONE",
                      "object": "segment"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found. When requesting a segment that has been deleted or does not exist, the resource will not be returned.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/e_404_not_found"
                },
                "examples": {
                  "Not Found": {
                    "value": {
                      "code": 404,
                      "key": "not_found",
                      "message": "Resource not found",
                      "details": "Cannot find segment with id seg_Mv5w1b2FIEbiCCO5ioT8TfI",
                      "request_id": "v-0b4d7a37a105797650",
                      "resource_id": "seg_Mv5w1b2FIEbiCCO5ioT8TfI",
                      "resource_type": "segment"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-segments-segment_id",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "description": "Retrieves the segment with given segment ID."
      },
      "delete": {
        "summary": "Delete Segment",
        "operationId": "delete-segments-segment_id",
        "responses": {
          "204": {
            "description": "Returns no content if deletion is successful."
          },
          "404": {
            "description": "Returns an error indicating that the customer segment with given ID was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/e_404_not_found"
                },
                "examples": {
                  "Customer Segment Not Found": {
                    "value": {
                      "code": 404,
                      "key": "not_found",
                      "message": "Resource not found",
                      "details": "Cannot find segment with id seg_DNAOhUtJffvX0f57ajLMFBY",
                      "request_id": "v-0ae3bb40409027cb63",
                      "resource_id": "seg_DNAOhUtJffvX0f57ajLMFBY",
                      "resource_type": "segment"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "SEGMENTS API"
        ],
        "description": "This method deletes a customer segment.",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ]
      }
    },
    "/customers/{customerId}/segments": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "example": "cust_aSeH6JH52DPjYLC1G475Ii0N"
          },
          "name": "customerId",
          "in": "path",
          "required": true,
          "description": "Unique identifier of a customer represented by an internal customer id or customer source id."
        }
      ],
      "get": {
        "summary": "List Customer's Segments",
        "tags": [
          "SEGMENTS API"
        ],
        "responses": {
          "200": {
            "description": "The method returns segment(s) to which the given customer belongs to.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/14_res_customers_customerId_segments"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "object": "list",
                      "data_ref": "data",
                      "data": [
                        {
                          "id": "seg_DNAOhUtJffvX0f57ajLMFBYR",
                          "name": "area code not 123",
                          "object": "segment"
                        },
                        {
                          "id": "seg_IPIYx96l92Op0Sy5MOaImhgw",
                          "name": "not bob.smith@voucherify.io",
                          "object": "segment"
                        },
                        {
                          "id": "seg_1wc52c5z6r1kQ81brO8j9Hk2",
                          "name": "Birthday After Dec 31",
                          "object": "segment"
                        },
                        {
                          "id": "seg_ZEbbT4mq1ePpM9PzR02lcww2",
                          "name": "Start with S",
                          "object": "segment"
                        },
                        {
                          "id": "seg_WJv55MbzQwnr56ttJ2xUrSgt",
                          "name": "Loyalty Card",
                          "object": "segment"
                        }
                      ],
                      "total": 5
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-customers-customer_id-segments",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "description": "Returns the list of segments IDs to which the customer belongs to.  \n\nIf you pass a `customerId` which is not stored and recognized by Voucherify as an existing customer in the system, the response will generate a list of segments that the customer would potentialy qualify for if they were to become a customer tracked in the system."
      }
    },
    "/events": {
      "post": {
        "summary": "Track Custom Event",
        "operationId": "post-events",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "EVENTS API"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          },
          {
            "$ref": "#/components/parameters/X-Client-Application-Id"
          },
          {
            "$ref": "#/components/parameters/X-Client-Token"
          }
        ],
        "description": "To track a custom event, you create an event object.  \n\nThe event object must be linked to the customer who performs the action. If a customer doesn't exist in Voucherify, the customer will be created.  \n\n<!-- theme: info -->\n\n> #### Also available on client-side\n>\n> This method is also accessible through public keys which you can use in client-side​ apps: mobile and web browser apps.\n> - Use `X-Client-Application-Id` as the application ID header.\n> - Use `X-Client-Token` as the appliction secret key header.\n> - Use client-side base URL.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/15_req_track_custom_event"
              }
            }
          },
          "description": "Specify the details of the custom event."
        }
      }
    },
    "/consents": {
      "get": {
        "summary": "List Consents",
        "tags": [
          "CONSENTS API"
        ],
        "responses": {
          "200": {
            "description": "Returns marketing permission groups and opt-in consents.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/18_res_list_consents_GET"
                },
                "examples": {
                  "Marketing-Permissions-Groups-and-Consents": {
                    "value": {
                      "groups": {
                        "object": "list",
                        "data_ref": "data",
                        "data": [
                          {
                            "id": "cnstgr_3c7Z3rcOLv51bsXlRtTZPYj8",
                            "name": "Consent group",
                            "description": "Consent group",
                            "consents": [
                              "cnst_6jQ5XcUOLnj5L7ImQAdBsJ1I",
                              "cnst_VCmucIvAsmDYw2PPAok6bcYy"
                            ],
                            "created_at": "2022-04-13T09:12:47.743Z",
                            "updated_at": "2022-04-13T09:45:46.616Z",
                            "object": "consent_group"
                          },
                          {
                            "id": "cnstgr_EAIakTj5lNG2ZpiQEauGqBlY",
                            "name": "Consent group 2",
                            "description": "Consent group 2",
                            "consents": [
                              "cnst_6jQ5XcUOLnj5L7ImQAdBsJ1I",
                              "cnst_VCmucIvAsmDYw2PPAok6bcYy"
                            ],
                            "created_at": "2022-04-13T10:03:46.564Z",
                            "updated_at": null,
                            "object": "consent_group"
                          }
                        ],
                        "total": 2
                      },
                      "consents": {
                        "object": "list",
                        "data_ref": "data",
                        "data": [
                          {
                            "id": "cnst_6jQ5XcUOLnj5L7ImQAdBsJ1I",
                            "name": "Consent",
                            "description": "Consent for marketing",
                            "category": "New",
                            "created_at": "2022-04-13T09:11:27.037Z",
                            "updated_at": null,
                            "object": "consent"
                          },
                          {
                            "id": "cnst_VCmucIvAsmDYw2PPAok6bcYy",
                            "name": "Consent 2",
                            "description": "Consent 2",
                            "category": "Trial",
                            "created_at": "2022-04-13T09:45:37.597Z",
                            "updated_at": null,
                            "object": "consent"
                          }
                        ],
                        "total": 2
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-consents",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "description": "List the Marketing Permission definitions within the project along with opt-in consents."
      }
    },
    "/consents#": {
      "get": {
        "summary": "List Consents (client)",
        "tags": [
          "CONSENTS API"
        ],
        "responses": {
          "200": {
            "description": "Returns marketing permission groups and opt-in consents.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/18_res_list_consents_GET"
                },
                "examples": {
                  "Marketing-Permissions-Groups-and-Consents": {
                    "value": {
                      "groups": {
                        "object": "list",
                        "data_ref": "data",
                        "data": [
                          {
                            "id": "cnstgr_3c7Z3rcOLv51bsXlRtTZPYj8",
                            "name": "Consent group",
                            "description": "Consent group",
                            "consents": [
                              "cnst_6jQ5XcUOLnj5L7ImQAdBsJ1I",
                              "cnst_VCmucIvAsmDYw2PPAok6bcYy"
                            ],
                            "created_at": "2022-04-13T09:12:47.743Z",
                            "updated_at": "2022-04-13T09:45:46.616Z",
                            "object": "consent_group"
                          },
                          {
                            "id": "cnstgr_EAIakTj5lNG2ZpiQEauGqBlY",
                            "name": "Consent group 2",
                            "description": "Consent group 2",
                            "consents": [
                              "cnst_6jQ5XcUOLnj5L7ImQAdBsJ1I",
                              "cnst_VCmucIvAsmDYw2PPAok6bcYy"
                            ],
                            "created_at": "2022-04-13T10:03:46.564Z",
                            "updated_at": null,
                            "object": "consent_group"
                          }
                        ],
                        "total": 2
                      },
                      "consents": {
                        "object": "list",
                        "data_ref": "data",
                        "data": [
                          {
                            "id": "cnst_6jQ5XcUOLnj5L7ImQAdBsJ1I",
                            "name": "Consent",
                            "description": "Consent for marketing",
                            "category": "New",
                            "created_at": "2022-04-13T09:11:27.037Z",
                            "updated_at": null,
                            "object": "consent"
                          },
                          {
                            "id": "cnst_VCmucIvAsmDYw2PPAok6bcYy",
                            "name": "Consent 2",
                            "description": "Consent 2",
                            "category": "Trial",
                            "created_at": "2022-04-13T09:45:37.597Z",
                            "updated_at": null,
                            "object": "consent"
                          }
                        ],
                        "total": 2
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-consents#",
        "description": "List the Marketing Permission definitions within the project along with opt-in consents.",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-Client-Application-Id"
          },
          {
            "$ref": "#/components/parameters/X-Client-Token"
          },
          {
            "$ref": "#/components/parameters/Origin"
          }
        ]
      }
    },
    "/async-actions": {
      "get": {
        "summary": "List Async Actions",
        "tags": [
          "ASYNC ACTIONS API"
        ],
        "responses": {
          "200": {
            "description": "Returns a list of all scheduled asynchronous actions and detailed information for each scheduled action. Note that a status `DONE`doesn't include the result of the completed action. If you need more information about the result, use the ID of the respective async action to call the [Get async action](OpenAPI.json/paths/~1async-actions~1{async_action_id}/get) endpoint.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/17_res_list_async_actions_GET"
                },
                "examples": {
                  "List-Async-Actions": {
                    "value": {
                      "object": "list",
                      "data_ref": "async_actions",
                      "async_actions": [
                        {
                          "id": "aa_0ae2af6a38161f8c79",
                          "type": "CAMPAIGN.VOUCHERS_DELETE",
                          "status": "DONE",
                          "created_at": "2022-04-07T11:34:39.072Z",
                          "object": "async_action"
                        },
                        {
                          "id": "aa_0ae27a55b696a4e0f0",
                          "type": "CUSTOMERS.BULK_UPDATE",
                          "status": "DONE",
                          "created_at": "2022-04-07T07:42:44.442Z",
                          "object": "async_action"
                        },
                        {
                          "id": "aa_0adad13d6f057f088e",
                          "type": "CAMPAIGN.VOUCHERS_IMPORT",
                          "status": "DONE",
                          "created_at": "2022-04-01T08:54:35.196Z",
                          "object": "async_action"
                        },
                        {
                          "id": "aa_0adacc81de057f084c",
                          "type": "CAMPAIGN.VOUCHERS_IMPORT",
                          "status": "DONE",
                          "created_at": "2022-04-01T08:33:54.552Z",
                          "object": "async_action"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-async-actions",
        "description": "Track asynchronous operations scheduled in your project.  \n\nThe table below lists the possible types of async actions. The types are different for each endpoint generating the async action. If you would like to learn more about importing data into Voucherify, read more [here](https://support.voucherify.io/article/574-data-import).\n\n| **Types by Context** | **Endpoint** | **Dashboard** |\n|:---|:---|:---|\n| **CAMPAIGN** |  |  |\n| CAMPAIGN.VOUCHERS_IMPORT<br>CAMPAIGN.VOUCHERS_IMPORT_CSV<br>CAMPAIGN.VOUCHERS_UPDATE<br>CAMPAIGN.VOUCHERS_DELETE<br>CAMPAIGN.VOUCHERS_GENERATE | POST   [/campaigns/{campaign_id}/import](OpenAPI.json/paths/~1campaigns~1{campaign_id}~1import/post)<br>POST   [/campaigns/{campaign_id}/importCSV](OpenAPI.json/paths/~1campaigns~1{campaign_id}~1importCSV/post)<br>~PUT    [/campaigns/{campaign_id}](OpenAPI.json/paths/~1campaigns~1{campaign_id}/put)~<br>DELETE [/campaigns/{campaign_id}](OpenAPI.json/paths/~1campaigns~1{campaign_id}/delete})<br>POST   [/campaigns](OpenAPI.json/paths/~1campaigns/post) | NA<br>[Campaigns &rarr; Import CSV file](https://support.voucherify.io/article/45-import-codes-and-share-them-digitally)<br>~NA~<br>[Campaigns &rarr; Delete](https://support.voucherify.io/article/64-maintenance#delete-campaign)<br>[Campaign Manager](https://support.voucherify.io/article/46-bulk-unique-codes-campaign) |\n| **CUSTOMERS** |  |  |\n| CUSTOMERS.IMPORT_CSV<br>CUSTOMERS.BULK_UPDATE<br>CUSTOMERS.METADATA_UPDATE<br>CUSTOMERS.METADATA_KEY_PURGE | POST [/customers/importCSV](OpenAPI.json/paths/~1customers~1importCSV/post)<br>POST [/customers/bulk/async](OpenAPI.json/paths/~1customers~1bulk~1async/post)<br>POST [/customers/metadata/async](OpenAPI.json/paths/~1customers~1metadata~1async/post)<br>NA | [Customers &rarr; Import CSV](https://support.voucherify.io/article/67-how-to-import-my-customers#csv-import)<br>NA<br>NA<br>[Project Settings](https://support.voucherify.io/article/99-schema-validation-metadata#maintenance) |\n| **PRODUCTS** |  |  |\n| PRODUCTS.BULK_UPDATE<br>PRODUCTS.METADATA_UPDATE<br>PRODUCTS.METADATA_KEY_PURGE<br>PRODUCTS.IMPORT_CSV<br>SKUS.IMPORT_CSV | POST [/products/bulk/async](OpenAPI.json/paths/~1products~1bulk~1async/post)<br>POST [/products/metadata/async](OpenAPI.json/paths/~1products~1metadata~1async/post)<br>NA<br>POST [/products/importCSV](OpenAPI.json/paths/~1products~1importCSV/post)<br>POST [/skus/importCSV](OpenAPI.json/paths/~1skus~1importCSV/post) | NA<br>NA<br>[Project Settings](https://support.voucherify.io/article/99-schema-validation-metadata#maintenance)<br>[Products &rarr; Import CSV file](https://support.voucherify.io/article/574-data-import)<br>[Products &rarr; Import CSV file](https://support.voucherify.io/article/574-data-import) |\n| **VOUCHERS** |  |  |\n| VOUCHERS.IMPORT<br>VOUCHERS.IMPORT_CSV<br>VOUCHERS.BULK_UPDATE<br>VOUCHERS.METADATA_UPDATE<br>VOUCHERS.METADATA_KEY_PURGE | POST [/vouchers/import](OpenAPI.json/paths/~1vouchers~1import/post)<br>POST [/vouchers/importCSV](OpenAPI.json/paths/~1vouchers~1importCSV/post)<br>POST [/vouchers/bulk/async](OpenAPI.json/paths/~1vouchers~1bulk~1async/post)<br>POST [/vouchers/metadata/async](OpenAPI.json/paths/~1vouchers~1metadata~1async/post)<br>NA | NA<br>[Vouchers &rarr; Import CSV file](https://support.voucherify.io/article/45-import-codes-and-share-them-digitally)<br>NA<br>NA<br>[Project Settings](https://support.voucherify.io/article/99-schema-validation-metadata#maintenance) |",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "limit",
            "description": "Limit the number of asynchronous actions that the API returns in the response."
          },
          {
            "schema": {
              "type": "string",
              "example": "end_date=2021-09-08T13:52:18.227Z",
              "format": "date-time"
            },
            "in": "query",
            "name": "end_date",
            "description": "Limits results to actions scheduled before the `end_date`. The date format needs to be consistent with ISO 8601 format (`2016-11-16T14:14:31Z` or `2016-11-16`). "
          }
        ]
      }
    },
    "/async-actions/{async_action_id}": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "example": "aa_0afb3d009a55814a48"
          },
          "name": "async_action_id",
          "in": "path",
          "required": true,
          "description": "Unique ID of the asynchronous operation."
        }
      ],
      "get": {
        "summary": "Get Async Action",
        "tags": [
          "ASYNC ACTIONS API"
        ],
        "responses": {
          "200": {
            "description": "Returns detailed information about the async action result.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/17_obj_async_action_object"
                },
                "examples": {
                  "CAMPAIGN.VOUCHERS_IMPORT": {
                    "value": {
                      "id": "aa_0af9b22296cf473a10",
                      "type": "CAMPAIGN.VOUCHERS_IMPORT",
                      "status": "DONE",
                      "result": {
                        "message": "0 voucher(s) imported successfully, 3 failed.",
                        "failed": [
                          {
                            "code": "CODE9",
                            "reason": "unit: must be a number, property is required (actual value is 'EUR')"
                          },
                          {
                            "code": "CODE8",
                            "reason": "unit: must be a number, property is required (actual value is 'EUR')"
                          },
                          {
                            "code": "CODE7",
                            "reason": "unit: must be a number, property is required (actual value is 'EUR')"
                          }
                        ]
                      },
                      "created_at": "2022-04-25T08:31:36.028Z",
                      "object": "async_action"
                    }
                  },
                  "CAMPAIGN.VOUCHERS_IMPORT_CSV": {
                    "value": {
                      "id": "aa_0af9b74a7e540eb36a",
                      "type": "CAMPAIGN.VOUCHERS_IMPORT_CSV",
                      "status": "DONE",
                      "result": {
                        "message": "0 voucher(s) imported successfully, 2 failed.",
                        "failed": [
                          {
                            "code": "CODE9",
                            "row": 1,
                            "reason": "unit: must be a number, property is required (actual value is 'EUR')"
                          },
                          {
                            "code": "CODE8",
                            "row": 2,
                            "reason": "unit: must be a number, property is required (actual value is 'EUR')"
                          }
                        ]
                      },
                      "created_at": "2022-04-25T08:54:07.609Z",
                      "object": "async_action"
                    }
                  },
                  "CAMPAIGN.VOUCHERS_DELETE": {
                    "value": {
                      "id": "aa_0af497bf848a1a5a42",
                      "type": "CAMPAIGN.VOUCHERS_DELETE",
                      "status": "DONE",
                      "result": {
                        "message": "Deleted 1000 vouchers."
                      },
                      "created_at": "2022-04-21T09:23:54.514Z",
                      "object": "async_action"
                    }
                  },
                  "CAMPAIGN.VOUCHERS_UPDATE": {
                    "value": {
                      "id": "aa_0a9bb0e25bd78fbb82",
                      "type": "CAMPAIGN.VOUCHERS_UPDATE",
                      "status": "DONE",
                      "result": {
                        "message": "Updated 1 vouchers."
                      },
                      "created_at": "2022-02-11T08:08:54.895Z",
                      "object": "async_action"
                    }
                  },
                  "CAMPAIGN.VOUCHERS_GENERATE": {
                    "value": {
                      "id": "aa_0af48fb5e90c409716",
                      "type": "CAMPAIGN.VOUCHERS_GENERATE",
                      "status": "DONE",
                      "result": {
                        "message": "Generated 1000 vouchers."
                      },
                      "created_at": "2022-04-21T08:48:47.524Z",
                      "object": "async_action"
                    }
                  },
                  "CUSTOMERS.IMPORT_CSV": {
                    "value": {
                      "id": "aa_0af9c8052b140ecd77",
                      "type": "CUSTOMERS.IMPORT_CSV",
                      "status": "DONE",
                      "result": {
                        "message": "0 customer(s) imported successfully, 1 failed.",
                        "failed": [
                          {
                            "name": "Bob Smith",
                            "row": 1,
                            "reason": "acquisition_channel: must be a string, property is required, must be equal to one of Facebook,Twitter,Website (actual value is '3')"
                          }
                        ]
                      },
                      "created_at": "2022-04-25T10:07:13.068Z",
                      "object": "async_action"
                    }
                  },
                  "CUSTOMERS.BULK_UPDATE": {
                    "value": {
                      "id": "aa_0afb2c1ed4140e8443",
                      "type": "CUSTOMERS.BULK_UPDATE",
                      "status": "DONE",
                      "result": {
                        "results": [
                          {
                            "source_id": "name.lastname@gmail.com",
                            "updated": true,
                            "found": true
                          },
                          {
                            "source_id": "name.lastname@voucherify.io",
                            "updated": true,
                            "found": true
                          },
                          {
                            "source_id": "name.lastname@yahoo.com",
                            "updated": true,
                            "found": true
                          }
                        ]
                      },
                      "created_at": "2022-04-26T12:03:02.608Z",
                      "object": "async_action"
                    }
                  },
                  "CUSTOMERS.METADATA_UPDATE": {
                    "value": {
                      "id": "aa_0afb2e58508f4731db",
                      "type": "CUSTOMERS.METADATA_UPDATE",
                      "status": "DONE",
                      "result": {
                        "results": [
                          {
                            "source_id": "name.lastname@gmail.com",
                            "updated": false,
                            "found": true
                          },
                          {
                            "source_id": "name.lastname@yahoo.com",
                            "updated": false,
                            "found": true
                          }
                        ]
                      },
                      "created_at": "2022-04-26T12:12:45.762Z",
                      "object": "async_action"
                    }
                  },
                  "CUSTOMERS.METADATA_KEY_PURGE": {
                    "value": {
                      "id": "aa_0afb30ce65158134b9",
                      "type": "CUSTOMERS.METADATA_KEY_PURGE",
                      "status": "DONE",
                      "result": {
                        "message": "Updated 2 customers."
                      },
                      "created_at": "2022-04-26T12:23:30.964Z",
                      "object": "async_action"
                    }
                  },
                  "PRODUCTS.BULK_UPDATE": {
                    "value": {
                      "id": "aa_0afb34d59e540e8953",
                      "type": "PRODUCTS.BULK_UPDATE",
                      "status": "DONE",
                      "result": {
                        "results": [
                          {
                            "source_id": "123-567-3433",
                            "updated": false,
                            "found": true
                          },
                          {
                            "source_id": "test_volleyball",
                            "updated": true,
                            "found": true
                          }
                        ]
                      },
                      "created_at": "2022-04-26T12:41:06.937Z",
                      "object": "async_action"
                    }
                  },
                  "PRODUCTS.METADATA_UPDATE": {
                    "value": {
                      "id": "aa_0afb373b0f540e8ab9",
                      "type": "PRODUCTS.METADATA_UPDATE",
                      "status": "DONE",
                      "result": {
                        "results": [
                          {
                            "source_id": "123-567-3433",
                            "updated": true,
                            "found": true
                          },
                          {
                            "source_id": "test_volleyball",
                            "updated": true,
                            "found": true
                          }
                        ]
                      },
                      "created_at": "2022-04-26T12:51:35.101Z",
                      "object": "async_action"
                    }
                  },
                  "PRODUCTS.METADATA_KEY_PURGE": {
                    "value": {
                      "id": "aa_0afb3811c1d581419c",
                      "type": "PRODUCTS.METADATA_KEY_PURGE",
                      "status": "DONE",
                      "result": {
                        "message": "Updated 1 products."
                      },
                      "created_at": "2022-04-26T12:55:14.951Z",
                      "object": "async_action"
                    }
                  },
                  "VOUCHERS.IMPORT": {
                    "value": {
                      "id": "aa_0afb38bf938f4737e9",
                      "type": "VOUCHERS.IMPORT",
                      "status": "DONE",
                      "result": {
                        "message": "0 voucher(s) imported successfully, 3 failed.",
                        "failed": [
                          {
                            "code": "PROMO-CODE31",
                            "reason": "unit: must be a number, property is required (actual value is 'EUR')"
                          },
                          {
                            "code": "PROMO-CODE21",
                            "reason": "unit: must be a number, property is required (actual value is 'EUR')"
                          },
                          {
                            "code": "GIFT-CARD-100-1",
                            "reason": "unit: must be a number, property is required (actual value is 'EUR')"
                          }
                        ]
                      },
                      "created_at": "2022-04-26T12:58:12.943Z",
                      "object": "async_action"
                    }
                  },
                  "VOUCHERS.IMPORT_CSV": {
                    "value": {
                      "id": "aa_0aeb9d677ad5be8f49",
                      "type": "VOUCHERS.IMPORT_CSV",
                      "status": "DONE",
                      "result": {
                        "message": "3 voucher(s) imported successfully, 2 failed.",
                        "failed": [
                          {
                            "code": "CODE4",
                            "row": 4,
                            "reason": "Voucher type must be one of DISCOUNT_VOUCHER, GIFT_VOUCHER, LOYALTY_CARD, LUCKY_DRAW_CODE"
                          },
                          {
                            "code": "CODE5",
                            "row": 5,
                            "reason": "Invalid Discount Type"
                          }
                        ]
                      },
                      "created_at": "2022-04-14T10:02:17.451Z",
                      "object": "async_action"
                    }
                  },
                  "VOUCHERS.BULK_UPDATE": {
                    "value": {
                      "id": "aa_0afb3c4274cf4739f4",
                      "type": "VOUCHERS.BULK_UPDATE",
                      "status": "DONE",
                      "result": {
                        "results": [
                          {
                            "code": "PROMO-CODE81019",
                            "updated": false,
                            "found": false
                          },
                          {
                            "code": "PROMO-CODE7264786",
                            "updated": false,
                            "found": false
                          }
                        ]
                      },
                      "created_at": "2022-04-26T13:13:33.395Z",
                      "object": "async_action"
                    }
                  },
                  "VOUCHERS.METADATA_UPDATE": {
                    "value": {
                      "id": "aa_0afb3a817b940e8ca1",
                      "type": "VOUCHERS.METADATA_UPDATE",
                      "status": "DONE",
                      "result": {
                        "results": [
                          {
                            "code": "CODE4",
                            "updated": true,
                            "found": true
                          },
                          {
                            "code": "CODE3",
                            "updated": true,
                            "found": true
                          }
                        ]
                      },
                      "created_at": "2022-04-26T13:05:53.646Z",
                      "object": "async_action"
                    }
                  },
                  "VOUCHERS.METADATA_KEY_PURGE": {
                    "value": {
                      "id": "aa_0afb3d009a55814a48",
                      "type": "VOUCHERS.METADATA_KEY_PURGE",
                      "status": "DONE",
                      "result": {
                        "message": "Updated 2 vouchers."
                      },
                      "created_at": "2022-04-26T13:16:48.105Z",
                      "object": "async_action"
                    }
                  },
                  "SKUS.IMPORT_CSV": {
                    "value": {
                      "id": "aa_0b0e6c284557d624ba",
                      "type": "SKUS.IMPORT_CSV",
                      "status": "DONE",
                      "result": {
                        "message": "2 sku(s) imported successfully, 6 failed.",
                        "failed": [
                          {
                            "row": 2,
                            "reason": "Resource sku with id size-small is in use by products with ids [prod_0b0e3441c2462eff2c]"
                          },
                          {
                            "row": 3,
                            "reason": "Resource sku with id size-medium is in use by products with ids [prod_0b0e3441c2462eff2c]"
                          },
                          {
                            "row": 4,
                            "reason": "Resource sku with id size-large is in use by products with ids [prod_0b0e3441c2462eff2c]"
                          },
                          {
                            "row": 5,
                            "reason": "Invalid attributes key. Allowed attributes: blue,production"
                          },
                          {
                            "row": 6,
                            "reason": "Invalid attributes key. Allowed attributes: blue,production"
                          },
                          {
                            "row": 7,
                            "reason": "Invalid attributes key. Allowed attributes: blue,production"
                          }
                        ]
                      },
                      "created_at": "2022-05-11T10:53:57.909Z",
                      "updated_at": "2022-05-11T10:53:59.107Z",
                      "processing_time": 1198,
                      "request_id": "v-0b0e6c2780144355c1",
                      "object": "async_action"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Returns an error indicating that the async action with given ID was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/e_404_not_found"
                },
                "examples": {
                  "Async-Action-Not-Found": {
                    "value": {
                      "code": 404,
                      "key": "not_found",
                      "message": "Resource not found",
                      "details": "Cannot find async_action with id aa_0aeb82bd55d5beffb",
                      "request_id": "v-0aeb88df54c82af560",
                      "resource_id": "aa_0aeb82bd55d5beffb",
                      "resource_type": "async_action"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-async-actions-async_action_id",
        "description": "Check the result of a scheduled asynchronous operation.  \n\nThe table below lists the possible types of async actions. The types are different for each endpoint generating the async action.If you would like to learn more about importing data into Voucherify, read more [here](https://support.voucherify.io/article/574-data-import).\n\n| **Types by Context** | **Endpoint** | **Dashboard** |\n|:---|:---|:---|\n| **CAMPAIGN** |  |  |\n| CAMPAIGN.VOUCHERS_IMPORT<br>CAMPAIGN.VOUCHERS_IMPORT_CSV<br>CAMPAIGN.VOUCHERS_UPDATE<br>CAMPAIGN.VOUCHERS_DELETE<br>CAMPAIGN.VOUCHERS_GENERATE | POST   [/campaigns/{campaign_id}/import](OpenAPI.json/paths/~1campaigns~1{campaign_id}~1import/post)<br>POST   [/campaigns/{campaign_id}/importCSV](OpenAPI.json/paths/~1campaigns~1{campaign_id}~1importCSV/post)<br>~PUT    [/campaigns/{campaign_id}](OpenAPI.json/paths/~1campaigns~1{campaign_id}/put)~<br>DELETE [/campaigns/{campaign_id}](OpenAPI.json/paths/~1campaigns~1{campaign_id}/delete})<br>POST   [/campaigns](OpenAPI.json/paths/~1campaigns/post) | NA<br>[Campaigns &rarr; Import CSV file](https://support.voucherify.io/article/45-import-codes-and-share-them-digitally)<br>~NA~<br>[Campaigns &rarr; Delete](https://support.voucherify.io/article/64-maintenance#delete-campaign)<br>[Campaign Manager](https://support.voucherify.io/article/46-bulk-unique-codes-campaign) |\n| **CUSTOMERS** |  |  |\n| CUSTOMERS.IMPORT_CSV<br>CUSTOMERS.BULK_UPDATE<br>CUSTOMERS.METADATA_UPDATE<br>CUSTOMERS.METADATA_KEY_PURGE | POST [/customers/importCSV](OpenAPI.json/paths/~1customers~1importCSV/post)<br>POST [/customers/bulk/async](OpenAPI.json/paths/~1customers~1bulk~1async/post)<br>POST [/customers/metadata/async](OpenAPI.json/paths/~1customers~1metadata~1async/post)<br>NA | [Customers &rarr; Import CSV](https://support.voucherify.io/article/67-how-to-import-my-customers#csv-import)<br>NA<br>NA<br>[Project Settings](https://support.voucherify.io/article/99-schema-validation-metadata#maintenance) |\n| **PRODUCTS** |  |  |\n| PRODUCTS.BULK_UPDATE<br>PRODUCTS.METADATA_UPDATE<br>PRODUCTS.METADATA_KEY_PURGE<br>PRODUCTS.IMPORT_CSV<br>SKUS.IMPORT_CSV | POST [/products/bulk/async](OpenAPI.json/paths/~1products~1bulk~1async/post)<br>POST [/products/metadata/async](OpenAPI.json/paths/~1products~1metadata~1async/post)<br>NA<br>POST [/products/importCSV](OpenAPI.json/paths/~1products~1importCSV/post)<br>POST [/skus/importCSV](OpenAPI.json/paths/~1skus~1importCSV/post) | NA<br>NA<br>[Project Settings](https://support.voucherify.io/article/99-schema-validation-metadata#maintenance)<br>[Products &rarr; Import CSV file](https://support.voucherify.io/article/574-data-import)<br>[Products &rarr; Import CSV file](https://support.voucherify.io/article/574-data-import) |\n| **VOUCHERS** |  |  |\n| VOUCHERS.IMPORT<br>VOUCHERS.IMPORT_CSV<br>VOUCHERS.BULK_UPDATE<br>VOUCHERS.METADATA_UPDATE<br>VOUCHERS.METADATA_KEY_PURGE | POST [/vouchers/import](OpenAPI.json/paths/~1vouchers~1import/post)<br>POST [/vouchers/importCSV](OpenAPI.json/paths/~1vouchers~1importCSV/post)<br>POST [/vouchers/bulk/async](OpenAPI.json/paths/~1vouchers~1bulk~1async/post)<br>POST [/vouchers/metadata/async](OpenAPI.json/paths/~1vouchers~1metadata~1async/post)<br>NA | NA<br>[Vouchers &rarr; Import CSV file](https://support.voucherify.io/article/45-import-codes-and-share-them-digitally)<br>NA<br>NA<br>[Project Settings](https://support.voucherify.io/article/99-schema-validation-metadata#maintenance) |",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ]
      }
    },
    "/exports": {
      "post": {
        "summary": "Create Export",
        "operationId": "post-exports",
        "responses": {
          "200": {
            "description": "Returns export object and URL of CSV file.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/16_obj_export_object"
                }
              }
            }
          },
          "400": {
            "description": "Returns an error if an invalid payload is provided.",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/e_400_invalid_payload"
                    },
                    {
                      "$ref": "#/components/schemas/e_400_invalid_export_fields"
                    }
                  ]
                },
                "examples": {
                  "Invalid Export Fields": {
                    "value": {
                      "code": 400,
                      "key": "invalid_export_fields",
                      "message": "Invalid Export",
                      "details": "Unsupported field used. Allowed fields: id, object, date, voucher_code, campaign, promotion_tier_id, customer_id, customer_source_id, customer_name, tracking_id, order_amount, gift_amount, loyalty_points, result, failure_code, failure_message, metadata",
                      "request_id": "v-0afdb603910a1a14e0"
                    }
                  },
                  "Invalid Payload": {
                    "value": {
                      "code": 400,
                      "key": "invalid_payload",
                      "message": "Invalid payload",
                      "details": "Property .exported_object should be equal to one of the allowed values [ voucher, redemption, customer, publication, order, points_expiration ]",
                      "request_id": "v-0afdb5bd68d20bdb81"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/16_req_create_export_POST"
              }
            }
          },
          "description": "Specify the details of the export that you would like to create."
        },
        "tags": [
          "EXPORTS API"
        ],
        "description": "Create export object. The export can be any of the following types: `voucher`, `redemption`, `publication`, `customer`, `order`, or `points_expiration`.  \n\nUsing the `parameters` body parameter, you can narrow down which fields to export and how to filter the results. The fields are an array of strings containing the data that you would like to export. These fields define the headers in the CSV file. The array can be a combintation of any of the following available fields:\n\n## Orders  \n\n\n\n| **Field** | **Definition** | **Example Export** |\n|:---|:---|:---|\n| id | Unique order ID. | ord_A69RIxEdRsPuC6i8gFGVHUft |\n| source_id | Unique order source ID. | 8638 |\n| created_at | Timestamp in ISO 8601 format representing the date and time when the order was created. | 2022-03-09T09:16:32.521Z |\n| updated_at | Timestamp in ISO 8601 format representing the date and time when the order was last updated. | 2022-03-09T09:16:33.331Z |\n| status | Order status. | `PAID`, `CREATED`, `FULFILLED`, `CANCELED` |\n| amount | Total amount of order items. | 7700 |\n| discount_amount | Represents total amount of the discount applied to whole cart. | 500 |\n| items_discount_amount | Represents total amount of the discount applied to order line items. | 100 |\n| total_discount_amount | All discounts applied to the order including discounts applied to particular order line items and discounts applied to the whole cart. | 600 |\n| total_amount | Total order amount after applying all discounts. | 7100 |\n| customer_id | Customer unique ID. | cust_2G4fUQdCXUqp35nXNleav7bO |\n| referrer_id | Referrer unique ID. | cust_IkrTR674vvQvr9a4rDMiqglY |\n| metadata | Order metadata; expressed as metadata.X, where X is the name of the custom metadata property. | 1 |\n\n## Vouchers  \n\n| **Field** | **Definition** | **Example Export** |\n|:---|:---|:---|\n| id | Unique voucher ID. | v_HSnGD2vNIHYighTQxwcB4dtVAv8VOmZD |\n| code | Unique voucher code. | WELCOME100 |\n| voucher_type | Type of voucher. | `DISCOUNT_VOUCHER`, `GIFT_VOUCHER`, `LOYALTY_CARD` |\n| value | Value of voucher. | `DISCOUNT_VOUCHER` : amount, percent, unit<br>`GIFT_VOUCHER`: amount left to spend<br>`LOYALTY_CARD`: available usable points |\n| discount_type | The type of discount for a `DISCOUNT_VOUCHER`. | `AMOUNT`, `PERCENT`, `UNIT`, `FIXED` |\n| campaign | Unique campaign name. | Summer Discounts 20% off |\n| category | Tag defining the category that this voucher belongs to. |  |\n| start_date | Start date defines when the code starts to be active. Activation timestamp in ISO 8601 format. Voucher is _inactive_ before this date. | 2020-12-10T23:00:00.000Z |\n| expiration_date | Expiration date defines when the code expires. Expiration timestamp in ISO 8601 format. Voucher is _inactive_ after this date. | 2023-12-31T23:00:00.000Z |\n| gift_balance | Amount left to spend. | 1000 |\n| loyalty_balance | Available usable points. | 2000 |\n| redemption_quantity | Maximum number of times a voucher can be redeemed. | 2 |\n| redemption_count | Total redemptions. | 59 |\n| active | Boolean indicating whether the voucher is available for use. | `true`, `false` |\n| qr_code | URL to QR representation of encrypted code. |  |\n| bar_code | URL to barcode representation of encrypted code. |  |\n| metadata | Custom voucher metadata. |  |\n| is_referral_code | Boolean indicating whether the voucher is a referral code. | `true`, `false` |\n| created_at | Timestamp in ISO 8601 format representing the date and time when the voucher was created. | 2022-04-14T09:55:46.814Z |\n| updated_at | Timestamp in ISO 8601 format representing the date and time when the voucher was last updated. | 2022-04-14T10:02:18.036Z |\n| validity_timeframe_interval | Defines the intervening time between two time points in ISO 8601 format, expressed as a duration. For example, a voucher with an interval of `P2D` will be active every other day. | P2D |\n| validity_timeframe_duration | Defines the amount of time the voucher will be active in ISO 8601 format. For example, a voucher with a duration of `PT1H` will be valid for a duration of one hour. | PT1H |\n| validity_day_of_week | Array corresponding to the particular days of the week in which the voucher is valid. | \"1,2,3,4,5\" |\n| discount_amount_limit | For `PERCENT` discount type, this is the maximum threshold allowed to be deducted. | 50 |\n| campaign_id | Parent campaign ID. | camp_7s3uXI44aKfIk5IhmeOPr6ic |\n| additional_info | An optional field to keep any extra textual information about the code such as a code description and details. |  |\n| customer_id | Unique customer ID of the assigned owner to whom the voucher was published. | cust_7iUa6ICKyU6gH40dBU25kQU1 |\n| discount_unit_type | For `UNIT` discount type, either a shipping or product ID for a `UNIT` discount with one product. | prod_5h1pp1ng, prod_0a9f9aeddb019a42db |\n| discount_unit_effect | `UNIT` discount effect. | `ADD_MANY_ITEMS`, `ADD_MISSING_ITEMS`,`ADD_NEW_ITEMS` |\n| customer_source_id | Unique customer source id of the assigned owner to whom the voucher was published. | name.lastname@email.com |\n\n\n## Publications\n\n| **Field** | **Definition** | **Example Export** |\n|:---|:---|:---|\n| voucher_code | Unique voucher code. | WELCOME100 |\n| customer_id | Customer unique ID. | cust_7iUa6ICKyU6gH40dBU25kQU1 |\n| customer_source_id | Unique customer source id of the assigned owner to whom the voucher was published. | name.lastname@email.com |\n| date | Timestamp in ISO 8601 format representing the date and time when the voucher was published. | 2022-04-28T10:19:30.792Z |\n| channel | Publication channel. | voucherify-website |\n| campaign | Unique campaign name. | Summer Discounts 20% off |\n| is_winner |  |  |\n| metadata | Custom publication metadata. |  |\n\n## Redemptions\n\n| **Field** | **Definition** | **Example Export** |\n|:---|:---|:---|\n| id | Unique redemption ID. | r_0acf3a6dae00e679c8, rf_0acf3a495740e679b8 |\n| object | Object being exported; by default `redemption`. | redemption |\n| date | Timestamp in ISO 8601 format representing the date and time when the voucher was redeemed. | 2022-03-23T08:52:24.867Z |\n| voucher_code | Unique voucher code redeemed. | WELCOME100 |\n| campaign | Parent campaign name of voucher if applicable. | Summer Discounts 20% off |\n| promotion_tier_id |  | promo_Mwy9XpA0TLctSGriM5kum0qp |\n| customer_id | Unique customer ID of redeeming customer. | cust_nk0N1uNQ1YnupAoJGOgvsODC |\n| customer_source_id | Unique source ID of redeeming customer. | name.lastname@email.com |\n| customer_name | Customer name. | John Smith |\n| tracking_id |  | track_Pw6r3ejnml43kIwNS4Zj09KZ67xOfLUy |\n| order_amount | Total order amount before applying all discounts. | 1000 |\n| gift_amount | Gift credits used for redemption. | 10 |\n| loyalty_points |  | 12 |\n| result | Tells you whether the redemption succeeded. | `SUCCESS`, `FAILURE` |\n| failure_code | Internal Voucherify code for reason why redemption failed. | invalid_customer |\n| failure_message | A human-readable message providing a short description explaining why the redemption failed. | Customer must be a holder of a loyalty card. |\n| metadata | Custom redemption metadata. |  |\n\n## Customers\n\n| **Field** | **Definition** | **Example Export** |\n|:---|:---|:---|\n| name | Customer name. | John Smith |\n| id | Unique customer ID. | cust_J1CDUdbqn5Exva8ASWk1Fq0j |\n| description | An arbitrary string that you can attach to a customer object. | Customer requesting to be added to VIP tier. |\n| email | Customer's email. | name.lastname@email.com |\n| source_id | Unique custom customer identifier. | name.lastname@email.com |\n| created_at | Timestamp in ISO 8601 format representing the date and time when the customer was created. | 2022-02-03T13:10:11.928Z |\n| address_city | City | Houston |\n| address_state | State | TX |\n| address_line_1 | First line of customer's address. | 72738 Main St |\n| address_line_2 | Second line of customer's address. | Bld 2, Apt 4 |\n| address_country | Country | United States of America |\n| address_postal_code | Postal code (ZIP code) | 77042-4143 |\n| redemptions_total_redeemed | Total customer redemptions. | 5 |\n| redemptions_total_failed | Total customer failed redemptions. | 2 |\n| redemptions_total_succeeded | Total customer succeeded redemptions. | 3 |\n| redemptions_total_rolled_back | Total customer redemptions that were rolled back. | 3 |\n| redemptions_total_rollback_failed | Total customer redemptions that were unsuccessfully rolled back. | 2 |\n| redemptions_total_rollback_succeeded | Total customer redemptions that were successfully rolled back. | 1 |\n| orders_total_amount | Total sum of order amounts over customer lifetime. Value is multiplied by 100 to precisely represent 2 decimal places. | 10000 (represents $100) |\n| orders_total_count | Total number of customer orders. Value is multiplied by 100 to precisely represent 2 decimal places. | 2 |\n| orders_average_amount | Average amount spent on orders. Value is multiplied by 100 to precisely represent 2 decimal places. | 50 |\n| orders_last_order_amount | How much did the customer spend on their last order. Value is multiplied by 100 to precisely represent 2 decimal places. | 50 |\n| orders_last_order_date | When was the last customer order; timestamp in ISO 8601 format representing the date and time. | 2022-02-03T13:17:30.630Z |\n| loyalty_points |  |  |\n| loyalty_referred_customers | How many customers were referred by this customer. |  |\n| updated_at | Timestamp in ISO 8601 format representing the date and time when the customer was updated. | 2022-02-14T14:10:14.305Z |\n| phone | Customer's phone number. | +1 (294) 752-1846 |\n| ~birthday~ | ~Customer's birthday.~ |  |\n| metadata | Customer metadata. |  |2-04-29 |\n| birthdate | Customer's birthdate. | 202\n\n## Points Expirations\n\n| **Field** | **Definition** | **Example Export** |\n|:---|:---|:---|\n| id | Loyalty points bucket ID. | lopb_Wl1o3EjJIHSNjvO5BDLy4z1n |\n| campaign_id | Campaign ID of the parent loyalty campaign. | camp_7s3uXI44aKfIk5IhmeOPr6ic |\n| voucher_id | Voucher ID of the parent loyalty card. | v_YLn0WVWXSXbUfDvxgrgUbtfJ3SQIY655 |\n| status | Status of the loyalty points bucket. | `ACTIVE` or `INACTIVE` |\n| expires_at | Timestamp in ISO 8601 format representing the date when the points expire. | 2022-06-30 |\n| points | Number of points. | 1000 |"
      },
      "get": {
        "summary": "List Exports",
        "operationId": "get-exports",
        "responses": {
          "200": {
            "description": "A dictionary with an exports property that contains an array of exports. Each entry in the array is a separate export object. The list will return the following types of exported objects: `voucher`, `redemption`, `publication`, `customer`, or `order`, or `points_expiration`. ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/16_res_list_exports_GET"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/page"
          }
        ],
        "tags": [
          "EXPORTS API"
        ],
        "description": "List all exports. "
      }
    },
    "/exports/{export_id}": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "example": "exp_2bYLdY2lQ2886wmYIHyeBWUZ"
          },
          "name": "export_id",
          "in": "path",
          "required": true,
          "description": "Unique export object ID of previously created export. This object can be a: `voucher`, `redemption`, `publication`, `customer`, `order`, or `points_expiration`."
        }
      ],
      "get": {
        "summary": "Get Export",
        "responses": {
          "200": {
            "description": "Returns the export object if a valid identifier was provided in the path.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/16_obj_export_object"
                }
              }
            }
          },
          "404": {
            "description": "Returns an error indicating that the export with given ID was not found if an incorrect ID is provided in the path.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/e_404_not_found"
                },
                "examples": {
                  "Not Found": {
                    "value": {
                      "code": 404,
                      "key": "not_found",
                      "message": "Resource not found",
                      "details": "Cannot find export with id exp_8fNoLwgVPuhoxNzVsr50kq0",
                      "request_id": "v-0b029305af4524cf42",
                      "resource_id": "exp_8fNoLwgVPuhoxNzVsr50kq0",
                      "resource_type": "export"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-exports-export_id",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "description": "Retrieves the URL of the downloadable file, which was generated via the [Create Export](OpenAPI.json/paths/~1exports/post) method.",
        "tags": [
          "EXPORTS API"
        ]
      },
      "delete": {
        "summary": "Delete Export",
        "operationId": "delete-exports-export_id",
        "responses": {
          "204": {
            "description": "Returns no content if deletion is successful."
          },
          "404": {
            "description": "Returns an error indicating that the export with given ID was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/e_404_not_found"
                },
                "examples": {
                  "Export Not Found": {
                    "value": {
                      "code": 404,
                      "key": "not_found",
                      "message": "Resource not found",
                      "details": "Cannot find export with id exp_2bYLdY2lQ2886wmYIHyeBWUZ",
                      "request_id": "v-0ae2a97a399027d719",
                      "resource_id": "exp_2bYLdY2lQ2886wmYIHyeBWUZ",
                      "resource_type": "export"
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "description": "This method deletes a previously created export object.",
        "tags": [
          "EXPORTS API"
        ]
      }
    },
    "/exports/{exportId}": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "example": "exp_ex6zq0x0EEa9S0N68QcqhxcQ"
          },
          "name": "exportId",
          "in": "path",
          "required": true,
          "description": "Unique export object ID."
        }
      ],
      "get": {
        "summary": "Download Export",
        "responses": {
          "200": {
            "description": "Returns contents of CSV file.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "examples": {
                  "CSV file contents": {
                    "value": "ID,Code,Voucher Type,Value v_mKNYXWf5168jyW3EvwnAf73d7vnTiXaa,iuCvt3BT,GIFT_VOUCHER,2000.00 v_xb5KuIw90ViUY7NrNbDZzf1JwFmyTUi0,M3X8IwW8,GIFT_VOUCHER,2000.00 v_flCSHFGOfjxuM582jhriJTWQuetb2xHX,6vpzmKaC,GIFT_VOUCHER,2050.00 v_YtzZG4UJaWm9DNCY3AvIqVbc7Dt5WToU,lRvBOUPl,LOYALTY_CARD,0"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Returns an error if an invalid token was provided.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "default": 401,
                      "description": "Error's HTTP status code."
                    },
                    "message": {
                      "type": "string",
                      "default": "Unauthorized",
                      "description": "A human-readable message providing a short description about the error."
                    },
                    "key": {
                      "type": "string",
                      "default": "unauthorized",
                      "description": "Short string describing the kind of error which occurred."
                    }
                  }
                },
                "examples": {
                  "Unauthorized": {
                    "value": {
                      "code": 401,
                      "message": "Unauthorized",
                      "key": "unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Returns an error if Application ID and Secret Key do not match the base URL.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/e_403_wrong_api_endpoint"
                },
                "examples": {
                  "Wrong API Endpoint": {
                    "value": {
                      "code": 403,
                      "key": "wrong_api_endpoint",
                      "message": "Wrong API endpoint",
                      "details": "Given project is bound to different API endpoint, you should use: https://dev.api.voucherify.io"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-exports-export_id-?token=-token",
        "description": "Download the contents of the exported CSV file. \n\n<!-- theme: info -->\n\n> #### Important notes\n>\n> **Base URL:** `https://download.voucherify.io/v1`  \n> **Token:** Can be found within the `result` parameter of the [Get Export](OpenAPI.json/paths/~1exports~1{export_id}/get) method response.",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          },
          {
            "schema": {
              "type": "string",
              "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0ZW5hbnQiOiJz"
            },
            "in": "query",
            "name": "token",
            "description": "Token used for authorization.",
            "required": true
          }
        ],
        "tags": [
          "EXPORTS API"
        ]
      }
    },
    "/categories": {
      "get": {
        "summary": "List Categories",
        "tags": [
          "CATEGORIES API"
        ],
        "responses": {
          "200": {
            "description": "Returns a dictionary of category objects.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/20_res_categories_GET"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "object": "list",
                      "data_ref": "data",
                      "data": [
                        {
                          "id": "cat_0b5f49fb31c3bf6ab0",
                          "name": "Sixth",
                          "hierarchy": 6,
                          "created_at": "2022-07-13T06:21:36.852Z",
                          "object": "category"
                        },
                        {
                          "id": "cat_0b5f49e6e1ce5bd2ba",
                          "name": "Fifth",
                          "hierarchy": 5,
                          "created_at": "2022-07-13T06:21:16.039Z",
                          "object": "category"
                        },
                        {
                          "id": "cat_0b5f49deafce5bd2b5",
                          "name": "Fourth",
                          "hierarchy": 4,
                          "created_at": "2022-07-13T06:21:07.662Z",
                          "object": "category"
                        },
                        {
                          "id": "cat_0b5f49d45c43bf6a99",
                          "name": "Third",
                          "hierarchy": 3,
                          "created_at": "2022-07-13T06:20:57.094Z",
                          "object": "category"
                        },
                        {
                          "id": "cat_0b5f3f9881ce5bccb6",
                          "name": "Second",
                          "hierarchy": 2,
                          "created_at": "2022-07-13T05:36:14.355Z",
                          "object": "category"
                        },
                        {
                          "id": "cat_0b53bc388dc2f108ba",
                          "name": "First",
                          "hierarchy": 1,
                          "created_at": "2022-07-04T06:58:57.734Z",
                          "object": "category"
                        }
                      ],
                      "total": 6
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-categories",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "description": "List all categories."
      },
      "post": {
        "summary": "Create Category",
        "operationId": "post-categories",
        "responses": {
          "200": {
            "description": "Returns a newly created category object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/20_res_categories_POST_category_object"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "id": "cat_0b8b5a427a0283c854",
                      "name": "Eighth",
                      "hierarchy": 8,
                      "created_at": "2022-08-16T11:45:54.171Z",
                      "object": "category"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/e_400_invalid_payload"
                },
                "examples": {
                  "Missing name": {
                    "value": {
                      "code": 400,
                      "key": "invalid_payload",
                      "message": "Invalid payload",
                      "details": "Payload should have required property 'name'",
                      "request_id": "v-0b8b5b960990210b25"
                    }
                  },
                  "Missing hierarchy": {
                    "value": {
                      "code": 400,
                      "key": "invalid_payload",
                      "message": "Invalid payload",
                      "details": "Payload should have required property 'hierarchy'",
                      "request_id": "v-0b8b5bf9d9c6824a2f"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "CATEGORIES API"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "description": "Create category with a specific name and hierarchy.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/20_req_categories_POST"
              },
              "examples": {
                "Example": {
                  "value": {
                    "name": "Eighth",
                    "hierarchy": 8
                  }
                }
              }
            }
          },
          "description": "Specify the details of the category that you would like to create."
        }
      }
    },
    "/categories/{categoryId}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "categoryId",
          "in": "path",
          "required": true,
          "description": "Unique category ID assigned by Voucherify."
        }
      ],
      "get": {
        "summary": "GET Category",
        "tags": [
          "CATEGORIES API"
        ],
        "responses": {
          "200": {
            "description": "Returns a category object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/20_obj_category_object"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "id": "cat_0b5f49fb31c3bf6ab0",
                      "name": "Sixth",
                      "hierarchy": 6,
                      "created_at": "2022-07-13T06:21:36.852Z",
                      "object": "category"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-categories-categoryId",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "description": "Retrieve a category by the category ID."
      },
      "delete": {
        "summary": "Delete Category",
        "operationId": "delete-categories-categoryId",
        "responses": {
          "204": {
            "description": "No content is returned."
          },
          "404": {
            "description": "Returns an error indicating that the category with given ID was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/e_404_not_found"
                },
                "examples": {
                  "Not Found": {
                    "value": {
                      "code": 404,
                      "key": "not_found",
                      "message": "Resource not found",
                      "details": "Cannot find category with id example_category",
                      "request_id": "v-0b8b49205f902176c9",
                      "resource_id": "example_category",
                      "resource_type": "category"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "CATEGORIES API"
        ],
        "description": "Delete a category by the category ID.",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ]
      },
      "put": {
        "summary": "Update Category",
        "operationId": "put-categories-categoryId",
        "responses": {
          "200": {
            "description": "Returns a category object with a refreshed `updated_at` property.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/20_obj_category_object"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "id": "cat_0b60cfe7d0d7ddbb55",
                      "name": "Update",
                      "hierarchy": 1,
                      "created_at": "2022-07-14T10:45:13.156Z",
                      "updated_at": "2022-08-16T11:03:54.727Z",
                      "object": "category"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Returns an error indicating an invalid payload if the required request body parameters were not included in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/e_400_invalid_payload"
                },
                "examples": {
                  "Missing hierarchy": {
                    "value": {
                      "code": 400,
                      "key": "invalid_payload",
                      "message": "Invalid payload",
                      "details": "Payload should have required property 'hierarchy'",
                      "request_id": "v-0b8b4e6b6210217c93"
                    }
                  },
                  "Missing name": {
                    "value": {
                      "code": 400,
                      "key": "invalid_payload",
                      "message": "Invalid payload",
                      "details": "Payload should have required property 'name'",
                      "request_id": "v-0b8b4f418390217d82"
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "tags": [
          "CATEGORIES API"
        ],
        "description": "Update category using the category ID.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/20_req_categories_categoryId_PUT"
              },
              "examples": {
                "Example": {
                  "value": {
                    "name": "Summer",
                    "hierarchy": 1
                  }
                }
              }
            }
          },
          "description": "Specify the details of the category that you would like to update."
        }
      }
    },
    "/metadata-schemas": {
      "get": {
        "summary": "List Metadata Schemas",
        "tags": [
          "METADATA SCHEMAS API"
        ],
        "responses": {
          "200": {
            "description": "Returns an array of metadata schema definitions. The response does not include unknown metadata properties in the response, i.e. those that have been defined outside of the **Project Settings** > **Metadata Schema** definitions. For example, an unknown metadata property can be defined in the campaign manger while creating a campaign.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/21_res_metadata_shemas_GET"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "object": "list",
                      "data_ref": "schemas",
                      "schemas": [
                        {
                          "id": "ms_OF36L2rk4EqhdxvZs56IW9iE",
                          "related_object": "campaign",
                          "properties": {
                            "custom_property_name": {
                              "type": "string",
                              "array": true,
                              "optional": true,
                              "objectType": "string",
                              "eq": [
                                null
                              ],
                              "ne": [
                                null
                              ],
                              "lt": 0,
                              "lte": 0,
                              "gt": 0,
                              "gte": 0,
                              "deleted": true,
                              "maxLength": 0,
                              "minLength": 0,
                              "exactLength": 0
                            }
                          },
                          "allow_defined_only": true,
                          "created_at": "2021-12-03T13:33:44.556Z",
                          "updated_at": "2022-08-11T08:05:30.695Z",
                          "object": "metadata_schema"
                        }
                      ],
                      "total": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-metadata-schemas",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "description": "Retrieve metadata schema definitions."
      }
    },
    "/metadata-schemas/{resource}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "resource",
          "in": "path",
          "required": true,
          "description": "There is an infinite number of possibilities for retrieving metadata schemas by the resource type because you can define custom metadata schemas."
        }
      ],
      "get": {
        "summary": "Get Metadata Schema",
        "tags": [
          "METADATA SCHEMAS API"
        ],
        "responses": {
          "200": {
            "description": "The response does not include unknown metadata properties in the response, i.e. those that have been defined outside of the **Project Settings** > **Metadata Schema** definitions. For example, an unknown metadata property can be defined in the campaign manger.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/21_obj_metadata_schema_object"
                },
                "examples": {
                  "Earning Rule Example": {
                    "value": {
                      "id": "ms_27vMXZqBAkkqBoOuw8EYTRLn",
                      "related_object": "earning_rule",
                      "properties": {
                        "channel_id": {
                          "type": "string",
                          "array": true,
                          "optional": true,
                          "objectType": null,
                          "exactLength": 5
                        },
                        "channel_name": {
                          "eq": [
                            "instagram",
                            "facebook",
                            "google",
                            "twitter",
                            "linkedin",
                            "website"
                          ],
                          "type": "string",
                          "array": false,
                          "optional": true,
                          "objectType": null
                        }
                      },
                      "allow_defined_only": false,
                      "created_at": "2022-08-25T13:09:59.970Z",
                      "updated_at": "2022-08-25T13:11:15.704Z",
                      "object": "metadata_schema"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-metadata-schemas-resource",
        "description": "## Resource types\n\n### Standard\n\nYou can retrieve metadata schemas for the standard metadata schema definitions listed below. Add one of these types as the resource path parameter.\n\n- `campaign`\n- `customer`\n- `earning_rule`\n- `loyalty_tier`\n- `order`\n- `order_item`\n- `product`\n- `promotion_tier`\n- `publication`\n- `redemption`\n- `reward`\n- `voucher`\n\n### Custom\n\nThere is an infinite number of possibilities for retrieving metadata schemas by the resource type because you can define custom metadata schemas. Provide one of the resource types that you have defined as a resource type. [Read more](https://support.voucherify.io/article/99-schema-validation-metadata#add-metadata)."
      }
    }
  }
}