{
  "openapi": "3.1.0",
  "info": {
    "title": "Webhooks",
    "version": "1.0.1"
  },
  "tags": [
    {
      "name": "Events redemption",
      "description": "Events redemption"
    },
    {
      "name": "Events publication",
      "description": "Events publication"
    },
    {
      "name": "Events customer",
      "description": "Events customer"
    }
  ],
  "paths": {
    "/EVENTS.REDEMPTION.SUCCEEDED": {
      "post": {
        "summary": "Succeeded",
        "description": "A `REDEMPTION.SUCCEEDED` webhook means that the redemption process was successful. It confirms that the associated voucher codes and promotional tiers have been effectively applied.",
        "tags": [
          "Events redemption"
        ],
        "responses": {
          "200": {
            "description": "Indicates that a redemption has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventRedemptionSucceeded"
                },
                "examples": {
                  "redemption.succeeded": {
                    "value": {
                      "id": "whs_0e250029af4765fec7",
                      "project_id": "proj_Pr0j3CTs",
                      "created_at": "2024-01-15T12:20:38.636Z",
                      "type": "redemption.succeeded",
                      "data": {
                        "customer": {
                          "id": "cust_1g637SqVZnkdPNdAIZ7Ra879",
                          "name": "Jane Doe",
                          "email": "jane@jane.io",
                          "source_id": "test_customer_id_2",
                          "metadata": {
                            "lang": "en",
                            "test": true,
                            "region": "EMEA"
                          },
                          "object": "customer"
                        },
                        "order": {
                          "id": "ord_3VYCHwdV0YOOch2nm1RsTKNI",
                          "source_id": null,
                          "status": "PAID",
                          "customer_id": "cust_1g637SqVZnkdPNdAIZ7Ra879",
                          "referrer_id": null,
                          "amount": 7000,
                          "items_discount_amount": 1000,
                          "items_applied_discount_amount": 1000,
                          "total_discount_amount": 1000,
                          "total_applied_discount_amount": 1000,
                          "total_amount": 6000,
                          "items": [
                            {
                              "object": "order_item",
                              "source_id": "adv-mug",
                              "related_object": "product",
                              "quantity": 2,
                              "discount_quantity": 1,
                              "amount": 2000,
                              "discount_amount": 1000,
                              "applied_discount_amount": 1000,
                              "price": 1000,
                              "subtotal_amount": 1000
                            },
                            {
                              "object": "order_item",
                              "source_id": "star-th-bottle",
                              "related_object": "product",
                              "quantity": 2,
                              "amount": 5000,
                              "price": 2500,
                              "subtotal_amount": 5000
                            }
                          ],
                          "metadata": {},
                          "created_at": "2024-01-15T12:20:38.596843Z",
                          "object": "order"
                        },
                        "campaign": {
                          "id": "camp_kwMyXFKquedx8FzXNpVPN7QU",
                          "name": "Always add missing products",
                          "campaign_type": "DISCOUNT_COUPONS",
                          "type": "AUTO_UPDATE",
                          "is_referral_code": false,
                          "voucher": {
                            "type": "DISCOUNT_VOUCHER",
                            "discount": {
                              "type": "UNIT",
                              "units": null,
                              "effect": "ADD_NEW_ITEMS",
                              "unit_off": 1,
                              "unit_type": "prod_0df14b3a6ad8f282a8"
                            },
                            "redemption": {
                              "quantity": null,
                              "redeemed_quantity": 0
                            },
                            "code_config": {
                              "length": 1,
                              "prefix": "Always-add-prods-",
                              "charset": "0123456789",
                              "pattern": "#",
                              "postfix": ""
                            }
                          },
                          "auto_join": false,
                          "join_once": false,
                          "active": true,
                          "category_id": null,
                          "created_at": "2023-12-08T13:54:29.003375Z",
                          "updated_at": "2023-12-15T11:07:05.173502Z",
                          "object": "campaign"
                        },
                        "voucher": {
                          "id": "v_VZgTRbJvauZR7Ub7exOtAg0MqxXljPpA",
                          "code": "Always-add-prods-5",
                          "discount": {
                            "type": "UNIT",
                            "unit_off": 1,
                            "unit_type": "prod_0df14b3a6ad8f282a8",
                            "effect": "ADD_NEW_ITEMS"
                          },
                          "type": "DISCOUNT_VOUCHER",
                          "campaign": "Always add missing products",
                          "campaign_id": "camp_kwMyXFKquedx8FzXNpVPN7QU",
                          "is_referral_code": false,
                          "category_id": null,
                          "active": true,
                          "created_at": "2023-12-08T14:01:18.213000Z",
                          "updated_at": "2024-01-15T12:20:38.624905Z",
                          "object": "voucher"
                        },
                        "holder": null,
                        "promotion_tier": null,
                        "redemption": {
                          "id": "r_0e2500291ae016adea",
                          "customer_id": "cust_1g637SqVZnkdPNdAIZ7Ra879",
                          "tracking_id": "track_Pw6r3ejnml43kIwNS4Zj09KZ67xOfLUy",
                          "date": "2024-01-15T12:20:38.635000Z",
                          "order": {
                            "id": "ord_3VYCHwdV0YOOch2nm1RsTKNI",
                            "source_id": null,
                            "status": "PAID",
                            "customer_id": "cust_1g637SqVZnkdPNdAIZ7Ra879",
                            "referrer_id": null,
                            "amount": 7000,
                            "items_discount_amount": 1000,
                            "items_applied_discount_amount": 1000,
                            "total_discount_amount": 1000,
                            "total_applied_discount_amount": 1000,
                            "total_amount": 6000,
                            "items": [
                              {
                                "object": "order_item",
                                "source_id": "adv-mug",
                                "related_object": "product",
                                "quantity": 2,
                                "discount_quantity": 1,
                                "amount": 2000,
                                "discount_amount": 1000,
                                "applied_discount_amount": 1000,
                                "price": 1000,
                                "subtotal_amount": 1000
                              },
                              {
                                "object": "order_item",
                                "source_id": "star-th-bottle",
                                "related_object": "product",
                                "quantity": 2,
                                "amount": 5000,
                                "price": 2500,
                                "subtotal_amount": 5000
                              }
                            ],
                            "metadata": {},
                            "created_at": "2024-01-15T12:20:38.596843Z",
                            "object": "order"
                          },
                          "customer": {
                            "id": "cust_1g637SqVZnkdPNdAIZ7Ra879",
                            "name": "Jane Doe",
                            "email": "jane@jane.io",
                            "source_id": "test_customer_id_2",
                            "metadata": {
                              "lang": "en",
                              "test": true,
                              "region": "EMEA"
                            },
                            "object": "customer"
                          },
                          "result": "SUCCESS",
                          "status": "SUCCEEDED",
                          "voucher": {
                            "id": "v_VZgTRbJvauZR7Ub7exOtAg0MqxXljPpA",
                            "code": "Always-add-prods-5",
                            "discount": {
                              "type": "UNIT",
                              "unit_off": 1,
                              "unit_type": "prod_0df14b3a6ad8f282a8",
                              "effect": "ADD_NEW_ITEMS"
                            },
                            "type": "DISCOUNT_VOUCHER",
                            "campaign": "Always add missing products",
                            "campaign_id": "camp_kwMyXFKquedx8FzXNpVPN7QU",
                            "is_referral_code": false,
                            "category_id": null,
                            "active": true,
                            "created_at": "2023-12-08T14:01:18.213000Z",
                            "updated_at": "2024-01-15T12:20:38.624905Z",
                            "object": "voucher"
                          },
                          "metadata": {},
                          "object": "redemption"
                        },
                        "created_at": "2024-01-15T12:20:38.636Z"
                      },
                      "source": {
                        "id": "wh_i45Uez36Uz8XNW6PXC0eyGmb",
                        "object": "webhook",
                        "target_url": "{{your.webhook.target.url}}"
                      },
                      "event": {
                        "id": "evred_0e2500291f2016adfa",
                        "type": "redemption.succeeded",
                        "created_at": "2024-01-15T12:20:38.636Z",
                        "entity_id": "r_0e2500291ae016adea",
                        "group_id": "v-0e25002837d49eb3fd",
                        "event_source": {
                          "channel": "API",
                          "api_key": {
                            "name": "Primary",
                            "app_id": "3XXXXXX3-XXXa-XXXv-aXXX-XXXX7XXdXXXX"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "events-redemption-succeeded"
      }
    },
    "/EVENTS.REDEMPTION.FAILED": {
      "post": {
        "summary": "Failed",
        "description": "A `REDEMPTION.FAILED` webhook means that the redemption process encountered issues while applying the voucher codes or promotions tiers.",
        "tags": [
          "Events redemption"
        ],
        "responses": {
          "200": {
            "description": "Indicates that redemption is unsuccessful.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventRedemptionFailed"
                },
                "examples": {
                  "redemption.failed": {
                    "value": {
                      "id": "whs_0e3ac56bdb5c2fbbc2",
                      "project_id": "proj_Pr0j3CTs",
                      "created_at": "2024-02-02T12:12:12.919Z",
                      "type": "redemption.failed",
                      "data": {
                        "order": null,
                        "holder": null,
                        "voucher": null,
                        "campaign": null,
                        "customer": {
                          "id": "cust_1g637SqVZnkdPNdAIZ7Ra879",
                          "name": "Jane Doe",
                          "email": "jane@jane.io",
                          "object": "customer",
                          "metadata": {
                            "lang": "en",
                            "region": "EMEA"
                          },
                          "source_id": "test_customer_id_2"
                        },
                        "created_at": "2024-02-02T12:12:12.919Z",
                        "redemption": {
                          "id": "rf_0e3ac5685ba431c104",
                          "date": "2024-02-02T12:12:12.918Z",
                          "object": "redemption",
                          "result": "FAILURE",
                          "status": "FAILED",
                          "customer": {
                            "id": "cust_1g637SqVZnkdPNdAIZ7Ra879",
                            "name": "Jane Doe",
                            "email": "jane@jane.io",
                            "object": "customer",
                            "metadata": {
                              "lang": "en",
                              "region": "EMEA"
                            },
                            "source_id": "test_customer_id_2"
                          },
                          "metadata": {},
                          "customer_id": "cust_1g637SqVZnkdPNdAIZ7Ra879",
                          "tracking_id": "track_Pw6r3ejnml43kIwNS4Zj09KZ67xOfLUy",
                          "failure_code": "no_applicable_redeemables",
                          "failure_message": "No applicable redeemables"
                        },
                        "promotion_tier": null
                      },
                      "source": {
                        "id": "wh_i45Uez36Uz8XNW6PXC0eyGmb",
                        "object": "webhook",
                        "target_url": "{{your.webhook.target.url}}"
                      },
                      "event": {
                        "id": "evred_0e3ac5685e2431c10e",
                        "type": "redemption.failed",
                        "created_at": "2024-02-02T12:12:12.919Z",
                        "group_id": "v-0e3ac5683217473bd4",
                        "event_source": {
                          "api_key": {
                            "name": "Primary",
                            "app_id": "3XXXXXX3-XXXa-XXXv-aXXX-XXXX7XXdXXXX"
                          },
                          "channel": "API"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "events-redemption-failed"
      }
    },
    "/EVENTS.REDEMPTION.ROLLBACK.SUCCEEDED": {
      "post": {
        "summary": "Rollback succeeded",
        "description": "A `REDEMPTION.ROLLBACK.SUCCEEDED` webhook means a redemption was successfully reversed. This occurs when a previously redeemed voucher code or promotional tier has been rolled back or undone.",
        "tags": [
          "Events redemption"
        ],
        "responses": {
          "200": {
            "description": "Indicates that a redemption rollback is successful.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventRedemptionRollbackSucceeded"
                },
                "examples": {
                  "redemption.rollback.succeeded": {
                    "value": {
                      "id": "whs_0e3ac8796c1c2fbe2b",
                      "project_id": "proj_Pr0j3CTs",
                      "created_at": "2024-02-01T10:23:52.499Z",
                      "type": "redemption.rollback.succeeded",
                      "data": {
                        "order": {
                          "id": "ord_OPBS4bwowjzQ3odiMNk09WPL",
                          "items": [],
                          "object": "order",
                          "status": "CANCELED",
                          "metadata": {},
                          "source_id": null,
                          "created_at": "2024-02-01T08:45:31.967Z",
                          "updated_at": "2024-02-01T10:23:52.507Z",
                          "customer_id": "cust_IdgAFZxYwwHctOk9pPuMu308",
                          "referrer_id": null
                        },
                        "holder": null,
                        "voucher": {
                          "id": "v_7JItZDjNzMjqSw0BZoxNEMBfdHHB9EHf",
                          "code": "Refer-gift-90873378",
                          "type": "DISCOUNT_VOUCHER",
                          "active": true,
                          "object": "voucher",
                          "campaign": "Refer-gift",
                          "discount": {
                            "type": "AMOUNT",
                            "amount_off": 0
                          },
                          "created_at": "2024-02-01T08:44:37.539Z",
                          "redemption": {
                            "quantity": null,
                            "redeemed_quantity": 0
                          },
                          "updated_at": "2024-02-01T10:23:52.490Z",
                          "campaign_id": "camp_QULf1Wzu4yvT3cJ3IzFp76nY",
                          "category_id": null,
                          "is_referral_code": true
                        },
                        "campaign": {
                          "id": "camp_QULf1Wzu4yvT3cJ3IzFp76nY",
                          "name": "Refer-gift",
                          "type": "AUTO_UPDATE",
                          "active": true,
                          "object": "campaign",
                          "voucher": {
                            "gift": null,
                            "type": "DISCOUNT_VOUCHER",
                            "discount": {
                              "type": "AMOUNT",
                              "units": null,
                              "amount_off": 0
                            },
                            "redemption": {
                              "quantity": null,
                              "redeemed_quantity": 0
                            },
                            "code_config": {
                              "length": 8,
                              "prefix": "Refer-gift-",
                              "charset": "0123456789",
                              "pattern": "########",
                              "postfix": ""
                            },
                            "loyalty_card": null
                          },
                          "auto_join": false,
                          "join_once": false,
                          "created_at": "2024-02-01T08:44:36.722Z",
                          "category_id": null,
                          "campaign_type": "REFERRAL_PROGRAM",
                          "is_referral_code": true,
                          "referral_program": {
                            "custom_event": {
                              "id": "ms_f1r5Tcu5T0m3v3nT5ch3ma",
                              "name": "sign_up"
                            },
                            "referee_reward": {
                              "type": "GIFT_VOUCHER",
                              "amount": 300,
                              "related_object_parent": {
                                "id": "camp_bfrwAVsP6Q1EM1ZjgHwheKYr",
                                "name": "Gift programme",
                                "object": "CAMPAIGN"
                              }
                            },
                            "conversion_event_type": "custom_event"
                          }
                        },
                        "customer": {
                          "id": "cust_IdgAFZxYwwHctOk9pPuMu308",
                          "name": "Jack Webhook",
                          "email": null,
                          "object": "customer",
                          "metadata": {
                            "region": "EMEA"
                          },
                          "source_id": "jck-wbhk"
                        },
                        "redemption": {
                          "id": "r_0e3ab1f3fb99fee4b9",
                          "date": "2024-02-01T08:45:32.014Z",
                          "order": {
                            "id": "ord_OPBS4bwowjzQ3odiMNk09WPL",
                            "items": [],
                            "object": "order",
                            "status": "PAID",
                            "metadata": {},
                            "source_id": null,
                            "created_at": "2024-02-01T08:45:31.967Z",
                            "customer_id": "cust_IdgAFZxYwwHctOk9pPuMu308",
                            "referrer_id": null
                          },
                          "object": "redemption",
                          "result": "SUCCESS",
                          "status": "SUCCEEDED",
                          "voucher": {
                            "id": "v_7JItZDjNzMjqSw0BZoxNEMBfdHHB9EHf",
                            "code": "Refer-gift-90873378",
                            "active": null,
                            "object": "voucher",
                            "campaign": "Refer-gift",
                            "campaign_id": "camp_QULf1Wzu4yvT3cJ3IzFp76nY"
                          },
                          "customer": {
                            "id": "cust_IdgAFZxYwwHctOk9pPuMu308",
                            "name": "Jack Webhook",
                            "email": null,
                            "object": "customer",
                            "metadata": {
                              "region": "EMEA",
                              "sign-up": "true"
                            },
                            "source_id": "jck-wbhk"
                          },
                          "metadata": {},
                          "customer_id": "cust_IdgAFZxYwwHctOk9pPuMu308",
                          "tracking_id": "track_8RFQINPxgc+pykybVOUEXQ=="
                        },
                        "promotion_tier": null,
                        "redemption_rollback": {
                          "id": "rr_0e3ac8762299fef1e3",
                          "date": "2024-02-01T10:23:52.499Z",
                          "order": {
                            "id": "ord_OPBS4bwowjzQ3odiMNk09WPL",
                            "items": [],
                            "object": "order",
                            "status": "CANCELED",
                            "metadata": {},
                            "source_id": null,
                            "created_at": "2024-02-01T08:45:31.967Z",
                            "updated_at": "2024-02-01T10:23:52.507Z",
                            "customer_id": "cust_IdgAFZxYwwHctOk9pPuMu308",
                            "referrer_id": null
                          },
                          "object": "redemption_rollback",
                          "reason": "Fraud prevention",
                          "result": "SUCCESS",
                          "status": "SUCCEEDED",
                          "voucher": {
                            "id": "v_7JItZDjNzMjqSw0BZoxNEMBfdHHB9EHf",
                            "code": "Refer-gift-90873378",
                            "type": "DISCOUNT_VOUCHER",
                            "active": true,
                            "object": "voucher",
                            "campaign": "Refer-gift",
                            "discount": {
                              "type": "AMOUNT",
                              "amount_off": 0
                            },
                            "created_at": "2024-02-01T08:44:37.539Z",
                            "redemption": {
                              "quantity": null,
                              "redeemed_quantity": 0
                            },
                            "updated_at": "2024-02-01T10:23:52.490Z",
                            "campaign_id": "camp_QULf1Wzu4yvT3cJ3IzFp76nY",
                            "category_id": null,
                            "is_referral_code": true
                          },
                          "customer": {
                            "id": "cust_IdgAFZxYwwHctOk9pPuMu308",
                            "name": "Jack Webhook",
                            "email": null,
                            "object": "customer",
                            "metadata": {
                              "region": "EMEA",
                              "sign-up": "true"
                            },
                            "source_id": "jck-wbhk"
                          },
                          "metadata": null,
                          "redemption": "r_0e3ab1f3fb99fee4b9",
                          "customer_id": "cust_IdgAFZxYwwHctOk9pPuMu308",
                          "tracking_id": "track_8RFQINPxgc+pykybVOUEXQ=="
                        }
                      },
                      "source": {
                        "id": "wh_i45Uez36Uz8XNW6PXC0eyGmb",
                        "object": "webhook",
                        "target_url": "{{your.webhook.target.url}}"
                      },
                      "event": {
                        "id": "evred_0e3ac8764259fef1fa",
                        "type": "redemption.rollback.succeeded",
                        "created_at": "2024-02-01T10:23:52.499Z",
                        "group_id": "v-0e3ac876158de0f42b",
                        "event_source": {
                          "user": {
                            "id": "user_ypzfEcSAphSONMGJRlj6trzXKsh7FGX7"
                          },
                          "channel": "USER_PORTAL"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "events-redemption-rollback-succeeded"
      }
    },
    "/EVENTS.REDEMPTION.ROLLBACK.FAILED": {
      "post": {
        "summary": "Rollback failed",
        "description": "A `REDEMPTION.ROLLBACK.FAILED` webhook means a redemption was unsuccessfully reverted. This occurs when the system encounters difficulties in rolling back a previously redeemed voucher code or promotional tier. The main reasons are that a rollback was applied to a redemption created more than 3 months ago or an attempt was made to rollback a redemption that had been rolled back already.",
        "tags": [
          "Events redemption"
        ],
        "responses": {
          "200": {
            "description": "Indicates that a redemption rollback is unsuccessful.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventRedemptionRollbackFailed"
                },
                "examples": {
                  "rollback.failed": {
                    "value": {
                      "id": "whs_0e3ac8c2ba5c2fbe67",
                      "project_id": "proj_Pr0j3CTs",
                      "created_at": "2024-02-01T10:25:07.002Z",
                      "type": "redemption.rollback.failed",
                      "data": {
                        "order": null,
                        "holder": null,
                        "voucher": {
                          "id": "v_7JItZDjNzMjqSw0BZoxNEMBfdHHB9EHf",
                          "code": "Refer-gift-90873378",
                          "type": "DISCOUNT_VOUCHER",
                          "active": true,
                          "object": "voucher",
                          "campaign": "Refer-gift",
                          "discount": {
                            "type": "AMOUNT",
                            "amount_off": 0
                          },
                          "created_at": "2024-02-01T08:44:37.539Z",
                          "redemption": {
                            "quantity": null,
                            "redeemed_quantity": 0
                          },
                          "updated_at": "2024-02-01T10:23:52.490Z",
                          "campaign_id": "camp_QULf1Wzu4yvT3cJ3IzFp76nY",
                          "category_id": null,
                          "is_referral_code": true
                        },
                        "campaign": {
                          "id": "camp_QULf1Wzu4yvT3cJ3IzFp76nY",
                          "name": "Refer-gift",
                          "type": "AUTO_UPDATE",
                          "active": true,
                          "object": "campaign",
                          "voucher": {
                            "gift": null,
                            "type": "DISCOUNT_VOUCHER",
                            "discount": {
                              "type": "AMOUNT",
                              "units": null,
                              "amount_off": 0
                            },
                            "redemption": {
                              "quantity": null,
                              "redeemed_quantity": 0
                            },
                            "code_config": {
                              "length": 8,
                              "prefix": "Refer-gift-",
                              "charset": "0123456789",
                              "pattern": "########",
                              "postfix": ""
                            },
                            "loyalty_card": null
                          },
                          "auto_join": false,
                          "join_once": false,
                          "created_at": "2024-02-01T08:44:36.722Z",
                          "category_id": null,
                          "campaign_type": "REFERRAL_PROGRAM",
                          "is_referral_code": true,
                          "referral_program": {
                            "custom_event": {
                              "id": "ms_f1r5Tcu5T0m3v3nT5ch3ma",
                              "name": "sign_up"
                            },
                            "referee_reward": {
                              "type": "GIFT_VOUCHER",
                              "amount": 300,
                              "related_object_parent": {
                                "id": "camp_bfrwAVsP6Q1EM1ZjgHwheKYr",
                                "name": "Gift programme",
                                "object": "CAMPAIGN"
                              }
                            },
                            "conversion_event_type": "custom_event"
                          }
                        },
                        "customer": {
                          "id": "cust_IdgAFZxYwwHctOk9pPuMu308",
                          "object": "customer",
                          "metadata": {
                            "region": "EMEA",
                            "sign-up": "true"
                          },
                          "source_id": "jck-wbhk"
                        },
                        "redemption": {
                          "id": "r_0e3ab1f3fb99fee4b9",
                          "date": "2024-02-01T08:45:32.014Z",
                          "order": {
                            "id": "ord_OPBS4bwowjzQ3odiMNk09WPL",
                            "items": [],
                            "object": "order",
                            "status": "PAID",
                            "metadata": {},
                            "source_id": null,
                            "created_at": "2024-02-01T08:45:31.967Z",
                            "customer_id": "cust_IdgAFZxYwwHctOk9pPuMu308",
                            "referrer_id": null
                          },
                          "object": "redemption",
                          "result": "SUCCESS",
                          "status": "ROLLED_BACK",
                          "voucher": {
                            "id": "v_7JItZDjNzMjqSw0BZoxNEMBfdHHB9EHf",
                            "code": "Refer-gift-90873378",
                            "active": null,
                            "object": "voucher",
                            "campaign": "Refer-gift",
                            "campaign_id": "camp_QULf1Wzu4yvT3cJ3IzFp76nY"
                          },
                          "customer": {
                            "id": "cust_IdgAFZxYwwHctOk9pPuMu308",
                            "name": "Jack Webhook",
                            "email": null,
                            "object": "customer",
                            "metadata": {
                              "region": "EMEA"
                            },
                            "source_id": "jck-wbhk"
                          },
                          "metadata": {},
                          "customer_id": "cust_IdgAFZxYwwHctOk9pPuMu308",
                          "tracking_id": "track_8RFQINPxgc+pykybVOUEXQ=="
                        },
                        "promotion_tier": null,
                        "redemption_rollback": {
                          "id": "rrf_0e3ac8beeea431c302",
                          "date": "2024-02-01T10:25:07.002Z",
                          "object": "redemption_rollback",
                          "result": "FAILURE",
                          "status": "FAILED",
                          "voucher": {
                            "id": "v_7JItZDjNzMjqSw0BZoxNEMBfdHHB9EHf",
                            "code": "Refer-gift-90873378",
                            "type": "DISCOUNT_VOUCHER",
                            "active": true,
                            "object": "voucher",
                            "campaign": "Refer-gift",
                            "discount": {
                              "type": "AMOUNT",
                              "amount_off": 0
                            },
                            "created_at": "2024-02-01T08:44:37.539Z",
                            "redemption": {
                              "quantity": null,
                              "redeemed_quantity": 0
                            },
                            "updated_at": "2024-02-01T10:23:52.490Z",
                            "campaign_id": "camp_QULf1Wzu4yvT3cJ3IzFp76nY",
                            "category_id": null,
                            "is_referral_code": true
                          },
                          "customer": {
                            "id": "cust_IdgAFZxYwwHctOk9pPuMu308",
                            "object": "customer",
                            "metadata": {
                              "region": "EMEA",
                              "sign-up": "true"
                            },
                            "source_id": "jck-wbhk"
                          },
                          "metadata": null,
                          "redemption": "r_0e3ab1f3fb99fee4b9",
                          "customer_id": "cust_IdgAFZxYwwHctOk9pPuMu308",
                          "tracking_id": "track_8RFQINPxgc+pykybVOUEXQ==",
                          "failure_code": "already_rolled_back",
                          "failure_message": "Already rolled back"
                        }
                      },
                      "source": {
                        "id": "wh_i45Uez36Uz8XNW6PXC0eyGmb",
                        "object": "webhook",
                        "target_url": "{{your.webhook.target.url}}"
                      },
                      "event": {
                        "id": "evred_0e3ac8bef9a431c30c",
                        "type": "redemption.rollback.failed",
                        "created_at": "2024-02-01T10:25:07.002Z",
                        "group_id": "v-0e3ac8bee15747425f",
                        "event_source": {
                          "api_key": {
                            "name": "Primary",
                            "app_id": "3XXXXXX3-XXXa-XXXv-aXXX-XXXX7XXdXXXX"
                          },
                          "channel": "API"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "events-redemption-rollback-failed"
      }
    },
    "/EVENTS.PUBLICATION.SUCCEEDED": {
      "post": {
        "summary": "Succeeded",
        "description": "A `PUBLICATION.SUCCEEDED` webhook means that a voucher code was successfully published to a customer. The webhook serves as a real-time notification mechanism and it can notify other systems or applications that a voucher was assigned. As a result, the systems can react by, for example, sending a notification about an assignment to a customer.",
        "tags": [
          "Events publication"
        ],
        "responses": {
          "200": {
            "description": "Indicates that publication has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventPublicationSucceeded"
                },
                "examples": {
                  "publication.succeeded": {
                    "value": {
                      "id": "whs_0e3aeaf5495c2fd9fb",
                      "project_id": "proj_PC2jOMWZ",
                      "created_at": "2024-02-01T12:54:33.174Z",
                      "type": "publication.succeeded",
                      "data": {
                        "user": {
                          "id": "user_ypzfEcSAphSONMGJRlj6trzXKsh7FGX7"
                        },
                        "campaign": {
                          "id": "camp_EV79Z6CjaAMpX4pFxVivvzzk",
                          "name": "Free product zero items-test",
                          "type": "AUTO_UPDATE",
                          "active": true,
                          "object": "campaign",
                          "voucher": {
                            "gift": null,
                            "type": "DISCOUNT_VOUCHER",
                            "discount": {
                              "type": "UNIT",
                              "units": null,
                              "effect": "ADD_NEW_ITEMS",
                              "unit_off": 0,
                              "unit_type": "prod_0df14b7e7d8975079d"
                            },
                            "redemption": {
                              "quantity": null,
                              "redeemed_quantity": 0
                            },
                            "code_config": {
                              "length": 1,
                              "prefix": "ZERO-",
                              "charset": "0123456789",
                              "pattern": "#",
                              "postfix": ""
                            },
                            "loyalty_card": null
                          },
                          "auto_join": false,
                          "join_once": false,
                          "created_at": "2024-01-24T12:39:58.736Z",
                          "updated_at": "2024-01-24T12:41:49.631Z",
                          "category_id": null,
                          "campaign_type": "DISCOUNT_COUPONS",
                          "is_referral_code": false
                        },
                        "customer": {
                          "id": "cust_IdgAFZxYwwHctOk9pPuMu308",
                          "name": "Jack Webhook",
                          "email": null,
                          "object": "customer",
                          "metadata": {
                            "region": "EMEA"
                          },
                          "source_id": "jck-wbhk"
                        },
                        "vouchers": [
                          {
                            "id": "v_gZt6Zc74XKRv6VXSqubC2jDMfHjzbFPi",
                            "code": "ZERO-8",
                            "type": "DISCOUNT_VOUCHER",
                            "active": true,
                            "object": "voucher",
                            "campaign": "Free product zero items-test",
                            "discount": {
                              "type": "UNIT",
                              "effect": "ADD_NEW_ITEMS",
                              "unit_off": 0,
                              "unit_type": "prod_0df14b7e7d8975079d"
                            },
                            "holder_id": "cust_IdgAFZxYwwHctOk9pPuMu308",
                            "created_at": "2024-01-24T12:39:59.139Z",
                            "redemption": {
                              "quantity": null,
                              "redeemed_quantity": 5
                            },
                            "updated_at": "2024-02-01T12:54:33.183Z",
                            "campaign_id": "camp_EV79Z6CjaAMpX4pFxVivvzzk",
                            "category_id": null,
                            "is_referral_code": false
                          }
                        ],
                        "publication": {
                          "id": "pub_r0413bLwExpB6LE0v286eNVmEpx6NxmP",
                          "object": "publication",
                          "result": "SUCCESS",
                          "channel": "voucherify-web-ui",
                          "customer": {
                            "id": "cust_IdgAFZxYwwHctOk9pPuMu308",
                            "name": "Jack Webhook",
                            "object": "customer",
                            "address": null,
                            "loyalty": null,
                            "summary": null,
                            "metadata": {
                              "region": "EMEA"
                            },
                            "referrals": null,
                            "source_id": "jck-wbhk"
                          },
                          "metadata": {
                            "method": "manual"
                          },
                          "source_id": "public_321932",
                          "created_at": "2024-02-01T12:54:33.174Z",
                          "customer_id": "cust_IdgAFZxYwwHctOk9pPuMu308",
                          "tracking_id": "jck-wbhk",
                          "vouchers_id": [
                            "v_gZt6Zc74XKRv6VXSqubC2jDMfHjzbFPi"
                          ]
                        }
                      },
                      "source": {
                        "id": "wh_i45Uez36Uz8XNW6PXC0eyGmb",
                        "object": "webhook",
                        "target_url": "{{your.webhook.target.url}}"
                      },
                      "event": {
                        "id": "evpub_0e3aeaf2ff59fe8966",
                        "type": "publication.succeeded",
                        "created_at": "2024-02-01T12:54:33.174Z",
                        "group_id": "v-0e3aeaf2e58de0ba42",
                        "event_source": {
                          "user": {
                            "id": "user_ypzfEcSAphSONMGJRlj6trzXKsh7FGX7"
                          },
                          "channel": "USER_PORTAL"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "events-publication-succeeded"
      }
    },
    "/EVENTS.VOUCHER.CREATED": {
      "post": {
        "summary": "Created",
        "tags": [
          "Events voucher"
        ],
        "responses": {
          "200": {
            "description": "Indicates that a voucher has been created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventVoucherCreated"
                },
                "examples": {
                  "voucher.created": {
                    "value": {
                      "id": "whs_0e4521b4738a0ee623",
                      "project_id": "proj_PC2jOMWZ",
                      "created_at": "2024-02-09T11:18:34.621Z",
                      "type": "voucher.created",
                      "data": {
                        "voucher": {
                          "id": "v_T3TAfGlOsyjEQkfvUvknNYfcynUEvJ3i",
                          "code": "Your-applicable-9",
                          "gift": null,
                          "type": "DISCOUNT_VOUCHER",
                          "active": true,
                          "assets": {
                            "qr": {
                              "id": "5a112cc9-900a-4d24-95b7-9680ca7f7133",
                              "url": "{{voucherify.url}}"
                            },
                            "barcode": {
                              "id": "c09881b3-b569-492f-82bb-5b977cd07b54",
                              "url": "{{voucherify.url}}"
                            }
                          },
                          "object": "voucher",
                          "publish": {
                            "url": "/v1/vouchers/Your-applicable-9/publications?page=1&limit=10",
                            "count": 0,
                            "object": "list"
                          },
                          "campaign": "Your-campaign-applicable-to",
                          "category": null,
                          "discount": {
                            "type": "PERCENT",
                            "effect": "APPLY_TO_ITEMS",
                            "percent_off": 5,
                            "amount_limit": 15000,
                            "aggregated_amount_limit": 30000
                          },
                          "metadata": {},
                          "categories": [],
                          "created_at": "2024-02-09T11:11:11.111Z",
                          "redemption": {
                            "url": "/v1/vouchers/Your-applicable-9/redemptions?page=1&limit=10",
                            "object": "list",
                            "quantity": null,
                            "redeemed_quantity": 0
                          },
                          "start_date": "2024-02-17T00:00:00.000Z",
                          "updated_at": null,
                          "campaign_id": "camp_18NCNUkQIaXnqbHqhtQnt355",
                          "category_id": "cat_0e156dab8f2e43873a",
                          "loyalty_card": null,
                          "additional_info": "Additional information about the voucher",
                          "expiration_date": "2024-02-29T00:00:00.000Z",
                          "is_referral_code": false,
                          "validity_timeframe": null,
                          "validity_day_of_week": [
                            1,
                            0
                          ]
                        },
                        "campaign": {
                          "id": "camp_18NCNUkQIaXnqbHqhtQnt355",
                          "name": "Test-campaign-applicable-to",
                          "type": "AUTO_UPDATE",
                          "active": true,
                          "object": "campaign",
                          "voucher": {
                            "gift": null,
                            "type": "DISCOUNT_VOUCHER",
                            "discount": {
                              "type": "PERCENT",
                              "units": null,
                              "effect": "APPLY_TO_ITEMS",
                              "percent_off": 5,
                              "amount_limit": 15000,
                              "aggregated_amount_limit": 30000
                            },
                            "redemption": {
                              "quantity": null,
                              "redeemed_quantity": 0
                            },
                            "code_config": {
                              "length": 1,
                              "prefix": "Your-applicable-",
                              "charset": "0123456789",
                              "pattern": "#",
                              "postfix": ""
                            },
                            "loyalty_card": null
                          },
                          "metadata": {},
                          "auto_join": false,
                          "join_once": false,
                          "created_at": "2024-02-09T10:16:04.352Z",
                          "category_id": null,
                          "campaign_type": "DISCOUNT_COUPONS",
                          "is_referral_code": false
                        }
                      },
                      "source": {
                        "id": "wh_i45Uez36Uz8XNW6PXC0eyGmb",
                        "object": "webhook",
                        "target_url": "{{your.webhook.target.url}}"
                      },
                      "event": {
                        "id": "evvou_0e4521b3624ab57bf2",
                        "type": "voucher.created",
                        "created_at": "2024-02-09T11:18:34.621Z",
                        "group_id": "v-0e4521b34d99538bee",
                        "event_source": {
                          "user": {
                            "id": "user_ypzfEcSAphSONMGJRlj6trzXKsh7FGX7"
                          },
                          "channel": "USER_PORTAL"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "events-voucher-published"
      }
    },
    "/EVENTS.VOUCHER.DISABLED": {
      "post": {
        "summary": "Disabled",
        "tags": [
          "Events voucher"
        ],
        "responses": {
          "200": {
            "description": "Indicates that a voucher has been disabled.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventVoucherDisabled"
                },
                "examples": {
                  "voucher.disabled": {
                    "value": {
                      "id": "whs_0e452532ba0a0eeee9",
                      "project_id": "proj_PC2jOMWZ",
                      "created_at": "2024-02-09T11:33:46.580Z",
                      "type": "voucher.disabled",
                      "data": {
                        "voucher": {
                          "id": "v_T3TAfGlOsyjEQkfvUvknNYfcynUEvJ3i",
                          "code": "Your-applicable-9",
                          "gift": null,
                          "type": "DISCOUNT_VOUCHER",
                          "active": false,
                          "assets": {
                            "qr": {
                              "id": "5a112cc9-900a-4d24-95b7-9680ca7f7133",
                              "url": "{{voucherify.url}}"
                            },
                            "barcode": {
                              "id": "c09881b3-b569-492f-82bb-5b977cd07b54",
                              "url": "{{voucherify.url}}"
                            }
                          },
                          "object": "voucher",
                          "publish": {
                            "url": "/v1/vouchers/Your-applicable-9/publications?page=1&limit=10",
                            "count": 0,
                            "object": "list"
                          },
                          "campaign": "Test-campaign-applicable-to",
                          "category": "Star Platinum",
                          "discount": {
                            "type": "PERCENT",
                            "effect": "APPLY_TO_ITEMS",
                            "percent_off": 5,
                            "amount_limit": 15000,
                            "aggregated_amount_limit": 30000
                          },
                          "metadata": {},
                          "categories": [
                            {
                              "id": "cat_0e156dab8f2e43873a",
                              "name": "Star Platinum",
                              "object": "category",
                              "hierarchy": 10,
                              "created_at": "2024-01-03T10:03:24.092Z"
                            }
                          ],
                          "created_at": "2024-02-09T11:18:34.621Z",
                          "redemption": {
                            "url": "/v1/vouchers/Your-applicable-9/redemptions?page=1&limit=10",
                            "object": "list",
                            "quantity": null,
                            "redeemed_quantity": 0
                          },
                          "start_date": "2024-02-17T00:00:00.000Z",
                          "updated_at": "2024-02-09T11:33:46.580Z",
                          "campaign_id": "camp_18NCNUkQIaXnqbHqhtQnt355",
                          "category_id": "cat_0e156dab8f2e43873a",
                          "loyalty_card": null,
                          "additional_info": "Additional information about the voucher",
                          "expiration_date": "2024-02-29T00:00:00.000Z",
                          "is_referral_code": false,
                          "validity_timeframe": null,
                          "validity_day_of_week": [
                            1,
                            0
                          ],
                          "validation_rules_assignments": {
                            "data": [
                              {
                                "id": "asgm_2V5oGJRMK0fAPhwU",
                                "object": "validation_rules_assignment",
                                "rule_id": "val_WmgZXBqwCZrv",
                                "created_at": "2024-02-09T10:16:04.401Z",
                                "related_object_id": "camp_18NCNUkQIaXnqbHqhtQnt355",
                                "related_object_type": "campaign"
                              }
                            ],
                            "total": 1,
                            "object": "list",
                            "data_ref": "data"
                          }
                        },
                        "campaign": {
                          "id": "camp_18NCNUkQIaXnqbHqhtQnt355",
                          "name": "Test-campaign-applicable-to",
                          "object": "campaign"
                        }
                      },
                      "source": {
                        "id": "wh_i45Uez36Uz8XNW6PXC0eyGmb",
                        "object": "webhook",
                        "target_url": "{{your.webhook.target.url}}"
                      },
                      "event": {
                        "id": "evvou_0e45252df6eef5089a",
                        "type": "voucher.disabled",
                        "created_at": "2024-02-09T11:33:46.580Z",
                        "group_id": "v-0e45252df1595395e7",
                        "event_source": {
                          "user": {
                            "id": "user_ypzfEcSAphSONMGJRlj6trzXKsh7FGX7"
                          },
                          "channel": "USER_PORTAL"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "events-voucher-published"
      }
    },
    "/EVENTS.VOUCHER.ENABLED": {
      "post": {
        "summary": "Enabled",
        "tags": [
          "Events voucher"
        ],
        "responses": {
          "200": {
            "description": "Indicates that a voucher has been enabled.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventVoucherEnabled"
                },
                "examples": {
                  "voucher.enabled": {
                    "value": {
                      "id": "whs_0e452541ac0a0eef4e",
                      "project_id": "proj_PC2jOMWZ",
                      "created_at": "2024-02-09T11:34:02.496Z",
                      "type": "voucher.enabled",
                      "data": {
                        "voucher": {
                          "id": "v_T3TAfGlOsyjEQkfvUvknNYfcynUEvJ3i",
                          "code": "Your-applicable-9",
                          "gift": null,
                          "type": "DISCOUNT_VOUCHER",
                          "active": true,
                          "assets": {
                            "qr": {
                              "id": "5a112cc9-900a-4d24-95b7-9680ca7f7133",
                              "url": "{{voucherify.url}}"
                            },
                            "barcode": {
                              "id": "c09881b3-b569-492f-82bb-5b977cd07b54",
                              "url": "{{voucherify.url}}"
                            }
                          },
                          "object": "voucher",
                          "publish": {
                            "url": "/v1/vouchers/Your-applicable-9/publications?page=1&limit=10",
                            "count": 0,
                            "object": "list"
                          },
                          "campaign": "Your-campaign-applicable-to",
                          "category": "Star Platinum",
                          "discount": {
                            "type": "PERCENT",
                            "effect": "APPLY_TO_ITEMS",
                            "percent_off": 5,
                            "amount_limit": 15000,
                            "aggregated_amount_limit": 30000
                          },
                          "metadata": {},
                          "categories": [
                            {
                              "id": "cat_0e156dab8f2e43873a",
                              "name": "Star Platinum",
                              "object": "category",
                              "hierarchy": 10,
                              "created_at": "2024-01-03T10:03:24.092Z"
                            }
                          ],
                          "created_at": "2024-02-09T11:18:34.621Z",
                          "redemption": {
                            "url": "/v1/vouchers/Your-applicable-9/redemptions?page=1&limit=10",
                            "object": "list",
                            "quantity": null,
                            "redeemed_quantity": 0
                          },
                          "start_date": "2024-02-17T00:00:00.000Z",
                          "updated_at": "2024-02-09T11:34:02.496Z",
                          "campaign_id": "camp_18NCNUkQIaXnqbHqhtQnt355",
                          "category_id": "cat_0e156dab8f2e43873a",
                          "loyalty_card": null,
                          "additional_info": "Additional information about the voucher",
                          "expiration_date": "2024-02-29T00:00:00.000Z",
                          "is_referral_code": false,
                          "validity_timeframe": null,
                          "validity_day_of_week": [
                            1,
                            0
                          ],
                          "validation_rules_assignments": {
                            "data": [
                              {
                                "id": "asgm_2V5oGJRMK0fAPhwU",
                                "object": "validation_rules_assignment",
                                "rule_id": "val_WmgZXBqwCZrv",
                                "created_at": "2024-02-09T10:16:04.401Z",
                                "related_object_id": "camp_18NCNUkQIaXnqbHqhtQnt355",
                                "related_object_type": "campaign"
                              }
                            ],
                            "total": 1,
                            "object": "list",
                            "data_ref": "data"
                          }
                        },
                        "campaign": {
                          "id": "camp_18NCNUkQIaXnqbHqhtQnt355",
                          "name": "Test-campaign-applicable-to",
                          "object": "campaign"
                        }
                      },
                      "source": {
                        "id": "wh_i45Uez36Uz8XNW6PXC0eyGmb",
                        "object": "webhook",
                        "target_url": "{{your.webhook.target.url}}"
                      },
                      "event": {
                        "id": "evvou_0e45253d81cab509fe",
                        "type": "voucher.enabled",
                        "created_at": "2024-02-09T11:34:02.496Z",
                        "group_id": "v-0e45253d7c59b38531",
                        "event_source": {
                          "user": {
                            "id": "user_ypzfEcSAphSONMGJRlj6trzXKsh7FGX7"
                          },
                          "channel": "USER_PORTAL"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "events-voucher-published"
      }
    },
    "/EVENTS.VOUCHER.UPDATED": {
      "post": {
        "summary": "Updated",
        "tags": [
          "Events voucher"
        ],
        "responses": {
          "200": {
            "description": "Indicates that a voucher has been updated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventVoucherUpdated"
                },
                "examples": {
                  "voucher.updated": {
                    "value": {
                      "id": "whs_0e2a2ef4694064dbd0",
                      "project_id": "proj_PC2jOMWZ",
                      "created_at": "2024-01-19T12:57:28.572Z",
                      "type": "voucher.updated",
                      "data": {
                        "voucher": {
                          "id": "v_EORkAULfvUsDf45sLckrboPi7Yl4FdjH",
                          "code": "10-percent-item-3",
                          "campaign": "Percent Item Discount Campaign",
                          "campaign_id": "camp_ILAvZfVhlUDm46S4DDZD6Yrv",
                          "category": null,
                          "category_id": "cat_0e156dab8f2e43873a",
                          "categories": [],
                          "type": "DISCOUNT_VOUCHER",
                          "discount": {
                            "type": "PERCENT",
                            "amount_limit": 5000,
                            "aggregated_amount_limit": 10000,
                            "percent_off": 10,
                            "effect": "APPLY_TO_ITEMS"
                          },
                          "gift": null,
                          "loyalty_card": null,
                          "start_date": null,
                          "expiration_date": null,
                          "validity_timeframe": null,
                          "validity_day_of_week": null,
                          "active": true,
                          "additional_info": null,
                          "metadata": {},
                          "assets": {
                            "qr": {
                              "id": "2d6ad829-a502-4dc1-b251-1522979b7c70",
                              "url": "{{voucher_qr_code.url}}"
                            },
                            "barcode": {
                              "id": "9d02c9a7-da65-41d9-b915-877880c92a52",
                              "url": "{{voucher_barcode.url}}"
                            }
                          },
                          "is_referral_code": false,
                          "created_at": "2023-12-12T12:12:12.638000Z",
                          "updated_at": "2024-01-01T11:11:11.572692Z",
                          "redemption": {
                            "quantity": null,
                            "redeemed_quantity": 4,
                            "object": "list",
                            "url": "/v1/vouchers/10-percent-item-3/redemptions?page=1&limit=10"
                          },
                          "publish": {
                            "object": "list",
                            "count": 0,
                            "url": "/v1/vouchers/10-percent-item-3/publications?page=1&limit=10"
                          },
                          "object": "voucher"
                        },
                        "campaign": {
                          "id": "camp_ILAvZfVhlUDm46S4DDZD6Yrv",
                          "name": "Percent Item Discount Campaign",
                          "object": "campaign"
                        }
                      },
                      "source": {
                        "id": "wh_i45Uez36Uz8XNW6PXC0eyGmb",
                        "object": "webhook",
                        "target_url": "{{your.webhook.target.url}}"
                      },
                      "event": {
                        "id": "evvou_0e2a2ef341d9ef0088",
                        "type": "voucher.updated",
                        "created_at": "2024-01-19T12:57:28.572Z",
                        "entity_id": "v_EORkAULfvUsDf45sLckrboPi7Yl4FdjH",
                        "group_id": "v-0e2a2ef3375dcb1189",
                        "event_source": {
                          "channel": "USER_PORTAL",
                          "user": {
                            "id": "user_ypzfEcSAphSONMGJRlj6trzXKsh7FGX7"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "events-voucher-published"
      }
    },
    "/EVENTS.VOUCHER.PUBLISHED": {
      "post": {
        "summary": "Published",
        "tags": [
          "Events voucher"
        ],
        "responses": {
          "200": {
            "description": "Indicates that a voucher has been published.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventVoucherPublished"
                },
                "examples": {
                  "voucher.published": {
                    "value": {
                      "id": "whs_0e2905dc73cdaa10bd",
                      "project_id": "proj_PC2jOMWZ",
                      "created_at": "2024-01-18T15:19:26.595Z",
                      "type": "voucher.published",
                      "data": {
                        "customer": {
                          "id": "cust_IdgAFZxYwwHctOk9pPuMu308",
                          "name": "Jack Webhook",
                          "email": null,
                          "source_id": "jck-wbhk",
                          "metadata": {
                            "region": "EMEA"
                          },
                          "object": "customer"
                        },
                        "campaign": {
                          "id": "camp_AQZ1GLRlbGaC2dETd31VbJQ9",
                          "name": "Loyalty programme",
                          "campaign_type": "LOYALTY_PROGRAM",
                          "type": "AUTO_UPDATE",
                          "is_referral_code": false,
                          "voucher": {
                            "type": "LOYALTY_CARD",
                            "loyalty_card": {
                              "points": 0
                            },
                            "redemption": {
                              "quantity": null,
                              "redeemed_quantity": 0
                            },
                            "code_config": {
                              "length": 8,
                              "prefix": "",
                              "charset": "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ",
                              "pattern": "########",
                              "postfix": ""
                            }
                          },
                          "auto_join": true,
                          "join_once": true,
                          "active": true,
                          "category_id": null,
                          "created_at": "2024-01-18T15:18:38.577044Z",
                          "object": "campaign"
                        },
                        "publication": {
                          "id": "pub_mLP4jygSMXfVejD3T9DmpsvHYah0Nd0I",
                          "object": "publication",
                          "created_at": "2024-01-18T15:19:26.594000Z",
                          "customer_id": "cust_IdgAFZxYwwHctOk9pPuMu308",
                          "tracking_id": "jck-wbhk",
                          "metadata": {},
                          "channel": "Automation",
                          "source_id": null,
                          "result": "SUCCESS",
                          "customer": {
                            "id": "cust_IdgAFZxYwwHctOk9pPuMu308",
                            "source_id": "jck-wbhk",
                            "name": "Jack Webhook",
                            "address": null,
                            "summary": null,
                            "loyalty": null,
                            "referrals": null,
                            "metadata": {
                              "region": "EMEA"
                            },
                            "object": "customer"
                          },
                          "vouchers_id": [
                            "v_hjQhSsitD6lAATASbRV1Ef7dUCjpy0iw"
                          ]
                        },
                        "voucher": {
                          "id": "v_hjQhSsitD6lAATASbRV1Ef7dUCjpy0iw",
                          "code": "MBOpskws",
                          "loyalty_card": {
                            "points": 0,
                            "balance": 0
                          },
                          "type": "LOYALTY_CARD",
                          "campaign": "Loyalty programme",
                          "campaign_id": "camp_AQZ1GLRlbGaC2dETd31VbJQ9",
                          "is_referral_code": false,
                          "holder_id": "cust_IdgAFZxYwwHctOk9pPuMu308",
                          "category_id": null,
                          "active": true,
                          "created_at": "2024-01-18T15:18:39.015000Z",
                          "updated_at": "2024-01-18T15:19:26.501570Z",
                          "redemption": {
                            "quantity": null,
                            "redeemed_quantity": 0,
                            "redeemed_points": 0
                          },
                          "object": "voucher"
                        },
                        "created_at": "2024-01-18T15:19:26.595Z"
                      },
                      "source": {
                        "id": "wh_i45Uez36Uz8XNW6PXC0eyGmb",
                        "object": "webhook",
                        "target_url": "{{your.webhook.target.url}}"
                      },
                      "event": {
                        "id": "evvou_0e2905daa8ea5594ea",
                        "type": "voucher.published",
                        "created_at": "2024-01-18T15:19:26.595Z",
                        "entity_id": "v_hjQhSsitD6lAATASbRV1Ef7dUCjpy0iw",
                        "group_id": "v-0e2905d4bb0dcc9e62",
                        "event_source": {
                          "channel": "INTERNAL"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "events-voucher-published"
      }
    },
    "/EVENTS.VOUCHER.LOYALTY_CARD.POINTS_ADDED": {
      "post": {
        "summary": "Loyalty card points added",
        "tags": [
          "Events voucher"
        ],
        "responses": {
          "200": {
            "description": "Indicates that a points have been added to a loyalty card.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventVoucherLoyaltyCardPointsAdded"
                },
                "examples": {
                  "voucher.loyalty_card.points_added": {
                    "value": {
                      "id": "whs_0e30615f8c0109fc76",
                      "project_id": "proj_PC2jOMWZ",
                      "created_at": "2024-01-24T08:28:37.621Z",
                      "type": "voucher.loyalty_card.points_added",
                      "data": {
                        "voucher": {
                          "id": "v_hjQhSsitD6lAATASbRV1Ef7dUCjpy0iw",
                          "code": "MBOpskws",
                          "loyalty_card": {
                            "points": 1370,
                            "balance": 1020
                          },
                          "type": "LOYALTY_CARD",
                          "campaign": "Loyalty programme",
                          "campaign_id": "camp_AQZ1GLRlbGaC2dETd31VbJQ9",
                          "is_referral_code": false,
                          "holder_id": "cust_IdgAFZxYwwHctOk9pPuMu308",
                          "category_id": null,
                          "active": true,
                          "created_at": "2024-01-18T15:18:39.015000Z",
                          "updated_at": "2024-01-24T08:28:37.621033Z",
                          "redemption": {
                            "quantity": null,
                            "redeemed_quantity": 5,
                            "redeemed_points": 350
                          },
                          "object": "voucher"
                        },
                        "balance": {
                          "type": "loyalty_card",
                          "total": 1370,
                          "object": "balance",
                          "points": 50,
                          "balance": 1020,
                          "operation_type": "MANUAL",
                          "related_object": {
                            "id": "v_hjQhSsitD6lAATASbRV1Ef7dUCjpy0iw",
                            "type": "voucher"
                          }
                        },
                        "campaign": {
                          "id": "camp_AQZ1GLRlbGaC2dETd31VbJQ9",
                          "name": "Loyalty programme",
                          "campaign_type": "LOYALTY_PROGRAM",
                          "type": "AUTO_UPDATE",
                          "is_referral_code": false,
                          "voucher": {
                            "type": "LOYALTY_CARD",
                            "loyalty_card": {
                              "points": 0
                            },
                            "redemption": {
                              "quantity": null,
                              "redeemed_quantity": 0
                            },
                            "code_config": {
                              "length": 8,
                              "prefix": "",
                              "charset": "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ",
                              "pattern": "########",
                              "postfix": ""
                            }
                          },
                          "auto_join": true,
                          "join_once": true,
                          "active": true,
                          "category_id": null,
                          "created_at": "2024-01-18T15:18:38.577044Z",
                          "object": "campaign"
                        },
                        "customer": {
                          "id": "cust_IdgAFZxYwwHctOk9pPuMu308",
                          "name": "Jack Webhook",
                          "email": null,
                          "source_id": "jck-wbhk",
                          "metadata": {
                            "region": "EMEA"
                          },
                          "object": "customer"
                        },
                        "transaction": {
                          "id": "vtx_0e30615d5ed9b7011b",
                          "campaign_id": "camp_AQZ1GLRlbGaC2dETd31VbJQ9",
                          "type": "POINTS_ADDITION",
                          "details": null,
                          "created_at": "2024-01-24T08:28:37.621033Z"
                        }
                      },
                      "source": {
                        "id": "wh_i45Uez36Uz8XNW6PXC0eyGmb",
                        "object": "webhook",
                        "target_url": "{{your.webhook.target.url}}"
                      },
                      "event": {
                        "id": "evvou_0e30615d63d9b7011f",
                        "type": "voucher.loyalty_card.points_added",
                        "created_at": "2024-01-24T08:28:37.621Z",
                        "entity_id": "v_hjQhSsitD6lAATASbRV1Ef7dUCjpy0iw",
                        "group_id": "v-0e30615d55e647466a",
                        "event_source": {
                          "channel": "USER_PORTAL",
                          "user": {
                            "id": "user_ypzfEcSAphSONMGJRlj6trzXKsh7FGX7"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "events-voucher-published"
      }
    },
    "/EVENTS.VOUCHER.DELETED": {
      "post": {
        "summary": "Deleted",
        "tags": [
          "Events voucher"
        ],
        "responses": {
          "200": {
            "description": "Indicates that a voucher has been deleted.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventVoucherDeleted"
                },
                "examples": {
                  "voucher.updated": {
                    "value": {
                      "id": "whs_0e451d90282927d378",
                      "project_id": "proj_PC2jOMWZ",
                      "created_at": "2024-02-02T02:22:22.222Z",
                      "type": "voucher.deleted",
                      "data": {
                        "voucher": {
                          "id": "v_SLmKIus1KXxx5N9qT1ZMVWOu2xk6JxJs",
                          "code": null,
                          "gift": null,
                          "type": "DISCOUNT_VOUCHER",
                          "active": true,
                          "assets": {
                            "qr": {
                              "id": "4eb4397e-74b7-4272-85ce-8009699bb216",
                              "url": "{{voucherify.url}}"
                            },
                            "barcode": {
                              "id": "abb5691b-92f7-413a-ad22-ca492ac9df8a",
                              "url": "{{voucherify.url}}"
                            }
                          },
                          "object": "voucher",
                          "publish": {
                            "url": "/v1/vouchers/null/publications?page=1&limit=10",
                            "count": 0,
                            "object": "list"
                          },
                          "campaign": "Your-campaign-applicable-to",
                          "category": null,
                          "discount": {
                            "type": "PERCENT",
                            "effect": "APPLY_TO_ITEMS",
                            "percent_off": 5,
                            "amount_limit": 15000,
                            "aggregated_amount_limit": 30000
                          },
                          "metadata": {},
                          "categories": [],
                          "created_at": "2024-02-02T02:02:02.222Z",
                          "redemption": {
                            "url": null,
                            "object": "list",
                            "quantity": null,
                            "redeemed_quantity": 0
                          },
                          "start_date": "2024-02-17T00:00:00.000Z",
                          "updated_at": null,
                          "campaign_id": "camp_18NCNUkQIaXnqbHqhtQnt355",
                          "category_id": null,
                          "loyalty_card": null,
                          "additional_info": null,
                          "expiration_date": "2024-02-29T00:00:00.000Z",
                          "is_referral_code": false,
                          "validity_timeframe": null,
                          "validity_day_of_week": [
                            1,
                            0
                          ]
                        },
                        "campaign": {
                          "id": "camp_18NCNUkQIaXnqbHqhtQnt355",
                          "name": "Your-campaign-applicable-to",
                          "type": "AUTO_UPDATE",
                          "active": true,
                          "object": "campaign",
                          "voucher": {
                            "gift": null,
                            "type": "DISCOUNT_VOUCHER",
                            "discount": {
                              "type": "PERCENT",
                              "units": null,
                              "effect": "APPLY_TO_ITEMS",
                              "percent_off": 5,
                              "amount_limit": 15000,
                              "aggregated_amount_limit": 30000
                            },
                            "redemption": {
                              "quantity": null,
                              "redeemed_quantity": 0
                            },
                            "code_config": {
                              "length": 1,
                              "prefix": "Your-applicable-",
                              "charset": "0123456789",
                              "pattern": "#",
                              "postfix": ""
                            },
                            "loyalty_card": null
                          },
                          "metadata": {},
                          "auto_join": false,
                          "join_once": false,
                          "created_at": "2024-02-02T02:02:02.222Z",
                          "category_id": null,
                          "campaign_type": "DISCOUNT_COUPONS",
                          "is_referral_code": false
                        }
                      },
                      "source": {
                        "id": "wh_i45Uez36Uz8XNW6PXC0eyGmb",
                        "object": "webhook",
                        "target_url": "{{your.webhook.target.url}}"
                      },
                      "event": {
                        "id": "evvou_0e451d8bb1100d79dd",
                        "type": "voucher.deleted",
                        "created_at": "2024-02-09T11:00:00.000Z",
                        "group_id": "v-0e451d8ba7803c79ad",
                        "event_source": {
                          "user": {
                            "id": "user_ypzfEcSAphSONMGJRlj6trzXKsh7FGX7"
                          },
                          "channel": "USER_PORTAL"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "events-voucher-published"
      }
    },
    "/EVENTS.CUSTOMER.CREATED": {
      "post": {
        "summary": "Created",
        "description": "A `CUSTOMER.CREATED` webhook means that a new customer was successfully created in Voucherify",
        "tags": [
          "Events customer"
        ],
        "responses": {
          "200": {
            "description": "Indicates that a customer has been created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventCustomerCreated"
                },
                "examples": {
                  "customer.created": {
                    "value": {
                      "id": "whs_0e3accd818dc2fc1a4",
                      "project_id": "proj_Pr0j3CTs",
                      "created_at": "2024-02-01T10:42:59.594Z",
                      "type": "customer.created",
                      "data": {
                        "customer": {
                          "id": "cust_7LvqCsUB9c8WyFP8JaLXchtF",
                          "name": "Lionel Johnson",
                          "email": "lionel-johnson@lion.io",
                          "object": "customer",
                          "address": {
                            "city": "Nottingham",
                            "state": "England",
                            "line_1": "Hammer Street 123",
                            "country": "United Kingdom",
                            "postal_code": "XX-ZZZ"
                          },
                          "loyalty": {
                            "points": 0,
                            "campaigns": {},
                            "referred_customers": 0
                          },
                          "summary": {
                            "orders": {
                              "total_count": 0,
                              "total_amount": 0,
                              "average_amount": 0,
                              "last_order_amount": 0
                            },
                            "redemptions": {
                              "gift": {
                                "amount_to_go": 0,
                                "redeemed_amount": 0
                              },
                              "loyalty_card": {
                                "points_to_go": 0,
                                "redeemed_points": 0
                              },
                              "total_failed": 0,
                              "total_redeemed": 0,
                              "total_succeeded": 0,
                              "total_rolled_back": 0,
                              "total_rollback_failed": 0,
                              "total_rollback_succeeded": 0
                            }
                          },
                          "birthdate": "1974-01-02",
                          "referrals": {
                            "total": 0,
                            "campaigns": []
                          },
                          "source_id": "lionel-johnson",
                          "created_at": "2024-02-01T10:42:59.594Z",
                          "description": "Famous",
                          "system_metadata": {}
                        }
                      },
                      "source": {
                        "id": "wh_i45Uez36Uz8XNW6PXC0eyGmb",
                        "object": "webhook",
                        "target_url": "{{your.webhook.target.url}}"
                      },
                      "event": {
                        "id": "evcus_0e3accd667e431c576",
                        "type": "customer.created",
                        "created_at": "2024-02-01T10:42:59.594Z",
                        "group_id": "v-0e3accd6410de0fc92",
                        "event_source": {
                          "api_key": {
                            "name": "Primary",
                            "app_id": "3XXXXXX3-XXXa-XXXv-aXXX-XXXX7XXdXXXX"
                          },
                          "channel": "API"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "events-customer-created"
      }
    },
    "/EVENTS.CUSTOMER.DELETED": {
      "post": {
        "summary": "Deleted",
        "description": "The `CUSTOMER.DELETED` webhook means a customer was successfully deleted in Voucherify.",
        "tags": [
          "Events customer"
        ],
        "responses": {
          "200": {
            "description": "Indicates that a customer has been deleted.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventCustomerDeleted"
                },
                "examples": {
                  "customer.deleted": {
                    "value": {
                      "id": "whs_0e3ad48e285c2fc80c",
                      "project_id": "proj_Pr0j3CTs",
                      "created_at": "2024-02-01T11:16:40.934Z",
                      "type": "customer.deleted",
                      "data": {
                        "customer": {
                          "id": "cust_7LvqCsUB9c8WyFP8JaLXchtF",
                          "name": "Lionel Johnson",
                          "email": "lionel-johnson@lion.io",
                          "object": "customer",
                          "address": {
                            "city": "Nottingham",
                            "state": "England",
                            "line_1": "Hammer Street 123",
                            "country": "United Kingdom",
                            "postal_code": "XX-ZZZ"
                          },
                          "loyalty": {
                            "points": 301,
                            "campaigns": {
                              "Loyalty programme": {
                                "points": 301,
                                "loyalty_tier": "ltr_0e30613ad01f044516",
                                "referred_customers": 0
                              }
                            },
                            "referred_customers": 0
                          },
                          "summary": {
                            "orders": {
                              "total_count": 1,
                              "total_amount": 2500,
                              "average_amount": 2500,
                              "last_order_date": "2024-02-01T10:42:59.676Z",
                              "last_order_amount": 2500
                            },
                            "redemptions": {
                              "gift": {
                                "amount_to_go": 0,
                                "redeemed_amount": 0
                              },
                              "loyalty_card": {
                                "points_to_go": 301,
                                "redeemed_points": 0
                              },
                              "total_failed": 0,
                              "total_redeemed": 1,
                              "total_succeeded": 1,
                              "total_rolled_back": 0,
                              "total_rollback_failed": 0,
                              "total_rollback_succeeded": 0
                            }
                          },
                          "birthdate": "1974-01-02",
                          "referrals": {
                            "total": 0,
                            "campaigns": []
                          },
                          "source_id": "lionel-johnson_deleted2024-02-01T11:16:40.918Z",
                          "created_at": "2024-02-01T10:42:59.594Z",
                          "updated_at": "2024-02-01T11:16:40.934Z",
                          "description": "Famous",
                          "system_metadata": {}
                        }
                      },
                      "source": {
                        "id": "wh_i45Uez36Uz8XNW6PXC0eyGmb",
                        "object": "webhook",
                        "target_url": "{{your.webhook.target.url}}"
                      },
                      "event": {
                        "id": "evcus_0e3ad48c5b99fefa52",
                        "type": "customer.deleted",
                        "created_at": "2024-02-01T11:16:40.934Z",
                        "group_id": "v-0e3ad48c520de08bee",
                        "event_source": {
                          "user": {
                            "id": "user_ypzfEcSAphSONMGJRlj6trzXKsh7FGX7"
                          },
                          "channel": "USER_PORTAL"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "events-customer-deleted"
      }
    },
    "/EVENTS.CUSTOMER.REWARDED.MAIN": {
      "post": {
        "summary": "Rewarded main",
        "description": "A `CUSTOMER.REWARDED.MAIN` webhook means that a customer received a reward in exchange for points in a loyalty campaign. The action is usually a manual process started by the customer.",
        "tags": [
          "Events customer"
        ],
        "responses": {
          "200": {
            "description": "Indicates that a customer has received a reward.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventCustomerRewarded"
                },
                "examples": {
                  "customer.rewarded": {
                    "value": {
                      "id": "whs_0e2907d96fcdaa1256",
                      "project_id": "proj_Pr0j3CTs",
                      "created_at": "2024-01-18T15:28:09.660Z",
                      "type": "customer.rewarded",
                      "data": {
                        "customer": {
                          "id": "cust_IdgAFZxYwwHctOk9pPuMu308",
                          "name": "Jack Webhook",
                          "email": null,
                          "source_id": "jck-wbhk",
                          "metadata": {
                            "region": "EMEA"
                          },
                          "object": "customer"
                        },
                        "holder": {
                          "id": "cust_IdgAFZxYwwHctOk9pPuMu308",
                          "name": "Jack Webhook",
                          "email": null,
                          "source_id": "jck-wbhk",
                          "metadata": {
                            "region": "EMEA"
                          },
                          "object": "customer"
                        },
                        "voucher": {
                          "id": "v_hjQhSsitD6lAATASbRV1Ef7dUCjpy0iw",
                          "code": "MBOpskws",
                          "loyalty_card": {
                            "points": 900,
                            "balance": 850
                          },
                          "type": "LOYALTY_CARD",
                          "campaign": "Loyalty programme",
                          "campaign_id": "camp_AQZ1GLRlbGaC2dETd31VbJQ9",
                          "is_referral_code": false,
                          "holder_id": "cust_IdgAFZxYwwHctOk9pPuMu308",
                          "category_id": null,
                          "active": true,
                          "created_at": "2024-01-18T15:18:39.015000Z",
                          "updated_at": "2024-01-18T15:27:56.228461Z",
                          "redemption": {
                            "quantity": null,
                            "redeemed_quantity": 1,
                            "redeemed_points": 50
                          },
                          "object": "voucher"
                        },
                        "campaign": {
                          "id": "camp_AQZ1GLRlbGaC2dETd31VbJQ9",
                          "name": "Loyalty programme",
                          "campaign_type": "LOYALTY_PROGRAM",
                          "type": "AUTO_UPDATE",
                          "is_referral_code": false,
                          "voucher": {
                            "type": "LOYALTY_CARD",
                            "loyalty_card": {
                              "points": 0
                            },
                            "redemption": {
                              "quantity": null,
                              "redeemed_quantity": 0
                            },
                            "code_config": {
                              "length": 8,
                              "prefix": "",
                              "charset": "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ",
                              "pattern": "########",
                              "postfix": ""
                            }
                          },
                          "auto_join": true,
                          "join_once": true,
                          "active": true,
                          "category_id": null,
                          "created_at": "2024-01-18T15:18:38.577044Z",
                          "object": "campaign"
                        },
                        "redemption": {
                          "id": "r_0e2907cc52498573ee",
                          "customer_id": "cust_IdgAFZxYwwHctOk9pPuMu308",
                          "tracking_id": "track_8RFQINPxgc+pykybVOUEXQ==",
                          "date": "2024-01-18T15:27:56.234000Z",
                          "amount": 50,
                          "order": {
                            "id": "ord_8GGVSci7FUPX1UX94qBHQPSE",
                            "source_id": null,
                            "status": "PAID",
                            "customer_id": "cust_IdgAFZxYwwHctOk9pPuMu308",
                            "referrer_id": null,
                            "amount": 2900,
                            "total_amount": 2900,
                            "items": [
                              {
                                "object": "order_item",
                                "product_id": "prod_0df14b684f58f282d4",
                                "quantity": 1,
                                "amount": 2900,
                                "price": 2900,
                                "subtotal_amount": 2900
                              }
                            ],
                            "metadata": {},
                            "created_at": "2024-01-18T15:27:56.175354Z",
                            "object": "order"
                          },
                          "reward": {
                            "customer": {
                              "id": "cust_IdgAFZxYwwHctOk9pPuMu308",
                              "name": "Jack Webhook",
                              "email": null,
                              "source_id": "jck-wbhk",
                              "metadata": {
                                "region": "EMEA"
                              },
                              "object": "customer"
                            },
                            "assignment_id": "rewa_XiIei2UpOYkLQxZ4J3U2pYlK",
                            "product": {
                              "id": "prod_0df14b7e7d8975079d",
                              "source_id": "star-th-bottle",
                              "name": "Star Thermal Bottle"
                            },
                            "id": "rew_oOrlSAeYmfh6gYGOH7JMYVzv",
                            "object": "reward",
                            "name": "Material",
                            "created_at": "2024-01-18T15:17:20.072326Z",
                            "updated_at": null,
                            "parameters": {
                              "product": {
                                "id": "prod_0df14b7e7d8975079d",
                                "sku_id": null
                              }
                            },
                            "type": "MATERIAL"
                          },
                          "customer": {
                            "id": "cust_IdgAFZxYwwHctOk9pPuMu308",
                            "name": "Jack Webhook",
                            "email": null,
                            "source_id": "jck-wbhk",
                            "metadata": {
                              "region": "EMEA"
                            },
                            "object": "customer"
                          },
                          "result": "SUCCESS",
                          "status": "SUCCEEDED",
                          "voucher": {
                            "id": "v_hjQhSsitD6lAATASbRV1Ef7dUCjpy0iw",
                            "code": "MBOpskws",
                            "loyalty_card": {
                              "points": 900,
                              "balance": 850
                            },
                            "type": "LOYALTY_CARD",
                            "campaign": "Loyalty programme",
                            "campaign_id": "camp_AQZ1GLRlbGaC2dETd31VbJQ9",
                            "is_referral_code": false,
                            "holder_id": "cust_IdgAFZxYwwHctOk9pPuMu308",
                            "category_id": null,
                            "active": true,
                            "created_at": "2024-01-18T15:18:39.015000Z",
                            "updated_at": "2024-01-18T15:27:56.228461Z",
                            "redemption": {
                              "quantity": null,
                              "redeemed_quantity": 1,
                              "redeemed_points": 50
                            },
                            "object": "voucher"
                          },
                          "metadata": {
                            "location_id": []
                          },
                          "object": "redemption"
                        },
                        "reward": {
                          "assignment_id": "rewa_XiIei2UpOYkLQxZ4J3U2pYlK",
                          "product": {
                            "id": "prod_0df14b7e7d8975079d",
                            "source_id": "star-th-bottle",
                            "name": "Star Thermal Bottle"
                          },
                          "id": "rew_oOrlSAeYmfh6gYGOH7JMYVzv",
                          "object": "reward",
                          "name": "Material",
                          "type": "CAMPAIGN"
                        },
                        "referral_tier": null,
                        "balance": null,
                        "custom_event": null,
                        "customer_event": null
                      },
                      "source": {
                        "id": "wh_i45Uez36Uz8XNW6PXC0eyGmb",
                        "object": "webhook",
                        "target_url": "{{your.webhook.target.url}}"
                      },
                      "event": {
                        "id": "evcus_0e2907d3d1c911ccc4",
                        "type": "customer.rewarded",
                        "created_at": "2024-01-18T15:28:09.660Z",
                        "entity_id": "cust_IdgAFZxYwwHctOk9pPuMu308",
                        "group_id": "v-0e2907cb97c058cdba",
                        "event_source": {
                          "channel": "INTERNAL"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "events-customer-rewarded-main"
      }
    },
    "/EVENTS.CUSTOMER.REWARDED.LOYALTY_POINTS": {
      "post": {
        "summary": "Rewarded loyalty_points",
        "description": "A `CUSTOMER.REWARDED.LOYALTY_POINTS` webhook means that a customer received loyalty points on one of their loyalty cards. The webhook contains the details of the number of points the customer received.",
        "tags": [
          "Events customer"
        ],
        "responses": {
          "200": {
            "description": "Indicates that a customer has received loyalty points.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventCustomerRewardedLoyaltyPoints"
                },
                "examples": {
                  "customer.rewarded.loyalty_points": {
                    "value": {
                      "id": "whs_0e2905dc6ecdaa10b9",
                      "project_id": "proj_Pr0j3CTs",
                      "created_at": "2024-01-18T15:19:28.400Z",
                      "type": "customer.rewarded.loyalty_points",
                      "data": {
                        "customer": {
                          "id": "cust_IdgAFZxYwwHctOk9pPuMu308",
                          "name": "Jack Webhook",
                          "email": null,
                          "source_id": "jck-wbhk",
                          "metadata": {
                            "region": "EMEA"
                          },
                          "object": "customer"
                        },
                        "holder": {
                          "id": "cust_IdgAFZxYwwHctOk9pPuMu308",
                          "name": "Jack Webhook",
                          "email": null,
                          "source_id": "jck-wbhk",
                          "metadata": {
                            "region": "EMEA"
                          },
                          "object": "customer"
                        },
                        "voucher": {
                          "id": "v_hjQhSsitD6lAATASbRV1Ef7dUCjpy0iw",
                          "code": "MBOpskws",
                          "loyalty_card": {
                            "points": 0,
                            "balance": 0
                          },
                          "type": "LOYALTY_CARD",
                          "campaign": "Loyalty programme",
                          "campaign_id": "camp_AQZ1GLRlbGaC2dETd31VbJQ9",
                          "is_referral_code": false,
                          "holder_id": "cust_IdgAFZxYwwHctOk9pPuMu308",
                          "category_id": null,
                          "active": true,
                          "created_at": "2024-01-18T15:18:39.015000Z",
                          "updated_at": "2024-01-18T15:19:26.501570Z",
                          "redemption": {
                            "quantity": null,
                            "redeemed_quantity": 0,
                            "redeemed_points": 0
                          },
                          "object": "voucher"
                        },
                        "campaign": {
                          "id": "camp_AQZ1GLRlbGaC2dETd31VbJQ9",
                          "name": "Loyalty programme",
                          "campaign_type": "LOYALTY_PROGRAM",
                          "type": "AUTO_UPDATE",
                          "is_referral_code": false,
                          "voucher": {
                            "type": "LOYALTY_CARD",
                            "loyalty_card": {
                              "points": 0
                            },
                            "redemption": {
                              "quantity": null,
                              "redeemed_quantity": 0
                            },
                            "code_config": {
                              "length": 8,
                              "prefix": "",
                              "charset": "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ",
                              "pattern": "########",
                              "postfix": ""
                            }
                          },
                          "auto_join": true,
                          "join_once": true,
                          "active": true,
                          "category_id": null,
                          "created_at": "2024-01-18T15:18:38.577044Z",
                          "object": "campaign"
                        },
                        "loyalty_tier": null,
                        "earning_rule": {
                          "id": "ern_FQxftbKUq9E93k00Z3qkC0sX",
                          "created_at": "2024-01-18T15:18:39.156632Z",
                          "updated_at": null,
                          "validation_rule_id": null,
                          "loyalty": {
                            "type": "PROPORTIONAL",
                            "calculation_type": "ORDER_TOTAL_AMOUNT",
                            "order": {
                              "total_amount": {
                                "every": 500,
                                "points": 10
                              }
                            }
                          },
                          "event": "order.paid",
                          "source": {
                            "banner": "Order-paid",
                            "object_id": "camp_AQZ1GLRlbGaC2dETd31VbJQ9",
                            "object_type": "campaign"
                          },
                          "active": true,
                          "object": "earning_rule",
                          "automation_id": "auto_sRc6onPl70seyfrGOXhwDxYE",
                          "metadata": {}
                        },
                        "balance": {
                          "type": "loyalty_card",
                          "total": 900,
                          "object": "balance",
                          "points": 900,
                          "balance": 900,
                          "operation_type": "AUTOMATIC",
                          "related_object": {
                            "id": "v_hjQhSsitD6lAATASbRV1Ef7dUCjpy0iw",
                            "type": "voucher"
                          }
                        },
                        "order": {
                          "id": "ord_CkH2s0T5xJkK0x5pGYXoBaFn",
                          "source_id": null,
                          "created_at": "2024-01-18T15:19:20.675043Z",
                          "updated_at": "2024-01-18T15:19:20.731920Z",
                          "status": "PAID",
                          "amount": 50000,
                          "discount_amount": 5000,
                          "total_discount_amount": 5000,
                          "total_amount": 45000,
                          "items": [
                            {
                              "object": "order_item",
                              "product_id": "prod_0df14b7e7d8975079d",
                              "quantity": 20,
                              "amount": 50000,
                              "price": 2500,
                              "subtotal_amount": 50000,
                              "product": {
                                "id": "prod_0df14b7e7d8975079d",
                                "source_id": "star-th-bottle",
                                "name": "Star Thermal Bottle",
                                "price": 2500
                              }
                            },
                            {
                              "object": "order_item",
                              "product_id": "prod_5h1pp1ng",
                              "quantity": 1,
                              "amount": 0,
                              "price": 0,
                              "subtotal_amount": 0,
                              "product": {
                                "id": "prod_5h1pp1ng",
                                "source_id": "5h1pp1ng",
                                "name": "Shipping"
                              }
                            }
                          ],
                          "metadata": {
                            "card": [
                              "Other"
                            ],
                            "region": "US",
                            "currency": "USD"
                          },
                          "customer": {
                            "id": "cust_IdgAFZxYwwHctOk9pPuMu308",
                            "address": null,
                            "summary": null,
                            "loyalty": null,
                            "referrals": null,
                            "object": "customer"
                          },
                          "customer_id": "cust_IdgAFZxYwwHctOk9pPuMu308",
                          "referrer_id": null,
                          "object": "order",
                          "redemptions": {
                            "r_0e2905d4e6985a04b5": {
                              "date": "2024-01-18T15:19:20.731Z",
                              "related_object_type": "promotion_tier",
                              "related_object_id": "promo_aKUQomRfnj47MHoOV8XcNmO1",
                              "related_object_parent_id": "camp_7xzcWMVIefoujUIpuwwrHxIU"
                            }
                          }
                        },
                        "event": {
                          "id": "evcus_0e2905d4db185a04ad",
                          "type": "customer.order.paid",
                          "category": "EFFECT",
                          "entity_id": "cust_IdgAFZxYwwHctOk9pPuMu308",
                          "created_at": "2024-01-18T15:19:20.676Z",
                          "group_id": "v-0e2905d4bb0dcc9e62"
                        }
                      },
                      "source": {
                        "id": "wh_i45Uez36Uz8XNW6PXC0eyGmb",
                        "object": "webhook",
                        "target_url": "{{your.webhook.target.url}}"
                      },
                      "event": {
                        "id": "evcus_0e2905dac32a559502",
                        "type": "customer.rewarded.loyalty_points",
                        "created_at": "2024-01-18T15:19:28.400Z",
                        "entity_id": "cust_IdgAFZxYwwHctOk9pPuMu308",
                        "group_id": "v-0e2905d4bb0dcc9e62",
                        "event_source": {
                          "channel": "INTERNAL"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "events-customer-rewarded-loyalty_points"
      }
    },
    "/EVENTS.CUSTOMER.CONSENTS.GIVEN": {
      "post": {
        "summary": "Consents given",
        "description": "",
        "tags": [
          "Events customer"
        ],
        "responses": {
          "200": {
            "description": "Indicates that a customer has given their consent to marketing purposes.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventCustomerConsentsGiven"
                },
                "examples": {
                  "customer.consents.given": {
                    "value": {
                      "id": "whs_0e3ad6dcc41c2fc9df",
                      "project_id": "proj_Pr0j3CTs",
                      "created_at": "2024-02-01T11:26:44.171Z",
                      "type": "customer.consents.given",
                      "data": {
                        "consents": [
                          {
                            "id": "cnst_Qp0z8MtbwSzBYmYbJ45LFZkJ",
                            "name": "Promos",
                            "object": "consent"
                          }
                        ],
                        "customer": {
                          "id": "cust_1g637SqVZnkdPNdAIZ7Ra879",
                          "name": "Jane Doe",
                          "email": "jane@jane.io",
                          "object": "customer",
                          "metadata": {
                            "lang": "en",
                            "region": "EMEA"
                          },
                          "source_id": "test_customer_id_2"
                        }
                      },
                      "source": {
                        "id": "wh_i45Uez36Uz8XNW6PXC0eyGmb",
                        "object": "webhook",
                        "target_url": "{{your.webhook.target.url}}"
                      },
                      "event": {
                        "id": "evcus_0e3ad6d97299fefbb6",
                        "type": "customer.consents.given",
                        "created_at": "2024-02-01T11:26:44.171Z",
                        "group_id": "v-0e3ad6d9688de09071",
                        "event_source": {
                          "api_key": {
                            "name": "Primary",
                            "app_id": "3XXXXXX3-XXXa-XXXv-aXXX-XXXX7XXdXXXX"
                          },
                          "channel": "API"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "events-customer-consents-given"
      }
    },
    "/EVENTS.CUSTOMER.CONSENTS.REVOKED": {
      "post": {
        "summary": "Consents revoked",
        "description": "A `CUSTOMER.CONSENTS.REVOKED` webhook means that a customer revoked their consent in Voucherify, such as consent to receive marketing communication.",
        "tags": [
          "Events customer"
        ],
        "responses": {
          "200": {
            "description": "Indicates that a customer has revoked their consent to marketing purposes.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventCustomerConsentsRevoked"
                },
                "examples": {
                  "customer.consents.revoked": {
                    "value": {
                      "id": "whs_0e3ad6231d5c2fc94b",
                      "project_id": "proj_Pr0j3CTs",
                      "created_at": "2024-02-01T11:23:36.494Z",
                      "type": "customer.consents.revoked",
                      "data": {
                        "consents": [
                          {
                            "id": "cnst_Qp0z8MtbwSzBYmYbJ45LFZkJ",
                            "name": "Promos",
                            "object": "consent"
                          }
                        ],
                        "customer": {
                          "id": "cust_1g637SqVZnkdPNdAIZ7Ra879",
                          "name": "Jane Doe",
                          "email": "jane@jane.io",
                          "object": "customer",
                          "metadata": {
                            "lang": "en",
                            "region": "EMEA"
                          },
                          "source_id": "test_customer_id_2"
                        }
                      },
                      "source": {
                        "id": "wh_i45Uez36Uz8XNW6PXC0eyGmb",
                        "object": "webhook",
                        "target_url": "{{your.webhook.target.url}}"
                      },
                      "event": {
                        "id": "evcus_0e3ad6222b99fefb46",
                        "type": "customer.consents.revoked",
                        "created_at": "2024-02-01T11:23:36.494Z",
                        "group_id": "v-0e3ad6222717475c6f",
                        "event_source": {
                          "api_key": {
                            "name": "Primary",
                            "app_id": "3XXXXXX3-XXXa-XXXv-aXXX-XXXX7XXdXXXX"
                          },
                          "channel": "API"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "events-customer-consents-revoked"
      }
    }
  },
  "components": {
    "schemas": {
      "4_obj_reward_object_parameters_CAMPAIGN": {
        "title": "Campaign",
        "type": "object",
        "description": "These are parameters representing a Campaign reward. These can be in the form of discount coupons, gift card credits, or loyalty point credits.",
        "properties": {
          "campaign": {
            "description": "Objects stores information about the campaign related to the reward.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/4_obj_reward_object_parameters_CAMPAIGN_DISCOUNT_COUPONS"
              },
              {
                "$ref": "#/components/schemas/4_obj_reward_object_parameters_CAMPAIGN_GIFT_VOUCHERS"
              },
              {
                "$ref": "#/components/schemas/4_obj_reward_object_parameters_CAMPAIGN_LOYALTY_PROGRAM"
              }
            ]
          }
        }
      },
      "4_obj_reward_object_parameters_CAMPAIGN_DISCOUNT_COUPONS": {
        "title": "Discount Coupons",
        "type": "object",
        "description": "These are parameters representing a discount coupon, which is a subset of a Campaign reward.",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of the campaign assigned by Voucherify.",
            "example": "camp_13BbZ0kQsNinhqsX3wUts2UP"
          },
          "type": {
            "type": "string",
            "description": "Campaign type.",
            "default": "DISCOUNT_COUPONS",
            "enum": [
              "DISCOUNT_COUPONS"
            ]
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "4_obj_reward_object_parameters_CAMPAIGN_GIFT_VOUCHERS": {
        "title": "Gift Vouchers",
        "type": "object",
        "description": "These are parameters representing a gift voucher, which is a subset of a Campaign reward.",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of the campaign assigned by Voucherify.",
            "example": "camp_13BbZ0kQsNinhqsX3wUts2UP"
          },
          "balance": {
            "type": "integer",
            "description": "The incremental amout to be added to the current balance on the gift card. Value is multiplied by 100 to precisely represent 2 decimal places. For example, $100 amount is written as 10000."
          },
          "type": {
            "type": "string",
            "description": "Campaign type.",
            "default": "GIFT_VOUCHERS",
            "enum": [
              "GIFT_VOUCHERS"
            ]
          }
        },
        "required": [
          "id",
          "balance",
          "type"
        ]
      },
      "4_obj_reward_object_parameters_CAMPAIGN_LOYALTY_PROGRAM": {
        "title": "Points on loyalty card",
        "type": "object",
        "description": "These are parameters representing points on a loyalty card, which is a subset of a Campaign reward.",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of the campaign assigned by Voucherify.",
            "example": "camp_13BbZ0kQsNinhqsX3wUts2UP"
          },
          "balance": {
            "type": "integer",
            "description": "The incremental points to be added to the current balance on the loyalty card."
          },
          "type": {
            "type": "string",
            "description": "Campaign type.",
            "default": "LOYALTY_PROGRAM",
            "enum": [
              "LOYALTY_PROGRAM"
            ]
          }
        },
        "required": [
          "id",
          "balance",
          "type"
        ]
      },
      "4_obj_reward_object_parameters_COIN": {
        "title": "Pay with Points",
        "type": "object",
        "description": "These are parameters representing a Pay with Points (COIN) reward. ",
        "properties": {
          "coin": {
            "type": "object",
            "description": "Defines the ratio by mapping the number of loyalty points in `points_ratio` to a predefined cash amount in `exchange_ratio`.",
            "properties": {
              "exchange_ratio": {
                "type": "integer",
                "description": "The cash equivalent of the points defined in the `points_ratio` property."
              },
              "points_ratio": {
                "type": "integer",
                "description": "The number of loyalty points that will map to the predefined cash amount defined by the `exchange_ratio` property."
              }
            }
          }
        }
      },
      "4_obj_reward_object_parameters_MATERIAL": {
        "title": "Material",
        "type": "object",
        "description": "These are parameters representing products as a reward.",
        "properties": {
          "product": {
            "type": "object",
            "description": "Contains information about the product given as a reward.",
            "properties": {
              "id": {
                "type": "string",
                "example": "prod_0b7d7dfb05cbe5c616",
                "description": "Unique identifier of the product assigned by Voucherify. "
              },
              "sku_id": {
                "type": "string",
                "nullable": true,
                "description": "Unique identifier of the SKU assigned by Voucherify for the SKU given as a reward.",
                "example": "sku_0b7d7dfb090be5c619"
              }
            }
          }
        }
      },
      "BusValRuleAssignment": {
        "title": "Business Validation Rule Assignment",
        "description": "Assignments of a business validation rule",
        "example": {
          "id": "asgm_LnY1g7UNFA9KyDrD",
          "rule_id": "val_3gPNA6SnH4ae",
          "related_object_id": "camp_CZOnEGiZfwIKWmSjhIoIT7Ol",
          "related_object_type": "campaign",
          "object": "validation_rules_assignment",
          "validation_status": "PARTIALLY_VALID",
          "validation_omitted_rules": [
            "1"
          ]
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier for an assignment."
          },
          "rule_id": {
            "type": "string",
            "description": "The unique identifier for a rule."
          },
          "related_object_id": {
            "type": "string",
            "description": "The unique identifier for a related object."
          },
          "related_object_type": {
            "type": "string",
            "description": "The type of a related object."
          },
          "created_at": {
            "type": "string",
            "description": "Timestamp representing the date and time when the object was created in the ISO 8601 format.",
            "example": "2024-01-01T11:11:11.111Z",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "description": "Timestamp representing the date and time when the object was last updated in the ISO 8601 format.",
            "example": "2024-01-01T11:11:11.111Z",
            "format": "date-time"
          },
          "object": {
            "type": "string",
            "description": "The type of the object represented by JSON.",
            "default": "validation_rules_assignment",
            "enum": [
              "validation_rules_assignment"
            ]
          },
          "validation_status": {
            "type": "string",
            "description": "The validation status of the assignment.",
            "enum": [
              "VALID",
              "PARTIALLY_VALID",
              "INVALID"
            ]
          },
          "validation_omitted_rules": {
            "type": "array",
            "description": "The list of omitted rules.",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "id",
          "rule_id",
          "related_object_id",
          "related_object_type",
          "object",
          "validation_status",
          "validation_omitted_rules"
        ]
      },
      "CampaignLoyaltyCard": {
        "title": "Campaign Loyalty Card",
        "type": "object",
        "description": "Schema model for a campaign loyalty card.",
        "properties": {
          "points": {
            "type": "integer",
            "description": "The initial number of points to assign to the loyalty card. This is the current loyalty card score i.e. the number of loyalty points on the card."
          },
          "expiration_rules": {
            "type": "object",
            "properties": {
              "period_type": {
                "type": "string",
                "description": "Type of period"
              },
              "period_value": {
                "type": "integer",
                "description": "Value of the period"
              },
              "rounding_type": {
                "type": "string",
                "description": "Type of rounding"
              },
              "rounding_value": {
                "type": "integer",
                "description": "Value of rounding"
              }
            },
            "required": [
              "period_type",
              "period_value",
              "rounding_type",
              "rounding_value"
            ]
          }
        },
        "required": [
          "points"
        ]
      },
      "Category": {
        "check": "how to generate this??Apparently, so far there aren't any hooks that need that - check.",
        "title": "Category",
        "description": "This is an object representing a category.",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique category ID assigned by Voucherify."
          },
          "name": {
            "type": "string",
            "description": "Category name."
          },
          "hierarchy": {
            "type": "integer",
            "description": "Category hierarchy."
          },
          "created_at": {
            "type": "string",
            "description": "Timestamp representing the date and time when the category was created in the ISO 8601 format.",
            "example": "2024-01-01T11:11:11.111Z",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "description": "Timestamp representing the date and time when the category was updated in the ISO 8601 format.",
            "example": "2024-01-01T11:11:11.111Z",
            "format": "date-time"
          },
          "object": {
            "type": "string",
            "default": "category",
            "enum": [
              "category"
            ],
            "description": "The type of object represented by the JSON. This object stores information about the category."
          },
          "stacking_rules_type": {
            "check": "generate a redemption with a stacking rule set to joint or exclusive",
            "type": "string",
            "description": "The type of the stacking rule eligibility.",
            "enum": [
              "JOINT",
              "EXCLUSIVE"
            ]
          }
        },
        "required": [
          "id",
          "name",
          "hierarchy",
          "created_at",
          "object"
        ]
      },
      "CodeConfig": {
        "title": "Code Config",
        "type": "object",
        "description": "Schema containing information about config used for voucher. Defines the code pattern (prefix, suffix, length, charset, etc).",
        "properties": {
          "length": {
            "type": "number",
            "description": "Number of characters in a generated code (excluding prefix and postfix)."
          },
          "charset": {
            "type": "string",
            "description": "Characters that can appear in the code."
          },
          "prefix": {
            "type": "string",
            "description": "A text appended before the code."
          },
          "postfix": {
            "type": "string",
            "description": "A text appended after the code."
          },
          "pattern": {
            "type": "string",
            "description": "A pattern for codes where hashes (#) will be replaced with random characters. Overrides `length`."
          },
          "initial_count": {
            "type": "integer",
            "description": "The initial count."
          }
        }
      },
      "CodeConfigRequiredLengthCharsetPattern": {
        "title": "Code Config Required Length Charset Pattern",
        "allOf": [
          {
            "$ref": "#/components/schemas/CodeConfig"
          }
        ],
        "required": [
          "length",
          "prefix",
          "charset",
          "pattern",
          "postfix"
        ]
      },
      "CustomEvent": {
        "check": "simply check",
        "title": "Custom Event",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique custom event ID."
          },
          "object": {
            "type": "string",
            "default": "event",
            "description": "The object represented is an `event`.",
            "enum": [
              "event"
            ]
          },
          "type": {
            "type": "string",
            "description": "The event name."
          },
          "customer": {
            "description": "A simple customer object",
            "allOf": [
              {
                "$ref": "#/components/schemas/SimpleCustomerRequiredObjectType"
              }
            ]
          },
          "referral": {
            "type": "object",
            "description": "Referral object.",
            "properties": {
              "referrer_id": {
                "type": "string",
                "description": "Unique identifier of the referrer assigned by Voucherify.",
                "example": "cust_nM4jqPiaXUvQdVSA6vTRUnix"
              },
              "code": {
                "type": "string",
                "description": "Voucher code."
              },
              "id": {
                "type": "string",
                "description": "Unique voucher ID."
              }
            }
          },
          "loyalty": {
            "type": "object"
          },
          "metadata": {
            "type": "object",
            "description": "A set of custom key/value pairs that you can attach to a customer. The metadata object stores all custom attributes assigned to the custom event."
          },
          "created_at": {
            "type": "string",
            "example": "2021-12-22T10:13:06.487Z",
            "description": "Timestamp representing the date and time when the custom event was created in the ISO 8601 format.",
            "format": "date-time"
          }
        },
        "required": [
          "object",
          "type",
          "customer",
          "referral",
          "loyalty"
        ]
      },
      "CustomerBase": {
        "title": "Customer Base",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Customer's first and last name."
          },
          "description": {
            "type": "string",
            "description": "An arbitrary string that you can attach to a customer object."
          },
          "email": {
            "type": "string",
            "description": "Customer's email address."
          },
          "phone": {
            "type": "string",
            "description": "Customer's phone number. This parameter is mandatory for sending out codes to customers via an SMS channel."
          },
          "birthdate": {
            "type": "string",
            "description": "Customer's birthdate; format YYYY-MM-DD.",
            "format": "date"
          },
          "address": {
            "type": "object",
            "nullable": true,
            "description": "Customer's address.",
            "properties": {
              "city": {
                "type": "string",
                "description": "City"
              },
              "state": {
                "type": "string",
                "description": "State"
              },
              "line_1": {
                "type": "string",
                "description": "First line of address."
              },
              "line_2": {
                "type": "string",
                "description": "Second line of address."
              },
              "country": {
                "type": "string",
                "description": "Country."
              },
              "postal_code": {
                "type": "string",
                "description": "Postal code."
              }
            }
          },
          "metadata": {
            "type": "object",
            "description": "A set of custom key/value pairs that you can attach to a customer. The metadata object stores all custom attributes assigned to the customer."
          }
        }
      },
      "CustomerId": {
        "title": "Customer ID",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "A unique identifier of an existing customer."
          },
          "object": {
            "type": "string",
            "description": "The type of object represented by JSON.",
            "default": "customer",
            "enum": [
              "customer"
            ]
          }
        },
        "required": [
          "id",
          "object"
        ]
      },
      "CustomerLoyalty": {
        "title": "Customer Loyalty",
        "type": "object",
        "properties": {
          "points": {
            "type": "integer",
            "description": "Customer's loyalty points."
          },
          "referred_customers": {
            "type": "integer",
            "description": "Total number of customers referred by the customer."
          },
          "campaigns": {
            "type": "object",
            "description": "Contains campaigns with details about point balances and how many customers were referred by the customer.",
            "additionalProperties": {
              "type": "object",
              "description": "Contains details about the point balances left on loyalty cards and the number of referred customers in each campaign.",
              "properties": {
                "points": {
                  "type": "integer",
                  "description": "Remaining point balance in campaign."
                },
                "loyalty_tier": {
                  "type": "string",
                  "example": "ltr_UJ5Q54Q0OvEhua87Qfv2Ki5x",
                  "description": "Customer's loyalty tier within the campaign."
                },
                "referred_customers": {
                  "type": "integer",
                  "description": "Number of customers referred by the customer in the campaign."
                }
              }
            }
          }
        },
        "required": [
          "points",
          "referred_customers",
          "campaigns"
        ]
      },
      "CustomerReferrals": {
        "title": "Customer Referrals",
        "type": "object",
        "description": "Summary of customer's referrals, in this case, the customer being the referee, i.e. information about the source of referrals and number of times the customer was referred by other customers.",
        "properties": {
          "total": {
            "type": "integer",
            "description": "Total number of times this customer received a referral, i.e. was referred by another customer."
          },
          "campaigns": {
            "type": "array",
            "description": "Contains an array of campaigns that served as the source of a referral for the customer.",
            "items": {
              "title": "Customer Referrals Campaigns Item",
              "type": "object",
              "description": "Contains information about the source of the referral.",
              "properties": {
                "campaign_id": {
                  "type": "string",
                  "description": "Unique campaign ID assigned by Voucherify.",
                  "example": "camp_rRsfatlwN7unSeUIJDCYedal"
                },
                "referrer_id": {
                  "type": "string",
                  "example": "cust_sehkNIi8Uq2qQuRqSr7xn4Zi",
                  "description": "Unique referrer ID assigned by Voucherify. This is the customer ID of a customer that is referring this customer."
                },
                "related_object_id": {
                  "type": "string",
                  "description": "Related object id",
                  "example": "r_0b9d4cc4aa164dd073"
                },
                "related_object_type": {
                  "type": "string",
                  "description": "Related object type, i.e. `redemption`."
                },
                "date": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2024-01-01T11:11:11.111Z",
                  "description": "Timestamp representing the date and time when the customer was referred in the ISO 8601 format."
                }
              },
              "required": [
                "campaign_id",
                "referrer_id",
                "related_object_id",
                "related_object_type",
                "date"
              ]
            }
          }
        },
        "required": [
          "total",
          "campaigns"
        ]
      },
      "CustomerSummary": {
        "title": "Customer Summary",
        "type": "object",
        "properties": {
          "redemptions": {
            "$ref": "#/components/schemas/CustomerSummaryRedemptions"
          },
          "orders": {
            "$ref": "#/components/schemas/CustomerSummaryOrders"
          }
        },
        "required": [
          "redemptions",
          "orders"
        ]
      },
      "CustomerSummaryOrders": {
        "title": "Customer Summary Orders",
        "type": "object",
        "properties": {
          "total_amount": {
            "type": "integer",
            "description": "The total amount spent by the customer. The value is multiplied by 100 to precisely represent 2 decimal places. For example `1000 cents` for `$10.00`."
          },
          "total_count": {
            "type": "integer",
            "description": "Total number of orders made by the customer."
          },
          "average_amount": {
            "type": "integer",
            "description": "Average amount spent on orders. `total_amount` &divide; `total_count`. The value is multiplied by 100 to precisely represent 2 decimal places. For example `1000 cents` for `$10.00`."
          },
          "last_order_amount": {
            "type": "integer",
            "description": "Amount spent on last order. The value is multiplied by 100 to precisely represent 2 decimal places. For example `1000 cents` for `$10.00`."
          },
          "last_order_date": {
            "type": "string",
            "format": "date-time",
            "example": "2024-01-01T11:11:11.111Z",
            "description": "Timestamp representing the date and time of the customer's last order in the ISO 8601 format."
          }
        },
        "required": [
          "total_amount",
          "total_count",
          "average_amount",
          "last_order_amount"
        ]
      },
      "CustomerSummaryRedemptions": {
        "title": "Customer Summary Redemptions",
        "type": "object",
        "properties": {
          "total_redeemed": {
            "type": "integer",
            "description": "Total number of the redemptions made by the customer."
          },
          "total_failed": {
            "type": "integer",
            "description": "Total number of the redemptions that failed."
          },
          "total_succeeded": {
            "type": "integer",
            "description": "Total number of the redemptions that succeeded."
          },
          "total_rolled_back": {
            "type": "integer",
            "description": "Total number of the redemptions that were rolled back for the customer."
          },
          "total_rollback_failed": {
            "type": "integer",
            "description": "Total number of the redemption rollbacks that failed."
          },
          "total_rollback_succeeded": {
            "type": "integer",
            "description": "Total number of the redemption rollbacks that succeeded."
          },
          "gift": {
            "type": "object",
            "description": "Summary of gift card credits.",
            "required": [
              "redeemed_amount",
              "amount_to_go"
            ],
            "properties": {
              "redeemed_amount": {
                "type": "integer",
                "description": "Total amount of gift card credits redeemed by the customer. The value is multiplied by 100 to precisely represent 2 decimal places. For example `1000 cents` for `$10.00`.",
                "default": 0
              },
              "amount_to_go": {
                "type": "integer",
                "description": "Remaining gift card balance across all gift cards. The value is multiplied by 100 to precisely represent 2 decimal places. For example `1000 cents` for `$10.00`.",
                "default": 0
              }
            }
          },
          "loyalty_card": {
            "type": "object",
            "description": "Summary of loyalty points.",
            "required": [
              "redeemed_points",
              "points_to_go"
            ],
            "properties": {
              "redeemed_points": {
                "type": "integer",
                "description": "Total number of the loyalty points redeemed by the customer."
              },
              "points_to_go": {
                "type": "integer",
                "description": "Sum of the remaining available point balance across all loyalty cards."
              }
            }
          }
        },
        "required": [
          "total_redeemed",
          "total_failed",
          "total_succeeded",
          "total_rolled_back",
          "total_rollback_failed",
          "total_rollback_succeeded",
          "gift",
          "loyalty_card"
        ]
      },
      "CustomerWithSummaryLoyaltyReferrals": {
        "title": "Customer With Summary Loyalty Referrals",
        "allOf": [
          {
            "type": "object",
            "title": "Customer Response Data",
            "properties": {
              "id": {
                "type": "string",
                "description": "The ID of an existing customer that will be linked to the redemption in this request."
              },
              "source_id": {
                "type": "string",
                "description": "A unique identifier of the customer who validates a voucher."
              },
              "summary": {
                "nullable": true,
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CustomerSummary"
                  }
                ]
              },
              "loyalty": {
                "nullable": true,
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CustomerLoyalty"
                  }
                ]
              },
              "referrals": {
                "nullable": true,
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CustomerReferrals"
                  }
                ]
              },
              "system_metadata": {
                "type": "object",
                "description": "Object used to store system metadata information."
              },
              "created_at": {
                "type": "string",
                "description": "Timestamp representing the date and time when the customer was created in the ISO 8601 format.",
                "example": "2024-01-01T11:11:11.111Z",
                "format": "date-time"
              },
              "updated_at": {
                "type": "string",
                "description": "Timestamp representing the date and time when the customer was updated in the ISO 8601 format.",
                "example": "2024-01-01T11:11:11.111Z",
                "format": "date-time"
              },
              "assets": {
                "type": "object",
                "description": "Contains information about the customer's cockpit.",
                "properties": {
                  "cockpit_url": {
                    "type": "string",
                    "description": "Customer's cockpit URL address."
                  }
                }
              },
              "object": {
                "type": "string",
                "description": "The type of object represented by JSON.",
                "default": "customer",
                "enum": [
                  "customer"
                ]
              }
            },
            "required": [
              "summary",
              "loyalty",
              "referrals",
              "object"
            ]
          },
          {
            "$ref": "#/components/schemas/CustomerBase"
          }
        ]
      },
      "DefaultPayloadData1": {
        "type": "object",
        "required": [
          "id",
          "name",
          "project_id",
          "created_at"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Sendout ID for this webhook.",
            "example": "whs_0e16e42bc6e0c65b57"
          },
          "project_id": {
            "type": "string",
            "description": "ID of the Voucherify project.",
            "example": "proj_5T4Rpl4T1nuM"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The exact moment when the webhook was created.",
            "example": "2024-01-01T11:11:11.111Z"
          }
        }
      },
      "DefaultPayloadData2": {
        "type": "object",
        "required": [
          "source",
          "event"
        ],
        "properties": {
          "source": {
            "type": "object",
            "description": "Webhook ID of the distribution for which the distribution has been initiated.",
            "properties": {
              "id": {
                "type": "string",
                "description": "ID number of the webhook.",
                "example": "wh_j56Vfy47Vx9YOX7QYD1fzHnc"
              },
              "object": {
                "type": "string",
                "description": "Determines the type of the object.",
                "enum": [
                  "webhook",
                  "distribution"
                ],
                "example": "webhook"
              },
              "target_url": {
                "type": "string",
                "description": "The address where the webhook will be sent."
              }
            },
            "required": [
              "id",
              "object",
              "target_url"
            ]
          },
          "event": {
            "type": "object",
            "description": "Contains other data of the event that initiated the sendout.",
            "properties": {
              "id": {
                "type": "string",
                "description": "Unique identifier of the event that initiated the sendout.",
                "example": "evred_1f3611301g3127begb"
              },
              "type": {
                "type": "string",
                "description": "Determines the type of the object.",
                "example": "redemption.succeeded"
              },
              "created_at": {
                "type": "string",
                "description": "The exact moment when the event was created.",
                "example": "2024-01-01T11:11:11.111Z",
                "format": "date-time"
              },
              "entity_id": {
                "type": "string",
                "description": "Unique identifier of the entity that initiated the sendout.",
                "example": "r_1f3611302bf107befb"
              },
              "group_id": {
                "type": "string",
                "description": "Unique identifier of the request that caused the event.",
                "example": "v-1f36113948e50fc4ge"
              },
              "event_source": {
                "type": "object",
                "description": "Contains the source of the object that initiated the sendout.",
                "required": [
                  "channel"
                ],
                "properties": {
                  "channel": {
                    "type": "string",
                    "description": "Determines the channel that initiated the sendout.",
                    "enum": [
                      "USER_PORTAL",
                      "API",
                      "CLIENT_API",
                      "INTERNAL"
                    ],
                    "example": "API"
                  },
                  "user": {
                    "type": "string",
                    "description": "Defines the user who triggered the event.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Unique identifier of the user.",
                        "example": "user_xyzfghSTprSTUVWXYlk6tuvXYst7FGH7"
                      }
                    }
                  },
                  "api_key": {
                    "type": "object",
                    "description": "Determines the API key used to initiate the sendout.",
                    "required": [
                      "name",
                      "app_id"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Channel name in the application keys."
                      },
                      "app_id": {
                        "type": "string",
                        "description": "Contains the application ID from the Voucherify API key pair.",
                        "example": "1XXXX5XX-0XXX-XXXb-X7XX-XX2XXaXXX6XX"
                      }
                    }
                  }
                }
              }
            },
            "required": [
              "id",
              "type",
              "created_at",
              "entity_id",
              "group_id",
              "event_source"
            ]
          }
        }
      },
      "Discount": {
        "title": "Discount",
        "type": "object",
        "description": "Contains information about discount.",
        "oneOf": [
          {
            "$ref": "#/components/schemas/DiscountAmount"
          },
          {
            "$ref": "#/components/schemas/DiscountUnit"
          },
          {
            "$ref": "#/components/schemas/DiscountUnitMultiple"
          },
          {
            "$ref": "#/components/schemas/DiscountPercent"
          },
          {
            "$ref": "#/components/schemas/DiscountFixed"
          }
        ]
      },
      "DiscountAmount": {
        "type": "object",
        "title": "Amount",
        "properties": {
          "type": {
            "type": "string",
            "default": "AMOUNT",
            "enum": [
              "AMOUNT"
            ],
            "description": "Defines the type of the voucher."
          },
          "amount_off": {
            "type": "number",
            "description": "Amount taken off the subtotal of a price. Value is multiplied by 100 to precisely represent 2 decimal places. For example, a $10 discount is written as 1000."
          },
          "amount_off_formula": {
            "type": "string"
          },
          "aggregated_amount_limit": {
            "type": "integer",
            "description": "Maximum discount amount per order."
          },
          "effect": {
            "description": "Defines how the discount is applied to the customer's order.",
            "allOf": [
              {
                "$ref": "#/components/schemas/DiscountAmountVouchersEffectTypes"
              }
            ]
          },
          "is_dynamic": {
            "type": "boolean",
            "description": "Flag indicating whether the discount was calculated using a formula."
          }
        },
        "required": [
          "type",
          "amount_off"
        ]
      },
      "DiscountAmountVouchersEffectTypes": {
        "title": "Discount Amount Vouchers Effect Types",
        "enum": [
          "APPLY_TO_ORDER",
          "APPLY_TO_ITEMS",
          "APPLY_TO_ITEMS_PROPORTIONALLY",
          "APPLY_TO_ITEMS_PROPORTIONALLY_BY_QUANTITY",
          "APPLY_TO_ITEMS_BY_QUANTITY"
        ],
        "type": "string"
      },
      "DiscountFixed": {
        "title": "Fixed",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "default": "FIXED",
            "enum": [
              "FIXED"
            ],
            "description": "Defines the type of the voucher."
          },
          "fixed_amount": {
            "type": "number",
            "description": "Sets a fixed value for an order total or the item price. The value is multiplied by 100 to precisely represent 2 decimal places. For example, a $10 discount is written as 1000. If the fixed amount is calculated by the formula, i.e. the `fixed_amount_formula` parameter is present in the fixed amount definition, this value becomes the **fallback value**. As a result, if the formula cannot be calculated due to missing metadata, for example, this value will be used as the fixed value."
          },
          "fixed_amount_formula": {
            "type": "string"
          },
          "effect": {
            "description": "Defines how the discount is applied to the customer's order.",
            "allOf": [
              {
                "$ref": "#/components/schemas/DiscountFixedVouchersEffectTypes"
              }
            ]
          },
          "is_dynamic": {
            "type": "boolean",
            "description": "Flag indicating whether the discount was calculated using a formula."
          }
        },
        "required": [
          "type",
          "fixed_amount"
        ]
      },
      "DiscountFixedVouchersEffectTypes": {
        "title": "Discount Fixed Vouchers Effect Types",
        "enum": [
          "APPLY_TO_ORDER",
          "APPLY_TO_ITEMS"
        ],
        "type": "string"
      },
      "DiscountPercent": {
        "type": "object",
        "title": "Percent",
        "properties": {
          "type": {
            "type": "string",
            "default": "PERCENT",
            "enum": [
              "PERCENT"
            ],
            "description": "Defines the type of the voucher."
          },
          "percent_off": {
            "type": "number",
            "description": "The percent discount that the customer will receive."
          },
          "percent_off_formula": {
            "type": "string"
          },
          "amount_limit": {
            "type": "number",
            "description": "Upper limit allowed to be applied as a discount. Value is multiplied by 100 to precisely represent 2 decimal places. For example, a $6 maximum discount is written as 600."
          },
          "aggregated_amount_limit": {
            "type": "integer",
            "description": "Maximum discount amount per order."
          },
          "effect": {
            "description": "Defines how the discount is applied to the customer's order.",
            "allOf": [
              {
                "$ref": "#/components/schemas/DiscountPercentVouchersEffectTypes"
              }
            ]
          },
          "is_dynamic": {
            "type": "boolean",
            "description": "Flag indicating whether the discount was calculated using a formula."
          }
        },
        "required": [
          "type",
          "percent_off"
        ]
      },
      "DiscountPercentVouchersEffectTypes": {
        "title": "Discount Percent Vouchers Effect Types",
        "enum": [
          "APPLY_TO_ORDER",
          "APPLY_TO_ITEMS"
        ],
        "type": "string"
      },
      "DiscountUnit": {
        "type": "object",
        "title": "Unit",
        "properties": {
          "type": {
            "type": "string",
            "default": "UNIT",
            "enum": [
              "UNIT"
            ],
            "description": "Discount type."
          },
          "unit_off": {
            "type": "integer",
            "description": "Number of units granted a full value discount."
          },
          "unit_off_formula": {
            "type": "string"
          },
          "effect": {
            "description": "Defines how the unit is added to the customer's order.",
            "allOf": [
              {
                "$ref": "#/components/schemas/DiscountUnitVouchersEffectTypes"
              }
            ]
          },
          "unit_type": {
            "type": "string",
            "description": "The product deemed as free, chosen from product inventory (e.g. time, items)."
          },
          "product": {
            "description": "Contains information about the product.",
            "allOf": [
              {
                "$ref": "#/components/schemas/SimpleProductDiscountUnit"
              }
            ]
          },
          "sku": {
            "$ref": "#/components/schemas/SimpleSkuDiscountUnit"
          },
          "is_dynamic": {
            "type": "boolean",
            "description": "Flag indicating whether the discount was calculated using a formula."
          }
        },
        "required": [
          "type",
          "unit_type"
        ]
      },
      "DiscountUnitMultiple": {
        "type": "object",
        "title": "Unit Multiple",
        "properties": {
          "type": {
            "type": "string",
            "default": "UNIT",
            "enum": [
              "UNIT"
            ],
            "description": "Discount type."
          },
          "effect": {
            "type": "string",
            "default": "ADD_MANY_ITEMS",
            "enum": [
              "ADD_MANY_ITEMS"
            ],
            "description": "Defines how the discount is applied to the customer's order."
          },
          "units": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DiscountUnitMultipleOneUnit"
            }
          }
        },
        "required": [
          "type",
          "units"
        ]
      },
      "DiscountUnitMultipleOneUnit": {
        "type": "object",
        "title": "One Unit",
        "properties": {
          "unit_off": {
            "type": "number",
            "description": "Number of units granted a full value discount."
          },
          "unit_off_formula": {
            "type": "string"
          },
          "effect": {
            "type": "string",
            "enum": [
              "ADD_NEW_ITEMS",
              "ADD_MISSING_ITEMS"
            ],
            "description": "Defines how the unit is added to the customer's order."
          },
          "unit_type": {
            "type": "string",
            "description": "The product deemed as free, chosen from product inventory (e.g. time, items)."
          },
          "product": {
            "description": "Contains information about the product.",
            "allOf": [
              {
                "$ref": "#/components/schemas/SimpleProductDiscountUnit"
              }
            ]
          },
          "sku": {
            "description": "Contains information about the sku.",
            "allOf": [
              {
                "$ref": "#/components/schemas/SimpleSkuDiscountUnit"
              }
            ]
          }
        },
        "required": [
          "effect",
          "unit_type"
        ]
      },
      "DiscountUnitVouchersEffectTypes": {
        "title": "Discount Unit Vouchers Effect Types",
        "enum": [
          "ADD_MISSING_ITEMS",
          "ADD_NEW_ITEMS",
          "ADD_MANY_ITEMS"
        ],
        "type": "string"
      },
      "EarningRule": {
        "title": "Earning Rule",
        "allOf": [
          {
            "$ref": "#/components/schemas/EarningRuleBase"
          },
          {
            "type": "object",
            "properties": {
              "validation_rule_id": {
                "type": "string",
                "nullable": true,
                "description": "A unique validation rule identifier assigned by Voucherify."
              },
              "updated_at": {
                "type": "string",
                "nullable": true,
                "format": "date-time",
                "description": "Timestamp representing the date and time when the earning rule was last updated in the ISO 8601 format."
              },
              "active": {
                "type": "boolean",
                "description": "Shows whether the earning rule is turned on or off. `true` indicates an active earning rule\n- `false` indicates an inactive earning rule"
              }
            },
            "required": [
              "validation_rule_id",
              "updated_at"
            ]
          }
        ]
      },
      "EarningRuleBase": {
        "title": "EarningRuleBase",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique earning rule identifier assigned by Voucherify."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp representing the date and time when the earning rule was created in the ISO 8601 format."
          },
          "loyalty": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/EarningRuleFixed"
              },
              {
                "$ref": "#/components/schemas/EarningRuleProportional"
              }
            ]
          },
          "event": {
            "description": "Defines the event which triggers the earning rule to add points to a loyalty card.",
            "allOf": [
              {
                "$ref": "#/components/schemas/EarningRuleEvent"
              }
            ]
          },
          "custom_event": {
            "type": "object",
            "properties": {
              "schema_id": {
                "type": "string"
              }
            },
            "required": [
              "schema_id"
            ]
          },
          "segment": {
            "type": "object",
            "description": "Contains the id of a customer segment. Required for the customer.segment.entered option in event.",
            "properties": {
              "id": {
                "type": "string",
                "description": "Unique identifier of a customer segment assigned by Voucherify."
              }
            },
            "required": [
              "id"
            ]
          },
          "source": {
            "type": "object",
            "required": [
              "object_id",
              "object_type"
            ],
            "description": "Contains the custom earning rule name and parent campaign.",
            "properties": {
              "banner": {
                "type": "string",
                "description": "Name of the earning rule. This is displayed as a header for the earning rule in the Dashboard."
              },
              "object_id": {
                "type": "string",
                "description": "A unique campaign identifier assigned by Voucherify."
              },
              "object_type": {
                "type": "string",
                "description": "Defines the object associated with the earning rule. Defaults to `campaign`.",
                "default": "campaign",
                "enum": [
                  "campaign"
                ]
              }
            }
          },
          "object": {
            "type": "string",
            "default": "earning_rule",
            "enum": [
              "earning_rule"
            ],
            "description": "The type of object represented by JSON. Default is `earning_rule`."
          },
          "automation_id": {
            "type": "string",
            "description": "For internal use by Voucherify."
          },
          "start_date": {
            "type": "string",
            "description": "Activation timestamp defines when the earning rule starts to be active in the ISO 8601 format."
          },
          "expiration_date": {
            "type": "string",
            "description": "Expiration date defines when the earning rule expires. Expiration timestamp in the ISO 8601 format."
          },
          "validity_timeframe": {
            "type": "object",
            "description": "Sets recurrent time periods when the earning rule is valid.",
            "properties": {
              "duration": {
                "type": "string",
                "description": "Defines the amount of time an earning rule will be active in the ISO 8601 format."
              },
              "interval": {
                "type": "string",
                "description": "Defines the intervening time between two time points in the ISO 8601 format, expressed as a duration."
              }
            },
            "required": [
              "duration",
              "interval"
            ]
          },
          "validity_day_of_week": {
            "type": "array",
            "description": "Integer array corresponding to the particular days of the week in which the earning rule is valid.\n\n- `0` Sunday\n- `1` Monday\n- `2` Tuesday\n- `3` Wednesday\n- `4` Thursday\n- `5` Friday\n- `6` Saturday",
            "items": {
              "type": "integer",
              "minimum": 0,
              "maximum": 6
            }
          },
          "metadata": {
            "type": "object",
            "description": "The metadata object stores all custom attributes assigned to the earning rule. A set of key/value pairs that is attached to an earning rule object."
          }
        },
        "required": [
          "id",
          "created_at",
          "loyalty",
          "source",
          "object",
          "automation_id",
          "metadata"
        ]
      },
      "EarningRuleEvent": {
        "title": "Earning Rule Event",
        "type": "string",
        "enum": [
          "order.paid",
          "customer.segment.entered",
          "custom_event",
          "customer.loyalty.tier.upgraded",
          "customer.loyalty.tier.downgraded",
          "customer.loyalty.tier.prolonged",
          "customer.loyalty.tier.joined",
          "customer.loyalty.tier.left"
        ]
      },
      "EarningRuleFixed": {
        "title": "Define fixed amount of points",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "default": "FIXED",
            "enum": [
              "FIXED"
            ],
            "description": "The number of points to be added to the loyalty card."
          },
          "points": {
            "type": "integer",
            "description": "Defines how the points are added to the loyalty card. FIXED adds a fixed number of points."
          }
        }
      },
      "EarningRuleProportional": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/EarningRuleProportionalOrder"
          },
          {
            "$ref": "#/components/schemas/EarningRuleProportionalOrderItems"
          },
          {
            "$ref": "#/components/schemas/EarningRuleProportionalCustomerMetadata"
          },
          {
            "$ref": "#/components/schemas/EarningRuleProportionalCustomEvent"
          }
        ],
        "title": "Calculate points proportionally"
      },
      "EarningRuleProportionalCustomerMetadata": {
        "title": "Customer Metadata",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "default": "PROPORTIONAL",
            "enum": [
              "PROPORTIONAL"
            ],
            "description": "Defines how the points are added to the loyalty card. PROPORTIONAL adds points based on a pre-defined ratio."
          },
          "calculation_type": {
            "type": "string",
            "default": "CUSTOMER_METADATA",
            "enum": [
              "CUSTOMER_METADATA"
            ],
            "description": "CUSTOMER_METADATA: Customer Metadata (X points for every Y in metadata attribute, defined in the property key under the customer.metadata object)."
          },
          "customer": {
            "type": "object",
            "required": [
              "metadata"
            ],
            "properties": {
              "metadata": {
                "type": "object",
                "required": [
                  "every",
                  "points",
                  "property"
                ],
                "description": "Defines the ratio based on the property defined in the `calculation_type` parameter.",
                "properties": {
                  "every": {
                    "type": "integer",
                    "description": "For how many increments of the customer metadata property to grant points for."
                  },
                  "points": {
                    "type": "integer",
                    "description": "Number of points to be awarded, i.e. how many points to be added to the loyalty card."
                  },
                  "property": {
                    "type": "string",
                    "description": "Customer metadata property."
                  }
                }
              }
            }
          }
        },
        "required": [
          "type",
          "calculation_type",
          "customer"
        ]
      },
      "EarningRuleProportionalCustomEvent": {
        "title": "Earning Rule Proportional Custom Event",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "default": "PROPORTIONAL",
            "enum": [
              "PROPORTIONAL"
            ],
            "description": "Defines how the points are added to the loyalty card. PROPORTIONAL adds points based on a pre-defined ratio."
          },
          "calculation_type": {
            "type": "string",
            "default": "CUSTOM_EVENT_METADATA",
            "enum": [
              "CUSTOM_EVENT_METADATA"
            ],
            "description": "`CUSTOM_EVENT_METADATA`: Custom event metadata (X points for every Y in metadata attribute)."
          },
          "custom_event": {
            "type": "object",
            "required": [
              "metadata"
            ],
            "properties": {
              "metadata": {
                "type": "object",
                "required": [
                  "every",
                  "points",
                  "property"
                ],
                "description": "Defines the ratio based on the property defined in the `calculation_type` parameter.",
                "properties": {
                  "every": {
                    "type": "integer",
                    "description": "For how many increments of the customer metadata property to grant points for."
                  },
                  "points": {
                    "type": "integer",
                    "description": "Number of points to be awarded, i.e. how many points to be added to the loyalty card."
                  },
                  "property": {
                    "type": "string",
                    "description": "Custom event metadata property."
                  }
                }
              }
            }
          }
        },
        "required": [
          "type",
          "calculation_type",
          "custom_event"
        ]
      },
      "EarningRuleProportionalOrder": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/EarningRuleProportionalOrderAmount"
          },
          {
            "$ref": "#/components/schemas/EarningRuleProportionalOrderTotalAmount"
          },
          {
            "$ref": "#/components/schemas/EarningRuleProportionalOrderMetadata"
          }
        ],
        "title": "Order"
      },
      "EarningRuleProportionalOrderAmount": {
        "title": "Order Amount",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "default": "PROPORTIONAL",
            "enum": [
              "PROPORTIONAL"
            ],
            "description": "Defines how the points are added to the loyalty card. `PROPORTIONAL` adds points based on a pre-defined ratio."
          },
          "calculation_type": {
            "type": "string",
            "default": "ORDER_AMOUNT",
            "enum": [
              "ORDER_AMOUNT"
            ],
            "description": "`ORDER_AMOUNT`: Pre-discount order amount (X points for every Y spent excluding discounts)."
          },
          "order": {
            "type": "object",
            "required": [
              "amount"
            ],
            "properties": {
              "amount": {
                "type": "object",
                "required": [
                  "every",
                  "points"
                ],
                "description": "Defines the ratio based on the property defined in the `calculation_type` parameter.",
                "properties": {
                  "every": {
                    "type": "integer",
                    "description": "The value is multiplied by 100 to precisely represent 2 decimal places. For example, a $10 order amount is written as 1000."
                  },
                  "points": {
                    "type": "integer",
                    "description": "Number of points to be awarded, i.e. how many points to be added to the loyalty card."
                  }
                }
              }
            }
          }
        },
        "required": [
          "type",
          "calculation_type",
          "order"
        ]
      },
      "EarningRuleProportionalOrderItems": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/EarningRuleProportionalOrderItemsQuantity"
          },
          {
            "$ref": "#/components/schemas/EarningRuleProportionalOrderItemsAmount"
          },
          {
            "$ref": "#/components/schemas/EarningRuleProportionalOrderItemsSubtotalAmount"
          }
        ],
        "title": "Order Items"
      },
      "EarningRuleProportionalOrderItemsAmount": {
        "title": "Order Items Amount",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "default": "PROPORTIONAL",
            "enum": [
              "PROPORTIONAL"
            ],
            "description": "Defines how the points are added to the loyalty card. `PROPORTIONAL` adds points based on a pre-defined ratio."
          },
          "calculation_type": {
            "type": "string",
            "default": "ORDER_ITEMS_AMOUNT",
            "enum": [
              "ORDER_ITEMS_AMOUNT"
            ],
            "description": "ORDER_ITEMS_AMOUNT; Pre-discount amount spent on items defined in the order_items.amount.object & .id (X points for every Y spent on items excluding discounts)"
          },
          "order_items": {
            "type": "object",
            "required": [
              "amount"
            ],
            "properties": {
              "amount": {
                "type": "object",
                "required": [
                  "every",
                  "points",
                  "object",
                  "id"
                ],
                "description": "Defines the ratio based on the property defined in the `calculation_type` parameter.",
                "properties": {
                  "every": {
                    "type": "integer",
                    "description": "The value is multiplied by 100 to precisely represent 2 decimal places. For example, a $10 order amount is written as 1000."
                  },
                  "points": {
                    "type": "integer",
                    "description": "Number of points to be awarded, i.e. how many points to be added to the loyalty card."
                  },
                  "object": {
                    "type": "string",
                    "description": "Type of object taken under consideration.",
                    "enum": [
                      "products_collection",
                      "product",
                      "sku"
                    ]
                  },
                  "id": {
                    "type": "string",
                    "description": "Unique identifier of the resource, i.e. pc_75U0dHlr7u75BJodrW1AE3t6, prod_0bae32322150fd0546, or sku_0b7d7dfb090be5c619."
                  }
                }
              }
            }
          }
        },
        "required": [
          "type",
          "calculation_type",
          "order_items"
        ]
      },
      "EarningRuleProportionalOrderItemsQuantity": {
        "title": "Order Items Quantity",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "default": "PROPORTIONAL",
            "enum": [
              "PROPORTIONAL"
            ],
            "description": "Defines how the points are added to the loyalty card. PROPORTIONAL adds points based on a pre-defined ratio."
          },
          "calculation_type": {
            "type": "string",
            "default": "ORDER_ITEMS_QUANTITY",
            "enum": [
              "ORDER_ITEMS_QUANTITY"
            ],
            "description": "`ORDER_ITEMS_QUANTITY`: Quantity of the items defined in order_items.quantity.object & .id (X points for every Y items excluding free items)."
          },
          "order_items": {
            "type": "object",
            "required": [
              "quantity"
            ],
            "properties": {
              "quantity": {
                "type": "object",
                "required": [
                  "every",
                  "points",
                  "object",
                  "id"
                ],
                "description": "Defines the ratio based on the property defined in the `calculation_type` parameter.",
                "properties": {
                  "every": {
                    "type": "integer",
                    "description": "The value is multiplied by 100 to precisely represent 2 decimal places. For example, a $10 order amount is written as 1000."
                  },
                  "points": {
                    "type": "integer",
                    "description": "Number of points to be awarded, i.e. how many points to be added to the loyalty card."
                  },
                  "object": {
                    "type": "string",
                    "description": "Type of object taken under consideration.",
                    "enum": [
                      "products_collection",
                      "product",
                      "sku"
                    ]
                  },
                  "id": {
                    "type": "string",
                    "description": "unique identifier of the resource, i.e. pc_75U0dHlr7u75BJodrW1AE3t6, prod_0bae32322150fd0546, or sku_0b7d7dfb090be5c619."
                  }
                }
              }
            }
          }
        },
        "required": [
          "type",
          "calculation_type",
          "order_items"
        ]
      },
      "EarningRuleProportionalOrderItemsSubtotalAmount": {
        "title": "Order Items Subtotal Amount",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "default": "PROPORTIONAL",
            "enum": [
              "PROPORTIONAL"
            ],
            "description": "Defines how the points are added to the loyalty card. PROPORTIONAL adds points based on a pre-defined ratio."
          },
          "calculation_type": {
            "type": "string",
            "default": "ORDER_ITEMS_SUBTOTAL_AMOUNT",
            "enum": [
              "ORDER_ITEMS_SUBTOTAL_AMOUNT"
            ],
            "description": "ORDER_ITEMS_SUBTOTAL_AMOUNT; Amount spent on items defined in the order_items.subtotal_amount.object & .id (X points for every Y spent on items including discounts)"
          },
          "order_items": {
            "type": "object",
            "required": [
              "subtotal_amount"
            ],
            "properties": {
              "subtotal_amount": {
                "type": "object",
                "required": [
                  "every",
                  "points",
                  "object",
                  "id"
                ],
                "description": "Defines the ratio based on the property defined in the `calculation_type` parameter.",
                "properties": {
                  "every": {
                    "type": "integer",
                    "description": "The value is multiplied by 100 to precisely represent 2 decimal places. For example, a $10 order amount is written as 1000."
                  },
                  "points": {
                    "type": "integer",
                    "description": "Number of points to be awarded, i.e. how many points to be added to the loyalty card."
                  },
                  "object": {
                    "type": "string",
                    "description": "Type of object taken under consideration.",
                    "enum": [
                      "products_collection",
                      "product",
                      "sku"
                    ]
                  },
                  "id": {
                    "type": "string",
                    "description": "unique identifier of the resource, i.e. pc_75U0dHlr7u75BJodrW1AE3t6, prod_0bae32322150fd0546, or sku_0b7d7dfb090be5c619."
                  }
                }
              }
            }
          }
        },
        "required": [
          "type",
          "calculation_type",
          "order_items"
        ]
      },
      "EarningRuleProportionalOrderMetadata": {
        "title": "Order Metadata",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "default": "PROPORTIONAL",
            "enum": [
              "PROPORTIONAL"
            ],
            "description": "Defines how the points are added to the loyalty card. PROPORTIONAL adds points based on a pre-defined ratio."
          },
          "calculation_type": {
            "type": "string",
            "default": "ORDER_METADATA",
            "enum": [
              "ORDER_METADATA"
            ],
            "description": "`ORDER_METADATA`: Order Metadata (X points for every Y in metadata attribute, defined in the property key under the order.metadata object)"
          },
          "order": {
            "type": "object",
            "required": [
              "metadata"
            ],
            "description": "Defines the formula for calculating points proportionally.",
            "properties": {
              "metadata": {
                "type": "object",
                "required": [
                  "every",
                  "points",
                  "property"
                ],
                "description": "Defines the ratio based on the property defined in the `calculation_type` parameter.",
                "properties": {
                  "every": {
                    "type": "integer",
                    "description": "For how many increments of the order metadata property to grant points for."
                  },
                  "points": {
                    "type": "integer",
                    "description": "Number of points to be awarded, i.e. how many points to be added to the loyalty card."
                  },
                  "property": {
                    "type": "string",
                    "description": "Order metadata property."
                  }
                }
              }
            }
          }
        },
        "required": [
          "type",
          "calculation_type",
          "order"
        ]
      },
      "EarningRuleProportionalOrderTotalAmount": {
        "title": "Order Total Amount",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "default": "PROPORTIONAL",
            "enum": [
              "PROPORTIONAL"
            ],
            "description": "Defines how the points are added to the loyalty card. PROPORTIONAL adds points based on a pre-defined ratio."
          },
          "calculation_type": {
            "type": "string",
            "default": "ORDER_TOTAL_AMOUNT",
            "enum": [
              "ORDER_TOTAL_AMOUNT"
            ],
            "description": "`ORDER_TOTAL_AMOUNT`: Total order amount (X points for every Y spent including discount)"
          },
          "order": {
            "type": "object",
            "required": [
              "total_amount"
            ],
            "properties": {
              "total_amount": {
                "type": "object",
                "required": [
                  "every",
                  "points"
                ],
                "description": "Defines the ratio based on the property defined in the `calculation_type` parameter.",
                "properties": {
                  "every": {
                    "type": "integer",
                    "description": "The value is multiplied by 100 to precisely represent 2 decimal places. For example, a $10 order amount is written as 1000."
                  },
                  "points": {
                    "type": "integer",
                    "description": "Number of points to be awarded, i.e. how many points to be added to the loyalty card."
                  }
                }
              }
            }
          }
        },
        "required": [
          "type",
          "calculation_type",
          "order"
        ]
      },
      "EventCustomerConsentsGiven": {
        "type": "object",
        "title": "Event Customer Consents Given",
        "description": "Event data object schema for `EVENTS.CUSTOMER.CONSENTS.GIVEN`.",
        "allOf": [
          {
            "$ref": "#/components/schemas/DefaultPayloadData1"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "customer.consents.given"
                ]
              }
            },
            "required": [
              "type"
            ]
          },
          {
            "$ref": "#/components/schemas/EventCustomerConsentsGivenData"
          },
          {
            "$ref": "#/components/schemas/DefaultPayloadData2"
          }
        ],
        "required": [
          "id",
          "name",
          "created_at",
          "type",
          "data",
          "source",
          "event"
        ]
      },
      "EventCustomerConsentsGivenData": {
        "title": "Event Customer Consents",
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "customer": {
                "$ref": "#/components/schemas/SimpleCustomer"
              },
              "consents": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SimpleConsent"
                }
              }
            }
          }
        }
      },
      "EventCustomerConsentsRevoked": {
        "type": "object",
        "title": "Event Customer Consents Revoked",
        "description": "Event data object schema for `CUSTOMER.CONSENTS.REVOKED`.",
        "allOf": [
          {
            "$ref": "#/components/schemas/DefaultPayloadData1"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "customer.consents.revoked"
                ]
              }
            },
            "required": [
              "type"
            ]
          },
          {
            "$ref": "#/components/schemas/EventCustomerConsentsRevokedData"
          },
          {
            "$ref": "#/components/schemas/DefaultPayloadData2"
          }
        ],
        "required": [
          "id",
          "name",
          "created_at",
          "type",
          "data",
          "source",
          "event"
        ]
      },
      "EventCustomerConsentsRevokedData": {
        "title": "Event Customer Consents Revoked",
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "customer": {
                "$ref": "#/components/schemas/SimpleCustomer"
              },
              "consents": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SimpleConsent"
                }
              }
            }
          }
        }
      },
      "EventCustomerCreated": {
        "type": "object",
        "title": "Event Customer Created",
        "description": "Event data object schema for `EVENTS.CUSTOMER.CREATED`.",
        "allOf": [
          {
            "$ref": "#/components/schemas/DefaultPayloadData1"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "customer.created"
                ]
              }
            },
            "required": [
              "type"
            ]
          },
          {
            "$ref": "#/components/schemas/EventCustomerCreatedData"
          },
          {
            "$ref": "#/components/schemas/DefaultPayloadData2"
          }
        ],
        "required": [
          "id",
          "name",
          "created_at",
          "type",
          "data",
          "source",
          "event"
        ]
      },
      "EventCustomerCreatedData": {
        "type": "object",
        "title": "Event Customer Created",
        "description": "Event data object schema for `customer.created`.",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CustomerWithSummaryLoyaltyReferrals"
          }
        }
      },
      "EventCustomerDeleted": {
        "type": "object",
        "title": "Event Customer Deleted",
        "description": "Event data object schema for `EVENTS.CUSTOMER.DELETED`.",
        "allOf": [
          {
            "$ref": "#/components/schemas/DefaultPayloadData1"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "customer.deleted"
                ]
              }
            },
            "required": [
              "type"
            ]
          },
          {
            "$ref": "#/components/schemas/EventCustomerDeletedData"
          },
          {
            "$ref": "#/components/schemas/DefaultPayloadData2"
          }
        ],
        "required": [
          "id",
          "name",
          "created_at",
          "type",
          "data",
          "source",
          "event"
        ]
      },
      "EventCustomerDeletedData": {
        "title": "Event Customer Deleted",
        "description": "Event data object schema for `customer.deleted`.",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CustomerWithSummaryLoyaltyReferrals"
          }
        }
      },
      "EventCustomerRedemption": {
        "title": "Event Customer Redemption",
        "type": "object",
        "properties": {
          "customer": {
            "nullable": true,
            "$ref": "#/components/schemas/SimpleCustomer"
          },
          "order": {
            "nullable": true,
            "$ref": "#/components/schemas/SimpleOrder"
          },
          "campaign": {
            "nullable": true,
            "$ref": "#/components/schemas/SimpleCampaign"
          },
          "voucher": {
            "nullable": true,
            "$ref": "#/components/schemas/SimpleVoucher"
          },
          "holder": {
            "nullable": true,
            "$ref": "#/components/schemas/SimpleCustomer"
          },
          "promotion_tier": {
            "nullable": true,
            "$ref": "#/components/schemas/SimplePromotionTier"
          },
          "redemption": {
            "nullable": true,
            "$ref": "#/components/schemas/SimpleRedemption"
          }
        }
      },
      "EventCustomerRewarded": {
        "type": "object",
        "title": "Event Customer Rewarded",
        "description": "Event data object schema for `EVENTS.CUSTOMER.REWARDED`.",
        "allOf": [
          {
            "$ref": "#/components/schemas/DefaultPayloadData1"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "customer.rewarded"
                ]
              }
            },
            "required": [
              "type"
            ]
          },
          {
            "$ref": "#/components/schemas/EventCustomerRewardedData"
          },
          {
            "$ref": "#/components/schemas/DefaultPayloadData2"
          }
        ],
        "required": [
          "id",
          "name",
          "created_at",
          "type",
          "data",
          "source",
          "event"
        ]
      },
      "EventCustomerRewardedData": {
        "title": "Event Customer Rewarded",
        "description": "Event data object schema for `customer.rewarded`.",
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "customer": {
                "nullable": true,
                "$ref": "#/components/schemas/SimpleCustomer"
              },
              "holder": {
                "nullable": true,
                "$ref": "#/components/schemas/SimpleCustomer"
              },
              "voucher": {
                "nullable": true,
                "$ref": "#/components/schemas/SimpleVoucher"
              },
              "campaign": {
                "nullable": true,
                "$ref": "#/components/schemas/SimpleCampaign"
              },
              "redemption": {
                "nullable": true,
                "$ref": "#/components/schemas/RedemptionInternal"
              },
              "reward": {
                "nullable": true,
                "$ref": "#/components/schemas/SimpleRedemptionRewardResult"
              },
              "referral_tier": {
                "nullable": true,
                "$ref": "#/components/schemas/SimpleReferralTier"
              },
              "balance": {
                "nullable": true,
                "type": "object",
                "description": "Balance changed by the event.",
                "properties": {
                  "amount": {
                    "type": "integer"
                  }
                }
              },
              "custom_event": {
                "nullable": true,
                "$ref": "#/components/schemas/CustomEvent"
              },
              "customer_event": {
                "nullable": true,
                "type": "object",
                "properties": {
                  "segment": {
                    "$ref": "#/components/schemas/SimpleSegment"
                  },
                  "event_type": {
                    "type": "string",
                    "description": "Type of activity that triggered the event."
                  }
                }
              }
            }
          }
        }
      },
      "EventCustomerRewardedLoyaltyPoints": {
        "type": "object",
        "title": "Event Customer Rewarded Loyalty Points",
        "description": "Event data object schema for `EVENTS.CUSTOMER.REWARDED.LOYALTY_POINTS`.",
        "allOf": [
          {
            "$ref": "#/components/schemas/DefaultPayloadData1"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "customer.rewarded.loyalty_points"
                ]
              }
            },
            "required": [
              "type"
            ]
          },
          {
            "$ref": "#/components/schemas/EventCustomerRewardedLoyaltyPointsData"
          },
          {
            "$ref": "#/components/schemas/DefaultPayloadData2"
          }
        ],
        "required": [
          "id",
          "name",
          "created_at",
          "type",
          "data",
          "source",
          "event"
        ]
      },
      "EventCustomerRewardedLoyaltyPointsData": {
        "title": "Event Customer Rewarded Loyalty Points",
        "description": "Event data object schema for `customer.rewarded.loyalty_points`.",
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "customer": {
                "nullable": true,
                "$ref": "#/components/schemas/SimpleCustomer"
              },
              "holder": {
                "nullable": true,
                "$ref": "#/components/schemas/SimpleCustomer"
              },
              "voucher": {
                "nullable": true,
                "$ref": "#/components/schemas/SimpleVoucher"
              },
              "campaign": {
                "nullable": true,
                "$ref": "#/components/schemas/SimpleCampaign"
              },
              "loyalty_tier": {
                "check": "I can't generate it, always get `null`.",
                "nullable": true,
                "$ref": "#/components/schemas/LoyaltyTier"
              },
              "earning_rule": {
                "nullable": true,
                "$ref": "#/components/schemas/EarningRule"
              },
              "balance": {
                "nullable": true,
                "$ref": "#/components/schemas/LoyaltyCardBalance"
              },
              "order": {
                "nullable": true,
                "$ref": "#/components/schemas/OrderCalculated"
              },
              "event": {
                "nullable": true,
                "$ref": "#/components/schemas/SimpleEvent"
              }
            }
          }
        }
      },
      "EventPublication": {
        "title": "Event Publication",
        "description": "Publication event details.",
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/EventPublicationBase"
              },
              {
                "type": "object",
                "properties": {
                  "user": {
                    "nullable": true,
                    "type": "object",
                    "description": "Details about the user who triggered the publication.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Unique identifier of the user."
                      }
                    }
                  }
                }
              }
            ]
          }
        }
      },
      "EventPublicationBase": {
        "title": "Publication",
        "description": "Publication details.",
        "type": "object",
        "properties": {
          "customer": {
            "nullable": true,
            "$ref": "#/components/schemas/SimpleCustomer"
          },
          "campaign": {
            "nullable": true,
            "$ref": "#/components/schemas/SimpleCampaign"
          },
          "publication": {
            "nullable": true,
            "$ref": "#/components/schemas/ListPublicationsItemBase"
          },
          "voucher": {
            "$ref": "#/components/schemas/SimpleVoucher"
          }
        }
      },
      "EventPublicationSucceeded": {
        "title": "Event Publication Succeeded",
        "description": "Event data object schema for `EVENTS.PUBLICATION.SUCCEEDED`.",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/DefaultPayloadData1"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "publication.succeeded"
                ]
              }
            },
            "required": [
              "type"
            ]
          },
          {
            "$ref": "#/components/schemas/EventPublication"
          },
          {
            "$ref": "#/components/schemas/DefaultPayloadData2"
          }
        ],
        "required": [
          "id",
          "name",
          "created_at",
          "type",
          "data",
          "source",
          "event"
        ]
      },
      "EventRedemption": {
        "title": "Event Redemption",
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/EventCustomerRedemption"
              },
              {
                "type": "object",
                "properties": {
                  "created_at": {
                    "type": "string",
                    "example": "2024-01-01T11:11:11.111Z",
                    "description": "Timestamp representing the date and time when the redemption succeeded in the ISO 8601 format.",
                    "format": "date-time"
                  }
                }
              }
            ]
          }
        }
      },
      "EventRedemptionFailed": {
        "title": "Event Redemption Failed",
        "type": "object",
        "description": "Event data object schema for `EVENTS.REDEMPTION.FAILED`.",
        "allOf": [
          {
            "$ref": "#/components/schemas/DefaultPayloadData1"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "redemption.failed"
                ]
              }
            },
            "required": [
              "type"
            ]
          },
          {
            "$ref": "#/components/schemas/EventRedemptionFailedData"
          },
          {
            "$ref": "#/components/schemas/DefaultPayloadData2"
          }
        ],
        "required": [
          "id",
          "name",
          "created_at",
          "type",
          "data",
          "source",
          "event"
        ]
      },
      "EventRedemptionFailedData": {
        "type": "object",
        "title": "Event Redemption Failed",
        "description": "Event data object schema for `redemption.failed`.",
        "allOf": [
          {
            "$ref": "#/components/schemas/EventRedemption"
          }
        ]
      },
      "EventRedemptionRollbackFailed": {
        "type": "object",
        "title": "Event Redemption Rollback Failed",
        "description": "Event data object schema for `EVENTS.REDEMPTION.ROLLBACK.FAILED`.",
        "allOf": [
          {
            "$ref": "#/components/schemas/DefaultPayloadData1"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "redemption.rollback.failed"
                ]
              }
            },
            "required": [
              "type"
            ]
          },
          {
            "$ref": "#/components/schemas/EventRedemptionRollbackFailedData"
          },
          {
            "$ref": "#/components/schemas/DefaultPayloadData2"
          }
        ],
        "required": [
          "id",
          "name",
          "created_at",
          "type",
          "data",
          "source",
          "event"
        ]
      },
      "EventRedemptionRollbackFailedData": {
        "title": "Event Redemption Rollback Failed",
        "description": "Event data object schema for `redemption.rollback.failed`.",
        "properties": {
          "data": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/EventCustomerRedemption"
              },
              {
                "type": "object",
                "properties": {
                  "redemption_rollback": {
                    "$ref": "#/components/schemas/SimpleRedemption"
                  }
                }
              }
            ]
          }
        }
      },
      "EventRedemptionRollbackSucceeded": {
        "type": "object",
        "title": "Event Redemption Rollback Succeeded",
        "description": "Event data object schema for `EVENTS.REDEMPTION.ROLLBACK.SUCCEEDED`.",
        "allOf": [
          {
            "$ref": "#/components/schemas/DefaultPayloadData1"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "redemption.rollback.succeeded"
                ]
              }
            },
            "required": [
              "type"
            ]
          },
          {
            "$ref": "#/components/schemas/EventRedemptionRollbackSucceededData"
          },
          {
            "$ref": "#/components/schemas/DefaultPayloadData2"
          }
        ],
        "required": [
          "id",
          "name",
          "created_at",
          "type",
          "data",
          "source",
          "event"
        ]
      },
      "EventRedemptionRollbackSucceededData": {
        "type": "object",
        "title": "Event Redemption Rollback Succeeded",
        "description": "Event data object schema for `redemption.rollback.succeeded`.",
        "properties": {
          "data": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/EventCustomerRedemption"
              },
              {
                "type": "object",
                "properties": {
                  "redemption_rollback": {
                    "$ref": "#/components/schemas/SimpleRedemption"
                  }
                }
              }
            ]
          }
        }
      },
      "EventRedemptionSucceeded": {
        "type": "object",
        "title": "Event Redemption Succeeded",
        "description": "Event data object schema for `EVENTS.REDEMPTION.SUCCEEDED`.",
        "allOf": [
          {
            "$ref": "#/components/schemas/DefaultPayloadData1"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "redemption.succeeded"
                ]
              }
            },
            "required": [
              "type"
            ]
          },
          {
            "$ref": "#/components/schemas/EventRedemption"
          },
          {
            "$ref": "#/components/schemas/DefaultPayloadData2"
          }
        ],
        "required": [
          "id",
          "name",
          "created_at",
          "type",
          "data",
          "source",
          "event"
        ]
      },
      "EventVoucherCreated": {
        "type": "object",
        "title": "Voucher Created",
        "description": "Event data object schema for `EVENTS.VOUCHER.CREATED`.",
        "allOf": [
          {
            "$ref": "#/components/schemas/DefaultPayloadData1"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "voucher.created"
                ]
              }
            },
            "required": [
              "type"
            ]
          },
          {
            "$ref": "#/components/schemas/EventVoucherCreatedData"
          },
          {
            "$ref": "#/components/schemas/DefaultPayloadData2"
          }
        ],
        "required": [
          "id",
          "name",
          "created_at",
          "type",
          "data",
          "source",
          "event"
        ]
      },
      "EventVoucherCreatedData": {
        "title": "Event Voucher Created",
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "allOf": [
              {
                "nullable": true,
                "$ref": "#/components/schemas/Voucher"
              },
              {
                "nullable": true,
                "$ref": "#/components/schemas/SimpleCampaign"
              }
            ]
          }
        }
      },
      "EventVoucherDeleted": {
        "type": "object",
        "title": "Voucher Deleted",
        "description": "Event data object schema for `EVENTS.VOUCHER.DELETED`.",
        "allOf": [
          {
            "$ref": "#/components/schemas/DefaultPayloadData1"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "voucher.deleted"
                ]
              }
            },
            "required": [
              "type"
            ]
          },
          {
            "$ref": "#/components/schemas/EventVoucherDeletedData"
          },
          {
            "$ref": "#/components/schemas/DefaultPayloadData2"
          }
        ],
        "required": [
          "id",
          "name",
          "created_at",
          "type",
          "data",
          "source",
          "event"
        ]
      },
      "EventVoucherDeletedData": {
        "title": "Event Voucher Deleted",
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "allOf": [
              {
                "nullable": true,
                "$ref": "#/components/schemas/Voucher"
              },
              {
                "nullable": true,
                "$ref": "#/components/schemas/SimpleCampaign"
              }
            ]
          }
        }
      },
      "EventVoucherDisabled": {
        "type": "object",
        "title": "Voucher Disabled",
        "description": "Event data object schema for `EVENTS.VOUCHER.DISABLED`.",
        "allOf": [
          {
            "$ref": "#/components/schemas/DefaultPayloadData1"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "voucher.disabled"
                ]
              }
            },
            "required": [
              "type"
            ]
          },
          {
            "$ref": "#/components/schemas/EventVoucherDisabledData"
          },
          {
            "$ref": "#/components/schemas/DefaultPayloadData2"
          }
        ],
        "required": [
          "id",
          "name",
          "created_at",
          "type",
          "data",
          "source",
          "event"
        ]
      },
      "EventVoucherDisabledData": {
        "title": "Event Voucher Disabled",
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "allOf": [
              {
                "nullable": true,
                "$ref": "#/components/schemas/Voucher"
              },
              {
                "nullable": true,
                "$ref": "#/components/schemas/SimpleCampaign"
              }
            ]
          }
        }
      },
      "EventVoucherEnabled": {
        "type": "object",
        "title": "Voucher Enabled",
        "description": "Event data object schema for `EVENTS.VOUCHER.ENABLED`.",
        "allOf": [
          {
            "$ref": "#/components/schemas/DefaultPayloadData1"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "voucher.enabled"
                ]
              }
            },
            "required": [
              "type"
            ]
          },
          {
            "$ref": "#/components/schemas/EventVoucherEnabledData"
          },
          {
            "$ref": "#/components/schemas/DefaultPayloadData2"
          }
        ],
        "required": [
          "id",
          "name",
          "created_at",
          "type",
          "data",
          "source",
          "event"
        ]
      },
      "EventVoucherEnabledData": {
        "title": "Event Voucher Enabled",
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "allOf": [
              {
                "nullable": true,
                "$ref": "#/components/schemas/Voucher"
              },
              {
                "nullable": true,
                "$ref": "#/components/schemas/SimpleCampaign"
              }
            ]
          }
        }
      },
      "EventVoucherGiftBalanceAdded": {
        "type": "object",
        "title": "Voucher Gift Balance Added",
        "description": "Event data object schema for `EVENTS.VOUCHER.GIFT.BALANCE_ADDED`.",
        "allOf": [
          {
            "$ref": "#/components/schemas/DefaultPayloadData1"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "voucher.gift.balance_added"
                ]
              }
            },
            "required": [
              "type"
            ]
          },
          {
            "$ref": "#/components/schemas/EventVoucherGiftBalanceAddedData"
          },
          {
            "$ref": "#/components/schemas/DefaultPayloadData2"
          }
        ],
        "required": [
          "id",
          "name",
          "created_at",
          "type",
          "data",
          "source",
          "event"
        ]
      },
      "EventVoucherGiftBalanceAddedData": {
        "title": "Event Voucher Gift Balance Added",
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/SimpleVoucher"
              },
              {
                "$ref": "#/components/schemas/VouchersBalanceUpdateResponseBody"
              },
              {
                "$ref": "#/components/schemas/SimpleCampaign"
              },
              {
                "$ref": "#/components/schemas/SimpleCustomer"
              },
              {
                "$ref": "#/components/schemas/VoucherTransaction"
              }
            ]
          }
        }
      },
      "EventVoucherLoyaltyCardPointsAdded": {
        "type": "object",
        "title": "Voucher Loyalty Card Points Added",
        "description": "Event data object schema for `EVENTS.VOUCHER.LOYALTY_CARD.POINTS_ADDED`.",
        "allOf": [
          {
            "$ref": "#/components/schemas/DefaultPayloadData1"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "voucher.loyalty_card.points_added"
                ]
              }
            },
            "required": [
              "type"
            ]
          },
          {
            "$ref": "#/components/schemas/EventVoucherLoyaltyCardPointsAddedData"
          },
          {
            "$ref": "#/components/schemas/DefaultPayloadData2"
          }
        ],
        "required": [
          "id",
          "name",
          "created_at",
          "type",
          "data",
          "source",
          "event"
        ]
      },
      "EventVoucherLoyaltyCardPointsAddedData": {
        "title": "Event Voucher Loyalty Card Points Added",
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/SimpleVoucher"
              },
              {
                "$ref": "#/components/schemas/VouchersBalanceUpdateResponseBody"
              },
              {
                "$ref": "#/components/schemas/SimpleCampaign"
              },
              {
                "$ref": "#/components/schemas/SimpleCustomer"
              },
              {
                "$ref": "#/components/schemas/VoucherTransaction"
              }
            ]
          }
        }
      },
      "EventVoucherPublished": {
        "type": "object",
        "title": "Voucher Published",
        "description": "Event data object schema for `EVENTS.VOUCHER.PUBLISHED`.",
        "allOf": [
          {
            "$ref": "#/components/schemas/DefaultPayloadData1"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "voucher.published"
                ]
              }
            },
            "required": [
              "type"
            ]
          },
          {
            "$ref": "#/components/schemas/EventVoucherPublishedData"
          },
          {
            "$ref": "#/components/schemas/DefaultPayloadData2"
          }
        ],
        "required": [
          "id",
          "name",
          "created_at",
          "type",
          "data",
          "source",
          "event"
        ]
      },
      "EventVoucherPublishedData": {
        "title": "Event Voucher Published",
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/EventPublicationBase"
              },
              {
                "type": "object",
                "properties": {
                  "created_at": {
                    "type": "string",
                    "example": "2024-01-01T11:11:11.111Z",
                    "description": "Timestamp representing the date and time when the redemption succeeded in the ISO 8601 format.",
                    "format": "date-time"
                  }
                }
              }
            ]
          }
        }
      },
      "EventVoucherUpdated": {
        "type": "object",
        "title": "Voucher updated",
        "description": "Event data object schema for `EVENTS.VOUCHER.UPDATED`.",
        "allOf": [
          {
            "$ref": "#/components/schemas/DefaultPayloadData1"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "voucher.updated"
                ]
              }
            },
            "required": [
              "type"
            ]
          },
          {
            "$ref": "#/components/schemas/EventVoucherUpdatedData"
          },
          {
            "$ref": "#/components/schemas/DefaultPayloadData2"
          }
        ],
        "required": [
          "id",
          "name",
          "created_at",
          "type",
          "data",
          "source",
          "event"
        ]
      },
      "EventVoucherUpdatedData": {
        "title": "Event Voucher Updated",
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "allOf": [
              {
                "nullable": true,
                "$ref": "#/components/schemas/Voucher"
              },
              {
                "nullable": true,
                "$ref": "#/components/schemas/SimpleCampaign"
              }
            ]
          }
        }
      },
      "Gift": {
        "title": "Gift",
        "type": "object",
        "additionalProperties": false,
        "description": "Contains current gift card balance information.",
        "properties": {
          "amount": {
            "type": "number",
            "description": "Total gift card income over the lifetime of the card. Value is multiplied by 100 to precisely represent 2 decimal places. For example, $10 amount is written as 1000."
          },
          "balance": {
            "type": "number",
            "description": "Available funds. Value is multiplied by 100 to precisely represent 2 decimal places. For example, $10 amount is written as 1000."
          },
          "effect": {
            "type": "string",
            "description": "Defines how the credits are applied to the customer's order.",
            "enum": [
              "APPLY_TO_ORDER",
              "APPLY_TO_ITEMS"
            ]
          }
        },
        "required": [
          "amount",
          "balance"
        ]
      },
      "ListPublicationsItemBase": {
        "title": "List Publications Item Base",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "pub_BbjAXnmm8e0SIm3zG8qvvFCP0KuLywtp",
            "description": "Unique identifier of the publication assigned by Voucherify."
          },
          "object": {
            "type": "string",
            "default": "publication",
            "enum": [
              "publication"
            ],
            "description": "The type of object represented by the JSON. This object stores information about the `publication`."
          },
          "created_at": {
            "type": "string",
            "example": "2022-09-23T09:57:00.434Z",
            "description": "Timestamp representing the date and time when the publication was created in the ISO 8601 format.",
            "format": "date-time"
          },
          "customer_id": {
            "type": "string",
            "example": "cust_eWgXlBBiY6THFRJwX45Iakv4",
            "description": "Unique identifier of the customer receiving the publication."
          },
          "tracking_id": {
            "type": "string",
            "description": "Customer's `source_id`."
          },
          "metadata": {
            "type": "object",
            "description": "The metadata object stores all custom attributes assigned to the publication. A set of key/value pairs that you can attach to a publication object."
          },
          "channel": {
            "type": "string",
            "description": "How the publication was originated."
          },
          "source_id": {
            "type": "string",
            "nullable": true,
            "description": "Unique identifier of the merchant's publication if it is different from the Voucherify publication ID."
          },
          "customer": {
            "$ref": "#/components/schemas/CustomerWithSummaryLoyaltyReferrals"
          },
          "vouchers_id": {
            "type": "array",
            "description": "Contains the unique internal voucher ID that was assigned by Voucherify.",
            "items": {
              "type": "string",
              "example": "v_Bw3qWZWv47yb1Onra8F2LlFI1enLakfA"
            }
          }
        },
        "required": [
          "id",
          "object",
          "created_at",
          "customer_id",
          "metadata",
          "channel",
          "source_id",
          "customer",
          "vouchers_id"
        ]
      },
      "LoyaltyCardBalance": {
        "check": "podobne do voucher.gift.card.balance?",
        "title": "Balance data",
        "type": "object",
        "description": "Contains information on how the balance was affected by the transaction.",
        "properties": {
          "type": {
            "type": "string",
            "pattern": "loyalty_card",
            "default": "loyalty_card",
            "enum": [
              "loyalty_card"
            ],
            "description": "The type of voucher whose balance is adjusted by the transaction."
          },
          "total": {
            "type": "integer",
            "description": "The available points prior to the transaction."
          },
          "object": {
            "type": "string",
            "pattern": "balance",
            "default": "balance",
            "enum": [
              "balance"
            ],
            "description": "The type of the object represented by the JSON."
          },
          "points": {
            "type": "integer",
            "description": "The amount of points used in the transaction."
          },
          "balance": {
            "type": "integer",
            "description": "The points balance on the loyalty card after the points in the transaction are subtracted from the loyalty card."
          },
          "operation_type": {
            "type": "string",
            "description": "Type of the operation that affected balance.",
            "enum": [
              "MANUAL",
              "AUTOMATIC"
            ]
          },
          "related_object": {
            "type": "object",
            "required": [
              "id",
              "type"
            ],
            "description": "Defines the resource that is being modified with the values that are returned in the balance object.",
            "properties": {
              "id": {
                "type": "string",
                "description": "Identifies the voucher that is modified. This is the ID that was assigned by Voucherify."
              },
              "type": {
                "type": "string",
                "pattern": "voucher",
                "default": "voucher",
                "enum": [
                  "voucher"
                ],
                "description": "The object being modified, i.e. the voucher."
              }
            }
          }
        },
        "required": [
          "type",
          "total",
          "object",
          "points",
          "balance",
          "related_object"
        ]
      },
      "LoyaltyCardTransactionsType": {
        "title": "LoyaltyCardTransactionsType",
        "type": "string",
        "enum": [
          "POINTS_ACCRUAL",
          "POINTS_CANCELLATION",
          "POINTS_REDEMPTION",
          "POINTS_REFUND",
          "POINTS_ADDITION",
          "POINTS_REMOVAL",
          "POINTS_EXPIRATION",
          "POINTS_TRANSFER_IN",
          "POINTS_TRANSFER_OUT"
        ]
      },
      "LoyaltyTier": {
        "title": "Loyalty Tier",
        "allOf": [
          {
            "$ref": "#/components/schemas/LoyaltyTierBase"
          },
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Unique loyalty tier ID."
              },
              "campaign_id": {
                "type": "string",
                "description": "Unique parent campaign ID."
              },
              "metadata": {
                "type": "object",
                "nullable": true,
                "description": "The metadata object stores all custom attributes assigned to the loyalty tier. A set of key/value pairs that can be attached to a loyalty tier object."
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "description": "Timestamp representing the date and time when the loyalty tier was created in the ISO 8601 format."
              },
              "updated_at": {
                "type": "string",
                "nullable": true,
                "format": "date-time",
                "description": "Timestamp representing the date and time when the loyalty tier was updated in the ISO 8601 format."
              },
              "config": {
                "type": "object",
                "description": "Defines loyalty tier range in points.",
                "required": [
                  "points"
                ],
                "properties": {
                  "points": {
                    "type": "object",
                    "description": "Defines range of loyalty tier in points.",
                    "properties": {
                      "from": {
                        "type": "integer",
                        "description": "Bottom points threshold value."
                      },
                      "to": {
                        "type": "integer",
                        "description": "Top points threshold value."
                      }
                    }
                  }
                }
              },
              "expiration": {
                "$ref": "#/components/schemas/LoyaltyTierExpiration"
              },
              "object": {
                "type": "string",
                "default": "loyalty_tier",
                "enum": [
                  "loyalty_tier"
                ],
                "description": "The type of the object represented by JSON. This object stores information about the loyalty."
              }
            },
            "required": [
              "id",
              "campaign_id",
              "metadata",
              "created_at",
              "config",
              "object"
            ]
          }
        ]
      },
      "LoyaltyTierBase": {
        "title": "Loyalty Tier Base",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Loyalty Tier name."
          },
          "earning_rules": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/MappingPoints"
            },
            "description": "Contains a list of earning rule IDs and their points mapping for the given earning rule."
          },
          "rewards": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/MappingPoints"
            },
            "description": "Contains a list of reward IDs and their points mapping for the given reward."
          },
          "points": {
            "type": "object",
            "description": "Defines range of loyalty tier in points.",
            "properties": {
              "from": {
                "type": "integer",
                "description": "Bottom points threshold value."
              },
              "to": {
                "type": "integer",
                "description": "Top points threshold value."
              }
            }
          }
        },
        "required": [
          "name",
          "points"
        ]
      },
      "LoyaltyTierExpiration": {
        "title": "Loyalty Tier Expiration",
        "description": "Defines loyalty tier expiration date.",
        "type": "object",
        "properties": {
          "customer_id": {
            "type": "string",
            "description": "Unique customer ID of the customer making the purchase.",
            "example": "cust_7iUa6ICKyU6gH40dBU25kQU1"
          },
          "campaign_id": {
            "type": "string",
            "description": "Unique campaign ID assigned by Voucherify.",
            "example": "camp_rRsfatlwN7unSeUIJDCYedal"
          },
          "tier_id": {
            "type": "string",
            "description": "Unique tier ID assigned by Voucherify."
          },
          "start_date": {
            "type": "string",
            "description": "Activation timestamp defines when the loyalty tier starts to be active in the ISO 8601 format. Loyalty tier is inactive before this date."
          },
          "expiration_date": {
            "type": "string",
            "description": "Expiration timestamp defines when the loyalty tier expires in the ISO 8601 format. Loyalty tier is inactive after this date."
          },
          "created_at": {
            "type": "string",
            "example": "2024-01-01T11:11:11.111Z",
            "description": "Timestamp representing the date and time when the loyalty tier was created in the ISO 8601 format.",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "example": "2024-01-01T11:11:11.111Z",
            "description": "Timestamp representing the date and time when the loyalty tier was updated in the ISO 8601 format.",
            "format": "date-time"
          }
        },
        "required": [
          "customer_id",
          "campaign_id",
          "tier_id",
          "created_at"
        ]
      },
      "LuckyDraw": {
        "type": "object",
        "title": "Lucky Draw",
        "description": "Object for defining detailed information about lucky draw should be applied",
        "properties": {
          "winners_count": {
            "description": "Represents the total number of winners in a lucky draw.",
            "minimum": 1,
            "type": "string"
          },
          "unique_winners_per_draw": {
            "description": "Indicates whether each winner in a draw is unique or not.",
            "type": "string"
          },
          "unique_winners": {
            "description": "Specifies whether each participant can win only once across multiple draws.",
            "type": "string"
          }
        }
      },
      "MappingFixed": {
        "title": "MappingFixed",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "default": "CUSTOM",
            "enum": [
              "CUSTOM"
            ],
            "description": "Type of calculation."
          },
          "points": {
            "type": "integer",
            "description": "Fixed number of points to be applied."
          }
        }
      },
      "MappingMultiply": {
        "title": "MappingMultiply",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "default": "MULTIPLY",
            "enum": [
              "MULTIPLY"
            ],
            "description": "Type of calculation."
          },
          "multiplier": {
            "type": "number",
            "description": "Multiplication factor used to multiply the points to obtain the mapped points."
          }
        }
      },
      "MappingPoints": {
        "title": "MappingPoints",
        "oneOf": [
          {
            "$ref": "#/components/schemas/MappingMultiply"
          },
          {
            "$ref": "#/components/schemas/MappingFixed"
          }
        ]
      },
      "OrderCalculated": {
        "title": "Order Calculated",
        "allOf": [
          {
            "$ref": "#/components/schemas/OrderCalculatedBase"
          },
          {
            "title": "Order Calculated",
            "type": "object",
            "additionalProperties": false,
            "description": "Order information.",
            "properties": {
              "customer": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/CustomerWithSummaryLoyaltyReferrals"
                  },
                  {
                    "$ref": "#/components/schemas/CustomerId"
                  }
                ]
              },
              "referrer": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/ReferrerWithSummaryLoyaltyReferrals"
                  },
                  {
                    "$ref": "#/components/schemas/ReferrerId"
                  }
                ]
              }
            }
          }
        ]
      },
      "OrderCalculatedBase": {
        "title": "Order Response Base",
        "type": "object",
        "additionalProperties": false,
        "description": "Order information.",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier assigned by Voucherify of an existing order that is linked to the redemption of this request."
          },
          "source_id": {
            "type": "string",
            "nullable": true,
            "description": "Unique source ID of an existing order that is linked to the redemption of this request."
          },
          "created_at": {
            "type": "string",
            "example": "2024-01-01T11:11:11.111Z",
            "description": "Timestamp representing the date and time when the order was created in the ISO 8601 format.",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "nullable": true,
            "example": "024-01-01T11:11:11.111Z",
            "format": "date-time",
            "description": "Timestamp representing the date and time when the order was last updated in the ISO 8601 format."
          },
          "status": {
            "type": "string",
            "description": "Order status.",
            "enum": [
              "CREATED",
              "PAID",
              "CANCELED",
              "FULFILLED"
            ]
          },
          "amount": {
            "type": "integer",
            "description": "A positive integer in the smallest currency unit (e.g. 100 cents for $1.00) representing the total amount of the order. This is the sum of the order items' amounts."
          },
          "initial_amount": {
            "type": "integer",
            "description": "A positive integer in the smallest currency unit (e.g. 100 cents for $1.00) representing the total amount of the order. This is the sum of the order items' amounts."
          },
          "discount_amount": {
            "type": "integer",
            "description": "Sum of all order-level discounts applied to the order."
          },
          "items_discount_amount": {
            "type": "integer",
            "description": "Sum of all product-specific discounts applied to the order."
          },
          "total_discount_amount": {
            "type": "integer",
            "description": "Sum of all order-level AND all product-specific discounts applied to the order."
          },
          "total_amount": {
            "type": "integer",
            "description": "Order amount after undoing all the discounts through the rollback redemption."
          },
          "applied_discount_amount": {
            "type": "integer",
            "description": "This field shows the order-level discount applied."
          },
          "items_applied_discount_amount": {
            "type": "integer",
            "description": "Sum of all product-specific discounts applied in a particular request.  \n`sum(items, i => i.applied_discount_amount)`"
          },
          "total_applied_discount_amount": {
            "type": "integer",
            "description": "Sum of all order-level AND all product-specific discounts applied in a particular request.  \n`total_applied_discount_amount` = `applied_discount_amount` + `items_applied_discount_amount`"
          },
          "items": {
            "type": "array",
            "description": "Array of items applied to the order.",
            "items": {
              "$ref": "#/components/schemas/OrderItemCalculated"
            }
          },
          "metadata": {
            "type": "object",
            "description": "A set of custom key/value pairs that you can attach to an order. It can be useful for storing additional information about the order in a structured format."
          },
          "customer_id": {
            "type": "string",
            "nullable": true,
            "description": "Unique customer ID of the customer making the purchase.",
            "example": "cust_7iUa6ICKyU6gH40dBU25kQU1"
          },
          "referrer_id": {
            "type": "string",
            "nullable": true,
            "description": "Unique identifier of the referrer assigned by Voucherify.",
            "example": "cust_nM4jqPiaXUvQdVSA6vTRUnix"
          },
          "object": {
            "type": "string",
            "description": "The type of object represented by JSON.",
            "default": "order",
            "enum": [
              "order"
            ]
          },
          "redemptions": {
            "check": "tutaj w webhooku miałem obiekt, który zaczynał się od ID redempcji. jak to opisać?",
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/OrderRedemptions"
            }
          }
        },
        "required": [
          "id",
          "source_id",
          "customer_id",
          "referrer_id",
          "object"
        ]
      },
      "OrderItemCalculated": {
        "type": "object",
        "title": "Order Item Calculated",
        "properties": {
          "object": {
            "type": "string",
            "default": "order_item",
            "enum": [
              "order_item"
            ],
            "description": "The type of object represented by JSON."
          },
          "source_id": {
            "type": "string",
            "description": "The merchant's product/SKU ID (if it is different from the Voucherify product/SKU ID)."
          },
          "related_object": {
            "type": "string",
            "enum": [
              "product",
              "sku"
            ],
            "description": "Used along with the `source_id` property, can be set to either SKU or product."
          },
          "product_id": {
            "type": "string",
            "description": "Unique product ID assigned by Voucherify."
          },
          "sku_id": {
            "type": "string",
            "description": "Unique SKU ID assigned by Voucherify."
          },
          "quantity": {
            "type": "integer",
            "description": "The quantity of the particular item in the cart."
          },
          "discount_quantity": {
            "type": "integer",
            "description": "Number of dicounted items."
          },
          "initial_quantity": {
            "type": "integer",
            "description": "The original number of the item in the cart."
          },
          "amount": {
            "type": "integer",
            "description": "The total amount of the order item (price * quantity)."
          },
          "discount_amount": {
            "type": "integer",
            "description": "Sum of all order-item-level discounts applied to the order."
          },
          "initial_amount": {
            "type": "integer",
            "description": "The original amount of the order total amount."
          },
          "total_applied_discount_amount": {
            "type": "integer",
            "description": "Sum of all order-level AND all product-specific discounts applied in a particular request.  \n`total_applied_discount_amount` = `applied_discount_amount` + `items_applied_discount_amount`"
          },
          "price": {
            "type": "integer",
            "description": "Unit price of an item. The value is multiplied by 100 to precisely represent 2 decimal places. For example `10000 cents` for `$100.00`."
          },
          "subtotal_amount": {
            "type": "integer",
            "description": "Final order item amount after the applied item-level discount.  If there are no item-level discounts applied, this item is equal to the `amount`.   \n`subtotal_amount`=`amount`-`applied_discount_amount`"
          },
          "product": {
            "$ref": "#/components/schemas/OrderItemProduct"
          },
          "sku": {
            "$ref": "#/components/schemas/OrderItemSku"
          },
          "metadata": {
            "type": "object",
            "description": "A set of custom key/value pairs that you can attach to an SKU. It can be useful for storing additional information about the SKU in a structured format."
          }
        },
        "required": [
          "object"
        ]
      },
      "OrderItemProduct": {
        "type": "object",
        "additionalProperties": false,
        "description": "An object containing details of the related product.",
        "properties": {
          "id": {
            "type": "string",
            "description": "A unique identifier that represents the product and is assigned by Voucherify."
          },
          "source_id": {
            "type": "string",
            "description": "The merchant's product ID (if it is different than Voucherify's product ID)."
          },
          "name": {
            "type": "string",
            "description": "Product name."
          },
          "metadata": {
            "type": "object",
            "description": "A set of custom key/value pairs that you can attach to a product. It can be useful for storing additional information about the product in a structured format."
          },
          "price": {
            "type": "number",
            "description": "Product price. A positive integer in the smallest currency unit (e.g. 100 cents for $1.00)."
          },
          "override": {
            "type": "boolean",
            "description": "The override set to `true` is used to store the product information in the system. If the product does not exist, it will be created with a `source_id`; if it does exist, the provided values for the name, price, and metadata will replace those already stored in the system."
          }
        }
      },
      "OrderItemSku": {
        "type": "object",
        "additionalProperties": false,
        "description": "An object containing details of the related SKU.",
        "properties": {
          "id": {
            "type": "string",
            "description": "A unique identifier that represents the SKU and is assigned by Voucherify."
          },
          "source_id": {
            "type": "string",
            "description": "The merchant’s SKU ID (if it is different than Voucherify's SKU ID). It is really useful in case of integration between multiple systems. It can be an ID from an eCommerce site, a database or a 3rd party service."
          },
          "sku": {
            "type": "string",
            "description": "The SKU name."
          },
          "metadata": {
            "type": "object",
            "description": "A set of custom key/value pairs that you can attach to a product. It can be useful for storing additional information about the product in a structured format."
          },
          "price": {
            "type": "number",
            "description": "SKU price. A positive integer in the smallest currency unit (e.g. 100 cents for $1.00)."
          },
          "override": {
            "type": "boolean",
            "description": "The override set to `true` is used to store the product information in the system. If the product does not exist, it will be created with a source_id; if it does exist, the provided values for the name, price, and metadata will replace those already stored in the system."
          }
        }
      },
      "OrderRedemptions": {
        "title": "Order Redemptions",
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "description": "Timestamp representing the date and time when the redemption was created in ISO 8601 format.",
            "example": "2024-01-01T11:11:11.111Z",
            "format": "date-time"
          },
          "rollback_id": {
            "type": "string",
            "description": "Unique ID of the redemption rollback.",
            "example": "rr_0c63c84eb78ee0a6c0"
          },
          "rollback_date": {
            "type": "string",
            "description": "Timestamp representing the date and tiem when the redemption rollback was created in the ISO 8601 format.",
            "example": "2024-01-01T11:11:11.111Z",
            "format": "date-time"
          },
          "related_object_type": {
            "type": "string",
            "description": "The source of the incentive.",
            "default": "redemption"
          },
          "related_object_id": {
            "type": "string",
            "description": "Unique ID of the parent redemption.",
            "example": "r_0ba186c4824e4881e1"
          },
          "related_object_parent_id": {
            "type": "string",
            "description": "Represent's the campaign ID of the voucher if the redemption was based on a voucher that was part of bulk codes generated within a campaign. In case of a promotion tier, this represents the campaign ID of the promotion tier's parent campaign."
          },
          "stacked": {
            "type": "array",
            "description": "Contains a list of unique IDs of child redemptions, which belong to the stacked incentives.",
            "items": {
              "type": "string"
            }
          },
          "rollback_stacked": {
            "type": "array",
            "description": "Lists the rollback redemption IDs of the particular child redemptions.",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Product": {
        "type": "object",
        "description": "This is an object representing a product.  \n\nThis entity should be used to map product items from your inventory management system. The aim of products is to build which reflect product-specific campaigns.",
        "title": "Product",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductWithoutSkus"
          },
          {
            "type": "object",
            "properties": {
              "skus": {
                "$ref": "#/components/schemas/SkusListForProduct"
              }
            }
          }
        ]
      },
      "ProductWithoutSkus": {
        "title": "Product without Skus Object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique product ID assigned by Voucherify.",
            "example": "prod_0b1da8105693710357"
          },
          "source_id": {
            "type": "string",
            "nullable": true,
            "example": "productSourceID16",
            "description": "Unique product source ID."
          },
          "name": {
            "type": "string",
            "nullable": true,
            "description": "Unique user-defined product name.",
            "example": "T-shirt"
          },
          "price": {
            "type": "integer",
            "nullable": true,
            "description": "Unit price. It is represented by a value multiplied by 100 to accurately reflect 2 decimal places, such as `$100.00` being expressed as `10000`."
          },
          "attributes": {
            "type": "array",
            "description": "A list of product attributes whose values you can customize for given SKUs: `[\"color\",\"size\",\"ranking\"]`. Each child SKU can have a unique value for a given attribute.",
            "items": {
              "type": "string"
            }
          },
          "metadata": {
            "type": "object",
            "description": "The metadata object stores all custom attributes assigned to the product. A set of key/value pairs that you can attach to a product object. It can be useful for storing additional information about the product in a structured format."
          },
          "image_url": {
            "type": "string",
            "nullable": true,
            "description": "The HTTPS URL pointing to the .png or .jpg file that will be used to render the product image.",
            "example": "https://images.com/original.jpg"
          },
          "created_at": {
            "type": "string",
            "description": "Timestamp representing the date and time when the product was created in the ISO 8601 format.",
            "example": "2022-05-23T06:52:55.008Z",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "nullable": true,
            "description": "Timestamp representing the date and time when the product was updated in the ISO 8601 format.",
            "example": "2022-05-23T09:24:07.405Z",
            "format": "date-time"
          },
          "object": {
            "type": "string",
            "description": "The type of object represented by JSON. This object stores information about the product.",
            "default": "product",
            "enum": [
              "product"
            ]
          }
        },
        "required": [
          "id",
          "source_id",
          "name",
          "attributes",
          "metadata",
          "object",
          "price"
        ]
      },
      "PromotionTier": {
        "type": "object",
        "description": "This is an object representing a promotion tier. Promotion tiers are always assigned to a campaign and cannot be used standalone.",
        "title": "Promotion Tier",
        "properties": {
          "id": {
            "type": "string",
            "example": "promo_63fYCt81Aw0h7lzyRkrGZh9p",
            "description": "Unique promotion tier ID."
          },
          "created_at": {
            "type": "string",
            "example": "2021-12-15T11:34:01.333Z",
            "format": "date-time",
            "description": "Timestamp representing the date and time when the promotion tier was created in the ISO 8601 format."
          },
          "updated_at": {
            "type": "string",
            "example": "2022-02-09T09:20:05.603Z",
            "format": "date-time",
            "description": "Timestamp representing the date and time when the promotion tier was updated in the ISO 8601 format."
          },
          "name": {
            "type": "string",
            "description": "Name of the promotion tier."
          },
          "banner": {
            "type": "string",
            "description": "Text to be displayed to your customers on your website."
          },
          "action": {
            "type": "object",
            "description": "Contains details about the discount applied by the promotion tier.",
            "properties": {
              "discount": {
                "$ref": "#/components/schemas/Discount"
              }
            }
          },
          "metadata": {
            "type": "object",
            "description": "The metadata object stores all custom attributes assigned to the promotion tier. A set of key/value pairs that you can attach to a promotion tier object. It can be useful for storing additional information about the promotion tier in a structured format."
          },
          "hierarchy": {
            "type": "integer",
            "description": "The promotions hierarchy defines the order in which the discounts from different tiers will be applied to a customer's order. If a customer qualifies for discounts from more than one tier, discounts will be applied in the order defined in the hierarchy."
          },
          "promotion_id": {
            "type": "string",
            "description": "Promotion unique ID."
          },
          "campaign": {
            "type": "object",
            "description": "Contains details about promotion tier's parent campaign.",
            "properties": {
              "id": {
                "type": "string",
                "description": "Unique campaign ID."
              },
              "start_date": {
                "type": "string",
                "description": "Activation timestamp defines when the campaign starts to be active in the ISO 8601 format. Campaign is *inactive before* this date. ",
                "format": "date-time",
                "example": "2022-09-22T00:00:00.000Z"
              },
              "expiration_date": {
                "type": "string",
                "format": "date-time",
                "description": "Expiration timestamp defines when the campaign expires in the ISO 8601 format.  Campaign is *inactive after* this date.",
                "example": "2022-09-30T00:00:00.000Z"
              },
              "validity_timeframe": {
                "type": "object",
                "description": "Recurrent time periods when the campaign is valid. For example, valid for 1 hour every other day.",
                "properties": {
                  "interval": {
                    "type": "string",
                    "description": "Defines the intervening time between two time points in the ISO 8601 format, expressed as a duration. For example, a campaign with an `interval` of `P2D` will be active every other day."
                  },
                  "duration": {
                    "type": "string",
                    "description": "Defines the amount of time the campaign will be active in the ISO 8601 format. For example, a campaign with a `duration` of `P1D` will be valid for a duration of one day."
                  }
                }
              },
              "validity_day_of_week": {
                "type": "array",
                "description": "Integer array corresponding to the particular days of the week in which the campaign is valid.\n\n- `0`  Sunday  \n- `1`  Monday  \n- `2`  Tuesday  \n- `3`  Wednesday  \n- `4`  Thursday  \n- `5`  Friday  \n- `6`  Saturday  ",
                "items": {
                  "type": "integer"
                }
              },
              "active": {
                "type": "boolean",
                "description": "A flag indicating whether the campaign is active or not active. A campaign can be disabled even though it's within the active period defined by the `start_date` and `expiration_date` using the <!-- [Disable Campaign](OpenAPI.json/paths/~1campaigns~1{campaignId}~1disable) -->[Disable Campaign](ref:disable-campaign) endpoint.  \n\n- `true` indicates an *active* campaign\n- `false` indicates an *inactive* campaign"
              },
              "category_id": {
                "type": "string",
                "example": "cat_0b688929a2476386a6",
                "description": "Unique category ID that this campaign belongs to."
              },
              "object": {
                "type": "string",
                "description": "The type of object represented by the campaign object. This object stores information about the campaign.",
                "default": "campaign"
              }
            }
          },
          "campaign_id": {
            "type": "string",
            "description": "Promotion tier's parent campaign's unique ID."
          },
          "active": {
            "type": "boolean",
            "description": "A flag to toggle the promotion tier on or off. You can disable a promotion tier even though it's within the active period defined by the `start_date` and `expiration_date`.  \n\n- `true` indicates an *active* promotion tier\n- `false` indicates an *inactive* promotion tier"
          },
          "start_date": {
            "type": "string",
            "description": "Activation timestamp defines when the promotion tier starts to be active in the ISO 8601 format. Promotion tier is *inactive before* this date. ",
            "format": "date-time",
            "example": "2022-09-23T00:00:00.000Z"
          },
          "expiration_date": {
            "type": "string",
            "description": "Activation timestamp defines when the promotion tier expires in the ISO 8601 format. Promotion tier is *inactive after* this date. ",
            "format": "date-time",
            "example": "2022-09-26T00:00:00.000Z"
          },
          "validity_timeframe": {
            "type": "object",
            "description": "Set recurrent time periods when the promotion tier is valid. For example, valid for 1 hour every other day.`start_date` **required** when including the `validity_timeframe`.",
            "properties": {
              "interval": {
                "type": "string",
                "description": "Defines the intervening time between two time points in the ISO 8601 format, expressed as a duration. For example, a promotion tier with an `interval` of `P2D` will be active every other day."
              },
              "duration": {
                "type": "string",
                "description": "Defines the amount of time the promotion tier will be active in the ISO 8601 format. For example, a promotion tier with a `duration` of `P1D` will be valid for a duration of one day."
              }
            }
          },
          "validity_day_of_week": {
            "type": "array",
            "description": "Integer array corresponding to the particular days of the week in which the promotion tier is valid.\n\n- `0`  Sunday  \n- `1`  Monday  \n- `2`  Tuesday  \n- `3`  Wednesday  \n- `4`  Thursday  \n- `5`  Friday  \n- `6`  Saturday  ",
            "items": {
              "type": "integer"
            }
          },
          "summary": {
            "type": "object",
            "description": "Contains statistics about promotion tier redemptions and orders.",
            "properties": {
              "redemptions": {
                "type": "object",
                "description": "Contains statistics about promotion tier redemptions.",
                "properties": {
                  "total_redeemed": {
                    "type": "integer",
                    "description": "Number of times the promotion tier was redeemed."
                  }
                }
              },
              "orders": {
                "type": "object",
                "description": "Contains statistics about orders related to the promotion tier.",
                "properties": {
                  "total_amount": {
                    "type": "integer",
                    "description": "Sum of order totals."
                  },
                  "total_discount_amount": {
                    "type": "integer",
                    "description": "Sum of total discount applied using the promotion tier."
                  }
                }
              }
            }
          },
          "object": {
            "type": "string",
            "default": "promotion_tier",
            "description": "The type of object represented by JSON. This object stores information about the promotion tier."
          },
          "validation_rule_assignments": {
            "$ref": "#/components/schemas/ValidationRuleAssignmentsList"
          },
          "category_id": {
            "type": "string",
            "description": "Promotion tier category ID.",
            "example": "cat_0c9da30e7116ba6bba"
          },
          "categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Category"
            }
          }
        }
      },
      "RedemptionInternal": {
        "title": "Redemption Internal",
        "description": "Model Used for internal communication",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "r_0bc92f81a6801f9bca",
            "description": "Unique redemption ID."
          },
          "object": {
            "type": "string",
            "description": "The type of object represented by the JSON. This object stores information about the `redemption`.",
            "default": "redemption"
          },
          "created_at": {
            "type": "string",
            "example": "2021-12-22T10:13:06.487Z",
            "description": "Timestamp representing the date and time when the redemption was created in the ISO 8601 format.",
            "format": "date-time"
          },
          "tracking_id": {
            "type": "string",
            "description": "Hashed customer source ID."
          },
          "metadata": {
            "type": "object",
            "description": "The metadata object stores all custom attributes assigned to the redemption."
          },
          "channel_type": {
            "type": "string",
            "description": "The source of the channel for the redemption rollback. A `USER` corresponds to the Voucherify Dashboard and an `API` corresponds to the API.",
            "enum": [
              "USER",
              "API"
            ]
          },
          "channel_id": {
            "type": "string",
            "example": "user_g24UoRO3Caxu7FCT4n5tpYEa3zUG0FrH",
            "description": "Unique channel ID of the user performing the redemption. This is either a user ID from a user using the Voucherify Dashboard or an X-APP-Id of a user using the API."
          },
          "failure_code": {
            "type": "string",
            "example": "customer_rules_violated",
            "description": "If the result is `FAILURE`, this parameter will provide a generic reason as to why the redemption failed."
          },
          "failure_message": {
            "type": "string",
            "description": "If the result is `FAILURE`, this parameter will provide an expanded reason as to why the redemption failed."
          },
          "order": {
            "$ref": "#/components/schemas/OrderCalculated"
          },
          "previous_order": {
            "$ref": "#/components/schemas/OrderCalculated"
          },
          "reward": {
            "$ref": "#/components/schemas/RedemptionRewardResult"
          },
          "amount": {
            "type": "integer",
            "description": "A positive integer in the smallest currency unit (e.g. 100 cents for $1.00) representing the total amount of the order. This is the sum of the order items' amounts.",
            "example": 10000
          },
          "reason": {
            "type": "string",
            "description": "System generated cause for the redemption being invalid in the context of the provided parameters."
          },
          "result": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "FAILURE"
            ],
            "description": "Redemption result."
          },
          "status": {
            "type": "string",
            "enum": [
              "SUCCEEDED",
              "FAILED"
            ],
            "description": "Redemption status."
          },
          "related_redemptions": {
            "type": "object",
            "properties": {
              "rollbacks": {
                "type": "array",
                "items": {
                  "title": "Redemption Internal Related Redemptions Rollbacks Item",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "rr_0bc92f81a6801f9bca",
                      "description": "Unique rollback redemption ID."
                    },
                    "date": {
                      "type": "string",
                      "example": "2021-12-22T10:13:06.487Z",
                      "description": "Timestamp representing the date and time when the object was created in the ISO 8601 format.",
                      "format": "date-time"
                    }
                  }
                }
              },
              "redemptions": {
                "type": "array",
                "items": {
                  "title": "Redemption Internal Related Redemptions Item",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "r_0bc92f81a6801f9bca",
                      "description": "Unique redemption ID."
                    },
                    "date": {
                      "type": "string",
                      "example": "2021-12-22T10:13:06.487Z",
                      "description": "Timestamp representing the date and time when the object was created in the ISO 8601 format.",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "parent_redemption_id": {
            "type": "string",
            "description": "Unique redemption ID of the parent redemption.",
            "example": "r_0c656311b5878a2031"
          },
          "redemption": {
            "type": "string",
            "description": "Unique redemption ID of the parent redemption.",
            "example": "r_0c656311b5878a2031"
          },
          "customer": {
            "$ref": "#/components/schemas/SimpleCustomer"
          },
          "customer_id": {
            "type": "string",
            "nullable": true,
            "example": "cust_i8t5Tt6eiKG5K79KQlJ0Vs64",
            "description": "Unique customer ID of the redeeming customer."
          },
          "related_object_type": {
            "type": "string",
            "description": "Defines the related object.",
            "enum": [
              "voucher",
              "promotion_tier"
            ]
          },
          "related_object_id": {
            "type": "string",
            "description": "Unique related object ID assigned by Voucherify, i.e. v_lfZi4rcEGe0sN9gmnj40bzwK2FH6QUno for a voucher."
          },
          "related_object_parent_id": {
            "type": "string",
            "description": "Unique related parent object ID assigned by Voucherify, i.e. v_lfZi4rcEGe0sN9gmnj40bzwK2FH6QUno for a voucher."
          },
          "campaign_name": {
            "type": "string",
            "description": "Campaign name"
          },
          "voucher": {
            "description": "Defines the details of the voucher being redeemed.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Voucher"
              }
            ]
          },
          "promotion_tier": {
            "description": "Contains details of the promotion tier and the parent campaign.",
            "allOf": [
              {
                "$ref": "#/components/schemas/PromotionTier"
              }
            ]
          }
        }
      },
      "RedemptionRewardResult": {
        "title": "Redemption Reward Result",
        "type": "object",
        "properties": {
          "reward": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/Reward"
              }
            ]
          },
          "customer": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/SimpleCustomer"
              }
            ]
          },
          "assignment_id": {
            "type": "string",
            "nullable": true,
            "description": "Unique reward assignment ID assigned by Voucherify."
          },
          "voucher": {
            "nullable": true,
            "description": "Defines of the voucher.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Voucher"
              }
            ]
          },
          "product": {
            "nullable": true,
            "description": "Defines of the product.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Product"
              }
            ]
          },
          "sku": {
            "nullable": true,
            "description": "Defines of the sku.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Sku"
              }
            ]
          },
          "loyalty_tier_id": {
            "type": "string",
            "nullable": true,
            "description": "Unique loyalty tier ID assigned by Voucherify."
          }
        },
        "required": [
          "reward",
          "customer",
          "assignment_id",
          "voucher",
          "product",
          "sku",
          "loyalty_tier_id"
        ]
      },
      "ReferrerId": {
        "title": "Referrer Id",
        "allOf": [
          {
            "$ref": "#/components/schemas/CustomerId"
          }
        ]
      },
      "ReferrerWithSummaryLoyaltyReferrals": {
        "title": "Referrer With Summary Loyalty Referrals",
        "allOf": [
          {
            "$ref": "#/components/schemas/CustomerWithSummaryLoyaltyReferrals"
          }
        ]
      },
      "ReferralProgram": {
        "title": "Referral Program",
        "description": "Defines the referee reward and the way a referral is triggered. Context: `REFERRAL_PROGRAM`.",
        "type": "object",
        "properties": {
          "conversion_event_type": {
            "type": "string",
            "enum": [
              "redemption",
              "custom_event"
            ],
            "description": "Defines how a referral is triggered."
          },
          "custom_event": {
            "type": "object",
            "description": "Contains details about the custom event.",
            "properties": {
              "id": {
                "type": "string",
                "example": "ms_Ll9enAm2BCN0M1s4VxWobLFM",
                "description": "Unique custom event ID."
              },
              "name": {
                "type": "string",
                "description": "Custom event name."
              }
            }
          },
          "referee_reward": {
            "type": "object",
            "description": "Defines the referee reward.",
            "properties": {
              "related_object_parent": {
                "type": "object",
                "description": "Details of the resource from which the reward originates.",
                "properties": {
                  "id": {
                    "type": "string",
                    "example": "camp_kdxp3vf1clQ9CFs1jpqv3tZe",
                    "description": "Unique ID of the reward source."
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the reward source."
                  },
                  "object": {
                    "type": "string",
                    "default": "CAMPAIGN",
                    "enum": [
                      "CAMPAIGN"
                    ],
                    "description": "Type of resource represented by the source of the reward."
                  }
                }
              },
              "type": {
                "type": "string",
                "enum": [
                  "DISCOUNT_VOUCHER",
                  "LOYALTY_CARD",
                  "GIFT_VOUCHER",
                  "LUCKY_DRAW_CODE"
                ],
                "description": "Type of reward."
              },
              "amount": {
                "type": "string",
                "description": "Define the number of `points` to add to a loyalty card or `credits` to the balance on a gift card. In case of the gift card, the value is multiplied by 100 to precisely represent 2 decimal places. For example, $100 amount is written as 10000."
              }
            }
          }
        }
      },
      "Reward": {
        "type": "object",
        "title": "Reward",
        "properties": {
          "id": {
            "type": "string",
            "example": "rew_nIy4gHpQHle2c3pNMwuj7G6j",
            "description": "Unique reward ID assigned by Voucherify."
          },
          "name": {
            "type": "string",
            "description": "Reward name."
          },
          "stock": {
            "type": "integer",
            "nullable": true,
            "description": "Configurable for **material rewards**. The number of units of the product that you want to share as reward."
          },
          "redeemed": {
            "type": "integer",
            "nullable": true,
            "description": "Defines the number of already invoked (successful) reward redemptions.\t"
          },
          "attributes": {
            "type": "object",
            "description": "These properties are configurable for **material rewards**.",
            "properties": {
              "image_url": {
                "type": "string",
                "description": "The HTTPS URL pointing to the .png or .jpg file."
              },
              "description": {
                "type": "string",
                "description": "An arbitrary string that you can attach to a material reward."
              }
            }
          },
          "metadata": {
            "type": "object",
            "description": "The metadata object stores all custom attributes assigned to the reward. A set of key/value pairs that you can attach to a reward object. It can be useful for storing additional information about the reward in a structured format."
          },
          "type": {
            "type": "string",
            "enum": [
              "CAMPAIGN",
              "COIN",
              "MATERIAL"
            ],
            "description": "Reward type."
          },
          "parameters": {
            "description": "Defines how the reward is generated.",
            "allOf": [
              {
                "$ref": "#/components/schemas/RewardType"
              }
            ]
          },
          "updated_at": {
            "type": "string",
            "nullable": true,
            "description": "Timestamp representing the date and time when the reward was updated in the ISO 8601 format.",
            "example": "2022-08-11T16:01:34.885Z",
            "format": "date-time"
          },
          "object": {
            "description": "The type of object represented by the JSON. This object stores information about the reward.",
            "default": "reward",
            "enum": [
              "reward"
            ]
          }
        },
        "required": [
          "id",
          "name",
          "type",
          "stock",
          "redeemed",
          "metadata",
          "created_at",
          "updated_at",
          "object"
        ]
      },
      "RewardType": {
        "title": "Reward type",
        "oneOf": [
          {
            "$ref": "#/components/schemas/RewardTypeCampaign"
          },
          {
            "$ref": "#/components/schemas/RewardTypeCoin"
          },
          {
            "$ref": "#/components/schemas/RewardTypeMaterial"
          }
        ]
      },
      "RewardTypeCampaign": {
        "title": "Digital",
        "type": "object",
        "properties": {
          "campaign": {
            "type": "object",
            "required": [
              "id",
              "type"
            ],
            "description": "Objects stores information about the campaign related to the reward.",
            "properties": {
              "id": {
                "type": "string",
                "description": "Unique campaign ID assigned by Voucherify."
              },
              "balance": {
                "type": "integer",
                "description": "The incremental amout to be added to the current balance on the gift card. The value is multiplied by 100 to precisely represent 2 decimal places. For example, $100 amount is written as 10000."
              },
              "type": {
                "type": "string",
                "enum": [
                  "DISCOUNT_COUPONS",
                  "PROMOTION",
                  "GIFT_VOUCHERS",
                  "REFERRAL_PROGRAM",
                  "LOYALTY_PROGRAM"
                ],
                "description": "Campaign type."
              }
            }
          }
        },
        "required": [
          "campaign"
        ]
      },
      "RewardTypeCoin": {
        "title": "Pay with Points",
        "type": "object",
        "properties": {
          "coin": {
            "type": "object",
            "required": [
              "exchange_ratio"
            ],
            "description": "Defines the ratio by mapping the number of loyalty points in points_ratio to a predefined cash amount in exchange_ratio.",
            "properties": {
              "exchange_ratio": {
                "type": "number",
                "description": "The cash equivalent of the points defined in the points_ratio property."
              },
              "points_ratio": {
                "type": "integer",
                "description": "The number of loyalty points that will map to the predefined cash amount defined by the exchange_ratio property."
              }
            }
          }
        },
        "required": [
          "coin"
        ]
      },
      "RewardTypeMaterial": {
        "title": "Material",
        "type": "object",
        "properties": {
          "product": {
            "type": "object",
            "required": [
              "id",
              "sku_id"
            ],
            "description": "Contains information about the product given as a reward.",
            "properties": {
              "id": {
                "type": "string",
                "example": "prod_0b7d7dfb05cbe5c616",
                "description": "Unique product ID assigned by Voucherify."
              },
              "sku_id": {
                "type": "string",
                "nullable": true,
                "example": "sku_0b7d7dfb090be5c619",
                "description": "Unique SKU ID assigned by Voucherify, of the SKU given as a reward."
              }
            }
          }
        },
        "required": [
          "product"
        ]
      },
      "SimpleCampaign": {
        "title": "Simple Campaign",
        "type": "object",
        "description": "Request body schema for creating a discount voucher campaign using **POST** `/campaigns`.",
        "properties": {
          "id": {
            "type": "string",
            "description": "Campaign ID."
          },
          "name": {
            "type": "string",
            "description": "Campaign name."
          },
          "campaign_type": {
            "type": "string",
            "description": "Type of campaign."
          },
          "type": {
            "type": "string",
            "description": "Defines whether the campaign can be updated with new vouchers after campaign creation.\n- `AUTO_UPDATE`: By choosing the auto update option you will create a campaign that can be enhanced by new vouchers after the time of creation (e.g. by publish vouchers method).\n-  `STATIC`: vouchers need to be manually published.",
            "enum": [
              "AUTO_UPDATE",
              "STATIC"
            ]
          },
          "is_referral_code": {
            "type": "boolean",
            "description": "Flag indicating whether this voucher is a referral code; `true` for campaign type `REFERRAL_PROGRAM`."
          },
          "voucher": {
            "type": "object",
            "$ref": "#/components/schemas/SimpleCampaignVoucher"
          },
          "lucky_draw": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/LuckyDraw"
              }
            ]
          },
          "referral_program": {
            "$ref": "#/components/schemas/ReferralProgram"
          },
          "auto_join": {
            "type": "boolean",
            "description": "Indicates whether customers will be able to auto-join the campaign if any earning rule is fulfilled."
          },
          "join_once": {
            "type": "boolean",
            "description": "If this value is set to `true`, customers will be able to join the campaign only once."
          },
          "active": {
            "type": "boolean",
            "description": "Indicates whether the campaign is active."
          },
          "category_id": {
            "nullable": true,
            "type:": "string",
            "description": "The unique category ID that this campaign belongs to."
          },
          "metadata": {
            "type": "object",
            "description": "A set of custom key/value pairs that you can attach to a campaign. The metadata object stores all custom attributes assigned to the campaign."
          },
          "created_at": {
            "type": "string",
            "example": "2024-01-01T11:11:11.111Z",
            "description": "Timestamp representing the date and time when the campaign was created in the ISO 8601 format.",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "example": "2024-01-01T11:11:11.111Z",
            "description": "Timestamp representing the date and time when the campaign was updated in the ISO 8601 format.",
            "format": "date-time"
          },
          "object": {
            "type": "string",
            "default": "campaign",
            "enum": [
              "campaign"
            ],
            "description": "The type of object represented by JSON. This object stores information about the campaign."
          }
        }
      },
      "SimpleCampaignVoucher": {
        "type": "object",
        "description": "Schema for a simple campaign voucher.",
        "title": "Simple Campaign Voucher",
        "properties": {
          "type": {
            "type": "string",
            "default": "DISCOUNT_VOUCHER",
            "description": "Type of voucher."
          },
          "discount": {
            "description": "Defines the voucher discount type and details.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Discount"
              }
            ]
          },
          "gift": {
            "description": "Defines the voucher gift details.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Gift"
              }
            ]
          },
          "loyalty_card": {
            "description": "Defines the voucher loyalty card details.",
            "allOf": [
              {
                "$ref": "#/components/schemas/CampaignLoyaltyCard"
              }
            ]
          },
          "redemption": {
            "type": "object",
            "description": "Defines the redemption limits on vouchers.",
            "properties": {
              "quantity": {
                "type": "integer",
                "nullable": true,
                "description": "How many times a voucher can be redeemed. A `null` value means unlimited."
              },
              "redeemed_quantity": {
                "type": "integer",
                "example": 1,
                "description": "How many times a voucher has already been redeemed."
              }
            },
            "required": [
              "quantity",
              "redeemed_quantity"
            ]
          },
          "code_config": {
            "$ref": "#/components/schemas/CodeConfigRequiredLengthCharsetPattern"
          }
        },
        "required": [
          "type",
          "redemption",
          "code_config"
        ]
      },
      "SimpleConsent": {
        "title": "Simple Consent",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID number of the consent."
          },
          "name": {
            "type": "string",
            "description": "Name of the consent."
          },
          "object": {
            "type": "string",
            "default": "consent",
            "enum": [
              "consent"
            ]
          }
        },
        "required": [
          "object"
        ]
      },
      "SimpleCustomer": {
        "title": "Simple Customer",
        "type": "object",
        "description": "",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of an existing customer that will be linked in this request."
          },
          "name": {
            "type": "string",
            "description": "Customer's first and last name."
          },
          "email": {
            "type": "string",
            "description": "Customer's email address."
          },
          "source_id": {
            "type": "string",
            "description": "A unique identifier of the customer. It can be a customer ID or email from a CRM system, database, or a third-party service."
          },
          "metadata": {
            "type": "object",
            "description": "A set of custom key/value pairs that are attached to the customer. It stores all custom attributes assigned to the customer."
          },
          "object": {
            "type": "string",
            "description": "The type of the object represented by JSON.",
            "default": "customer",
            "enum": [
              "customer"
            ]
          }
        }
      },
      "SimpleCustomerRequiredObjectType": {
        "type": "object",
        "description": "This is an object representing a customer with limited properties used in Event Tracking endpoints.",
        "title": "Customer Object Required Object Type",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique ID of a customer that is assigned by Voucherify.",
            "example": "cust_CSnYd37MXmrbS19XCrghjBsv"
          },
          "name": {
            "type": "string",
            "description": "Customer's first and last name."
          },
          "email": {
            "type": "string",
            "description": "Customer's email address."
          },
          "source_id": {
            "type": "string",
            "description": "A unique identifier of the customer. It can be a customer ID or email from a CRM system, database, or a third-party service."
          },
          "metadata": {
            "type": "object",
            "description": "A set of custom key/value pairs that you can attach to a customer. The metadata object stores all custom attributes assigned to the customer."
          },
          "object": {
            "type": "string",
            "description": "The type of object represented by the JSON. This object stores information about the customer.",
            "default": "customer"
          }
        },
        "required": [
          "object"
        ]
      },
      "SimpleEvent": {
        "title": "Simple Event",
        "type": "object",
        "description": "Event information",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier assigned by Voucherify that will be linked to the this event.",
            "example": "evcus_0e3070fef399b70b00"
          },
          "type": {
            "type": "string",
            "description": "Type of the triggering event.",
            "example": "customer.order.paid"
          },
          "category": {
            "type": "string",
            "description": "Type of the event.",
            "enum": [
              "EFFECT",
              "ACTION"
            ]
          },
          "entity_id": {
            "type": "string",
            "description": "ID of the entity that initiated the event.",
            "example": "cust_ADqZIwGvWFvugWXVbrHwXRHO"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2024-01-01T11:11:11.111Z",
            "description": "Timestamp representing the date and time when the event was created in the ISO 8601 format."
          },
          "group_id": {
            "type": "string",
            "description": "Unique identifier of the request that caused the event.",
            "example": "v-1f36113948e50fc4ge"
          }
        }
      },
      "SimpleLoyaltyCard": {
        "type": "object",
        "description": "Object representing a loyalty card.",
        "required": [
          "points",
          "balance"
        ],
        "properties": {
          "points": {
            "type": "integer",
            "description": "Total points incurred over lifespan of loyalty card."
          },
          "balance": {
            "type": "integer",
            "description": "Points available for reward redemption."
          },
          "next_expiration_date": {
            "type": "string",
            "description": "The next closest date when the next set of points are due to expire."
          },
          "next_expiration_points": {
            "type": "integer",
            "description": "The amount of points that are set to expire next."
          }
        }
      },
      "SimpleOrder": {
        "title": "Simple Order",
        "type": "object",
        "additionalProperties": false,
        "description": "Order information.",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique ID assigned by Voucherify of an existing order that will be linked to the redemption of this request."
          },
          "source_id": {
            "type": "string",
            "description": "Unique source ID of an existing order that will be linked to the redemption of this request."
          },
          "status": {
            "type": "string",
            "description": "The order status.",
            "enum": [
              "CREATED",
              "PAID",
              "CANCELED",
              "FULFILLED"
            ]
          },
          "customer_id": {
            "type": "string",
            "nullable": true,
            "description": "Unique customer ID of the customer making the purchase.",
            "example": "cust_7iUa6ICKyU6gH40dBU25kQU1"
          },
          "referrer_id": {
            "type": "string",
            "nullable": true,
            "description": "Unique identifier of the referrer assigned by Voucherify.",
            "example": "cust_nM4jqPiaXUvQdVSA6vTRUnix"
          },
          "amount": {
            "type": "integer",
            "description": "A positive integer in the smallest currency unit (e.g. 100 cents for $1.00) representing the total amount of the order. This is the sum of the order items' amounts."
          },
          "discount_amount": {
            "type": "integer",
            "description": "Sum of all order-level discounts applied to the order."
          },
          "applied_discount_amount": {
            "type": "integer",
            "description": "This field shows the order-level discount applied."
          },
          "items_discount_amount": {
            "type": "integer",
            "description": "Sum of all product-specific discounts applied to the order."
          },
          "items_applied_discount_amount": {
            "type": "integer",
            "description": "Sum of all product-specific discounts applied in a particular request.  \n`sum(items, i => i.applied_discount_amount)`"
          },
          "total_discount_amount": {
            "type": "integer",
            "description": "Sum of all order-level AND all product-specific discounts applied to the order."
          },
          "total_applied_discount_amount": {
            "type": "integer",
            "description": "Sum of all order-level AND all product-specific discounts applied in a particular request.  \n`total_applied_discount_amount` = `applied_discount_amount` + `items_applied_discount_amount`"
          },
          "total_amount": {
            "type": "integer",
            "description": "Order amount after undoing all the discounts through the rollback redemption."
          },
          "items": {
            "type": "array",
            "description": "Array of items applied to the order.",
            "items": {
              "$ref": "#/components/schemas/SimpleOrderItem"
            }
          },
          "metadata": {
            "type": "object",
            "description": "A set of custom key/value pairs that you can attach to an order. It can be useful for storing additional information about the order in a structured format."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2024-01-01T11:11:11.111Z",
            "description": "Timestamp representing the date and time when the order was created in the ISO 8601 format."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2024-01-01T11:11:11.111Z",
            "description": "Timestamp representing the date and time when the order was updated in the ISO 8601 format."
          },
          "object": {
            "type": "string",
            "description": "The type of object represented by JSON.",
            "default": "order",
            "enum": [
              "order"
            ]
          }
        },
        "required": [
          "object"
        ]
      },
      "SimpleOrderItem": {
        "type": "object",
        "title": "Simple Order Item",
        "properties": {
          "object": {
            "type": "string",
            "default": "order_item",
            "enum": [
              "order_item"
            ],
            "description": "The type of object represented by JSON. This object stores information about the `order_item`."
          },
          "source_id": {
            "type": "string",
            "description": "The merchant’s product/SKU ID (if it is different from the Voucherify product/SKU ID)."
          },
          "related_object": {
            "type": "string",
            "enum": [
              "product",
              "sku"
            ],
            "description": "Used along with the source_id property. It can be set to either SKU or product."
          },
          "product_id": {
            "type": "string",
            "description": "A unique product ID assigned by Voucherify."
          },
          "sku_id": {
            "type": "string",
            "description": "A unique SKU ID assigned by Voucherify."
          },
          "quantity": {
            "type": "integer",
            "description": "The quantity of the particular item in the cart."
          },
          "discount_quantity": {
            "type": "integer",
            "description": "Number of dicounted items."
          },
          "amount": {
            "type": "integer",
            "description": "The total amount of the order item (price * quantity)."
          },
          "discount_amount": {
            "type": "integer",
            "description": "The sum of all order-item-level discounts applied to the order."
          },
          "applied_discount_amount": {
            "type": "integer",
            "description": "The order-level discount applied."
          },
          "price": {
            "type": "integer",
            "description": "Unit price of an item. Value is multiplied by 100 to precisely represent 2 decimal places. For example, a $10 discount is written as 1000."
          },
          "subtotal_amount": {
            "type": "integer",
            "description": "Final order amount after the applied discount."
          }
        }
      },
      "SimpleProduct": {
        "title": "Simple Product",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique product ID."
          },
          "source_id": {
            "type": "string",
            "description": "Product source ID."
          },
          "name": {
            "type": "string",
            "description": "Product name."
          }
        }
      },
      "SimpleProductDiscountUnit": {
        "check": "ISSUE!NOT ON GH!",
        "type": "object",
        "title": "Simple Product Discount Unit",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique product ID, assigned by Voucherify."
          },
          "source_id": {
            "type": "string",
            "description": "Product's source ID."
          },
          "name": {
            "type": "string",
            "description": "Product name."
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "SimplePromotionTier": {
        "title": "Simple Promotion Tier",
        "type": "object",
        "description": "This is an object representing a simple promotion tier. Promotion tiers are always assigned to a campaign and cannot be used standalone.",
        "properties": {
          "id": {
            "type": "string",
            "example": "promo_63fYCt81Aw0h7lzyRkrGZh9p",
            "description": "Unique promotion tier ID."
          },
          "name": {
            "type": "string",
            "description": "Name of the promotion tier."
          },
          "banner": {
            "type": "string",
            "description": "Text to be displayed to your customers on your website."
          },
          "campaign": {
            "$ref": "#/components/schemas/SimplePromotionTierCampaign"
          }
        }
      },
      "SimplePromotionTierCampaign": {
        "title": "Simple Promotion Tier Campaign",
        "type": "object",
        "description": "Represents simplified data about the promotion tier campaign",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique campaign ID assigned by Voucherify."
          }
        }
      },
      "SimpleRedemption": {
        "type": "object",
        "title": "Simple Redemption",
        "description": "This is an object representing a simple redemption.",
        "properties": {
          "id": {
            "type": "string",
            "example": "r_0bc92f81a6801f9bca",
            "description": "Unique redemption ID."
          },
          "customer_id": {
            "type": "string",
            "nullable": true,
            "example": "cust_i8t5Tt6eiKG5K79KQlJ0Vs64",
            "description": "Unique customer ID of the redeeming customer."
          },
          "tracking_id": {
            "type": "string",
            "description": "Hashed customer source ID."
          },
          "date": {
            "type": "string",
            "example": "2021-12-22T10:13:06.487Z",
            "description": "Timestamp representing the date and time when the redemption was created in the ISO 8601 format.",
            "format": "date-time"
          },
          "amount": {
            "type": "integer",
            "description": "A positive integer in the smallest currency unit (e.g. 1000 cents for $10.00) representing the total amount of the order. This is the sum of the order items' amounts.",
            "example": 10000
          },
          "order": {
            "$ref": "#/components/schemas/SimpleOrder"
          },
          "reward": {
            "$ref": "#/components/schemas/SimpleRedemptionRewardResult"
          },
          "customer": {
            "$ref": "#/components/schemas/SimpleCustomer"
          },
          "result": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "FAILURE"
            ],
            "description": "Redemption result."
          },
          "status": {
            "type": "string",
            "nullable": true,
            "enum": [
              "SUCCEEDED",
              "FAILED",
              "ROLLED BACK"
            ]
          },
          "voucher": {
            "description": "Defines the details of the voucher being redeemed.",
            "allOf": [
              {
                "$ref": "#/components/schemas/SimpleVoucher"
              }
            ]
          },
          "promotion_tier": {
            "$ref": "#/components/schemas/SimplePromotionTier"
          },
          "redemption": {
            "type": "string",
            "description": "Unique redemption ID of the parent redemption.",
            "example": "r_0c656311b5878a2031"
          },
          "metadata": {
            "type": "object",
            "description": "The metadata object stores all custom attributes in the form of key/value pairs assigned to the redemption."
          },
          "failure_code": {
            "type": "string",
            "example": "customer_rules_violated",
            "description": "If the result is `FAILURE`, this parameter will provide a generic reason as to why the redemption failed."
          },
          "failure_message": {
            "type": "string",
            "description": "If the result is `FAILURE`, this parameter will provide an expanded reason as to why the redemption failed."
          },
          "reason": {
            "type": "string",
            "description": "The reason for the redemption rollback."
          },
          "object": {
            "type": "string",
            "description": "The type of object represented by the JSON. This object stores information about the `redemption`.",
            "default": "redemption"
          }
        },
        "required": [
          "id",
          "date",
          "metadata",
          "status",
          "object"
        ]
      },
      "SimpleRedemptionRewardResult": {
        "title": "Simple Redemption Reward Result",
        "type": "object",
        "properties": {
          "customer": {
            "$ref": "#/components/schemas/SimpleCustomer"
          },
          "assignment_id": {
            "type": "string",
            "description": "Unique reward assignment ID assigned by Voucherify."
          },
          "voucher": {
            "description": "Defines of the voucher.",
            "allOf": [
              {
                "$ref": "#/components/schemas/SimpleVoucher"
              }
            ]
          },
          "product": {
            "description": "Defines of the product.",
            "allOf": [
              {
                "$ref": "#/components/schemas/SimpleProduct"
              }
            ]
          },
          "sku": {
            "description": "Defines of the sku.",
            "allOf": [
              {
                "$ref": "#/components/schemas/SimpleSku"
              }
            ]
          },
          "loyalty_tier_id": {
            "type": "string",
            "description": "Unique loyalty tier ID assigned by Voucherify."
          },
          "id": {
            "type": "string",
            "example": "rew_nIy4gHpQHle2c3pNMwuj7G6j",
            "description": "Unique reward ID, assigned by Voucherify."
          },
          "object": {
            "type": "string",
            "default": "reward",
            "enum": [
              "reward"
            ],
            "description": "The type of object represented by the JSON. This object stores information about the reward."
          },
          "name": {
            "type": "string",
            "description": "Reward name."
          },
          "created_at": {
            "type": "string",
            "description": "Timestamp representing the date and time when the reward was created in the ISO 8601 format.",
            "example": "2024-01-01T11:11:11.111Z",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "nullable": true,
            "description": "Timestamp representing the date and time when the reward was updated in the ISO 8601 format.",
            "example": "2024-01-01T11:11:11.111Z",
            "format": "date-time"
          },
          "parameters": {
            "description": "Defines how the reward is generated.",
            "type": "object",
            "oneOf": [
              {
                "$ref": "#/components/schemas/4_obj_reward_object_parameters_CAMPAIGN"
              },
              {
                "$ref": "#/components/schemas/4_obj_reward_object_parameters_COIN"
              },
              {
                "$ref": "#/components/schemas/4_obj_reward_object_parameters_MATERIAL"
              }
            ]
          },
          "type": {
            "type": "string",
            "enum": [
              "CAMPAIGN",
              "COIN",
              "MATERIAL"
            ],
            "description": "Reward type."
          }
        }
      },
      "SimpleReferralTier": {
        "title": "Simple Referral Tier",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique referral tier ID.",
            "example": "seg_DNAOhUtJffvX0f57ajLMFBYR"
          },
          "campaign_id": {
            "type": "string",
            "description": "Campaign ID."
          },
          "banner": {
            "type": "string",
            "description": "Text displayed to customers on the website."
          },
          "parameters": {
            "type": "object",
            "description": "Referral tier parameters."
          }
        }
      },
      "SimpleSegment": {
        "title": "Simple Segment",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique segment ID.",
            "example": "seg_DNAOhUtJffvX0f57ajLMFBYR"
          },
          "name": {
            "type": "string",
            "description": "Segment name."
          },
          "object": {
            "type": "string",
            "description": "The type of the object represented by the ID.",
            "default": "segment",
            "enum": [
              "segment"
            ]
          }
        },
        "required": [
          "id",
          "name",
          "object"
        ]
      },
      "SimpleSku": {
        "title": "Simple SKU",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique SKU ID."
          },
          "source_id": {
            "type": "string",
            "description": "SKU source id."
          },
          "sku": {
            "type": "string",
            "description": "SKU name."
          }
        }
      },
      "SimpleSkuDiscountUnit": {
        "check": "NOT ON GH!",
        "type": "object",
        "title": "Simple Sku Discount Unit",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique SKU ID, assigned by Voucherify."
          },
          "source_id": {
            "type": "string",
            "description": "Product variant's source ID."
          },
          "name": {
            "type": "string",
            "description": "SKU name."
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "SimpleVoucher": {
        "type": "object",
        "title": "Simple Voucher",
        "properties": {
          "id": {
            "type": "string",
            "description": "A unique identifier that represents the voucher assigned by Voucherify."
          },
          "code": {
            "type": "string",
            "description": "Voucher code."
          },
          "gift": {
            "description": "Gift object response.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Gift"
              }
            ]
          },
          "discount": {
            "$ref": "#/components/schemas/Discount"
          },
          "loyalty_card": {
            "description": "Defines the loyalty card details.",
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/SimpleLoyaltyCard"
              }
            ]
          },
          "type": {
            "type": "string",
            "description": "Type of the voucher.",
            "enum": [
              "DISCOUNT_VOUCHER",
              "LOYALTY_CARD",
              "GIFT_VOUCHER"
            ]
          },
          "campaign": {
            "type": "string",
            "description": "Campaign name."
          },
          "campaign_id": {
            "type": "string",
            "description": "Campaign unique ID."
          },
          "is_referral_code": {
            "type": "boolean",
            "description": "Flag indicating whether this voucher is a referral code; `true` for campaign type `REFERRAL_PROGRAM`."
          },
          "holder_id": {
            "type": "string",
            "example": "cust_eWgXlBBiY6THFRJwX45Iakv4",
            "description": "Unique customer ID of the campaign owner."
          },
          "referrer_id": {
            "type": "string",
            "description": "Unique identifier of the referrer assigned by Voucherify.",
            "example": "cust_nM4jqPiaXUvQdVSA6vTRUnix"
          },
          "category_id": {
            "type": "string",
            "nullable": true,
            "description": "The unique ID assigned by Voucherify of the category that this voucher belongs to.",
            "example": "cat_0b6152ce12414820dc"
          },
          "active": {
            "type": "boolean",
            "description": "Shows whether the voucher is on or off. `true` indicates an *active* voucher and `false` indicates an *inactive* voucher."
          },
          "created_at": {
            "type": "string",
            "example": "2021-12-22T10:13:06.487Z",
            "description": "Timestamp representing the date and time when the order was created in the ISO 8601 format.",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "example": "2024-01-01T11:11:11.111Z",
            "description": "Timestamp representing the date and time when the voucher was updated in the ISO 8601 format.",
            "format": "date-time"
          },
          "redemption": {
            "type": "object",
            "description": "Defines the redemption limits on vouchers.",
            "properties": {
              "quantity": {
                "type": "integer",
                "nullable": true,
                "description": "How many times a voucher can be redeemed. A `null` value means unlimited."
              },
              "redeemed_quantity": {
                "type": "integer",
                "example": 1,
                "description": "How many times a voucher has already been redeemed."
              },
              "required": [
                "quantity",
                "redeemed_quantity"
              ]
            }
          },
          "metadata": {
            "type": "object",
            "description": "A set of custom key/value pairs that you can attach to a voucher. The metadata object stores all custom attributes assigned to the voucher."
          },
          "object": {
            "type": "string",
            "description": "The type of object represented by JSON.",
            "default": "voucher",
            "enum": [
              "voucher"
            ]
          }
        },
        "check": "sprawdź te `required`",
        "required": [
          "type",
          "code",
          "created_at",
          "inapplicable_to",
          "object"
        ]
      },
      "Sku": {
        "title": "SKU Object",
        "type": "object",
        "description": "This is an object representing a product SKU.",
        "properties": {
          "id": {
            "type": "string",
            "example": "sku_0b1621b319d248b79f",
            "description": "A unique identifier that represents the SKU and is assigned by Voucherify."
          },
          "source_id": {
            "type": "string",
            "nullable": true,
            "example": "sku_source_id_4",
            "description": "A unique SKU identifier from your inventory system."
          },
          "product_id": {
            "type": "string",
            "example": "prod_0b15f6b9f650c16990",
            "description": "The parent product's unique ID."
          },
          "sku": {
            "type": "string",
            "nullable": true,
            "example": "Large Pink Shirt",
            "description": "Unique user-defined SKU name."
          },
          "price": {
            "type": "integer",
            "nullable": true,
            "description": "Unit price. It is represented by a value multiplied by 100 to accurately reflect 2 decimal places, such as `$100.00` being expressed as `10000`."
          },
          "currency": {
            "type": "string",
            "nullable": true,
            "description": "SKU price currency.",
            "example": "USD"
          },
          "attributes": {
            "type": "object",
            "description": "The attributes object stores values for all custom attributes inherited by the SKU from the parent product. A set of key/value pairs that are attached to a SKU object and are unique to each SKU within a product family."
          },
          "image_url": {
            "type": "string",
            "nullable": true,
            "description": "The HTTPS URL pointing to the .png or .jpg file that will be used to render the SKU image."
          },
          "metadata": {
            "type": "object",
            "description": "The metadata object stores all custom attributes assigned to the SKU. A set of key/value pairs that you can attach to a SKU object. It can be useful for storing additional information about the SKU in a structured format."
          },
          "created_at": {
            "type": "string",
            "example": "2022-05-17T10:36:30.187Z",
            "description": "Timestamp representing the date and time when the SKU was created in the ISO 8601 format.",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "nullable": true,
            "example": "2022-05-17T10:55:09.137Z",
            "description": "Timestamp representing the date and time when the SKU was updated in the ISO 8601 format.",
            "format": "date-time"
          },
          "object": {
            "type": "string",
            "default": "sku",
            "description": "The type of object represented by JSON. This object stores information about the `SKU`.",
            "enum": [
              "sku"
            ]
          }
        },
        "required": [
          "id",
          "source_id",
          "product_id",
          "sku",
          "price",
          "attributes",
          "metadata",
          "image_url",
          "created_at",
          "updated_at",
          "object"
        ]
      },
      "SkusListForProduct": {
        "type": "object",
        "description": "Contains information about child SKUs.",
        "title": "Skus List For Product",
        "properties": {
          "object": {
            "type": "string",
            "description": "The type of object represented by JSON. This object stores information about SKUs.",
            "default": "list"
          },
          "data_ref": {
            "type": "string",
            "description": "Identifies the name of the JSON property that contains the array of SKUs.",
            "default": "data"
          },
          "data": {
            "type": "array",
            "description": "A dictionary that contains an array of SKUs.",
            "items": {
              "$ref": "#/components/schemas/Sku"
            }
          },
          "total": {
            "type": "integer",
            "description": "Total number of SKUs in the product."
          }
        },
        "required": [
          "object",
          "data_ref",
          "data",
          "total"
        ]
      },
      "ValidationRuleAssignment": {
        "title": "Validation Rule Assignment",
        "type": "object",
        "description": "This is an object representing a validation rule assignment.",
        "properties": {
          "id": {
            "type": "string",
            "example": "asgm_74F7QZoYbUoljwQO",
            "description": "Validation rule assignment ID."
          },
          "rule_id": {
            "type": "string",
            "example": "val_4j7DCRm2IS59",
            "description": "Validation rule ID."
          },
          "related_object_id": {
            "type": "string",
            "example": "v_JtWunK6jUo7X2qOFj0SyRHq4p9tgENlT",
            "description": "The resource ID to which the validation rule was assigned."
          },
          "related_object_type": {
            "type": "string",
            "description": "The type of resource to which the validation rule was assigned.",
            "enum": [
              "voucher",
              "campaign",
              "earning_rule",
              "reward_assignment",
              "promotion_tier",
              "distribution"
            ]
          },
          "created_at": {
            "type": "string",
            "example": "2022-02-17T08:18:15.085Z",
            "description": "Timestamp representing the date and time when the validation rule assignment was created in the ISO 8601 format.",
            "format": "date-time"
          },
          "object": {
            "type": "string",
            "default": "validation_rules_assignment",
            "description": "The type of object represented by the ID.",
            "enum": [
              "validation_rules_assignment"
            ]
          }
        },
        "required": [
          "id",
          "rule_id",
          "related_object_id",
          "related_object_type",
          "created_at",
          "object"
        ]
      },
      "ValidationRuleAssignmentsList": {
        "type": "object",
        "description": "Validation Rule Assignments List",
        "title": "Validation Rule Assignments List",
        "properties": {
          "object": {
            "type": "string",
            "description": "The type of object represented by JSON. This object stores information about validation rule assignments.",
            "default": "list"
          },
          "data_ref": {
            "type": "string",
            "description": "Identifies the name of the JSON property that contains the array of validation rule assignments.",
            "default": "data"
          },
          "data": {
            "type": "array",
            "description": "A dictionary that contains an array of validation rule assignments.",
            "items": {
              "$ref": "#/components/schemas/ValidationRuleAssignment"
            }
          },
          "total": {
            "type": "integer",
            "description": "Total number of validation rule assignments."
          }
        },
        "required": [
          "object",
          "data_ref",
          "data",
          "total"
        ]
      },
      "ValidationRulesAssignmentsList": {
        "title": "Validation Rules Assignments List",
        "description": "List of Validation Rules Assignments",
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "default": "list",
            "enum": [
              "list"
            ],
            "description": "The type of object represented by JSON. This object stores information about validation rules assignments."
          },
          "data_ref": {
            "type": "string",
            "default": "data",
            "enum": [
              "data"
            ],
            "description": "Identifies the name of the attribute that contains the array of validation rules assignments."
          },
          "data": {
            "type": "array",
            "description": "Contains array of validation rules assignments.",
            "items": {
              "$ref": "#/components/schemas/BusValRuleAssignment"
            }
          },
          "total": {
            "type": "integer",
            "minimum": 0,
            "description": "Total number of validation rules assignments."
          }
        },
        "required": [
          "object",
          "data_ref",
          "data",
          "total"
        ]
      },
      "Voucher": {
        "title": "Voucher",
        "type": "object",
        "description": "This is an object representing a voucher.",
        "properties": {
          "id": {
            "type": "string",
            "example": "v_mkZN9v7vjYUadXnHrMza8W5c34fE5KiV",
            "description": "Assigned by the Voucherify API, identifies the voucher."
          },
          "code": {
            "type": "string",
            "example": "WVPblOYX",
            "description": "A code that identifies a voucher. Pattern can use all letters of the English alphabet, Arabic numerals, and special characters."
          },
          "campaign": {
            "type": "string",
            "example": "Gift Card Campaign",
            "description": "A unique campaign name, identifies the voucher's parent campaign."
          },
          "campaign_id": {
            "type": "string",
            "example": "camp_FNYR4jhqZBM9xTptxDGgeNBV",
            "description": "Assigned by the Voucherify API, identifies the voucher's parent campaign."
          },
          "category": {
            "type": "string",
            "description": "Tag defining the category that this voucher belongs to. Useful when listing vouchers using the List Vouchers endpoint."
          },
          "category_id": {
            "type": "string",
            "description": "Unique category ID assigned by Voucherify.",
            "example": "cat_0bb343dee3cdb5ec0c"
          },
          "categories": {
            "type": "array",
            "description": "Contains details about the category.",
            "items": {
              "$ref": "#/components/schemas/Category"
            }
          },
          "type": {
            "type": "string",
            "enum": [
              "GIFT_VOUCHER",
              "DISCOUNT_VOUCHER",
              "LOYALTY_CARD"
            ],
            "description": "Defines the type of the voucher. "
          },
          "discount": {
            "$ref": "#/components/schemas/Discount"
          },
          "gift": {
            "type": "object",
            "description": "Object representing gift parameters. Child attributes are present only if `type` is `GIFT_VOUCHER`. Defaults to `null`.",
            "properties": {
              "amount": {
                "type": "integer",
                "example": 10000,
                "description": "Total gift card income over the lifetime of the card. Value is multiplied by 100 to precisely represent 2 decimal places. For example, $100 amount is written as 10000."
              },
              "balance": {
                "type": "integer",
                "example": 500,
                "description": "Available funds. Value is multiplied by 100 to precisely represent 2 decimal places. For example, $100 amount is written as 10000."
              },
              "effect": {
                "type": "string",
                "enum": [
                  "APPLY_TO_ORDER",
                  "APPLY_TO_ITEMS"
                ],
                "description": "Defines how the credits are applied to the customer's order."
              }
            }
          },
          "loyalty_card": {
            "type": "object",
            "description": "Object representing loyalty card parameters. Child attributes are present only if `type` is `LOYALTY_CARD`. Defaults to `null`.",
            "properties": {
              "points": {
                "type": "integer",
                "example": 7000,
                "description": "Total points incurred over lifespan of loyalty card."
              },
              "balance": {
                "type": "integer",
                "example": 6970,
                "description": "Points available for reward redemption."
              },
              "next_expiration_date": {
                "type": "string",
                "format": "date",
                "example": "2023-05-30",
                "description": "The next closest date when the next set of points are due to expire."
              },
              "next_expiration_points": {
                "type": "integer",
                "description": "The amount of points that are set to expire next."
              }
            }
          },
          "start_date": {
            "type": "string",
            "example": "2021-12-01T00:00:00.000Z",
            "format": "date-time",
            "description": "Activation timestamp defines when the code starts to be active in ISO 8601 format. Voucher is *inactive before* this date. "
          },
          "expiration_date": {
            "type": "string",
            "example": "2021-12-31T00:00:00.000Z",
            "format": "date-time",
            "description": "Expiration timestamp defines when the code expires in ISO 8601 format.  Voucher is *inactive after* this date."
          },
          "validity_timeframe": {
            "type": "object",
            "description": "Set recurrent time periods when the voucher is valid. For example, valid for 1 hour every other day.`start_date` **required** when including the `validity_timeframe`.",
            "properties": {
              "interval": {
                "type": "string",
                "example": "P2D",
                "description": "Defines the intervening time between two time points in ISO 8601 format, expressed as a duration. For example, a voucher with an `interval` of `P2D` will be active every other day."
              },
              "duration": {
                "type": "string",
                "example": "PT1H",
                "description": "Defines the amount of time the voucher will be active in ISO 8601 format. For example, a voucher with a `duration` of `PT1H` will be valid for a duration of one hour."
              }
            }
          },
          "validity_day_of_week": {
            "type": "array",
            "description": "Integer array corresponding to the particular days of the week in which the voucher is valid.\n\n- `0`  Sunday  \n- `1`  Monday  \n- `2`  Tuesday  \n- `3`  Wednesday  \n- `4`  Thursday  \n- `5`  Friday  \n- `6`  Saturday  ",
            "items": {
              "type": "integer",
              "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6
              ]
            }
          },
          "active": {
            "type": "boolean",
            "nullable": true,
            "description": "A flag to toggle the voucher on or off. You can disable a voucher even though it's within the active period defined by the `start_date` and `expiration_date`.  \n\n- `true` indicates an *active* voucher\n- `false` indicates an *inactive* voucher"
          },
          "additional_info": {
            "type": "string",
            "description": "An optional field to keep any extra textual information about the code such as a code description and details."
          },
          "metadata": {
            "type": "object",
            "description": "The metadata object stores all custom attributes assigned to the code. A set of key/value pairs that you can attach to a voucher object. It can be useful for storing additional information about the voucher in a structured format."
          },
          "assets": {
            "$ref": "#/components/schemas/VoucherAssets"
          },
          "is_referral_code": {
            "type": "boolean",
            "nullable": true,
            "description": "Flag indicating whether this voucher is a referral code; `true` for campaign type `REFERRAL_PROGRAM`."
          },
          "created_at": {
            "type": "string",
            "example": "2021-12-22T10:13:06.487Z",
            "description": "Timestamp representing the date and time when the voucher was created in ISO 8601 format.",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "example": "2021-12-22T10:14:45.316Z",
            "format": "date-time",
            "description": "Timestamp representing the date and time when the voucher was last updated in ISO 8601 format."
          },
          "holder_id": {
            "type": "string",
            "example": "cust_eWgXlBBiY6THFRJwX45Iakv4",
            "description": "Unique customer ID of voucher owner."
          },
          "holder": {
            "$ref": "#/components/schemas/SimpleCustomer"
          },
          "validation_rules_assignments": {
            "$ref": "#/components/schemas/ValidationRulesAssignmentsList"
          },
          "referrer_id": {
            "type": "string",
            "description": "Unique identifier of the referrer assigned by Voucherify.",
            "example": "cust_nM4jqPiaXUvQdVSA6vTRUnix"
          },
          "object": {
            "type": "string",
            "description": "The type of object represented by JSON. Default is `voucher`.",
            "default": "voucher"
          },
          "publish": {
            "type": "object",
            "description": "This object stores a summary of publish events: an events counter and an endpoint which can be called to return details of each event.  A publication is required for loyalty cards and referral codes. This object gets updated whenever a voucher has been published. Publication means assigning a code to a particular customer.",
            "properties": {
              "object": {
                "type": "string",
                "default": "list",
                "description": "The type of object represented is by default `list`. To get this list, you need to make a call to the endpoint returned in the `url` attribute."
              },
              "count": {
                "type": "integer",
                "example": 0,
                "description": "Publication events counter."
              },
              "url": {
                "type": "string",
                "example": "/v1/vouchers/WVPblOYX/publications?page=1&limit=10",
                "description": "The endpoint where this list of publications can be accessed using a GET method. `/v1/vouchers/{voucher_code}/publications`"
              }
            }
          },
          "redemption": {
            "type": "object",
            "description": "Stores a summary of redemptions that have been applied to the voucher.",
            "properties": {
              "quantity": {
                "type": "integer",
                "description": "How many times a voucher can be redeemed. A `null` value means unlimited."
              },
              "redeemed_quantity": {
                "type": "integer",
                "example": 1,
                "description": "How many times a voucher has already been redeemed."
              },
              "redeemed_amount": {
                "type": "integer",
                "example": 100000,
                "description": "Total amount redeemed. Value is multiplied by 100 to precisely represent 2 decimal places. For example, $100 balance is written as 10000."
              },
              "redeemed_points": {
                "type": "integer",
                "example": 100000,
                "description": "Total loyalty points redeemed."
              },
              "object": {
                "type": "string",
                "default": "list",
                "description": "The type of object represented is by default `list`. To get this list, you need to make a call to the endpoint returned in the url attribute."
              },
              "url": {
                "type": "string",
                "example": "/v1/vouchers/WVPblOYX/redemptions?page=1&limit=10",
                "description": "The endpoint where this list of redemptions can be accessed using a GET method. `/v1/vouchers/{voucher_code}/redemptions`"
              }
            }
          }
        }
      },
      "VoucherAssets": {
        "title": "Voucher Assets",
        "type": "object",
        "description": "Stores links to images of QR and barcode that correspond to an encrypted voucher code.",
        "properties": {
          "qr": {
            "type": "object",
            "description": "Stores Quick Response (QR) representation of encrypted code.",
            "properties": {
              "id": {
                "type": "string",
                "example": "U2FsdGVkX19ucFhvVmBVpVYG5KoswTsjSIaqoKg5L9ie4BK+t4pp7U7oFzjGJzj9q/bmuMOj9mEFiVKDMIkSaruKedMvHbKoPX5Sg+BaZk5QwXMf8k/OzSlOEVybpwSq+AiqPoNtjeuqtIgkDyvT6Q==",
                "description": "Encrypted voucher code ID."
              },
              "url": {
                "type": "string",
                "description": "URL to a QR code."
              }
            }
          },
          "barcode": {
            "type": "object",
            "description": "Stores barcode representation of encrypted code.",
            "properties": {
              "id": {
                "type": "string",
                "description": "Encrypted voucher code ID."
              },
              "url": {
                "type": "string",
                "description": "URL to a barcode.`"
              }
            }
          }
        }
      },
      "VouchersBalanceUpdateResponseBody": {
        "description": "Voucher balance data for gift vouchers and loyalty cards",
        "type": "object",
        "title": "Vouchers Balance Data",
        "required": [
          "amount",
          "total",
          "balance",
          "type",
          "object",
          "related_object",
          "operation_type"
        ],
        "properties": {
          "amount": {
            "type": "integer",
            "description": "The incremental amount added (positive integer) or subtracted (negative integer) to the current balance on the gift voucher or loyalty card. Value is multiplied by 100 to precisely represent 2 decimal places. For example, $100 amount is written as 10000."
          },
          "total": {
            "type": "integer",
            "description": "Total income incurred over the lifespan of the gift voucher or loyalty card."
          },
          "balance": {
            "type": "integer",
            "description": "The balance after adding or subtracting a specified amount. Value is multiplied by 100 to precisely represent 2 decimal places. For example, $100 amount is written as 10000."
          },
          "type": {
            "type": "string",
            "description": "The type of voucher being modified.",
            "enum": [
              "gift_voucher",
              "loyalty_card"
            ]
          },
          "operation_type": {
            "type": "string",
            "default": "MANUAL",
            "enum": [
              "MANUAL"
            ]
          },
          "object": {
            "type": "string",
            "description": "The type of object represented by JSON. Default is `balance`.",
            "default": "balance",
            "enum": [
              "balance"
            ]
          },
          "related_object": {
            "type": "object",
            "description": "Defines the resource that is being modified with the values that are returned in the balance object.",
            "required": [
              "type",
              "id"
            ],
            "properties": {
              "type": {
                "type": "string",
                "description": "The object being modified, i.e. `voucher`.",
                "default": "voucher",
                "enum": [
                  "voucher"
                ]
              },
              "id": {
                "type": "string",
                "description": "The uniqe identifier that was assigned by Voucherify.",
                "example": "v_4Bd3aX7eXjHbe7Ef7on8YsLWBynsT4jq"
              }
            }
          }
        }
      },
      "VoucherTransaction": {
        "title": "Voucher Transaction",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of the transaction."
          },
          "source_id": {
            "type": "string",
            "nullable": true,
            "description": "The merchant's product ID (if it is different than Voucherify's product ID)."
          },
          "voucher_id": {
            "type": "string",
            "description": "Unique identifier of the voucher."
          },
          "campaign_id": {
            "type": "string",
            "description": "Unqiue identifier of the voucher's parent campaign if it is part of campaign that generates bulk codes."
          },
          "source": {
            "type": "string",
            "nullable": true,
            "description": "The channel through which the transaction took place, whether through the API or the the Dashboard. In case of a redemption, this value is null."
          },
          "reason": {
            "type": "string",
            "nullable": true,
            "description": "Reason why the transaction occurred. In case of a redemption, this value is null."
          },
          "type": {
            "description": "Type of transaction.",
            "allOf": [
              {
                "$ref": "#/components/schemas/LoyaltyCardTransactionsType"
              }
            ]
          },
          "details": {
            "type": "object",
            "description": "Contains the detailed information about the transaction.",
            "nullable": true,
            "properties": {
              "balance": {
                "type": "object",
                "description": "Contains information on how the balance was affected by the transaction.",
                "properties": {
                  "type": {
                    "type": "string",
                    "pattern": "loyalty_card",
                    "default": "loyalty_card",
                    "enum": [
                      "loyalty_card"
                    ],
                    "description": "The type of the voucher whose balance is being adjusted due to the transaction."
                  },
                  "total": {
                    "type": "integer",
                    "description": "The available points prior to the transaction."
                  },
                  "object": {
                    "type": "string",
                    "pattern": "balance",
                    "default": "balance",
                    "enum": [
                      "balance"
                    ],
                    "description": "The type of object represented by the JSON."
                  },
                  "points": {
                    "type": "integer",
                    "description": "The amount of points being used up in the transaction."
                  },
                  "balance": {
                    "type": "integer",
                    "description": "The points balance on the loyalty card after the points in the transaction are subtracted from the loyalty card."
                  },
                  "related_object": {
                    "type": "object",
                    "required": [
                      "id",
                      "type"
                    ],
                    "description": "Defines the resource that is being modified with the values that are returned in the balance object.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Unique identifier of the modified voucher."
                      },
                      "type": {
                        "type": "string",
                        "pattern": "voucher",
                        "default": "voucher",
                        "enum": [
                          "voucher"
                        ],
                        "description": "The object being modified, i.e. voucher."
                      }
                    }
                  }
                },
                "required": [
                  "type",
                  "total",
                  "object",
                  "points",
                  "balance",
                  "related_object"
                ]
              },
              "order": {
                "type": "object",
                "description": "Contains information about the original order.",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Unique identifier of the order."
                  },
                  "source_id": {
                    "type": "string",
                    "description": "Unique identifier of the merchant's order if it is different from the Voucherify order ID."
                  }
                },
                "required": [
                  "id",
                  "source_id"
                ]
              },
              "event": {
                "type": "object",
                "description": "Contains information about the event that triggers the point accrual.",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Unique event ID."
                  },
                  "type": {
                    "type": "string",
                    "description": "Type of event."
                  }
                },
                "required": [
                  "id",
                  "type"
                ]
              },
              "earning_rule": {
                "type": "object",
                "description": "Contains information about the earning rule.",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Unique identifier of the earning rule."
                  },
                  "source": {
                    "type": "object",
                    "required": [
                      "banner"
                    ],
                    "description": "Contains the custom earning rule name.",
                    "properties": {
                      "banner": {
                        "type": "string",
                        "description": "Name of the earning rule. This is displayed as a header for the earning rule in the Dashboard."
                      }
                    }
                  }
                },
                "required": [
                  "id",
                  "source"
                ]
              },
              "segment": {
                "type": "object",
                "description": "Contains information about the segment.",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Unique identifier of the segment."
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the segment."
                  }
                },
                "required": [
                  "id",
                  "name"
                ]
              },
              "loyalty_tier": {
                "type": "object",
                "description": "Contains information about the loyalty tier.",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Unique identifier of the loyalty tier."
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the loyalty tier."
                  }
                },
                "required": [
                  "id",
                  "name"
                ]
              },
              "redemption": {
                "type": "object",
                "description": "Contains information about the original redemption.",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Unique redemption ID."
                  }
                },
                "required": [
                  "id"
                ]
              },
              "rollback": {
                "type": "object",
                "description": "Contains information about the redemption rollback.",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Unique identifier of the redemption rollback."
                  }
                },
                "required": [
                  "id"
                ]
              },
              "custom_event": {
                "type": "object",
                "description": "Contains information about the custom event that triggers the point accrual.",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Unique identifier of the event."
                  },
                  "type": {
                    "type": "string",
                    "description": "Type of the custom event."
                  }
                },
                "required": [
                  "id",
                  "type"
                ]
              },
              "event_schema": {
                "type": "object",
                "description": "Contains information about the custom event metadata schema.",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Unique identifier of the metadata schema."
                  },
                  "name": {
                    "type": "string",
                    "description": "Type of the custom event."
                  }
                },
                "required": [
                  "id",
                  "name"
                ]
              },
              "reward": {
                "type": "object",
                "description": "Contains information about the pay with points reward.",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Unique reward ID."
                  },
                  "name": {
                    "type": "string",
                    "description": "Reward name."
                  }
                },
                "required": [
                  "id",
                  "name"
                ]
              },
              "source_voucher": {
                "description": "Contains information on how the balance on the donor loyalty card was affected by the transaction.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SimpleVoucher"
                  }
                ]
              },
              "destination_voucher": {
                "description": "Contains information on how the balance on the receiving loyalty card was affected by the transaction.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SimpleVoucher"
                  }
                ]
              }
            }
          },
          "related_transaction_id": {
            "type": "string",
            "nullable": true,
            "description": "The related identifier of the transaction on the receiving card."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp representing the date and time when the transaction was created in ISO 8601 format."
          }
        },
        "required": [
          "id",
          "source_id",
          "voucher_id",
          "campaign_id",
          "source",
          "reason",
          "type",
          "details",
          "related_transaction_id",
          "created_at"
        ]
      }
    }
  }
}