![Voucherify Ruby SDK](./voucherify-ruby-sdk.png)

## Official [Voucherify](https://voucherify.io?utm_source=github&utm_medium=sdk&utm_campaign=acq) SDK for Ruby

[![Gem Version](https://img.shields.io/gem/v/voucherify.svg)](https://rubygems.org/gems/voucherify)
[![Gem Downloads](https://img.shields.io/gem/dt/voucherify.svg)](https://rubygems.org/gems/voucherify)
[![License](https://img.shields.io/github/license/voucherifyio/sdk-ruby-openapi-based.svg)](https://opensource.org/licenses/MIT)
[![GitHub issues](https://img.shields.io/github/issues/voucherifyio/sdk-ruby-openapi-based.svg)](https://github.com/voucherifyio/sdk-ruby-openapi-based/issues)

Voucherify empowers marketers and developers with flexible building blocks to come up with, implement, and track targeted promotional campaigns.

Learn more about Voucherify by visiting [our site](https://www.voucherify.io).

This SDK is automatically generated by the [OpenAPI Generator](https://openapi-generator.tech) based on our [Documentation](https://docs.voucherify.io/docs/introduction) with {{appVersion}} version.

The legacy version of Ruby SDK could be found [here](https://github.com/voucherifyio/voucherify-ruby-sdk)

## üìù Documentation

You will find detailed description and example responses at our [official documentation](https://docs.voucherify.io/reference). Most method headers point to more detailed descriptions of arguments you can use.

üìö Want to learn more? Visit our [official site](https://www.voucherify.io) or our [Success Portal](https://success.voucherify.io).

üëΩ Having troubles? Check our [Help center](https://support.voucherify.io/).

üß™ Looking for promotion ideas? Check our [Cookbook](https://cookbook.voucherify.io/) to get an inspiration.

üêõ Encounter a bug? Please file a report in the [Issues](https://github.com/voucherifyio/sdk-ruby-openapi-based/issues).

## ‚öôÔ∏è Installation

### Gem Repository

The SDK is hosted in [RubeGems](https://rubygems.org/gems/voucherify) and could be easy obtained by adding this line to Your application's Gemfile:

```ruby
gem 'voucherify'
```

And then execute:

```shell
bundle install
```

Or install it yourself as:

```shell
gem install voucherify
```

### üöÄ Running code

When You have Voucherify gem installed You could use pre-created [example.rb](./example.rb) with example code for testing purpose.
Remember to fill Your Voucherify keys for the valid authorization.

Then, go into root directory and run:

```shell
ruby example.rb
```

Or, if You're using bundler:

```shell
bundle exec ruby example.rb
```

## üîÑ Alternative ways for installing a gem

To build the Ruby code into a gem:

```shell
gem build {{{gemName}}}.gemspec
```

Then either install the gem locally:

```shell
gem install ./{{{gemName}}}-{{{gemVersion}}}.gem
```

(for development, run `gem install --dev ./{{{gemName}}}-{{{gemVersion}}}.gem` to install the development dependencies)

Add this to the Gemfile:

```shell
gem '{{{gemName}}}', '~> {{{gemVersion}}}'
```

Then install dependencies with bundler

```shell
bundle install
```

Finally, exec script with bundler:

```shell
bundle exec ruby example.rb
```

### üì¶ Install from Git

If the Ruby gem is hosted at a git repository: https://{{gitHost}}/{{gitUserId}}{{^gitUserId}}YOUR_GIT_USERNAME{{/gitUserId}}/{{gitRepoId}}{{^gitRepoId}}YOUR_GIT_REPO{{/gitRepoId}}, then add the following in the Gemfile:

```shell
gem '{{{gemName}}}', :git => 'https://github.com/voucherifyio/voucherify-js-sdk.git', branch: 'main'
```

Then install dependencies with bundler

```shell
bundle install
```

Finally, exec script with bundler:

```shell
bundle exec ruby example.rb
```

## üê≥ Running local tests with docker

1. Copy `.env.example` to `.env` and fill in the values.
2. Run `docker build -t ruby .` to build the image.
3. Run `docker run --rm ruby` to run the tests and delete container immediately after.

## üõ†Ô∏è Contributing

Read more about how to Contribute to Voucherify Ruby SDK by visiting [CONTRIBUTING.md](./CONTRIBUTING.md)

Remember that this SDK is auto generated (except of the tests) so changes made here will be overwritten by generator.

## üîê Documentation for Authorization

{{^authMethods}}Endpoints do not require authorization.{{/authMethods}}
{{#hasAuthMethods}}Authentication schemes defined for the API:{{/hasAuthMethods}}
{{#authMethods}}
### {{name}}

{{#isApiKey}}

- **Type**: API key
- **API key parameter name**: {{keyParamName}}
- **Location**: {{#isKeyInQuery}}URL query string{{/isKeyInQuery}}{{#isKeyInHeader}}HTTP header{{/isKeyInHeader}}
{{/isApiKey}}
{{#isBasic}}
{{#isBasicBasic}}- **Type**: HTTP basic authentication
{{/isBasicBasic}}{{#isBasicBearer}}- **Type**: Bearer authentication{{#bearerFormat}} ({{{.}}}){{/bearerFormat}}
{{/isBasicBearer}}{{#isHttpSignature}}- **Type**: HTTP signature authentication
{{/isHttpSignature}}
{{/isBasic}}
{{#isOAuth}}

- **Type**: OAuth
- **Flow**: {{flow}}
- **Authorization URL**: {{authorizationUrl}}
- **Scopes**: {{^scopes}}N/A{{/scopes}}
{{#scopes}}  - {{scope}}: {{description}}
{{/scopes}}
{{/isOAuth}}

{{/authMethods}}

## üåê Documentation for API Endpoints

All URIs are relative to *{{basePath}}*

Class | Method | HTTP request | Description
------------ | ------------- | ------------- | -------------
{{#apiInfo}}{{#apis}}{{#operations}}{{#operation}}*{{moduleName}}::{{classname}}* | [**{{operationId}}**]({{apiDocPath}}{{classname}}.md#{{operationId}}) | **{{httpMethod}}** {{path}} | {{{summary}}}
{{/operation}}{{/operations}}{{/apis}}{{/apiInfo}}

## üìö Documentation for Models

{{#models}}{{#model}} - [{{moduleName}}::{{classname}}]({{modelDocPath}}{{classname}}.md)
{{/model}}{{/models}}
