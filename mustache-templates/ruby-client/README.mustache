![Voucherify Ruby SDK](./voucherify-ruby-sdk.png)

## Official [Voucherify](https://voucherify.io?utm_source=github&utm_medium=sdk&utm_campaign=acq) SDK for Ruby

[![Gem Version](https://img.shields.io/gem/v/voucherify.svg)](https://rubygems.org/gems/voucherify)
[![Gem Downloads](https://img.shields.io/gem/dt/voucherify.svg)](https://rubygems.org/gems/voucherify)
[![License](https://img.shields.io/github/license/voucherifyio/sdk-ruby-openapi-based.svg)](https://opensource.org/licenses/MIT)
[![GitHub issues](https://img.shields.io/github/issues/voucherifyio/sdk-ruby-openapi-based.svg)](https://github.com/voucherifyio/sdk-ruby-openapi-based/issues)

Voucherify empowers marketers and developers with flexible building blocks to come up with, implement, and track targeted promotional campaigns.

Learn more about Voucherify by visiting [our site](https://www.voucherify.io).

This SDK is automatically generated by the [OpenAPI Generator](https://openapi-generator.tech) based on our [Documentation](https://docs.voucherify.io/docs/introduction) with {{appVersion}} version.

The legacy version of Ruby SDK could be found [here](https://github.com/voucherifyio/voucherify-ruby-sdk)

## 📝 Documentation

You will find detailed description and example responses at our [official documentation](https://docs.voucherify.io/reference). Most method headers point to more detailed descriptions of arguments you can use.

📚 Want to learn more? Visit our [official site](https://www.voucherify.io) or our [Success Portal](https://success.voucherify.io).

👽 Having troubles? Check our [Help center](https://support.voucherify.io/).

🧪 Looking for promotion ideas? Check our [Cookbook](https://cookbook.voucherify.io/) to get an inspiration.

🐛 Encounter a bug? Please file a report in the [Issues](https://github.com/voucherifyio/sdk-ruby-openapi-based/issues).

## ⚙️ Installation

### Gem Repository

The SDK is hosted in [RubeGems](https://rubygems.org/gems/voucherify) and could be easy obtained by adding this line to Your application's Gemfile:

```ruby
gem 'voucherify'
```

And then execute:

```shell
bundle install
```

Or install it yourself as:

```shell
gem install voucherify
```

### 🚀 Running code

When You have Voucherify gem installed You could use pre-created [example.rb](./example.rb) with example code for testing purpose.

```ruby example.rb
# Load the gem
require 'VoucherifySdk'

# Setup authorization
VoucherifySdk.configure do |config|
    # Configure API key authorization: X-App-Id
    config.api_key['X-App-Id'] = 'YOUR API KEY'

    # Configure API key authorization: X-App-Token
    config.api_key['X-App-Token'] = 'YOUR API KEY'

    # (Optional) Configure Voucherify cluster, default is https://api.voucherify.io
    # config.host = 'https://us1.api.voucherify.io'
end

# Creating API Instance
api_instance = VoucherifySdk::CampaignsApi.new

# Calling list_campaigns
begin
    result = api_instance.list_campaigns()
    puts result
rescue VoucherifySdk::ApiError => e
    puts "Exception when calling VouchersApi->list_campaigns: #{e}"
end
```

Code could be run from the directory where the file is placed (root for this repository), by using:

```shell
ruby example.rb
```

Or, if You're using bundler:

```shell
bundle exec ruby example.rb
```

🛡️ This code does simple campaign list, so it won't affect Your Voucherify data.

🔒 Remember to fill Your Voucherify keys for the valid authorization.

💅 More examples and good practices You could find in the [EXAMPLES.md](./EXAMPLES.md) document.

## 🐳 Running local tests with docker

1. Copy `.env.example` to `.env` and fill in the values.
2. Run `docker build -t ruby .` to build the image.
3. Run `docker run --rm ruby` to run the tests and delete container immediately after.

## 🛠️ Contributing

Read more about how to Contribute to Voucherify Ruby SDK by visiting main repo [GENERATING-SDKS.md](https://github.com/voucherifyio/voucherify-openapi/blob/master/GENERATING-SDKS.md)

Remember that this SDK is auto generated (except of the tests) so changes made here will be overwritten by generator.

## 📅 Changelog

- **2024-10-02** - `7.0.0`
  - Fix object parsing in query. For example `filters` while listing redemptions.
  - Added support:
    - /v1/locations - List Locations
    - /v1/locations/{locationId} - Get Location
    - /v1/metadata-schemas - List Metadata Schemas
    - /v1/metadata-schemas/{resource} - Get Metadata Schema
    - /management/v1/projects/users/invite, post - Invite Users
    - /management/v1/projects/{projectId}/users, get - Get Project
    - /management/v1/projects/{projectId}/users, post - Create Project
    - /management/v1/projects/{projectId}/users/{userId}, get - Get User
    - /management/v1/projects/{projectId}/users/{userId}, put - Update User
    - /management/v1/projects/{projectId}/users/{userId}, delete - Unassign User
    - /management/v1/projects/{projectId}/metadata-schemas, post - Create Metadata Schema
    - /management/v1/projects/{projectId}/metadata-schemas, get - List Metadata Schemas
    - /management/v1/projects/{projectId}/metadata-schemas/{metadataSchemaId}, get - Get Metadata Schema
    - /management/v1/projects/{projectId}/metadata-schemas/{metadataSchemaId}, put - Update Metadata Schema
    - /management/v1/projects/{projectId}/metadata-schemas/{metadataSchemaId}, delete - Delete Metadata Schema
    - /management/v1/projects/{projectId}/custom-event-schemas, post - Create Custom Event Schema
    - /management/v1/projects/{projectId}/custom-event-schemas, get - List Custom Event Schema
    - /management/v1/projects/{projectId}/custom-event-schemas/{customEventSchemaId}, get - Get Custom Event Schema
    - /management/v1/projects/{projectId}/custom-event-schemas/{customEventSchemaId}, put - Update Custom Event Schema
    - /management/v1/projects/{projectId}/custom-event-schemas/{customEventSchemaId}, delete - Delete Custom Event Schema
    - /management/v1/projects/{projectId}/stacking-rules, post - Create Stacking Rules
    - /management/v1/projects/{projectId}/stacking-rules, get - List Stacking Rules
    - /management/v1/projects/{projectId}/stacking-rules/{stackingRulesId}, get - Get Stacking Rules
    - /management/v1/projects/{projectId}/stacking-rules/{stackingRulesId}, put - Update Stacking Rules
    - /management/v1/projects/{projectId}/stacking-rules/{stackingRulesId}, delete - Delete Stacking Rules
    - /management/v1/projects/{projectId}/webhooks, post - Create Webhook
    - /management/v1/projects/{projectId}/webhooks, get - List Webhooks
    - /management/v1/projects/{projectId}/webhooks/{webhookId}, get - Get Webhook
    - /management/v1/projects/{projectId}/webhooks/{webhookId}, put - Update Webhook
    - /management/v1/projects/{projectId}/webhooks/{webhookId}, delete - Delete Webhook
    - /management/v1/projects/{projectId}/branding, post - Create Brand
    - /management/v1/projects/{projectId}/branding, get - List Brands
    - /management/v1/projects/{projectId}/branding/{brandingId}, get - Get Brand
    - /management/v1/projects/{projectId}/branding/{brandingId}, put - Update Brand
    - /management/v1/projects/{projectId}/branding/{brandingId}, delete - Delete Brand
    - /v1/referrals/{campaignId}/members/{memberId}/holders, get - List Referral Code Holders
    - /v1/referrals/members/{memberId}/holders, get - List Referral Code Holders
    - /v1/referrals/{campaignId}/members/{memberId}/holders, post - Add Referral Code Holders
    - /v1/referrals/members/{memberId}/holders, post - Add Referral Code Holders
    - /v1/referrals/{campaignId}/members/{memberId}/holders/{holderId}, delete - Remove Referral Code Holder
    - /v1/referrals/members/{memberId}/holders/{holderId}, delete - Remove Referral Code Holder
  - !!! BREAKING CHANGES !!!
    - Pagination changed on listing card transactions - NO `page` param is supported - use `starting_after_id` instead.
    - Pagination changed on listing voucher transactions - NO `page` param is supported - use `starting_after_id` instead.
    - ApplicableToEffect - changed - `EVERY` -> `TO_EVERY`, `CHEAPEST` -> `TO_CHEAPEST`, `MOST_EXPENSIVE` -> `TO_MOST_EXPENSIVE`, 2 new values introduced.
    - `list_publications` parameter `filters` have changed - now uses `ParameterFiltersListPublications` instead of `String`
    - `ParameterFiltersListRedemptions` and `ParameterFiltersListCustomerRedeemables` have been updated
    - `lucky_draw`, `lucky_draw_code` have been deleted from everywhere and no longer supported
    - CampaignsUpdateRequestBody - properties `activity_duration_after_publishing`, `join_once`, `auto_join`, `type`, `winners_count`, `unique_winners_per_draw`, `unique_winners` have been deleted and no longer supported
    - `update_customers_consents` is deleted and no longer supported
    - `FilterConditionsDateTimeConditions` model has been renamed to `FilterConditionsDateTime`
    - FilterConditionsDateTime - `conditions` property has been divided on `after`, `before`, `has_value`, `is_unknown`, `more_than`, `less_than` properties
    ParamterFiltersListCustomerRedeemables - model name of `createdAt` has been renamed from `FilterConditionsDateTime` to `ParameterFiltersListCustomerRedeemablesCreatedAt`
    - `junction` property is deleted is no longer supported in models:
    - `ParameterFiltersListCustomerRedeemables`
    - `ParameterFiltersListRedemptions`
    - `filter` property in schemas ProductCollectionsCreateRequestBody, ProductCollectionsCreateResponseBody, ProductCollectionsItem and ProductCollectionsGetResponseBody has changed. Uses plain `object`.
- **2024-09-05** - `6.0.0` - The new version of the SKD includes coverage for all the most commonly used Voucherify endpoints and supports typed models.

*Previous versions of the SDK are no longer supported, and we highly recommend upgrading to version 6.0.0, which is now designated as Long-Term Support (LTS).*

*Changelog for previous versions could be found in the [DEPRECATED_CHANGELOG.md file](./DEPRECATED_CHANGELOG.md)*

## 🔐 Documentation for Authorization

```ruby
# Setup authorization
VoucherifySdk.configure do |config|
    # Application Keys
    config.api_key['X-App-Id'] = 'YOUR API ID'
    config.api_key['X-App-Token'] = 'YOUR API TOKEN'

    # Client-side Keys
    config.api_key['X-Client-Application-Id'] = 'YOUR CLIENT API ID'
    config.api_key['X-Client-Token'] = 'YOUR CLIENT API TOKEN'

    # Cluster (Optional)
    # default is https://api.voucherify.io
    config.host = 'https://us1.api.voucherify.io'
end
```

## 🌐 Documentation for API Endpoints

All URIs are relative to *{{basePath}}*

Class | Method | HTTP request | Description
------------ | ------------- | ------------- | -------------
{{#apiInfo}}{{#apis}}{{#operations}}{{#operation}}*{{moduleName}}::{{classname}}* | [**{{operationId}}**]({{apiDocPath}}{{classname}}.md#{{operationId}}) | **{{httpMethod}}** {{path}} | {{{summary}}}
{{/operation}}{{/operations}}{{/apis}}{{/apiInfo}}

## 📚 Documentation for Models

{{#models}}{{#model}} - [{{moduleName}}::{{classname}}]({{modelDocPath}}{{classname}}.md)
{{/model}}{{/models}}
