/**
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The LoyaltyTiersExpirationAllExpirationDateRounding model module.
 * @module model/LoyaltyTiersExpirationAllExpirationDateRounding
 * @version 3.0.0
 */
class LoyaltyTiersExpirationAllExpirationDateRounding {
    /**
     * Constructs a new <code>LoyaltyTiersExpirationAllExpirationDateRounding</code>.
     * Defines the rounding mechanism for tier expiration.
     * @alias module:model/LoyaltyTiersExpirationAllExpirationDateRounding
     */
    constructor() { 
        
        LoyaltyTiersExpirationAllExpirationDateRounding.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
        obj['unit'] = 'MONTH';
    }

    /**
     * Constructs a <code>LoyaltyTiersExpirationAllExpirationDateRounding</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LoyaltyTiersExpirationAllExpirationDateRounding} obj Optional instance to populate.
     * @returns {module:model/LoyaltyTiersExpirationAllExpirationDateRounding} The populated <code>LoyaltyTiersExpirationAllExpirationDateRounding</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LoyaltyTiersExpirationAllExpirationDateRounding();

            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('strategy')) {
                obj['strategy'] = ApiClient.convertToType(data['strategy'], 'String');
            }
            if (data.hasOwnProperty('unit')) {
                obj['unit'] = ApiClient.convertToType(data['unit'], 'String');
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LoyaltyTiersExpirationAllExpirationDateRounding</code>.
     * @param {object} data The plain JavaScript object bearing properties of interest.
     * @returns {boolean} to indicate whether the JSON data is valid with respect to <code>LoyaltyTiersExpirationAllExpirationDateRounding</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }
        // ensure the json data is a string
        if (data['strategy'] && !(typeof data['strategy'] === 'string' || data['strategy'] instanceof String)) {
            throw new Error("Expected the field `strategy` to be a primitive type in the JSON string but got " + data['strategy']);
        }
        // ensure the json data is a string
        if (data['unit'] && !(typeof data['unit'] === 'string' || data['unit'] instanceof String)) {
            throw new Error("Expected the field `unit` to be a primitive type in the JSON string but got " + data['unit']);
        }

        return true;
    }


}



/**
 * This mechanism describes a custom rounding for the expiration date.
 * @member {module:model/LoyaltyTiersExpirationAllExpirationDateRounding.TypeEnum} 
 */
LoyaltyTiersExpirationAllExpirationDateRounding.prototype['type'] = undefined;

/**
 * This mechanism describes a rounding strategy for the expiration date.
 * @member {module:model/LoyaltyTiersExpirationAllExpirationDateRounding.StrategyEnum} 
 */
LoyaltyTiersExpirationAllExpirationDateRounding.prototype['strategy'] = undefined;

/**
 * Defines the type of unit of time in which the rounding period is counted.
 * @member {module:model/LoyaltyTiersExpirationAllExpirationDateRounding.UnitEnum} 
 * @default 'MONTH'
 */
LoyaltyTiersExpirationAllExpirationDateRounding.prototype['unit'] = 'MONTH';

/**
 * Value for the unit of time that the rounding applies to. Units for this parameter are defined by the `rounding.unit` parameter.     - `0`: January - `1`: February - `2`: March - `3`: April - `4`: May - `5`: June - `6`: July - `7`: August - `8`: September - `9`: October - `10`: November - `11`: December
 * @member {Number} 
 */
LoyaltyTiersExpirationAllExpirationDateRounding.prototype['value'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
LoyaltyTiersExpirationAllExpirationDateRounding['TypeEnum'] = {

    /**
     * value: "MONTH"
     * @constant
     */
    "MONTH": "MONTH",

    /**
     * value: "QUARTER"
     * @constant
     */
    "QUARTER": "QUARTER",

    /**
     * value: "HALF_YEAR"
     * @constant
     */
    "HALF_YEAR": "HALF_YEAR",

    /**
     * value: "YEAR"
     * @constant
     */
    "YEAR": "YEAR",

    /**
     * value: "CUSTOM"
     * @constant
     */
    "CUSTOM": "CUSTOM"
};


/**
 * Allowed values for the <code>strategy</code> property.
 * @enum {String}
 * @readonly
 */
LoyaltyTiersExpirationAllExpirationDateRounding['StrategyEnum'] = {

    /**
     * value: "START"
     * @constant
     */
    "START": "START",

    /**
     * value: "END"
     * @constant
     */
    "END": "END"
};


/**
 * Allowed values for the <code>unit</code> property.
 * @enum {String}
 * @readonly
 */
LoyaltyTiersExpirationAllExpirationDateRounding['UnitEnum'] = {

    /**
     * value: "MONTH"
     * @constant
     */
    "MONTH": "MONTH"
};



export default LoyaltyTiersExpirationAllExpirationDateRounding;

